//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package math

import (
	_f "encoding/xml"
	_ef "fmt"
	_a "github.com/Casper-Mars/officeTool"
	_ea "github.com/Casper-Mars/officeTool/schema/soo/ofc/sharedTypes"
	_fa "strconv"
)

func NewCT_BorderBox() *CT_BorderBox { _cf := &CT_BorderBox{}; _cf.E = NewCT_OMathArg(); return _cf }

func (_ace *CT_GroupChr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ace.GroupChrPr != nil {
		_cgc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067r\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}}
		e.EncodeElement(_ace.GroupChrPr, _cgc)
	}
	_deae := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_ace.E, _deae)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_eea *CT_Char) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _cebe := range start.Attr {
		if _cebe.Name.Local == "\u0076\u0061\u006c" {
			_abeg, _ffa := _cebe.Value, error(nil)
			if _ffa != nil {
				return _ffa
			}
			_eea.ValAttr = _abeg
			continue
		}
	}
	for {
		_eeec, _fggd := d.Token()
		if _fggd != nil {
			return _ef.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0073", _fggd)
		}
		if _baed, _eddb := _eeec.(_f.EndElement); _eddb && _baed.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_AccPr() *CT_AccPr { _da := &CT_AccPr{}; return _da }

func NewCT_PhantPr() *CT_PhantPr { _dbfc := &CT_PhantPr{}; return _dbfc }

// ValidateWithPath validates the CT_Char and its children, prefixing error messages with path
func (_gcf *CT_Char) ValidateWithPath(path string) error { return nil }

func (_dfde *CT_EqArrPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_aaa:
	for {
		_ece, _cab := d.Token()
		if _cab != nil {
			return _cab
		}
		switch _agdg := _ece.(type) {
		case _f.StartElement:
			switch _agdg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}:
				_dfde.BaseJc = NewCT_YAlign()
				if _dgdd := d.DecodeElement(_dfde.BaseJc, &_agdg); _dgdd != nil {
					return _dgdd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006da\u0078\u0044\u0069\u0073\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006da\u0078\u0044\u0069\u0073\u0074"}:
				_dfde.MaxDist = NewCT_OnOff()
				if _cbg := d.DecodeElement(_dfde.MaxDist, &_agdg); _cbg != nil {
					return _cbg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006fb\u006a\u0044\u0069\u0073\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006fb\u006a\u0044\u0069\u0073\u0074"}:
				_dfde.ObjDist = NewCT_OnOff()
				if _bab := d.DecodeElement(_dfde.ObjDist, &_agdg); _bab != nil {
					return _bab
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}:
				_dfde.RSpRule = NewCT_SpacingRule()
				if _ecb := d.DecodeElement(_dfde.RSpRule, &_agdg); _ecb != nil {
					return _ecb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0053\u0070"}:
				_dfde.RSp = NewCT_UnSignedInteger()
				if _aadc := d.DecodeElement(_dfde.RSp, &_agdg); _aadc != nil {
					return _aadc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_dfde.CtrlPr = NewCT_CtrlPr()
				if _ccgf := d.DecodeElement(_dfde.CtrlPr, &_agdg); _ccgf != nil {
					return _ccgf
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fE\u0071\u0041\u0072\u0072\u0050\u0072\u0020\u0025\u0076", _agdg.Name)
				if _bfee := d.Skip(); _bfee != nil {
					return _bfee
				}
			}
		case _f.EndElement:
			break _aaa
		case _f.CharData:
		}
	}
	return nil
}

func (_ececd ST_Style) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_cafb := _f.Attr{}
	_cafb.Name = name
	switch _ececd {
	case ST_StyleUnset:
		_cafb.Value = ""
	case ST_StyleP:
		_cafb.Value = "\u0070"
	case ST_StyleB:
		_cafb.Value = "\u0062"
	case ST_StyleI:
		_cafb.Value = "\u0069"
	case ST_StyleBi:
		_cafb.Value = "\u0062\u0069"
	}
	return _cafb, nil
}

// Validate validates the CT_GroupChrPr and its children
func (_fabe *CT_GroupChrPr) Validate() error {
	return _fabe.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072")
}

func NewCT_CtrlPr() *CT_CtrlPr { _fdga := &CT_CtrlPr{}; return _fdga }

func NewCT_RChoice() *CT_RChoice { _bdbc := &CT_RChoice{}; return _bdbc }

type CT_SpacingRule struct{ ValAttr int64 }

func NewCT_OMathJc() *CT_OMathJc { _abag := &CT_OMathJc{}; return _abag }

func (_faae ST_LimLoc) ValidateWithPath(path string) error {
	switch _faae {
	case 0, 1, 2:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faae))
	}
	return nil
}

// ValidateWithPath validates the CT_R and its children, prefixing error messages with path
func (_ecgb *CT_R) ValidateWithPath(path string) error {
	if _ecgb.RPr != nil {
		if _cgee := _ecgb.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _cgee != nil {
			return _cgee
		}
	}
	for _aag, _gaca := range _ecgb.Choice {
		if _gdgf := _gaca.ValidateWithPath(_ef.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _aag)); _gdgf != nil {
			return _gdgf
		}
	}
	return nil
}

func (_bcd *CT_BorderBox) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bcd.BorderBoxPr != nil {
		_cfc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}}
		e.EncodeElement(_bcd.BorderBoxPr, _cfc)
	}
	_de := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_bcd.E, _de)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupChrPr and its children, prefixing error messages with path
func (_dbebe *CT_GroupChrPr) ValidateWithPath(path string) error {
	if _dbebe.Chr != nil {
		if _dbbd := _dbebe.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _dbbd != nil {
			return _dbbd
		}
	}
	if _dbebe.Pos != nil {
		if _acgd := _dbebe.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _acgd != nil {
			return _acgd
		}
	}
	if _dbebe.VertJc != nil {
		if _efa := _dbebe.VertJc.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u004a\u0063"); _efa != nil {
			return _efa
		}
	}
	if _dbebe.CtrlPr != nil {
		if _effe := _dbebe.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _effe != nil {
			return _effe
		}
	}
	return nil
}

func (_gfdd *CT_MPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gfdd.BaseJc != nil {
		_cegc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0061\u0073\u0065\u004a\u0063"}}
		e.EncodeElement(_gfdd.BaseJc, _cegc)
	}
	if _gfdd.PlcHide != nil {
		_gbged := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u006c\u0063\u0048\u0069\u0064e"}}
		e.EncodeElement(_gfdd.PlcHide, _gbged)
	}
	if _gfdd.RSpRule != nil {
		_egfe := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u0053\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_gfdd.RSpRule, _egfe)
	}
	if _gfdd.CGpRule != nil {
		_cgcdb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0063\u0047\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_gfdd.CGpRule, _cgcdb)
	}
	if _gfdd.RSp != nil {
		_dgab := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072S\u0070"}}
		e.EncodeElement(_gfdd.RSp, _dgab)
	}
	if _gfdd.CSp != nil {
		_gbedb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063S\u0070"}}
		e.EncodeElement(_gfdd.CSp, _gbedb)
	}
	if _gfdd.CGp != nil {
		_fgbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063G\u0070"}}
		e.EncodeElement(_gfdd.CGp, _fgbg)
	}
	if _gfdd.Mcs != nil {
		_cegd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006dc\u0073"}}
		e.EncodeElement(_gfdd.Mcs, _cegd)
	}
	if _gfdd.CtrlPr != nil {
		_caaba := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_gfdd.CtrlPr, _caaba)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FPr and its children, prefixing error messages with path
func (_bff *CT_FPr) ValidateWithPath(path string) error {
	if _bff.Type != nil {
		if _caab := _bff.Type.ValidateWithPath(path + "\u002f\u0054\u0079p\u0065"); _caab != nil {
			return _caab
		}
	}
	if _bff.CtrlPr != nil {
		if _cfbb := _bff.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _cfbb != nil {
			return _cfbb
		}
	}
	return nil
}

func (_edd *CT_BreakBin) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _eaeb := range start.Attr {
		if _eaeb.Name.Local == "\u0076\u0061\u006c" {
			_edd.ValAttr.UnmarshalXMLAttr(_eaeb)
			continue
		}
	}
	for {
		_bdb, _fef := d.Token()
		if _fef != nil {
			return _ef.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e\u003a\u0020\u0025\u0073", _fef)
		}
		if _agf, _dad := _bdb.(_f.EndElement); _dad && _agf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_OMath struct{ EG_OMathMathElements []*EG_OMathMathElements }

// Validate validates the CT_Rad and its children
func (_aaega *CT_Rad) Validate() error {
	return _aaega.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0064")
}

// Validate validates the CT_OMathArg and its children
func (_eddbea *CT_OMathArg) Validate() error {
	return _eddbea.ValidateWithPath("C\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067")
}

func NewCT_LimUpp() *CT_LimUpp {
	_fbg := &CT_LimUpp{}
	_fbg.E = NewCT_OMathArg()
	_fbg.Lim = NewCT_OMathArg()
	return _fbg
}

func NewCT_RadPr() *CT_RadPr { _gab := &CT_RadPr{}; return _gab }

func (_afdc *CT_BreakBinSub) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _dbe := range start.Attr {
		if _dbe.Name.Local == "\u0076\u0061\u006c" {
			_afdc.ValAttr.UnmarshalXMLAttr(_dbe)
			continue
		}
	}
	for {
		_cge, _gfc := d.Token()
		if _gfc != nil {
			return _ef.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b\u0042\u0069\u006e\u0053\u0075\u0062:\u0020\u0025\u0073", _gfc)
		}
		if _agg, _bdf := _cge.(_f.EndElement); _bdf && _agg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cgdg *CT_OMathPara) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ddef:
	for {
		_cbgd, _bfaf := d.Token()
		if _bfaf != nil {
			return _bfaf
		}
		switch _fbfea := _cbgd.(type) {
		case _f.StartElement:
			switch _fbfea.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}:
				_cgdg.OMathParaPr = NewCT_OMathParaPr()
				if _fgdb := d.DecodeElement(_cgdg.OMathParaPr, &_fbfea); _fgdb != nil {
					return _fgdb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}:
				_cced := NewCT_OMath()
				if _adea := d.DecodeElement(_cced, &_fbfea); _adea != nil {
					return _adea
				}
				_cgdg.OMath = append(_cgdg.OMath, _cced)
			default:
				_a.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u004d\u0061t\u0068\u0050\u0061\u0072\u0061\u0020\u0025\u0076", _fbfea.Name)
				if _abfa := d.Skip(); _abfa != nil {
					return _abfa
				}
			}
		case _f.EndElement:
			break _ddef
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OMathJc and its children, prefixing error messages with path
func (_befff *CT_OMathJc) ValidateWithPath(path string) error {
	if _caabe := _befff.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _caabe != nil {
		return _caabe
	}
	return nil
}

func (_dfg *CT_LimLowPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_geeg:
	for {
		_ddgfg, _cbee := d.Token()
		if _cbee != nil {
			return _cbee
		}
		switch _bcec := _ddgfg.(type) {
		case _f.StartElement:
			switch _bcec.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_dfg.CtrlPr = NewCT_CtrlPr()
				if _cdc := d.DecodeElement(_dfg.CtrlPr, &_bcec); _cdc != nil {
					return _cdc
				}
			default:
				_a.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072\u0020\u0025\u0076", _bcec.Name)
				if _ffgd := d.Skip(); _ffgd != nil {
					return _ffgd
				}
			}
		case _f.EndElement:
			break _geeg
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Box and its children
func (_ffce *CT_Box) Validate() error {
	return _ffce.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0078")
}

// Validate validates the CT_OMathArgPr and its children
func (_dedf *CT_OMathArgPr) Validate() error {
	return _dedf.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072")
}

func (_dcef *CT_String) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ggfdd := range start.Attr {
		if _ggfdd.Name.Local == "\u0076\u0061\u006c" {
			_eeae, _abgf := _ggfdd.Value, error(nil)
			if _abgf != nil {
				return _abgf
			}
			_dcef.ValAttr = &_eeae
			continue
		}
	}
	for {
		_ebgf, _cadc := d.Token()
		if _cadc != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0074\u0072i\u006e\u0067\u003a\u0020\u0025\u0073", _cadc)
		}
		if _eed, _ecdae := _ebgf.(_f.EndElement); _ecdae && _eed.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Nary() *CT_Nary {
	_aadb := &CT_Nary{}
	_aadb.Sub = NewCT_OMathArg()
	_aadb.Sup = NewCT_OMathArg()
	_aadb.E = NewCT_OMathArg()
	return _aadb
}

// ValidateWithPath validates the CT_GroupChr and its children, prefixing error messages with path
func (_efcfd *CT_GroupChr) ValidateWithPath(path string) error {
	if _efcfd.GroupChrPr != nil {
		if _aebdd := _efcfd.GroupChrPr.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"); _aebdd != nil {
			return _aebdd
		}
	}
	if _dfbd := _efcfd.E.ValidateWithPath(path + "\u002f\u0045"); _dfbd != nil {
		return _dfbd
	}
	return nil
}

type CT_TwipsMeasure struct{ ValAttr _ea.ST_TwipsMeasure }

// ValidateWithPath validates the CT_LimUpp and its children, prefixing error messages with path
func (_becfe *CT_LimUpp) ValidateWithPath(path string) error {
	if _becfe.LimUppPr != nil {
		if _dcbb := _becfe.LimUppPr.ValidateWithPath(path + "\u002fL\u0069\u006d\u0055\u0070\u0070\u0050r"); _dcbb != nil {
			return _dcbb
		}
	}
	if _bcg := _becfe.E.ValidateWithPath(path + "\u002f\u0045"); _bcg != nil {
		return _bcg
	}
	if _beg := _becfe.Lim.ValidateWithPath(path + "\u002f\u004c\u0069\u006d"); _beg != nil {
		return _beg
	}
	return nil
}

type CT_ManualBreak struct{ AlnAtAttr *int64 }

type CT_BreakBinSub struct{ ValAttr ST_BreakBinSub }

func (_ead *CT_Box) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ead.BoxPr != nil {
		_abf := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0062\u006f\u0078\u0050\u0072"}}
		e.EncodeElement(_ead.BoxPr, _abf)
	}
	_faf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_ead.E, _faf)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_accb *CT_OMath) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_eegc:
	for {
		_ggda, _adbb := d.Token()
		if _adbb != nil {
			return _adbb
		}
		switch _bcfd := _ggda.(type) {
		case _f.StartElement:
			switch _bcfd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_ega := NewEG_OMathMathElements()
				_ega.Acc = NewCT_Acc()
				if _fggde := d.DecodeElement(_ega.Acc, &_bcfd); _fggde != nil {
					return _fggde
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _ega)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_bdaa := NewEG_OMathMathElements()
				_bdaa.Bar = NewCT_Bar()
				if _adbd := d.DecodeElement(_bdaa.Bar, &_bcfd); _adbd != nil {
					return _adbd
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _bdaa)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_bcag := NewEG_OMathMathElements()
				_bcag.Box = NewCT_Box()
				if _aaff := d.DecodeElement(_bcag.Box, &_bcfd); _aaff != nil {
					return _aaff
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _bcag)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_aecg := NewEG_OMathMathElements()
				_aecg.BorderBox = NewCT_BorderBox()
				if _fege := d.DecodeElement(_aecg.BorderBox, &_bcfd); _fege != nil {
					return _fege
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _aecg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_dcbc := NewEG_OMathMathElements()
				_dcbc.D = NewCT_D()
				if _gceg := d.DecodeElement(_dcbc.D, &_bcfd); _gceg != nil {
					return _gceg
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _dcbc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_cece := NewEG_OMathMathElements()
				_cece.EqArr = NewCT_EqArr()
				if _ebcc := d.DecodeElement(_cece.EqArr, &_bcfd); _ebcc != nil {
					return _ebcc
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _cece)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_abgae := NewEG_OMathMathElements()
				_abgae.F = NewCT_F()
				if _dfda := d.DecodeElement(_abgae.F, &_bcfd); _dfda != nil {
					return _dfda
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _abgae)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_deda := NewEG_OMathMathElements()
				_deda.Func = NewCT_Func()
				if _eade := d.DecodeElement(_deda.Func, &_bcfd); _eade != nil {
					return _eade
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _deda)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_ebdb := NewEG_OMathMathElements()
				_ebdb.GroupChr = NewCT_GroupChr()
				if _aebc := d.DecodeElement(_ebdb.GroupChr, &_bcfd); _aebc != nil {
					return _aebc
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _ebdb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_cfdb := NewEG_OMathMathElements()
				_cfdb.LimLow = NewCT_LimLow()
				if _dgcc := d.DecodeElement(_cfdb.LimLow, &_bcfd); _dgcc != nil {
					return _dgcc
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _cfdb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_cfdf := NewEG_OMathMathElements()
				_cfdf.LimUpp = NewCT_LimUpp()
				if _def := d.DecodeElement(_cfdf.LimUpp, &_bcfd); _def != nil {
					return _def
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _cfdf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_dff := NewEG_OMathMathElements()
				_dff.M = NewCT_M()
				if _fbeg := d.DecodeElement(_dff.M, &_bcfd); _fbeg != nil {
					return _fbeg
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _dff)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_ecab := NewEG_OMathMathElements()
				_ecab.Nary = NewCT_Nary()
				if _aacb := d.DecodeElement(_ecab.Nary, &_bcfd); _aacb != nil {
					return _aacb
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _ecab)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_afc := NewEG_OMathMathElements()
				_afc.Phant = NewCT_Phant()
				if _bcbdb := d.DecodeElement(_afc.Phant, &_bcfd); _bcbdb != nil {
					return _bcbdb
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _afc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_edbe := NewEG_OMathMathElements()
				_edbe.Rad = NewCT_Rad()
				if _fccg := d.DecodeElement(_edbe.Rad, &_bcfd); _fccg != nil {
					return _fccg
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _edbe)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_dgda := NewEG_OMathMathElements()
				_dgda.SPre = NewCT_SPre()
				if _dgaf := d.DecodeElement(_dgda.SPre, &_bcfd); _dgaf != nil {
					return _dgaf
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _dgda)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_gcdc := NewEG_OMathMathElements()
				_gcdc.SSub = NewCT_SSub()
				if _ddad := d.DecodeElement(_gcdc.SSub, &_bcfd); _ddad != nil {
					return _ddad
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _gcdc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_fcbg := NewEG_OMathMathElements()
				_fcbg.SSubSup = NewCT_SSubSup()
				if _ecddb := d.DecodeElement(_fcbg.SSubSup, &_bcfd); _ecddb != nil {
					return _ecddb
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _fcbg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_cebd := NewEG_OMathMathElements()
				_cebd.SSup = NewCT_SSup()
				if _gfba := d.DecodeElement(_cebd.SSup, &_bcfd); _gfba != nil {
					return _gfba
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _cebd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_efeb := NewEG_OMathMathElements()
				_efeb.R = NewCT_R()
				if _eccbd := d.DecodeElement(_efeb.R, &_bcfd); _eccbd != nil {
					return _eccbd
				}
				_accb.EG_OMathMathElements = append(_accb.EG_OMathMathElements, _efeb)
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0020\u0025\u0076", _bcfd.Name)
				if _dgf := d.Skip(); _dgf != nil {
					return _dgf
				}
			}
		case _f.EndElement:
			break _eegc
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RPRChoice and its children, prefixing error messages with path
func (_eabec *CT_RPRChoice) ValidateWithPath(path string) error {
	if _eabec.Nor != nil {
		if _gbad := _eabec.Nor.ValidateWithPath(path + "\u002f\u004e\u006f\u0072"); _gbad != nil {
			return _gbad
		}
	}
	return nil
}

func (_gdgd *CT_CtrlPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Box and its children, prefixing error messages with path
func (_fgb *CT_Box) ValidateWithPath(path string) error {
	if _fgb.BoxPr != nil {
		if _ddgf := _fgb.BoxPr.ValidateWithPath(path + "\u002f\u0042\u006f\u0078\u0050\u0072"); _ddgf != nil {
			return _ddgf
		}
	}
	if _eaab := _fgb.E.ValidateWithPath(path + "\u002f\u0045"); _eaab != nil {
		return _eaab
	}
	return nil
}

// ValidateWithPath validates the CT_SPrePr and its children, prefixing error messages with path
func (_aecf *CT_SPrePr) ValidateWithPath(path string) error {
	if _aecf.CtrlPr != nil {
		if _gdbfc := _aecf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gdbfc != nil {
			return _gdbfc
		}
	}
	return nil
}

type MathPr struct{ CT_MathPr }

func NewCT_M() *CT_M { _bga := &CT_M{}; return _bga }

func (_gbfef *ST_LimLoc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cfda, _abgab := d.Token()
	if _abgab != nil {
		return _abgab
	}
	if _dfdg, _ffdd := _cfda.(_f.EndElement); _ffdd && _dfdg.Name == start.Name {
		*_gbfef = 1
		return nil
	}
	if _cceg, _bccb := _cfda.(_f.CharData); !_bccb {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfda)
	} else {
		switch string(_cceg) {
		case "":
			*_gbfef = 0
		case "\u0075\u006e\u0064\u004f\u0076\u0072":
			*_gbfef = 1
		case "\u0073\u0075\u0062\u0053\u0075\u0070":
			*_gbfef = 2
		}
	}
	_cfda, _abgab = d.Token()
	if _abgab != nil {
		return _abgab
	}
	if _ggecg, _gcac := _cfda.(_f.EndElement); _gcac && _ggecg.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfda)
}

func (_baebb *CT_MathPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gcfb:
	for {
		_deba, _ggdc := d.Token()
		if _ggdc != nil {
			return _ggdc
		}
		switch _fbae := _deba.(type) {
		case _f.StartElement:
			switch _fbae.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}:
				_baebb.MathFont = NewCT_String()
				if _dccag := d.DecodeElement(_baebb.MathFont, &_fbae); _dccag != nil {
					return _dccag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}:
				_baebb.BrkBin = NewCT_BreakBin()
				if _gged := d.DecodeElement(_baebb.BrkBin, &_fbae); _gged != nil {
					return _gged
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}:
				_baebb.BrkBinSub = NewCT_BreakBinSub()
				if _dgabf := d.DecodeElement(_baebb.BrkBinSub, &_fbae); _dgabf != nil {
					return _dgabf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}:
				_baebb.SmallFrac = NewCT_OnOff()
				if _ebgg := d.DecodeElement(_baebb.SmallFrac, &_fbae); _ebgg != nil {
					return _ebgg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}:
				_baebb.DispDef = NewCT_OnOff()
				if _bbca := d.DecodeElement(_baebb.DispDef, &_fbae); _bbca != nil {
					return _bbca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}:
				_baebb.LMargin = NewCT_TwipsMeasure()
				if _cafe := d.DecodeElement(_baebb.LMargin, &_fbae); _cafe != nil {
					return _cafe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}:
				_baebb.RMargin = NewCT_TwipsMeasure()
				if _cfd := d.DecodeElement(_baebb.RMargin, &_fbae); _cfd != nil {
					return _cfd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}:
				_baebb.DefJc = NewCT_OMathJc()
				if _bdggg := d.DecodeElement(_baebb.DefJc, &_fbae); _bdggg != nil {
					return _bdggg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}:
				_baebb.PreSp = NewCT_TwipsMeasure()
				if _dccac := d.DecodeElement(_baebb.PreSp, &_fbae); _dccac != nil {
					return _dccac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}:
				_baebb.PostSp = NewCT_TwipsMeasure()
				if _cafa := d.DecodeElement(_baebb.PostSp, &_fbae); _cafa != nil {
					return _cafa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}:
				_baebb.InterSp = NewCT_TwipsMeasure()
				if _cgeg := d.DecodeElement(_baebb.InterSp, &_fbae); _cgeg != nil {
					return _cgeg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}:
				_baebb.IntraSp = NewCT_TwipsMeasure()
				if _dafcc := d.DecodeElement(_baebb.IntraSp, &_fbae); _dafcc != nil {
					return _dafcc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_baebb.Choice = NewCT_MathPrChoice()
				if _efcc := d.DecodeElement(&_baebb.Choice.WrapIndent, &_fbae); _efcc != nil {
					return _efcc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_baebb.Choice = NewCT_MathPrChoice()
				if _ecec := d.DecodeElement(&_baebb.Choice.WrapRight, &_fbae); _ecec != nil {
					return _ecec
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}:
				_baebb.IntLim = NewCT_LimLoc()
				if _aefd := d.DecodeElement(_baebb.IntLim, &_fbae); _aefd != nil {
					return _aefd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}:
				_baebb.NaryLim = NewCT_LimLoc()
				if _aga := d.DecodeElement(_baebb.NaryLim, &_fbae); _aga != nil {
					return _aga
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0074h\u0050\u0072 \u0025\u0076", _fbae.Name)
				if _dgaa := d.Skip(); _dgaa != nil {
					return _dgaa
				}
			}
		case _f.EndElement:
			break _gcfb
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MPr and its children, prefixing error messages with path
func (_bef *CT_MPr) ValidateWithPath(path string) error {
	if _bef.BaseJc != nil {
		if _acdb := _bef.BaseJc.ValidateWithPath(path + "\u002fB\u0061\u0073\u0065\u004a\u0063"); _acdb != nil {
			return _acdb
		}
	}
	if _bef.PlcHide != nil {
		if _ageb := _bef.PlcHide.ValidateWithPath(path + "\u002f\u0050\u006c\u0063\u0048\u0069\u0064\u0065"); _ageb != nil {
			return _ageb
		}
	}
	if _bef.RSpRule != nil {
		if _egb := _bef.RSpRule.ValidateWithPath(path + "\u002f\u0052\u0053\u0070\u0052\u0075\u006c\u0065"); _egb != nil {
			return _egb
		}
	}
	if _bef.CGpRule != nil {
		if _cddd := _bef.CGpRule.ValidateWithPath(path + "\u002f\u0043\u0047\u0070\u0052\u0075\u006c\u0065"); _cddd != nil {
			return _cddd
		}
	}
	if _bef.RSp != nil {
		if _fcgd := _bef.RSp.ValidateWithPath(path + "\u002f\u0052\u0053\u0070"); _fcgd != nil {
			return _fcgd
		}
	}
	if _bef.CSp != nil {
		if _gdedb := _bef.CSp.ValidateWithPath(path + "\u002f\u0043\u0053\u0070"); _gdedb != nil {
			return _gdedb
		}
	}
	if _bef.CGp != nil {
		if _dafcd := _bef.CGp.ValidateWithPath(path + "\u002f\u0043\u0047\u0070"); _dafcd != nil {
			return _dafcd
		}
	}
	if _bef.Mcs != nil {
		if _gba := _bef.Mcs.ValidateWithPath(path + "\u002f\u004d\u0063\u0073"); _gba != nil {
			return _gba
		}
	}
	if _bef.CtrlPr != nil {
		if _bdcdd := _bef.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bdcdd != nil {
			return _bdcdd
		}
	}
	return nil
}

func (_agfa *CT_Func) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_agfa.FName = NewCT_OMathArg()
	_agfa.E = NewCT_OMathArg()
_eaea:
	for {
		_fcd, _dbf := d.Token()
		if _dbf != nil {
			return _dbf
		}
		switch _debf := _fcd.(type) {
		case _f.StartElement:
			switch _debf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063\u0050\u0072"}:
				_agfa.FuncPr = NewCT_FuncPr()
				if _cfe := d.DecodeElement(_agfa.FuncPr, &_debf); _cfe != nil {
					return _cfe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u004e\u0061m\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u004e\u0061m\u0065"}:
				if _becf := d.DecodeElement(_agfa.FName, &_debf); _becf != nil {
					return _becf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _ffcee := d.DecodeElement(_agfa.E, &_debf); _ffcee != nil {
					return _ffcee
				}
			default:
				_a.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u006e\u0063\u0020\u0025\u0076", _debf.Name)
				if _eggf := d.Skip(); _eggf != nil {
					return _eggf
				}
			}
		case _f.EndElement:
			break _eaea
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EqArr and its children, prefixing error messages with path
func (_cfg *CT_EqArr) ValidateWithPath(path string) error {
	if _cfg.EqArrPr != nil {
		if _gbf := _cfg.EqArrPr.ValidateWithPath(path + "\u002f\u0045\u0071\u0041\u0072\u0072\u0050\u0072"); _gbf != nil {
			return _gbf
		}
	}
	for _adg, _acgb := range _cfg.E {
		if _dcc := _acgb.ValidateWithPath(_ef.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _adg)); _dcc != nil {
			return _dcc
		}
	}
	return nil
}

func (_cgcfd ST_Script) String() string {
	switch _cgcfd {
	case 0:
		return ""
	case 1:
		return "\u0072\u006f\u006da\u006e"
	case 2:
		return "\u0073\u0063\u0072\u0069\u0070\u0074"
	case 3:
		return "\u0066r\u0061\u006b\u0074\u0075\u0072"
	case 4:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b"
	case 5:
		return "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066"
	case 6:
		return "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e"
	}
	return ""
}

func (_dfage ST_Jc) String() string {
	switch _dfage {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0072\u0069\u0067h\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	}
	return ""
}

// ValidateWithPath validates the CT_Bar and its children, prefixing error messages with path
func (_ca *CT_Bar) ValidateWithPath(path string) error {
	if _ca.BarPr != nil {
		if _fe := _ca.BarPr.ValidateWithPath(path + "\u002f\u0042\u0061\u0072\u0050\u0072"); _fe != nil {
			return _fe
		}
	}
	if _bfe := _ca.E.ValidateWithPath(path + "\u002f\u0045"); _bfe != nil {
		return _bfe
	}
	return nil
}

// ValidateWithPath validates the CT_BorderBoxPr and its children, prefixing error messages with path
func (_abb *CT_BorderBoxPr) ValidateWithPath(path string) error {
	if _abb.HideTop != nil {
		if _dcd := _abb.HideTop.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0054\u006f\u0070"); _dcd != nil {
			return _dcd
		}
	}
	if _abb.HideBot != nil {
		if _cec := _abb.HideBot.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0042\u006f\u0074"); _cec != nil {
			return _cec
		}
	}
	if _abb.HideLeft != nil {
		if _gagd := _abb.HideLeft.ValidateWithPath(path + "\u002fH\u0069\u0064\u0065\u004c\u0065\u0066t"); _gagd != nil {
			return _gagd
		}
	}
	if _abb.HideRight != nil {
		if _caf := _abb.HideRight.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0052\u0069\u0067\u0068\u0074"); _caf != nil {
			return _caf
		}
	}
	if _abb.StrikeH != nil {
		if _fbb := _abb.StrikeH.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u0048"); _fbb != nil {
			return _fbb
		}
	}
	if _abb.StrikeV != nil {
		if _dgb := _abb.StrikeV.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u0056"); _dgb != nil {
			return _dgb
		}
	}
	if _abb.StrikeBLTR != nil {
		if _dcb := _abb.StrikeBLTR.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"); _dcb != nil {
			return _dcb
		}
	}
	if _abb.StrikeTLBR != nil {
		if _eae := _abb.StrikeTLBR.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"); _eae != nil {
			return _eae
		}
	}
	if _abb.CtrlPr != nil {
		if _feg := _abb.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _feg != nil {
			return _feg
		}
	}
	return nil
}

func (_bacd *CT_OMathJc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bacd.ValAttr != ST_JcUnset {
		_afgg, _adac := _bacd.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _adac != nil {
			return _adac
		}
		start.Attr = append(start.Attr, _afgg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

const (
	ST_StyleUnset ST_Style = 0
	ST_StyleP     ST_Style = 1
	ST_StyleB     ST_Style = 2
	ST_StyleI     ST_Style = 3
	ST_StyleBi    ST_Style = 4
)

func NewCT_SSub() *CT_SSub {
	_efb := &CT_SSub{}
	_efb.E = NewCT_OMathArg()
	_efb.Sub = NewCT_OMathArg()
	return _efb
}

type CT_FuncPr struct{ CtrlPr *CT_CtrlPr }

func (_gdba *CT_Style) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _gdba.ValAttr != ST_StyleUnset {
		_deff, _gafa := _gdba.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _gafa != nil {
			return _gafa
		}
		start.Attr = append(start.Attr, _deff)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_agba *CT_SSubSup) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_agba.E = NewCT_OMathArg()
	_agba.Sub = NewCT_OMathArg()
	_agba.Sup = NewCT_OMathArg()
_acgbc:
	for {
		_dbbc, _fdeb := d.Token()
		if _fdeb != nil {
			return _fdeb
		}
		switch _agebfd := _dbbc.(type) {
		case _f.StartElement:
			switch _agebfd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070\u0050r"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070\u0050r"}:
				_agba.SSubSupPr = NewCT_SSubSupPr()
				if _cbfb := d.DecodeElement(_agba.SSubSupPr, &_agebfd); _cbfb != nil {
					return _cbfb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _agfgf := d.DecodeElement(_agba.E, &_agebfd); _agfgf != nil {
					return _agfgf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _fgff := d.DecodeElement(_agba.Sub, &_agebfd); _fgff != nil {
					return _fgff
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _fcbbe := d.DecodeElement(_agba.Sup, &_agebfd); _fcbbe != nil {
					return _fcbbe
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0020\u0025\u0076", _agebfd.Name)
				if _fbfd := d.Skip(); _fbfd != nil {
					return _fbfd
				}
			}
		case _f.EndElement:
			break _acgbc
		case _f.CharData:
		}
	}
	return nil
}

type CT_R struct {
	RPr    *CT_RPR
	Choice []*CT_RChoice
}

type CT_OMathArg struct {
	ArgPr                *CT_OMathArgPr
	EG_OMathMathElements []*EG_OMathMathElements
	CtrlPr               *CT_CtrlPr
}

type CT_LimUppPr struct{ CtrlPr *CT_CtrlPr }

type CT_BoxPr struct {
	OpEmu   *CT_OnOff
	NoBreak *CT_OnOff
	Diff    *CT_OnOff
	Brk     *CT_ManualBreak
	Aln     *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

func (_bac *CT_NaryPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_edce:
	for {
		_gcc, _ddbg := d.Token()
		if _ddbg != nil {
			return _ddbg
		}
		switch _fadc := _gcc.(type) {
		case _f.StartElement:
			switch _fadc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_bac.Chr = NewCT_Char()
				if _fcbbc := d.DecodeElement(_bac.Chr, &_fadc); _fcbbc != nil {
					return _fcbbc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0063"}:
				_bac.LimLoc = NewCT_LimLoc()
				if _bfbfg := d.DecodeElement(_bac.LimLoc, &_fadc); _bfbfg != nil {
					return _bfbfg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}:
				_bac.Grow = NewCT_OnOff()
				if _ddfb := d.DecodeElement(_bac.Grow, &_fadc); _ddfb != nil {
					return _ddfb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073u\u0062\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073u\u0062\u0048\u0069\u0064\u0065"}:
				_bac.SubHide = NewCT_OnOff()
				if _fggaa := d.DecodeElement(_bac.SubHide, &_fadc); _fggaa != nil {
					return _fggaa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073u\u0070\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073u\u0070\u0048\u0069\u0064\u0065"}:
				_bac.SupHide = NewCT_OnOff()
				if _afbe := d.DecodeElement(_bac.SupHide, &_fadc); _afbe != nil {
					return _afbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_bac.CtrlPr = NewCT_CtrlPr()
				if _ecce := d.DecodeElement(_bac.CtrlPr, &_fadc); _ecce != nil {
					return _ecce
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0061\u0072y\u0050\u0072 \u0025\u0076", _fadc.Name)
				if _agcf := d.Skip(); _agcf != nil {
					return _agcf
				}
			}
		case _f.EndElement:
			break _edce
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_Bar() *CT_Bar { _gef := &CT_Bar{}; _gef.E = NewCT_OMathArg(); return _gef }

func (_gfcc *CT_D) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gfcc.DPr != nil {
		_bdcd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064P\u0072"}}
		e.EncodeElement(_gfcc.DPr, _bdcd)
	}
	_ffg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	for _, _fgbb := range _gfcc.E {
		e.EncodeElement(_fgbb, _ffg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_bada *CT_NaryPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bada.Chr != nil {
		_dgbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_bada.Chr, _dgbg)
	}
	if _bada.LimLoc != nil {
		_bged := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0063"}}
		e.EncodeElement(_bada.LimLoc, _bged)
	}
	if _bada.Grow != nil {
		_cfaab := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0077"}}
		e.EncodeElement(_bada.Grow, _cfaab)
	}
	if _bada.SubHide != nil {
		_fdcd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0075\u0062\u0048\u0069\u0064e"}}
		e.EncodeElement(_bada.SubHide, _fdcd)
	}
	if _bada.SupHide != nil {
		_gefd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0075\u0070\u0048\u0069\u0064e"}}
		e.EncodeElement(_bada.SupHide, _gefd)
	}
	if _bada.CtrlPr != nil {
		_afed := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bada.CtrlPr, _afed)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_LimLowPr() *CT_LimLowPr { _aeged := &CT_LimLowPr{}; return _aeged }

// Validate validates the CT_SSupPr and its children
func (_cacd *CT_SSupPr) Validate() error {
	return _cacd.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0070\u0050r")
}

func (_gdff *CT_FType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_geac, _adc := _gdff.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _adc != nil {
		return _adc
	}
	start.Attr = append(start.Attr, _geac)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dfgc *CT_ManualBreak) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _agebf := range start.Attr {
		if _agebf.Name.Local == "\u0061\u006c\u006eA\u0074" {
			_fdge, _ecea := _fa.ParseInt(_agebf.Value, 10, 64)
			if _ecea != nil {
				return _ecea
			}
			_dfgc.AlnAtAttr = &_fdge
			continue
		}
	}
	for {
		_dbab, _fdeg := d.Token()
		if _fdeg != nil {
			return _ef.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fM\u0061\u006e\u0075\u0061\u006c\u0042\u0072\u0065\u0061\u006b:\u0020\u0025\u0073", _fdeg)
		}
		if _bfcf, _eabf := _dbab.(_f.EndElement); _eabf && _bfcf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TopBot struct{ ValAttr ST_TopBot }

// ValidateWithPath validates the CT_LimUppPr and its children, prefixing error messages with path
func (_ecbe *CT_LimUppPr) ValidateWithPath(path string) error {
	if _ecbe.CtrlPr != nil {
		if _ccgb := _ecbe.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _ccgb != nil {
			return _ccgb
		}
	}
	return nil
}

func (_cef *CT_LimLow) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cef.LimLowPr != nil {
		_dcca := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_cef.LimLowPr, _dcca)
	}
	_gdag := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_cef.E, _gdag)
	_cdb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006ci\u006d"}}
	e.EncodeElement(_cef.Lim, _cdb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_D and its children, prefixing error messages with path
func (_dade *CT_D) ValidateWithPath(path string) error {
	if _dade.DPr != nil {
		if _gga := _dade.DPr.ValidateWithPath(path + "\u002f\u0044\u0050\u0072"); _gga != nil {
			return _gga
		}
	}
	for _ade, _fadg := range _dade.E {
		if _agc := _fadg.ValidateWithPath(_ef.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _ade)); _agc != nil {
			return _agc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhantPr and its children, prefixing error messages with path
func (_fgac *CT_PhantPr) ValidateWithPath(path string) error {
	if _fgac.Show != nil {
		if _cbcg := _fgac.Show.ValidateWithPath(path + "\u002f\u0053\u0068o\u0077"); _cbcg != nil {
			return _cbcg
		}
	}
	if _fgac.ZeroWid != nil {
		if _fcde := _fgac.ZeroWid.ValidateWithPath(path + "\u002f\u005a\u0065\u0072\u006f\u0057\u0069\u0064"); _fcde != nil {
			return _fcde
		}
	}
	if _fgac.ZeroAsc != nil {
		if _gffg := _fgac.ZeroAsc.ValidateWithPath(path + "\u002f\u005a\u0065\u0072\u006f\u0041\u0073\u0063"); _gffg != nil {
			return _gffg
		}
	}
	if _fgac.ZeroDesc != nil {
		if _ffbcf := _fgac.ZeroDesc.ValidateWithPath(path + "\u002fZ\u0065\u0072\u006f\u0044\u0065\u0073c"); _ffbcf != nil {
			return _ffbcf
		}
	}
	if _fgac.Transp != nil {
		if _ecaad := _fgac.Transp.ValidateWithPath(path + "\u002fT\u0072\u0061\u006e\u0073\u0070"); _ecaad != nil {
			return _ecaad
		}
	}
	if _fgac.CtrlPr != nil {
		if _edeg := _fgac.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _edeg != nil {
			return _edeg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SpacingRule and its children, prefixing error messages with path
func (_eacc *CT_SpacingRule) ValidateWithPath(path string) error {
	if _eacc.ValAttr < 0 {
		return _ef.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _eacc.ValAttr)
	}
	if _eacc.ValAttr > 4 {
		return _ef.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0034\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _eacc.ValAttr)
	}
	return nil
}

func NewCT_MC() *CT_MC { _fdbg := &CT_MC{}; return _fdbg }

type CT_BorderBoxPr struct {
	HideTop    *CT_OnOff
	HideBot    *CT_OnOff
	HideLeft   *CT_OnOff
	HideRight  *CT_OnOff
	StrikeH    *CT_OnOff
	StrikeV    *CT_OnOff
	StrikeBLTR *CT_OnOff
	StrikeTLBR *CT_OnOff
	CtrlPr     *CT_CtrlPr
}

func (_cgd *CT_MCPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cgd.Count != nil {
		_ecge := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0063\u006f\u0075\u006e\u0074"}}
		e.EncodeElement(_cgd.Count, _ecge)
	}
	if _cgd.McJc != nil {
		_ecbb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0063\u004a\u0063"}}
		e.EncodeElement(_cgd.McJc, _ecbb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Nary and its children, prefixing error messages with path
func (_gbbd *CT_Nary) ValidateWithPath(path string) error {
	if _gbbd.NaryPr != nil {
		if _ddb := _gbbd.NaryPr.ValidateWithPath(path + "\u002fN\u0061\u0072\u0079\u0050\u0072"); _ddb != nil {
			return _ddb
		}
	}
	if _gdaf := _gbbd.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _gdaf != nil {
		return _gdaf
	}
	if _acee := _gbbd.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _acee != nil {
		return _acee
	}
	if _aee := _gbbd.E.ValidateWithPath(path + "\u002f\u0045"); _aee != nil {
		return _aee
	}
	return nil
}

type CT_Text struct {
	SpaceAttr *string
	Content   string
}

func (_eaedc *CT_Func) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _eaedc.FuncPr != nil {
		_aef := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066\u0075\u006e\u0063\u0050\u0072"}}
		e.EncodeElement(_eaedc.FuncPr, _aef)
	}
	_dbef := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0066\u004e\u0061\u006d\u0065"}}
	e.EncodeElement(_eaedc.FName, _dbef)
	_aabb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_eaedc.E, _aabb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_NaryPr() *CT_NaryPr { _geag := &CT_NaryPr{}; return _geag }

// Validate validates the CT_DPr and its children
func (_efe *CT_DPr) Validate() error {
	return _efe.ValidateWithPath("\u0043\u0054\u005f\u0044\u0050\u0072")
}

func NewCT_OMathArgPr() *CT_OMathArgPr { _aegeg := &CT_OMathArgPr{}; return _aegeg }

// Validate validates the CT_UnSignedInteger and its children
func (_agbc *CT_UnSignedInteger) Validate() error {
	return _agbc.ValidateWithPath("\u0043T\u005fU\u006e\u0053\u0069\u0067\u006ee\u0064\u0049n\u0074\u0065\u0067\u0065\u0072")
}

func NewCT_MathPrChoice() *CT_MathPrChoice { _beef := &CT_MathPrChoice{}; return _beef }

func (_bbcc *EG_OMathElements) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ffcc:
	for {
		_agbe, _bfaa := d.Token()
		if _bfaa != nil {
			return _bfaa
		}
		switch _aacc := _agbe.(type) {
		case _f.StartElement:
			switch _aacc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_aafd := NewEG_OMathMathElements()
				_aafd.Acc = NewCT_Acc()
				if _fdae := d.DecodeElement(_aafd.Acc, &_aacc); _fdae != nil {
					return _fdae
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _aafd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_dfcb := NewEG_OMathMathElements()
				_dfcb.Bar = NewCT_Bar()
				if _aeca := d.DecodeElement(_dfcb.Bar, &_aacc); _aeca != nil {
					return _aeca
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _dfcb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_edea := NewEG_OMathMathElements()
				_edea.Box = NewCT_Box()
				if _cdgb := d.DecodeElement(_edea.Box, &_aacc); _cdgb != nil {
					return _cdgb
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _edea)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_bdacd := NewEG_OMathMathElements()
				_bdacd.BorderBox = NewCT_BorderBox()
				if _dccd := d.DecodeElement(_bdacd.BorderBox, &_aacc); _dccd != nil {
					return _dccd
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _bdacd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_baeg := NewEG_OMathMathElements()
				_baeg.D = NewCT_D()
				if _cfdba := d.DecodeElement(_baeg.D, &_aacc); _cfdba != nil {
					return _cfdba
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _baeg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_befc := NewEG_OMathMathElements()
				_befc.EqArr = NewCT_EqArr()
				if _affa := d.DecodeElement(_befc.EqArr, &_aacc); _affa != nil {
					return _affa
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _befc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_feff := NewEG_OMathMathElements()
				_feff.F = NewCT_F()
				if _fdcg := d.DecodeElement(_feff.F, &_aacc); _fdcg != nil {
					return _fdcg
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _feff)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_eefg := NewEG_OMathMathElements()
				_eefg.Func = NewCT_Func()
				if _fadca := d.DecodeElement(_eefg.Func, &_aacc); _fadca != nil {
					return _fadca
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _eefg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_dbaba := NewEG_OMathMathElements()
				_dbaba.GroupChr = NewCT_GroupChr()
				if _ddfcd := d.DecodeElement(_dbaba.GroupChr, &_aacc); _ddfcd != nil {
					return _ddfcd
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _dbaba)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_bede := NewEG_OMathMathElements()
				_bede.LimLow = NewCT_LimLow()
				if _aabf := d.DecodeElement(_bede.LimLow, &_aacc); _aabf != nil {
					return _aabf
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _bede)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_dfbba := NewEG_OMathMathElements()
				_dfbba.LimUpp = NewCT_LimUpp()
				if _daca := d.DecodeElement(_dfbba.LimUpp, &_aacc); _daca != nil {
					return _daca
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _dfbba)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_ccdae := NewEG_OMathMathElements()
				_ccdae.M = NewCT_M()
				if _aaccb := d.DecodeElement(_ccdae.M, &_aacc); _aaccb != nil {
					return _aaccb
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _ccdae)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_afaga := NewEG_OMathMathElements()
				_afaga.Nary = NewCT_Nary()
				if _fdf := d.DecodeElement(_afaga.Nary, &_aacc); _fdf != nil {
					return _fdf
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _afaga)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_fcag := NewEG_OMathMathElements()
				_fcag.Phant = NewCT_Phant()
				if _gbadc := d.DecodeElement(_fcag.Phant, &_aacc); _gbadc != nil {
					return _gbadc
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _fcag)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_fded := NewEG_OMathMathElements()
				_fded.Rad = NewCT_Rad()
				if _gbgc := d.DecodeElement(_fded.Rad, &_aacc); _gbgc != nil {
					return _gbgc
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _fded)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_ffab := NewEG_OMathMathElements()
				_ffab.SPre = NewCT_SPre()
				if _cgdd := d.DecodeElement(_ffab.SPre, &_aacc); _cgdd != nil {
					return _cgdd
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _ffab)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_cbb := NewEG_OMathMathElements()
				_cbb.SSub = NewCT_SSub()
				if _gefbe := d.DecodeElement(_cbb.SSub, &_aacc); _gefbe != nil {
					return _gefbe
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _cbb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_egcd := NewEG_OMathMathElements()
				_egcd.SSubSup = NewCT_SSubSup()
				if _fagg := d.DecodeElement(_egcd.SSubSup, &_aacc); _fagg != nil {
					return _fagg
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _egcd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_edead := NewEG_OMathMathElements()
				_edead.SSup = NewCT_SSup()
				if _cagb := d.DecodeElement(_edead.SSup, &_aacc); _cagb != nil {
					return _cagb
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _edead)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_cgbbg := NewEG_OMathMathElements()
				_cgbbg.R = NewCT_R()
				if _bfec := d.DecodeElement(_cgbbg.R, &_aacc); _bfec != nil {
					return _bfec
				}
				_bbcc.EG_OMathMathElements = append(_bbcc.EG_OMathMathElements, _cgbbg)
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0020\u0025v", _aacc.Name)
				if _abbcc := d.Skip(); _abbcc != nil {
					return _abbcc
				}
			}
		case _f.EndElement:
			break _ffcc
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LimLow and its children, prefixing error messages with path
func (_adcf *CT_LimLow) ValidateWithPath(path string) error {
	if _adcf.LimLowPr != nil {
		if _cgcc := _adcf.LimLowPr.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0077\u0050r"); _cgcc != nil {
			return _cgcc
		}
	}
	if _dgag := _adcf.E.ValidateWithPath(path + "\u002f\u0045"); _dgag != nil {
		return _dgag
	}
	if _decg := _adcf.Lim.ValidateWithPath(path + "\u002f\u004c\u0069\u006d"); _decg != nil {
		return _decg
	}
	return nil
}

type CT_EqArr struct {
	EqArrPr *CT_EqArrPr
	E       []*CT_OMathArg
}

// Validate validates the MathPr and its children
func (_aafef *MathPr) Validate() error {
	return _aafef.ValidateWithPath("\u004d\u0061\u0074\u0068\u0050\u0072")
}

func (_caec *CT_FuncPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gacd:
	for {
		_ddge, _cbde := d.Token()
		if _cbde != nil {
			return _cbde
		}
		switch _cdg := _ddge.(type) {
		case _f.StartElement:
			switch _cdg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_caec.CtrlPr = NewCT_CtrlPr()
				if _ggfd := d.DecodeElement(_caec.CtrlPr, &_cdg); _ggfd != nil {
					return _ggfd
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u0075\u006ec\u0050\u0072 \u0025\u0076", _cdg.Name)
				if _dce := d.Skip(); _dce != nil {
					return _dce
				}
			}
		case _f.EndElement:
			break _gacd
		case _f.CharData:
		}
	}
	return nil
}

func (_ce *CT_AccPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gd:
	for {
		_fd, _db := d.Token()
		if _db != nil {
			return _db
		}
		switch _dgd := _fd.(type) {
		case _f.StartElement:
			switch _dgd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_ce.Chr = NewCT_Char()
				if _ba := d.DecodeElement(_ce.Chr, &_dgd); _ba != nil {
					return _ba
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_ce.CtrlPr = NewCT_CtrlPr()
				if _be := d.DecodeElement(_ce.CtrlPr, &_dgd); _be != nil {
					return _be
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072\u0020\u0025\u0076", _dgd.Name)
				if _bfd := d.Skip(); _bfd != nil {
					return _bfd
				}
			}
		case _f.EndElement:
			break _gd
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_FPr() *CT_FPr { _dfeb := &CT_FPr{}; return _dfeb }

type CT_Box struct {
	BoxPr *CT_BoxPr
	E     *CT_OMathArg
}

func NewCT_D() *CT_D { _bgdg := &CT_D{}; return _bgdg }

// Validate validates the CT_F and its children
func (_faa *CT_F) Validate() error { return _faa.ValidateWithPath("\u0043\u0054\u005f\u0046") }

func (_gfcb *CT_FuncPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gfcb.CtrlPr != nil {
		_ffgf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_gfcb.CtrlPr, _ffgf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_BreakBin() *CT_BreakBin { _gdc := &CT_BreakBin{}; return _gdc }

// ValidateWithPath validates the CT_SPre and its children, prefixing error messages with path
func (_egfc *CT_SPre) ValidateWithPath(path string) error {
	if _egfc.SPrePr != nil {
		if _fdggb := _egfc.SPrePr.ValidateWithPath(path + "\u002fS\u0050\u0072\u0065\u0050\u0072"); _fdggb != nil {
			return _fdggb
		}
	}
	if _dcbcc := _egfc.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _dcbcc != nil {
		return _dcbcc
	}
	if _agff := _egfc.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _agff != nil {
		return _agff
	}
	if _dedff := _egfc.E.ValidateWithPath(path + "\u002f\u0045"); _dedff != nil {
		return _dedff
	}
	return nil
}

func (_caef *CT_OMath) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _caef.EG_OMathMathElements != nil {
		for _, _bfcd := range _caef.EG_OMathMathElements {
			_bfcd.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_bcca ST_Shp) String() string {
	switch _bcca {
	case 0:
		return ""
	case 1:
		return "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064"
	case 2:
		return "\u006d\u0061\u0074c\u0068"
	}
	return ""
}

// ValidateWithPath validates the CT_AccPr and its children, prefixing error messages with path
func (_ffbc *CT_AccPr) ValidateWithPath(path string) error {
	if _ffbc.Chr != nil {
		if _ac := _ffbc.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _ac != nil {
			return _ac
		}
	}
	if _ffbc.CtrlPr != nil {
		if _eg := _ffbc.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _eg != nil {
			return _eg
		}
	}
	return nil
}

func (_dfbf ST_Script) Validate() error { return _dfbf.ValidateWithPath("") }

type CT_LimLowPr struct{ CtrlPr *CT_CtrlPr }

func (_gaga *CT_Style) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _aaffa := range start.Attr {
		if _aaffa.Name.Local == "\u0076\u0061\u006c" {
			_gaga.ValAttr.UnmarshalXMLAttr(_aaffa)
			continue
		}
	}
	for {
		_fee, _eega := d.Token()
		if _eega != nil {
			return _ef.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0074\u0079\u006c\u0065: \u0025\u0073", _eega)
		}
		if _gcfabg, _ggcd := _fee.(_f.EndElement); _ggcd && _gcfabg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OMathParaPr and its children, prefixing error messages with path
func (_cgdgc *CT_OMathParaPr) ValidateWithPath(path string) error {
	if _cgdgc.Jc != nil {
		if _cabg := _cgdgc.Jc.ValidateWithPath(path + "\u002f\u004a\u0063"); _cabg != nil {
			return _cabg
		}
	}
	return nil
}

// Validate validates the EG_OMathElements and its children
func (_bgdb *EG_OMathElements) Validate() error {
	return _bgdb.ValidateWithPath("\u0045\u0047_\u004f\u004d\u0061t\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073")
}

// ValidateWithPath validates the CT_Text and its children, prefixing error messages with path
func (_ebcce *CT_Text) ValidateWithPath(path string) error { return nil }

func NewOMath() *OMath { _dafe := &OMath{}; _dafe.CT_OMath = *NewCT_OMath(); return _dafe }

func (_gbed *CT_F) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gbed.Num = NewCT_OMathArg()
	_gbed.Den = NewCT_OMathArg()
_bfb:
	for {
		_bdcb, _aabd := d.Token()
		if _aabd != nil {
			return _aabd
		}
		switch _dfca := _bdcb.(type) {
		case _f.StartElement:
			switch _dfca.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0050\u0072"}:
				_gbed.FPr = NewCT_FPr()
				if _aeac := d.DecodeElement(_gbed.FPr, &_dfca); _aeac != nil {
					return _aeac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0075\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0075\u006d"}:
				if _fbec := d.DecodeElement(_gbed.Num, &_dfca); _fbec != nil {
					return _fbec
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u006e"}:
				if _dcg := d.DecodeElement(_gbed.Den, &_dfca); _dcg != nil {
					return _dcg
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0046\u0020\u0025\u0076", _dfca.Name)
				if _ffge := d.Skip(); _ffge != nil {
					return _ffge
				}
			}
		case _f.EndElement:
			break _bfb
		case _f.CharData:
		}
	}
	return nil
}

func (_gced ST_TopBot) ValidateWithPath(path string) error {
	switch _gced {
	case 0, 1, 2:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gced))
	}
	return nil
}

func (_gge *CT_LimUpp) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gge.E = NewCT_OMathArg()
	_gge.Lim = NewCT_OMathArg()
_fedd:
	for {
		_eeed, _cccf := d.Token()
		if _cccf != nil {
			return _cccf
		}
		switch _cfaa := _eeed.(type) {
		case _f.StartElement:
			switch _cfaa.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}:
				_gge.LimUppPr = NewCT_LimUppPr()
				if _bfce := d.DecodeElement(_gge.LimUppPr, &_cfaa); _bfce != nil {
					return _bfce
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _affe := d.DecodeElement(_gge.E, &_cfaa); _affe != nil {
					return _affe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d"}:
				if _edf := d.DecodeElement(_gge.Lim, &_cfaa); _edf != nil {
					return _edf
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004c\u0069\u006dU\u0070\u0070 \u0025\u0076", _cfaa.Name)
				if _gcff := d.Skip(); _gcff != nil {
					return _gcff
				}
			}
		case _f.EndElement:
			break _fedd
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_FuncPr() *CT_FuncPr { _dbc := &CT_FuncPr{}; return _dbc }

func NewCT_BreakBinSub() *CT_BreakBinSub { _gbg := &CT_BreakBinSub{}; return _gbg }

type ST_LimLoc byte

func NewCT_MPr() *CT_MPr { _dfbb := &CT_MPr{}; return _dfbb }

// Validate validates the CT_BorderBox and its children
func (_bdd *CT_BorderBox) Validate() error {
	return _bdd.ValidateWithPath("\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078")
}

type CT_Rad struct {
	RadPr *CT_RadPr
	Deg   *CT_OMathArg
	E     *CT_OMathArg
}

// ValidateWithPath validates the CT_YAlign and its children, prefixing error messages with path
func (_eddg *CT_YAlign) ValidateWithPath(path string) error {
	if _eddg.ValAttr == _ea.ST_YAlignUnset {
		return _ef.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aaedg := _eddg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aaedg != nil {
		return _aaedg
	}
	return nil
}

func NewCT_OMathPara() *CT_OMathPara { _cdea := &CT_OMathPara{}; return _cdea }

func (_geec *CT_SpacingRule) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", _geec.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_egdc *ST_BreakBin) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dfbdb, _abeec := d.Token()
	if _abeec != nil {
		return _abeec
	}
	if _eebc, _fcgg := _dfbdb.(_f.EndElement); _fcgg && _eebc.Name == start.Name {
		*_egdc = 1
		return nil
	}
	if _aecfb, _ffged := _dfbdb.(_f.CharData); !_ffged {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfbdb)
	} else {
		switch string(_aecfb) {
		case "":
			*_egdc = 0
		case "\u0062\u0065\u0066\u006f\u0072\u0065":
			*_egdc = 1
		case "\u0061\u0066\u0074e\u0072":
			*_egdc = 2
		case "\u0072\u0065\u0070\u0065\u0061\u0074":
			*_egdc = 3
		}
	}
	_dfbdb, _abeec = d.Token()
	if _abeec != nil {
		return _abeec
	}
	if _gceda, _babb := _dfbdb.(_f.EndElement); _babb && _gceda.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfbdb)
}

func (_eaed *CT_FType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_eaed.ValAttr = ST_FType(1)
	for _, _bec := range start.Attr {
		if _bec.Name.Local == "\u0076\u0061\u006c" {
			_eaed.ValAttr.UnmarshalXMLAttr(_bec)
			continue
		}
	}
	for {
		_ebaf, _gggeg := d.Token()
		if _gggeg != nil {
			return _ef.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0054\u0079\u0070\u0065: \u0025\u0073", _gggeg)
		}
		if _bdgg, _gfg := _ebaf.(_f.EndElement); _gfg && _bdgg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcdf *CT_LimLoc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_ecbf, _gaa := _fcdf.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _gaa != nil {
		return _gaa
	}
	start.Attr = append(start.Attr, _ecbf)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_eba *CT_CtrlPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for {
		_efc, _bba := d.Token()
		if _bba != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0074\u0072l\u0050\u0072\u003a\u0020\u0025\u0073", _bba)
		}
		if _agd, _cga := _efc.(_f.EndElement); _cga && _agd.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_ShpUnset    ST_Shp = 0
	ST_ShpCentered ST_Shp = 1
	ST_ShpMatch    ST_Shp = 2
)

func (_bcdd *CT_Phant) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bcdd.PhantPr != nil {
		_aeea := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u0068\u0061\u006e\u0074\u0050r"}}
		e.EncodeElement(_bcdd.PhantPr, _aeea)
	}
	_edaa := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_bcdd.E, _edaa)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_aa *CT_Bar) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aa.BarPr != nil {
		_af := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0062\u0061\u0072\u0050\u0072"}}
		e.EncodeElement(_aa.BarPr, _af)
	}
	_ag := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_aa.E, _ag)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_gddg ST_Jc) Validate() error { return _gddg.ValidateWithPath("") }

// Validate validates the CT_MathPrChoice and its children
func (_eceg *CT_MathPrChoice) Validate() error {
	return _eceg.ValidateWithPath("\u0043T\u005fM\u0061\u0074\u0068\u0050\u0072\u0043\u0068\u006f\u0069\u0063\u0065")
}

type CT_UnSignedInteger struct{ ValAttr uint32 }

func (_dgcd *CT_SSub) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dgcd.E = NewCT_OMathArg()
	_dgcd.Sub = NewCT_OMathArg()
_acfd:
	for {
		_gcbd, _adba := d.Token()
		if _adba != nil {
			return _adba
		}
		switch _cgcf := _gcbd.(type) {
		case _f.StartElement:
			switch _cgcf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062\u0050\u0072"}:
				_dgcd.SSubPr = NewCT_SSubPr()
				if _cafae := d.DecodeElement(_dgcd.SSubPr, &_cgcf); _cafae != nil {
					return _cafae
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _ccge := d.DecodeElement(_dgcd.E, &_cgcf); _ccge != nil {
					return _ccge
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _bfdg := d.DecodeElement(_dgcd.Sub, &_cgcf); _bfdg != nil {
					return _bfdg
				}
			default:
				_a.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0053\u0075\u0062\u0020\u0025\u0076", _cgcf.Name)
				if _badac := d.Skip(); _badac != nil {
					return _badac
				}
			}
		case _f.EndElement:
			break _acfd
		case _f.CharData:
		}
	}
	return nil
}

func (_bbdc *ST_BreakBinSub) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fceg, _dfbag := d.Token()
	if _dfbag != nil {
		return _dfbag
	}
	if _geggg, _baef := _fceg.(_f.EndElement); _baef && _geggg.Name == start.Name {
		*_bbdc = 1
		return nil
	}
	if _eece, _adbbe := _fceg.(_f.CharData); !_adbbe {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fceg)
	} else {
		switch string(_eece) {
		case "":
			*_bbdc = 0
		case "\u002d\u002d":
			*_bbdc = 1
		case "\u002d\u002b":
			*_bbdc = 2
		case "\u002b\u002d":
			*_bbdc = 3
		}
	}
	_fceg, _dfbag = d.Token()
	if _dfbag != nil {
		return _dfbag
	}
	if _cgdgg, _fcfbd := _fceg.(_f.EndElement); _fcfbd && _cgdgg.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fceg)
}

type CT_MCS struct{ Mc []*CT_MC }

// Validate validates the CT_CtrlPr and its children
func (_gcd *CT_CtrlPr) Validate() error {
	return _gcd.ValidateWithPath("\u0043T\u005f\u0043\u0074\u0072\u006c\u0050r")
}

func NewCT_Shp() *CT_Shp { _dcea := &CT_Shp{}; _dcea.ValAttr = ST_Shp(1); return _dcea }

func (_gebb *CT_OMathArg) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ecdg:
	for {
		_fedb, _cfce := d.Token()
		if _cfce != nil {
			return _cfce
		}
		switch _ceec := _fedb.(type) {
		case _f.StartElement:
			switch _ceec.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0072\u0067P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0072\u0067P\u0072"}:
				_gebb.ArgPr = NewCT_OMathArgPr()
				if _eabe := d.DecodeElement(_gebb.ArgPr, &_ceec); _eabe != nil {
					return _eabe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_fgeg := NewEG_OMathMathElements()
				_fgeg.Acc = NewCT_Acc()
				if _egbg := d.DecodeElement(_fgeg.Acc, &_ceec); _egbg != nil {
					return _egbg
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _fgeg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_cegdc := NewEG_OMathMathElements()
				_cegdc.Bar = NewCT_Bar()
				if _fda := d.DecodeElement(_cegdc.Bar, &_ceec); _fda != nil {
					return _fda
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _cegdc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_deca := NewEG_OMathMathElements()
				_deca.Box = NewCT_Box()
				if _bddbe := d.DecodeElement(_deca.Box, &_ceec); _bddbe != nil {
					return _bddbe
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _deca)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_gafg := NewEG_OMathMathElements()
				_gafg.BorderBox = NewCT_BorderBox()
				if _fcbe := d.DecodeElement(_gafg.BorderBox, &_ceec); _fcbe != nil {
					return _fcbe
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _gafg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_dgcg := NewEG_OMathMathElements()
				_dgcg.D = NewCT_D()
				if _gdcc := d.DecodeElement(_dgcg.D, &_ceec); _gdcc != nil {
					return _gdcc
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _dgcg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_eaef := NewEG_OMathMathElements()
				_eaef.EqArr = NewCT_EqArr()
				if _eaae := d.DecodeElement(_eaef.EqArr, &_ceec); _eaae != nil {
					return _eaae
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _eaef)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_efebb := NewEG_OMathMathElements()
				_efebb.F = NewCT_F()
				if _ffaa := d.DecodeElement(_efebb.F, &_ceec); _ffaa != nil {
					return _ffaa
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _efebb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_abff := NewEG_OMathMathElements()
				_abff.Func = NewCT_Func()
				if _bacf := d.DecodeElement(_abff.Func, &_ceec); _bacf != nil {
					return _bacf
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _abff)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_adgd := NewEG_OMathMathElements()
				_adgd.GroupChr = NewCT_GroupChr()
				if _fcge := d.DecodeElement(_adgd.GroupChr, &_ceec); _fcge != nil {
					return _fcge
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _adgd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_aebg := NewEG_OMathMathElements()
				_aebg.LimLow = NewCT_LimLow()
				if _agde := d.DecodeElement(_aebg.LimLow, &_ceec); _agde != nil {
					return _agde
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _aebg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_aefc := NewEG_OMathMathElements()
				_aefc.LimUpp = NewCT_LimUpp()
				if _acbb := d.DecodeElement(_aefc.LimUpp, &_ceec); _acbb != nil {
					return _acbb
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _aefc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_cged := NewEG_OMathMathElements()
				_cged.M = NewCT_M()
				if _ebcb := d.DecodeElement(_cged.M, &_ceec); _ebcb != nil {
					return _ebcb
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _cged)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_gebd := NewEG_OMathMathElements()
				_gebd.Nary = NewCT_Nary()
				if _dfcg := d.DecodeElement(_gebd.Nary, &_ceec); _dfcg != nil {
					return _dfcg
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _gebd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_ggfg := NewEG_OMathMathElements()
				_ggfg.Phant = NewCT_Phant()
				if _aabc := d.DecodeElement(_ggfg.Phant, &_ceec); _aabc != nil {
					return _aabc
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _ggfg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_ede := NewEG_OMathMathElements()
				_ede.Rad = NewCT_Rad()
				if _dfag := d.DecodeElement(_ede.Rad, &_ceec); _dfag != nil {
					return _dfag
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _ede)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_edbd := NewEG_OMathMathElements()
				_edbd.SPre = NewCT_SPre()
				if _dbaee := d.DecodeElement(_edbd.SPre, &_ceec); _dbaee != nil {
					return _dbaee
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _edbd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_fgdd := NewEG_OMathMathElements()
				_fgdd.SSub = NewCT_SSub()
				if _daa := d.DecodeElement(_fgdd.SSub, &_ceec); _daa != nil {
					return _daa
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _fgdd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_afcd := NewEG_OMathMathElements()
				_afcd.SSubSup = NewCT_SSubSup()
				if _ffcd := d.DecodeElement(_afcd.SSubSup, &_ceec); _ffcd != nil {
					return _ffcd
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _afcd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_gdbc := NewEG_OMathMathElements()
				_gdbc.SSup = NewCT_SSup()
				if _ddgc := d.DecodeElement(_gdbc.SSup, &_ceec); _ddgc != nil {
					return _ddgc
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _gdbc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_abad := NewEG_OMathMathElements()
				_abad.R = NewCT_R()
				if _edfe := d.DecodeElement(_abad.R, &_ceec); _edfe != nil {
					return _edfe
				}
				_gebb.EG_OMathMathElements = append(_gebb.EG_OMathMathElements, _abad)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gebb.CtrlPr = NewCT_CtrlPr()
				if _caccd := d.DecodeElement(_gebb.CtrlPr, &_ceec); _caccd != nil {
					return _caccd
				}
			default:
				_a.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0020\u0025\u0076", _ceec.Name)
				if _fec := d.Skip(); _fec != nil {
					return _fec
				}
			}
		case _f.EndElement:
			break _ecdg
		case _f.CharData:
		}
	}
	return nil
}

func (_ddec ST_Script) ValidateWithPath(path string) error {
	switch _ddec {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddec))
	}
	return nil
}

const (
	ST_BreakBinUnset  ST_BreakBin = 0
	ST_BreakBinBefore ST_BreakBin = 1
	ST_BreakBinAfter  ST_BreakBin = 2
	ST_BreakBinRepeat ST_BreakBin = 3
)

func (_adbg ST_LimLoc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_adbg.String(), start)
}

type CT_OMathParaPr struct{ Jc *CT_OMathJc }

func (_fce *CT_SSubSup) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _fce.SSubSupPr != nil {
		_geeb := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0073\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072"}}
		e.EncodeElement(_fce.SSubSupPr, _geeb)
	}
	_ebdf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_fce.E, _ebdf)
	_fgab := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_fce.Sub, _fgab)
	_gcdbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_fce.Sup, _gcdbg)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_OMathPara struct {
	OMathParaPr *CT_OMathParaPr
	OMath       []*CT_OMath
}

type CT_MathPr struct {
	MathFont  *CT_String
	BrkBin    *CT_BreakBin
	BrkBinSub *CT_BreakBinSub
	SmallFrac *CT_OnOff
	DispDef   *CT_OnOff
	LMargin   *CT_TwipsMeasure
	RMargin   *CT_TwipsMeasure
	DefJc     *CT_OMathJc
	PreSp     *CT_TwipsMeasure
	PostSp    *CT_TwipsMeasure
	InterSp   *CT_TwipsMeasure
	IntraSp   *CT_TwipsMeasure
	Choice    *CT_MathPrChoice
	IntLim    *CT_LimLoc
	NaryLim   *CT_LimLoc
}

// ValidateWithPath validates the CT_Integer255 and its children, prefixing error messages with path
func (_gcgb *CT_Integer255) ValidateWithPath(path string) error {
	if _gcgb.ValAttr < 1 {
		return _ef.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gcgb.ValAttr)
	}
	if _gcgb.ValAttr > 255 {
		return _ef.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0032\u0035\u0035\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _gcgb.ValAttr)
	}
	return nil
}

func (_abae *CT_SSubPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _abae.CtrlPr != nil {
		_bcbf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_abae.CtrlPr, _bcbf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_abe *CT_BoxPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fdda:
	for {
		_cff, _fegb := d.Token()
		if _fegb != nil {
			return _fegb
		}
		switch _baa := _cff.(type) {
		case _f.StartElement:
			switch _baa.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u0070\u0045m\u0075"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u0070\u0045m\u0075"}:
				_abe.OpEmu = NewCT_OnOff()
				if _ee := d.DecodeElement(_abe.OpEmu, &_baa); _ee != nil {
					return _ee
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006eo\u0042\u0072\u0065\u0061\u006b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006eo\u0042\u0072\u0065\u0061\u006b"}:
				_abe.NoBreak = NewCT_OnOff()
				if _feb := d.DecodeElement(_abe.NoBreak, &_baa); _feb != nil {
					return _feb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0069\u0066\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0069\u0066\u0066"}:
				_abe.Diff = NewCT_OnOff()
				if _dbb := d.DecodeElement(_abe.Diff, &_baa); _dbb != nil {
					return _dbb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b"}:
				_abe.Brk = NewCT_ManualBreak()
				if _bgd := d.DecodeElement(_abe.Brk, &_baa); _bgd != nil {
					return _bgd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e"}:
				_abe.Aln = NewCT_OnOff()
				if _fbe := d.DecodeElement(_abe.Aln, &_baa); _fbe != nil {
					return _fbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_abe.CtrlPr = NewCT_CtrlPr()
				if _aac := d.DecodeElement(_abe.CtrlPr, &_baa); _aac != nil {
					return _aac
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072\u0020\u0025\u0076", _baa.Name)
				if _geg := d.Skip(); _geg != nil {
					return _geg
				}
			}
		case _f.EndElement:
			break _fdda
		case _f.CharData:
		}
	}
	return nil
}

func (_bcbdd *CT_RChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bcbdd.T != nil {
		_eaaaa := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0074"}}
		for _, _dgagc := range _bcbdd.T {
			e.EncodeElement(_dgagc, _eaaaa)
		}
	}
	return nil
}

// Validate validates the CT_MCS and its children
func (_egdf *CT_MCS) Validate() error {
	return _egdf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0043\u0053")
}

func (_cgge *CT_SpacingRule) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cgge.ValAttr = 0
	for _, _cceb := range start.Attr {
		if _cceb.Name.Local == "\u0076\u0061\u006c" {
			_dgdc, _ecdeg := _fa.ParseInt(_cceb.Value, 10, 64)
			if _ecdeg != nil {
				return _ecdeg
			}
			_cgge.ValAttr = _dgdc
			continue
		}
	}
	for {
		_fdce, _egga := d.Token()
		if _egga != nil {
			return _ef.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0070\u0061\u0063\u0069\u006e\u0067\u0052\u0075\u006c\u0065:\u0020\u0025\u0073", _egga)
		}
		if _dbge, _gec := _fdce.(_f.EndElement); _gec && _dbge.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ebea *CT_XAlign) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ebea.ValAttr = _ea.ST_XAlign(1)
	for _, _fegba := range start.Attr {
		if _fegba.Name.Local == "\u0076\u0061\u006c" {
			_ebea.ValAttr.UnmarshalXMLAttr(_fegba)
			continue
		}
	}
	for {
		_gcce, _bfdgf := d.Token()
		if _bfdgf != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0058\u0041\u006ci\u0067\u006e\u003a\u0020\u0025\u0073", _bfdgf)
		}
		if _ebgd, _afce := _gcce.(_f.EndElement); _afce && _ebgd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TopBot() *CT_TopBot { _ebae := &CT_TopBot{}; _ebae.ValAttr = ST_TopBot(1); return _ebae }

func NewCT_BarPr() *CT_BarPr { _ebd := &CT_BarPr{}; return _ebd }

func (_ebfg *CT_SSup) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ebfg.SSupPr != nil {
		_fffe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0070\u0050\u0072"}}
		e.EncodeElement(_ebfg.SSupPr, _fffe)
	}
	_agffe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_ebfg.E, _agffe)
	_ffbe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_ebfg.Sup, _ffbe)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Script and its children, prefixing error messages with path
func (_acaa *CT_Script) ValidateWithPath(path string) error {
	if _febe := _acaa.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _febe != nil {
		return _febe
	}
	return nil
}

type CT_Nary struct {
	NaryPr *CT_NaryPr
	Sub    *CT_OMathArg
	Sup    *CT_OMathArg
	E      *CT_OMathArg
}

func (_beb *CT_OnOff) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _adfe := range start.Attr {
		if _adfe.Name.Local == "\u0076\u0061\u006c" {
			_cbfg, _bbd := ParseUnionST_OnOff(_adfe.Value)
			if _bbd != nil {
				return _bbd
			}
			_beb.ValAttr = &_cbfg
			continue
		}
	}
	for {
		_aca, _geegb := d.Token()
		if _geegb != nil {
			return _ef.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fO\u006e\u004f\u0066\u0066: \u0025\u0073", _geegb)
		}
		if _dfgcc, _agcd := _aca.(_f.EndElement); _agcd && _dfgcc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SSup and its children
func (_cgda *CT_SSup) Validate() error {
	return _cgda.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0070")
}

// Validate validates the CT_D and its children
func (_eec *CT_D) Validate() error { return _eec.ValidateWithPath("\u0043\u0054\u005f\u0044") }

func (_aceef *CT_SPre) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aceef.SPrePr != nil {
		_cgbb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0050\u0072\u0065\u0050\u0072"}}
		e.EncodeElement(_aceef.SPrePr, _cgbb)
	}
	_ddc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_aceef.Sub, _ddc)
	_bcce := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_aceef.Sup, _bcce)
	_cgeef := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_aceef.E, _cgeef)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewEG_OMathMathElements() *EG_OMathMathElements { _deege := &EG_OMathMathElements{}; return _deege }

func (_gfd *CT_LimLoc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gfd.ValAttr = ST_LimLoc(1)
	for _, _cdf := range start.Attr {
		if _cdf.Name.Local == "\u0076\u0061\u006c" {
			_gfd.ValAttr.UnmarshalXMLAttr(_cdf)
			continue
		}
	}
	for {
		_eab, _ecfb := d.Token()
		if _ecfb != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004c\u0069\u006dL\u006f\u0063\u003a\u0020\u0025\u0073", _ecfb)
		}
		if _aafe, _gafd := _eab.(_f.EndElement); _gafd && _aafe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fced ST_BreakBinSub) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_aacbd := _f.Attr{}
	_aacbd.Name = name
	switch _fced {
	case ST_BreakBinSubUnset:
		_aacbd.Value = ""
	case ST_BreakBinSub__:
		_aacbd.Value = "\u002d\u002d"
	case ST_BreakBinSub___:
		_aacbd.Value = "\u002d\u002b"
	case ST_BreakBinSub____:
		_aacbd.Value = "\u002b\u002d"
	}
	return _aacbd, nil
}

// Validate validates the CT_LimLoc and its children
func (_ceee *CT_LimLoc) Validate() error {
	return _ceee.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u004c\u006fc")
}

type EG_ScriptStyle struct {
	Scr *CT_Script
	Sty *CT_Style
}

type CT_Phant struct {
	PhantPr *CT_PhantPr
	E       *CT_OMathArg
}

type CT_NaryPr struct {
	Chr     *CT_Char
	LimLoc  *CT_LimLoc
	Grow    *CT_OnOff
	SubHide *CT_OnOff
	SupHide *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

// Validate validates the CT_RChoice and its children
func (_acdf *CT_RChoice) Validate() error {
	return _acdf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_cfca *CT_MathPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cfca.MathFont != nil {
		_gbcg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_cfca.MathFont, _gbcg)
	}
	if _cfca.BrkBin != nil {
		_gbfg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0072\u006b\u0042\u0069\u006e"}}
		e.EncodeElement(_cfca.BrkBin, _gbfg)
	}
	if _cfca.BrkBinSub != nil {
		_bgc := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0062\u0072\u006b\u0042\u0069\u006e\u0053\u0075\u0062"}}
		e.EncodeElement(_cfca.BrkBinSub, _bgc)
	}
	if _cfca.SmallFrac != nil {
		_deag := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0073\u006d\u0061\u006c\u006c\u0046\u0072\u0061\u0063"}}
		e.EncodeElement(_cfca.SmallFrac, _deag)
	}
	if _cfca.DispDef != nil {
		_bad := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0064\u0069\u0073\u0070\u0044\u0065f"}}
		e.EncodeElement(_cfca.DispDef, _bad)
	}
	if _cfca.LMargin != nil {
		_dcdce := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006c\u004d\u0061\u0072\u0067\u0069n"}}
		e.EncodeElement(_cfca.LMargin, _dcdce)
	}
	if _cfca.RMargin != nil {
		_eafb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u004d\u0061\u0072\u0067\u0069n"}}
		e.EncodeElement(_cfca.RMargin, _eafb)
	}
	if _cfca.DefJc != nil {
		_fdddf := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0064\u0065\u0066\u004a\u0063"}}
		e.EncodeElement(_cfca.DefJc, _fdddf)
	}
	if _cfca.PreSp != nil {
		_bfg := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u0072\u0065\u0053\u0070"}}
		e.EncodeElement(_cfca.PreSp, _bfg)
	}
	if _cfca.PostSp != nil {
		_dcbe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0070\u006f\u0073\u0074\u0053\u0070"}}
		e.EncodeElement(_cfca.PostSp, _dcbe)
	}
	if _cfca.InterSp != nil {
		_edbg := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0069\u006e\u0074\u0065\u0072\u0053p"}}
		e.EncodeElement(_cfca.InterSp, _edbg)
	}
	if _cfca.IntraSp != nil {
		_bgaa := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0069\u006e\u0074\u0072\u0061\u0053p"}}
		e.EncodeElement(_cfca.IntraSp, _bgaa)
	}
	if _cfca.Choice != nil {
		_cfca.Choice.MarshalXML(e, _f.StartElement{})
	}
	if _cfca.IntLim != nil {
		_ddeg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0069\u006e\u0074\u004c\u0069\u006d"}}
		e.EncodeElement(_cfca.IntLim, _ddeg)
	}
	if _cfca.NaryLim != nil {
		_eccb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006e\u0061\u0072\u0079\u004c\u0069m"}}
		e.EncodeElement(_cfca.NaryLim, _eccb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_cdgad *EG_ScriptStyle) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Name.Local = "\u006d\u003aE\u0047\u005f\u0053c\u0072\u0069\u0070\u0074\u0053\u0074\u0079\u006c\u0065"
	if _cdgad.Scr != nil {
		_aacbf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073c\u0072"}}
		e.EncodeElement(_cdgad.Scr, _aacbf)
	}
	if _cdgad.Sty != nil {
		_dabe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073t\u0079"}}
		e.EncodeElement(_cdgad.Sty, _dabe)
	}
	return nil
}

// ValidateWithPath validates the CT_ManualBreak and its children, prefixing error messages with path
func (_dae *CT_ManualBreak) ValidateWithPath(path string) error {
	if _dae.AlnAtAttr != nil {
		if *_dae.AlnAtAttr < 1 {
			return _ef.Errorf("\u0025\u0073/\u006d\u002e\u0041\u006cn\u0041\u0074A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dae.AlnAtAttr)
		}
		if *_dae.AlnAtAttr > 255 {
			return _ef.Errorf("\u0025\u0073\u002f\u006d\u002e\u0041\u006c\u006e\u0041\u0074\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0032\u0035\u0035\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dae.AlnAtAttr)
		}
	}
	return nil
}

type CT_Func struct {
	FuncPr *CT_FuncPr
	FName  *CT_OMathArg
	E      *CT_OMathArg
}

func (_bfbc *CT_MathPrChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_baac:
	for {
		_abd, _agec := d.Token()
		if _agec != nil {
			return _agec
		}
		switch _gcge := _abd.(type) {
		case _f.StartElement:
			switch _gcge.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_bfbc.WrapIndent = NewCT_TwipsMeasure()
				if _efcg := d.DecodeElement(_bfbc.WrapIndent, &_gcge); _efcg != nil {
					return _efcg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_bfbc.WrapRight = NewCT_OnOff()
				if _fbaa := d.DecodeElement(_bfbc.WrapRight, &_gcge); _fbaa != nil {
					return _fbaa
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0074h\u0050\u0072\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gcge.Name)
				if _cgff := d.Skip(); _cgff != nil {
					return _cgff
				}
			}
		case _f.EndElement:
			break _baac
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_LimLow() *CT_LimLow {
	_dab := &CT_LimLow{}
	_dab.E = NewCT_OMathArg()
	_dab.Lim = NewCT_OMathArg()
	return _dab
}

func (_bacc *CT_Phant) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bacc.E = NewCT_OMathArg()
_acfac:
	for {
		_acgbf, _feda := d.Token()
		if _feda != nil {
			return _feda
		}
		switch _dbga := _acgbf.(type) {
		case _f.StartElement:
			switch _dbga.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070h\u0061\u006e\u0074\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070h\u0061\u006e\u0074\u0050\u0072"}:
				_bacc.PhantPr = NewCT_PhantPr()
				if _gbef := d.DecodeElement(_bacc.PhantPr, &_dbga); _gbef != nil {
					return _gbef
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _cdac := d.DecodeElement(_bacc.E, &_dbga); _cdac != nil {
					return _cdac
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0020\u0025\u0076", _dbga.Name)
				if _degb := d.Skip(); _degb != nil {
					return _degb
				}
			}
		case _f.EndElement:
			break _acfac
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TopBot and its children, prefixing error messages with path
func (_efceg *CT_TopBot) ValidateWithPath(path string) error {
	if _efceg.ValAttr == ST_TopBotUnset {
		return _ef.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aefcf := _efceg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aefcf != nil {
		return _aefcf
	}
	return nil
}

func (_dgg *CT_MR) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_dbdg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	for _, _abgec := range _dgg.E {
		e.EncodeElement(_abgec, _dbdg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_MPr struct {
	BaseJc  *CT_YAlign
	PlcHide *CT_OnOff
	RSpRule *CT_SpacingRule
	CGpRule *CT_SpacingRule
	RSp     *CT_UnSignedInteger
	CSp     *CT_UnSignedInteger
	CGp     *CT_UnSignedInteger
	Mcs     *CT_MCS
	CtrlPr  *CT_CtrlPr
}

// Validate validates the CT_EqArrPr and its children
func (_abge *CT_EqArrPr) Validate() error {
	return _abge.ValidateWithPath("\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0050\u0072")
}

// Validate validates the CT_OMath and its children
func (_bfgc *CT_OMath) Validate() error {
	return _bfgc.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068")
}

type EG_OMathMathElements struct {
	Acc       *CT_Acc
	Bar       *CT_Bar
	Box       *CT_Box
	BorderBox *CT_BorderBox
	D         *CT_D
	EqArr     *CT_EqArr
	F         *CT_F
	Func      *CT_Func
	GroupChr  *CT_GroupChr
	LimLow    *CT_LimLow
	LimUpp    *CT_LimUpp
	M         *CT_M
	Nary      *CT_Nary
	Phant     *CT_Phant
	Rad       *CT_Rad
	SPre      *CT_SPre
	SSub      *CT_SSub
	SSubSup   *CT_SSubSup
	SSup      *CT_SSup
	R         *CT_R
}

func (_deg *CT_MC) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_aeaa:
	for {
		_acf, _babd := d.Token()
		if _babd != nil {
			return _babd
		}
		switch _cfbe := _acf.(type) {
		case _f.StartElement:
			switch _cfbe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u0050\u0072"}:
				_deg.McPr = NewCT_MCPr()
				if _dbae := d.DecodeElement(_deg.McPr, &_cfbe); _dbae != nil {
					return _dbae
				}
			default:
				_a.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fM\u0043 \u0025\u0076", _cfbe.Name)
				if _eggge := d.Skip(); _eggge != nil {
					return _eggge
				}
			}
		case _f.EndElement:
			break _aeaa
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_Char() *CT_Char { _bdc := &CT_Char{}; return _bdc }

func NewCT_R() *CT_R { _gbga := &CT_R{}; return _gbga }

const (
	ST_TopBotUnset ST_TopBot = 0
	ST_TopBotTop   ST_TopBot = 1
	ST_TopBotBot   ST_TopBot = 2
)

// ValidateWithPath validates the CT_SSubSupPr and its children, prefixing error messages with path
func (_dedg *CT_SSubSupPr) ValidateWithPath(path string) error {
	if _dedg.AlnScr != nil {
		if _cgccg := _dedg.AlnScr.ValidateWithPath(path + "\u002fA\u006c\u006e\u0053\u0063\u0072"); _cgccg != nil {
			return _cgccg
		}
	}
	if _dedg.CtrlPr != nil {
		if _gfed := _dedg.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gfed != nil {
			return _gfed
		}
	}
	return nil
}

// Validate validates the CT_M and its children
func (_cdfc *CT_M) Validate() error { return _cdfc.ValidateWithPath("\u0043\u0054\u005f\u004d") }

func (_fafba *CT_Integer2) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fafba.ValAttr = -2
	for _, _afga := range start.Attr {
		if _afga.Name.Local == "\u0076\u0061\u006c" {
			_efd, _fae := _fa.ParseInt(_afga.Value, 10, 64)
			if _fae != nil {
				return _fae
			}
			_fafba.ValAttr = _efd
			continue
		}
	}
	for {
		_adbf, _aefb := d.Token()
		if _aefb != nil {
			return _ef.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u003a\u0020\u0025\u0073", _aefb)
		}
		if _fcc, _bcdf := _adbf.(_f.EndElement); _bcdf && _fcc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ebaa *CT_Text) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ebaa.SpaceAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u003a\u0073\u0070\u0061\u0063e"}, Value: _ef.Sprintf("\u0025\u0076", *_ebaa.SpaceAttr)})
	}
	e.EncodeElement(_ebaa.Content, start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupChr and its children
func (_dcde *CT_GroupChr) Validate() error {
	return _dcde.ValidateWithPath("C\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072")
}

// Validate validates the CT_SSub and its children
func (_cdgf *CT_SSub) Validate() error {
	return _cdgf.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0062")
}

func (_ad *CT_BorderBox) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ad.E = NewCT_OMathArg()
_baf:
	for {
		_fdd, _ecf := d.Token()
		if _ecf != nil {
			return _ecf
		}
		switch _ebb := _fdd.(type) {
		case _f.StartElement:
			switch _ebb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "b\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "b\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}:
				_ad.BorderBoxPr = NewCT_BorderBoxPr()
				if _dc := d.DecodeElement(_ad.BorderBoxPr, &_ebb); _dc != nil {
					return _dc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dag := d.DecodeElement(_ad.E, &_ebb); _dag != nil {
					return _dag
				}
			default:
				_a.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u0072d\u0065\u0072\u0042\u006f\u0078\u0020\u0025\u0076", _ebb.Name)
				if _cfb := d.Skip(); _cfb != nil {
					return _cfb
				}
			}
		case _f.EndElement:
			break _baf
		case _f.CharData:
		}
	}
	return nil
}

func (_eege *CT_OMathArgPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ecae:
	for {
		_fcff, _geeed := d.Token()
		if _geeed != nil {
			return _geeed
		}
		switch _dadb := _fcff.(type) {
		case _f.StartElement:
			switch _dadb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0072\u0067S\u007a"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0072\u0067S\u007a"}:
				_eege.ArgSz = NewCT_Integer2()
				if _bfcc := d.DecodeElement(_eege.ArgSz, &_dadb); _bfcc != nil {
					return _bfcc
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fM\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072 \u0025\u0076", _dadb.Name)
				if _gbbg := d.Skip(); _gbbg != nil {
					return _gbbg
				}
			}
		case _f.EndElement:
			break _ecae
		case _f.CharData:
		}
	}
	return nil
}

type ST_Script byte

// Validate validates the CT_SSubPr and its children
func (_bbgcg *CT_SSubPr) Validate() error {
	return _bbgcg.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0062\u0050r")
}

// Validate validates the CT_PhantPr and its children
func (_cebdb *CT_PhantPr) Validate() error {
	return _cebdb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0050\u0072")
}

func (_edbec ST_FType) ValidateWithPath(path string) error {
	switch _edbec {
	case 0, 1, 2, 3, 4:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edbec))
	}
	return nil
}

// ValidateWithPath validates the CT_BoxPr and its children, prefixing error messages with path
func (_eee *CT_BoxPr) ValidateWithPath(path string) error {
	if _eee.OpEmu != nil {
		if _aad := _eee.OpEmu.ValidateWithPath(path + "\u002f\u004f\u0070\u0045\u006d\u0075"); _aad != nil {
			return _aad
		}
	}
	if _eee.NoBreak != nil {
		if _egf := _eee.NoBreak.ValidateWithPath(path + "\u002f\u004e\u006f\u0042\u0072\u0065\u0061\u006b"); _egf != nil {
			return _egf
		}
	}
	if _eee.Diff != nil {
		if _caa := _eee.Diff.ValidateWithPath(path + "\u002f\u0044\u0069f\u0066"); _caa != nil {
			return _caa
		}
	}
	if _eee.Brk != nil {
		if _bde := _eee.Brk.ValidateWithPath(path + "\u002f\u0042\u0072\u006b"); _bde != nil {
			return _bde
		}
	}
	if _eee.Aln != nil {
		if _dfd := _eee.Aln.ValidateWithPath(path + "\u002f\u0041\u006c\u006e"); _dfd != nil {
			return _dfd
		}
	}
	if _eee.CtrlPr != nil {
		if _aade := _eee.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aade != nil {
			return _aade
		}
	}
	return nil
}

func (_ffbge ST_Shp) ValidateWithPath(path string) error {
	switch _ffbge {
	case 0, 1, 2:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffbge))
	}
	return nil
}

// ValidateWithPath validates the MathPr and its children, prefixing error messages with path
func (_ebbc *MathPr) ValidateWithPath(path string) error {
	if _afagf := _ebbc.CT_MathPr.ValidateWithPath(path); _afagf != nil {
		return _afagf
	}
	return nil
}

func (_dbea *CT_UnSignedInteger) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", _dbea.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_ddcf ST_Shp) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_ddcf.String(), start)
}

func (_dcged ST_Script) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_gebbd := _f.Attr{}
	_gebbd.Name = name
	switch _dcged {
	case ST_ScriptUnset:
		_gebbd.Value = ""
	case ST_ScriptRoman:
		_gebbd.Value = "\u0072\u006f\u006da\u006e"
	case ST_ScriptScript:
		_gebbd.Value = "\u0073\u0063\u0072\u0069\u0070\u0074"
	case ST_ScriptFraktur:
		_gebbd.Value = "\u0066r\u0061\u006b\u0074\u0075\u0072"
	case ST_ScriptDouble_struck:
		_gebbd.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b"
	case ST_ScriptSans_serif:
		_gebbd.Value = "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066"
	case ST_ScriptMonospace:
		_gebbd.Value = "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e"
	}
	return _gebbd, nil
}

// Validate validates the CT_YAlign and its children
func (_fabg *CT_YAlign) Validate() error {
	return _fabg.ValidateWithPath("\u0043T\u005f\u0059\u0041\u006c\u0069\u0067n")
}

// Validate validates the CT_MPr and its children
func (_bfa *CT_MPr) Validate() error {
	return _bfa.ValidateWithPath("\u0043\u0054\u005f\u004d\u0050\u0072")
}

func (_bdba *EG_OMathElements) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bdba.EG_OMathMathElements != nil {
		for _, _ddcg := range _bdba.EG_OMathMathElements {
			_ddcg.MarshalXML(e, _f.StartElement{})
		}
	}
	return nil
}

type CT_FPr struct {
	Type   *CT_FType
	CtrlPr *CT_CtrlPr
}

func (_efagc ST_Jc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_efagc.String(), start)
}

// Validate validates the CT_AccPr and its children
func (_gac *CT_AccPr) Validate() error {
	return _gac.ValidateWithPath("\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072")
}

func (_bbfe ST_Style) ValidateWithPath(path string) error {
	switch _bbfe {
	case 0, 1, 2, 3, 4:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbfe))
	}
	return nil
}

type ST_FType byte

func (_eebf *ST_LimLoc) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_eebf = 0
	case "\u0075\u006e\u0064\u004f\u0076\u0072":
		*_eebf = 1
	case "\u0073\u0075\u0062\u0053\u0075\u0070":
		*_eebf = 2
	}
	return nil
}

func (_bfbfa *CT_SPre) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bfbfa.Sub = NewCT_OMathArg()
	_bfbfa.Sup = NewCT_OMathArg()
	_bfbfa.E = NewCT_OMathArg()
_afbg:
	for {
		_ecegb, _ddefb := d.Token()
		if _ddefb != nil {
			return _ddefb
		}
		switch _fffa := _ecegb.(type) {
		case _f.StartElement:
			switch _fffa.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065\u0050\u0072"}:
				_bfbfa.SPrePr = NewCT_SPrePr()
				if _cfad := d.DecodeElement(_bfbfa.SPrePr, &_fffa); _cfad != nil {
					return _cfad
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _bcbe := d.DecodeElement(_bfbfa.Sub, &_fffa); _bcbe != nil {
					return _bcbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _ccdc := d.DecodeElement(_bfbfa.Sup, &_fffa); _ccdc != nil {
					return _ccdc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dgca := d.DecodeElement(_bfbfa.E, &_fffa); _dgca != nil {
					return _dgca
				}
			default:
				_a.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0050\u0072\u0065\u0020\u0025\u0076", _fffa.Name)
				if _adga := d.Skip(); _adga != nil {
					return _adga
				}
			}
		case _f.EndElement:
			break _afbg
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BarPr and its children
func (_cg *CT_BarPr) Validate() error {
	return _cg.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072")
}

func NewCT_Integer255() *CT_Integer255 { _fccc := &CT_Integer255{}; _fccc.ValAttr = 1; return _fccc }

func (_bbgf *CT_SSubSupPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bbgf.AlnScr != nil {
		_fgeb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061\u006c\u006e\u0053\u0063\u0072"}}
		e.EncodeElement(_bbgf.AlnScr, _fgeb)
	}
	if _bbgf.CtrlPr != nil {
		_aecc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bbgf.CtrlPr, _aecc)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LimUpp and its children
func (_ggbc *CT_LimUpp) Validate() error {
	return _ggbc.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u0055\u0070p")
}

func NewCT_TwipsMeasure() *CT_TwipsMeasure { _dgaad := &CT_TwipsMeasure{}; return _dgaad }

// Validate validates the CT_String and its children
func (_cgbg *CT_String) Validate() error {
	return _cgbg.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}

func NewCT_UnSignedInteger() *CT_UnSignedInteger { _aeaae := &CT_UnSignedInteger{}; return _aeaae }

func (_beaea ST_BreakBin) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_fadga := _f.Attr{}
	_fadga.Name = name
	switch _beaea {
	case ST_BreakBinUnset:
		_fadga.Value = ""
	case ST_BreakBinBefore:
		_fadga.Value = "\u0062\u0065\u0066\u006f\u0072\u0065"
	case ST_BreakBinAfter:
		_fadga.Value = "\u0061\u0066\u0074e\u0072"
	case ST_BreakBinRepeat:
		_fadga.Value = "\u0072\u0065\u0070\u0065\u0061\u0074"
	}
	return _fadga, nil
}

type CT_BorderBox struct {
	BorderBoxPr *CT_BorderBoxPr
	E           *CT_OMathArg
}

func (_ga *CT_Acc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ga.E = NewCT_OMathArg()
_ae:
	for {
		_bf, _c := d.Token()
		if _c != nil {
			return _c
		}
		switch _aea := _bf.(type) {
		case _f.StartElement:
			switch _aea.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063P\u0072"}:
				_ga.AccPr = NewCT_AccPr()
				if _ge := d.DecodeElement(_ga.AccPr, &_aea); _ge != nil {
					return _ge
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _eff := d.DecodeElement(_ga.E, &_aea); _eff != nil {
					return _eff
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0063\u0063\u0020\u0025\u0076", _aea.Name)
				if _fg := d.Skip(); _fg != nil {
					return _fg
				}
			}
		case _f.EndElement:
			break _ae
		case _f.CharData:
		}
	}
	return nil
}

func (_ccdcf *CT_TwipsMeasure) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", _ccdcf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_afec *CT_Script) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _afec.ValAttr != ST_ScriptUnset {
		_baebbb, _afeb := _afec.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _afeb != nil {
			return _afeb
		}
		start.Attr = append(start.Attr, _baebbb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_aabg *CT_GroupChrPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aabg.Chr != nil {
		_bed := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_aabg.Chr, _bed)
	}
	if _aabg.Pos != nil {
		_ecfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0070o\u0073"}}
		e.EncodeElement(_aabg.Pos, _ecfe)
	}
	if _aabg.VertJc != nil {
		_edab := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0076\u0065\u0072\u0074\u004a\u0063"}}
		e.EncodeElement(_aabg.VertJc, _edab)
	}
	if _aabg.CtrlPr != nil {
		_ccdf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_aabg.CtrlPr, _ccdf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_aegec *CT_LimLowPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aegec.CtrlPr != nil {
		_fcbb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_aegec.CtrlPr, _fcbb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_cbcf *OMath) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d:\u006f\u004d\u0061\u0074\u0068"
	return _cbcf.CT_OMath.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_FuncPr and its children, prefixing error messages with path
func (_dfaf *CT_FuncPr) ValidateWithPath(path string) error {
	if _dfaf.CtrlPr != nil {
		if _ccga := _dfaf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _ccga != nil {
			return _ccga
		}
	}
	return nil
}

type CT_DPr struct {
	BegChr *CT_Char
	SepChr *CT_Char
	EndChr *CT_Char
	Grow   *CT_OnOff
	Shp    *CT_Shp
	CtrlPr *CT_CtrlPr
}

func NewCT_EqArr() *CT_EqArr { _eddf := &CT_EqArr{}; return _eddf }

type CT_Char struct{ ValAttr string }

// Validate validates the EG_ScriptStyle and its children
func (_dgef *EG_ScriptStyle) Validate() error {
	return _dgef.ValidateWithPath("\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074S\u0074\u0079\u006c\u0065")
}

func (_cecf *CT_YAlign) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_fcbc, _efab := _cecf.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _efab != nil {
		return _efab
	}
	start.Attr = append(start.Attr, _fcbc)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fgcg *CT_Nary) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fgcg.Sub = NewCT_OMathArg()
	_fgcg.Sup = NewCT_OMathArg()
	_fgcg.E = NewCT_OMathArg()
_ffae:
	for {
		_bbbg, _affg := d.Token()
		if _affg != nil {
			return _affg
		}
		switch _dfdc := _bbbg.(type) {
		case _f.StartElement:
			switch _dfdc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079\u0050\u0072"}:
				_fgcg.NaryPr = NewCT_NaryPr()
				if _fbgg := d.DecodeElement(_fgcg.NaryPr, &_dfdc); _fbgg != nil {
					return _fbgg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _gfeed := d.DecodeElement(_fgcg.Sub, &_dfdc); _gfeed != nil {
					return _gfeed
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _bgeg := d.DecodeElement(_fgcg.Sup, &_dfdc); _bgeg != nil {
					return _bgeg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _eef := d.DecodeElement(_fgcg.E, &_dfdc); _eef != nil {
					return _eef
				}
			default:
				_a.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u0061\u0072\u0079\u0020\u0025\u0076", _dfdc.Name)
				if _fcfe := d.Skip(); _fcfe != nil {
					return _fcfe
				}
			}
		case _f.EndElement:
			break _ffae
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_F and its children, prefixing error messages with path
func (_afgf *CT_F) ValidateWithPath(path string) error {
	if _afgf.FPr != nil {
		if _bbc := _afgf.FPr.ValidateWithPath(path + "\u002f\u0046\u0050\u0072"); _bbc != nil {
			return _bbc
		}
	}
	if _dfec := _afgf.Num.ValidateWithPath(path + "\u002f\u004e\u0075\u006d"); _dfec != nil {
		return _dfec
	}
	if _ccfe := _afgf.Den.ValidateWithPath(path + "\u002f\u0044\u0065\u006e"); _ccfe != nil {
		return _ccfe
	}
	return nil
}

func (_eacdc *ST_TopBot) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_eacdc = 0
	case "\u0074\u006f\u0070":
		*_eacdc = 1
	case "\u0062\u006f\u0074":
		*_eacdc = 2
	}
	return nil
}

func NewCT_Text() *CT_Text { _bdee := &CT_Text{}; return _bdee }

type CT_LimUpp struct {
	LimUppPr *CT_LimUppPr
	E        *CT_OMathArg
	Lim      *CT_OMathArg
}

func (_eeeb ST_Jc) ValidateWithPath(path string) error {
	switch _eeeb {
	case 0, 1, 2, 3, 4:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeeb))
	}
	return nil
}

func NewCT_Box() *CT_Box { _dga := &CT_Box{}; _dga.E = NewCT_OMathArg(); return _dga }

const (
	ST_JcUnset       ST_Jc = 0
	ST_JcLeft        ST_Jc = 1
	ST_JcRight       ST_Jc = 2
	ST_JcCenter      ST_Jc = 3
	ST_JcCenterGroup ST_Jc = 4
)

func (_cabga *CT_R) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bbaf:
	for {
		_edcdb, _edga := d.Token()
		if _edga != nil {
			return _edga
		}
		switch _feac := _edcdb.(type) {
		case _f.StartElement:
			switch _feac.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0050\u0072"}:
				_cabga.RPr = NewCT_RPR()
				if _fcab := d.DecodeElement(_cabga.RPr, &_feac); _fcab != nil {
					return _fcab
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074"}:
				_bcga := NewCT_RChoice()
				if _begde := d.DecodeElement(&_bcga.T, &_feac); _begde != nil {
					return _begde
				}
				_cabga.Choice = append(_cabga.Choice, _bcga)
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0052\u0020\u0025\u0076", _feac.Name)
				if _gbcc := d.Skip(); _gbcc != nil {
					return _gbcc
				}
			}
		case _f.EndElement:
			break _bbaf
		case _f.CharData:
		}
	}
	return nil
}

type OMath struct{ CT_OMath }

// ValidateWithPath validates the CT_DPr and its children, prefixing error messages with path
func (_bddb *CT_DPr) ValidateWithPath(path string) error {
	if _bddb.BegChr != nil {
		if _aacd := _bddb.BegChr.ValidateWithPath(path + "\u002fB\u0065\u0067\u0043\u0068\u0072"); _aacd != nil {
			return _aacd
		}
	}
	if _bddb.SepChr != nil {
		if _efcf := _bddb.SepChr.ValidateWithPath(path + "\u002fS\u0065\u0070\u0043\u0068\u0072"); _efcf != nil {
			return _efcf
		}
	}
	if _bddb.EndChr != nil {
		if _dfa := _bddb.EndChr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0068\u0072"); _dfa != nil {
			return _dfa
		}
	}
	if _bddb.Grow != nil {
		if _ccf := _bddb.Grow.ValidateWithPath(path + "\u002f\u0047\u0072o\u0077"); _ccf != nil {
			return _ccf
		}
	}
	if _bddb.Shp != nil {
		if _ebac := _bddb.Shp.ValidateWithPath(path + "\u002f\u0053\u0068\u0070"); _ebac != nil {
			return _ebac
		}
	}
	if _bddb.CtrlPr != nil {
		if _aff := _bddb.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aff != nil {
			return _aff
		}
	}
	return nil
}

func (_dd *CT_Bar) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dd.E = NewCT_OMathArg()
_aeg:
	for {
		_eb, _egc := d.Token()
		if _egc != nil {
			return _egc
		}
		switch _dda := _eb.(type) {
		case _f.StartElement:
			switch _dda.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072P\u0072"}:
				_dd.BarPr = NewCT_BarPr()
				if _fadd := d.DecodeElement(_dd.BarPr, &_dda); _fadd != nil {
					return _fadd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dgc := d.DecodeElement(_dd.E, &_dda); _dgc != nil {
					return _dgc
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0072\u0020\u0025\u0076", _dda.Name)
				if _eaa := d.Skip(); _eaa != nil {
					return _eaa
				}
			}
		case _f.EndElement:
			break _aeg
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MCPr and its children
func (_edbf *CT_MCPr) Validate() error {
	return _edbf.ValidateWithPath("\u0043T\u005f\u004d\u0043\u0050\u0072")
}

func (_gfb *CT_BorderBoxPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fgg:
	for {
		_afg, _bae := d.Token()
		if _bae != nil {
			return _bae
		}
		switch _bee := _afg.(type) {
		case _f.StartElement:
			switch _bee.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0054\u006f\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0054\u006f\u0070"}:
				_gfb.HideTop = NewCT_OnOff()
				if _gdfd := d.DecodeElement(_gfb.HideTop, &_bee); _gdfd != nil {
					return _gdfd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0042\u006f\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0042\u006f\u0074"}:
				_gfb.HideBot = NewCT_OnOff()
				if _ddg := d.DecodeElement(_gfb.HideBot, &_bee); _ddg != nil {
					return _ddg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}:
				_gfb.HideLeft = NewCT_OnOff()
				if _bce := d.DecodeElement(_gfb.HideLeft, &_bee); _bce != nil {
					return _bce
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0052\u0069\u0067\u0068t"}:
				_gfb.HideRight = NewCT_OnOff()
				if _bg := d.DecodeElement(_gfb.HideRight, &_bee); _bg != nil {
					return _bg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0048"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0048"}:
				_gfb.StrikeH = NewCT_OnOff()
				if _gea := d.DecodeElement(_gfb.StrikeH, &_bee); _gea != nil {
					return _gea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0056"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0056"}:
				_gfb.StrikeV = NewCT_OnOff()
				if _ecc := d.DecodeElement(_gfb.StrikeV, &_bee); _ecc != nil {
					return _ecc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}:
				_gfb.StrikeBLTR = NewCT_OnOff()
				if _ab := d.DecodeElement(_gfb.StrikeBLTR, &_bee); _ab != nil {
					return _ab
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}:
				_gfb.StrikeTLBR = NewCT_OnOff()
				if _bdg := d.DecodeElement(_gfb.StrikeTLBR, &_bee); _bdg != nil {
					return _bdg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gfb.CtrlPr = NewCT_CtrlPr()
				if _ed := d.DecodeElement(_gfb.CtrlPr, &_bee); _ed != nil {
					return _ed
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0042o\u0078P\u0072\u0020\u0025\u0076", _bee.Name)
				if _ceb := d.Skip(); _ceb != nil {
					return _ceb
				}
			}
		case _f.EndElement:
			break _fgg
		case _f.CharData:
		}
	}
	return nil
}

type CT_SSubSupPr struct {
	AlnScr *CT_OnOff
	CtrlPr *CT_CtrlPr
}

func (_dcge *CT_SSupPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dcge.CtrlPr != nil {
		_aede := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_dcge.CtrlPr, _aede)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_add ST_Jc) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_fcdg := _f.Attr{}
	_fcdg.Name = name
	switch _add {
	case ST_JcUnset:
		_fcdg.Value = ""
	case ST_JcLeft:
		_fcdg.Value = "\u006c\u0065\u0066\u0074"
	case ST_JcRight:
		_fcdg.Value = "\u0072\u0069\u0067h\u0074"
	case ST_JcCenter:
		_fcdg.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_JcCenterGroup:
		_fcdg.Value = "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	}
	return _fcdg, nil
}

func NewCT_MathPr() *CT_MathPr { _abbc := &CT_MathPr{}; return _abbc }

func (_dfba *MathPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dfba.CT_MathPr = *NewCT_MathPr()
_acac:
	for {
		_cdef, _deef := d.Token()
		if _deef != nil {
			return _deef
		}
		switch _cdddb := _cdef.(type) {
		case _f.StartElement:
			switch _cdddb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}:
				_dfba.MathFont = NewCT_String()
				if _beda := d.DecodeElement(_dfba.MathFont, &_cdddb); _beda != nil {
					return _beda
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}:
				_dfba.BrkBin = NewCT_BreakBin()
				if _ddea := d.DecodeElement(_dfba.BrkBin, &_cdddb); _ddea != nil {
					return _ddea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}:
				_dfba.BrkBinSub = NewCT_BreakBinSub()
				if _dgcb := d.DecodeElement(_dfba.BrkBinSub, &_cdddb); _dgcb != nil {
					return _dgcb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}:
				_dfba.SmallFrac = NewCT_OnOff()
				if _bedb := d.DecodeElement(_dfba.SmallFrac, &_cdddb); _bedb != nil {
					return _bedb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}:
				_dfba.DispDef = NewCT_OnOff()
				if _gfeef := d.DecodeElement(_dfba.DispDef, &_cdddb); _gfeef != nil {
					return _gfeef
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}:
				_dfba.LMargin = NewCT_TwipsMeasure()
				if _edbc := d.DecodeElement(_dfba.LMargin, &_cdddb); _edbc != nil {
					return _edbc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}:
				_dfba.RMargin = NewCT_TwipsMeasure()
				if _cdfda := d.DecodeElement(_dfba.RMargin, &_cdddb); _cdfda != nil {
					return _cdfda
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}:
				_dfba.DefJc = NewCT_OMathJc()
				if _gbce := d.DecodeElement(_dfba.DefJc, &_cdddb); _gbce != nil {
					return _gbce
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}:
				_dfba.PreSp = NewCT_TwipsMeasure()
				if _bfea := d.DecodeElement(_dfba.PreSp, &_cdddb); _bfea != nil {
					return _bfea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}:
				_dfba.PostSp = NewCT_TwipsMeasure()
				if _adfg := d.DecodeElement(_dfba.PostSp, &_cdddb); _adfg != nil {
					return _adfg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}:
				_dfba.InterSp = NewCT_TwipsMeasure()
				if _adgb := d.DecodeElement(_dfba.InterSp, &_cdddb); _adgb != nil {
					return _adgb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}:
				_dfba.IntraSp = NewCT_TwipsMeasure()
				if _dfdf := d.DecodeElement(_dfba.IntraSp, &_cdddb); _dfdf != nil {
					return _dfdf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_dfba.Choice = NewCT_MathPrChoice()
				if _acea := d.DecodeElement(&_dfba.Choice.WrapIndent, &_cdddb); _acea != nil {
					return _acea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_dfba.Choice = NewCT_MathPrChoice()
				if _cgac := d.DecodeElement(&_dfba.Choice.WrapRight, &_cdddb); _cgac != nil {
					return _cgac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}:
				_dfba.IntLim = NewCT_LimLoc()
				if _ffgc := d.DecodeElement(_dfba.IntLim, &_cdddb); _ffgc != nil {
					return _ffgc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}:
				_dfba.NaryLim = NewCT_LimLoc()
				if _bffg := d.DecodeElement(_dfba.NaryLim, &_cdddb); _bffg != nil {
					return _bffg
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0061\u0074\u0068\u0050\u0072\u0020\u0025\u0076", _cdddb.Name)
				if _dcaa := d.Skip(); _dcaa != nil {
					return _dcaa
				}
			}
		case _f.EndElement:
			break _acac
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_SPrePr() *CT_SPrePr { _faec := &CT_SPrePr{}; return _faec }

func ParseUnionST_TwipsMeasure(s string) (_ea.ST_TwipsMeasure, error) {
	_bcecg := _ea.ST_TwipsMeasure{}
	if _ea.ST_PositiveUniversalMeasurePatternRe.MatchString(s) {
		_bcecg.ST_PositiveUniversalMeasure = &s
	} else {
		_abba, _dbdf := _fa.ParseFloat(s, 64)
		if _dbdf != nil {
			return _bcecg, _ef.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0075\u0069\u006e\u0074\u003a\u0020%\u0073", s, _dbdf)
		}
		_bcecg.ST_UnsignedDecimalNumber = _a.Uint64(uint64(_abba))
	}
	return _bcecg, nil
}

type OMathPara struct{ CT_OMathPara }

func NewCT_Phant() *CT_Phant { _fefd := &CT_Phant{}; _fefd.E = NewCT_OMathArg(); return _fefd }

// ValidateWithPath validates the CT_CtrlPr and its children, prefixing error messages with path
func (_gdd *CT_CtrlPr) ValidateWithPath(path string) error { return nil }

type CT_RChoice struct{ T []*CT_Text }

func (_ccgc *ST_Jc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dcab, _ccddg := d.Token()
	if _ccddg != nil {
		return _ccddg
	}
	if _cedd, _dbbg := _dcab.(_f.EndElement); _dbbg && _cedd.Name == start.Name {
		*_ccgc = 1
		return nil
	}
	if _ebbf, _geed := _dcab.(_f.CharData); !_geed {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcab)
	} else {
		switch string(_ebbf) {
		case "":
			*_ccgc = 0
		case "\u006c\u0065\u0066\u0074":
			*_ccgc = 1
		case "\u0072\u0069\u0067h\u0074":
			*_ccgc = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_ccgc = 3
		case "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_ccgc = 4
		}
	}
	_dcab, _ccddg = d.Token()
	if _ccddg != nil {
		return _ccddg
	}
	if _ccaf, _aedca := _dcab.(_f.EndElement); _aedca && _ccaf.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcab)
}

type CT_MathPrChoice struct {
	WrapIndent *CT_TwipsMeasure
	WrapRight  *CT_OnOff
}

func (_ccb *CT_MPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ffda:
	for {
		_bdef, _bdbg := d.Token()
		if _bdbg != nil {
			return _bdbg
		}
		switch _dcbbg := _bdef.(type) {
		case _f.StartElement:
			switch _dcbbg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}:
				_ccb.BaseJc = NewCT_YAlign()
				if _dac := d.DecodeElement(_ccb.BaseJc, &_dcbbg); _dac != nil {
					return _dac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070l\u0063\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070l\u0063\u0048\u0069\u0064\u0065"}:
				_ccb.PlcHide = NewCT_OnOff()
				if _gggfe := d.DecodeElement(_ccb.PlcHide, &_dcbbg); _gggfe != nil {
					return _gggfe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}:
				_ccb.RSpRule = NewCT_SpacingRule()
				if _cde := d.DecodeElement(_ccb.RSpRule, &_dcbbg); _cde != nil {
					return _cde
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063G\u0070\u0052\u0075\u006c\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063G\u0070\u0052\u0075\u006c\u0065"}:
				_ccb.CGpRule = NewCT_SpacingRule()
				if _aggd := d.DecodeElement(_ccb.CGpRule, &_dcbbg); _aggd != nil {
					return _aggd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0053\u0070"}:
				_ccb.RSp = NewCT_UnSignedInteger()
				if _agdag := d.DecodeElement(_ccb.RSp, &_dcbbg); _agdag != nil {
					return _agdag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0053\u0070"}:
				_ccb.CSp = NewCT_UnSignedInteger()
				if _gdda := d.DecodeElement(_ccb.CSp, &_dcbbg); _gdda != nil {
					return _gdda
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0047\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0047\u0070"}:
				_ccb.CGp = NewCT_UnSignedInteger()
				if _dbda := d.DecodeElement(_ccb.CGp, &_dcbbg); _dbda != nil {
					return _dbda
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u0073"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u0073"}:
				_ccb.Mcs = NewCT_MCS()
				if _ecdd := d.DecodeElement(_ccb.Mcs, &_dcbbg); _ecdd != nil {
					return _ecdd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_ccb.CtrlPr = NewCT_CtrlPr()
				if _cfbf := d.DecodeElement(_ccb.CtrlPr, &_dcbbg); _cfbf != nil {
					return _cfbf
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0050\u0072\u0020\u0025\u0076", _dcbbg.Name)
				if _adff := d.Skip(); _adff != nil {
					return _adff
				}
			}
		case _f.EndElement:
			break _ffda
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MR and its children, prefixing error messages with path
func (_ebbb *CT_MR) ValidateWithPath(path string) error {
	for _debfc, _aacg := range _ebbb.E {
		if _gfde := _aacg.ValidateWithPath(_ef.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _debfc)); _gfde != nil {
			return _gfde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MathPr and its children, prefixing error messages with path
func (_eecf *CT_MathPr) ValidateWithPath(path string) error {
	if _eecf.MathFont != nil {
		if _geba := _eecf.MathFont.ValidateWithPath(path + "\u002fM\u0061\u0074\u0068\u0046\u006f\u006et"); _geba != nil {
			return _geba
		}
	}
	if _eecf.BrkBin != nil {
		if _bdcbc := _eecf.BrkBin.ValidateWithPath(path + "\u002fB\u0072\u006b\u0042\u0069\u006e"); _bdcbc != nil {
			return _bdcbc
		}
	}
	if _eecf.BrkBinSub != nil {
		if _acca := _eecf.BrkBinSub.ValidateWithPath(path + "\u002f\u0042\u0072\u006b\u0042\u0069\u006e\u0053\u0075\u0062"); _acca != nil {
			return _acca
		}
	}
	if _eecf.SmallFrac != nil {
		if _egff := _eecf.SmallFrac.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u006c\u006c\u0046\u0072\u0061\u0063"); _egff != nil {
			return _egff
		}
	}
	if _eecf.DispDef != nil {
		if _bgaf := _eecf.DispDef.ValidateWithPath(path + "\u002f\u0044\u0069\u0073\u0070\u0044\u0065\u0066"); _bgaf != nil {
			return _bgaf
		}
	}
	if _eecf.LMargin != nil {
		if _aafg := _eecf.LMargin.ValidateWithPath(path + "\u002f\u004c\u004d\u0061\u0072\u0067\u0069\u006e"); _aafg != nil {
			return _aafg
		}
	}
	if _eecf.RMargin != nil {
		if _gfgg := _eecf.RMargin.ValidateWithPath(path + "\u002f\u0052\u004d\u0061\u0072\u0067\u0069\u006e"); _gfgg != nil {
			return _gfgg
		}
	}
	if _eecf.DefJc != nil {
		if _fgfe := _eecf.DefJc.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u004a\u0063"); _fgfe != nil {
			return _fgfe
		}
	}
	if _eecf.PreSp != nil {
		if _dca := _eecf.PreSp.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0053\u0070"); _dca != nil {
			return _dca
		}
	}
	if _eecf.PostSp != nil {
		if _ffcaf := _eecf.PostSp.ValidateWithPath(path + "\u002fP\u006f\u0073\u0074\u0053\u0070"); _ffcaf != nil {
			return _ffcaf
		}
	}
	if _eecf.InterSp != nil {
		if _bgab := _eecf.InterSp.ValidateWithPath(path + "\u002f\u0049\u006e\u0074\u0065\u0072\u0053\u0070"); _bgab != nil {
			return _bgab
		}
	}
	if _eecf.IntraSp != nil {
		if _beff := _eecf.IntraSp.ValidateWithPath(path + "\u002f\u0049\u006e\u0074\u0072\u0061\u0053\u0070"); _beff != nil {
			return _beff
		}
	}
	if _eecf.Choice != nil {
		if _dcbg := _eecf.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dcbg != nil {
			return _dcbg
		}
	}
	if _eecf.IntLim != nil {
		if _fcf := _eecf.IntLim.ValidateWithPath(path + "\u002fI\u006e\u0074\u004c\u0069\u006d"); _fcf != nil {
			return _fcf
		}
	}
	if _eecf.NaryLim != nil {
		if _fgfb := _eecf.NaryLim.ValidateWithPath(path + "\u002f\u004e\u0061\u0072\u0079\u004c\u0069\u006d"); _fgfb != nil {
			return _fgfb
		}
	}
	return nil
}

func (_aedc *OMathPara) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_aedc.CT_OMathPara = *NewCT_OMathPara()
_gegg:
	for {
		_cgegg, _cbcd := d.Token()
		if _cbcd != nil {
			return _cbcd
		}
		switch _aegdf := _cgegg.(type) {
		case _f.StartElement:
			switch _aegdf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}:
				_aedc.OMathParaPr = NewCT_OMathParaPr()
				if _gebc := d.DecodeElement(_aedc.OMathParaPr, &_aegdf); _gebc != nil {
					return _gebc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}:
				_eagg := NewCT_OMath()
				if _bdca := d.DecodeElement(_eagg, &_aegdf); _bdca != nil {
					return _bdca
				}
				_aedc.OMath = append(_aedc.OMath, _eagg)
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061 \u0025\u0076", _aegdf.Name)
				if _gagf := d.Skip(); _gagf != nil {
					return _gagf
				}
			}
		case _f.EndElement:
			break _gegg
		case _f.CharData:
		}
	}
	return nil
}

func (_bbgc *CT_M) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bbgc.MPr != nil {
		_fcbd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006dP\u0072"}}
		e.EncodeElement(_bbgc.MPr, _fcbd)
	}
	_bgg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0072"}}
	for _, _gebg := range _bbgc.Mr {
		e.EncodeElement(_gebg, _bgg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_MR() *CT_MR { _ccbd := &CT_MR{}; return _ccbd }

func NewCT_LimLoc() *CT_LimLoc { _dagf := &CT_LimLoc{}; _dagf.ValAttr = ST_LimLoc(1); return _dagf }

func (_geafe ST_LimLoc) Validate() error { return _geafe.ValidateWithPath("") }

type CT_RPR struct {
	Lit    *CT_OnOff
	Choice *CT_RPRChoice
	Brk    *CT_ManualBreak
	Aln    *CT_OnOff
}

// ValidateWithPath validates the CT_FType and its children, prefixing error messages with path
func (_bbg *CT_FType) ValidateWithPath(path string) error {
	if _bbg.ValAttr == ST_FTypeUnset {
		return _ef.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ggd := _bbg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ggd != nil {
		return _ggd
	}
	return nil
}

func (_ggge *CT_DPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ggge.BegChr != nil {
		_bfeg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0065\u0067\u0043\u0068\u0072"}}
		e.EncodeElement(_ggge.BegChr, _bfeg)
	}
	if _ggge.SepChr != nil {
		_gfa := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0065\u0070\u0043\u0068\u0072"}}
		e.EncodeElement(_ggge.SepChr, _gfa)
	}
	if _ggge.EndChr != nil {
		_ceg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065\u006e\u0064\u0043\u0068\u0072"}}
		e.EncodeElement(_ggge.EndChr, _ceg)
	}
	if _ggge.Grow != nil {
		_fcb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0077"}}
		e.EncodeElement(_ggge.Grow, _fcb)
	}
	if _ggge.Shp != nil {
		_cfa := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073h\u0070"}}
		e.EncodeElement(_ggge.Shp, _cfa)
	}
	if _ggge.CtrlPr != nil {
		_gbgb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ggge.CtrlPr, _gbgb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dgbge *CT_TwipsMeasure) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _cdcd := range start.Attr {
		if _cdcd.Name.Local == "\u0076\u0061\u006c" {
			_gdeb, _gcfae := ParseUnionST_TwipsMeasure(_cdcd.Value)
			if _gcfae != nil {
				return _gcfae
			}
			_dgbge.ValAttr = _gdeb
			continue
		}
	}
	for {
		_babcc, _cbff := d.Token()
		if _cbff != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0077\u0069\u0070\u0073\u004de\u0061\u0073\u0075r\u0065:\u0020\u0025\u0073", _cbff)
		}
		if _cfac, _gega := _babcc.(_f.EndElement); _gega && _cfac.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ManualBreak and its children
func (_begd *CT_ManualBreak) Validate() error {
	return _begd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u006e\u0075\u0061\u006cB\u0072\u0065\u0061\u006b")
}

func (_adcfg ST_TopBot) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_adcfg.String(), start)
}

type CT_FType struct{ ValAttr ST_FType }

// Validate validates the CT_MathPr and its children
func (_cfge *CT_MathPr) Validate() error {
	return _cfge.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0074\u0068\u0050r")
}

func (_cdfd *CT_Rad) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cdfd.Deg = NewCT_OMathArg()
	_cdfd.E = NewCT_OMathArg()
_gdfe:
	for {
		_bbefa, _acdg := d.Token()
		if _acdg != nil {
			return _acdg
		}
		switch _eadc := _bbefa.(type) {
		case _f.StartElement:
			switch _eadc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064P\u0072"}:
				_cdfd.RadPr = NewCT_RadPr()
				if _gcgf := d.DecodeElement(_cdfd.RadPr, &_eadc); _gcgf != nil {
					return _gcgf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0067"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0067"}:
				if _efce := d.DecodeElement(_cdfd.Deg, &_eadc); _efce != nil {
					return _efce
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dbfd := d.DecodeElement(_cdfd.E, &_eadc); _dbfd != nil {
					return _dbfd
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0061\u0064\u0020\u0025\u0076", _eadc.Name)
				if _beebg := d.Skip(); _beebg != nil {
					return _beebg
				}
			}
		case _f.EndElement:
			break _gdfe
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Bar and its children
func (_gb *CT_Bar) Validate() error {
	return _gb.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0072")
}

func (_eefb ST_TopBot) Validate() error { return _eefb.ValidateWithPath("") }

const (
	ST_LimLocUnset  ST_LimLoc = 0
	ST_LimLocUndOvr ST_LimLoc = 1
	ST_LimLocSubSup ST_LimLoc = 2
)

func (_cea *CT_MR) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_eaaa:
	for {
		_aaba, _degf := d.Token()
		if _degf != nil {
			return _degf
		}
		switch _fcba := _aaba.(type) {
		case _f.StartElement:
			switch _fcba.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_acfa := NewCT_OMathArg()
				if _cabf := d.DecodeElement(_acfa, &_fcba); _cabf != nil {
					return _cabf
				}
				_cea.E = append(_cea.E, _acfa)
			default:
				_a.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fM\u0052 \u0025\u0076", _fcba.Name)
				if _bagf := d.Skip(); _bagf != nil {
					return _bagf
				}
			}
		case _f.EndElement:
			break _eaaa
		case _f.CharData:
		}
	}
	return nil
}

func (_acdfc ST_BreakBin) ValidateWithPath(path string) error {
	switch _acdfc {
	case 0, 1, 2, 3:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acdfc))
	}
	return nil
}

type CT_RPRChoice struct{ Nor *CT_OnOff }

func NewCT_DPr() *CT_DPr { _aeb := &CT_DPr{}; return _aeb }

// ValidateWithPath validates the EG_ScriptStyle and its children, prefixing error messages with path
func (_dgec *EG_ScriptStyle) ValidateWithPath(path string) error {
	if _dgec.Scr != nil {
		if _dafdg := _dgec.Scr.ValidateWithPath(path + "\u002f\u0053\u0063\u0072"); _dafdg != nil {
			return _dafdg
		}
	}
	if _dgec.Sty != nil {
		if _dadbf := _dgec.Sty.ValidateWithPath(path + "\u002f\u0053\u0074\u0079"); _dadbf != nil {
			return _dadbf
		}
	}
	return nil
}

func (_bfbf *CT_ManualBreak) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bfbf.AlnAtAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d:\u0061\u006c\u006e\u0041\u0074"}, Value: _ef.Sprintf("\u0025\u0076", *_bfbf.AlnAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fdega *CT_UnSignedInteger) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _beae := range start.Attr {
		if _beae.Name.Local == "\u0076\u0061\u006c" {
			_afedc, _bfgb := _fa.ParseUint(_beae.Value, 10, 32)
			if _bfgb != nil {
				return _bfgb
			}
			_fdega.ValAttr = uint32(_afedc)
			continue
		}
	}
	for {
		_dabd, _fcbda := d.Token()
		if _fcbda != nil {
			return _ef.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0055\u006e\u0053\u0069\u0067\u006e\u0065d\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _fcbda)
		}
		if _daff, _fcec := _dabd.(_f.EndElement); _fcec && _daff.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_BreakBin struct{ ValAttr ST_BreakBin }

func (_gbc *CT_GroupChr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gbc.E = NewCT_OMathArg()
_ccda:
	for {
		_abgd, _dgce := d.Token()
		if _dgce != nil {
			return _dgce
		}
		switch _fdgg := _abgd.(type) {
		case _f.StartElement:
			switch _fdgg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}:
				_gbc.GroupChrPr = NewCT_GroupChrPr()
				if _eadb := d.DecodeElement(_gbc.GroupChrPr, &_fdgg); _eadb != nil {
					return _eadb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _adec := d.DecodeElement(_gbc.E, &_fdgg); _adec != nil {
					return _adec
				}
			default:
				_a.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0020\u0025\u0076", _fdgg.Name)
				if _ecdag := d.Skip(); _ecdag != nil {
					return _ecdag
				}
			}
		case _f.EndElement:
			break _ccda
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OMath and its children, prefixing error messages with path
func (_gcea *CT_OMath) ValidateWithPath(path string) error {
	for _ebbg, _eecg := range _gcea.EG_OMathMathElements {
		if _ecfdd := _eecg.ValidateWithPath(_ef.Sprintf("%\u0073\u002f\u0045\u0047\u005f\u004fM\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006ce\u006d\u0065\u006et\u0073[\u0025\u0064\u005d", path, _ebbg)); _ecfdd != nil {
			return _ecfdd
		}
	}
	return nil
}

func (_aeeg ST_BreakBin) String() string {
	switch _aeeg {
	case 0:
		return ""
	case 1:
		return "\u0062\u0065\u0066\u006f\u0072\u0065"
	case 2:
		return "\u0061\u0066\u0074e\u0072"
	case 3:
		return "\u0072\u0065\u0070\u0065\u0061\u0074"
	}
	return ""
}

func (_daba *CT_SSupPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bgfg:
	for {
		_cage, _agebg := d.Token()
		if _agebg != nil {
			return _agebg
		}
		switch _fgbf := _cage.(type) {
		case _f.StartElement:
			switch _fgbf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_daba.CtrlPr = NewCT_CtrlPr()
				if _gbdd := d.DecodeElement(_daba.CtrlPr, &_fgbf); _gbdd != nil {
					return _gbdd
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0053\u0075p\u0050\u0072 \u0025\u0076", _fgbf.Name)
				if _bfde := d.Skip(); _bfde != nil {
					return _bfde
				}
			}
		case _f.EndElement:
			break _bgfg
		case _f.CharData:
		}
	}
	return nil
}

func (_dcfd *EG_ScriptStyle) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ecfg:
	for {
		_fcbcb, _dfef := d.Token()
		if _dfef != nil {
			return _dfef
		}
		switch _cafc := _fcbcb.(type) {
		case _f.StartElement:
			switch _cafc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0063\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0063\u0072"}:
				_dcfd.Scr = NewCT_Script()
				if _aegea := d.DecodeElement(_dcfd.Scr, &_cafc); _aegea != nil {
					return _aegea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0079"}:
				_dcfd.Sty = NewCT_Style()
				if _cbcgb := d.DecodeElement(_dcfd.Sty, &_cafc); _cbcgb != nil {
					return _cbcgb
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074\u0053t\u0079l\u0065\u0020\u0025\u0076", _cafc.Name)
				if _efgg := d.Skip(); _efgg != nil {
					return _efgg
				}
			}
		case _f.EndElement:
			break _ecfg
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FPr and its children
func (_gfee *CT_FPr) Validate() error {
	return _gfee.ValidateWithPath("\u0043\u0054\u005f\u0046\u0050\u0072")
}

func (_abga *CT_MCPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_agb:
	for {
		_ffca, _effc := d.Token()
		if _effc != nil {
			return _effc
		}
		switch _cfec := _ffca.(type) {
		case _f.StartElement:
			switch _cfec.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u006f\u0075n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u006f\u0075n\u0074"}:
				_abga.Count = NewCT_Integer255()
				if _febd := d.DecodeElement(_abga.Count, &_cfec); _febd != nil {
					return _febd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u004a\u0063"}:
				_abga.McJc = NewCT_XAlign()
				if _cabd := d.DecodeElement(_abga.McJc, &_cfec); _cabd != nil {
					return _cabd
				}
			default:
				_a.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004d\u0043\u0050\u0072\u0020\u0025\u0076", _cfec.Name)
				if _cda := d.Skip(); _cda != nil {
					return _cda
				}
			}
		case _f.EndElement:
			break _agb
		case _f.CharData:
		}
	}
	return nil
}

func (_agfff *ST_Shp) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gffd, _dcac := d.Token()
	if _dcac != nil {
		return _dcac
	}
	if _bbf, _adcgf := _gffd.(_f.EndElement); _adcgf && _bbf.Name == start.Name {
		*_agfff = 1
		return nil
	}
	if _cccfa, _bgae := _gffd.(_f.CharData); !_bgae {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gffd)
	} else {
		switch string(_cccfa) {
		case "":
			*_agfff = 0
		case "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064":
			*_agfff = 1
		case "\u006d\u0061\u0074c\u0068":
			*_agfff = 2
		}
	}
	_gffd, _dcac = d.Token()
	if _dcac != nil {
		return _dcac
	}
	if _eeac, _adffe := _gffd.(_f.EndElement); _adffe && _eeac.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gffd)
}

func (_egab *ST_FType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_edee, _ddbb := d.Token()
	if _ddbb != nil {
		return _ddbb
	}
	if _deaea, _ccce := _edee.(_f.EndElement); _ccce && _deaea.Name == start.Name {
		*_egab = 1
		return nil
	}
	if _cccfac, _eggdc := _edee.(_f.CharData); !_eggdc {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edee)
	} else {
		switch string(_cccfac) {
		case "":
			*_egab = 0
		case "\u0062\u0061\u0072":
			*_egab = 1
		case "\u0073\u006b\u0077":
			*_egab = 2
		case "\u006c\u0069\u006e":
			*_egab = 3
		case "\u006e\u006f\u0042a\u0072":
			*_egab = 4
		}
	}
	_edee, _ddbb = d.Token()
	if _ddbb != nil {
		return _ddbb
	}
	if _eggdd, _dgced := _edee.(_f.EndElement); _dgced && _eggdd.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edee)
}

func (_bbga *CT_R) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bbga.RPr != nil {
		_bcbc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072P\u0072"}}
		e.EncodeElement(_bbga.RPr, _bcbc)
	}
	if _bbga.Choice != nil {
		for _, _agecb := range _bbga.Choice {
			_agecb.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the OMath and its children, prefixing error messages with path
func (_daad *OMath) ValidateWithPath(path string) error {
	if _bbee := _daad.CT_OMath.ValidateWithPath(path); _bbee != nil {
		return _bbee
	}
	return nil
}

// Validate validates the CT_XAlign and its children
func (_eeea *CT_XAlign) Validate() error {
	return _eeea.ValidateWithPath("\u0043T\u005f\u0058\u0041\u006c\u0069\u0067n")
}

// ValidateWithPath validates the CT_SSub and its children, prefixing error messages with path
func (_ecdgf *CT_SSub) ValidateWithPath(path string) error {
	if _ecdgf.SSubPr != nil {
		if _ccfa := _ecdgf.SSubPr.ValidateWithPath(path + "\u002fS\u0053\u0075\u0062\u0050\u0072"); _ccfa != nil {
			return _ccfa
		}
	}
	if _badc := _ecdgf.E.ValidateWithPath(path + "\u002f\u0045"); _badc != nil {
		return _badc
	}
	if _gcdb := _ecdgf.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _gcdb != nil {
		return _gcdb
	}
	return nil
}

func (_cadb *CT_TopBot) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_adag, _gca := _cadb.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _gca != nil {
		return _gca
	}
	start.Attr = append(start.Attr, _adag)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_EqArrPr struct {
	BaseJc  *CT_YAlign
	MaxDist *CT_OnOff
	ObjDist *CT_OnOff
	RSpRule *CT_SpacingRule
	RSp     *CT_UnSignedInteger
	CtrlPr  *CT_CtrlPr
}

// Validate validates the CT_OMathParaPr and its children
func (_bddd *CT_OMathParaPr) Validate() error {
	return _bddd.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061\u0050\u0072")
}

func (_effcb *ST_Script) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_effcb = 0
	case "\u0072\u006f\u006da\u006e":
		*_effcb = 1
	case "\u0073\u0063\u0072\u0069\u0070\u0074":
		*_effcb = 2
	case "\u0066r\u0061\u006b\u0074\u0075\u0072":
		*_effcb = 3
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b":
		*_effcb = 4
	case "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066":
		*_effcb = 5
	case "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e":
		*_effcb = 6
	}
	return nil
}

func (_gbaa *CT_RadPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gbaa.DegHide != nil {
		_ebbd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0064\u0065\u0067\u0048\u0069\u0064e"}}
		e.EncodeElement(_gbaa.DegHide, _ebbd)
	}
	if _gbaa.CtrlPr != nil {
		_aagg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_gbaa.CtrlPr, _aagg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_afac *CT_F) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _afac.FPr != nil {
		_fafd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066P\u0072"}}
		e.EncodeElement(_afac.FPr, _fafd)
	}
	_bdeg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006eu\u006d"}}
	e.EncodeElement(_afac.Num, _bdeg)
	_bfed := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064e\u006e"}}
	e.EncodeElement(_afac.Den, _bfed)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_GroupChrPr() *CT_GroupChrPr { _dbeb := &CT_GroupChrPr{}; return _dbeb }

// Validate validates the CT_OMathPara and its children
func (_aggf *CT_OMathPara) Validate() error {
	return _aggf.ValidateWithPath("\u0043\u0054\u005fO\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061")
}

// ValidateWithPath validates the CT_M and its children, prefixing error messages with path
func (_dbbf *CT_M) ValidateWithPath(path string) error {
	if _dbbf.MPr != nil {
		if _eddbe := _dbbf.MPr.ValidateWithPath(path + "\u002f\u004d\u0050\u0072"); _eddbe != nil {
			return _eddbe
		}
	}
	for _faea, _bggc := range _dbbf.Mr {
		if _fdgc := _bggc.ValidateWithPath(_ef.Sprintf("\u0025s\u002f\u004d\u0072\u005b\u0025\u0064]", path, _faea)); _fdgc != nil {
			return _fdgc
		}
	}
	return nil
}

type CT_Shp struct{ ValAttr ST_Shp }

func (_daec *CT_RPRChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _daec.Nor != nil {
		_acfb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006eo\u0072"}}
		e.EncodeElement(_daec.Nor, _acfb)
	}
	return nil
}

func (_fcgb *CT_OMathArg) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _fcgb.ArgPr != nil {
		_decd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0061\u0072\u0067\u0050\u0072"}}
		e.EncodeElement(_fcgb.ArgPr, _decd)
	}
	if _fcgb.EG_OMathMathElements != nil {
		for _, _cacc := range _fcgb.EG_OMathMathElements {
			_cacc.MarshalXML(e, _f.StartElement{})
		}
	}
	if _fcgb.CtrlPr != nil {
		_ebfd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_fcgb.CtrlPr, _ebfd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_ebeb *CT_FPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ebeb.Type != nil {
		_faac := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0074\u0079\u0070\u0065"}}
		e.EncodeElement(_ebeb.Type, _faac)
	}
	if _ebeb.CtrlPr != nil {
		_dfb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ebeb.CtrlPr, _dfb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MR and its children
func (_bbcf *CT_MR) Validate() error { return _bbcf.ValidateWithPath("\u0043\u0054\u005fM\u0052") }

func (_dggc ST_Style) Validate() error { return _dggc.ValidateWithPath("") }

func (_deccc *CT_RadPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_geab:
	for {
		_gaad, _gege := d.Token()
		if _gege != nil {
			return _gege
		}
		switch _fgba := _gaad.(type) {
		case _f.StartElement:
			switch _fgba.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064e\u0067\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064e\u0067\u0048\u0069\u0064\u0065"}:
				_deccc.DegHide = NewCT_OnOff()
				if _edbde := d.DecodeElement(_deccc.DegHide, &_fgba); _edbde != nil {
					return _edbde
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_deccc.CtrlPr = NewCT_CtrlPr()
				if _aebdf := d.DecodeElement(_deccc.CtrlPr, &_fgba); _aebdf != nil {
					return _aebdf
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072\u0020\u0025\u0076", _fgba.Name)
				if _ecaae := d.Skip(); _ecaae != nil {
					return _ecaae
				}
			}
		case _f.EndElement:
			break _geab
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RadPr and its children, prefixing error messages with path
func (_efaf *CT_RadPr) ValidateWithPath(path string) error {
	if _efaf.DegHide != nil {
		if _gbca := _efaf.DegHide.ValidateWithPath(path + "\u002f\u0044\u0065\u0067\u0048\u0069\u0064\u0065"); _gbca != nil {
			return _gbca
		}
	}
	if _efaf.CtrlPr != nil {
		if _dceb := _efaf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dceb != nil {
			return _dceb
		}
	}
	return nil
}

func NewOMathPara() *OMathPara {
	_fbeda := &OMathPara{}
	_fbeda.CT_OMathPara = *NewCT_OMathPara()
	return _fbeda
}

type ST_BreakBinSub byte

func (_edae *ST_Jc) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_edae = 0
	case "\u006c\u0065\u0066\u0074":
		*_edae = 1
	case "\u0072\u0069\u0067h\u0074":
		*_edae = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_edae = 3
	case "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_edae = 4
	}
	return nil
}

func NewCT_Script() *CT_Script { _fgbge := &CT_Script{}; return _fgbge }

type CT_Integer2 struct{ ValAttr int64 }

// Validate validates the CT_Nary and its children
func (_dgdf *CT_Nary) Validate() error {
	return _dgdf.ValidateWithPath("\u0043T\u005f\u004e\u0061\u0072\u0079")
}

func (_gde *CT_LimUppPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bbeb:
	for {
		_ggcca, _afb := d.Token()
		if _afb != nil {
			return _afb
		}
		switch _afe := _ggcca.(type) {
		case _f.StartElement:
			switch _afe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gde.CtrlPr = NewCT_CtrlPr()
				if _eeb := d.DecodeElement(_gde.CtrlPr, &_afe); _eeb != nil {
					return _eeb
				}
			default:
				_a.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072\u0020\u0025\u0076", _afe.Name)
				if _bced := d.Skip(); _bced != nil {
					return _bced
				}
			}
		case _f.EndElement:
			break _bbeb
		case _f.CharData:
		}
	}
	return nil
}

func (_gff *CT_Integer2) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", _gff.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_beag *CT_SPrePr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _beag.CtrlPr != nil {
		_beca := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_beag.CtrlPr, _beca)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_SSubPr() *CT_SSubPr { _gcfab := &CT_SSubPr{}; return _gcfab }

func (_dge *CT_Char) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", _dge.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_XAlign struct{ ValAttr _ea.ST_XAlign }

func NewCT_Acc() *CT_Acc { _d := &CT_Acc{}; _d.E = NewCT_OMathArg(); return _d }

type CT_GroupChrPr struct {
	Chr    *CT_Char
	Pos    *CT_TopBot
	VertJc *CT_TopBot
	CtrlPr *CT_CtrlPr
}

func NewCT_Style() *CT_Style { _defa := &CT_Style{}; return _defa }

func NewCT_BorderBoxPr() *CT_BorderBoxPr { _bca := &CT_BorderBoxPr{}; return _bca }

func (_geebb ST_FType) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_babe := _f.Attr{}
	_babe.Name = name
	switch _geebb {
	case ST_FTypeUnset:
		_babe.Value = ""
	case ST_FTypeBar:
		_babe.Value = "\u0062\u0061\u0072"
	case ST_FTypeSkw:
		_babe.Value = "\u0073\u006b\u0077"
	case ST_FTypeLin:
		_babe.Value = "\u006c\u0069\u006e"
	case ST_FTypeNoBar:
		_babe.Value = "\u006e\u006f\u0042a\u0072"
	}
	return _babe, nil
}

type CT_SSupPr struct{ CtrlPr *CT_CtrlPr }

type CT_LimLoc struct{ ValAttr ST_LimLoc }

// Validate validates the CT_Char and its children
func (_fea *CT_Char) Validate() error {
	return _fea.ValidateWithPath("\u0043T\u005f\u0043\u0068\u0061\u0072")
}

// Validate validates the CT_Shp and its children
func (_cba *CT_Shp) Validate() error {
	return _cba.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0070")
}

type CT_Script struct{ ValAttr ST_Script }

type CT_D struct {
	DPr *CT_DPr
	E   []*CT_OMathArg
}

func NewCT_FType() *CT_FType { _ffgeb := &CT_FType{}; _ffgeb.ValAttr = ST_FType(1); return _ffgeb }

type CT_SSubPr struct{ CtrlPr *CT_CtrlPr }

// Validate validates the CT_LimUppPr and its children
func (_eaad *CT_LimUppPr) Validate() error {
	return _eaad.ValidateWithPath("C\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072")
}

func NewCT_SPre() *CT_SPre {
	_gad := &CT_SPre{}
	_gad.Sub = NewCT_OMathArg()
	_gad.Sup = NewCT_OMathArg()
	_gad.E = NewCT_OMathArg()
	return _gad
}

func (_bb *CT_BarPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bb.Pos != nil {
		_gag := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0070o\u0073"}}
		e.EncodeElement(_bb.Pos, _gag)
	}
	if _bb.CtrlPr != nil {
		_cc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bb.CtrlPr, _cc)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Shp and its children, prefixing error messages with path
func (_aagd *CT_Shp) ValidateWithPath(path string) error {
	if _aagd.ValAttr == ST_ShpUnset {
		return _ef.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eafg := _aagd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eafg != nil {
		return _eafg
	}
	return nil
}

func (_bcbeb ST_FType) String() string {
	switch _bcbeb {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0072"
	case 2:
		return "\u0073\u006b\u0077"
	case 3:
		return "\u006c\u0069\u006e"
	case 4:
		return "\u006e\u006f\u0042a\u0072"
	}
	return ""
}

const (
	ST_FTypeUnset ST_FType = 0
	ST_FTypeBar   ST_FType = 1
	ST_FTypeSkw   ST_FType = 2
	ST_FTypeLin   ST_FType = 3
	ST_FTypeNoBar ST_FType = 4
)

func (_ffde *CT_TopBot) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ffde.ValAttr = ST_TopBot(1)
	for _, _bgga := range start.Attr {
		if _bgga.Name.Local == "\u0076\u0061\u006c" {
			_ffde.ValAttr.UnmarshalXMLAttr(_bgga)
			continue
		}
	}
	for {
		_eebe, _gbac := d.Token()
		if _gbac != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0054\u006f\u0070B\u006f\u0074\u003a\u0020\u0025\u0073", _gbac)
		}
		if _cgccd, _beaa := _eebe.(_f.EndElement); _beaa && _cgccd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ggc *CT_BorderBoxPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ggc.HideTop != nil {
		_egg := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0068\u0069\u0064\u0065\u0054\u006fp"}}
		e.EncodeElement(_ggc.HideTop, _egg)
	}
	if _ggc.HideBot != nil {
		_bda := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0068\u0069\u0064\u0065\u0042\u006ft"}}
		e.EncodeElement(_ggc.HideBot, _bda)
	}
	if _ggc.HideLeft != nil {
		_ggg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}}
		e.EncodeElement(_ggc.HideLeft, _ggg)
	}
	if _ggc.HideRight != nil {
		_fb := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0068\u0069\u0064\u0065\u0052\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_ggc.HideRight, _fb)
	}
	if _ggc.StrikeH != nil {
		_ffc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0074\u0072\u0069\u006b\u0065H"}}
		e.EncodeElement(_ggc.StrikeH, _ffc)
	}
	if _ggc.StrikeV != nil {
		_gf := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0074\u0072\u0069\u006b\u0065V"}}
		e.EncodeElement(_ggc.StrikeV, _gf)
	}
	if _ggc.StrikeBLTR != nil {
		_df := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073t\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}}
		e.EncodeElement(_ggc.StrikeBLTR, _df)
	}
	if _ggc.StrikeTLBR != nil {
		_dcf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073t\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}}
		e.EncodeElement(_ggc.StrikeTLBR, _dcf)
	}
	if _ggc.CtrlPr != nil {
		_ebe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ggc.CtrlPr, _ebe)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_Integer255 struct{ ValAttr int64 }

// ValidateWithPath validates the CT_XAlign and its children, prefixing error messages with path
func (_deed *CT_XAlign) ValidateWithPath(path string) error {
	if _deed.ValAttr == _ea.ST_XAlignUnset {
		return _ef.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ccdg := _deed.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ccdg != nil {
		return _ccdg
	}
	return nil
}

func NewCT_LimUppPr() *CT_LimUppPr { _aafec := &CT_LimUppPr{}; return _aafec }

func (_fgdde *CT_SPrePr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_geafc:
	for {
		_babc, _afff := d.Token()
		if _afff != nil {
			return _afff
		}
		switch _gffbf := _babc.(type) {
		case _f.StartElement:
			switch _gffbf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fgdde.CtrlPr = NewCT_CtrlPr()
				if _bagc := d.DecodeElement(_fgdde.CtrlPr, &_gffbf); _bagc != nil {
					return _bagc
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0050\u0072e\u0050\u0072 \u0025\u0076", _gffbf.Name)
				if _gcec := d.Skip(); _gcec != nil {
					return _gcec
				}
			}
		case _f.EndElement:
			break _geafc
		case _f.CharData:
		}
	}
	return nil
}

func (_dega *ST_Shp) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_dega = 0
	case "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064":
		*_dega = 1
	case "\u006d\u0061\u0074c\u0068":
		*_dega = 2
	}
	return nil
}

func (_dec *CT_EqArr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dec.EqArrPr != nil {
		_fba := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0065\u0071\u0041\u0072\u0072\u0050r"}}
		e.EncodeElement(_dec.EqArrPr, _fba)
	}
	_fgga := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	for _, _fbf := range _dec.E {
		e.EncodeElement(_fbf, _fgga)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NaryPr and its children, prefixing error messages with path
func (_dbfa *CT_NaryPr) ValidateWithPath(path string) error {
	if _dbfa.Chr != nil {
		if _caecb := _dbfa.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _caecb != nil {
			return _caecb
		}
	}
	if _dbfa.LimLoc != nil {
		if _bcc := _dbfa.LimLoc.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0063"); _bcc != nil {
			return _bcc
		}
	}
	if _dbfa.Grow != nil {
		if _fdca := _dbfa.Grow.ValidateWithPath(path + "\u002f\u0047\u0072o\u0077"); _fdca != nil {
			return _fdca
		}
	}
	if _dbfa.SubHide != nil {
		if _bbcec := _dbfa.SubHide.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0048\u0069\u0064\u0065"); _bbcec != nil {
			return _bbcec
		}
	}
	if _dbfa.SupHide != nil {
		if _cbef := _dbfa.SupHide.ValidateWithPath(path + "\u002f\u0053\u0075\u0070\u0048\u0069\u0064\u0065"); _cbef != nil {
			return _cbef
		}
	}
	if _dbfa.CtrlPr != nil {
		if _bgdgd := _dbfa.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bgdgd != nil {
			return _bgdgd
		}
	}
	return nil
}

type CT_AccPr struct {
	Chr    *CT_Char
	CtrlPr *CT_CtrlPr
}

type CT_BarPr struct {
	Pos    *CT_TopBot
	CtrlPr *CT_CtrlPr
}

func (_fcga *OMathPara) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u003a\u006f\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061"
	return _fcga.CT_OMathPara.MarshalXML(e, start)
}

func (_degc *CT_Nary) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _degc.NaryPr != nil {
		_ffbb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006e\u0061\u0072\u0079\u0050\u0072"}}
		e.EncodeElement(_degc.NaryPr, _ffbb)
	}
	_cccc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_degc.Sub, _cccc)
	_fafbd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_degc.Sup, _fafbd)
	_ege := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_degc.E, _ege)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EqArrPr and its children, prefixing error messages with path
func (_edb *CT_EqArrPr) ValidateWithPath(path string) error {
	if _edb.BaseJc != nil {
		if _fadac := _edb.BaseJc.ValidateWithPath(path + "\u002fB\u0061\u0073\u0065\u004a\u0063"); _fadac != nil {
			return _fadac
		}
	}
	if _edb.MaxDist != nil {
		if _egd := _edb.MaxDist.ValidateWithPath(path + "\u002f\u004d\u0061\u0078\u0044\u0069\u0073\u0074"); _egd != nil {
			return _egd
		}
	}
	if _edb.ObjDist != nil {
		if _dcfe := _edb.ObjDist.ValidateWithPath(path + "\u002f\u004f\u0062\u006a\u0044\u0069\u0073\u0074"); _dcfe != nil {
			return _dcfe
		}
	}
	if _edb.RSpRule != nil {
		if _fab := _edb.RSpRule.ValidateWithPath(path + "\u002f\u0052\u0053\u0070\u0052\u0075\u006c\u0065"); _fab != nil {
			return _fab
		}
	}
	if _edb.RSp != nil {
		if _dcfg := _edb.RSp.ValidateWithPath(path + "\u002f\u0052\u0053\u0070"); _dcfg != nil {
			return _dcfg
		}
	}
	if _edb.CtrlPr != nil {
		if _ecfd := _edb.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _ecfd != nil {
			return _ecfd
		}
	}
	return nil
}

// Validate validates the OMathPara and its children
func (_fffc *OMathPara) Validate() error {
	return _fffc.ValidateWithPath("\u004fM\u0061\u0074\u0068\u0050\u0061\u0072a")
}

type CT_LimLow struct {
	LimLowPr *CT_LimLowPr
	E        *CT_OMathArg
	Lim      *CT_OMathArg
}

// Validate validates the CT_Acc and its children
func (_ffb *CT_Acc) Validate() error {
	return _ffb.ValidateWithPath("\u0043\u0054\u005f\u0041\u0063\u0063")
}

func (_edba *CT_OMathPara) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _edba.OMathParaPr != nil {
		_baec := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006f\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}}
		e.EncodeElement(_edba.OMathParaPr, _baec)
	}
	_daaa := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006f\u004d\u0061\u0074\u0068"}}
	for _, _ebba := range _edba.OMath {
		e.EncodeElement(_ebba, _daaa)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_cgffc ST_FType) Validate() error { return _cgffc.ValidateWithPath("") }

func (_dfed *OMath) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dfed.CT_OMath = *NewCT_OMath()
_gcfac:
	for {
		_bcgfd, _dede := d.Token()
		if _dede != nil {
			return _dede
		}
		switch _facc := _bcgfd.(type) {
		case _f.StartElement:
			switch _facc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_cbgf := NewEG_OMathMathElements()
				_cbgf.Acc = NewCT_Acc()
				if _fagc := d.DecodeElement(_cbgf.Acc, &_facc); _fagc != nil {
					return _fagc
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _cbgf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_eeda := NewEG_OMathMathElements()
				_eeda.Bar = NewCT_Bar()
				if _gccf := d.DecodeElement(_eeda.Bar, &_facc); _gccf != nil {
					return _gccf
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _eeda)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_bcaa := NewEG_OMathMathElements()
				_bcaa.Box = NewCT_Box()
				if _geebd := d.DecodeElement(_bcaa.Box, &_facc); _geebd != nil {
					return _geebd
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _bcaa)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_edgf := NewEG_OMathMathElements()
				_edgf.BorderBox = NewCT_BorderBox()
				if _fffaa := d.DecodeElement(_edgf.BorderBox, &_facc); _fffaa != nil {
					return _fffaa
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _edgf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_ggec := NewEG_OMathMathElements()
				_ggec.D = NewCT_D()
				if _cegcg := d.DecodeElement(_ggec.D, &_facc); _cegcg != nil {
					return _cegcg
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _ggec)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_bbafd := NewEG_OMathMathElements()
				_bbafd.EqArr = NewCT_EqArr()
				if _adbfe := d.DecodeElement(_bbafd.EqArr, &_facc); _adbfe != nil {
					return _adbfe
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _bbafd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_bcfac := NewEG_OMathMathElements()
				_bcfac.F = NewCT_F()
				if _ecdfb := d.DecodeElement(_bcfac.F, &_facc); _ecdfb != nil {
					return _ecdfb
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _bcfac)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_efag := NewEG_OMathMathElements()
				_efag.Func = NewCT_Func()
				if _bffd := d.DecodeElement(_efag.Func, &_facc); _bffd != nil {
					return _bffd
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _efag)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_aabfg := NewEG_OMathMathElements()
				_aabfg.GroupChr = NewCT_GroupChr()
				if _cbac := d.DecodeElement(_aabfg.GroupChr, &_facc); _cbac != nil {
					return _cbac
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _aabfg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_edaac := NewEG_OMathMathElements()
				_edaac.LimLow = NewCT_LimLow()
				if _dbebg := d.DecodeElement(_edaac.LimLow, &_facc); _dbebg != nil {
					return _dbebg
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _edaac)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_ggca := NewEG_OMathMathElements()
				_ggca.LimUpp = NewCT_LimUpp()
				if _eecb := d.DecodeElement(_ggca.LimUpp, &_facc); _eecb != nil {
					return _eecb
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _ggca)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_gccd := NewEG_OMathMathElements()
				_gccd.M = NewCT_M()
				if _cdag := d.DecodeElement(_gccd.M, &_facc); _cdag != nil {
					return _cdag
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _gccd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_dbbb := NewEG_OMathMathElements()
				_dbbb.Nary = NewCT_Nary()
				if _fdegad := d.DecodeElement(_dbbb.Nary, &_facc); _fdegad != nil {
					return _fdegad
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _dbbb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_acbd := NewEG_OMathMathElements()
				_acbd.Phant = NewCT_Phant()
				if _cgga := d.DecodeElement(_acbd.Phant, &_facc); _cgga != nil {
					return _cgga
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _acbd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_geeec := NewEG_OMathMathElements()
				_geeec.Rad = NewCT_Rad()
				if _fddg := d.DecodeElement(_geeec.Rad, &_facc); _fddg != nil {
					return _fddg
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _geeec)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_bdacb := NewEG_OMathMathElements()
				_bdacb.SPre = NewCT_SPre()
				if _faggd := d.DecodeElement(_bdacb.SPre, &_facc); _faggd != nil {
					return _faggd
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _bdacb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_ebfb := NewEG_OMathMathElements()
				_ebfb.SSub = NewCT_SSub()
				if _dcad := d.DecodeElement(_ebfb.SSub, &_facc); _dcad != nil {
					return _dcad
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _ebfb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_daef := NewEG_OMathMathElements()
				_daef.SSubSup = NewCT_SSubSup()
				if _afde := d.DecodeElement(_daef.SSubSup, &_facc); _afde != nil {
					return _afde
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _daef)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_cfcca := NewEG_OMathMathElements()
				_cfcca.SSup = NewCT_SSup()
				if _bagg := d.DecodeElement(_cfcca.SSup, &_facc); _bagg != nil {
					return _bagg
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _cfcca)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_gfbd := NewEG_OMathMathElements()
				_gfbd.R = NewCT_R()
				if _faaf := d.DecodeElement(_gfbd.R, &_facc); _faaf != nil {
					return _faaf
				}
				_dfed.EG_OMathMathElements = append(_dfed.EG_OMathMathElements, _gfbd)
			default:
				_a.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004f\u004d\u0061t\u0068 \u0025\u0076", _facc.Name)
				if _gfece := d.Skip(); _gfece != nil {
					return _gfece
				}
			}
		case _f.EndElement:
			break _gcfac
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Script and its children
func (_fbbg *CT_Script) Validate() error {
	return _fbbg.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0072\u0069\u0070t")
}

func (_fada *CT_AccPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _fada.Chr != nil {
		_eag := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_fada.Chr, _eag)
	}
	if _fada.CtrlPr != nil {
		_bc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_fada.CtrlPr, _bc)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_aacde *CT_FPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ecef:
	for {
		_bfc, _edg := d.Token()
		if _edg != nil {
			return _edg
		}
		switch _cae := _bfc.(type) {
		case _f.StartElement:
			switch _cae.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074\u0079\u0070\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074\u0079\u0070\u0065"}:
				_aacde.Type = NewCT_FType()
				if _eacag := d.DecodeElement(_aacde.Type, &_cae); _eacag != nil {
					return _eacag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_aacde.CtrlPr = NewCT_CtrlPr()
				if _cdd := d.DecodeElement(_aacde.CtrlPr, &_cae); _cdd != nil {
					return _cdd
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0050\u0072\u0020\u0025\u0076", _cae.Name)
				if _ebab := d.Skip(); _ebab != nil {
					return _ebab
				}
			}
		case _f.EndElement:
			break _ecef
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Integer2 and its children, prefixing error messages with path
func (_gggg *CT_Integer2) ValidateWithPath(path string) error {
	if _gggg.ValAttr < -2 {
		return _ef.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003e\u003d\u0020\u002d2 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gggg.ValAttr)
	}
	if _gggg.ValAttr > 2 {
		return _ef.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0032\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gggg.ValAttr)
	}
	return nil
}

func (_ffgef *CT_RPRChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fgcga:
	for {
		_bcda, _bcfa := d.Token()
		if _bcfa != nil {
			return _bcfa
		}
		switch _defe := _bcda.(type) {
		case _f.StartElement:
			switch _defe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u006f\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u006f\u0072"}:
				_ffgef.Nor = NewCT_OnOff()
				if _gcb := d.DecodeElement(_ffgef.Nor, &_defe); _gcb != nil {
					return _gcb
				}
			default:
				_a.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0050\u0052C\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _defe.Name)
				if _eaag := d.Skip(); _eaag != nil {
					return _eaag
				}
			}
		case _f.EndElement:
			break _fgcga
		case _f.CharData:
		}
	}
	return nil
}

type CT_MC struct{ McPr *CT_MCPr }

// Validate validates the CT_Text and its children
func (_geea *CT_Text) Validate() error {
	return _geea.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074")
}

func (_geacd ST_LimLoc) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_dabb := _f.Attr{}
	_dabb.Name = name
	switch _geacd {
	case ST_LimLocUnset:
		_dabb.Value = ""
	case ST_LimLocUndOvr:
		_dabb.Value = "\u0075\u006e\u0064\u004f\u0076\u0072"
	case ST_LimLocSubSup:
		_dabb.Value = "\u0073\u0075\u0062\u0053\u0075\u0070"
	}
	return _dabb, nil
}

// Validate validates the CT_Phant and its children
func (_bgcd *CT_Phant) Validate() error {
	return _bgcd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074")
}

// ValidateWithPath validates the CT_UnSignedInteger and its children, prefixing error messages with path
func (_gbccd *CT_UnSignedInteger) ValidateWithPath(path string) error { return nil }

type ST_Jc byte

// Validate validates the CT_SSubSup and its children
func (_gdde *CT_SSubSup) Validate() error {
	return _gdde.ValidateWithPath("\u0043\u0054\u005f\u0053\u0053\u0075\u0062\u0053\u0075\u0070")
}

type CT_SSup struct {
	SSupPr *CT_SSupPr
	E      *CT_OMathArg
	Sup    *CT_OMathArg
}

func NewCT_OMathParaPr() *CT_OMathParaPr { _dcba := &CT_OMathParaPr{}; return _dcba }

func (_gdcf *CT_OMathJc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ffba := range start.Attr {
		if _ffba.Name.Local == "\u0076\u0061\u006c" {
			_gdcf.ValAttr.UnmarshalXMLAttr(_ffba)
			continue
		}
	}
	for {
		_ggag, _eaec := d.Token()
		if _eaec != nil {
			return _ef.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063\u003a\u0020%\u0073", _eaec)
		}
		if _agdf, _fgcf := _ggag.(_f.EndElement); _fgcf && _agdf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SSup and its children, prefixing error messages with path
func (_aefca *CT_SSup) ValidateWithPath(path string) error {
	if _aefca.SSupPr != nil {
		if _ggad := _aefca.SSupPr.ValidateWithPath(path + "\u002fS\u0053\u0075\u0070\u0050\u0072"); _ggad != nil {
			return _ggad
		}
	}
	if _cfbbf := _aefca.E.ValidateWithPath(path + "\u002f\u0045"); _cfbbf != nil {
		return _cfbbf
	}
	if _ecdb := _aefca.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _ecdb != nil {
		return _ecdb
	}
	return nil
}

// Validate validates the CT_BoxPr and its children
func (_bcbd *CT_BoxPr) Validate() error {
	return _bcbd.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072")
}

func (_beec *CT_Text) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _adcg := range start.Attr {
		if _adcg.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _adcg.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_gffbdc, _ggce := _adcg.Value, error(nil)
			if _ggce != nil {
				return _ggce
			}
			_beec.SpaceAttr = &_gffbdc
			continue
		}
	}
	for {
		_eagc, _gafb := d.Token()
		if _gafb != nil {
			return _ef.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _gafb)
		}
		if _adbde, _becad := _eagc.(_f.CharData); _becad {
			_beec.Content = string(_adbde)
		}
		if _caeb, _ceaba := _eagc.(_f.EndElement); _ceaba && _caeb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cfff ST_BreakBin) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_cfff.String(), start)
}

// Validate validates the CT_SpacingRule and its children
func (_dee *CT_SpacingRule) Validate() error {
	return _dee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0070\u0061\u0063\u0069\u006eg\u0052\u0075\u006c\u0065")
}

func (_dadbb ST_BreakBin) Validate() error { return _dadbb.ValidateWithPath("") }

func (_egde ST_TopBot) String() string {
	switch _egde {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0062\u006f\u0074"
	}
	return ""
}

func NewCT_ManualBreak() *CT_ManualBreak { _ecefe := &CT_ManualBreak{}; return _ecefe }

func ParseUnionST_OnOff(s string) (_ea.ST_OnOff, error) { return _ea.ParseUnionST_OnOff(s) }

func (_gebad *CT_OMathParaPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fgee:
	for {
		_eccd, _dafd := d.Token()
		if _dafd != nil {
			return _dafd
		}
		switch _fgfg := _eccd.(type) {
		case _f.StartElement:
			switch _fgfg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006a\u0063"}:
				_gebad.Jc = NewCT_OMathJc()
				if _dfce := d.DecodeElement(_gebad.Jc, &_fgfg); _dfce != nil {
					return _dfce
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050\u0061r\u0061P\u0072\u0020\u0025\u0076", _fgfg.Name)
				if _bgf := d.Skip(); _bgf != nil {
					return _bgf
				}
			}
		case _f.EndElement:
			break _fgee
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MathPrChoice and its children, prefixing error messages with path
func (_eggd *CT_MathPrChoice) ValidateWithPath(path string) error {
	if _eggd.WrapIndent != nil {
		if _cbc := _eggd.WrapIndent.ValidateWithPath(path + "/\u0057\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"); _cbc != nil {
			return _cbc
		}
	}
	if _eggd.WrapRight != nil {
		if _deaed := _eggd.WrapRight.ValidateWithPath(path + "\u002f\u0057\u0072\u0061\u0070\u0052\u0069\u0067\u0068\u0074"); _deaed != nil {
			return _deaed
		}
	}
	return nil
}

func NewCT_SSubSup() *CT_SSubSup {
	_acff := &CT_SSubSup{}
	_acff.E = NewCT_OMathArg()
	_acff.Sub = NewCT_OMathArg()
	_acff.Sup = NewCT_OMathArg()
	return _acff
}

type CT_MCPr struct {
	Count *CT_Integer255
	McJc  *CT_XAlign
}

func (_cgdc *ST_BreakBinSub) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_cgdc = 0
	case "\u002d\u002d":
		*_cgdc = 1
	case "\u002d\u002b":
		*_cgdc = 2
	case "\u002b\u002d":
		*_cgdc = 3
	}
	return nil
}

// ValidateWithPath validates the CT_BreakBin and its children, prefixing error messages with path
func (_acd *CT_BreakBin) ValidateWithPath(path string) error {
	if _bgda := _acd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bgda != nil {
		return _bgda
	}
	return nil
}

// Validate validates the CT_SPrePr and its children
func (_dbade *CT_SPrePr) Validate() error {
	return _dbade.ValidateWithPath("\u0043T\u005f\u0053\u0050\u0072\u0065\u0050r")
}

func (_aedb *CT_SSub) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aedb.SSubPr != nil {
		_cbgc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_aedb.SSubPr, _cbgc)
	}
	_ffed := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_aedb.E, _ffed)
	_ecca := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_aedb.Sub, _ecca)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NaryPr and its children
func (_acdbe *CT_NaryPr) Validate() error {
	return _acdbe.ValidateWithPath("\u0043T\u005f\u004e\u0061\u0072\u0079\u0050r")
}

func (_b *CT_Acc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _b.AccPr != nil {
		_ff := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0061\u0063\u0063\u0050\u0072"}}
		e.EncodeElement(_b.AccPr, _ff)
	}
	_g := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_b.E, _g)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_RPRChoice() *CT_RPRChoice { _bcgf := &CT_RPRChoice{}; return _bcgf }

// ValidateWithPath validates the CT_Acc and its children, prefixing error messages with path
func (_dg *CT_Acc) ValidateWithPath(path string) error {
	if _dg.AccPr != nil {
		if _gg := _dg.AccPr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0050\u0072"); _gg != nil {
			return _gg
		}
	}
	if _fad := _dg.E.ValidateWithPath(path + "\u002f\u0045"); _fad != nil {
		return _fad
	}
	return nil
}

type CT_F struct {
	FPr *CT_FPr
	Num *CT_OMathArg
	Den *CT_OMathArg
}

func (_ebf *CT_LimLow) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ebf.E = NewCT_OMathArg()
	_ebf.Lim = NewCT_OMathArg()
_eaf:
	for {
		_ecg, _gfef := d.Token()
		if _gfef != nil {
			return _gfef
		}
		switch _fbcd := _ecg.(type) {
		case _f.StartElement:
			switch _fbcd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}:
				_ebf.LimLowPr = NewCT_LimLowPr()
				if _daf := d.DecodeElement(_ebf.LimLowPr, &_fbcd); _daf != nil {
					return _daf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dcdc := d.DecodeElement(_ebf.E, &_fbcd); _dcdc != nil {
					return _dcdc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d"}:
				if _fge := d.DecodeElement(_ebf.Lim, &_fbcd); _fge != nil {
					return _fge
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004c\u0069\u006dL\u006f\u0077 \u0025\u0076", _fbcd.Name)
				if _cca := d.Skip(); _cca != nil {
					return _cca
				}
			}
		case _f.EndElement:
			break _eaf
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RChoice and its children, prefixing error messages with path
func (_fadaf *CT_RChoice) ValidateWithPath(path string) error {
	for _cdcf, _abfd := range _fadaf.T {
		if _gdae := _abfd.ValidateWithPath(_ef.Sprintf("\u0025\u0073\u002f\u0054\u005b\u0025\u0064\u005d", path, _cdcf)); _gdae != nil {
			return _gdae
		}
	}
	return nil
}

func NewCT_MCS() *CT_MCS { _faeaa := &CT_MCS{}; return _faeaa }

func (_fabf ST_BreakBinSub) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_fabf.String(), start)
}

func (_ecfbe ST_Style) String() string {
	switch _ecfbe {
	case 0:
		return ""
	case 1:
		return "\u0070"
	case 2:
		return "\u0062"
	case 3:
		return "\u0069"
	case 4:
		return "\u0062\u0069"
	}
	return ""
}

// ValidateWithPath validates the CT_SSubSup and its children, prefixing error messages with path
func (_ceff *CT_SSubSup) ValidateWithPath(path string) error {
	if _ceff.SSubSupPr != nil {
		if _eegef := _ceff.SSubSupPr.ValidateWithPath(path + "\u002f\u0053\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072"); _eegef != nil {
			return _eegef
		}
	}
	if _fafdc := _ceff.E.ValidateWithPath(path + "\u002f\u0045"); _fafdc != nil {
		return _fafdc
	}
	if _ecadb := _ceff.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _ecadb != nil {
		return _ecadb
	}
	if _gfggb := _ceff.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _gfggb != nil {
		return _gfggb
	}
	return nil
}

type CT_PhantPr struct {
	Show     *CT_OnOff
	ZeroWid  *CT_OnOff
	ZeroAsc  *CT_OnOff
	ZeroDesc *CT_OnOff
	Transp   *CT_OnOff
	CtrlPr   *CT_CtrlPr
}

func (_daecf ST_Shp) Validate() error { return _daecf.ValidateWithPath("") }

type ST_Style byte

func (_ecgc ST_FType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_ecgc.String(), start)
}

func NewCT_SSupPr() *CT_SSupPr { _cffe := &CT_SSupPr{}; return _cffe }

// Validate validates the CT_TopBot and its children
func (_degbe *CT_TopBot) Validate() error {
	return _degbe.ValidateWithPath("\u0043T\u005f\u0054\u006f\u0070\u0042\u006ft")
}

type CT_SSubSup struct {
	SSubSupPr *CT_SSubSupPr
	E         *CT_OMathArg
	Sub       *CT_OMathArg
	Sup       *CT_OMathArg
}

// Validate validates the CT_BreakBin and its children
func (_dfc *CT_BreakBin) Validate() error {
	return _dfc.ValidateWithPath("C\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e")
}

func (_abgc ST_TopBot) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_adfed := _f.Attr{}
	_adfed.Name = name
	switch _abgc {
	case ST_TopBotUnset:
		_adfed.Value = ""
	case ST_TopBotTop:
		_adfed.Value = "\u0074\u006f\u0070"
	case ST_TopBotBot:
		_adfed.Value = "\u0062\u006f\u0074"
	}
	return _adfed, nil
}

func (_fgf *CT_DPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gbd:
	for {
		_bag, _gcfg := d.Token()
		if _gcfg != nil {
			return _gcfg
		}
		switch _cce := _bag.(type) {
		case _f.StartElement:
			switch _cce.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0065\u0067\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0065\u0067\u0043\u0068\u0072"}:
				_fgf.BegChr = NewCT_Char()
				if _fbc := d.DecodeElement(_fgf.BegChr, &_cce); _fbc != nil {
					return _fbc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0065\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0065\u0070\u0043\u0068\u0072"}:
				_fgf.SepChr = NewCT_Char()
				if _dfdd := d.DecodeElement(_fgf.SepChr, &_cce); _dfdd != nil {
					return _dfdd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u006e\u0064\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u006e\u0064\u0043\u0068\u0072"}:
				_fgf.EndChr = NewCT_Char()
				if _ggb := d.DecodeElement(_fgf.EndChr, &_cce); _ggb != nil {
					return _ggb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}:
				_fgf.Grow = NewCT_OnOff()
				if _ggf := d.DecodeElement(_fgf.Grow, &_cce); _ggf != nil {
					return _ggf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0068\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0068\u0070"}:
				_fgf.Shp = NewCT_Shp()
				if _acb := d.DecodeElement(_fgf.Shp, &_cce); _acb != nil {
					return _acb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fgf.CtrlPr = NewCT_CtrlPr()
				if _dde := d.DecodeElement(_fgf.CtrlPr, &_cce); _dde != nil {
					return _dde
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0050\u0072\u0020\u0025\u0076", _cce.Name)
				if _aab := d.Skip(); _aab != nil {
					return _aab
				}
			}
		case _f.EndElement:
			break _gbd
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the EG_OMathMathElements and its children
func (_gfbce *EG_OMathMathElements) Validate() error {
	return _gfbce.ValidateWithPath("E\u0047_\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074h\u0045\u006c\u0065\u006den\u0074\u0073")
}

// ValidateWithPath validates the CT_BorderBox and its children, prefixing error messages with path
func (_fde *CT_BorderBox) ValidateWithPath(path string) error {
	if _fde.BorderBoxPr != nil {
		if _adb := _fde.BorderBoxPr.ValidateWithPath(path + "\u002f\u0042\u006fr\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"); _adb != nil {
			return _adb
		}
	}
	if _fddd := _fde.E.ValidateWithPath(path + "\u002f\u0045"); _fddd != nil {
		return _fddd
	}
	return nil
}

func (_gcfc *CT_SSup) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gcfc.E = NewCT_OMathArg()
	_gcfc.Sup = NewCT_OMathArg()
_bdec:
	for {
		_bebaf, _gcgfa := d.Token()
		if _gcgfa != nil {
			return _gcgfa
		}
		switch _afag := _bebaf.(type) {
		case _f.StartElement:
			switch _afag.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070\u0050\u0072"}:
				_gcfc.SSupPr = NewCT_SSupPr()
				if _adgaa := d.DecodeElement(_gcfc.SSupPr, &_afag); _adgaa != nil {
					return _adgaa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _beac := d.DecodeElement(_gcfc.E, &_afag); _beac != nil {
					return _beac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _ebdfd := d.DecodeElement(_gcfc.Sup, &_afag); _ebdfd != nil {
					return _ebdfd
				}
			default:
				_a.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0053\u0075\u0070\u0020\u0025\u0076", _afag.Name)
				if _ceabd := d.Skip(); _ceabd != nil {
					return _ceabd
				}
			}
		case _f.EndElement:
			break _bdec
		case _f.CharData:
		}
	}
	return nil
}

func (_bbce *CT_M) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_cffb:
	for {
		_dceg, _eacd := d.Token()
		if _eacd != nil {
			return _eacd
		}
		switch _ada := _dceg.(type) {
		case _f.StartElement:
			switch _ada.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0050\u0072"}:
				_bbce.MPr = NewCT_MPr()
				if _dba := d.DecodeElement(_bbce.MPr, &_ada); _dba != nil {
					return _dba
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0072"}:
				_gbge := NewCT_MR()
				if _ebg := d.DecodeElement(_gbge, &_ada); _ebg != nil {
					return _ebg
				}
				_bbce.Mr = append(_bbce.Mr, _gbge)
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u004d\u0020\u0025\u0076", _ada.Name)
				if _dbfe := d.Skip(); _dbfe != nil {
					return _dbfe
				}
			}
		case _f.EndElement:
			break _cffb
		case _f.CharData:
		}
	}
	return nil
}

func NewEG_OMathElements() *EG_OMathElements { _gffbfc := &EG_OMathElements{}; return _gffbfc }

func (_begaf ST_LimLoc) String() string {
	switch _begaf {
	case 0:
		return ""
	case 1:
		return "\u0075\u006e\u0064\u004f\u0076\u0072"
	case 2:
		return "\u0073\u0075\u0062\u0053\u0075\u0070"
	}
	return ""
}

func (_bbgcb *EG_OMathMathElements) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gcbg:
	for {
		_fafbc, _ecade := d.Token()
		if _ecade != nil {
			return _ecade
		}
		switch _efba := _fafbc.(type) {
		case _f.StartElement:
			switch _efba.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_bbgcb.Acc = NewCT_Acc()
				if _bfad := d.DecodeElement(_bbgcb.Acc, &_efba); _bfad != nil {
					return _bfad
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_bbgcb.Bar = NewCT_Bar()
				if _efabg := d.DecodeElement(_bbgcb.Bar, &_efba); _efabg != nil {
					return _efabg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_bbgcb.Box = NewCT_Box()
				if _egdd := d.DecodeElement(_bbgcb.Box, &_efba); _egdd != nil {
					return _egdd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_bbgcb.BorderBox = NewCT_BorderBox()
				if _efabc := d.DecodeElement(_bbgcb.BorderBox, &_efba); _efabc != nil {
					return _efabc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_bbgcb.D = NewCT_D()
				if _gdga := d.DecodeElement(_bbgcb.D, &_efba); _gdga != nil {
					return _gdga
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_bbgcb.EqArr = NewCT_EqArr()
				if _baga := d.DecodeElement(_bbgcb.EqArr, &_efba); _baga != nil {
					return _baga
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_bbgcb.F = NewCT_F()
				if _eaff := d.DecodeElement(_bbgcb.F, &_efba); _eaff != nil {
					return _eaff
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_bbgcb.Func = NewCT_Func()
				if _bceg := d.DecodeElement(_bbgcb.Func, &_efba); _bceg != nil {
					return _bceg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_bbgcb.GroupChr = NewCT_GroupChr()
				if _ggeg := d.DecodeElement(_bbgcb.GroupChr, &_efba); _ggeg != nil {
					return _ggeg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_bbgcb.LimLow = NewCT_LimLow()
				if _badg := d.DecodeElement(_bbgcb.LimLow, &_efba); _badg != nil {
					return _badg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_bbgcb.LimUpp = NewCT_LimUpp()
				if _fabc := d.DecodeElement(_bbgcb.LimUpp, &_efba); _fabc != nil {
					return _fabc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_bbgcb.M = NewCT_M()
				if _gcde := d.DecodeElement(_bbgcb.M, &_efba); _gcde != nil {
					return _gcde
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_bbgcb.Nary = NewCT_Nary()
				if _afab := d.DecodeElement(_bbgcb.Nary, &_efba); _afab != nil {
					return _afab
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_bbgcb.Phant = NewCT_Phant()
				if _afebd := d.DecodeElement(_bbgcb.Phant, &_efba); _afebd != nil {
					return _afebd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_bbgcb.Rad = NewCT_Rad()
				if _eaba := d.DecodeElement(_bbgcb.Rad, &_efba); _eaba != nil {
					return _eaba
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_bbgcb.SPre = NewCT_SPre()
				if _dgee := d.DecodeElement(_bbgcb.SPre, &_efba); _dgee != nil {
					return _dgee
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_bbgcb.SSub = NewCT_SSub()
				if _cffga := d.DecodeElement(_bbgcb.SSub, &_efba); _cffga != nil {
					return _cffga
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_bbgcb.SSubSup = NewCT_SSubSup()
				if _cgeda := d.DecodeElement(_bbgcb.SSubSup, &_efba); _cgeda != nil {
					return _cgeda
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_bbgcb.SSup = NewCT_SSup()
				if _aefg := d.DecodeElement(_bbgcb.SSup, &_efba); _aefg != nil {
					return _aefg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_bbgcb.R = NewCT_R()
				if _geae := d.DecodeElement(_bbgcb.R, &_efba); _geae != nil {
					return _geae
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _efba.Name)
				if _deeb := d.Skip(); _deeb != nil {
					return _deeb
				}
			}
		case _f.EndElement:
			break _gcbg
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_BoxPr() *CT_BoxPr { _eac := &CT_BoxPr{}; return _eac }

// Validate validates the CT_Integer2 and its children
func (_adf *CT_Integer2) Validate() error {
	return _adf.ValidateWithPath("C\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032")
}

// Validate validates the CT_SSubSupPr and its children
func (_bgbc *CT_SSubSupPr) Validate() error {
	return _bgbc.ValidateWithPath("\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072")
}

func NewCT_SSubSupPr() *CT_SSubSupPr { _ccdb := &CT_SSubSupPr{}; return _ccdb }

type CT_SPrePr struct{ CtrlPr *CT_CtrlPr }

func (_cad *CT_RPR) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cad.Lit != nil {
		_ebbbe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006ci\u0074"}}
		e.EncodeElement(_cad.Lit, _ebbbe)
	}
	if _cad.Choice != nil {
		_cad.Choice.MarshalXML(e, _f.StartElement{})
	}
	if _cad.Brk != nil {
		_cgccc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062r\u006b"}}
		e.EncodeElement(_cad.Brk, _cgccc)
	}
	if _cad.Aln != nil {
		_bagfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061l\u006e"}}
		e.EncodeElement(_cad.Aln, _bagfe)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_YAlign() *CT_YAlign {
	_afcg := &CT_YAlign{}
	_afcg.ValAttr = _ea.ST_YAlign(1)
	return _afcg
}

type CT_OMathJc struct{ ValAttr ST_Jc }

// Validate validates the CT_FuncPr and its children
func (_cgb *CT_FuncPr) Validate() error {
	return _cgb.ValidateWithPath("\u0043T\u005f\u0046\u0075\u006e\u0063\u0050r")
}

// ValidateWithPath validates the CT_OMathArgPr and its children, prefixing error messages with path
func (_gdbb *CT_OMathArgPr) ValidateWithPath(path string) error {
	if _gdbb.ArgSz != nil {
		if _aafc := _gdbb.ArgSz.ValidateWithPath(path + "\u002f\u0041\u0072\u0067\u0053\u007a"); _aafc != nil {
			return _aafc
		}
	}
	return nil
}

func (_eadf *CT_D) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bcbg:
	for {
		_aaf, _gfbc := d.Token()
		if _gfbc != nil {
			return _gfbc
		}
		switch _fed := _aaf.(type) {
		case _f.StartElement:
			switch _fed.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0050\u0072"}:
				_eadf.DPr = NewCT_DPr()
				if _bbe := d.DecodeElement(_eadf.DPr, &_fed); _bbe != nil {
					return _bbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_deb := NewCT_OMathArg()
				if _dbg := d.DecodeElement(_deb, &_fed); _dbg != nil {
					return _dbg
				}
				_eadf.E = append(_eadf.E, _deb)
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0044\u0020\u0025\u0076", _fed.Name)
				if _age := d.Skip(); _age != nil {
					return _age
				}
			}
		case _f.EndElement:
			break _bcbg
		case _f.CharData:
		}
	}
	return nil
}

type CT_SSub struct {
	SSubPr *CT_SSubPr
	E      *CT_OMathArg
	Sub    *CT_OMathArg
}

func (_ffe *CT_Integer255) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ffe.ValAttr = 1
	for _, _gcg := range start.Attr {
		if _gcg.Name.Local == "\u0076\u0061\u006c" {
			_baeb, _ccefg := _fa.ParseInt(_gcg.Value, 10, 64)
			if _ccefg != nil {
				return _ccefg
			}
			_ffe.ValAttr = _baeb
			continue
		}
	}
	for {
		_gcfa, _beeb := d.Token()
		if _beeb != nil {
			return _ef.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0074e\u0067e\u0072\u0032\u0035\u0035\u003a\u0020\u0025s", _beeb)
		}
		if _cfcf, _ggaf := _gcfa.(_f.EndElement); _ggaf && _cfcf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_M struct {
	MPr *CT_MPr
	Mr  []*CT_MR
}

func (_egcf *ST_BreakBin) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_egcf = 0
	case "\u0062\u0065\u0066\u006f\u0072\u0065":
		*_egcf = 1
	case "\u0061\u0066\u0074e\u0072":
		*_egcf = 2
	case "\u0072\u0065\u0070\u0065\u0061\u0074":
		*_egcf = 3
	}
	return nil
}

// ValidateWithPath validates the EG_OMathElements and its children, prefixing error messages with path
func (_cfbed *EG_OMathElements) ValidateWithPath(path string) error {
	for _badb, _bbebf := range _cfbed.EG_OMathMathElements {
		if _agbae := _bbebf.ValidateWithPath(_ef.Sprintf("%\u0073\u002f\u0045\u0047\u005f\u004fM\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006ce\u006d\u0065\u006et\u0073[\u0025\u0064\u005d", path, _badb)); _agbae != nil {
			return _agbae
		}
	}
	return nil
}

func (_beab *CT_SSubSupPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gae:
	for {
		_eeff, _bagff := d.Token()
		if _bagff != nil {
			return _bagff
		}
		switch _dgafb := _eeff.(type) {
		case _f.StartElement:
			switch _dgafb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e\u0053\u0063\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e\u0053\u0063\u0072"}:
				_beab.AlnScr = NewCT_OnOff()
				if _bfbd := d.DecodeElement(_beab.AlnScr, &_dgafb); _bfbd != nil {
					return _bfbd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_beab.CtrlPr = NewCT_CtrlPr()
				if _gedc := d.DecodeElement(_beab.CtrlPr, &_dgafb); _gedc != nil {
					return _gedc
				}
			default:
				_a.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0053\u0075b\u0053\u0075\u0070\u0050\u0072\u0020\u0025\u0076", _dgafb.Name)
				if _fcfg := d.Skip(); _fcfg != nil {
					return _fcfg
				}
			}
		case _f.EndElement:
			break _gae
		case _f.CharData:
		}
	}
	return nil
}

func (_fdbb *ST_Script) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ecba, _gbccc := d.Token()
	if _gbccc != nil {
		return _gbccc
	}
	if _eaagg, _dfea := _ecba.(_f.EndElement); _dfea && _eaagg.Name == start.Name {
		*_fdbb = 1
		return nil
	}
	if _agbg, _ecfdg := _ecba.(_f.CharData); !_ecfdg {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecba)
	} else {
		switch string(_agbg) {
		case "":
			*_fdbb = 0
		case "\u0072\u006f\u006da\u006e":
			*_fdbb = 1
		case "\u0073\u0063\u0072\u0069\u0070\u0074":
			*_fdbb = 2
		case "\u0066r\u0061\u006b\u0074\u0075\u0072":
			*_fdbb = 3
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b":
			*_fdbb = 4
		case "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066":
			*_fdbb = 5
		case "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e":
			*_fdbb = 6
		}
	}
	_ecba, _gbccc = d.Token()
	if _gbccc != nil {
		return _gbccc
	}
	if _bdgbd, _aceb := _ecba.(_f.EndElement); _aceb && _bdgbd.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecba)
}

// ValidateWithPath validates the CT_Style and its children, prefixing error messages with path
func (_dcgc *CT_Style) ValidateWithPath(path string) error {
	if _bcfe := _dcgc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bcfe != nil {
		return _bcfe
	}
	return nil
}

// Validate validates the CT_RPRChoice and its children
func (_cgce *CT_RPRChoice) Validate() error {
	return _cgce.ValidateWithPath("\u0043\u0054\u005fR\u0050\u0052\u0043\u0068\u006f\u0069\u0063\u0065")
}

func NewCT_String() *CT_String { _ffaac := &CT_String{}; return _ffaac }

func NewCT_MCPr() *CT_MCPr { _efg := &CT_MCPr{}; return _efg }

func (_ecaa *CT_MathPrChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ecaa.WrapIndent != nil {
		_fca := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0077r\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}}
		e.EncodeElement(_ecaa.WrapIndent, _fca)
	}
	if _ecaa.WrapRight != nil {
		_dfbc := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0077\u0072\u0061\u0070\u0052\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_ecaa.WrapRight, _dfbc)
	}
	return nil
}

func (_cdga *CT_OnOff) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _cdga.ValAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", *_cdga.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_Bar struct {
	BarPr *CT_BarPr
	E     *CT_OMathArg
}

type CT_Style struct{ ValAttr ST_Style }

func (_fadb *CT_MCS) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_dafc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0063"}}
	for _, _aegc := range _fadb.Mc {
		e.EncodeElement(_aegc, _dafc)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MC and its children, prefixing error messages with path
func (_gdffd *CT_MC) ValidateWithPath(path string) error {
	if _gdffd.McPr != nil {
		if _gggf := _gdffd.McPr.ValidateWithPath(path + "\u002f\u004d\u0063P\u0072"); _gggf != nil {
			return _gggf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BarPr and its children, prefixing error messages with path
func (_gdf *CT_BarPr) ValidateWithPath(path string) error {
	if _gdf.Pos != nil {
		if _bcb := _gdf.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _bcb != nil {
			return _bcb
		}
	}
	if _gdf.CtrlPr != nil {
		if _fdc := _gdf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _fdc != nil {
			return _fdc
		}
	}
	return nil
}

type CT_CtrlPr struct{}

// ValidateWithPath validates the CT_TwipsMeasure and its children, prefixing error messages with path
func (_ebfdd *CT_TwipsMeasure) ValidateWithPath(path string) error {
	if _bfbdd := _ebfdd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bfbdd != nil {
		return _bfbdd
	}
	return nil
}

// Validate validates the CT_FType and its children
func (_ged *CT_FType) Validate() error {
	return _ged.ValidateWithPath("\u0043\u0054\u005f\u0046\u0054\u0079\u0070\u0065")
}

func NewCT_XAlign() *CT_XAlign {
	_bgde := &CT_XAlign{}
	_bgde.ValAttr = _ea.ST_XAlign(1)
	return _bgde
}

func NewCT_RPR() *CT_RPR { _cefc := &CT_RPR{}; return _cefc }

type CT_YAlign struct{ ValAttr _ea.ST_YAlign }

// ValidateWithPath validates the CT_LimLowPr and its children, prefixing error messages with path
func (_ffbg *CT_LimLowPr) ValidateWithPath(path string) error {
	if _ffbg.CtrlPr != nil {
		if _dcfb := _ffbg.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dcfb != nil {
			return _dcfb
		}
	}
	return nil
}

func (_cgfc *ST_TopBot) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gdfg, _cedc := d.Token()
	if _cedc != nil {
		return _cedc
	}
	if _dbdgc, _fdggf := _gdfg.(_f.EndElement); _fdggf && _dbdgc.Name == start.Name {
		*_cgfc = 1
		return nil
	}
	if _abfab, _cfgaa := _gdfg.(_f.CharData); !_cfgaa {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdfg)
	} else {
		switch string(_abfab) {
		case "":
			*_cgfc = 0
		case "\u0074\u006f\u0070":
			*_cgfc = 1
		case "\u0062\u006f\u0074":
			*_cgfc = 2
		}
	}
	_gdfg, _cedc = d.Token()
	if _cedc != nil {
		return _cedc
	}
	if _cega, _efec := _gdfg.(_f.EndElement); _efec && _cega.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdfg)
}

func (_cgf *CT_BreakBin) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _cgf.ValAttr != ST_BreakBinUnset {
		_bgb, _geb := _cgf.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _geb != nil {
			return _geb
		}
		start.Attr = append(start.Attr, _bgb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BorderBoxPr and its children
func (_ecd *CT_BorderBoxPr) Validate() error {
	return _ecd.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072B\u006f\u0078\u0050\u0072")
}

func (_fbdd *CT_OMathArgPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _fbdd.ArgSz != nil {
		_aace := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0061\u0072\u0067\u0053\u007a"}}
		e.EncodeElement(_fbdd.ArgSz, _aace)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_agef *CT_Integer255) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", _agef.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewMathPr() *MathPr { _gfcf := &MathPr{}; _gfcf.CT_MathPr = *NewCT_MathPr(); return _gfcf }

func (_adae *CT_XAlign) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_deeg, _bfcdf := _adae.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _bfcdf != nil {
		return _bfcdf
	}
	start.Attr = append(start.Attr, _deeg)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_abbe *CT_MC) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _abbe.McPr != nil {
		_fac := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0063\u0050\u0072"}}
		e.EncodeElement(_abbe.McPr, _fac)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LimLowPr and its children
func (_fdec *CT_LimLowPr) Validate() error {
	return _fdec.ValidateWithPath("C\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072")
}

// ValidateWithPath validates the CT_Rad and its children, prefixing error messages with path
func (_caecf *CT_Rad) ValidateWithPath(path string) error {
	if _caecf.RadPr != nil {
		if _edda := _caecf.RadPr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0050\u0072"); _edda != nil {
			return _edda
		}
	}
	if _abee := _caecf.Deg.ValidateWithPath(path + "\u002f\u0044\u0065\u0067"); _abee != nil {
		return _abee
	}
	if _ccde := _caecf.E.ValidateWithPath(path + "\u002f\u0045"); _ccde != nil {
		return _ccde
	}
	return nil
}

// Validate validates the CT_RPR and its children
func (_dcbabb *CT_RPR) Validate() error {
	return _dcbabb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0050\u0052")
}

func (_gbe *CT_BarPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bd:
	for {
		_gc, _gace := d.Token()
		if _gace != nil {
			return _gace
		}
		switch _gdg := _gc.(type) {
		case _f.StartElement:
			switch _gdg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073"}:
				_gbe.Pos = NewCT_TopBot()
				if _ec := d.DecodeElement(_gbe.Pos, &_gdg); _ec != nil {
					return _ec
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gbe.CtrlPr = NewCT_CtrlPr()
				if _ffd := d.DecodeElement(_gbe.CtrlPr, &_gdg); _ffd != nil {
					return _ffd
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072\u0020\u0025\u0076", _gdg.Name)
				if _fag := d.Skip(); _fag != nil {
					return _fag
				}
			}
		case _f.EndElement:
			break _bd
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MCS and its children, prefixing error messages with path
func (_gdbf *CT_MCS) ValidateWithPath(path string) error {
	for _gded, _gaae := range _gdbf.Mc {
		if _eca := _gaae.ValidateWithPath(_ef.Sprintf("\u0025s\u002f\u004d\u0063\u005b\u0025\u0064]", path, _gded)); _eca != nil {
			return _eca
		}
	}
	return nil
}

func NewCT_EqArrPr() *CT_EqArrPr { _abg := &CT_EqArrPr{}; return _abg }

// ValidateWithPath validates the CT_Func and its children, prefixing error messages with path
func (_abegg *CT_Func) ValidateWithPath(path string) error {
	if _abegg.FuncPr != nil {
		if _geaf := _abegg.FuncPr.ValidateWithPath(path + "\u002fF\u0075\u006e\u0063\u0050\u0072"); _geaf != nil {
			return _geaf
		}
	}
	if _agge := _abegg.FName.ValidateWithPath(path + "\u002f\u0046\u004e\u0061\u006d\u0065"); _agge != nil {
		return _agge
	}
	if _dea := _abegg.E.ValidateWithPath(path + "\u002f\u0045"); _dea != nil {
		return _dea
	}
	return nil
}

// ValidateWithPath validates the EG_OMathMathElements and its children, prefixing error messages with path
func (_gccee *EG_OMathMathElements) ValidateWithPath(path string) error {
	if _gccee.Acc != nil {
		if _fbfg := _gccee.Acc.ValidateWithPath(path + "\u002f\u0041\u0063\u0063"); _fbfg != nil {
			return _fbfg
		}
	}
	if _gccee.Bar != nil {
		if _gdee := _gccee.Bar.ValidateWithPath(path + "\u002f\u0042\u0061\u0072"); _gdee != nil {
			return _gdee
		}
	}
	if _gccee.Box != nil {
		if _gbag := _gccee.Box.ValidateWithPath(path + "\u002f\u0042\u006f\u0078"); _gbag != nil {
			return _gbag
		}
	}
	if _gccee.BorderBox != nil {
		if _abgb := _gccee.BorderBox.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078"); _abgb != nil {
			return _abgb
		}
	}
	if _gccee.D != nil {
		if _cefb := _gccee.D.ValidateWithPath(path + "\u002f\u0044"); _cefb != nil {
			return _cefb
		}
	}
	if _gccee.EqArr != nil {
		if _ced := _gccee.EqArr.ValidateWithPath(path + "\u002f\u0045\u0071\u0041\u0072\u0072"); _ced != nil {
			return _ced
		}
	}
	if _gccee.F != nil {
		if _aaced := _gccee.F.ValidateWithPath(path + "\u002f\u0046"); _aaced != nil {
			return _aaced
		}
	}
	if _gccee.Func != nil {
		if _gaceg := _gccee.Func.ValidateWithPath(path + "\u002f\u0046\u0075n\u0063"); _gaceg != nil {
			return _gaceg
		}
	}
	if _gccee.GroupChr != nil {
		if _adee := _gccee.GroupChr.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0043\u0068r"); _adee != nil {
			return _adee
		}
	}
	if _gccee.LimLow != nil {
		if _cgcb := _gccee.LimLow.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0077"); _cgcb != nil {
			return _cgcb
		}
	}
	if _gccee.LimUpp != nil {
		if _fdcb := _gccee.LimUpp.ValidateWithPath(path + "\u002fL\u0069\u006d\u0055\u0070\u0070"); _fdcb != nil {
			return _fdcb
		}
	}
	if _gccee.M != nil {
		if _dedfg := _gccee.M.ValidateWithPath(path + "\u002f\u004d"); _dedfg != nil {
			return _dedfg
		}
	}
	if _gccee.Nary != nil {
		if _bcece := _gccee.Nary.ValidateWithPath(path + "\u002f\u004e\u0061r\u0079"); _bcece != nil {
			return _bcece
		}
	}
	if _gccee.Phant != nil {
		if _ffeg := _gccee.Phant.ValidateWithPath(path + "\u002f\u0050\u0068\u0061\u006e\u0074"); _ffeg != nil {
			return _ffeg
		}
	}
	if _gccee.Rad != nil {
		if _fcfc := _gccee.Rad.ValidateWithPath(path + "\u002f\u0052\u0061\u0064"); _fcfc != nil {
			return _fcfc
		}
	}
	if _gccee.SPre != nil {
		if _acga := _gccee.SPre.ValidateWithPath(path + "\u002f\u0053\u0050r\u0065"); _acga != nil {
			return _acga
		}
	}
	if _gccee.SSub != nil {
		if _bbad := _gccee.SSub.ValidateWithPath(path + "\u002f\u0053\u0053u\u0062"); _bbad != nil {
			return _bbad
		}
	}
	if _gccee.SSubSup != nil {
		if _gfdf := _gccee.SSubSup.ValidateWithPath(path + "\u002f\u0053\u0053\u0075\u0062\u0053\u0075\u0070"); _gfdf != nil {
			return _gfdf
		}
	}
	if _gccee.SSup != nil {
		if _edafe := _gccee.SSup.ValidateWithPath(path + "\u002f\u0053\u0053u\u0070"); _edafe != nil {
			return _edafe
		}
	}
	if _gccee.R != nil {
		if _fcfb := _gccee.R.ValidateWithPath(path + "\u002f\u0052"); _fcfb != nil {
			return _fcfb
		}
	}
	return nil
}

func (_egbe *CT_RPR) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_cdbb:
	for {
		_cacg, _ceab := d.Token()
		if _ceab != nil {
			return _ceab
		}
		switch _cgfee := _cacg.(type) {
		case _f.StartElement:
			switch _cgfee.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u0074"}:
				_egbe.Lit = NewCT_OnOff()
				if _gffbd := d.DecodeElement(_egbe.Lit, &_cgfee); _gffbd != nil {
					return _gffbd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u006f\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u006f\u0072"}:
				_egbe.Choice = NewCT_RPRChoice()
				if _cffg := d.DecodeElement(&_egbe.Choice.Nor, &_cgfee); _cffg != nil {
					return _cffg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b"}:
				_egbe.Brk = NewCT_ManualBreak()
				if _bebag := d.DecodeElement(_egbe.Brk, &_cgfee); _bebag != nil {
					return _bebag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e"}:
				_egbe.Aln = NewCT_OnOff()
				if _aagc := d.DecodeElement(_egbe.Aln, &_cgfee); _aagc != nil {
					return _aagc
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0050\u0052\u0020\u0025\u0076", _cgfee.Name)
				if _fgfbg := d.Skip(); _fgfbg != nil {
					return _fgfbg
				}
			}
		case _f.EndElement:
			break _cdbb
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LimLoc and its children, prefixing error messages with path
func (_cdff *CT_LimLoc) ValidateWithPath(path string) error {
	if _cdff.ValAttr == ST_LimLocUnset {
		return _ef.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eabg := _cdff.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eabg != nil {
		return _eabg
	}
	return nil
}

// Validate validates the CT_OnOff and its children
func (_gfdde *CT_OnOff) Validate() error {
	return _gfdde.ValidateWithPath("\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066")
}

type CT_OnOff struct{ ValAttr *_ea.ST_OnOff }

func (_cgfe *CT_PhantPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_edcd:
	for {
		_daea, _cebde := d.Token()
		if _cebde != nil {
			return _cebde
		}
		switch _dcfgd := _daea.(type) {
		case _f.StartElement:
			switch _dcfgd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0068\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0068\u006f\u0077"}:
				_cgfe.Show = NewCT_OnOff()
				if _bgedg := d.DecodeElement(_cgfe.Show, &_dcfgd); _bgedg != nil {
					return _bgedg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007ae\u0072\u006f\u0057\u0069\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007ae\u0072\u006f\u0057\u0069\u0064"}:
				_cgfe.ZeroWid = NewCT_OnOff()
				if _bafe := d.DecodeElement(_cgfe.ZeroWid, &_dcfgd); _bafe != nil {
					return _bafe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007ae\u0072\u006f\u0041\u0073\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007ae\u0072\u006f\u0041\u0073\u0063"}:
				_cgfe.ZeroAsc = NewCT_OnOff()
				if _efcce := d.DecodeElement(_cgfe.ZeroAsc, &_dcfgd); _efcce != nil {
					return _efcce
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}:
				_cgfe.ZeroDesc = NewCT_OnOff()
				if _fgcfb := d.DecodeElement(_cgfe.ZeroDesc, &_dcfgd); _fgcfb != nil {
					return _fgcfb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074\u0072\u0061\u006e\u0073\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074\u0072\u0061\u006e\u0073\u0070"}:
				_cgfe.Transp = NewCT_OnOff()
				if _cfbea := d.DecodeElement(_cgfe.Transp, &_dcfgd); _cfbea != nil {
					return _cfbea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_cgfe.CtrlPr = NewCT_CtrlPr()
				if _gbcge := d.DecodeElement(_cgfe.CtrlPr, &_dcfgd); _gbcge != nil {
					return _gbcge
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0068\u0061\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _dcfgd.Name)
				if _ebabe := d.Skip(); _ebabe != nil {
					return _ebabe
				}
			}
		case _f.EndElement:
			break _edcd
		case _f.CharData:
		}
	}
	return nil
}

func (_bbb *CT_GroupChrPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ggcc:
	for {
		_ebc, _ccc := d.Token()
		if _ccc != nil {
			return _ccc
		}
		switch _fff := _ebc.(type) {
		case _f.StartElement:
			switch _fff.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_bbb.Chr = NewCT_Char()
				if _abed := d.DecodeElement(_bbb.Chr, &_fff); _abed != nil {
					return _abed
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073"}:
				_bbb.Pos = NewCT_TopBot()
				if _caaa := d.DecodeElement(_bbb.Pos, &_fff); _caaa != nil {
					return _caaa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0076\u0065\u0072\u0074\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0076\u0065\u0072\u0074\u004a\u0063"}:
				_bbb.VertJc = NewCT_TopBot()
				if _cgcd := d.DecodeElement(_bbb.VertJc, &_fff); _cgcd != nil {
					return _cgcd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_bbb.CtrlPr = NewCT_CtrlPr()
				if _gaf := d.DecodeElement(_bbb.CtrlPr, &_fff); _gaf != nil {
					return _gaf
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072 \u0025\u0076", _fff.Name)
				if _eggg := d.Skip(); _eggg != nil {
					return _eggg
				}
			}
		case _f.EndElement:
			break _ggcc
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RPR and its children, prefixing error messages with path
func (_dcdea *CT_RPR) ValidateWithPath(path string) error {
	if _dcdea.Lit != nil {
		if _ddfc := _dcdea.Lit.ValidateWithPath(path + "\u002f\u004c\u0069\u0074"); _ddfc != nil {
			return _ddfc
		}
	}
	if _dcdea.Choice != nil {
		if _adca := _dcdea.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _adca != nil {
			return _adca
		}
	}
	if _dcdea.Brk != nil {
		if _gcca := _dcdea.Brk.ValidateWithPath(path + "\u002f\u0042\u0072\u006b"); _gcca != nil {
			return _gcca
		}
	}
	if _dcdea.Aln != nil {
		if _debfg := _dcdea.Aln.ValidateWithPath(path + "\u002f\u0041\u006c\u006e"); _debfg != nil {
			return _debfg
		}
	}
	return nil
}

type CT_Acc struct {
	AccPr *CT_AccPr
	E     *CT_OMathArg
}

func (_afdg *CT_MCS) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_aaed:
	for {
		_ded, _fbfe := d.Token()
		if _fbfe != nil {
			return _fbfe
		}
		switch _gefa := _ded.(type) {
		case _f.StartElement:
			switch _gefa.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063"}:
				_bcf := NewCT_MC()
				if _bge := d.DecodeElement(_bcf, &_gefa); _bge != nil {
					return _bge
				}
				_afdg.Mc = append(_afdg.Mc, _bcf)
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0043\u0053\u0020\u0025\u0076", _gefa.Name)
				if _ggfb := d.Skip(); _ggfb != nil {
					return _ggfb
				}
			}
		case _f.EndElement:
			break _aaed
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MCPr and its children, prefixing error messages with path
func (_aec *CT_MCPr) ValidateWithPath(path string) error {
	if _aec.Count != nil {
		if _efgd := _aec.Count.ValidateWithPath(path + "\u002f\u0043\u006f\u0075\u006e\u0074"); _efgd != nil {
			return _efgd
		}
	}
	if _aec.McJc != nil {
		if _agfg := _aec.McJc.ValidateWithPath(path + "\u002f\u004d\u0063J\u0063"); _agfg != nil {
			return _agfg
		}
	}
	return nil
}

func (_agee *CT_EqArrPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _agee.BaseJc != nil {
		_fbcc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0061\u0073\u0065\u004a\u0063"}}
		e.EncodeElement(_agee.BaseJc, _fbcc)
	}
	if _agee.MaxDist != nil {
		_ecda := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006d\u0061\u0078\u0044\u0069\u0073t"}}
		e.EncodeElement(_agee.MaxDist, _ecda)
	}
	if _agee.ObjDist != nil {
		_gbb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006f\u0062\u006a\u0044\u0069\u0073t"}}
		e.EncodeElement(_agee.ObjDist, _gbb)
	}
	if _agee.RSpRule != nil {
		_aebd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u0053\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_agee.RSpRule, _aebd)
	}
	if _agee.RSp != nil {
		_edc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072S\u0070"}}
		e.EncodeElement(_agee.RSp, _edc)
	}
	if _agee.CtrlPr != nil {
		_abfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_agee.CtrlPr, _abfe)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TwipsMeasure and its children
func (_dacg *CT_TwipsMeasure) Validate() error {
	return _dacg.ValidateWithPath("\u0043T\u005fT\u0077\u0069\u0070\u0073\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
}

func (_dace *CT_YAlign) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dace.ValAttr = _ea.ST_YAlign(1)
	for _, _afgfd := range start.Attr {
		if _afgfd.Name.Local == "\u0076\u0061\u006c" {
			_dace.ValAttr.UnmarshalXMLAttr(_afgfd)
			continue
		}
	}
	for {
		_deec, _fffg := d.Token()
		if _fffg != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0059\u0041\u006ci\u0067\u006e\u003a\u0020\u0025\u0073", _fffg)
		}
		if _agdfe, _cgega := _deec.(_f.EndElement); _cgega && _agdfe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SSubPr and its children, prefixing error messages with path
func (_acfc *CT_SSubPr) ValidateWithPath(path string) error {
	if _acfc.CtrlPr != nil {
		if _gbeg := _acfc.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gbeg != nil {
			return _gbeg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OnOff and its children, prefixing error messages with path
func (_ecefa *CT_OnOff) ValidateWithPath(path string) error {
	if _ecefa.ValAttr != nil {
		if _gfec := _ecefa.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gfec != nil {
			return _gfec
		}
	}
	return nil
}

func NewCT_SpacingRule() *CT_SpacingRule { _agcg := &CT_SpacingRule{}; _agcg.ValAttr = 0; return _agcg }

func (_acg *CT_BreakBinSub) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _acg.ValAttr != ST_BreakBinSubUnset {
		_fdg, _aege := _acg.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _aege != nil {
			return _aege
		}
		start.Attr = append(start.Attr, _fdg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_ccca *ST_Style) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_ccca = 0
	case "\u0070":
		*_ccca = 1
	case "\u0062":
		*_ccca = 2
	case "\u0069":
		*_ccca = 3
	case "\u0062\u0069":
		*_ccca = 4
	}
	return nil
}

// Validate validates the CT_Integer255 and its children
func (_eacf *CT_Integer255) Validate() error {
	return _eacf.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u0035\u0035")
}

// Validate validates the CT_EqArr and its children
func (_fgd *CT_EqArr) Validate() error {
	return _fgd.ValidateWithPath("\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072")
}

func (_fdfe ST_Style) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_fdfe.String(), start)
}

type CT_OMathArgPr struct{ ArgSz *CT_Integer2 }

func NewCT_SSup() *CT_SSup {
	_ddcb := &CT_SSup{}
	_ddcb.E = NewCT_OMathArg()
	_ddcb.Sup = NewCT_OMathArg()
	return _ddcb
}

// Validate validates the CT_LimLow and its children
func (_gdgb *CT_LimLow) Validate() error {
	return _gdgb.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u004c\u006fw")
}

const (
	ST_ScriptUnset         ST_Script = 0
	ST_ScriptRoman         ST_Script = 1
	ST_ScriptScript        ST_Script = 2
	ST_ScriptFraktur       ST_Script = 3
	ST_ScriptDouble_struck ST_Script = 4
	ST_ScriptSans_serif    ST_Script = 5
	ST_ScriptMonospace     ST_Script = 6
)

// Validate validates the CT_RadPr and its children
func (_bgbe *CT_RadPr) Validate() error {
	return _bgbe.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072")
}

type ST_BreakBin byte

func NewCT_OnOff() *CT_OnOff { _dbad := &CT_OnOff{}; return _dbad }

func NewCT_Integer2() *CT_Integer2 { _ccef := &CT_Integer2{}; _ccef.ValAttr = -2; return _ccef }

func NewCT_GroupChr() *CT_GroupChr { _gce := &CT_GroupChr{}; _gce.E = NewCT_OMathArg(); return _gce }

func NewCT_F() *CT_F {
	_bdgb := &CT_F{}
	_bdgb.Num = NewCT_OMathArg()
	_bdgb.Den = NewCT_OMathArg()
	return _bdgb
}

func (_ecad *CT_PhantPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ecad.Show != nil {
		_eefc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0068\u006f\u0077"}}
		e.EncodeElement(_ecad.Show, _eefc)
	}
	if _ecad.ZeroWid != nil {
		_gffb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u007a\u0065\u0072\u006f\u0057\u0069d"}}
		e.EncodeElement(_ecad.ZeroWid, _gffb)
	}
	if _ecad.ZeroAsc != nil {
		_acge := _f.StartElement{Name: _f.Name{Local: "\u006d:\u007a\u0065\u0072\u006f\u0041\u0073c"}}
		e.EncodeElement(_ecad.ZeroAsc, _acge)
	}
	if _ecad.ZeroDesc != nil {
		_gbefg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}}
		e.EncodeElement(_ecad.ZeroDesc, _gbefg)
	}
	if _ecad.Transp != nil {
		_gdfb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0074\u0072\u0061\u006e\u0073\u0070"}}
		e.EncodeElement(_ecad.Transp, _gdfb)
	}
	if _ecad.CtrlPr != nil {
		_eacg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ecad.CtrlPr, _eacg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fabd *EG_OMathMathElements) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fabd.Acc != nil {
		_feec := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061c\u0063"}}
		e.EncodeElement(_fabd.Acc, _feec)
	}
	if _fabd.Bar != nil {
		_eagcf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062a\u0072"}}
		e.EncodeElement(_fabd.Bar, _eagcf)
	}
	if _fabd.Box != nil {
		_degbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062o\u0078"}}
		e.EncodeElement(_fabd.Box, _degbg)
	}
	if _fabd.BorderBox != nil {
		_cdaa := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078"}}
		e.EncodeElement(_fabd.BorderBox, _cdaa)
	}
	if _fabd.D != nil {
		_ffbed := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064"}}
		e.EncodeElement(_fabd.D, _ffbed)
	}
	if _fabd.EqArr != nil {
		_cacdc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0065\u0071\u0041\u0072\u0072"}}
		e.EncodeElement(_fabd.EqArr, _cacdc)
	}
	if _fabd.F != nil {
		_feaf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066"}}
		e.EncodeElement(_fabd.F, _feaf)
	}
	if _fabd.Func != nil {
		_acdd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066\u0075\u006e\u0063"}}
		e.EncodeElement(_fabd.Func, _acdd)
	}
	if _fabd.GroupChr != nil {
		_ebbbd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}}
		e.EncodeElement(_fabd.GroupChr, _ebbbd)
	}
	if _fabd.LimLow != nil {
		_egcc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0077"}}
		e.EncodeElement(_fabd.LimLow, _egcc)
	}
	if _fabd.LimUpp != nil {
		_bcfc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u0055\u0070\u0070"}}
		e.EncodeElement(_fabd.LimUpp, _bcfc)
	}
	if _fabd.M != nil {
		_adaf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d"}}
		e.EncodeElement(_fabd.M, _adaf)
	}
	if _fabd.Nary != nil {
		_fffd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006e\u0061\u0072\u0079"}}
		e.EncodeElement(_fabd.Nary, _fffd)
	}
	if _fabd.Phant != nil {
		_bgdc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u0068\u0061\u006e\u0074"}}
		e.EncodeElement(_fabd.Phant, _bgdc)
	}
	if _fabd.Rad != nil {
		_afef := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072a\u0064"}}
		e.EncodeElement(_fabd.Rad, _afef)
	}
	if _fabd.SPre != nil {
		_acfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0050\u0072\u0065"}}
		e.EncodeElement(_fabd.SPre, _acfe)
	}
	if _fabd.SSub != nil {
		_bcad := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0062"}}
		e.EncodeElement(_fabd.SSub, _bcad)
	}
	if _fabd.SSubSup != nil {
		_dgba := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0053\u0075\u0062\u0053\u0075p"}}
		e.EncodeElement(_fabd.SSubSup, _dgba)
	}
	if _fabd.SSup != nil {
		_dacga := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0070"}}
		e.EncodeElement(_fabd.SSup, _dacga)
	}
	if _fabd.R != nil {
		_befb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072"}}
		e.EncodeElement(_fabd.R, _befb)
	}
	return nil
}

func (_dacgae ST_BreakBinSub) Validate() error { return _dacgae.ValidateWithPath("") }

func (_gfe *CT_Box) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gfe.E = NewCT_OMathArg()
_cb:
	for {
		_eda, _cbe := d.Token()
		if _cbe != nil {
			return _cbe
		}
		switch _fgc := _eda.(type) {
		case _f.StartElement:
			switch _fgc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078P\u0072"}:
				_gfe.BoxPr = NewCT_BoxPr()
				if _edaf := d.DecodeElement(_gfe.BoxPr, &_fgc); _edaf != nil {
					return _edaf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _gda := d.DecodeElement(_gfe.E, &_fgc); _gda != nil {
					return _gda
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0078\u0020\u0025\u0076", _fgc.Name)
				if _aba := d.Skip(); _aba != nil {
					return _aba
				}
			}
		case _f.EndElement:
			break _cb
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_Func() *CT_Func {
	_fafb := &CT_Func{}
	_fafb.FName = NewCT_OMathArg()
	_fafb.E = NewCT_OMathArg()
	return _fafb
}

func (_ecdf *CT_BoxPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ecdf.OpEmu != nil {
		_eaca := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006f\u0070\u0045\u006d\u0075"}}
		e.EncodeElement(_ecdf.OpEmu, _eaca)
	}
	if _ecdf.NoBreak != nil {
		_dbd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006e\u006f\u0042\u0072\u0065\u0061k"}}
		e.EncodeElement(_ecdf.NoBreak, _dbd)
	}
	if _ecdf.Diff != nil {
		_cd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064\u0069\u0066\u0066"}}
		e.EncodeElement(_ecdf.Diff, _cd)
	}
	if _ecdf.Brk != nil {
		_ecde := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062r\u006b"}}
		e.EncodeElement(_ecdf.Brk, _ecde)
	}
	if _ecdf.Aln != nil {
		_ccg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061l\u006e"}}
		e.EncodeElement(_ecdf.Aln, _ccg)
	}
	if _ecdf.CtrlPr != nil {
		_afd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ecdf.CtrlPr, _afd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MC and its children
func (_agda *CT_MC) Validate() error { return _agda.ValidateWithPath("\u0043\u0054\u005fM\u0043") }

func (_dcdb *CT_Script) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _fgbgb := range start.Attr {
		if _fgbgb.Name.Local == "\u0076\u0061\u006c" {
			_dcdb.ValAttr.UnmarshalXMLAttr(_fgbgb)
			continue
		}
	}
	for {
		_adce, _babcf := d.Token()
		if _babcf != nil {
			return _ef.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0063\u0072i\u0070\u0074\u003a\u0020\u0025\u0073", _babcf)
		}
		if _dcbd, _bedc := _adce.(_f.EndElement); _bedc && _dcbd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GroupChr struct {
	GroupChrPr *CT_GroupChrPr
	E          *CT_OMathArg
}

// ValidateWithPath validates the CT_OMathArg and its children, prefixing error messages with path
func (_degcg *CT_OMathArg) ValidateWithPath(path string) error {
	if _degcg.ArgPr != nil {
		if _aecgc := _degcg.ArgPr.ValidateWithPath(path + "\u002f\u0041\u0072\u0067\u0050\u0072"); _aecgc != nil {
			return _aecgc
		}
	}
	for _cfga, _afcb := range _degcg.EG_OMathMathElements {
		if _baacc := _afcb.ValidateWithPath(_ef.Sprintf("%\u0073\u002f\u0045\u0047\u005f\u004fM\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006ce\u006d\u0065\u006et\u0073[\u0025\u0064\u005d", path, _cfga)); _baacc != nil {
			return _baacc
		}
	}
	if _degcg.CtrlPr != nil {
		if _bdac := _degcg.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bdac != nil {
			return _bdac
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OMathPara and its children, prefixing error messages with path
func (_dbaf *CT_OMathPara) ValidateWithPath(path string) error {
	if _dbaf.OMathParaPr != nil {
		if _eaac := _dbaf.OMathParaPr.ValidateWithPath(path + "\u002f\u004f\u004da\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"); _eaac != nil {
			return _eaac
		}
	}
	for _fcae, _fbed := range _dbaf.OMath {
		if _begb := _fbed.ValidateWithPath(_ef.Sprintf("\u0025\u0073\u002fO\u004d\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _fcae)); _begb != nil {
			return _begb
		}
	}
	return nil
}

type ST_TopBot byte

func NewCT_Rad() *CT_Rad {
	_effad := &CT_Rad{}
	_effad.Deg = NewCT_OMathArg()
	_effad.E = NewCT_OMathArg()
	return _effad
}

// Validate validates the CT_Func and its children
func (_cee *CT_Func) Validate() error {
	return _cee.ValidateWithPath("\u0043T\u005f\u0046\u0075\u006e\u0063")
}

// Validate validates the OMath and its children
func (_cgab *OMath) Validate() error { return _cgab.ValidateWithPath("\u004f\u004d\u0061t\u0068") }

func (_gcfag *MathPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u003a\u006d\u0061\u0074\u0068\u0050\u0072"
	return _gcfag.CT_MathPr.MarshalXML(e, start)
}

// Validate validates the CT_Style and its children
func (_badf *CT_Style) Validate() error {
	return _badf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065")
}

func (_gefdc *CT_Shp) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_ececc, _agcda := _gefdc.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _agcda != nil {
		return _agcda
	}
	start.Attr = append(start.Attr, _ececc)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dgbe *CT_OMathParaPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dgbe.Jc != nil {
		_egce := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006a\u0063"}}
		e.EncodeElement(_dgbe.Jc, _egce)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_ffccb ST_Script) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_ffccb.String(), start)
}

func (_bea *CT_RChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_acae:
	for {
		_gdge, _ebff := d.Token()
		if _ebff != nil {
			return _ebff
		}
		switch _dcbab := _gdge.(type) {
		case _f.StartElement:
			switch _dcbab.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074"}:
				_ffdc := NewCT_Text()
				if _cgbe := d.DecodeElement(_ffdc, &_dcbab); _cgbe != nil {
					return _cgbe
				}
				_bea.T = append(_bea.T, _ffdc)
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fR\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _dcbab.Name)
				if _aaeg := d.Skip(); _aaeg != nil {
					return _aaeg
				}
			}
		case _f.EndElement:
			break _acae
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OMathJc and its children
func (_fgaf *CT_OMathJc) Validate() error {
	return _fgaf.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063")
}

type CT_String struct{ ValAttr *string }

func NewCT_OMathArg() *CT_OMathArg { _bega := &CT_OMathArg{}; return _bega }

const (
	ST_BreakBinSubUnset ST_BreakBinSub = 0
	ST_BreakBinSub__    ST_BreakBinSub = 1
	ST_BreakBinSub___   ST_BreakBinSub = 2
	ST_BreakBinSub____  ST_BreakBinSub = 3
)

func (_decc *CT_LimUpp) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _decc.LimUppPr != nil {
		_ddf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}}
		e.EncodeElement(_decc.LimUppPr, _ddf)
	}
	_ecdec := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_decc.E, _ecdec)
	_afgc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006ci\u006d"}}
	e.EncodeElement(_decc.Lim, _afgc)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fbd *CT_LimUppPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _fbd.CtrlPr != nil {
		_ffga := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_fbd.CtrlPr, _ffga)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_R and its children
func (_afca *CT_R) Validate() error { return _afca.ValidateWithPath("\u0043\u0054\u005f\u0052") }

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_gefb *CT_String) ValidateWithPath(path string) error { return nil }

func NewEG_ScriptStyle() *EG_ScriptStyle { _eegae := &EG_ScriptStyle{}; return _eegae }

func (_cac *CT_EqArr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_cbd:
	for {
		_dfe, _ccd := d.Token()
		if _ccd != nil {
			return _ccd
		}
		switch _dfddg := _dfe.(type) {
		case _f.StartElement:
			switch _dfddg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065q\u0041\u0072\u0072\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065q\u0041\u0072\u0072\u0050\u0072"}:
				_cac.EqArrPr = NewCT_EqArrPr()
				if _fbca := d.DecodeElement(_cac.EqArrPr, &_dfddg); _fbca != nil {
					return _fbca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_fcg := NewCT_OMathArg()
				if _aae := d.DecodeElement(_fcg, &_dfddg); _aae != nil {
					return _aae
				}
				_cac.E = append(_cac.E, _fcg)
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0020\u0025\u0076", _dfddg.Name)
				if _effa := d.Skip(); _effa != nil {
					return _effa
				}
			}
		case _f.EndElement:
			break _cbd
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BreakBinSub and its children
func (_gee *CT_BreakBinSub) Validate() error {
	return _gee.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042i\u006e\u0053\u0075\u0062")
}

// ValidateWithPath validates the CT_SSupPr and its children, prefixing error messages with path
func (_dbgad *CT_SSupPr) ValidateWithPath(path string) error {
	if _dbgad.CtrlPr != nil {
		if _eebb := _dbgad.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _eebb != nil {
			return _eebb
		}
	}
	return nil
}

func (_ccdd *ST_Style) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_eceae, _aabbe := d.Token()
	if _aabbe != nil {
		return _aabbe
	}
	if _cdfa, _fgbc := _eceae.(_f.EndElement); _fgbc && _cdfa.Name == start.Name {
		*_ccdd = 1
		return nil
	}
	if _fdfa, _gcffc := _eceae.(_f.CharData); !_gcffc {
		return _ef.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eceae)
	} else {
		switch string(_fdfa) {
		case "":
			*_ccdd = 0
		case "\u0070":
			*_ccdd = 1
		case "\u0062":
			*_ccdd = 2
		case "\u0069":
			*_ccdd = 3
		case "\u0062\u0069":
			*_ccdd = 4
		}
	}
	_eceae, _aabbe = d.Token()
	if _aabbe != nil {
		return _aabbe
	}
	if _gccc, _gdef := _eceae.(_f.EndElement); _gdef && _gccc.Name == start.Name {
		return nil
	}
	return _ef.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eceae)
}

// ValidateWithPath validates the CT_Phant and its children, prefixing error messages with path
func (_bbda *CT_Phant) ValidateWithPath(path string) error {
	if _bbda.PhantPr != nil {
		if _beba := _bbda.PhantPr.ValidateWithPath(path + "\u002f\u0050\u0068\u0061\u006e\u0074\u0050\u0072"); _beba != nil {
			return _beba
		}
	}
	if _ccfc := _bbda.E.ValidateWithPath(path + "\u002f\u0045"); _ccfc != nil {
		return _ccfc
	}
	return nil
}

type EG_OMathElements struct{ EG_OMathMathElements []*EG_OMathMathElements }

func (_gdcb ST_BreakBinSub) String() string {
	switch _gdcb {
	case 0:
		return ""
	case 1:
		return "\u002d\u002d"
	case 2:
		return "\u002d\u002b"
	case 3:
		return "\u002b\u002d"
	}
	return ""
}

type CT_RadPr struct {
	DegHide *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

type ST_Shp byte

func (_ggfc *CT_Shp) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ggfc.ValAttr = ST_Shp(1)
	for _, _cdcc := range start.Attr {
		if _cdcc.Name.Local == "\u0076\u0061\u006c" {
			_ggfc.ValAttr.UnmarshalXMLAttr(_cdcc)
			continue
		}
	}
	for {
		_afbb, _gabb := d.Token()
		if _gabb != nil {
			return _ef.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0053h\u0070\u003a\u0020\u0025\u0073", _gabb)
		}
		if _bfcb, _dgeb := _afbb.(_f.EndElement); _dgeb && _bfcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_acdfg *CT_SSubPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_agfab:
	for {
		_gggfd, _dcce := d.Token()
		if _dcce != nil {
			return _dcce
		}
		switch _gcecg := _gggfd.(type) {
		case _f.StartElement:
			switch _gcecg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_acdfg.CtrlPr = NewCT_CtrlPr()
				if _efda := d.DecodeElement(_acdfg.CtrlPr, &_gcecg); _efda != nil {
					return _efda
				}
			default:
				_a.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0053\u0075b\u0050\u0072 \u0025\u0076", _gcecg.Name)
				if _dcgb := d.Skip(); _dcgb != nil {
					return _dcgb
				}
			}
		case _f.EndElement:
			break _agfab
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_OMath() *CT_OMath { _fga := &CT_OMath{}; return _fga }

func (_ccab *CT_String) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ccab.ValAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ef.Sprintf("\u0025\u0076", *_ccab.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_cedg *ST_FType) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_cedg = 0
	case "\u0062\u0061\u0072":
		*_cedg = 1
	case "\u0073\u006b\u0077":
		*_cedg = 2
	case "\u006c\u0069\u006e":
		*_cedg = 3
	case "\u006e\u006f\u0042a\u0072":
		*_cedg = 4
	}
	return nil
}

// Validate validates the CT_SPre and its children
func (_fgdbe *CT_SPre) Validate() error {
	return _fgdbe.ValidateWithPath("\u0043T\u005f\u0053\u0050\u0072\u0065")
}

func (_cgegd *CT_Rad) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cgegd.RadPr != nil {
		_ddae := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u0061\u0064\u0050\u0072"}}
		e.EncodeElement(_cgegd.RadPr, _ddae)
	}
	_eabgd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064e\u0067"}}
	e.EncodeElement(_cgegd.Deg, _eabgd)
	_cgg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_cgegd.E, _cgg)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_edbea ST_BreakBinSub) ValidateWithPath(path string) error {
	switch _edbea {
	case 0, 1, 2, 3:
	default:
		return _ef.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edbea))
	}
	return nil
}

type CT_SPre struct {
	SPrePr *CT_SPrePr
	Sub    *CT_OMathArg
	Sup    *CT_OMathArg
	E      *CT_OMathArg
}

func (_acef ST_Shp) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_eggfa := _f.Attr{}
	_eggfa.Name = name
	switch _acef {
	case ST_ShpUnset:
		_eggfa.Value = ""
	case ST_ShpCentered:
		_eggfa.Value = "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064"
	case ST_ShpMatch:
		_eggfa.Value = "\u006d\u0061\u0074c\u0068"
	}
	return _eggfa, nil
}

// ValidateWithPath validates the OMathPara and its children, prefixing error messages with path
func (_ccdbc *OMathPara) ValidateWithPath(path string) error {
	if _abeef := _ccdbc.CT_OMathPara.ValidateWithPath(path); _abeef != nil {
		return _abeef
	}
	return nil
}

// ValidateWithPath validates the CT_BreakBinSub and its children, prefixing error messages with path
func (_gdb *CT_BreakBinSub) ValidateWithPath(path string) error {
	if _afa := _gdb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _afa != nil {
		return _afa
	}
	return nil
}

type CT_MR struct{ E []*CT_OMathArg }

func init() {
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u0035\u0035", NewCT_Integer255)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032", NewCT_Integer2)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0070\u0061\u0063\u0069\u006eg\u0052\u0075\u006c\u0065", NewCT_SpacingRule)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005fU\u006e\u0053\u0069\u0067\u006ee\u0064\u0049n\u0074\u0065\u0067\u0065\u0072", NewCT_UnSignedInteger)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0043\u0068\u0061\u0072", NewCT_Char)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066", NewCT_OnOff)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0058\u0041\u006c\u0069\u0067n", NewCT_XAlign)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0059\u0041\u006c\u0069\u0067n", NewCT_YAlign)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0068\u0070", NewCT_Shp)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046\u0054\u0079\u0070\u0065", NewCT_FType)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u004c\u006fc", NewCT_LimLoc)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0054\u006f\u0070\u0042\u006ft", NewCT_TopBot)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0063\u0072\u0069\u0070t", NewCT_Script)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065", NewCT_Style)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0061\u006e\u0075\u0061\u006cB\u0072\u0065\u0061\u006b", NewCT_ManualBreak)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0050\u0052", NewCT_RPR)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0054\u0065\u0078\u0074", NewCT_Text)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052", NewCT_R)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0043\u0074\u0072\u006c\u0050r", NewCT_CtrlPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072", NewCT_AccPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0041\u0063\u0063", NewCT_Acc)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072", NewCT_BarPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0061\u0072", NewCT_Bar)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072", NewCT_BoxPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0078", NewCT_Box)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072B\u006f\u0078\u0050\u0072", NewCT_BorderBoxPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078", NewCT_BorderBox)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0044\u0050\u0072", NewCT_DPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0044", NewCT_D)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0050\u0072", NewCT_EqArrPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072", NewCT_EqArr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046\u0050\u0072", NewCT_FPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046", NewCT_F)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0046\u0075\u006e\u0063\u0050r", NewCT_FuncPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0046\u0075\u006e\u0063", NewCT_Func)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072", NewCT_GroupChrPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072", NewCT_GroupChr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072", NewCT_LimLowPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u004c\u006fw", NewCT_LimLow)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072", NewCT_LimUppPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u0055\u0070p", NewCT_LimUpp)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004d\u0043\u0050\u0072", NewCT_MCPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fM\u0043", NewCT_MC)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0043\u0053", NewCT_MCS)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0050\u0072", NewCT_MPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fM\u0052", NewCT_MR)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d", NewCT_M)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004e\u0061\u0072\u0079\u0050r", NewCT_NaryPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004e\u0061\u0072\u0079", NewCT_Nary)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0050\u0072", NewCT_PhantPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074", NewCT_Phant)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072", NewCT_RadPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0061\u0064", NewCT_Rad)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0050\u0072\u0065\u0050r", NewCT_SPrePr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0050\u0072\u0065", NewCT_SPre)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0062\u0050r", NewCT_SSubPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0062", NewCT_SSub)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072", NewCT_SSubSupPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0053\u0075\u0062\u0053\u0075\u0070", NewCT_SSubSup)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0070\u0050r", NewCT_SSupPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0070", NewCT_SSup)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072", NewCT_OMathArgPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067", NewCT_OMathArg)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063", NewCT_OMathJc)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061\u0050\u0072", NewCT_OMathParaPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005fT\u0077\u0069\u0070\u0073\u004d\u0065\u0061\u0073\u0075\u0072\u0065", NewCT_TwipsMeasure)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e", NewCT_BreakBin)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042i\u006e\u0053\u0075\u0062", NewCT_BreakBinSub)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004d\u0061\u0074\u0068\u0050r", NewCT_MathPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fO\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061", NewCT_OMathPara)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068", NewCT_OMath)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006d\u0061\u0074\u0068\u0050\u0072", NewMathPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006fM\u0061\u0074\u0068\u0050\u0061\u0072a", NewOMathPara)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006f\u004d\u0061t\u0068", NewOMath)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074S\u0074\u0079\u006c\u0065", NewEG_ScriptStyle)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "E\u0047_\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074h\u0045\u006c\u0065\u006den\u0074\u0073", NewEG_OMathMathElements)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0045\u0047_\u004f\u004d\u0061t\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073", NewEG_OMathElements)
}
