//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sml

import (
	_gd "encoding/xml"
	_b "fmt"
	_e "github.com/unidoc/unioffice"
	_c "github.com/unidoc/unioffice/schema/soo/dml/spreadsheetDrawing"
	_af "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes"
	_a "strconv"
	_d "strings"
	_db "time"
)

// Validate validates the CT_Rst and its children
func (_gbddf *CT_Rst) Validate() error {
	return _gbddf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0073\u0074")
}

type CT_Cell struct {

	// Reference
	RAttr *string

	// Style Index
	SAttr *uint32

	// Cell Data Type
	TAttr ST_CellType

	// Cell Metadata Index
	CmAttr *uint32

	// Value Metadata Index
	VmAttr *uint32

	// Show Phonetic
	PhAttr *bool

	// Formula
	F *CT_CellFormula

	// Cell Value
	V *string

	// Rich Text Inline
	Is *CT_Rst

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_ExternalSheetDataSet() *CT_ExternalSheetDataSet {
	_efafag := &CT_ExternalSheetDataSet{}
	return _efafag
}

type CT_ConditionalFormatting struct {

	// PivotTable Conditional Formatting
	PivotAttr *bool

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Conditional Formatting Rule
	CfRule []*CT_CfRule
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_RevisionAutoFormatting and its children
func (_bbabd *CT_RevisionAutoFormatting) Validate() error {
	return _bbabd.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg")
}

// Validate validates the CT_I and its children
func (_gbdf *CT_I) Validate() error { return _gbdf.ValidateWithPath("\u0043\u0054\u005f\u0049") }

type ST_FontScheme byte

func (_aegbae *CT_TupleCache) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_eedgbd:
	for {
		_eefgef, _dfcagd := d.Token()
		if _dfcagd != nil {
			return _dfcagd
		}
		switch _fcgcd := _eefgef.(type) {
		case _gd.StartElement:
			switch _fcgcd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}:
				_aegbae.Entries = NewCT_PCDSDTCEntries()
				if _aeacab := d.DecodeElement(_aegbae.Entries, &_fcgcd); _aeacab != nil {
					return _aeacab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}:
				_aegbae.Sets = NewCT_Sets()
				if _fbgccda := d.DecodeElement(_aegbae.Sets, &_fcgcd); _fbgccda != nil {
					return _fbgccda
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}:
				_aegbae.QueryCache = NewCT_QueryCache()
				if _cecbga := d.DecodeElement(_aegbae.QueryCache, &_fcgcd); _cecbga != nil {
					return _cecbga
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_aegbae.ServerFormats = NewCT_ServerFormats()
				if _aeafeg := d.DecodeElement(_aegbae.ServerFormats, &_fcgcd); _aeafeg != nil {
					return _aeafeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aegbae.ExtLst = NewCT_ExtensionList()
				if _efcge := d.DecodeElement(_aegbae.ExtLst, &_fcgcd); _efcge != nil {
					return _efcge
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054u\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _fcgcd.Name)
				if _cadd := d.Skip(); _cadd != nil {
					return _cadd
				}
			}
		case _gd.EndElement:
			break _eedgbd
		case _gd.CharData:
		}
	}
	return nil
}

func (_dacb *CT_DataField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _feecb := range start.Attr {
		if _feecb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddgca, _gecg := _feecb.Value, error(nil)
			if _gecg != nil {
				return _gecg
			}
			_dacb.NameAttr = &_ddgca
			continue
		}
		if _feecb.Name.Local == "\u0066\u006c\u0064" {
			_gdgef, _ddbg := _a.ParseUint(_feecb.Value, 10, 32)
			if _ddbg != nil {
				return _ddbg
			}
			_dacb.FldAttr = uint32(_gdgef)
			continue
		}
		if _feecb.Name.Local == "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dacb.SubtotalAttr.UnmarshalXMLAttr(_feecb)
			continue
		}
		if _feecb.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073" {
			_dacb.ShowDataAsAttr.UnmarshalXMLAttr(_feecb)
			continue
		}
		if _feecb.Name.Local == "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd" {
			_fceeb, _bbddg := _a.ParseInt(_feecb.Value, 10, 32)
			if _bbddg != nil {
				return _bbddg
			}
			_ggbde := int32(_fceeb)
			_dacb.BaseFieldAttr = &_ggbde
			continue
		}
		if _feecb.Name.Local == "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d" {
			_ddcae, _eaagg := _a.ParseUint(_feecb.Value, 10, 32)
			if _eaagg != nil {
				return _eaagg
			}
			_cffb := uint32(_ddcae)
			_dacb.BaseItemAttr = &_cffb
			continue
		}
		if _feecb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_dcbe, _cdeg := _a.ParseUint(_feecb.Value, 10, 32)
			if _cdeg != nil {
				return _cdeg
			}
			_bgacf := uint32(_dcbe)
			_dacb.NumFmtIdAttr = &_bgacf
			continue
		}
	}
_cded:
	for {
		_adafc, _fcbdg := d.Token()
		if _fcbdg != nil {
			return _fcbdg
		}
		switch _ccdc := _adafc.(type) {
		case _gd.StartElement:
			switch _ccdc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dacb.ExtLst = NewCT_ExtensionList()
				if _eeafa := d.DecodeElement(_dacb.ExtLst, &_ccdc); _eeafa != nil {
					return _eeafa
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _ccdc.Name)
				if _ddbe := d.Skip(); _ddbe != nil {
					return _ddbe
				}
			}
		case _gd.EndElement:
			break _cded
		case _gd.CharData:
		}
	}
	return nil
}

func (_dceda *CT_DynamicFilter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dceda.TypeAttr = ST_DynamicFilterType(1)
	for _, _bdcb := range start.Attr {
		if _bdcb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dceda.TypeAttr.UnmarshalXMLAttr(_bdcb)
			continue
		}
		if _bdcb.Name.Local == "\u0076\u0061\u006c" {
			_baccd, _bded := _a.ParseFloat(_bdcb.Value, 64)
			if _bded != nil {
				return _bded
			}
			_dceda.ValAttr = &_baccd
			continue
		}
		if _bdcb.Name.Local == "\u0076\u0061\u006c\u0049\u0073\u006f" {
			_ffcfc, _gcaba := ParseStdlibTime(_bdcb.Value)
			if _gcaba != nil {
				return _gcaba
			}
			_dceda.ValIsoAttr = &_ffcfc
			continue
		}
		if _bdcb.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c" {
			_cdcfa, _gdfee := _a.ParseFloat(_bdcb.Value, 64)
			if _gdfee != nil {
				return _gdfee
			}
			_dceda.MaxValAttr = &_cdcfa
			continue
		}
		if _bdcb.Name.Local == "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o" {
			_cggfg, _bbdc := ParseStdlibTime(_bdcb.Value)
			if _bbdc != nil {
				return _bbdc
			}
			_dceda.MaxValIsoAttr = &_cggfg
			continue
		}
	}
	for {
		_ecdadc, _agddb := d.Token()
		if _agddb != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0079\u006e\u0061m\u0069c\u0046\u0069\u006c\u0074\u0065\u0072\u003a \u0025\u0073", _agddb)
		}
		if _ceeb, _fafb := _ecdadc.(_gd.EndElement); _fafb && _ceeb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_agdfb *CT_ExternalLinkChoice) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_gdbdd:
	for {
		_agce, _fdaeb := d.Token()
		if _fdaeb != nil {
			return _fdaeb
		}
		switch _fbdd := _agce.(type) {
		case _gd.StartElement:
			switch _fbdd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_agdfb.ExternalBook = NewCT_ExternalBook()
				if _agcg := d.DecodeElement(_agdfb.ExternalBook, &_fbdd); _agcg != nil {
					return _agcg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_agdfb.DdeLink = NewCT_DdeLink()
				if _gfgdd := d.DecodeElement(_agdfb.DdeLink, &_fbdd); _gfgdd != nil {
					return _gfgdd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_agdfb.OleLink = NewCT_OleLink()
				if _geddc := d.DecodeElement(_agdfb.OleLink, &_fbdd); _geddc != nil {
					return _geddc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _fbdd.Name)
				if _gbgcac := d.Skip(); _gbgcac != nil {
					return _gbgcac
				}
			}
		case _gd.EndElement:
			break _gdbdd
		case _gd.CharData:
		}
	}
	return nil
}

func (_afdfae ST_MdxFunctionType) ValidateWithPath(path string) error {
	switch _afdfae {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afdfae))
	}
	return nil
}

// Validate validates the CT_OleLink and its children
func (_ecgge *CT_OleLink) Validate() error {
	return _ecgge.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b")
}

func NewCT_PhoneticPr() *CT_PhoneticPr { _efgg := &CT_PhoneticPr{}; return _efgg }

// ValidateWithPath validates the CT_TableStyleElement and its children, prefixing error messages with path
func (_bgabf *CT_TableStyleElement) ValidateWithPath(path string) error {
	if _bgabf.TypeAttr == ST_TableStyleTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _edgfe := _bgabf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _edgfe != nil {
		return _edgfe
	}
	return nil
}

func NewCT_Revisions() *CT_Revisions { _bbebbb := &CT_Revisions{}; return _bbebbb }

func NewCT_Format() *CT_Format {
	_cbfcbe := &CT_Format{}
	_cbfcbe.PivotArea = NewCT_PivotArea()
	return _cbfcbe
}

type CT_OleObject struct {

	// Embedded Object ProgId
	ProgIdAttr *string

	// Data or View Aspect
	DvAspectAttr ST_DvAspect

	// Embedded Object's Link Moniker
	LinkAttr *string

	// Linked Embedded Object Update
	OleUpdateAttr ST_OleUpdate

	// Auto Load
	AutoLoadAttr *bool

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      *string

	// Embedded Object Properties
	ObjectPr *CT_ObjectPr
}

type CT_RevisionRowColumn struct {

	// Sheet Id
	SIdAttr uint32

	// End Of List
	EolAttr *bool

	// Reference
	RefAttr string

	// User Action
	ActionAttr ST_rwColActionType

	// Edge Deleted
	EdgeAttr *bool

	// Undo
	Undo []*CT_UndoInfo

	// Revised Row Column
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_daba *CT_CalculatedItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fdab := range start.Attr {
		if _fdab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcfa, _cgbd := _a.ParseUint(_fdab.Value, 10, 32)
			if _cgbd != nil {
				return _cgbd
			}
			_dfbdd := uint32(_bcfa)
			_daba.CountAttr = &_dfbdd
			continue
		}
	}
_deaa:
	for {
		_dgf, _gcag := d.Token()
		if _gcag != nil {
			return _gcag
		}
		switch _bdfe := _dgf.(type) {
		case _gd.StartElement:
			switch _bdfe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}:
				_badf := NewCT_CalculatedItem()
				if _debc := d.DecodeElement(_badf, &_bdfe); _debc != nil {
					return _debc
				}
				_daba.CalculatedItem = append(_daba.CalculatedItem, _badf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _bdfe.Name)
				if _aece := d.Skip(); _aece != nil {
					return _aece
				}
			}
		case _gd.EndElement:
			break _deaa
		case _gd.CharData:
		}
	}
	return nil
}

func (_aeaeb *CT_SheetId) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _aeaeb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_adgbb *CT_CalcCell) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gfaa := range start.Attr {
		if _gfaa.Name.Local == "\u0072" {
			_aced, _egfa := _gfaa.Value, error(nil)
			if _egfa != nil {
				return _egfa
			}
			_adgbb.RAttr = &_aced
			continue
		}
		if _gfaa.Name.Local == "\u0072\u0065\u0066" {
			_gbbd, _abcg := _gfaa.Value, error(nil)
			if _abcg != nil {
				return _abcg
			}
			_adgbb.RefAttr = &_gbbd
			continue
		}
		if _gfaa.Name.Local == "\u0069" {
			_gcea, _dfge := _a.ParseInt(_gfaa.Value, 10, 32)
			if _dfge != nil {
				return _dfge
			}
			_fbfe := int32(_gcea)
			_adgbb.IAttr = &_fbfe
			continue
		}
		if _gfaa.Name.Local == "\u0073" {
			_febb, _fabb := _a.ParseBool(_gfaa.Value)
			if _fabb != nil {
				return _fabb
			}
			_adgbb.SAttr = &_febb
			continue
		}
		if _gfaa.Name.Local == "\u006c" {
			_beef, _cfca := _a.ParseBool(_gfaa.Value)
			if _cfca != nil {
				return _cfca
			}
			_adgbb.LAttr = &_beef
			continue
		}
		if _gfaa.Name.Local == "\u0074" {
			_egg, _cbb := _a.ParseBool(_gfaa.Value)
			if _cbb != nil {
				return _cbb
			}
			_adgbb.TAttr = &_egg
			continue
		}
		if _gfaa.Name.Local == "\u0061" {
			_aaf, _dccb := _a.ParseBool(_gfaa.Value)
			if _dccb != nil {
				return _dccb
			}
			_adgbb.AAttr = &_aaf
			continue
		}
	}
	for {
		_gcfb, _edee := d.Token()
		if _edee != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _edee)
		}
		if _gfgc, _aefb := _gcfb.(_gd.EndElement); _aefb && _gfgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gfad *CT_BookView) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _adg := range start.Attr {
		if _adg.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_gb, _gcf := _a.ParseUint(_adg.Value, 10, 32)
			if _gcf != nil {
				return _gcf
			}
			_bee := uint32(_gb)
			_gfad.WindowWidthAttr = &_bee
			continue
		}
		if _adg.Name.Local == "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079" {
			_gfad.VisibilityAttr.UnmarshalXMLAttr(_adg)
			continue
		}
		if _adg.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_fe, _abd := _a.ParseBool(_adg.Value)
			if _abd != nil {
				return _abd
			}
			_gfad.ShowHorizontalScrollAttr = &_fe
			continue
		}
		if _adg.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_ega, _cbd := _a.ParseBool(_adg.Value)
			if _cbd != nil {
				return _cbd
			}
			_gfad.ShowVerticalScrollAttr = &_ega
			continue
		}
		if _adg.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_cee, _eab := _a.ParseBool(_adg.Value)
			if _eab != nil {
				return _eab
			}
			_gfad.ShowSheetTabsAttr = &_cee
			continue
		}
		if _adg.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_dge, _dfbc := _a.ParseInt(_adg.Value, 10, 32)
			if _dfbc != nil {
				return _dfbc
			}
			_gfb := int32(_dge)
			_gfad.XWindowAttr = &_gfb
			continue
		}
		if _adg.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_adf, _cfc := _a.ParseInt(_adg.Value, 10, 32)
			if _cfc != nil {
				return _cfc
			}
			_cfcc := int32(_adf)
			_gfad.YWindowAttr = &_cfcc
			continue
		}
		if _adg.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_gfe, _bac := _a.ParseBool(_adg.Value)
			if _bac != nil {
				return _bac
			}
			_gfad.MinimizedAttr = &_gfe
			continue
		}
		if _adg.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_eeb, _faa := _a.ParseUint(_adg.Value, 10, 32)
			if _faa != nil {
				return _faa
			}
			_dfc := uint32(_eeb)
			_gfad.WindowHeightAttr = &_dfc
			continue
		}
		if _adg.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_bc, _edg := _a.ParseUint(_adg.Value, 10, 32)
			if _edg != nil {
				return _edg
			}
			_bb := uint32(_bc)
			_gfad.TabRatioAttr = &_bb
			continue
		}
		if _adg.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074" {
			_fd, _fda := _a.ParseUint(_adg.Value, 10, 32)
			if _fda != nil {
				return _fda
			}
			_fb := uint32(_fd)
			_gfad.FirstSheetAttr = &_fb
			continue
		}
		if _adg.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b" {
			_gdf, _dgeg := _a.ParseUint(_adg.Value, 10, 32)
			if _dgeg != nil {
				return _dgeg
			}
			_agbg := uint32(_gdf)
			_gfad.ActiveTabAttr = &_agbg
			continue
		}
		if _adg.Name.Local == "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067" {
			_cabc, _dgg := _a.ParseBool(_adg.Value)
			if _dgg != nil {
				return _dgg
			}
			_gfad.AutoFilterDateGroupingAttr = &_cabc
			continue
		}
	}
_fg:
	for {
		_abf, _fcbf := d.Token()
		if _fcbf != nil {
			return _fcbf
		}
		switch _edc := _abf.(type) {
		case _gd.StartElement:
			switch _edc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfad.ExtLst = NewCT_ExtensionList()
				if _fga := d.DecodeElement(_gfad.ExtLst, &_edc); _fga != nil {
					return _fga
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _edc.Name)
				if _fage := d.Skip(); _fage != nil {
					return _fage
				}
			}
		case _gd.EndElement:
			break _fg
		case _gd.CharData:
		}
	}
	return nil
}

func (_bcece *ST_Objects) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bcece = 0
	case "\u0061\u006c\u006c":
		*_bcece = 1
	case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
		*_bcece = 2
	case "\u006e\u006f\u006e\u0065":
		*_bcece = 3
	}
	return nil
}

func (_dfcbf *CT_TextField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _baeeg := range start.Attr {
		if _baeeg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dfcbf.TypeAttr.UnmarshalXMLAttr(_baeeg)
			continue
		}
		if _baeeg.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_gbbga, _acdbaf := _a.ParseUint(_baeeg.Value, 10, 32)
			if _acdbaf != nil {
				return _acdbaf
			}
			_afdbe := uint32(_gbbga)
			_dfcbf.PositionAttr = &_afdbe
			continue
		}
	}
	for {
		_cdbgdf, _fddff := d.Token()
		if _fddff != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0073", _fddff)
		}
		if _cadcb, _cebfg := _cdbgdf.(_gd.EndElement); _cebfg && _cadcb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Mdx and its children
func (_egecb *CT_Mdx) Validate() error {
	return _egecb.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078")
}

type CT_RevisionInsertSheet struct {

	// Sheet Id
	SheetIdAttr uint32

	// Sheet Name
	NameAttr string

	// Sheet Position
	SheetPositionAttr uint32
	RIdAttr           *uint32
	UaAttr            *bool
	RaAttr            *bool
}

type CT_Format struct {

	// Format Action
	ActionAttr ST_FormatAction

	// Format Id
	DxfIdAttr *uint32

	// Pivot Table Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_edcgdf *CT_PivotCaches) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_efdfg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}}
	for _, _bcbdf := range _edcgdf.PivotCache {
		e.EncodeElement(_bcbdf, _efdfg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fgfdf *CT_QueryTableDeletedFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fgfdf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fgfdf.CountAttr)})
	}
	e.EncodeToken(start)
	_effgbc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ad\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}}
	for _, _gebba := range _fgfdf.DeletedField {
		e.EncodeElement(_gebba, _effgbc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OutlinePr and its children, prefixing error messages with path
func (_fcaef *CT_OutlinePr) ValidateWithPath(path string) error { return nil }

func (_gafdcc *ST_DataValidationType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dagaf, _fedfe := d.Token()
	if _fedfe != nil {
		return _fedfe
	}
	if _fbaagb, _gbfef := _dagaf.(_gd.EndElement); _gbfef && _fbaagb.Name == start.Name {
		*_gafdcc = 1
		return nil
	}
	if _gddcb, _bfdgb := _dagaf.(_gd.CharData); !_bfdgb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dagaf)
	} else {
		switch string(_gddcb) {
		case "":
			*_gafdcc = 0
		case "\u006e\u006f\u006e\u0065":
			*_gafdcc = 1
		case "\u0077\u0068\u006fl\u0065":
			*_gafdcc = 2
		case "\u0064e\u0063\u0069\u006d\u0061\u006c":
			*_gafdcc = 3
		case "\u006c\u0069\u0073\u0074":
			*_gafdcc = 4
		case "\u0064\u0061\u0074\u0065":
			*_gafdcc = 5
		case "\u0074\u0069\u006d\u0065":
			*_gafdcc = 6
		case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
			*_gafdcc = 7
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_gafdcc = 8
		}
	}
	_dagaf, _fedfe = d.Token()
	if _fedfe != nil {
		return _fedfe
	}
	if _deacad, _fadee := _dagaf.(_gd.EndElement); _fadee && _deacad.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dagaf)
}

// ValidateWithPath validates the CT_SmartTagPr and its children, prefixing error messages with path
func (_aggeg *CT_SmartTagPr) ValidateWithPath(path string) error {
	if _fcgfbe := _aggeg.ShowAttr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0041\u0074\u0074r"); _fcgfbe != nil {
		return _fcgfbe
	}
	return nil
}

func (_bcccf *CT_DrawingHF) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bcccf.IdAttr)})
	if _bcccf.LhoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0068\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.LhoAttr)})
	}
	if _bcccf.LheAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0068\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.LheAttr)})
	}
	if _bcccf.LhfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0068\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.LhfAttr)})
	}
	if _bcccf.ChoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0068\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.ChoAttr)})
	}
	if _bcccf.CheAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0068\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.CheAttr)})
	}
	if _bcccf.ChfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0068\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.ChfAttr)})
	}
	if _bcccf.RhoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0068\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.RhoAttr)})
	}
	if _bcccf.RheAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0068\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.RheAttr)})
	}
	if _bcccf.RhfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0068\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.RhfAttr)})
	}
	if _bcccf.LfoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0066\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.LfoAttr)})
	}
	if _bcccf.LfeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0066\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.LfeAttr)})
	}
	if _bcccf.LffAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0066\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.LffAttr)})
	}
	if _bcccf.CfoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0066\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.CfoAttr)})
	}
	if _bcccf.CfeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0066\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.CfeAttr)})
	}
	if _bcccf.CffAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0066\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.CffAttr)})
	}
	if _bcccf.RfoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0066\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.RfoAttr)})
	}
	if _bcccf.RfeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0066\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.RfeAttr)})
	}
	if _bcccf.RffAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0066\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_bcccf.RffAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bdbeg *ST_RefMode) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fecfcg, _fcfed := d.Token()
	if _fcfed != nil {
		return _fcfed
	}
	if _gdceg, _ddagef := _fecfcg.(_gd.EndElement); _ddagef && _gdceg.Name == start.Name {
		*_bdbeg = 1
		return nil
	}
	if _bdeafa, _bfdafc := _fecfcg.(_gd.CharData); !_bfdafc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fecfcg)
	} else {
		switch string(_bdeafa) {
		case "":
			*_bdbeg = 0
		case "\u0041\u0031":
			*_bdbeg = 1
		case "\u0052\u0031\u0043\u0031":
			*_bdbeg = 2
		}
	}
	_fecfcg, _fcfed = d.Token()
	if _fcfed != nil {
		return _fcfed
	}
	if _dfaebd, _cddfg := _fecfcg.(_gd.EndElement); _cddfg && _dfaebd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fecfcg)
}

// ValidateWithPath validates the CT_DateGroupItem and its children, prefixing error messages with path
func (_ddec *CT_DateGroupItem) ValidateWithPath(path string) error {
	if _ddec.DateTimeGroupingAttr == ST_DateTimeGroupingUnset {
		return _b.Errorf("\u0025s\u002f\u0044a\u0074\u0065\u0054\u0069m\u0065\u0047\u0072o\u0075\u0070\u0069\u006e\u0067\u0041\u0074\u0074\u0072 i\u0073\u0020\u0061 \u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079 \u0066\u0069e\u006c\u0064", path)
	}
	if _cdeb := _ddec.DateTimeGroupingAttr.ValidateWithPath(path + "/\u0044\u0061\u0074\u0065Ti\u006de\u0047\u0072\u006f\u0075\u0070i\u006e\u0067\u0041\u0074\u0074\u0072"); _cdeb != nil {
		return _cdeb
	}
	return nil
}

type ST_PivotAreaType byte

func (_cggfb ST_DataValidationImeMode) String() string {
	switch _cggfb {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u006f\u006e"
	case 4:
		return "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case 5:
		return "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 6:
		return "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 7:
		return "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 8:
		return "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case 9:
		return "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case 10:
		return "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case 11:
		return "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return ""
}

func (_ffbgd *CT_Sheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ffbgd.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ffbgd.SheetIdAttr)})
	if _ffbgd.StateAttr != ST_SheetStateUnset {
		_dbdcf, _cebbgf := _ffbgd.StateAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _cebbgf != nil {
			return _cebbgf
		}
		start.Attr = append(start.Attr, _dbdcf)
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ffbgd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_decdf *ST_HtmlFmt) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cadfa, _edbbd := d.Token()
	if _edbbd != nil {
		return _edbbd
	}
	if _dcabac, _ggeac := _cadfa.(_gd.EndElement); _ggeac && _dcabac.Name == start.Name {
		*_decdf = 1
		return nil
	}
	if _abafg, _dcfdae := _cadfa.(_gd.CharData); !_dcfdae {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cadfa)
	} else {
		switch string(_abafg) {
		case "":
			*_decdf = 0
		case "\u006e\u006f\u006e\u0065":
			*_decdf = 1
		case "\u0072\u0074\u0066":
			*_decdf = 2
		case "\u0061\u006c\u006c":
			*_decdf = 3
		}
	}
	_cadfa, _edbbd = d.Token()
	if _edbbd != nil {
		return _edbbd
	}
	if _acebad, _fgagf := _cadfa.(_gd.EndElement); _fgagf && _acebad.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cadfa)
}

// Validate validates the CT_CacheHierarchy and its children
func (_ceab *CT_CacheHierarchy) Validate() error {
	return _ceab.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

// ValidateWithPath validates the CT_CustomSheetViews and its children, prefixing error messages with path
func (_eebe *CT_CustomSheetViews) ValidateWithPath(path string) error {
	for _fdgeb, _ggdgb := range _eebe.CustomSheetView {
		if _bgeed := _ggdgb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _fdgeb)); _bgeed != nil {
			return _bgeed
		}
	}
	return nil
}

func (_cddbc ST_PatternType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_gcegg := _gd.Attr{}
	_gcegg.Name = name
	switch _cddbc {
	case ST_PatternTypeUnset:
		_gcegg.Value = ""
	case ST_PatternTypeNone:
		_gcegg.Value = "\u006e\u006f\u006e\u0065"
	case ST_PatternTypeSolid:
		_gcegg.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PatternTypeMediumGray:
		_gcegg.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case ST_PatternTypeDarkGray:
		_gcegg.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PatternTypeLightGray:
		_gcegg.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PatternTypeDarkHorizontal:
		_gcegg.Value = "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case ST_PatternTypeDarkVertical:
		_gcegg.Value = "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeDarkDown:
		_gcegg.Value = "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case ST_PatternTypeDarkUp:
		_gcegg.Value = "\u0064\u0061\u0072\u006b\u0055\u0070"
	case ST_PatternTypeDarkGrid:
		_gcegg.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case ST_PatternTypeDarkTrellis:
		_gcegg.Value = "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeLightHorizontal:
		_gcegg.Value = "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case ST_PatternTypeLightVertical:
		_gcegg.Value = "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeLightDown:
		_gcegg.Value = "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case ST_PatternTypeLightUp:
		_gcegg.Value = "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case ST_PatternTypeLightGrid:
		_gcegg.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case ST_PatternTypeLightTrellis:
		_gcegg.Value = "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeGray125:
		_gcegg.Value = "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case ST_PatternTypeGray0625:
		_gcegg.Value = "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return _gcegg, nil
}

func NewCT_DataRefs() *CT_DataRefs { _ebaa := &CT_DataRefs{}; return _ebaa }

// ValidateWithPath validates the CT_Parameters and its children, prefixing error messages with path
func (_gdfdb *CT_Parameters) ValidateWithPath(path string) error {
	for _fbbgeaf, _bgcff := range _gdfdb.Parameter {
		if _bddga := _bgcff.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0050\u0061\u0072a\u006d\u0065\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _fbbgeaf)); _bddga != nil {
			return _bddga
		}
	}
	return nil
}

func (_efedd ST_WebSourceType) Validate() error { return _efedd.ValidateWithPath("") }

func NewCT_SmartTagTypes() *CT_SmartTagTypes { _facgg := &CT_SmartTagTypes{}; return _facgg }

func NewCT_MetadataStringIndex() *CT_MetadataStringIndex {
	_fafff := &CT_MetadataStringIndex{}
	return _fafff
}

func (_dgbe *CT_CalcPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cedf := range start.Attr {
		if _cedf.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061" {
			_egd, _ggf := _a.ParseFloat(_cedf.Value, 64)
			if _ggf != nil {
				return _ggf
			}
			_dgbe.IterateDeltaAttr = &_egd
			continue
		}
		if _cedf.Name.Local == "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065" {
			_dgbe.CalcModeAttr.UnmarshalXMLAttr(_cedf)
			continue
		}
		if _cedf.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_gfbc, _deae := _a.ParseBool(_cedf.Value)
			if _deae != nil {
				return _deae
			}
			_dgbe.FullCalcOnLoadAttr = &_gfbc
			continue
		}
		if _cedf.Name.Local == "\u0072e\u0066\u004d\u006f\u0064\u0065" {
			_dgbe.RefModeAttr.UnmarshalXMLAttr(_cedf)
			continue
		}
		if _cedf.Name.Local == "\u0069t\u0065\u0072\u0061\u0074\u0065" {
			_efafb, _abbf := _a.ParseBool(_cedf.Value)
			if _abbf != nil {
				return _abbf
			}
			_dgbe.IterateAttr = &_efafb
			continue
		}
		if _cedf.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074" {
			_bdg, _fdcf := _a.ParseUint(_cedf.Value, 10, 32)
			if _fdcf != nil {
				return _fdcf
			}
			_feea := uint32(_bdg)
			_dgbe.IterateCountAttr = &_feea
			continue
		}
		if _cedf.Name.Local == "\u0063\u0061\u006c\u0063\u0049\u0064" {
			_bcdd, _bdaa := _a.ParseUint(_cedf.Value, 10, 32)
			if _bdaa != nil {
				return _bdaa
			}
			_edbg := uint32(_bcdd)
			_dgbe.CalcIdAttr = &_edbg
			continue
		}
		if _cedf.Name.Local == "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e" {
			_gfde, _aedgd := _a.ParseBool(_cedf.Value)
			if _aedgd != nil {
				return _aedgd
			}
			_dgbe.FullPrecisionAttr = &_gfde
			continue
		}
		if _cedf.Name.Local == "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064" {
			_cebg, _fggcg := _a.ParseBool(_cedf.Value)
			if _fggcg != nil {
				return _fggcg
			}
			_dgbe.CalcCompletedAttr = &_cebg
			continue
		}
		if _cedf.Name.Local == "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065" {
			_aaaa, _ebfd := _a.ParseBool(_cedf.Value)
			if _ebfd != nil {
				return _ebfd
			}
			_dgbe.CalcOnSaveAttr = &_aaaa
			continue
		}
		if _cedf.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063" {
			_fed, _bcdf := _a.ParseBool(_cedf.Value)
			if _bcdf != nil {
				return _bcdf
			}
			_dgbe.ConcurrentCalcAttr = &_fed
			continue
		}
		if _cedf.Name.Local == "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074" {
			_eeg, _abca := _a.ParseUint(_cedf.Value, 10, 32)
			if _abca != nil {
				return _abca
			}
			_ecfe := uint32(_eeg)
			_dgbe.ConcurrentManualCountAttr = &_ecfe
			continue
		}
		if _cedf.Name.Local == "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063" {
			_deaf, _faba := _a.ParseBool(_cedf.Value)
			if _faba != nil {
				return _faba
			}
			_dgbe.ForceFullCalcAttr = &_deaf
			continue
		}
	}
	for {
		_cbc, _gff := d.Token()
		if _gff != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0061\u006cc\u0050\u0072\u003a\u0020\u0025\u0073", _gff)
		}
		if _bfff, _edfa := _cbc.(_gd.EndElement); _edfa && _bfff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bcggf *CT_RevisionDefinedName) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _affegf := range start.Attr {
		if _affegf.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_accda, _ebffc := _affegf.Value, error(nil)
			if _ebffc != nil {
				return _ebffc
			}
			_bcggf.DescriptionAttr = &_accda
			continue
		}
		if _affegf.Name.Local == "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e" {
			_gcdcg, _deecf := _affegf.Value, error(nil)
			if _deecf != nil {
				return _deecf
			}
			_bcggf.OldDescriptionAttr = &_gcdcg
			continue
		}
		if _affegf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077" {
			_geefg, _bdccc := _a.ParseBool(_affegf.Value)
			if _bdccc != nil {
				return _bdccc
			}
			_bcggf.CustomViewAttr = &_geefg
			continue
		}
		if _affegf.Name.Local == "\u0068\u0065\u006c\u0070" {
			_gegb, _fabfe := _affegf.Value, error(nil)
			if _fabfe != nil {
				return _fabfe
			}
			_bcggf.HelpAttr = &_gegb
			continue
		}
		if _affegf.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_eccge, _aabcb := _a.ParseBool(_affegf.Value)
			if _aabcb != nil {
				return _aabcb
			}
			_bcggf.FunctionAttr = &_eccge
			continue
		}
		if _affegf.Name.Local == "\u006fl\u0064\u0048\u0065\u006c\u0070" {
			_cafcd, _caefc := _affegf.Value, error(nil)
			if _caefc != nil {
				return _caefc
			}
			_bcggf.OldHelpAttr = &_cafcd
			continue
		}
		if _affegf.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_dgee, _gbada := _a.ParseUint(_affegf.Value, 10, 8)
			if _gbada != nil {
				return _gbada
			}
			_ecbfde := uint8(_dgee)
			_bcggf.FunctionGroupIdAttr = &_ecbfde
			continue
		}
		if _affegf.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_egbbd, _acabd := _affegf.Value, error(nil)
			if _acabd != nil {
				return _acabd
			}
			_bcggf.StatusBarAttr = &_egbbd
			continue
		}
		if _affegf.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_gdefg, _eacggc := _a.ParseUint(_affegf.Value, 10, 8)
			if _eacggc != nil {
				return _eacggc
			}
			_bdedc := uint8(_gdefg)
			_bcggf.ShortcutKeyAttr = &_bdedc
			continue
		}
		if _affegf.Name.Local == "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072" {
			_dccfa, _cacca := _affegf.Value, error(nil)
			if _cacca != nil {
				return _cacca
			}
			_bcggf.OldStatusBarAttr = &_dccfa
			continue
		}
		if _affegf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_afcdb, _edgefd := _a.ParseBool(_affegf.Value)
			if _edgefd != nil {
				return _edgefd
			}
			_bcggf.HiddenAttr = &_afcdb
			continue
		}
		if _affegf.Name.Local == "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074" {
			_geffe, _fgaafg := _affegf.Value, error(nil)
			if _fgaafg != nil {
				return _fgaafg
			}
			_bcggf.OldCommentAttr = &_geffe
			continue
		}
		if _affegf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgddc, _aecfd := _affegf.Value, error(nil)
			if _aecfd != nil {
				return _aecfd
			}
			_bcggf.NameAttr = _fgddc
			continue
		}
		if _affegf.Name.Local == "\u0072\u0061" {
			_feggd, _dedcg := _a.ParseBool(_affegf.Value)
			if _dedcg != nil {
				return _dedcg
			}
			_bcggf.RaAttr = &_feggd
			continue
		}
		if _affegf.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_ebbfa, _ebafd := _a.ParseUint(_affegf.Value, 10, 32)
			if _ebafd != nil {
				return _ebafd
			}
			_cgcgbb := uint32(_ebbfa)
			_bcggf.LocalSheetIdAttr = &_cgcgbb
			continue
		}
		if _affegf.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_egbea, _abdae := _affegf.Value, error(nil)
			if _abdae != nil {
				return _abdae
			}
			_bcggf.CommentAttr = &_egbea
			continue
		}
		if _affegf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_affgc, _cfdeg := _affegf.Value, error(nil)
			if _cfdeg != nil {
				return _cfdeg
			}
			_bcggf.CustomMenuAttr = &_affgc
			continue
		}
		if _affegf.Name.Local == "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_cdgffd, _feddad := _a.ParseBool(_affegf.Value)
			if _feddad != nil {
				return _feddad
			}
			_bcggf.OldFunctionAttr = &_cdgffd
			continue
		}
		if _affegf.Name.Local == "\u0075\u0061" {
			_bbbfb, _gbdgg := _a.ParseBool(_affegf.Value)
			if _gbdgg != nil {
				return _gbdgg
			}
			_bcggf.UaAttr = &_bbbfb
			continue
		}
		if _affegf.Name.Local == "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079" {
			_cbbccb, _gbfea := _a.ParseUint(_affegf.Value, 10, 8)
			if _gbfea != nil {
				return _gbfea
			}
			_ffcefb := uint8(_cbbccb)
			_bcggf.OldShortcutKeyAttr = &_ffcefb
			continue
		}
		if _affegf.Name.Local == "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n" {
			_ebgbea, _bggbf := _a.ParseBool(_affegf.Value)
			if _bggbf != nil {
				return _bggbf
			}
			_bcggf.OldHiddenAttr = &_ebgbea
			continue
		}
		if _affegf.Name.Local == "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_egfdb, _eeaef := _affegf.Value, error(nil)
			if _eeaef != nil {
				return _eeaef
			}
			_bcggf.OldCustomMenuAttr = &_egfdb
			continue
		}
		if _affegf.Name.Local == "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064" {
			_bdafgd, _ffcec := _a.ParseUint(_affegf.Value, 10, 8)
			if _ffcec != nil {
				return _ffcec
			}
			_cfga := uint8(_bdafgd)
			_bcggf.OldFunctionGroupIdAttr = &_cfga
			continue
		}
		if _affegf.Name.Local == "\u0072\u0049\u0064" {
			_ebbbf, _gbcbg := _a.ParseUint(_affegf.Value, 10, 32)
			if _gbcbg != nil {
				return _gbcbg
			}
			_eacga := uint32(_ebbbf)
			_bcggf.RIdAttr = &_eacga
			continue
		}
	}
_bgeac:
	for {
		_gcdef, _fcdaa := d.Token()
		if _fcdaa != nil {
			return _fcdaa
		}
		switch _bgeafe := _gcdef.(type) {
		case _gd.StartElement:
			switch _bgeafe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				_bcggf.Formula = new(string)
				if _edbgf := d.DecodeElement(_bcggf.Formula, &_bgeafe); _edbgf != nil {
					return _edbgf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_bcggf.OldFormula = new(string)
				if _ffcgf := d.DecodeElement(_bcggf.OldFormula, &_bgeafe); _ffcgf != nil {
					return _ffcgf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcggf.ExtLst = NewCT_ExtensionList()
				if _cbeage := d.DecodeElement(_bcggf.ExtLst, &_bgeafe); _cbeage != nil {
					return _cbeage
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0020\u0025\u0076", _bgeafe.Name)
				if _adbdde := d.Skip(); _adbdde != nil {
					return _adbdde
				}
			}
		case _gd.EndElement:
			break _bgeac
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_RowHierarchiesUsage() *CT_RowHierarchiesUsage {
	_fcbce := &CT_RowHierarchiesUsage{}
	return _fcbce
}

func (_gddge ST_DataValidationType) String() string {
	switch _gddge {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u0068\u006fl\u0065"
	case 3:
		return "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case 4:
		return "\u006c\u0069\u0073\u0074"
	case 5:
		return "\u0064\u0061\u0074\u0065"
	case 6:
		return "\u0074\u0069\u006d\u0065"
	case 7:
		return "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case 8:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

func (_ffab *CT_Chartsheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ffab.SheetViews = NewCT_ChartsheetViews()
	_ffab.Drawing = NewCT_Drawing()
_eadcc:
	for {
		_gace, _fdfbb := d.Token()
		if _fdfbb != nil {
			return _fdfbb
		}
		switch _eefc := _gace.(type) {
		case _gd.StartElement:
			switch _eefc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_ffab.SheetPr = NewCT_ChartsheetPr()
				if _abdc := d.DecodeElement(_ffab.SheetPr, &_eefc); _abdc != nil {
					return _abdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _fade := d.DecodeElement(_ffab.SheetViews, &_eefc); _fade != nil {
					return _fade
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_ffab.SheetProtection = NewCT_ChartsheetProtection()
				if _gdfc := d.DecodeElement(_ffab.SheetProtection, &_eefc); _gdfc != nil {
					return _gdfc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_ffab.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _beefb := d.DecodeElement(_ffab.CustomSheetViews, &_eefc); _beefb != nil {
					return _beefb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_ffab.PageMargins = NewCT_PageMargins()
				if _eabb := d.DecodeElement(_ffab.PageMargins, &_eefc); _eabb != nil {
					return _eabb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_ffab.PageSetup = NewCT_CsPageSetup()
				if _geae := d.DecodeElement(_ffab.PageSetup, &_eefc); _geae != nil {
					return _geae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_ffab.HeaderFooter = NewCT_HeaderFooter()
				if _dggb := d.DecodeElement(_ffab.HeaderFooter, &_eefc); _dggb != nil {
					return _dggb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _ggcb := d.DecodeElement(_ffab.Drawing, &_eefc); _ggcb != nil {
					return _ggcb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_ffab.LegacyDrawing = NewCT_LegacyDrawing()
				if _aegcg := d.DecodeElement(_ffab.LegacyDrawing, &_eefc); _aegcg != nil {
					return _aegcg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_ffab.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _fbeg := d.DecodeElement(_ffab.LegacyDrawingHF, &_eefc); _fbeg != nil {
					return _fbeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_ffab.DrawingHF = NewCT_DrawingHF()
				if _bfee := d.DecodeElement(_ffab.DrawingHF, &_eefc); _bfee != nil {
					return _bfee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_ffab.Picture = NewCT_SheetBackgroundPicture()
				if _agbc := d.DecodeElement(_ffab.Picture, &_eefc); _agbc != nil {
					return _agbc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_ffab.WebPublishItems = NewCT_WebPublishItems()
				if _eaeb := d.DecodeElement(_ffab.WebPublishItems, &_eefc); _eaeb != nil {
					return _eaeb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffab.ExtLst = NewCT_ExtensionList()
				if _fafdc := d.DecodeElement(_ffab.ExtLst, &_eefc); _fafdc != nil {
					return _fafdc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043h\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _eefc.Name)
				if _ecebf := d.Skip(); _ecebf != nil {
					return _ecebf
				}
			}
		case _gd.EndElement:
			break _eadcc
		case _gd.CharData:
		}
	}
	return nil
}

func (_adec *CT_DataConsolidate) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _adec.FunctionAttr != ST_DataConsolidateFunctionUnset {
		_fdda, _bdca := _adec.FunctionAttr.MarshalXMLAttr(_gd.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"})
		if _bdca != nil {
			return _bdca
		}
		start.Attr = append(start.Attr, _fdda)
	}
	if _adec.StartLabelsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_adec.StartLabelsAttr))})
	}
	if _adec.LeftLabelsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_adec.LeftLabelsAttr))})
	}
	if _adec.TopLabelsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_adec.TopLabelsAttr))})
	}
	if _adec.LinkAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_adec.LinkAttr))})
	}
	e.EncodeToken(start)
	if _adec.DataRefs != nil {
		_gcbaf := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}}
		e.EncodeElement(_adec.DataRefs, _gcbaf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the PivotCacheRecords and its children, prefixing error messages with path
func (_babfe *PivotCacheRecords) ValidateWithPath(path string) error {
	if _dbgeg := _babfe.CT_PivotCacheRecords.ValidateWithPath(path); _dbgeg != nil {
		return _dbgeg
	}
	return nil
}

func (_deba *CT_Field) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078"}, Value: _b.Sprintf("\u0025\u0076", _deba.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bgdccd *CT_RowHierarchiesUsage) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cgfdd := range start.Attr {
		if _cgfdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_deacgb, _ffccb := _a.ParseUint(_cgfdd.Value, 10, 32)
			if _ffccb != nil {
				return _ffccb
			}
			_edgcc := uint32(_deacgb)
			_bgdccd.CountAttr = &_edgcc
			continue
		}
	}
_beead:
	for {
		_aagafg, _afadb := d.Token()
		if _afadb != nil {
			return _afadb
		}
		switch _deccfb := _aagafg.(type) {
		case _gd.StartElement:
			switch _deccfb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_fcacc := NewCT_HierarchyUsage()
				if _aegdcb := d.DecodeElement(_fcacc, &_deccfb); _aegdcb != nil {
					return _aegdcb
				}
				_bgdccd.RowHierarchyUsage = append(_bgdccd.RowHierarchyUsage, _fcacc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u006f\u0077\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _deccfb.Name)
				if _acffec := d.Skip(); _acffec != nil {
					return _acffec
				}
			}
		case _gd.EndElement:
			break _beead
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Hyperlink and its children
func (_gfgbc *CT_Hyperlink) Validate() error {
	return _gfgbc.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

// Validate validates the CT_RangePr and its children
func (_baagc *CT_RangePr) Validate() error {
	return _baagc.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072")
}

// ValidateWithPath validates the CT_RevisionInsertSheet and its children, prefixing error messages with path
func (_gbefb *CT_RevisionInsertSheet) ValidateWithPath(path string) error { return nil }

func NewCT_Col() *CT_Col { _edac := &CT_Col{}; return _edac }

func (_fdfbe *CT_MeasureDimensionMap) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fdfbe.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_fdfbe.MeasureGroupAttr)})
	}
	if _fdfbe.DimensionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _b.Sprintf("\u0025\u0076", *_fdfbe.DimensionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_daegd *CT_DataValidations) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gfdfg := range start.Attr {
		if _gfdfg.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073" {
			_cfbd, _aafbg := _a.ParseBool(_gfdfg.Value)
			if _aafbg != nil {
				return _aafbg
			}
			_daegd.DisablePromptsAttr = &_cfbd
			continue
		}
		if _gfdfg.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_gdcab, _cdcfe := _a.ParseUint(_gfdfg.Value, 10, 32)
			if _cdcfe != nil {
				return _cdcfe
			}
			_gcecc := uint32(_gdcab)
			_daegd.XWindowAttr = &_gcecc
			continue
		}
		if _gfdfg.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_faegd, _fbae := _a.ParseUint(_gfdfg.Value, 10, 32)
			if _fbae != nil {
				return _fbae
			}
			_badgcc := uint32(_faegd)
			_daegd.YWindowAttr = &_badgcc
			continue
		}
		if _gfdfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbegf, _gagc := _a.ParseUint(_gfdfg.Value, 10, 32)
			if _gagc != nil {
				return _gagc
			}
			_cabdf := uint32(_cbegf)
			_daegd.CountAttr = &_cabdf
			continue
		}
	}
_badafd:
	for {
		_ccc, _fcgb := d.Token()
		if _fcgb != nil {
			return _fcgb
		}
		switch _eaaee := _ccc.(type) {
		case _gd.StartElement:
			switch _eaaee.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}:
				_ceedc := NewCT_DataValidation()
				if _cfdd := d.DecodeElement(_ceedc, &_eaaee); _cfdd != nil {
					return _cfdd
				}
				_daegd.DataValidation = append(_daegd.DataValidation, _ceedc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061l\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _eaaee.Name)
				if _bfdac := d.Skip(); _bfdac != nil {
					return _bfdac
				}
			}
		case _gd.EndElement:
			break _badafd
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Dimensions and its children, prefixing error messages with path
func (_fbded *CT_Dimensions) ValidateWithPath(path string) error {
	for _bffba, _ggfa := range _fbded.Dimension {
		if _gdff := _ggfa.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0044\u0069\u006de\u006e\u0073\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _bffba)); _gdff != nil {
			return _gdff
		}
	}
	return nil
}

type CT_DefinedNames struct {

	// Defined Name
	DefinedName []*CT_DefinedName
}

func (_dgbc *CT_IgnoredError) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbebb := range start.Attr {
		if _bbebb.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_dgafa, _gcefe := ParseSliceST_Sqref(_bbebb.Value)
			if _gcefe != nil {
				return _gcefe
			}
			_dgbc.SqrefAttr = _dgafa
			continue
		}
		if _bbebb.Name.Local == "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr" {
			_cgbdb, _agcbg := _a.ParseBool(_bbebb.Value)
			if _agcbg != nil {
				return _agcbg
			}
			_dgbc.EvalErrorAttr = &_cgbdb
			continue
		}
		if _bbebb.Name.Local == "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072" {
			_gcaca, _dgcfb := _a.ParseBool(_bbebb.Value)
			if _dgcfb != nil {
				return _dgcfb
			}
			_dgbc.TwoDigitTextYearAttr = &_gcaca
			continue
		}
		if _bbebb.Name.Local == "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074" {
			_effae, _fface := _a.ParseBool(_bbebb.Value)
			if _fface != nil {
				return _fface
			}
			_dgbc.NumberStoredAsTextAttr = &_effae
			continue
		}
		if _bbebb.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_gffe, _fdddc := _a.ParseBool(_bbebb.Value)
			if _fdddc != nil {
				return _fdddc
			}
			_dgbc.FormulaAttr = &_gffe
			continue
		}
		if _bbebb.Name.Local == "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065" {
			_dceeb, _fbfge := _a.ParseBool(_bbebb.Value)
			if _fbfge != nil {
				return _fbfge
			}
			_dgbc.FormulaRangeAttr = &_dceeb
			continue
		}
		if _bbebb.Name.Local == "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061" {
			_agab, _baaef := _a.ParseBool(_bbebb.Value)
			if _baaef != nil {
				return _baaef
			}
			_dgbc.UnlockedFormulaAttr = &_agab
			continue
		}
		if _bbebb.Name.Local == "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065" {
			_ggfgc, _efccae := _a.ParseBool(_bbebb.Value)
			if _efccae != nil {
				return _efccae
			}
			_dgbc.EmptyCellReferenceAttr = &_ggfgc
			continue
		}
		if _bbebb.Name.Local == "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e" {
			_gcdbe, _gegf := _a.ParseBool(_bbebb.Value)
			if _gegf != nil {
				return _gegf
			}
			_dgbc.ListDataValidationAttr = &_gcdbe
			continue
		}
		if _bbebb.Name.Local == "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e" {
			_cbdad, _ebbaae := _a.ParseBool(_bbebb.Value)
			if _ebbaae != nil {
				return _ebbaae
			}
			_dgbc.CalculatedColumnAttr = &_cbdad
			continue
		}
	}
	for {
		_cgad, _gddde := d.Token()
		if _gddde != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065d\u0045\u0072\u0072o\u0072:\u0020\u0025\u0073", _gddde)
		}
		if _ccacb, _gfbdg := _cgad.(_gd.EndElement); _gfbdg && _ccacb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Map() *CT_Map { _cfccg := &CT_Map{}; return _cfccg }

// Validate validates the CT_Macrosheet and its children
func (_gffc *CT_Macrosheet) Validate() error {
	return _gffc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074")
}

func (_aacddb ST_SmartTagShow) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ecadga := _gd.Attr{}
	_ecadga.Name = name
	switch _aacddb {
	case ST_SmartTagShowUnset:
		_ecadga.Value = ""
	case ST_SmartTagShowAll:
		_ecadga.Value = "\u0061\u006c\u006c"
	case ST_SmartTagShowNone:
		_ecadga.Value = "\u006e\u006f\u006e\u0065"
	case ST_SmartTagShowNoIndicator:
		_ecadga.Value = "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return _ecadga, nil
}

const (
	ST_QualifierUnset       ST_Qualifier = 0
	ST_QualifierDoubleQuote ST_Qualifier = 1
	ST_QualifierSingleQuote ST_Qualifier = 2
	ST_QualifierNone        ST_Qualifier = 3
)

// Validate validates the CT_CalcCell and its children
func (_cca *CT_CalcCell) Validate() error {
	return _cca.ValidateWithPath("C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c")
}

const (
	ST_FilterOperatorUnset              ST_FilterOperator = 0
	ST_FilterOperatorEqual              ST_FilterOperator = 1
	ST_FilterOperatorLessThan           ST_FilterOperator = 2
	ST_FilterOperatorLessThanOrEqual    ST_FilterOperator = 3
	ST_FilterOperatorNotEqual           ST_FilterOperator = 4
	ST_FilterOperatorGreaterThanOrEqual ST_FilterOperator = 5
	ST_FilterOperatorGreaterThan        ST_FilterOperator = 6
)

// ValidateWithPath validates the CT_RevisionConflict and its children, prefixing error messages with path
func (_edggc *CT_RevisionConflict) ValidateWithPath(path string) error { return nil }

func NewCT_TableFormula() *CT_TableFormula { _geggc := &CT_TableFormula{}; return _geggc }

type CT_GroupMember struct {

	// Group Member Unique Name
	UniqueNameAttr string

	// Group
	GroupAttr *bool
}

// ValidateWithPath validates the CT_Stylesheet and its children, prefixing error messages with path
func (_bfecag *CT_Stylesheet) ValidateWithPath(path string) error {
	if _bfecag.NumFmts != nil {
		if _becfb := _bfecag.NumFmts.ValidateWithPath(path + "\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u0073"); _becfb != nil {
			return _becfb
		}
	}
	if _bfecag.Fonts != nil {
		if _fbebga := _bfecag.Fonts.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0073"); _fbebga != nil {
			return _fbebga
		}
	}
	if _bfecag.Fills != nil {
		if _cafcb := _bfecag.Fills.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0073"); _cafcb != nil {
			return _cafcb
		}
	}
	if _bfecag.Borders != nil {
		if _ccebg := _bfecag.Borders.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0073"); _ccebg != nil {
			return _ccebg
		}
	}
	if _bfecag.CellStyleXfs != nil {
		if _decce := _bfecag.CellStyleXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"); _decce != nil {
			return _decce
		}
	}
	if _bfecag.CellXfs != nil {
		if _dgffbg := _bfecag.CellXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0058\u0066\u0073"); _dgffbg != nil {
			return _dgffbg
		}
	}
	if _bfecag.CellStyles != nil {
		if _decafb := _bfecag.CellStyles.ValidateWithPath(path + "/\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"); _decafb != nil {
			return _decafb
		}
	}
	if _bfecag.Dxfs != nil {
		if _afffd := _bfecag.Dxfs.ValidateWithPath(path + "\u002f\u0044\u0078f\u0073"); _afffd != nil {
			return _afffd
		}
	}
	if _bfecag.TableStyles != nil {
		if _debfc := _bfecag.TableStyles.ValidateWithPath(path + "\u002f\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"); _debfc != nil {
			return _debfc
		}
	}
	if _bfecag.Colors != nil {
		if _eacab := _bfecag.Colors.ValidateWithPath(path + "\u002fC\u006f\u006c\u006f\u0072\u0073"); _eacab != nil {
			return _eacab
		}
	}
	if _bfecag.ExtLst != nil {
		if _edfbc := _bfecag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edfbc != nil {
			return _edfbc
		}
	}
	return nil
}

func (_gggg *CT_CellSmartTagPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ddgcg := range start.Attr {
		if _ddgcg.Name.Local == "\u006b\u0065\u0079" {
			_ffgf, _adaa := _ddgcg.Value, error(nil)
			if _adaa != nil {
				return _adaa
			}
			_gggg.KeyAttr = _ffgf
			continue
		}
		if _ddgcg.Name.Local == "\u0076\u0061\u006c" {
			_eegf, _gfdea := _ddgcg.Value, error(nil)
			if _gfdea != nil {
				return _gfdea
			}
			_gggg.ValAttr = _eegf
			continue
		}
	}
	for {
		_ebadg, _fggd := d.Token()
		if _fggd != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072: \u0025\u0073", _fggd)
		}
		if _adgdg, _bfeb := _ebadg.(_gd.EndElement); _bfeb && _adgdg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Connection() *CT_Connection { _dcda := &CT_Connection{}; return _dcda }

type CT_ExternalRow struct {

	// Row
	RAttr uint32

	// External Cell Data
	Cell []*CT_ExternalCell
}

func (_bceg *CT_DataRef) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _adge := range start.Attr {
		if _adge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _adge.Name.Local == "\u0069\u0064" || _adge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _adge.Name.Local == "\u0069\u0064" {
			_begbf, _cebgb := _adge.Value, error(nil)
			if _cebgb != nil {
				return _cebgb
			}
			_bceg.IdAttr = &_begbf
			continue
		}
		if _adge.Name.Local == "\u0072\u0065\u0066" {
			_fcag, _gbca := _adge.Value, error(nil)
			if _gbca != nil {
				return _gbca
			}
			_bceg.RefAttr = &_fcag
			continue
		}
		if _adge.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fceb, _bbdda := _adge.Value, error(nil)
			if _bbdda != nil {
				return _bbdda
			}
			_bceg.NameAttr = &_fceb
			continue
		}
		if _adge.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_ecde, _gdcb := _adge.Value, error(nil)
			if _gdcb != nil {
				return _gdcb
			}
			_bceg.SheetAttr = &_ecde
			continue
		}
	}
	for {
		_afceb, _defaf := d.Token()
		if _defaf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u003a\u0020%\u0073", _defaf)
		}
		if _bbfac, _ebea := _afceb.(_gd.EndElement); _ebea && _bbfac.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_VerticalAlignFontProperty() *CT_VerticalAlignFontProperty {
	_agbdf := &CT_VerticalAlignFontProperty{}
	_agbdf.ValAttr = _af.ST_VerticalAlignRun(1)
	return _agbdf
}

// Validate validates the CT_DataRef and its children
func (_agag *CT_DataRef) Validate() error {
	return _agag.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066")
}

// ValidateWithPath validates the CT_DdeLink and its children, prefixing error messages with path
func (_ceged *CT_DdeLink) ValidateWithPath(path string) error {
	if _ceged.DdeItems != nil {
		if _ddadb := _ceged.DdeItems.ValidateWithPath(path + "\u002fD\u0064\u0065\u0049\u0074\u0065\u006ds"); _ddadb != nil {
			return _ddadb
		}
	}
	return nil
}

func (_bcfdg *ST_Pane) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bcfdg = 0
	case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_bcfdg = 1
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_bcfdg = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_bcfdg = 3
	case "\u0074o\u0070\u004c\u0065\u0066\u0074":
		*_bcfdg = 4
	}
	return nil
}

// ValidateWithPath validates the CT_CellSmartTagPr and its children, prefixing error messages with path
func (_gcfcc *CT_CellSmartTagPr) ValidateWithPath(path string) error { return nil }

func NewCT_Row() *CT_Row { _fbffga := &CT_Row{}; return _fbffga }

func (_baedg ST_PageOrder) String() string {
	switch _baedg {
	case 0:
		return ""
	case 1:
		return "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case 2:
		return "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return ""
}

func (_adedg *CT_ColorScale) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cabd:
	for {
		_bgef, _cbeg := d.Token()
		if _cbeg != nil {
			return _cbeg
		}
		switch _ecfdb := _bgef.(type) {
		case _gd.StartElement:
			switch _ecfdb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_afdbg := NewCT_Cfvo()
				if _eggd := d.DecodeElement(_afdbg, &_ecfdb); _eggd != nil {
					return _eggd
				}
				_adedg.Cfvo = append(_adedg.Cfvo, _afdbg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cfad := NewCT_Color()
				if _dbdb := d.DecodeElement(_cfad, &_ecfdb); _dbdb != nil {
					return _dbdb
				}
				_adedg.Color = append(_adedg.Color, _cfad)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065 \u0025\u0076", _ecfdb.Name)
				if _gceb := d.Skip(); _gceb != nil {
					return _gceb
				}
			}
		case _gd.EndElement:
			break _cabd
		case _gd.CharData:
		}
	}
	return nil
}

type CT_CalcChain struct {

	// Cell
	C      []*CT_CalcCell
	ExtLst *CT_ExtensionList
}

func NewCT_QueryTable() *CT_QueryTable { _eefdd := &CT_QueryTable{}; return _eefdd }

// Validate validates the EG_ExtensionList and its children
func (_ebafb *EG_ExtensionList) Validate() error {
	return _ebafb.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

func NewCT_WebPublishObject() *CT_WebPublishObject { _acebc := &CT_WebPublishObject{}; return _acebc }

func NewCT_RevisionRowColumn() *CT_RevisionRowColumn {
	_dcfca := &CT_RevisionRowColumn{}
	_dcfca.ActionAttr = ST_rwColActionType(1)
	return _dcfca
}

func (_beddeg ST_PivotAreaType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_beddeg.String(), start)
}

const (
	ST_TextVAlignUnset       ST_TextVAlign = 0
	ST_TextVAlignTop         ST_TextVAlign = 1
	ST_TextVAlignCenter      ST_TextVAlign = 2
	ST_TextVAlignBottom      ST_TextVAlign = 3
	ST_TextVAlignJustify     ST_TextVAlign = 4
	ST_TextVAlignDistributed ST_TextVAlign = 5
)

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_gcbg *CT_Boolean) ValidateWithPath(path string) error {
	for _ccg, _cdbg := range _gcbg.X {
		if _bdag := _cdbg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _ccg)); _bdag != nil {
			return _bdag
		}
	}
	return nil
}

func (_feafg *CT_Formats) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dbefd := range start.Attr {
		if _dbefd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_faegag, _abfg := _a.ParseUint(_dbefd.Value, 10, 32)
			if _abfg != nil {
				return _abfg
			}
			_dgbfg := uint32(_faegag)
			_feafg.CountAttr = &_dgbfg
			continue
		}
	}
_egbac:
	for {
		_fbfgg, _gcfec := d.Token()
		if _gcfec != nil {
			return _gcfec
		}
		switch _edae := _fbfgg.(type) {
		case _gd.StartElement:
			switch _edae.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}:
				_dgbeg := NewCT_Format()
				if _cagec := d.DecodeElement(_dgbeg, &_edae); _cagec != nil {
					return _cagec
				}
				_feafg.Format = append(_feafg.Format, _dgbeg)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _edae.Name)
				if _dcdg := d.Skip(); _dcdg != nil {
					return _dcdg
				}
			}
		case _gd.EndElement:
			break _egbac
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Dxf and its children
func (_gfgde *CT_Dxf) Validate() error {
	return _gfgde.ValidateWithPath("\u0043\u0054\u005f\u0044\u0078\u0066")
}

func (_fagdf *CT_I) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fagdf.TAttr != ST_ItemTypeUnset {
		_ggga, _adafa := _fagdf.TAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074"})
		if _adafa != nil {
			return _adafa
		}
		start.Attr = append(start.Attr, _ggga)
	}
	if _fagdf.RAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_fagdf.RAttr)})
	}
	if _fagdf.IAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_fagdf.IAttr)})
	}
	e.EncodeToken(start)
	if _fagdf.X != nil {
		_afcdg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dagfae := range _fagdf.X {
			e.EncodeElement(_dagfae, _afcdg)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cfee *CT_ConditionalFormat) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cfee.ScopeAttr != ST_ScopeUnset {
		_fbfg, _gbee := _cfee.ScopeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0063\u006fp\u0065"})
		if _gbee != nil {
			return _gbee
		}
		start.Attr = append(start.Attr, _fbfg)
	}
	if _cfee.TypeAttr != ST_TypeUnset {
		_fgab, _dfgc := _cfee.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dfgc != nil {
			return _dfgc
		}
		start.Attr = append(start.Attr, _fgab)
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _b.Sprintf("\u0025\u0076", _cfee.PriorityAttr)})
	e.EncodeToken(start)
	_ffad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}}
	e.EncodeElement(_cfee.PivotAreas, _ffad)
	if _cfee.ExtLst != nil {
		_ecfc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfee.ExtLst, _ecfc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotFields and its children
func (_fbffb *CT_PivotFields) Validate() error {
	return _fbffb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073")
}

// ValidateWithPath validates the CT_Break and its children, prefixing error messages with path
func (_afc *CT_Break) ValidateWithPath(path string) error { return nil }

func (_dbgc *CT_DeletedField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ggab := range start.Attr {
		if _ggab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ggfba, _eeca := _ggab.Value, error(nil)
			if _eeca != nil {
				return _eeca
			}
			_dbgc.NameAttr = _ggfba
			continue
		}
	}
	for {
		_bgcf, _bdeb := d.Token()
		if _bdeb != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0044\u0065\u006c\u0065\u0074\u0065d\u0046\u0069\u0065l\u0064:\u0020\u0025\u0073", _bdeb)
		}
		if _gbfc, _dgaag := _bgcf.(_gd.EndElement); _dgaag && _gbfc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_IgnoredErrors and its children
func (_gdcge *CT_IgnoredErrors) Validate() error {
	return _gdcge.ValidateWithPath("\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073")
}

func NewCT_DynamicFilter() *CT_DynamicFilter {
	_ggdgg := &CT_DynamicFilter{}
	_ggdgg.TypeAttr = ST_DynamicFilterType(1)
	return _ggdgg
}

// Validate validates the CT_PageMargins and its children
func (_efbdcc *CT_PageMargins) Validate() error {
	return _efbdcc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073")
}

func (_gfdbcg ST_Type) String() string {
	switch _gfdbcg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u006c"
	case 3:
		return "\u0072\u006f\u0077"
	case 4:
		return "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return ""
}

func NewCT_PCDSCPage() *CT_PCDSCPage { _edffe := &CT_PCDSCPage{}; return _edffe }

type CT_CellStyle struct {

	// User Defined Cell Style
	NameAttr *string

	// Format Id
	XfIdAttr uint32

	// Built-In Style Id
	BuiltinIdAttr *uint32

	// Outline Style
	ILevelAttr *uint32

	// Hidden Style
	HiddenAttr *bool

	// Custom Built In
	CustomBuiltinAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dddgcb ST_DynamicFilterType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_eefbed := _gd.Attr{}
	_eefbed.Name = name
	switch _dddgcb {
	case ST_DynamicFilterTypeUnset:
		_eefbed.Value = ""
	case ST_DynamicFilterTypeNull:
		_eefbed.Value = "\u006e\u0075\u006c\u006c"
	case ST_DynamicFilterTypeAboveAverage:
		_eefbed.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeBelowAverage:
		_eefbed.Value = "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeTomorrow:
		_eefbed.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_DynamicFilterTypeToday:
		_eefbed.Value = "\u0074\u006f\u0064a\u0079"
	case ST_DynamicFilterTypeYesterday:
		_eefbed.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_DynamicFilterTypeNextWeek:
		_eefbed.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeThisWeek:
		_eefbed.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeLastWeek:
		_eefbed.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeNextMonth:
		_eefbed.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeThisMonth:
		_eefbed.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeLastMonth:
		_eefbed.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeNextQuarter:
		_eefbed.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeThisQuarter:
		_eefbed.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeLastQuarter:
		_eefbed.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeNextYear:
		_eefbed.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeThisYear:
		_eefbed.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeLastYear:
		_eefbed.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeYearToDate:
		_eefbed.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_DynamicFilterTypeQ1:
		_eefbed.Value = "\u0051\u0031"
	case ST_DynamicFilterTypeQ2:
		_eefbed.Value = "\u0051\u0032"
	case ST_DynamicFilterTypeQ3:
		_eefbed.Value = "\u0051\u0033"
	case ST_DynamicFilterTypeQ4:
		_eefbed.Value = "\u0051\u0034"
	case ST_DynamicFilterTypeM1:
		_eefbed.Value = "\u004d\u0031"
	case ST_DynamicFilterTypeM2:
		_eefbed.Value = "\u004d\u0032"
	case ST_DynamicFilterTypeM3:
		_eefbed.Value = "\u004d\u0033"
	case ST_DynamicFilterTypeM4:
		_eefbed.Value = "\u004d\u0034"
	case ST_DynamicFilterTypeM5:
		_eefbed.Value = "\u004d\u0035"
	case ST_DynamicFilterTypeM6:
		_eefbed.Value = "\u004d\u0036"
	case ST_DynamicFilterTypeM7:
		_eefbed.Value = "\u004d\u0037"
	case ST_DynamicFilterTypeM8:
		_eefbed.Value = "\u004d\u0038"
	case ST_DynamicFilterTypeM9:
		_eefbed.Value = "\u004d\u0039"
	case ST_DynamicFilterTypeM10:
		_eefbed.Value = "\u004d\u0031\u0030"
	case ST_DynamicFilterTypeM11:
		_eefbed.Value = "\u004d\u0031\u0031"
	case ST_DynamicFilterTypeM12:
		_eefbed.Value = "\u004d\u0031\u0032"
	}
	return _eefbed, nil
}

func NewCT_Chartsheet() *CT_Chartsheet {
	_aeag := &CT_Chartsheet{}
	_aeag.SheetViews = NewCT_ChartsheetViews()
	_aeag.Drawing = NewCT_Drawing()
	return _aeag
}

// Validate validates the CT_FontScheme and its children
func (_egef *CT_FontScheme) Validate() error {
	return _egef.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

func (_bdacbd *CT_UnderlineProperty) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egdeb := range start.Attr {
		if _egdeb.Name.Local == "\u0076\u0061\u006c" {
			_bdacbd.ValAttr.UnmarshalXMLAttr(_egdeb)
			continue
		}
	}
	for {
		_afbadc, _ddaaf := d.Token()
		if _ddaaf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u0065r\u006ci\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _ddaaf)
		}
		if _fbbdd, _gfddf := _afbadc.(_gd.EndElement); _gfddf && _fbbdd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_adea *CT_ConditionalFormatting) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egdd := range start.Attr {
		if _egdd.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_ffda, _ddfb := _a.ParseBool(_egdd.Value)
			if _ddfb != nil {
				return _ddfb
			}
			_adea.PivotAttr = &_ffda
			continue
		}
		if _egdd.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bfaa, _dgaac := ParseSliceST_Sqref(_egdd.Value)
			if _dgaac != nil {
				return _dgaac
			}
			_adea.SqrefAttr = &_bfaa
			continue
		}
	}
_fcefb:
	for {
		_fagc, _bedgd := d.Token()
		if _bedgd != nil {
			return _bedgd
		}
		switch _ddaff := _fagc.(type) {
		case _gd.StartElement:
			switch _ddaff.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}:
				_dfec := NewCT_CfRule()
				if _bacea := d.DecodeElement(_dfec, &_ddaff); _bacea != nil {
					return _bacea
				}
				_adea.CfRule = append(_adea.CfRule, _dfec)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adea.ExtLst = NewCT_ExtensionList()
				if _bedcg := d.DecodeElement(_adea.ExtLst, &_ddaff); _bedcg != nil {
					return _bedcg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067\u0020%\u0076", _ddaff.Name)
				if _bbbg := d.Skip(); _bbbg != nil {
					return _bbbg
				}
			}
		case _gd.EndElement:
			break _fcefb
		case _gd.CharData:
		}
	}
	return nil
}

func (_bgdeac ST_DynamicFilterType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bgdeac.String(), start)
}

func NewCT_ExternalSheetData() *CT_ExternalSheetData { _gaga := &CT_ExternalSheetData{}; return _gaga }

func NewCT_CellStyles() *CT_CellStyles { _geee := &CT_CellStyles{}; return _geee }

type CT_MeasureDimensionMaps struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	Map []*CT_MeasureDimensionMap
}

// Validate validates the CT_MdxKPI and its children
func (_ecfeg *CT_MdxKPI) Validate() error {
	return _ecfeg.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I")
}

func (_ccfgd ST_FieldSortType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_aabacb := _gd.Attr{}
	_aabacb.Name = name
	switch _ccfgd {
	case ST_FieldSortTypeUnset:
		_aabacb.Value = ""
	case ST_FieldSortTypeManual:
		_aabacb.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_FieldSortTypeAscending:
		_aabacb.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_FieldSortTypeDescending:
		_aabacb.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return _aabacb, nil
}

type CT_RElt struct {

	// Run Properties
	RPr *CT_RPrElt

	// Text
	T string
}

// ValidateWithPath validates the CT_PivotCache and its children, prefixing error messages with path
func (_deaabc *CT_PivotCache) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Scenario and its children
func (_aeefga *CT_Scenario) Validate() error {
	return _aeefga.ValidateWithPath("C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f")
}

// Validate validates the CT_CustomChartsheetView and its children
func (_ddgf *CT_CustomChartsheetView) Validate() error {
	return _ddgf.ValidateWithPath("\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

// Validate validates the CT_ExternalReference and its children
func (_dcadd *CT_ExternalReference) Validate() error {
	return _dcadd.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065")
}

type CT_PageFields struct {

	// Page Item Count
	CountAttr *uint32

	// Page Field
	PageField []*CT_PageField
}

func NewStyleSheet() *StyleSheet {
	_egcba := &StyleSheet{}
	_egcba.CT_Stylesheet = *NewCT_Stylesheet()
	return _egcba
}

type CT_RangeSet struct {

	// Field Item Index Page 1
	I1Attr *uint32

	// Field Item Index Page 2
	I2Attr *uint32

	// Field Item index Page 3
	I3Attr *uint32

	// Field Item Index Page 4
	I4Attr *uint32

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

// ValidateWithPath validates the CT_SheetData and its children, prefixing error messages with path
func (_eaadff *CT_SheetData) ValidateWithPath(path string) error {
	for _bbdbb, _deddb := range _eaadff.Row {
		if _fcdaac := _deddb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _bbdbb)); _fcdaac != nil {
			return _fcdaac
		}
	}
	return nil
}

func NewCT_PivotFilters() *CT_PivotFilters { _acgff := &CT_PivotFilters{}; return _acgff }

func (_cdgg *CT_CustomFilters) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cdgg.AndAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdgg.AndAttr))})
	}
	e.EncodeToken(start)
	_ddgde := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}}
	for _, _ddfba := range _cdgg.CustomFilter {
		e.EncodeElement(_ddfba, _ddgde)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_ProtectedRanges struct {

	// Protected Range
	ProtectedRange []*CT_ProtectedRange
}

// ValidateWithPath validates the CT_Macrosheet and its children, prefixing error messages with path
func (_ccefc *CT_Macrosheet) ValidateWithPath(path string) error {
	if _ccefc.SheetPr != nil {
		if _fddfg := _ccefc.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _fddfg != nil {
			return _fddfg
		}
	}
	if _ccefc.Dimension != nil {
		if _dagde := _ccefc.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _dagde != nil {
			return _dagde
		}
	}
	if _ccefc.SheetViews != nil {
		if _adgac := _ccefc.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _adgac != nil {
			return _adgac
		}
	}
	if _ccefc.SheetFormatPr != nil {
		if _bcdccd := _ccefc.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _bcdccd != nil {
			return _bcdccd
		}
	}
	for _cafbg, _gaadc := range _ccefc.Cols {
		if _defcc := _gaadc.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _cafbg)); _defcc != nil {
			return _defcc
		}
	}
	if _ggfbf := _ccefc.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _ggfbf != nil {
		return _ggfbf
	}
	if _ccefc.SheetProtection != nil {
		if _agdcb := _ccefc.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _agdcb != nil {
			return _agdcb
		}
	}
	if _ccefc.AutoFilter != nil {
		if _cagdc := _ccefc.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _cagdc != nil {
			return _cagdc
		}
	}
	if _ccefc.SortState != nil {
		if _aadca := _ccefc.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _aadca != nil {
			return _aadca
		}
	}
	if _ccefc.DataConsolidate != nil {
		if _dgggg := _ccefc.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _dgggg != nil {
			return _dgggg
		}
	}
	if _ccefc.CustomSheetViews != nil {
		if _dbda := _ccefc.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _dbda != nil {
			return _dbda
		}
	}
	if _ccefc.PhoneticPr != nil {
		if _ffga := _ccefc.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _ffga != nil {
			return _ffga
		}
	}
	for _ffdag, _efccg := range _ccefc.ConditionalFormatting {
		if _ecfdd := _efccg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _ffdag)); _ecfdd != nil {
			return _ecfdd
		}
	}
	if _ccefc.PrintOptions != nil {
		if _ecgfd := _ccefc.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _ecgfd != nil {
			return _ecgfd
		}
	}
	if _ccefc.PageMargins != nil {
		if _aagab := _ccefc.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _aagab != nil {
			return _aagab
		}
	}
	if _ccefc.PageSetup != nil {
		if _cdade := _ccefc.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _cdade != nil {
			return _cdade
		}
	}
	if _ccefc.HeaderFooter != nil {
		if _bbaag := _ccefc.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _bbaag != nil {
			return _bbaag
		}
	}
	if _ccefc.RowBreaks != nil {
		if _acffe := _ccefc.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _acffe != nil {
			return _acffe
		}
	}
	if _ccefc.ColBreaks != nil {
		if _dabbdd := _ccefc.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _dabbdd != nil {
			return _dabbdd
		}
	}
	if _ccefc.CustomProperties != nil {
		if _bcgde := _ccefc.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _bcgde != nil {
			return _bcgde
		}
	}
	if _ccefc.Drawing != nil {
		if _adegb := _ccefc.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _adegb != nil {
			return _adegb
		}
	}
	if _ccefc.LegacyDrawing != nil {
		if _fccce := _ccefc.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _fccce != nil {
			return _fccce
		}
	}
	if _ccefc.LegacyDrawingHF != nil {
		if _fdbae := _ccefc.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _fdbae != nil {
			return _fdbae
		}
	}
	if _ccefc.DrawingHF != nil {
		if _fcbag := _ccefc.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _fcbag != nil {
			return _fcbag
		}
	}
	if _ccefc.Picture != nil {
		if _babee := _ccefc.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _babee != nil {
			return _babee
		}
	}
	if _ccefc.OleObjects != nil {
		if _aeda := _ccefc.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _aeda != nil {
			return _aeda
		}
	}
	if _ccefc.ExtLst != nil {
		if _gaagd := _ccefc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gaagd != nil {
			return _gaagd
		}
	}
	return nil
}

func (_bfbbgd *ST_GradientType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bfbbgd = 0
	case "\u006c\u0069\u006e\u0065\u0061\u0072":
		*_bfbbgd = 1
	case "\u0070\u0061\u0074\u0068":
		*_bfbbgd = 2
	}
	return nil
}

func (_fffga *CT_Dialogsheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_fcbc:
	for {
		_ccaf, _cdff := d.Token()
		if _cdff != nil {
			return _cdff
		}
		switch _fgacf := _ccaf.(type) {
		case _gd.StartElement:
			switch _fgacf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_fffga.SheetPr = NewCT_SheetPr()
				if _eddf := d.DecodeElement(_fffga.SheetPr, &_fgacf); _eddf != nil {
					return _eddf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fffga.SheetViews = NewCT_SheetViews()
				if _bfae := d.DecodeElement(_fffga.SheetViews, &_fgacf); _bfae != nil {
					return _bfae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_fffga.SheetFormatPr = NewCT_SheetFormatPr()
				if _eedad := d.DecodeElement(_fffga.SheetFormatPr, &_fgacf); _eedad != nil {
					return _eedad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fffga.SheetProtection = NewCT_SheetProtection()
				if _agdc := d.DecodeElement(_fffga.SheetProtection, &_fgacf); _agdc != nil {
					return _agdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fffga.CustomSheetViews = NewCT_CustomSheetViews()
				if _eccfb := d.DecodeElement(_fffga.CustomSheetViews, &_fgacf); _eccfb != nil {
					return _eccfb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_fffga.PrintOptions = NewCT_PrintOptions()
				if _aagag := d.DecodeElement(_fffga.PrintOptions, &_fgacf); _aagag != nil {
					return _aagag
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fffga.PageMargins = NewCT_PageMargins()
				if _gdcac := d.DecodeElement(_fffga.PageMargins, &_fgacf); _gdcac != nil {
					return _gdcac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fffga.PageSetup = NewCT_PageSetup()
				if _debga := d.DecodeElement(_fffga.PageSetup, &_fgacf); _debga != nil {
					return _debga
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fffga.HeaderFooter = NewCT_HeaderFooter()
				if _accf := d.DecodeElement(_fffga.HeaderFooter, &_fgacf); _accf != nil {
					return _accf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_fffga.Drawing = NewCT_Drawing()
				if _fbaee := d.DecodeElement(_fffga.Drawing, &_fgacf); _fbaee != nil {
					return _fbaee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_fffga.LegacyDrawing = NewCT_LegacyDrawing()
				if _caef := d.DecodeElement(_fffga.LegacyDrawing, &_fgacf); _caef != nil {
					return _caef
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_fffga.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _adedd := d.DecodeElement(_fffga.LegacyDrawingHF, &_fgacf); _adedd != nil {
					return _adedd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_fffga.DrawingHF = NewCT_DrawingHF()
				if _bgbac := d.DecodeElement(_fffga.DrawingHF, &_fgacf); _bgbac != nil {
					return _bgbac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_fffga.OleObjects = NewCT_OleObjects()
				if _cafdb := d.DecodeElement(_fffga.OleObjects, &_fgacf); _cafdb != nil {
					return _cafdb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_fffga.Controls = NewCT_Controls()
				if _abdba := d.DecodeElement(_fffga.Controls, &_fgacf); _abdba != nil {
					return _abdba
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fffga.ExtLst = NewCT_ExtensionList()
				if _cafed := d.DecodeElement(_fffga.ExtLst, &_fgacf); _cafed != nil {
					return _cafed
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067\u0073h\u0065e\u0074\u0020\u0025\u0076", _fgacf.Name)
				if _ebae := d.Skip(); _ebae != nil {
					return _ebae
				}
			}
		case _gd.EndElement:
			break _fcbc
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_MdxMemeberProp() *CT_MdxMemeberProp { _cdgddc := &CT_MdxMemeberProp{}; return _cdgddc }

// Validate validates the CT_Record and its children
func (_ecgfb *CT_Record) Validate() error {
	return _ecgfb.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d")
}

// ValidateWithPath validates the CT_MemberProperties and its children, prefixing error messages with path
func (_deecg *CT_MemberProperties) ValidateWithPath(path string) error {
	for _abff, _gbdd := range _deecg.Mp {
		if _eafec := _gbdd.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u004d\u0070\u005b\u0025\u0064]", path, _abff)); _eafec != nil {
			return _eafec
		}
	}
	return nil
}

// Validate validates the CT_PivotAreas and its children
func (_cgdcb *CT_PivotAreas) Validate() error {
	return _cgdcb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073")
}

func NewCT_Border() *CT_Border { _cfe := &CT_Border{}; return _cfe }

func (_dgafg *CT_OlapPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aadaf := range start.Attr {
		if _aadaf.Name.Local == "\u006c\u006f\u0063a\u006c" {
			_dafed, _ecaac := _a.ParseBool(_aadaf.Value)
			if _ecaac != nil {
				return _ecaac
			}
			_dgafg.LocalAttr = &_dafed
			continue
		}
		if _aadaf.Name.Local == "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_bdece, _fdefab := _aadaf.Value, error(nil)
			if _fdefab != nil {
				return _fdefab
			}
			_dgafg.LocalConnectionAttr = &_bdece
			continue
		}
		if _aadaf.Name.Local == "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_dgge, _ffecf := _a.ParseBool(_aadaf.Value)
			if _ffecf != nil {
				return _ffecf
			}
			_dgafg.LocalRefreshAttr = &_dgge
			continue
		}
		if _aadaf.Name.Local == "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065" {
			_gfcga, _dabca := _a.ParseBool(_aadaf.Value)
			if _dabca != nil {
				return _dabca
			}
			_dgafg.SendLocaleAttr = &_gfcga
			continue
		}
		if _aadaf.Name.Local == "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074" {
			_ddcaa, _fgcgd := _a.ParseUint(_aadaf.Value, 10, 32)
			if _fgcgd != nil {
				return _fgcgd
			}
			_debbe := uint32(_ddcaa)
			_dgafg.RowDrillCountAttr = &_debbe
			continue
		}
		if _aadaf.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c" {
			_cegbf, _bbfgd := _a.ParseBool(_aadaf.Value)
			if _bbfgd != nil {
				return _bbfgd
			}
			_dgafg.ServerFillAttr = &_cegbf
			continue
		}
		if _aadaf.Name.Local == "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074" {
			_gafge, _cgbcb := _a.ParseBool(_aadaf.Value)
			if _cgbcb != nil {
				return _cgbcb
			}
			_dgafg.ServerNumberFormatAttr = &_gafge
			continue
		}
		if _aadaf.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074" {
			_afbdf, _eceg := _a.ParseBool(_aadaf.Value)
			if _eceg != nil {
				return _eceg
			}
			_dgafg.ServerFontAttr = &_afbdf
			continue
		}
		if _aadaf.Name.Local == "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072" {
			_dgddd, _cdddcf := _a.ParseBool(_aadaf.Value)
			if _cdddcf != nil {
				return _cdddcf
			}
			_dgafg.ServerFontColorAttr = &_dgddd
			continue
		}
	}
	for {
		_cbbbd, _fffdd := d.Token()
		if _fffdd != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004f\u006c\u0061p\u0050\u0072\u003a\u0020\u0025\u0073", _fffdd)
		}
		if _cbefe, _badgd := _cbbbd.(_gd.EndElement); _badgd && _cbefe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cddadf *ST_TargetScreenSize) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_facgb, _ebedc := d.Token()
	if _ebedc != nil {
		return _ebedc
	}
	if _acgdgd, _cgffe := _facgb.(_gd.EndElement); _cgffe && _acgdgd.Name == start.Name {
		*_cddadf = 1
		return nil
	}
	if _ecdff, _egecba := _facgb.(_gd.CharData); !_egecba {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _facgb)
	} else {
		switch string(_ecdff) {
		case "":
			*_cddadf = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_cddadf = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_cddadf = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_cddadf = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_cddadf = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_cddadf = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_cddadf = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_cddadf = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_cddadf = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_cddadf = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
			*_cddadf = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_cddadf = 11
		}
	}
	_facgb, _ebedc = d.Token()
	if _ebedc != nil {
		return _ebedc
	}
	if _ebeda, _bbdacg := _facgb.(_gd.EndElement); _bbdacg && _ebeda.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _facgb)
}

// ValidateWithPath validates the CT_ExternalSheetName and its children, prefixing error messages with path
func (_cceee *CT_ExternalSheetName) ValidateWithPath(path string) error { return nil }

func (_dgfdfa *CT_PageItem) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dgbbd := range start.Attr {
		if _dgbbd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebggaa, _febac := _dgbbd.Value, error(nil)
			if _febac != nil {
				return _febac
			}
			_dgfdfa.NameAttr = _ebggaa
			continue
		}
	}
	for {
		_eefee, _fbdbd := d.Token()
		if _fbdbd != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _fbdbd)
		}
		if _bfagea, _ecebd := _eefee.(_gd.EndElement); _ecebd && _bfagea.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_SortCondition() *CT_SortCondition { _gccdbc := &CT_SortCondition{}; return _gccdbc }

func (_dafac *CT_IgnoredErrors) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_gdfag := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ai\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}}
	for _, _gecgc := range _dafac.IgnoredError {
		e.EncodeElement(_gecgc, _gdfag)
	}
	if _dafac.ExtLst != nil {
		_fggec := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dafac.ExtLst, _fggec)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dffge ST_Type) Validate() error { return _dffge.ValidateWithPath("") }

func NewChartsheet() *Chartsheet {
	_cagba := &Chartsheet{}
	_cagba.CT_Chartsheet = *NewCT_Chartsheet()
	return _cagba
}

// Validate validates the CT_WebPublishItems and its children
func (_ccbde *CT_WebPublishItems) Validate() error {
	return _ccbde.ValidateWithPath("\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073")
}

// ValidateWithPath validates the CT_PhoneticPr and its children, prefixing error messages with path
func (_aeebc *CT_PhoneticPr) ValidateWithPath(path string) error {
	if _aefgb := _aeebc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _aefgb != nil {
		return _aefgb
	}
	if _dffgc := _aeebc.AlignmentAttr.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006et\u0041\u0074\u0074\u0072"); _dffgc != nil {
		return _dffgc
	}
	return nil
}

func NewCT_FutureMetadata() *CT_FutureMetadata { _agagdf := &CT_FutureMetadata{}; return _agagdf }

type CT_CellFormula struct {
	TAttr    ST_CellFormulaType
	AcaAttr  *bool
	RefAttr  *string
	Dt2DAttr *bool
	DtrAttr  *bool
	Del1Attr *bool
	Del2Attr *bool
	R1Attr   *string
	R2Attr   *string
	CaAttr   *bool
	SiAttr   *uint32
	BxAttr   *bool
	Content  string
}

type CT_Filters struct {

	// Filter by Blank
	BlankAttr *bool

	// Calendar Type
	CalendarTypeAttr _af.ST_CalendarType

	// Filter
	Filter []*CT_Filter

	// Date Grouping
	DateGroupItem []*CT_DateGroupItem
}

func (_gabaf *CT_PageSetUpPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gabaf.AutoPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gabaf.AutoPageBreaksAttr))})
	}
	if _gabaf.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gabaf.FitToPageAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Dialogsheet and its children, prefixing error messages with path
func (_bfbcfc *Dialogsheet) ValidateWithPath(path string) error {
	if _fbgdf := _bfbcfc.CT_Dialogsheet.ValidateWithPath(path); _fbgdf != nil {
		return _fbgdf
	}
	return nil
}

// Validate validates the Users and its children
func (_bfgea *Users) Validate() error { return _bfgea.ValidateWithPath("\u0055\u0073\u0065r\u0073") }

// ValidateWithPath validates the CT_ControlPr and its children, prefixing error messages with path
func (_fdgg *CT_ControlPr) ValidateWithPath(path string) error {
	if _dfgce := _fdgg.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _dfgce != nil {
		return _dfgce
	}
	return nil
}

// Validate validates the CT_PCDSDTCEntries and its children
func (_babbg *CT_PCDSDTCEntries) Validate() error {
	return _babbg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073")
}

func NewCT_Extension() *CT_Extension { _fddeb := &CT_Extension{}; return _fddeb }

// Validate validates the CT_QueryTableFields and its children
func (_deded *CT_QueryTableFields) Validate() error {
	return _deded.ValidateWithPath("\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

func (_ebdgf *CT_DdeLink) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dcgc := range start.Attr {
		if _dcgc.Name.Local == "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065" {
			_ccab, _fadae := _dcgc.Value, error(nil)
			if _fadae != nil {
				return _fadae
			}
			_ebdgf.DdeServiceAttr = _ccab
			continue
		}
		if _dcgc.Name.Local == "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063" {
			_dfeg, _eggbc := _dcgc.Value, error(nil)
			if _eggbc != nil {
				return _eggbc
			}
			_ebdgf.DdeTopicAttr = _dfeg
			continue
		}
	}
_aceff:
	for {
		_cccb, _bgfb := d.Token()
		if _bgfb != nil {
			return _bgfb
		}
		switch _cafc := _cccb.(type) {
		case _gd.StartElement:
			switch _cafc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_ebdgf.DdeItems = NewCT_DdeItems()
				if _ffadf := d.DecodeElement(_ebdgf.DdeItems, &_cafc); _ffadf != nil {
					return _ffadf
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _cafc.Name)
				if _gbafc := d.Skip(); _gbafc != nil {
					return _gbafc
				}
			}
		case _gd.EndElement:
			break _aceff
		case _gd.CharData:
		}
	}
	return nil
}

func (_dacbfg ST_Axis) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dacbfg.String(), start)
}

type Dialogsheet struct{ CT_Dialogsheet }

func NewCT_CellSmartTag() *CT_CellSmartTag { _ecgd := &CT_CellSmartTag{}; return _ecgd }

func (_faceefc ST_FieldSortType) String() string {
	switch _faceefc {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return ""
}

func (_egfcc *CT_CommentList) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _egfcc.Comment != nil {
		_cbgda := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074"}}
		for _, _daeb := range _egfcc.Comment {
			e.EncodeElement(_daeb, _cbgda)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dabgc *CT_CellStyle) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dabgc.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_dabgc.NameAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _dabgc.XfIdAttr)})
	if _dabgc.BuiltinIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d"}, Value: _b.Sprintf("\u0025\u0076", *_dabgc.BuiltinIdAttr)})
	}
	if _dabgc.ILevelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u004c\u0065\u0076\u0065\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_dabgc.ILevelAttr)})
	}
	if _dabgc.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dabgc.HiddenAttr))})
	}
	if _dabgc.CustomBuiltinAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dabgc.CustomBuiltinAttr))})
	}
	e.EncodeToken(start)
	if _dabgc.ExtLst != nil {
		_geafa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dabgc.ExtLst, _geafa)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_CellWatch struct {

	// Reference
	RAttr string
}

func ParseSliceST_Sqref(s string) (ST_Sqref, error) { return ST_Sqref(_d.Fields(s)), nil }

// ValidateWithPath validates the CT_GradientFill and its children, prefixing error messages with path
func (_aeggd *CT_GradientFill) ValidateWithPath(path string) error {
	if _cageg := _aeggd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cageg != nil {
		return _cageg
	}
	for _eaacde, _fgcff := range _aeggd.Stop {
		if _edafc := _fgcff.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0053\u0074\u006f\u0070\u005b\u0025\u0064\u005d", path, _eaacde)); _edafc != nil {
			return _edafc
		}
	}
	return nil
}

func (_bbbe *CT_Parameters) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bbbe.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bbbe.CountAttr)})
	}
	e.EncodeToken(start)
	_ddadg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072"}}
	for _, _cfgge := range _bbbe.Parameter {
		e.EncodeElement(_cfgge, _ddadg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gbede *CT_WebPublishItem) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gbede.SourceTypeAttr = ST_WebSourceType(1)
	for _, _gabgg := range start.Attr {
		if _gabgg.Name.Local == "\u0069\u0064" {
			_fbbaeg, _abbdg := _a.ParseUint(_gabgg.Value, 10, 32)
			if _abbdg != nil {
				return _abbdg
			}
			_gbede.IdAttr = uint32(_fbbaeg)
			continue
		}
		if _gabgg.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_ccagab, _accgafa := _gabgg.Value, error(nil)
			if _accgafa != nil {
				return _accgafa
			}
			_gbede.DivIdAttr = _ccagab
			continue
		}
		if _gabgg.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065" {
			_gbede.SourceTypeAttr.UnmarshalXMLAttr(_gabgg)
			continue
		}
		if _gabgg.Name.Local == "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f" {
			_cebfcf, _adcbb := _gabgg.Value, error(nil)
			if _adcbb != nil {
				return _adcbb
			}
			_gbede.SourceRefAttr = &_cebfcf
			continue
		}
		if _gabgg.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_gccfb, _fdfgf := _gabgg.Value, error(nil)
			if _fdfgf != nil {
				return _fdfgf
			}
			_gbede.SourceObjectAttr = &_gccfb
			continue
		}
		if _gabgg.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_eadcee, _dceae := _gabgg.Value, error(nil)
			if _dceae != nil {
				return _dceae
			}
			_gbede.DestinationFileAttr = _eadcee
			continue
		}
		if _gabgg.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_dfdae, _bgfeb := _gabgg.Value, error(nil)
			if _bgfeb != nil {
				return _bgfeb
			}
			_gbede.TitleAttr = &_dfdae
			continue
		}
		if _gabgg.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_adecc, _cgeaee := _a.ParseBool(_gabgg.Value)
			if _cgeaee != nil {
				return _cgeaee
			}
			_gbede.AutoRepublishAttr = &_adecc
			continue
		}
	}
	for {
		_ddafg, _gegbec := d.Token()
		if _gegbec != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d: \u0025\u0073", _gegbec)
		}
		if _faefdb, _faeec := _ddafg.(_gd.EndElement); _faeec && _faefdb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewAG_RevData() *AG_RevData { _cb := &AG_RevData{}; return _cb }

func (_abbfc *CT_Comments) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_fgacg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u0068\u006f\u0072\u0073"}}
	e.EncodeElement(_abbfc.Authors, _fgacg)
	_faeb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074"}}
	e.EncodeElement(_abbfc.CommentList, _faeb)
	if _abbfc.ExtLst != nil {
		_dgc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_abbfc.ExtLst, _dgc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ggeeca *CT_ExternalReferences) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_eabc:
	for {
		_gdcdg, _bedd := d.Token()
		if _bedd != nil {
			return _bedd
		}
		switch _adaad := _gdcdg.(type) {
		case _gd.StartElement:
			switch _adaad.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}:
				_dgdfg := NewCT_ExternalReference()
				if _bfde := d.DecodeElement(_dgdfg, &_adaad); _bfde != nil {
					return _bfde
				}
				_ggeeca.ExternalReference = append(_ggeeca.ExternalReference, _dgdfg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _adaad.Name)
				if _ababb := d.Skip(); _ababb != nil {
					return _ababb
				}
			}
		case _gd.EndElement:
			break _eabc
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellWatches and its children, prefixing error messages with path
func (_ggad *CT_CellWatches) ValidateWithPath(path string) error {
	for _cgec, _fcef := range _ggad.CellWatch {
		if _febad := _fcef.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0057\u0061\u0074\u0063\u0068\u005b\u0025\u0064\u005d", path, _cgec)); _febad != nil {
			return _febad
		}
	}
	return nil
}

// Validate validates the CT_QueryCache and its children
func (_dabdd *CT_QueryCache) Validate() error {
	return _dabdd.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065")
}

// ValidateWithPath validates the CT_ObjectAnchor and its children, prefixing error messages with path
func (_efccgc *CT_ObjectAnchor) ValidateWithPath(path string) error {
	if _faegc := _efccgc.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _faegc != nil {
		return _faegc
	}
	if _fgcfe := _efccgc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _fgcfe != nil {
		return _fgcfe
	}
	return nil
}

func (_adaeb *CT_RevisionFormatting) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aaagg := range start.Attr {
		if _aaagg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_faaca, _efeafc := _a.ParseUint(_aaagg.Value, 10, 32)
			if _efeafc != nil {
				return _efeafc
			}
			_adaeb.SheetIdAttr = uint32(_faaca)
			continue
		}
		if _aaagg.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_fcaead, _ggafe := _a.ParseBool(_aaagg.Value)
			if _ggafe != nil {
				return _ggafe
			}
			_adaeb.XfDxfAttr = &_fcaead
			continue
		}
		if _aaagg.Name.Local == "\u0073" {
			_ddfbc, _affdb := _a.ParseBool(_aaagg.Value)
			if _affdb != nil {
				return _affdb
			}
			_adaeb.SAttr = &_ddfbc
			continue
		}
		if _aaagg.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_ecgbbb, _cdfba := ParseSliceST_Sqref(_aaagg.Value)
			if _cdfba != nil {
				return _cdfba
			}
			_adaeb.SqrefAttr = _ecgbbb
			continue
		}
		if _aaagg.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_fegdf, _eafdbff := _a.ParseUint(_aaagg.Value, 10, 32)
			if _eafdbff != nil {
				return _eafdbff
			}
			_gcdga := uint32(_fegdf)
			_adaeb.StartAttr = &_gcdga
			continue
		}
		if _aaagg.Name.Local == "\u006c\u0065\u006e\u0067\u0074\u0068" {
			_ffggg, _efgdd := _a.ParseUint(_aaagg.Value, 10, 32)
			if _efgdd != nil {
				return _efgdd
			}
			_bbgdf := uint32(_ffggg)
			_adaeb.LengthAttr = &_bbgdf
			continue
		}
	}
_ddfeb:
	for {
		_fbccc, _facdb := d.Token()
		if _facdb != nil {
			return _facdb
		}
		switch _beebc := _fbccc.(type) {
		case _gd.StartElement:
			switch _beebc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_adaeb.Dxf = NewCT_Dxf()
				if _dfac := d.DecodeElement(_adaeb.Dxf, &_beebc); _dfac != nil {
					return _dfac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adaeb.ExtLst = NewCT_ExtensionList()
				if _dafade := d.DecodeElement(_adaeb.ExtLst, &_beebc); _dafade != nil {
					return _dafade
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _beebc.Name)
				if _fdgad := d.Skip(); _fdgad != nil {
					return _fdgad
				}
			}
		case _gd.EndElement:
			break _ddfeb
		case _gd.CharData:
		}
	}
	return nil
}

func (_dfaeg ST_BorderStyle) ValidateWithPath(path string) error {
	switch _dfaeg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfaeg))
	}
	return nil
}

// ValidateWithPath validates the CT_Chartsheet and its children, prefixing error messages with path
func (_gddd *CT_Chartsheet) ValidateWithPath(path string) error {
	if _gddd.SheetPr != nil {
		if _cgcf := _gddd.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _cgcf != nil {
			return _cgcf
		}
	}
	if _eegfe := _gddd.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _eegfe != nil {
		return _eegfe
	}
	if _gddd.SheetProtection != nil {
		if _feeff := _gddd.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _feeff != nil {
			return _feeff
		}
	}
	if _gddd.CustomSheetViews != nil {
		if _eacd := _gddd.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _eacd != nil {
			return _eacd
		}
	}
	if _gddd.PageMargins != nil {
		if _gde := _gddd.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _gde != nil {
			return _gde
		}
	}
	if _gddd.PageSetup != nil {
		if _fdba := _gddd.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _fdba != nil {
			return _fdba
		}
	}
	if _gddd.HeaderFooter != nil {
		if _gbeb := _gddd.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _gbeb != nil {
			return _gbeb
		}
	}
	if _acef := _gddd.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _acef != nil {
		return _acef
	}
	if _gddd.LegacyDrawing != nil {
		if _gbdg := _gddd.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _gbdg != nil {
			return _gbdg
		}
	}
	if _gddd.LegacyDrawingHF != nil {
		if _eeaf := _gddd.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _eeaf != nil {
			return _eeaf
		}
	}
	if _gddd.DrawingHF != nil {
		if _dfgbb := _gddd.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _dfgbb != nil {
			return _dfgbb
		}
	}
	if _gddd.Picture != nil {
		if _aeff := _gddd.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _aeff != nil {
			return _aeff
		}
	}
	if _gddd.WebPublishItems != nil {
		if _bfbb := _gddd.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _bfbb != nil {
			return _bfbb
		}
	}
	if _gddd.ExtLst != nil {
		if _ffdfg := _gddd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffdfg != nil {
			return _ffdfg
		}
	}
	return nil
}

func (_gbgag *VolTypes) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gbgag.CT_VolTypes = *NewCT_VolTypes()
_cdedf:
	for {
		_fecbac, _dbgffd := d.Token()
		if _dbgffd != nil {
			return _dbgffd
		}
		switch _gbdagd := _fecbac.(type) {
		case _gd.StartElement:
			switch _gbdagd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_baebfc := NewCT_VolType()
				if _cgeag := d.DecodeElement(_baebfc, &_gbdagd); _cgeag != nil {
					return _cgeag
				}
				_gbgag.VolType = append(_gbgag.VolType, _baebfc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbgag.ExtLst = NewCT_ExtensionList()
				if _ddcfeg := d.DecodeElement(_gbgag.ExtLst, &_gbdagd); _ddcfeg != nil {
					return _ddcfeg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _gbdagd.Name)
				if _gaeeba := d.Skip(); _gaeeba != nil {
					return _gaeeba
				}
			}
		case _gd.EndElement:
			break _cdedf
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CellAlignment and its children
func (_aaga *CT_CellAlignment) Validate() error {
	return _aaga.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074")
}

// Validate validates the CT_MetadataBlocks and its children
func (_aafec *CT_MetadataBlocks) Validate() error {
	return _aafec.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073")
}

func (_eddc *CT_Comment) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _eddc.RefAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _eddc.AuthorIdAttr)})
	if _eddc.GuidAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_eddc.GuidAttr)})
	}
	if _eddc.ShapeIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_eddc.ShapeIdAttr)})
	}
	e.EncodeToken(start)
	_ffea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074"}}
	e.EncodeElement(_eddc.Text, _ffea)
	if _eddc.CommentPr != nil {
		_abgd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"}}
		e.EncodeElement(_eddc.CommentPr, _abgd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the AG_RevData and its children, prefixing error messages with path
func (_dbg *AG_RevData) ValidateWithPath(path string) error { return nil }

func NewCT_OleLink() *CT_OleLink { _cfccd := &CT_OleLink{}; return _cfccd }

func NewCT_Drawing() *CT_Drawing { _dcfd := &CT_Drawing{}; return _dcfd }

type CT_SortCondition struct {

	// Descending
	DescendingAttr *bool

	// Sort By
	SortByAttr ST_SortBy

	// Reference
	RefAttr string

	// Custom List
	CustomListAttr *string

	// Format Id
	DxfIdAttr *uint32

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

func NewCT_DataRef() *CT_DataRef { _fbad := &CT_DataRef{}; return _fbad }

func (_faabg ST_rwColActionType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_becada := _gd.Attr{}
	_becada.Name = name
	switch _faabg {
	case ST_rwColActionTypeUnset:
		_becada.Value = ""
	case ST_rwColActionTypeInsertRow:
		_becada.Value = "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case ST_rwColActionTypeDeleteRow:
		_becada.Value = "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case ST_rwColActionTypeInsertCol:
		_becada.Value = "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case ST_rwColActionTypeDeleteCol:
		_becada.Value = "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return _becada, nil
}

func (_ecacb *MapInfo) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u004d\u0061\u0070\u0049\u006e\u0066\u006f"
	return _ecacb.CT_MapInfo.MarshalXML(e, start)
}

func (_egbaa *CT_GroupLevel) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _befb := range start.Attr {
		if _befb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_fggfb, _dgddf := _befb.Value, error(nil)
			if _dgddf != nil {
				return _dgddf
			}
			_egbaa.UniqueNameAttr = _fggfb
			continue
		}
		if _befb.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_cegbd, _dcae := _befb.Value, error(nil)
			if _dcae != nil {
				return _dcae
			}
			_egbaa.CaptionAttr = _cegbd
			continue
		}
		if _befb.Name.Local == "\u0075\u0073\u0065\u0072" {
			_ffgbf, _aaee := _a.ParseBool(_befb.Value)
			if _aaee != nil {
				return _aaee
			}
			_egbaa.UserAttr = &_ffgbf
			continue
		}
		if _befb.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070" {
			_acfde, _deeaa := _a.ParseBool(_befb.Value)
			if _deeaa != nil {
				return _deeaa
			}
			_egbaa.CustomRollUpAttr = &_acfde
			continue
		}
	}
_bagcf:
	for {
		_bgcce, _eegcdb := d.Token()
		if _eegcdb != nil {
			return _eegcdb
		}
		switch _dcacfg := _bgcce.(type) {
		case _gd.StartElement:
			switch _dcacfg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}:
				_egbaa.Groups = NewCT_Groups()
				if _geeag := d.DecodeElement(_egbaa.Groups, &_dcacfg); _geeag != nil {
					return _geeag
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egbaa.ExtLst = NewCT_ExtensionList()
				if _bage := d.DecodeElement(_egbaa.ExtLst, &_dcacfg); _bage != nil {
					return _bage
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c \u0025\u0076", _dcacfg.Name)
				if _cedbb := d.Skip(); _cedbb != nil {
					return _cedbb
				}
			}
		case _gd.EndElement:
			break _bagcf
		case _gd.CharData:
		}
	}
	return nil
}

type CT_FunctionGroups struct {

	// Built-in Function Group Count
	BuiltInGroupCountAttr *uint32

	// Function Group
	FunctionGroup []*CT_FunctionGroup
}

func (_cggce *ST_UpdateLinks) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gffcb, _gbbfg := d.Token()
	if _gbbfg != nil {
		return _gbbfg
	}
	if _fbaddd, _cdfbb := _gffcb.(_gd.EndElement); _cdfbb && _fbaddd.Name == start.Name {
		*_cggce = 1
		return nil
	}
	if _gffgf, _edcfec := _gffcb.(_gd.CharData); !_edcfec {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gffcb)
	} else {
		switch string(_gffgf) {
		case "":
			*_cggce = 0
		case "\u0075s\u0065\u0072\u0053\u0065\u0074":
			*_cggce = 1
		case "\u006e\u0065\u0076e\u0072":
			*_cggce = 2
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_cggce = 3
		}
	}
	_gffcb, _gbbfg = d.Token()
	if _gbbfg != nil {
		return _gbbfg
	}
	if _ffdgc, _fefgae := _gffcb.(_gd.EndElement); _fefgae && _ffdgc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gffcb)
}

func (_gedf *CT_CalcChain) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_aaag:
	for {
		_cbdg, _bbd := d.Token()
		if _bbd != nil {
			return _bbd
		}
		switch _dggg := _cbdg.(type) {
		case _gd.StartElement:
			switch _dggg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_aea := NewCT_CalcCell()
				if _dffb := d.DecodeElement(_aea, &_dggg); _dffb != nil {
					return _dffb
				}
				_gedf.C = append(_gedf.C, _aea)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gedf.ExtLst = NewCT_ExtensionList()
				if _dcce := d.DecodeElement(_gedf.ExtLst, &_dggg); _dcce != nil {
					return _dcce
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0061\u006cc\u0043\u0068\u0061\u0069\u006e\u0020\u0025\u0076", _dggg.Name)
				if _geg := d.Skip(); _geg != nil {
					return _geg
				}
			}
		case _gd.EndElement:
			break _aaag
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_XmlColumnPr and its children
func (_dbbba *CT_XmlColumnPr) Validate() error {
	return _dbbba.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072")
}

func (_efee *CT_Dxf) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _efee.Font != nil {
		_aaba := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_efee.Font, _aaba)
	}
	if _efee.NumFmt != nil {
		_fdfec := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		e.EncodeElement(_efee.NumFmt, _fdfec)
	}
	if _efee.Fill != nil {
		_becba := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_efee.Fill, _becba)
	}
	if _efee.Alignment != nil {
		_cacec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_efee.Alignment, _cacec)
	}
	if _efee.Border != nil {
		_effg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		e.EncodeElement(_efee.Border, _effg)
	}
	if _efee.Protection != nil {
		_cfecbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_efee.Protection, _cfecbc)
	}
	if _efee.ExtLst != nil {
		_egddc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_efee.ExtLst, _egddc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fdagg ST_ParameterType) ValidateWithPath(path string) error {
	switch _fdagg {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdagg))
	}
	return nil
}

// Validate validates the CT_SortState and its children
func (_ggeae *CT_SortState) Validate() error {
	return _ggeae.ValidateWithPath("\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065")
}

func (_eebce ST_FormulaExpression) Validate() error { return _eebce.ValidateWithPath("") }

func (_fggefe ST_MdxFunctionType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_eafgcb := _gd.Attr{}
	_eafgcb.Name = name
	switch _fggefe {
	case ST_MdxFunctionTypeUnset:
		_eafgcb.Value = ""
	case ST_MdxFunctionTypeM:
		_eafgcb.Value = "\u006d"
	case ST_MdxFunctionTypeV:
		_eafgcb.Value = "\u0076"
	case ST_MdxFunctionTypeS:
		_eafgcb.Value = "\u0073"
	case ST_MdxFunctionTypeC:
		_eafgcb.Value = "\u0063"
	case ST_MdxFunctionTypeR:
		_eafgcb.Value = "\u0072"
	case ST_MdxFunctionTypeP:
		_eafgcb.Value = "\u0070"
	case ST_MdxFunctionTypeK:
		_eafgcb.Value = "\u006b"
	}
	return _eafgcb, nil
}

func (_ebbbeg ST_CellComments) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ebbbeg.String(), start)
}

func (_cceb *CT_ChartsheetView) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cceb.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cceb.TabSelectedAttr))})
	}
	if _cceb.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _b.Sprintf("\u0025\u0076", *_cceb.ZoomScaleAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cceb.WorkbookViewIdAttr)})
	if _cceb.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cceb.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _cceb.ExtLst != nil {
		_dcbad := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cceb.ExtLst, _dcbad)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_PivotAreaReferences struct {

	// Pivot Filter Count
	CountAttr *uint32

	// Reference
	Reference []*CT_PivotAreaReference
}

func (_eaefg *CT_RevisionMove) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dccgd := range start.Attr {
		if _dccgd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_dfdeb, _ebbga := _a.ParseUint(_dccgd.Value, 10, 32)
			if _ebbga != nil {
				return _ebbga
			}
			_eaefg.SheetIdAttr = uint32(_dfdeb)
			continue
		}
		if _dccgd.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065" {
			_fgddb, _cecgf := _dccgd.Value, error(nil)
			if _cecgf != nil {
				return _cecgf
			}
			_eaefg.SourceAttr = _fgddb
			continue
		}
		if _dccgd.Name.Local == "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e" {
			_cabgc, _dfdgc := _dccgd.Value, error(nil)
			if _dfdgc != nil {
				return _dfdgc
			}
			_eaefg.DestinationAttr = _cabgc
			continue
		}
		if _dccgd.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_ebfec, _agdee := _a.ParseUint(_dccgd.Value, 10, 32)
			if _agdee != nil {
				return _agdee
			}
			_baadd := uint32(_ebfec)
			_eaefg.SourceSheetIdAttr = &_baadd
			continue
		}
		if _dccgd.Name.Local == "\u0072\u0049\u0064" {
			_cgada, _fbab := _a.ParseUint(_dccgd.Value, 10, 32)
			if _fbab != nil {
				return _fbab
			}
			_cffgb := uint32(_cgada)
			_eaefg.RIdAttr = &_cffgb
			continue
		}
		if _dccgd.Name.Local == "\u0075\u0061" {
			_ddcgcb, _bgdbe := _a.ParseBool(_dccgd.Value)
			if _bgdbe != nil {
				return _bgdbe
			}
			_eaefg.UaAttr = &_ddcgcb
			continue
		}
		if _dccgd.Name.Local == "\u0072\u0061" {
			_adfbg, _aefde := _a.ParseBool(_dccgd.Value)
			if _aefde != nil {
				return _aefde
			}
			_eaefg.RaAttr = &_adfbg
			continue
		}
	}
_bfegc:
	for {
		_ccbfbb, _baaaec := d.Token()
		if _baaaec != nil {
			return _baaaec
		}
		switch _cdgaa := _ccbfbb.(type) {
		case _gd.StartElement:
			switch _cdgaa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_fbgad := NewCT_UndoInfo()
				if _cceff := d.DecodeElement(_fbgad, &_cdgaa); _cceff != nil {
					return _cceff
				}
				_eaefg.Undo = append(_eaefg.Undo, _fbgad)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_eaacac := NewCT_RevisionCellChange()
				if _agfbef := d.DecodeElement(_eaacac, &_cdgaa); _agfbef != nil {
					return _agfbef
				}
				_eaefg.Rcc = append(_eaefg.Rcc, _eaacac)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_bgfcga := NewCT_RevisionFormatting()
				if _ffedfg := d.DecodeElement(_bgfcga, &_cdgaa); _ffedfg != nil {
					return _ffedfg
				}
				_eaefg.Rfmt = append(_eaefg.Rfmt, _bgfcga)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065\u0020\u0025\u0076", _cdgaa.Name)
				if _ggccb := d.Skip(); _ggccb != nil {
					return _ggccb
				}
			}
		case _gd.EndElement:
			break _bfegc
		case _gd.CharData:
		}
	}
	return nil
}

type CT_MdxMetadata struct {

	// MDX Metadata Record Count
	CountAttr *uint32

	// MDX Metadata Record
	Mdx []*CT_Mdx
}

func NewCT_MergeCells() *CT_MergeCells { _eddfg := &CT_MergeCells{}; return _eddfg }

func (_gacaaf ST_PrintError) ValidateWithPath(path string) error {
	switch _gacaaf {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gacaaf))
	}
	return nil
}

func (_fbebg *CT_ChartFormat) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0068\u0061r\u0074"}, Value: _b.Sprintf("\u0025\u0076", _fbebg.ChartAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _b.Sprintf("\u0025\u0076", _fbebg.FormatAttr)})
	if _fbebg.SeriesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0072\u0069\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbebg.SeriesAttr))})
	}
	e.EncodeToken(start)
	_faeg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_fbebg.PivotArea, _faeg)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_eccbd *CT_TableStyle) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _eccbd.NameAttr)})
	if _eccbd.PivotAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eccbd.PivotAttr))})
	}
	if _eccbd.TableAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0061\u0062l\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eccbd.TableAttr))})
	}
	if _eccbd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eccbd.CountAttr)})
	}
	e.EncodeToken(start)
	if _eccbd.TableStyleElement != nil {
		_ebacdc := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074"}}
		for _, _deeeg := range _eccbd.TableStyleElement {
			e.EncodeElement(_deeeg, _ebacdc)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BooleanProperty and its children
func (_cddg *CT_BooleanProperty) Validate() error {
	return _cddg.ValidateWithPath("\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079")
}

type CT_TableParts struct {

	// Count
	CountAttr *uint32

	// Table Part
	TablePart []*CT_TablePart
}

type ST_TableStyleType byte

// Validate validates the ExternalLink and its children
func (_adfcg *ExternalLink) Validate() error {
	return _adfcg.ValidateWithPath("\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}

func (_debceg *CT_SmartTags) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_gdbcgg:
	for {
		_ffccf, _dgbgg := d.Token()
		if _dgbgg != nil {
			return _dgbgg
		}
		switch _cbfec := _ffccf.(type) {
		case _gd.StartElement:
			switch _cbfec.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}:
				_accgfc := NewCT_CellSmartTags()
				if _eaeaa := d.DecodeElement(_accgfc, &_cbfec); _eaeaa != nil {
					return _eaeaa
				}
				_debceg.CellSmartTags = append(_debceg.CellSmartTags, _accgfc)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006d\u0061r\u0074\u0054\u0061\u0067\u0073\u0020\u0025\u0076", _cbfec.Name)
				if _fbdae := d.Skip(); _fbdae != nil {
					return _fbdae
				}
			}
		case _gd.EndElement:
			break _gdbcgg
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DataField and its children
func (_bcadc *CT_DataField) Validate() error {
	return _bcadc.ValidateWithPath("\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064")
}

func (_adcbc *CT_Sheets) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_fdcgca:
	for {
		_gccdga, _cgcceg := d.Token()
		if _cgcceg != nil {
			return _cgcceg
		}
		switch _cgacb := _gccdga.(type) {
		case _gd.StartElement:
			switch _cgacb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}:
				_ccgec := NewCT_Sheet()
				if _agded := d.DecodeElement(_ccgec, &_cgacb); _agded != nil {
					return _agded
				}
				_adcbc.Sheet = append(_adcbc.Sheet, _ccgec)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0068\u0065e\u0074\u0073 \u0025\u0076", _cgacb.Name)
				if _baecf := d.Skip(); _baecf != nil {
					return _baecf
				}
			}
		case _gd.EndElement:
			break _fdcgca
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartsheetProtection and its children, prefixing error messages with path
func (_ccf *CT_ChartsheetProtection) ValidateWithPath(path string) error { return nil }

func (_bbcef *Headers) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072\u0073"
	return _bbcef.CT_RevisionHeaders.MarshalXML(e, start)
}

func (_abeb *CT_ColFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _abeb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_abeb.CountAttr)})
	}
	e.EncodeToken(start)
	_dffag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _cdab := range _abeb.Field {
		e.EncodeElement(_cdab, _dffag)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_RPrElt struct {

	// Font
	RFont *CT_FontName

	// Character Set
	Charset *CT_IntProperty

	// Font Family
	Family *CT_IntProperty

	// Bold
	B *CT_BooleanProperty

	// Italic
	I *CT_BooleanProperty

	// Strike Through
	Strike *CT_BooleanProperty

	// Outline
	Outline *CT_BooleanProperty

	// Shadow
	Shadow *CT_BooleanProperty

	// Condense
	Condense *CT_BooleanProperty

	// Extend
	Extend *CT_BooleanProperty

	// Text Color
	Color *CT_Color

	// Font Size
	Sz *CT_FontSize

	// Underline
	U *CT_UnderlineProperty

	// Vertical Alignment
	VertAlign *CT_VerticalAlignFontProperty

	// Font Scheme
	Scheme *CT_FontScheme
}

type CT_ObjectPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Dynamic Data Exchange Flag
	DdeAttr *bool
	IdAttr  *string
	Anchor  *CT_ObjectAnchor
}

type CT_ChartsheetView struct {

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Window Zoom Scale
	ZoomScaleAttr *uint32

	// Workbook View Id
	WorkbookViewIdAttr uint32

	// Zoom To Fit
	ZoomToFitAttr *bool
	ExtLst        *CT_ExtensionList
}

func NewCT_Hyperlink() *CT_Hyperlink { _acade := &CT_Hyperlink{}; return _acade }

type CT_Members struct {

	// Item Count
	CountAttr *uint32

	// Hierarchy Level
	LevelAttr *uint32

	// Member
	Member []*CT_Member
}

func (_ccbbcc ST_ShowDataAs) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ccbbcc.String(), start)
}

func (_cdege *CT_MemberProperty) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cdege.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cdege.NameAttr)})
	}
	if _cdege.ShowCellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdege.ShowCellAttr))})
	}
	if _cdege.ShowTipAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0054\u0069\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdege.ShowTipAttr))})
	}
	if _cdege.ShowAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdege.ShowAsCaptionAttr))})
	}
	if _cdege.NameLenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006ea\u006d\u0065\u004c\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cdege.NameLenAttr)})
	}
	if _cdege.PPosAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0050\u006f\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_cdege.PPosAttr)})
	}
	if _cdege.PLenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u004c\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cdege.PLenAttr)})
	}
	if _cdege.LevelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_cdege.LevelAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cdege.FieldAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellSmartTagPr and its children
func (_gagd *CT_CellSmartTagPr) Validate() error {
	return _gagd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072")
}

func (_bccgbf ST_Pane) ValidateWithPath(path string) error {
	switch _bccgbf {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bccgbf))
	}
	return nil
}

// ValidateWithPath validates the CT_CustomProperty and its children, prefixing error messages with path
func (_fcgf *CT_CustomProperty) ValidateWithPath(path string) error { return nil }

func (_cf *AG_AutoFormat) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cf.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cf.AutoFormatIdAttr)})
	}
	if _cf.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cf.ApplyNumberFormatsAttr))})
	}
	if _cf.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cf.ApplyBorderFormatsAttr))})
	}
	if _cf.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cf.ApplyFontFormatsAttr))})
	}
	if _cf.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cf.ApplyPatternFormatsAttr))})
	}
	if _cf.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cf.ApplyAlignmentFormatsAttr))})
	}
	if _cf.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cf.ApplyWidthHeightFormatsAttr))})
	}
	return nil
}

func (_ceedcf *ST_UpdateLinks) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_ceedcf = 0
	case "\u0075s\u0065\u0072\u0053\u0065\u0074":
		*_ceedcf = 1
	case "\u006e\u0065\u0076e\u0072":
		*_ceedcf = 2
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_ceedcf = 3
	}
	return nil
}

type Worksheet struct{ CT_Worksheet }

func (_bcgbg *ST_ParameterType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fgabf, _gdgged := d.Token()
	if _gdgged != nil {
		return _gdgged
	}
	if _cgfgc, _ebeec := _fgabf.(_gd.EndElement); _ebeec && _cgfgc.Name == start.Name {
		*_bcgbg = 1
		return nil
	}
	if _fbfdd, _gdeeb := _fgabf.(_gd.CharData); !_gdeeb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgabf)
	} else {
		switch string(_fbfdd) {
		case "":
			*_bcgbg = 0
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_bcgbg = 1
		case "\u0076\u0061\u006cu\u0065":
			*_bcgbg = 2
		case "\u0063\u0065\u006c\u006c":
			*_bcgbg = 3
		}
	}
	_fgabf, _gdgged = d.Token()
	if _gdgged != nil {
		return _gdgged
	}
	if _fbcgge, _ecebca := _fgabf.(_gd.EndElement); _ecebca && _fbcgge.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgabf)
}

type CT_Fonts struct {

	// Font Count
	CountAttr *uint32

	// Font
	Font []*CT_Font
}

type CT_CellProtection struct {

	// Cell Locked
	LockedAttr *bool

	// Hidden Cell
	HiddenAttr *bool
}

type Users struct{ CT_Users }

func (_cbcccf *CT_pivotTableDefinition) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cbcccf.Location = NewCT_Location()
	for _, _bgfccd := range start.Attr {
		if _bgfccd.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_cgfbec, _adcbcd := _a.ParseUint(_bgfccd.Value, 10, 8)
			if _adcbcd != nil {
				return _adcbcd
			}
			_fbbbf := uint8(_cgfbec)
			_cbcccf.CreatedVersionAttr = &_fbbbf
			continue
		}
		if _bgfccd.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_cbafe, _efagc := _a.ParseUint(_bgfccd.Value, 10, 32)
			if _efagc != nil {
				return _efagc
			}
			_gbcffe := uint32(_cbafe)
			_cbcccf.IndentAttr = &_gbcffe
			continue
		}
		if _bgfccd.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_gaccg, _ffabc := _bgfccd.Value, error(nil)
			if _ffabc != nil {
				return _ffabc
			}
			_cbcccf.PivotTableStyleAttr = &_gaccg
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_dafce, _acffab := _a.ParseBool(_bgfccd.Value)
			if _acffab != nil {
				return _acffab
			}
			_cbcccf.ShowEmptyRowAttr = &_dafce
			continue
		}
		if _bgfccd.Name.Local == "\u0074\u0061\u0067" {
			_ddcce, _egbgfc := _bgfccd.Value, error(nil)
			if _egbgfc != nil {
				return _egbgfc
			}
			_cbcccf.TagAttr = &_ddcce
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_eegda, _efcgbd := _a.ParseBool(_bgfccd.Value)
			if _efcgbd != nil {
				return _efcgbd
			}
			_cbcccf.ShowEmptyColAttr = &_eegda
			continue
		}
		if _bgfccd.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gbdeca, _gbcef := _a.ParseUint(_bgfccd.Value, 10, 8)
			if _gbcef != nil {
				return _gbcef
			}
			_gcfcg := uint8(_gbdeca)
			_cbcccf.MinRefreshableVersionAttr = &_gcfcg
			continue
		}
		if _bgfccd.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_edcfa, _bgecaf := _a.ParseBool(_bgfccd.Value)
			if _bgecaf != nil {
				return _bgecaf
			}
			_cbcccf.ShowHeadersAttr = &_edcfa
			continue
		}
		if _bgfccd.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_cdbfe, _ddggb := _a.ParseBool(_bgfccd.Value)
			if _ddggb != nil {
				return _ddggb
			}
			_cbcccf.AsteriskTotalsAttr = &_cdbfe
			continue
		}
		if _bgfccd.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_cdabc, _feacg := _a.ParseBool(_bgfccd.Value)
			if _feacg != nil {
				return _feacg
			}
			_cbcccf.CompactAttr = &_cdabc
			continue
		}
		if _bgfccd.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_ffcaf, _dfead := _a.ParseBool(_bgfccd.Value)
			if _dfead != nil {
				return _dfead
			}
			_cbcccf.EditDataAttr = &_ffcaf
			continue
		}
		if _bgfccd.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_cacfa, _degafe := _a.ParseBool(_bgfccd.Value)
			if _degafe != nil {
				return _degafe
			}
			_cbcccf.OutlineAttr = &_cacfa
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_beegfc, _gggaa := _a.ParseBool(_bgfccd.Value)
			if _gggaa != nil {
				return _gggaa
			}
			_cbcccf.ShowCalcMbrsAttr = &_beegfc
			continue
		}
		if _bgfccd.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_gaade, _egfbd := _a.ParseBool(_bgfccd.Value)
			if _egfbd != nil {
				return _egfbd
			}
			_cbcccf.OutlineDataAttr = &_gaade
			continue
		}
		if _bgfccd.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_ceaad, _cadacf := _a.ParseBool(_bgfccd.Value)
			if _cadacf != nil {
				return _cadacf
			}
			_cbcccf.GridDropZonesAttr = &_ceaad
			continue
		}
		if _bgfccd.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_gdbcf, _ecee := _a.ParseBool(_bgfccd.Value)
			if _ecee != nil {
				return _ecee
			}
			_cbcccf.CustomListSortAttr = &_gdbcf
			continue
		}
		if _bgfccd.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_efaaa, _adbea := _a.ParseBool(_bgfccd.Value)
			if _adbea != nil {
				return _adbea
			}
			_cbcccf.RowGrandTotalsAttr = &_efaaa
			continue
		}
		if _bgfccd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_aafaff, _afcfc := _a.ParseBool(_bgfccd.Value)
			if _afcfc != nil {
				return _afcfc
			}
			_cbcccf.ApplyWidthHeightFormatsAttr = &_aafaff
			continue
		}
		if _bgfccd.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_ebdbb, _efdgce := _a.ParseBool(_bgfccd.Value)
			if _efdgce != nil {
				return _efdgce
			}
			_cbcccf.UseAutoFormattingAttr = &_ebdbb
			continue
		}
		if _bgfccd.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_faabag, _afdadd := _bgfccd.Value, error(nil)
			if _afdadd != nil {
				return _afdadd
			}
			_cbcccf.RowHeaderCaptionAttr = &_faabag
			continue
		}
		if _bgfccd.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_fggbd, _affde := _a.ParseBool(_bgfccd.Value)
			if _affde != nil {
				return _affde
			}
			_cbcccf.ShowDrillAttr = &_fggbd
			continue
		}
		if _bgfccd.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_gcbcc, _eafedee := _a.ParseBool(_bgfccd.Value)
			if _eafedee != nil {
				return _eafedee
			}
			_cbcccf.MergeItemAttr = &_gcbcc
			continue
		}
		if _bgfccd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_egadeg, _afceeg := _a.ParseBool(_bgfccd.Value)
			if _afceeg != nil {
				return _afceeg
			}
			_cbcccf.ApplyBorderFormatsAttr = &_egadeg
			continue
		}
		if _bgfccd.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_beafc, _eeefag := _a.ParseBool(_bgfccd.Value)
			if _eeefag != nil {
				return _eeefag
			}
			_cbcccf.VisualTotalsAttr = &_beafc
			continue
		}
		if _bgfccd.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_fadeb, _fdceeg := _a.ParseBool(_bgfccd.Value)
			if _fdceeg != nil {
				return _fdceeg
			}
			_cbcccf.CompactDataAttr = &_fadeb
			continue
		}
		if _bgfccd.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_agaeec, _ebefdb := _a.ParseUint(_bgfccd.Value, 10, 32)
			if _ebefdb != nil {
				return _ebefdb
			}
			_cbaeg := uint32(_agaeec)
			_cbcccf.DataPositionAttr = &_cbaeg
			continue
		}
		if _bgfccd.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_adcf, _eaacgf := _a.ParseBool(_bgfccd.Value)
			if _eaacgf != nil {
				return _eaacgf
			}
			_cbcccf.MultipleFieldFiltersAttr = &_adcf
			continue
		}
		if _bgfccd.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_gbcbe, _fdccd := _a.ParseBool(_bgfccd.Value)
			if _fdccd != nil {
				return _fdccd
			}
			_cbcccf.PageOverThenDownAttr = &_gbcbe
			continue
		}
		if _bgfccd.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_dgeabb, _aeabb := _a.ParseBool(_bgfccd.Value)
			if _aeabb != nil {
				return _aeabb
			}
			_cbcccf.FieldListSortAscendingAttr = &_dgeabb
			continue
		}
		if _bgfccd.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_eeceb, _fcabc := _a.ParseBool(_bgfccd.Value)
			if _fcabc != nil {
				return _fcabc
			}
			_cbcccf.ShowMissingAttr = &_eeceb
			continue
		}
		if _bgfccd.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_bbfeb, _cbged := _a.ParseBool(_bgfccd.Value)
			if _cbged != nil {
				return _cbged
			}
			_cbcccf.FieldPrintTitlesAttr = &_bbfeb
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_bgcgb, _dgbbad := _a.ParseBool(_bgfccd.Value)
			if _dgbbad != nil {
				return _dgbbad
			}
			_cbcccf.ShowMemberPropertyTipsAttr = &_bgcgb
			continue
		}
		if _bgfccd.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_febdad, _edeec := _bgfccd.Value, error(nil)
			if _edeec != nil {
				return _edeec
			}
			_cbcccf.PageStyleAttr = &_febdad
			continue
		}
		if _bgfccd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_cagfb, _dfccg := _a.ParseUint(_bgfccd.Value, 10, 32)
			if _dfccg != nil {
				return _dfccg
			}
			_ggbgg := uint32(_cagfb)
			_cbcccf.AutoFormatIdAttr = &_ggbgg
			continue
		}
		if _bgfccd.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_gcgdd, _ecafab := _a.ParseBool(_bgfccd.Value)
			if _ecafab != nil {
				return _ecafab
			}
			_cbcccf.ShowItemsAttr = &_gcgdd
			continue
		}
		if _bgfccd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ffdb, _efedfa := _a.ParseBool(_bgfccd.Value)
			if _efedfa != nil {
				return _efedfa
			}
			_cbcccf.ApplyPatternFormatsAttr = &_ffdb
			continue
		}
		if _bgfccd.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_cbbaba, _bfafb := _a.ParseBool(_bgfccd.Value)
			if _bfafb != nil {
				return _bfafb
			}
			_cbcccf.EnableFieldPropertiesAttr = &_cbbaba
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_dgeef, _agdebe := _a.ParseBool(_bgfccd.Value)
			if _agdebe != nil {
				return _agdebe
			}
			_cbcccf.ShowMultipleLabelAttr = &_dgeef
			continue
		}
		if _bgfccd.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_bbdbe, _geeee := _a.ParseBool(_bgfccd.Value)
			if _geeee != nil {
				return _geeee
			}
			_cbcccf.PreserveFormattingAttr = &_bbdbe
			continue
		}
		if _bgfccd.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_ffecdb, _ffbfb := _a.ParseBool(_bgfccd.Value)
			if _ffbfb != nil {
				return _ffbfb
			}
			_cbcccf.PublishedAttr = &_ffecdb
			continue
		}
		if _bgfccd.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_cgdacg, _abbegd := _bgfccd.Value, error(nil)
			if _abbegd != nil {
				return _abbegd
			}
			_cbcccf.MissingCaptionAttr = &_cgdacg
			continue
		}
		if _bgfccd.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_bcbgcg, _dbcaa := _a.ParseBool(_bgfccd.Value)
			if _dbcaa != nil {
				return _dbcaa
			}
			_cbcccf.ImmersiveAttr = &_bcbgcg
			continue
		}
		if _bgfccd.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_agdddg, _afggd := _a.ParseUint(_bgfccd.Value, 10, 32)
			if _afggd != nil {
				return _afggd
			}
			_ggcaa := uint32(_agdddg)
			_cbcccf.PageWrapAttr = &_ggcaa
			continue
		}
		if _bgfccd.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_egdgcb, _caeag := _a.ParseUint(_bgfccd.Value, 10, 32)
			if _caeag != nil {
				return _caeag
			}
			_adabf := uint32(_egdgcb)
			_cbcccf.ChartFormatAttr = &_adabf
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_abefa, _cceeac := _a.ParseBool(_bgfccd.Value)
			if _cceeac != nil {
				return _cceeac
			}
			_cbcccf.ShowDataDropDownAttr = &_abefa
			continue
		}
		if _bgfccd.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dfbegb, _caccag := _bgfccd.Value, error(nil)
			if _caccag != nil {
				return _caccag
			}
			_cbcccf.ColHeaderCaptionAttr = &_dfbegb
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_accaa, _cgaeg := _a.ParseBool(_bgfccd.Value)
			if _cgaeg != nil {
				return _cgaeg
			}
			_cbcccf.SubtotalHiddenItemsAttr = &_accaa
			continue
		}
		if _bgfccd.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_ageabc, _aecac := _a.ParseBool(_bgfccd.Value)
			if _aecac != nil {
				return _aecac
			}
			_cbcccf.MdxSubqueriesAttr = &_ageabc
			continue
		}
		if _bgfccd.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_adagfd, _adabc := _bgfccd.Value, error(nil)
			if _adabc != nil {
				return _adabc
			}
			_cbcccf.ErrorCaptionAttr = &_adagfd
			continue
		}
		if _bgfccd.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_gecgg, _gdgdcd := _a.ParseBool(_bgfccd.Value)
			if _gdgdcd != nil {
				return _gdgdcd
			}
			_cbcccf.ColGrandTotalsAttr = &_gecgg
			continue
		}
		if _bgfccd.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_aacca, _ffbfff := _a.ParseBool(_bgfccd.Value)
			if _ffbfff != nil {
				return _ffbfff
			}
			_cbcccf.PrintDrillAttr = &_aacca
			continue
		}
		if _bgfccd.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_gggfbf, _ecgbf := _a.ParseBool(_bgfccd.Value)
			if _ecgbf != nil {
				return _ecgbf
			}
			_cbcccf.ItemPrintTitlesAttr = &_gggfbf
			continue
		}
		if _bgfccd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bfgcb, _egdefg := _bgfccd.Value, error(nil)
			if _egdefg != nil {
				return _egdefg
			}
			_cbcccf.NameAttr = _bfgcb
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_adddd, _gcfccc := _a.ParseBool(_bgfccd.Value)
			if _gcfccc != nil {
				return _gcfccc
			}
			_cbcccf.ShowDropZonesAttr = &_adddd
			continue
		}
		if _bgfccd.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_adbcc, _gccef := _a.ParseBool(_bgfccd.Value)
			if _gccef != nil {
				return _gccef
			}
			_cbcccf.ShowDataTipsAttr = &_adbcc
			continue
		}
		if _bgfccd.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_bfcgbg, _bebcf := _bgfccd.Value, error(nil)
			if _bebcf != nil {
				return _bebcf
			}
			_cbcccf.VacatedStyleAttr = &_bfcgbg
			continue
		}
		if _bgfccd.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_abegc, _bbcea := _bgfccd.Value, error(nil)
			if _bbcea != nil {
				return _bbcea
			}
			_cbcccf.GrandTotalCaptionAttr = &_abegc
			continue
		}
		if _bgfccd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_adedcc, _fcdec := _a.ParseBool(_bgfccd.Value)
			if _fcdec != nil {
				return _fcdec
			}
			_cbcccf.ApplyNumberFormatsAttr = &_adedcc
			continue
		}
		if _bgfccd.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_caaeb, _fbdgf := _a.ParseBool(_bgfccd.Value)
			if _fbdgf != nil {
				return _fbdgf
			}
			_cbcccf.EnableDrillAttr = &_caaeb
			continue
		}
		if _bgfccd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gdedg, _bgdaee := _a.ParseBool(_bgfccd.Value)
			if _bgdaee != nil {
				return _bgdaee
			}
			_cbcccf.ApplyFontFormatsAttr = &_gdedg
			continue
		}
		if _bgfccd.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_bebcfc, _agbae := _a.ParseBool(_bgfccd.Value)
			if _agbae != nil {
				return _agbae
			}
			_cbcccf.DisableFieldListAttr = &_bebcfc
			continue
		}
		if _bgfccd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bfgfgb, _bbcge := _a.ParseBool(_bgfccd.Value)
			if _bbcge != nil {
				return _bbcge
			}
			_cbcccf.ApplyAlignmentFormatsAttr = &_bfgfgb
			continue
		}
		if _bgfccd.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_abgeb, _aebfdg := _a.ParseBool(_bgfccd.Value)
			if _aebfdg != nil {
				return _aebfdg
			}
			_cbcccf.DataOnRowsAttr = &_abgeb
			continue
		}
		if _bgfccd.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_ggece, _gfgaeeg := _bgfccd.Value, error(nil)
			if _gfgaeeg != nil {
				return _gfgaeeg
			}
			_cbcccf.DataCaptionAttr = _ggece
			continue
		}
		if _bgfccd.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_accdg, _gggfbe := _a.ParseBool(_bgfccd.Value)
			if _gggfbe != nil {
				return _gggfbe
			}
			_cbcccf.ShowErrorAttr = &_accdg
			continue
		}
		if _bgfccd.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_bcfggg, _afeba := _a.ParseUint(_bgfccd.Value, 10, 32)
			if _afeba != nil {
				return _afeba
			}
			_cbcccf.CacheIdAttr = uint32(_bcfggg)
			continue
		}
		if _bgfccd.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_edabfd, _dceed := _a.ParseBool(_bgfccd.Value)
			if _dceed != nil {
				return _dceed
			}
			_cbcccf.EnableWizardAttr = &_edabfd
			continue
		}
		if _bgfccd.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_dgdabcb, _cbfdc := _a.ParseUint(_bgfccd.Value, 10, 8)
			if _cbfdc != nil {
				return _cbfdc
			}
			_fddab := uint8(_dgdabcb)
			_cbcccf.UpdatedVersionAttr = &_fddab
			continue
		}
	}
_abbgg:
	for {
		_gabedb, _aebdgae := d.Token()
		if _aebdgae != nil {
			return _aebdgae
		}
		switch _afgcb := _gabedb.(type) {
		case _gd.StartElement:
			switch _afgcb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _ecbffg := d.DecodeElement(_cbcccf.Location, &_afgcb); _ecbffg != nil {
					return _ecbffg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_cbcccf.PivotFields = NewCT_PivotFields()
				if _gfgfee := d.DecodeElement(_cbcccf.PivotFields, &_afgcb); _gfgfee != nil {
					return _gfgfee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_cbcccf.RowFields = NewCT_RowFields()
				if _dcaeg := d.DecodeElement(_cbcccf.RowFields, &_afgcb); _dcaeg != nil {
					return _dcaeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_cbcccf.RowItems = NewCT_rowItems()
				if _efegf := d.DecodeElement(_cbcccf.RowItems, &_afgcb); _efegf != nil {
					return _efegf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_cbcccf.ColFields = NewCT_ColFields()
				if _effbf := d.DecodeElement(_cbcccf.ColFields, &_afgcb); _effbf != nil {
					return _effbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_cbcccf.ColItems = NewCT_colItems()
				if _cggeg := d.DecodeElement(_cbcccf.ColItems, &_afgcb); _cggeg != nil {
					return _cggeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_cbcccf.PageFields = NewCT_PageFields()
				if _cebcge := d.DecodeElement(_cbcccf.PageFields, &_afgcb); _cebcge != nil {
					return _cebcge
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_cbcccf.DataFields = NewCT_DataFields()
				if _bdbac := d.DecodeElement(_cbcccf.DataFields, &_afgcb); _bdbac != nil {
					return _bdbac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_cbcccf.Formats = NewCT_Formats()
				if _acgadb := d.DecodeElement(_cbcccf.Formats, &_afgcb); _acgadb != nil {
					return _acgadb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_cbcccf.ConditionalFormats = NewCT_ConditionalFormats()
				if _adegdb := d.DecodeElement(_cbcccf.ConditionalFormats, &_afgcb); _adegdb != nil {
					return _adegdb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_cbcccf.ChartFormats = NewCT_ChartFormats()
				if _cdadfa := d.DecodeElement(_cbcccf.ChartFormats, &_afgcb); _cdadfa != nil {
					return _cdadfa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_cbcccf.PivotHierarchies = NewCT_PivotHierarchies()
				if _acfecf := d.DecodeElement(_cbcccf.PivotHierarchies, &_afgcb); _acfecf != nil {
					return _acfecf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_cbcccf.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _dedcae := d.DecodeElement(_cbcccf.PivotTableStyleInfo, &_afgcb); _dedcae != nil {
					return _dedcae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_cbcccf.Filters = NewCT_PivotFilters()
				if _aeabfb := d.DecodeElement(_cbcccf.Filters, &_afgcb); _aeabfb != nil {
					return _aeabfb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_cbcccf.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _gefee := d.DecodeElement(_cbcccf.RowHierarchiesUsage, &_afgcb); _gefee != nil {
					return _gefee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_cbcccf.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _bdefbf := d.DecodeElement(_cbcccf.ColHierarchiesUsage, &_afgcb); _bdefbf != nil {
					return _bdefbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbcccf.ExtLst = NewCT_ExtensionList()
				if _gggda := d.DecodeElement(_cbcccf.ExtLst, &_afgcb); _gggda != nil {
					return _gggda
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006ce\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _afgcb.Name)
				if _febgc := d.Skip(); _febgc != nil {
					return _febgc
				}
			}
		case _gd.EndElement:
			break _abbgg
		case _gd.CharData:
		}
	}
	return nil
}

func (_gcbef *CT_ExternalDefinedNames) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_eeabg:
	for {
		_aega, _bgfcg := d.Token()
		if _bgfcg != nil {
			return _bgfcg
		}
		switch _aeba := _aega.(type) {
		case _gd.StartElement:
			switch _aeba.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_bffcb := NewCT_ExternalDefinedName()
				if _bgdbb := d.DecodeElement(_bffcb, &_aeba); _bgdbb != nil {
					return _bgdbb
				}
				_gcbef.DefinedName = append(_gcbef.DefinedName, _bffcb)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0044e\u0066\u0069\u006e\u0065\u0064\u004ea\u006d\u0065\u0073 \u0025\u0076", _aeba.Name)
				if _cebed := d.Skip(); _cebed != nil {
					return _cebed
				}
			}
		case _gd.EndElement:
			break _eeabg
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalcPr and its children, prefixing error messages with path
func (_gdd *CT_CalcPr) ValidateWithPath(path string) error {
	if _eacb := _gdd.CalcModeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _eacb != nil {
		return _eacb
	}
	if _fbga := _gdd.RefModeAttr.ValidateWithPath(path + "\u002f\u0052\u0065f\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fbga != nil {
		return _fbga
	}
	return nil
}

type StyleSheet struct{ CT_Stylesheet }

func (_bbgae ST_DvAspect) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_agedf := _gd.Attr{}
	_agedf.Name = name
	switch _bbgae {
	case ST_DvAspectUnset:
		_agedf.Value = ""
	case ST_DvAspectDVASPECT_CONTENT:
		_agedf.Value = "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case ST_DvAspectDVASPECT_ICON:
		_agedf.Value = "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return _agedf, nil
}

func (_cgdcbf *CT_QueryTable) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebaac := range start.Attr {
		if _ebaac.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_dagfbf, _bfbddg := _a.ParseBool(_ebaac.Value)
			if _bfbddg != nil {
				return _bfbddg
			}
			_cgdcbf.AdjustColumnWidthAttr = &_dagfbf
			continue
		}
		if _ebaac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aabbad, _ceagd := _ebaac.Value, error(nil)
			if _ceagd != nil {
				return _ceagd
			}
			_cgdcbf.NameAttr = _aabbad
			continue
		}
		if _ebaac.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_dgdgd, _aagade := _a.ParseBool(_ebaac.Value)
			if _aagade != nil {
				return _aagade
			}
			_cgdcbf.IntermediateAttr = &_dgdgd
			continue
		}
		if _ebaac.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_gegfc, _dfdfc := _a.ParseBool(_ebaac.Value)
			if _dfdfc != nil {
				return _dfdfc
			}
			_cgdcbf.RowNumbersAttr = &_gegfc
			continue
		}
		if _ebaac.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_adbbfc, _edba := _a.ParseUint(_ebaac.Value, 10, 32)
			if _edba != nil {
				return _edba
			}
			_cgdcbf.ConnectionIdAttr = uint32(_adbbfc)
			continue
		}
		if _ebaac.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_fbeee, _aebfe := _a.ParseBool(_ebaac.Value)
			if _aebfe != nil {
				return _aebfe
			}
			_cgdcbf.BackgroundRefreshAttr = &_fbeee
			continue
		}
		if _ebaac.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_eeabe, _cgccg := _a.ParseBool(_ebaac.Value)
			if _cgccg != nil {
				return _cgccg
			}
			_cgdcbf.RefreshOnLoadAttr = &_eeabe
			continue
		}
		if _ebaac.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_abdbd, _eedadc := _a.ParseBool(_ebaac.Value)
			if _eedadc != nil {
				return _eedadc
			}
			_cgdcbf.FillFormulasAttr = &_abdbd
			continue
		}
		if _ebaac.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_becdgf, _efdcac := _a.ParseBool(_ebaac.Value)
			if _efdcac != nil {
				return _efdcac
			}
			_cgdcbf.ApplyNumberFormatsAttr = &_becdgf
			continue
		}
		if _ebaac.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_aebaf, _bagbdf := _a.ParseBool(_ebaac.Value)
			if _bagbdf != nil {
				return _bagbdf
			}
			_cgdcbf.ApplyFontFormatsAttr = &_aebaf
			continue
		}
		if _ebaac.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_fadba, _fecbfg := _a.ParseBool(_ebaac.Value)
			if _fecbfg != nil {
				return _fecbfg
			}
			_cgdcbf.FirstBackgroundRefreshAttr = &_fadba
			continue
		}
		if _ebaac.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_eebef, _eaaaa := _a.ParseUint(_ebaac.Value, 10, 32)
			if _eaaaa != nil {
				return _eaaaa
			}
			_fbcea := uint32(_eebef)
			_cgdcbf.AutoFormatIdAttr = &_fbcea
			continue
		}
		if _ebaac.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dfcaf, _aegge := _a.ParseBool(_ebaac.Value)
			if _aegge != nil {
				return _aegge
			}
			_cgdcbf.ApplyAlignmentFormatsAttr = &_dfcaf
			continue
		}
		if _ebaac.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_ebaecg, _aefdc := _a.ParseBool(_ebaac.Value)
			if _aefdc != nil {
				return _aefdc
			}
			_cgdcbf.DisableRefreshAttr = &_ebaecg
			continue
		}
		if _ebaac.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_fdeab, _abeef := _a.ParseBool(_ebaac.Value)
			if _abeef != nil {
				return _abeef
			}
			_cgdcbf.ApplyBorderFormatsAttr = &_fdeab
			continue
		}
		if _ebaac.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_abebgc, _cgeba := _a.ParseBool(_ebaac.Value)
			if _cgeba != nil {
				return _cgeba
			}
			_cgdcbf.PreserveFormattingAttr = &_abebgc
			continue
		}
		if _ebaac.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bafgbg, _ebgag := _a.ParseBool(_ebaac.Value)
			if _ebgag != nil {
				return _ebgag
			}
			_cgdcbf.ApplyPatternFormatsAttr = &_bafgbg
			continue
		}
		if _ebaac.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_cgdcbf.GrowShrinkTypeAttr.UnmarshalXMLAttr(_ebaac)
			continue
		}
		if _ebaac.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_fgccg, _fgabb := _a.ParseBool(_ebaac.Value)
			if _fgabb != nil {
				return _fgabb
			}
			_cgdcbf.DisableEditAttr = &_fgccg
			continue
		}
		if _ebaac.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_cacecg, _ddag := _a.ParseBool(_ebaac.Value)
			if _ddag != nil {
				return _ddag
			}
			_cgdcbf.HeadersAttr = &_cacecg
			continue
		}
		if _ebaac.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_fdcag, _daaaf := _a.ParseBool(_ebaac.Value)
			if _daaaf != nil {
				return _daaaf
			}
			_cgdcbf.RemoveDataOnSaveAttr = &_fdcag
			continue
		}
		if _ebaac.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eeffg, _cgbba := _a.ParseBool(_ebaac.Value)
			if _cgbba != nil {
				return _cgbba
			}
			_cgdcbf.ApplyWidthHeightFormatsAttr = &_eeffg
			continue
		}
	}
_ageac:
	for {
		_cdaeg, _abfdd := d.Token()
		if _abfdd != nil {
			return _abfdd
		}
		switch _afgfc := _cdaeg.(type) {
		case _gd.StartElement:
			switch _afgfc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_cgdcbf.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _fddbeg := d.DecodeElement(_cgdcbf.QueryTableRefresh, &_afgfc); _fddbeg != nil {
					return _fddbeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgdcbf.ExtLst = NewCT_ExtensionList()
				if _bfeegb := d.DecodeElement(_cgdcbf.ExtLst, &_afgfc); _bfeegb != nil {
					return _bfeegb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065 \u0025\u0076", _afgfc.Name)
				if _baefd := d.Skip(); _baefd != nil {
					return _baefd
				}
			}
		case _gd.EndElement:
			break _ageac
		case _gd.CharData:
		}
	}
	return nil
}

type CT_CacheSource struct {

	// Cache Type
	TypeAttr ST_SourceType

	// Connection Index
	ConnectionIdAttr *uint32

	// Worksheet PivotCache Source
	WorksheetSource *CT_WorksheetSource

	// Consolidation Source
	Consolidation *CT_Consolidation

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bgdb *CT_ChartsheetView) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dbbg := range start.Attr {
		if _dbbg.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_bgaff, _dagee := _a.ParseBool(_dbbg.Value)
			if _dagee != nil {
				return _dagee
			}
			_bgdb.TabSelectedAttr = &_bgaff
			continue
		}
		if _dbbg.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_efbd, _efdd := _a.ParseUint(_dbbg.Value, 10, 32)
			if _efdd != nil {
				return _efdd
			}
			_fefa := uint32(_efbd)
			_bgdb.ZoomScaleAttr = &_fefa
			continue
		}
		if _dbbg.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_cfbe, _ceaeg := _a.ParseUint(_dbbg.Value, 10, 32)
			if _ceaeg != nil {
				return _ceaeg
			}
			_bgdb.WorkbookViewIdAttr = uint32(_cfbe)
			continue
		}
		if _dbbg.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_fbbc, _aaeg := _a.ParseBool(_dbbg.Value)
			if _aaeg != nil {
				return _aaeg
			}
			_bgdb.ZoomToFitAttr = &_fbbc
			continue
		}
	}
_acga:
	for {
		_cebc, _agcb := d.Token()
		if _agcb != nil {
			return _agcb
		}
		switch _fbfda := _cebc.(type) {
		case _gd.StartElement:
			switch _fbfda.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgdb.ExtLst = NewCT_ExtensionList()
				if _cfeb := d.DecodeElement(_bgdb.ExtLst, &_fbfda); _cfeb != nil {
					return _cfeb
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _fbfda.Name)
				if _debg := d.Skip(); _debg != nil {
					return _debg
				}
			}
		case _gd.EndElement:
			break _acga
		case _gd.CharData:
		}
	}
	return nil
}

func (_gcdec *CT_GroupItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _agfgb := range start.Attr {
		if _agfgb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acffg, _bcgfb := _a.ParseUint(_agfgb.Value, 10, 32)
			if _bcgfb != nil {
				return _bcgfb
			}
			_ebbg := uint32(_acffg)
			_gcdec.CountAttr = &_ebbg
			continue
		}
	}
_dfgbg:
	for {
		_fgaefb, _feacf := d.Token()
		if _feacf != nil {
			return _feacf
		}
		switch _ebab := _fgaefb.(type) {
		case _gd.StartElement:
			switch _ebab.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_cbce := NewCT_Missing()
				if _gaaac := d.DecodeElement(_cbce, &_ebab); _gaaac != nil {
					return _gaaac
				}
				_gcdec.M = append(_gcdec.M, _cbce)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_acdgbc := NewCT_Number()
				if _bggeg := d.DecodeElement(_acdgbc, &_ebab); _bggeg != nil {
					return _bggeg
				}
				_gcdec.N = append(_gcdec.N, _acdgbc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_ebedg := NewCT_Boolean()
				if _cfdde := d.DecodeElement(_ebedg, &_ebab); _cfdde != nil {
					return _cfdde
				}
				_gcdec.B = append(_gcdec.B, _ebedg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_dcbf := NewCT_Error()
				if _febd := d.DecodeElement(_dcbf, &_ebab); _febd != nil {
					return _febd
				}
				_gcdec.E = append(_gcdec.E, _dcbf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_dbagc := NewCT_String()
				if _bfada := d.DecodeElement(_dbagc, &_ebab); _bfada != nil {
					return _bfada
				}
				_gcdec.S = append(_gcdec.S, _dbagc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_dcedc := NewCT_DateTime()
				if _feee := d.DecodeElement(_dcedc, &_ebab); _feee != nil {
					return _feee
				}
				_gcdec.D = append(_gcdec.D, _dcedc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073 \u0025\u0076", _ebab.Name)
				if _dbbd := d.Skip(); _dbbd != nil {
					return _dbbd
				}
			}
		case _gd.EndElement:
			break _dfgbg
		case _gd.CharData:
		}
	}
	return nil
}

type CT_I struct {

	// Item Type
	TAttr ST_ItemType

	// Repeated Items Count
	RAttr *uint32

	// Data Field Index
	IAttr *uint32

	// Row / Column Item Index
	X []*CT_X
}

func (_acacg *Revisions) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ar\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"
	return _acacg.CT_Revisions.MarshalXML(e, start)
}

type CT_PhoneticPr struct {

	// Font Id
	FontIdAttr uint32

	// Character Type
	TypeAttr ST_PhoneticType

	// Alignment
	AlignmentAttr ST_PhoneticAlignment
}

func (_cccfc *CT_SmartTagTypes) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_geccb:
	for {
		_gbdbf, _degcbb := d.Token()
		if _degcbb != nil {
			return _degcbb
		}
		switch _fbcbaba := _gbdbf.(type) {
		case _gd.StartElement:
			switch _fbcbaba.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}:
				_ccafb := NewCT_SmartTagType()
				if _efaedf := d.DecodeElement(_ccafb, &_fbcbaba); _efaedf != nil {
					return _efaedf
				}
				_cccfc.SmartTagType = append(_cccfc.SmartTagType, _ccafb)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _fbcbaba.Name)
				if _fbcfad := d.Skip(); _fbcfad != nil {
					return _fbcfad
				}
			}
		case _gd.EndElement:
			break _geccb
		case _gd.CharData:
		}
	}
	return nil
}

func (_abdbc *CT_Dxfs) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aeggg := range start.Attr {
		if _aeggg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gaeef, _ffdab := _a.ParseUint(_aeggg.Value, 10, 32)
			if _ffdab != nil {
				return _ffdab
			}
			_dbgff := uint32(_gaeef)
			_abdbc.CountAttr = &_dbgff
			continue
		}
	}
_gegec:
	for {
		_acdfd, _egeeba := d.Token()
		if _egeeba != nil {
			return _egeeba
		}
		switch _bgfaf := _acdfd.(type) {
		case _gd.StartElement:
			switch _bgfaf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_dedb := NewCT_Dxf()
				if _acegc := d.DecodeElement(_dedb, &_bgfaf); _acegc != nil {
					return _acegc
				}
				_abdbc.Dxf = append(_abdbc.Dxf, _dedb)
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0044\u0078\u0066\u0073\u0020\u0025\u0076", _bgfaf.Name)
				if _dedag := d.Skip(); _dedag != nil {
					return _dedag
				}
			}
		case _gd.EndElement:
			break _gegec
		case _gd.CharData:
		}
	}
	return nil
}

type CT_FontScheme struct {

	// Font Scheme
	ValAttr ST_FontScheme
}

// ValidateWithPath validates the CT_LevelGroup and its children, prefixing error messages with path
func (_acdgbcc *CT_LevelGroup) ValidateWithPath(path string) error {
	if _bbce := _acdgbcc.GroupMembers.ValidateWithPath(path + "\u002f\u0047\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"); _bbce != nil {
		return _bbce
	}
	return nil
}

func (_aegdg *CT_Mdx) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e"}, Value: _b.Sprintf("\u0025\u0076", _aegdg.NAttr)})
	_fgeb, _cgfe := _aegdg.FAttr.MarshalXMLAttr(_gd.Name{Local: "\u0066"})
	if _cgfe != nil {
		return _cgfe
	}
	start.Attr = append(start.Attr, _fgeb)
	e.EncodeToken(start)
	if _aegdg.T != nil {
		_bdcf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074"}}
		e.EncodeElement(_aegdg.T, _bdcf)
	}
	if _aegdg.Ms != nil {
		_eddb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003am\u0073"}}
		e.EncodeElement(_aegdg.Ms, _eddb)
	}
	if _aegdg.P != nil {
		_abfce := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070"}}
		e.EncodeElement(_aegdg.P, _abfce)
	}
	if _aegdg.K != nil {
		_dgebf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006b"}}
		e.EncodeElement(_aegdg.K, _dgebf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cdcgg *CT_Filters) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bfedf := range start.Attr {
		if _bfedf.Name.Local == "\u0062\u006c\u0061n\u006b" {
			_bbffa, _fbccgb := _a.ParseBool(_bfedf.Value)
			if _fbccgb != nil {
				return _fbccgb
			}
			_cdcgg.BlankAttr = &_bbffa
			continue
		}
		if _bfedf.Name.Local == "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065" {
			_cdcgg.CalendarTypeAttr.UnmarshalXMLAttr(_bfedf)
			continue
		}
	}
_ebfa:
	for {
		_cdbgc, _aefeb := d.Token()
		if _aefeb != nil {
			return _aefeb
		}
		switch _ecfbc := _cdbgc.(type) {
		case _gd.StartElement:
			switch _ecfbc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_adca := NewCT_Filter()
				if _cdaf := d.DecodeElement(_adca, &_ecfbc); _cdaf != nil {
					return _cdaf
				}
				_cdcgg.Filter = append(_cdcgg.Filter, _adca)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}:
				_bgeca := NewCT_DateGroupItem()
				if _gefbc := d.DecodeElement(_bgeca, &_ecfbc); _gefbc != nil {
					return _gefbc
				}
				_cdcgg.DateGroupItem = append(_cdcgg.DateGroupItem, _bgeca)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _ecfbc.Name)
				if _abdbe := d.Skip(); _abdbe != nil {
					return _abdbe
				}
			}
		case _gd.EndElement:
			break _ebfa
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Chartsheet and its children
func (_egce *CT_Chartsheet) Validate() error {
	return _egce.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_CustomChartsheetViews and its children, prefixing error messages with path
func (_dgegg *CT_CustomChartsheetViews) ValidateWithPath(path string) error {
	for _accga, _ffaa := range _dgegg.CustomSheetView {
		if _affc := _ffaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _accga)); _affc != nil {
			return _affc
		}
	}
	return nil
}

func (_bbggc *CT_ExternalReference) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bbggc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Metadata struct {

	// Metadata Types Collection
	MetadataTypes *CT_MetadataTypes

	// Metadata String Store
	MetadataStrings *CT_MetadataStrings

	// MDX Metadata Information
	MdxMetadata *CT_MdxMetadata

	// Future Metadata
	FutureMetadata []*CT_FutureMetadata

	// Cell Metadata
	CellMetadata *CT_MetadataBlocks

	// Value Metadata
	ValueMetadata *CT_MetadataBlocks

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func (_fdbdc ST_FormatAction) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_fdbdc.String(), start)
}

func (_dgcf *CT_ExternalCell) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dgcf.RAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_dgcf.RAttr)})
	}
	if _dgcf.TAttr != ST_CellTypeUnset {
		_bcdcee, _aegcd := _dgcf.TAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074"})
		if _aegcd != nil {
			return _aegcd
		}
		start.Attr = append(start.Attr, _bcdcee)
	}
	if _dgcf.VmAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_dgcf.VmAttr)})
	}
	e.EncodeToken(start)
	if _dgcf.V != nil {
		_ecccc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_e.AddPreserveSpaceAttr(&_ecccc, *_dgcf.V)
		e.EncodeElement(_dgcf.V, _ecccc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bgfge *CT_MetadataStrings) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aeadb := range start.Attr {
		if _aeadb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cabf, _aacdd := _a.ParseUint(_aeadb.Value, 10, 32)
			if _aacdd != nil {
				return _aacdd
			}
			_baadc := uint32(_cabf)
			_bgfge.CountAttr = &_baadc
			continue
		}
	}
_gcbdd:
	for {
		_deefb, _egdcg := d.Token()
		if _egdcg != nil {
			return _egdcg
		}
		switch _cfbefd := _deefb.(type) {
		case _gd.StartElement:
			switch _cfbefd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_acdca := NewCT_XStringElement()
				if _ffcfbg := d.DecodeElement(_acdca, &_cfbefd); _ffcfbg != nil {
					return _ffcfbg
				}
				_bgfge.S = append(_bgfge.S, _acdca)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073\u0020\u0025\u0076", _cfbefd.Name)
				if _febegc := d.Skip(); _febegc != nil {
					return _febegc
				}
			}
		case _gd.EndElement:
			break _gcbdd
		case _gd.CharData:
		}
	}
	return nil
}

func NewComments() *Comments {
	_feeec := &Comments{}
	_feeec.CT_Comments = *NewCT_Comments()
	return _feeec
}

func (_gaecfbg ST_ItemType) ValidateWithPath(path string) error {
	switch _gaecfbg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaecfbg))
	}
	return nil
}

const (
	ST_FormulaExpressionUnset        ST_FormulaExpression = 0
	ST_FormulaExpressionRef          ST_FormulaExpression = 1
	ST_FormulaExpressionRefError     ST_FormulaExpression = 2
	ST_FormulaExpressionArea         ST_FormulaExpression = 3
	ST_FormulaExpressionAreaError    ST_FormulaExpression = 4
	ST_FormulaExpressionComputedArea ST_FormulaExpression = 5
)

func NewCT_ServerFormats() *CT_ServerFormats { _aeaea := &CT_ServerFormats{}; return _aeaea }

const (
	ST_ParameterTypeUnset  ST_ParameterType = 0
	ST_ParameterTypePrompt ST_ParameterType = 1
	ST_ParameterTypeValue  ST_ParameterType = 2
	ST_ParameterTypeCell   ST_ParameterType = 3
)

// Validate validates the CT_ConditionalFormatting and its children
func (_agdb *CT_ConditionalFormatting) Validate() error {
	return _agdb.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}

func NewCT_DrawingHF() *CT_DrawingHF { _faac := &CT_DrawingHF{}; return _faac }

func (_afdfa *CT_Controls) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_eaagb:
	for {
		_gbba, _aeagg := d.Token()
		if _aeagg != nil {
			return _aeagg
		}
		switch _fffc := _gbba.(type) {
		case _gd.StartElement:
			switch _fffc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_cdaba := NewCT_Control()
				if _cdcca := d.DecodeElement(_cdaba, &_fffc); _cdcca != nil {
					return _cdcca
				}
				_afdfa.Control = append(_afdfa.Control, _cdaba)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073\u0020\u0025\u0076", _fffc.Name)
				if _gafcc := d.Skip(); _gafcc != nil {
					return _gafcc
				}
			}
		case _gd.EndElement:
			break _eaagb
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CommentPr and its children
func (_agfd *CT_CommentPr) Validate() error {
	return _agfd.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072")
}

// Validate validates the CT_GradientFill and its children
func (_aebag *CT_GradientFill) Validate() error {
	return _aebag.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c")
}

// Validate validates the Worksheet and its children
func (_gggcb *Worksheet) Validate() error {
	return _gggcb.ValidateWithPath("\u0057o\u0072\u006b\u0073\u0068\u0065\u0065t")
}

// ValidateWithPath validates the CT_CellFormula and its children, prefixing error messages with path
func (_bbgf *CT_CellFormula) ValidateWithPath(path string) error {
	if _fegg := _bbgf.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _fegg != nil {
		return _fegg
	}
	return nil
}

type ST_DdeValueType byte

func NewCT_SheetProtection() *CT_SheetProtection { _fdadd := &CT_SheetProtection{}; return _fdadd }

type CT_Consolidation struct {

	// Auto Page
	AutoPageAttr *bool

	// Page Item Values
	Pages *CT_Pages

	// Range Sets
	RangeSets *CT_RangeSets
}

// Validate validates the CT_Reviewed and its children
func (_agadd *CT_Reviewed) Validate() error {
	return _agadd.ValidateWithPath("C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064")
}

// ValidateWithPath validates the CT_ServerFormats and its children, prefixing error messages with path
func (_gbdfg *CT_ServerFormats) ValidateWithPath(path string) error {
	for _eabge, _ebadfda := range _gbdfg.ServerFormat {
		if _ccbgc := _ebadfda.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053er\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _eabge)); _ccbgc != nil {
			return _ccbgc
		}
	}
	return nil
}

func (_gebcf ST_TextHAlign) ValidateWithPath(path string) error {
	switch _gebcf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gebcf))
	}
	return nil
}

func (_dffabc *CT_WebPublishObject) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ccgac := range start.Attr {
		if _ccgac.Name.Local == "\u0069\u0064" {
			_gaceg, _ccbbad := _a.ParseUint(_ccgac.Value, 10, 32)
			if _ccbbad != nil {
				return _ccbbad
			}
			_dffabc.IdAttr = uint32(_gaceg)
			continue
		}
		if _ccgac.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_gdfafc, _ecbeed := _ccgac.Value, error(nil)
			if _ecbeed != nil {
				return _ecbeed
			}
			_dffabc.DivIdAttr = _gdfafc
			continue
		}
		if _ccgac.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_ggbdc, _fdfcb := _ccgac.Value, error(nil)
			if _fdfcb != nil {
				return _fdfcb
			}
			_dffabc.SourceObjectAttr = &_ggbdc
			continue
		}
		if _ccgac.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_fbfgf, _facda := _ccgac.Value, error(nil)
			if _facda != nil {
				return _facda
			}
			_dffabc.DestinationFileAttr = _fbfgf
			continue
		}
		if _ccgac.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_gcece, _aecaa := _ccgac.Value, error(nil)
			if _aecaa != nil {
				return _aecaa
			}
			_dffabc.TitleAttr = &_gcece
			continue
		}
		if _ccgac.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_fdbbbc, _adffcd := _a.ParseBool(_ccgac.Value)
			if _adffcd != nil {
				return _adffcd
			}
			_dffabc.AutoRepublishAttr = &_fdbbbc
			continue
		}
	}
	for {
		_dccdc, _ecage := d.Token()
		if _ecage != nil {
			return _b.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0057\u0065\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ecage)
		}
		if _ddege, _acgee := _dccdc.(_gd.EndElement); _acgee && _ddege.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbeeacf ST_SortMethod) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_gbeeacf.String(), start)
}

func (_fedc *CT_FontFamily) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fedc.ValAttr = 0
	for _, _dabcf := range start.Attr {
		if _dabcf.Name.Local == "\u0076\u0061\u006c" {
			_cgbb, _eged := _a.ParseInt(_dabcf.Value, 10, 64)
			if _eged != nil {
				return _eged
			}
			_fedc.ValAttr = _cgbb
			continue
		}
	}
	for {
		_ggac, _gadda := d.Token()
		if _gadda != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0046a\u006d\u0069\u006c\u0079\u003a\u0020\u0025s", _gadda)
		}
		if _accgaf, _daadg := _ggac.(_gd.EndElement); _daadg && _accgaf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ObjectAnchor and its children
func (_ccdb *CT_ObjectAnchor) Validate() error {
	return _ccdb.ValidateWithPath("\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072")
}

func (_deaga *CT_PivotField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _deaga.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_deaga.NameAttr)})
	}
	if _deaga.AxisAttr != ST_AxisUnset {
		_caeae, _ccadf := _deaga.AxisAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _ccadf != nil {
			return _ccadf
		}
		start.Attr = append(start.Attr, _caeae)
	}
	if _deaga.DataFieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DataFieldAttr))})
	}
	if _deaga.SubtotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_deaga.SubtotalCaptionAttr)})
	}
	if _deaga.ShowDropDownsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.ShowDropDownsAttr))})
	}
	if _deaga.HiddenLevelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.HiddenLevelAttr))})
	}
	if _deaga.UniqueMemberPropertyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_deaga.UniqueMemberPropertyAttr)})
	}
	if _deaga.CompactAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.CompactAttr))})
	}
	if _deaga.AllDrilledAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.AllDrilledAttr))})
	}
	if _deaga.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_deaga.NumFmtIdAttr)})
	}
	if _deaga.OutlineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.OutlineAttr))})
	}
	if _deaga.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.SubtotalTopAttr))})
	}
	if _deaga.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DragToRowAttr))})
	}
	if _deaga.DragToColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DragToColAttr))})
	}
	if _deaga.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.MultipleItemSelectionAllowedAttr))})
	}
	if _deaga.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DragToPageAttr))})
	}
	if _deaga.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DragToDataAttr))})
	}
	if _deaga.DragOffAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DragOffAttr))})
	}
	if _deaga.ShowAllAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0041\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.ShowAllAttr))})
	}
	if _deaga.InsertBlankRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.InsertBlankRowAttr))})
	}
	if _deaga.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.ServerFieldAttr))})
	}
	if _deaga.InsertPageBreakAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.InsertPageBreakAttr))})
	}
	if _deaga.AutoShowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.AutoShowAttr))})
	}
	if _deaga.TopAutoShowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.TopAutoShowAttr))})
	}
	if _deaga.HideNewItemsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.HideNewItemsAttr))})
	}
	if _deaga.MeasureFilterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.MeasureFilterAttr))})
	}
	if _deaga.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.IncludeNewItemsInFilterAttr))})
	}
	if _deaga.ItemPageCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_deaga.ItemPageCountAttr)})
	}
	if _deaga.SortTypeAttr != ST_FieldSortTypeUnset {
		_ggcf, _ebffg := _deaga.SortTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _ebffg != nil {
			return _ebffg
		}
		start.Attr = append(start.Attr, _ggcf)
	}
	if _deaga.DataSourceSortAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DataSourceSortAttr))})
	}
	if _deaga.NonAutoSortDefaultAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.NonAutoSortDefaultAttr))})
	}
	if _deaga.RankByAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061\u006e\u006b\u0042\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_deaga.RankByAttr)})
	}
	if _deaga.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DefaultSubtotalAttr))})
	}
	if _deaga.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.SumSubtotalAttr))})
	}
	if _deaga.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.CountASubtotalAttr))})
	}
	if _deaga.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.AvgSubtotalAttr))})
	}
	if _deaga.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.MaxSubtotalAttr))})
	}
	if _deaga.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.MinSubtotalAttr))})
	}
	if _deaga.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.ProductSubtotalAttr))})
	}
	if _deaga.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.CountSubtotalAttr))})
	}
	if _deaga.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.StdDevSubtotalAttr))})
	}
	if _deaga.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.StdDevPSubtotalAttr))})
	}
	if _deaga.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.VarSubtotalAttr))})
	}
	if _deaga.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.VarPSubtotalAttr))})
	}
	if _deaga.ShowPropCellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.ShowPropCellAttr))})
	}
	if _deaga.ShowPropTipAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.ShowPropTipAttr))})
	}
	if _deaga.ShowPropAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.ShowPropAsCaptionAttr))})
	}
	if _deaga.DefaultAttributeDrillStateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deaga.DefaultAttributeDrillStateAttr))})
	}
	e.EncodeToken(start)
	if _deaga.Items != nil {
		_cfegb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_deaga.Items, _cfegb)
	}
	if _deaga.AutoSortScope != nil {
		_eeefaa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0061\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}}
		e.EncodeElement(_deaga.AutoSortScope, _eeefaa)
	}
	if _deaga.ExtLst != nil {
		_gddee := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_deaga.ExtLst, _gddee)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gbda *CT_CacheHierarchy) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _gbda.UniqueNameAttr)})
	if _gbda.CaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.CaptionAttr)})
	}
	if _gbda.MeasureAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.MeasureAttr))})
	}
	if _gbda.SetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.SetAttr))})
	}
	if _gbda.ParentSetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.ParentSetAttr)})
	}
	if _gbda.IconSetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.IconSetAttr)})
	}
	if _gbda.AttributeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.AttributeAttr))})
	}
	if _gbda.TimeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.TimeAttr))})
	}
	if _gbda.KeyAttributeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.KeyAttributeAttr))})
	}
	if _gbda.DefaultMemberUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.DefaultMemberUniqueNameAttr)})
	}
	if _gbda.AllUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.AllUniqueNameAttr)})
	}
	if _gbda.AllCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.AllCaptionAttr)})
	}
	if _gbda.DimensionUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.DimensionUniqueNameAttr)})
	}
	if _gbda.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.DisplayFolderAttr)})
	}
	if _gbda.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.MeasureGroupAttr)})
	}
	if _gbda.MeasuresAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.MeasuresAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", _gbda.CountAttr)})
	if _gbda.OneFieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.OneFieldAttr))})
	}
	if _gbda.MemberValueDatatypeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_gbda.MemberValueDatatypeAttr)})
	}
	if _gbda.UnbalancedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.UnbalancedAttr))})
	}
	if _gbda.UnbalancedGroupAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.UnbalancedGroupAttr))})
	}
	if _gbda.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gbda.HiddenAttr))})
	}
	e.EncodeToken(start)
	if _gbda.FieldsUsage != nil {
		_feba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_gbda.FieldsUsage, _feba)
	}
	if _gbda.GroupLevels != nil {
		_gcdc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073"}}
		e.EncodeElement(_gbda.GroupLevels, _gcdc)
	}
	if _gbda.ExtLst != nil {
		_afd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gbda.ExtLst, _afd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_QueryTableField() *CT_QueryTableField { _bgggb := &CT_QueryTableField{}; return _bgggb }

// ValidateWithPath validates the CT_DataValidation and its children, prefixing error messages with path
func (_gfgfe *CT_DataValidation) ValidateWithPath(path string) error {
	if _bfgd := _gfgfe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bfgd != nil {
		return _bfgd
	}
	if _ddab := _gfgfe.ErrorStyleAttr.ValidateWithPath(path + "\u002fE\u0072r\u006f\u0072\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _ddab != nil {
		return _ddab
	}
	if _eedag := _gfgfe.ImeModeAttr.ValidateWithPath(path + "\u002f\u0049\u006de\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _eedag != nil {
		return _eedag
	}
	if _cfefa := _gfgfe.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _cfefa != nil {
		return _cfefa
	}
	return nil
}

func (_faad *CT_BooleanProperty) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fcdb := range start.Attr {
		if _fcdb.Name.Local == "\u0076\u0061\u006c" {
			_gfg, _fabe := _a.ParseBool(_fcdb.Value)
			if _fabe != nil {
				return _fabe
			}
			_faad.ValAttr = &_gfg
			continue
		}
	}
	for {
		_feg, _gfc := d.Token()
		if _gfc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0042\u006f\u006f\u006c\u0065\u0061\u006eP\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _gfc)
		}
		if _fca, _cdgd := _feg.(_gd.EndElement); _cdgd && _fca.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ccfdg ST_UnderlineValues) String() string {
	switch _ccfdg {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u006e\u0067\u006c\u0065"
	case 2:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 3:
		return "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 4:
		return "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// Validate validates the CT_FileVersion and its children
func (_fbba *CT_FileVersion) Validate() error {
	return _fbba.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e")
}

func (_fbfc *CT_Colors) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _fbfc.IndexedColors != nil {
		_cebf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0069\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_fbfc.IndexedColors, _cebf)
	}
	if _fbfc.MruColors != nil {
		_afbff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003am\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_fbfc.MruColors, _afbff)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gegbca ST_DataValidationOperator) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_baefdc := _gd.Attr{}
	_baefdc.Name = name
	switch _gegbca {
	case ST_DataValidationOperatorUnset:
		_baefdc.Value = ""
	case ST_DataValidationOperatorBetween:
		_baefdc.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorNotBetween:
		_baefdc.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorEqual:
		_baefdc.Value = "\u0065\u0071\u0075a\u006c"
	case ST_DataValidationOperatorNotEqual:
		_baefdc.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorLessThan:
		_baefdc.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorLessThanOrEqual:
		_baefdc.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorGreaterThan:
		_baefdc.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorGreaterThanOrEqual:
		_baefdc.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return _baefdc, nil
}

func (_agbbe *CT_Connection) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _agbbe.IdAttr)})
	if _agbbe.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.SourceFileAttr)})
	}
	if _agbbe.OdcFileAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fd\u0063\u0046\u0069\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.OdcFileAttr)})
	}
	if _agbbe.KeepAliveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.KeepAliveAttr))})
	}
	if _agbbe.IntervalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.IntervalAttr)})
	}
	if _agbbe.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.NameAttr)})
	}
	if _agbbe.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.DescriptionAttr)})
	}
	if _agbbe.TypeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.TypeAttr)})
	}
	if _agbbe.ReconnectionMethodAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.ReconnectionMethodAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _agbbe.RefreshedVersionAttr)})
	if _agbbe.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.MinRefreshableVersionAttr)})
	}
	if _agbbe.SavePasswordAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.SavePasswordAttr))})
	}
	if _agbbe.NewAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0065\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.NewAttr))})
	}
	if _agbbe.DeletedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.DeletedAttr))})
	}
	if _agbbe.OnlyUseConnectionFileAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.OnlyUseConnectionFileAttr))})
	}
	if _agbbe.BackgroundAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.BackgroundAttr))})
	}
	if _agbbe.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.RefreshOnLoadAttr))})
	}
	if _agbbe.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbe.SaveDataAttr))})
	}
	if _agbbe.CredentialsAttr != ST_CredMethodUnset {
		_befe, _cbed := _agbbe.CredentialsAttr.MarshalXMLAttr(_gd.Name{Local: "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073"})
		if _cbed != nil {
			return _cbed
		}
		start.Attr = append(start.Attr, _befe)
	}
	if _agbbe.SingleSignOnIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_agbbe.SingleSignOnIdAttr)})
	}
	e.EncodeToken(start)
	if _agbbe.DbPr != nil {
		_faag := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0064\u0062\u0050\u0072"}}
		e.EncodeElement(_agbbe.DbPr, _faag)
	}
	if _agbbe.OlapPr != nil {
		_ebge := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006f\u006c\u0061\u0070\u0050r"}}
		e.EncodeElement(_agbbe.OlapPr, _ebge)
	}
	if _agbbe.WebPr != nil {
		_ffbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_agbbe.WebPr, _ffbb)
	}
	if _agbbe.TextPr != nil {
		_defbd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074\u0050r"}}
		e.EncodeElement(_agbbe.TextPr, _defbd)
	}
	if _agbbe.Parameters != nil {
		_bccc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_agbbe.Parameters, _bccc)
	}
	if _agbbe.ExtLst != nil {
		_bddc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agbbe.ExtLst, _bddc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Item struct {

	// Item User Caption
	NAttr *string

	// Item Type
	TAttr ST_ItemType

	// Hidden
	HAttr *bool

	// Character
	SAttr *bool

	// Hide Details
	SdAttr *bool

	// Calculated Member
	FAttr *bool

	// Missing
	MAttr *bool

	// Child Items
	CAttr *bool

	// Item Index
	XAttr *uint32

	// Expanded
	DAttr *bool

	// Drill Across Attributes
	EAttr *bool
}

func (_affbb *CT_FileSharing) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _affbb.ReadOnlyRecommendedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_affbb.ReadOnlyRecommendedAttr))})
	}
	if _affbb.UserNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_affbb.UserNameAttr)})
	}
	if _affbb.ReservationPasswordAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_affbb.ReservationPasswordAttr)})
	}
	if _affbb.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_affbb.AlgorithmNameAttr)})
	}
	if _affbb.HashValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_affbb.HashValueAttr)})
	}
	if _affbb.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_affbb.SaltValueAttr)})
	}
	if _affbb.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _b.Sprintf("\u0025\u0076", *_affbb.SpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_SortState struct {

	// Sort by Columns
	ColumnSortAttr *bool

	// Case Sensitive
	CaseSensitiveAttr *bool

	// Sort Method
	SortMethodAttr ST_SortMethod

	// Sort Range
	RefAttr string

	// Sort Condition
	SortCondition []*CT_SortCondition
	ExtLst        *CT_ExtensionList
}

func (_dafb *CT_CustomChartsheetViews) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _dafb.CustomSheetView != nil {
		_eeab := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
		for _, _dacc := range _dafb.CustomSheetView {
			e.EncodeElement(_dacc, _eeab)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dagdee ST_CalcMode) ValidateWithPath(path string) error {
	switch _dagdee {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dagdee))
	}
	return nil
}

func (_bagedg ST_ItemType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bagedg.String(), start)
}

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_bbeccf *QueryTable) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bbeccf.CT_QueryTable = *NewCT_QueryTable()
	for _, _ddgaa := range start.Attr {
		if _ddgaa.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_bagag, _decgc := _a.ParseBool(_ddgaa.Value)
			if _decgc != nil {
				return _decgc
			}
			_bbeccf.AdjustColumnWidthAttr = &_bagag
			continue
		}
		if _ddgaa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cceafg, _efabg := _ddgaa.Value, error(nil)
			if _efabg != nil {
				return _efabg
			}
			_bbeccf.NameAttr = _cceafg
			continue
		}
		if _ddgaa.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_cgbfd, _cceac := _a.ParseBool(_ddgaa.Value)
			if _cceac != nil {
				return _cceac
			}
			_bbeccf.IntermediateAttr = &_cgbfd
			continue
		}
		if _ddgaa.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_edabg, _bbffed := _a.ParseBool(_ddgaa.Value)
			if _bbffed != nil {
				return _bbffed
			}
			_bbeccf.RowNumbersAttr = &_edabg
			continue
		}
		if _ddgaa.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_aafdf, _eagbgfg := _a.ParseUint(_ddgaa.Value, 10, 32)
			if _eagbgfg != nil {
				return _eagbgfg
			}
			_bbeccf.ConnectionIdAttr = uint32(_aafdf)
			continue
		}
		if _ddgaa.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_bgcbca, _egggd := _a.ParseBool(_ddgaa.Value)
			if _egggd != nil {
				return _egggd
			}
			_bbeccf.BackgroundRefreshAttr = &_bgcbca
			continue
		}
		if _ddgaa.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_cgabc, _cbadg := _a.ParseBool(_ddgaa.Value)
			if _cbadg != nil {
				return _cbadg
			}
			_bbeccf.RefreshOnLoadAttr = &_cgabc
			continue
		}
		if _ddgaa.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_ffgcd, _ecbffe := _a.ParseBool(_ddgaa.Value)
			if _ecbffe != nil {
				return _ecbffe
			}
			_bbeccf.FillFormulasAttr = &_ffgcd
			continue
		}
		if _ddgaa.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ffedgg, _febdb := _a.ParseBool(_ddgaa.Value)
			if _febdb != nil {
				return _febdb
			}
			_bbeccf.ApplyNumberFormatsAttr = &_ffedgg
			continue
		}
		if _ddgaa.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cfbac, _dcfee := _a.ParseBool(_ddgaa.Value)
			if _dcfee != nil {
				return _dcfee
			}
			_bbeccf.ApplyFontFormatsAttr = &_cfbac
			continue
		}
		if _ddgaa.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_cdceg, _cgfa := _a.ParseBool(_ddgaa.Value)
			if _cgfa != nil {
				return _cgfa
			}
			_bbeccf.FirstBackgroundRefreshAttr = &_cdceg
			continue
		}
		if _ddgaa.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_ggbbdf, _acgcgf := _a.ParseUint(_ddgaa.Value, 10, 32)
			if _acgcgf != nil {
				return _acgcgf
			}
			_bacfc := uint32(_ggbbdf)
			_bbeccf.AutoFormatIdAttr = &_bacfc
			continue
		}
		if _ddgaa.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ddffc, _dcfgg := _a.ParseBool(_ddgaa.Value)
			if _dcfgg != nil {
				return _dcfgg
			}
			_bbeccf.ApplyAlignmentFormatsAttr = &_ddffc
			continue
		}
		if _ddgaa.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_cebea, _cadgg := _a.ParseBool(_ddgaa.Value)
			if _cadgg != nil {
				return _cadgg
			}
			_bbeccf.DisableRefreshAttr = &_cebea
			continue
		}
		if _ddgaa.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_gcace, _caegf := _a.ParseBool(_ddgaa.Value)
			if _caegf != nil {
				return _caegf
			}
			_bbeccf.ApplyBorderFormatsAttr = &_gcace
			continue
		}
		if _ddgaa.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_fbbag, _fccega := _a.ParseBool(_ddgaa.Value)
			if _fccega != nil {
				return _fccega
			}
			_bbeccf.PreserveFormattingAttr = &_fbbag
			continue
		}
		if _ddgaa.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fadac, _bgafeg := _a.ParseBool(_ddgaa.Value)
			if _bgafeg != nil {
				return _bgafeg
			}
			_bbeccf.ApplyPatternFormatsAttr = &_fadac
			continue
		}
		if _ddgaa.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_bbeccf.GrowShrinkTypeAttr.UnmarshalXMLAttr(_ddgaa)
			continue
		}
		if _ddgaa.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_ceaegc, _ecffg := _a.ParseBool(_ddgaa.Value)
			if _ecffg != nil {
				return _ecffg
			}
			_bbeccf.DisableEditAttr = &_ceaegc
			continue
		}
		if _ddgaa.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_fgbc, _bbdge := _a.ParseBool(_ddgaa.Value)
			if _bbdge != nil {
				return _bbdge
			}
			_bbeccf.HeadersAttr = &_fgbc
			continue
		}
		if _ddgaa.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_ffgff, _ageedg := _a.ParseBool(_ddgaa.Value)
			if _ageedg != nil {
				return _ageedg
			}
			_bbeccf.RemoveDataOnSaveAttr = &_ffgff
			continue
		}
		if _ddgaa.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gefaad, _gddfb := _a.ParseBool(_ddgaa.Value)
			if _gddfb != nil {
				return _gddfb
			}
			_bbeccf.ApplyWidthHeightFormatsAttr = &_gefaad
			continue
		}
	}
_fbfad:
	for {
		_dbgef, _ccddg := d.Token()
		if _ccddg != nil {
			return _ccddg
		}
		switch _dbaee := _dbgef.(type) {
		case _gd.StartElement:
			switch _dbaee.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_bbeccf.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _gacaga := d.DecodeElement(_bbeccf.QueryTableRefresh, &_dbaee); _gacaga != nil {
					return _gacaga
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbeccf.ExtLst = NewCT_ExtensionList()
				if _bacba := d.DecodeElement(_bbeccf.ExtLst, &_dbaee); _bacba != nil {
					return _bacba
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0051\u0075\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _dbaee.Name)
				if _geeefc := d.Skip(); _geeefc != nil {
					return _geeefc
				}
			}
		case _gd.EndElement:
			break _fbfad
		case _gd.CharData:
		}
	}
	return nil
}

func (_gdcgfb ST_SourceType) Validate() error { return _gdcgfb.ValidateWithPath("") }

func NewCT_ReviewedRevisions() *CT_ReviewedRevisions { _eccbe := &CT_ReviewedRevisions{}; return _eccbe }

func (_dagdc *ST_Pane) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_feace, _bccddd := d.Token()
	if _bccddd != nil {
		return _bccddd
	}
	if _bbceaa, _cdccgd := _feace.(_gd.EndElement); _cdccgd && _bbceaa.Name == start.Name {
		*_dagdc = 1
		return nil
	}
	if _dbbbad, _acabaa := _feace.(_gd.CharData); !_acabaa {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feace)
	} else {
		switch string(_dbbbad) {
		case "":
			*_dagdc = 0
		case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_dagdc = 1
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_dagdc = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_dagdc = 3
		case "\u0074o\u0070\u004c\u0065\u0066\u0074":
			*_dagdc = 4
		}
	}
	_feace, _bccddd = d.Token()
	if _bccddd != nil {
		return _bccddd
	}
	if _dfddc, _bcdfa := _feace.(_gd.EndElement); _bcdfa && _dfddc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feace)
}

func NewCT_PivotCache() *CT_PivotCache { _ddggdg := &CT_PivotCache{}; return _ddggdg }

func NewSst() *Sst { _bgfca := &Sst{}; _bgfca.CT_Sst = *NewCT_Sst(); return _bgfca }

type CT_TextField struct {

	// Field Type
	TypeAttr ST_ExternalConnectionType

	// Position
	PositionAttr *uint32
}

// ValidateWithPath validates the CT_RPrElt and its children, prefixing error messages with path
func (_cafdc *CT_RPrElt) ValidateWithPath(path string) error {
	if _cafdc.RFont != nil {
		if _fggecf := _cafdc.RFont.ValidateWithPath(path + "\u002f\u0052\u0046\u006f\u006e\u0074"); _fggecf != nil {
			return _fggecf
		}
	}
	if _cafdc.Charset != nil {
		if _bccbc := _cafdc.Charset.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0073\u0065\u0074"); _bccbc != nil {
			return _bccbc
		}
	}
	if _cafdc.Family != nil {
		if _eaaad := _cafdc.Family.ValidateWithPath(path + "\u002fF\u0061\u006d\u0069\u006c\u0079"); _eaaad != nil {
			return _eaaad
		}
	}
	if _cafdc.B != nil {
		if _ddfege := _cafdc.B.ValidateWithPath(path + "\u002f\u0042"); _ddfege != nil {
			return _ddfege
		}
	}
	if _cafdc.I != nil {
		if _bgecd := _cafdc.I.ValidateWithPath(path + "\u002f\u0049"); _bgecd != nil {
			return _bgecd
		}
	}
	if _cafdc.Strike != nil {
		if _egcdf := _cafdc.Strike.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u006b\u0065"); _egcdf != nil {
			return _egcdf
		}
	}
	if _cafdc.Outline != nil {
		if _dcgeb := _cafdc.Outline.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _dcgeb != nil {
			return _dcgeb
		}
	}
	if _cafdc.Shadow != nil {
		if _fgabd := _cafdc.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _fgabd != nil {
			return _fgabd
		}
	}
	if _cafdc.Condense != nil {
		if _gffdbe := _cafdc.Condense.ValidateWithPath(path + "\u002fC\u006f\u006e\u0064\u0065\u006e\u0073e"); _gffdbe != nil {
			return _gffdbe
		}
	}
	if _cafdc.Extend != nil {
		if _fgaec := _cafdc.Extend.ValidateWithPath(path + "\u002fE\u0078\u0074\u0065\u006e\u0064"); _fgaec != nil {
			return _fgaec
		}
	}
	if _cafdc.Color != nil {
		if _gagfee := _cafdc.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _gagfee != nil {
			return _gagfee
		}
	}
	if _cafdc.Sz != nil {
		if _cbaff := _cafdc.Sz.ValidateWithPath(path + "\u002f\u0053\u007a"); _cbaff != nil {
			return _cbaff
		}
	}
	if _cafdc.U != nil {
		if _cecfb := _cafdc.U.ValidateWithPath(path + "\u002f\u0055"); _cecfb != nil {
			return _cecfb
		}
	}
	if _cafdc.VertAlign != nil {
		if _gdbbb := _cafdc.VertAlign.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"); _gdbbb != nil {
			return _gdbbb
		}
	}
	if _cafdc.Scheme != nil {
		if _abdca := _cafdc.Scheme.ValidateWithPath(path + "\u002fS\u0063\u0068\u0065\u006d\u0065"); _abdca != nil {
			return _abdca
		}
	}
	return nil
}

const (
	ST_DataConsolidateFunctionUnset     ST_DataConsolidateFunction = 0
	ST_DataConsolidateFunctionAverage   ST_DataConsolidateFunction = 1
	ST_DataConsolidateFunctionCount     ST_DataConsolidateFunction = 2
	ST_DataConsolidateFunctionCountNums ST_DataConsolidateFunction = 3
	ST_DataConsolidateFunctionMax       ST_DataConsolidateFunction = 4
	ST_DataConsolidateFunctionMin       ST_DataConsolidateFunction = 5
	ST_DataConsolidateFunctionProduct   ST_DataConsolidateFunction = 6
	ST_DataConsolidateFunctionStdDev    ST_DataConsolidateFunction = 7
	ST_DataConsolidateFunctionStdDevp   ST_DataConsolidateFunction = 8
	ST_DataConsolidateFunctionSum       ST_DataConsolidateFunction = 9
	ST_DataConsolidateFunctionVar       ST_DataConsolidateFunction = 10
	ST_DataConsolidateFunctionVarp      ST_DataConsolidateFunction = 11
)

func (_bbdfe ST_Pane) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bbdfe.String(), start)
}

func (_eaaddg *ST_Orientation) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fcebf, _ebebdc := d.Token()
	if _ebebdc != nil {
		return _ebebdc
	}
	if _bacaef, _ebgbeae := _fcebf.(_gd.EndElement); _ebgbeae && _bacaef.Name == start.Name {
		*_eaaddg = 1
		return nil
	}
	if _fefcc, _gggbg := _fcebf.(_gd.CharData); !_gggbg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcebf)
	} else {
		switch string(_fefcc) {
		case "":
			*_eaaddg = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_eaaddg = 1
		case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
			*_eaaddg = 2
		case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
			*_eaaddg = 3
		}
	}
	_fcebf, _ebebdc = d.Token()
	if _ebebdc != nil {
		return _ebebdc
	}
	if _bcbcg, _gdbca := _fcebf.(_gd.EndElement); _gdbca && _bcbcg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcebf)
}

type CT_MemberProperty struct {

	// OLAP Member Property Unique Name
	NameAttr *string

	// Show Cell
	ShowCellAttr *bool

	// Show Tooltip
	ShowTipAttr *bool

	// Show As Caption
	ShowAsCaptionAttr *bool

	// Name Length
	NameLenAttr *uint32

	// Property Name Character Index
	PPosAttr *uint32

	// Property Name Length
	PLenAttr *uint32

	// Level Index
	LevelAttr *uint32

	// Field Index
	FieldAttr uint32
}

// Validate validates the CT_TextField and its children
func (_daeeea *CT_TextField) Validate() error {
	return _daeeea.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}

func NewCT_Member() *CT_Member { _cgcec := &CT_Member{}; return _cgcec }

// ValidateWithPath validates the CT_TableMissing and its children, prefixing error messages with path
func (_edcbf *CT_TableMissing) ValidateWithPath(path string) error { return nil }

func NewCT_PCDKPIs() *CT_PCDKPIs { _gdbb := &CT_PCDKPIs{}; return _gdbb }

func (_bgdac ST_DateTimeGrouping) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bgdac.String(), start)
}

func NewHeaders() *Headers {
	_fdeeca := &Headers{}
	_fdeeca.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	return _fdeeca
}

type CT_RgbColor struct {

	// Alpha Red Green Blue
	RgbAttr *string
}

func (_gcfgf *CT_VerticalAlignFontProperty) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gcfgf.ValAttr = _af.ST_VerticalAlignRun(1)
	for _, _bacefaf := range start.Attr {
		if _bacefaf.Name.Local == "\u0076\u0061\u006c" {
			_gcfgf.ValAttr.UnmarshalXMLAttr(_bacefaf)
			continue
		}
	}
	for {
		_cacag, _caedg := d.Token()
		if _caedg != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006cA\u006c\u0069\u0067\u006e\u0046\u006f\u006e\u0074\u0050\u0072op\u0065\u0072\u0074y\u003a \u0025\u0073", _caedg)
		}
		if _acffed, _agbfa := _cacag.(_gd.EndElement); _agbfa && _acffed.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_BookViews() *CT_BookViews { _bged := &CT_BookViews{}; return _bged }

func (_bcbgc *CT_VolTopic) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fbbed := range start.Attr {
		if _fbbed.Name.Local == "\u0074" {
			_bcbgc.TAttr.UnmarshalXMLAttr(_fbbed)
			continue
		}
	}
_abfcfc:
	for {
		_effddf, _edggbg := d.Token()
		if _edggbg != nil {
			return _edggbg
		}
		switch _degedg := _effddf.(type) {
		case _gd.StartElement:
			switch _degedg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				if _ebfgd := d.DecodeElement(&_bcbgc.V, &_degedg); _ebfgd != nil {
					return _ebfgd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}:
				var _edegc string
				if _gagge := d.DecodeElement(&_edegc, &_degedg); _gagge != nil {
					return _gagge
				}
				_bcbgc.Stp = append(_bcbgc.Stp, _edegc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_daedbg := NewCT_VolTopicRef()
				if _dgffe := d.DecodeElement(_daedbg, &_degedg); _dgffe != nil {
					return _dgffe
				}
				_bcbgc.Tr = append(_bcbgc.Tr, _daedbg)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0020\u0025\u0076", _degedg.Name)
				if _ddbce := d.Skip(); _ddbce != nil {
					return _ddbce
				}
			}
		case _gd.EndElement:
			break _abfcfc
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ChartFormats and its children
func (_bgd *CT_ChartFormats) Validate() error {
	return _bgd.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

func (_dgecd ST_TextVAlign) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dgecd.String(), start)
}

type CT_PCDSDTCEntries struct {

	// Tuple Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String
}

func NewCT_CustomSheetView() *CT_CustomSheetView {
	_abea := &CT_CustomSheetView{}
	_abea.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _abea
}

// ValidateWithPath validates the CT_SheetFormatPr and its children, prefixing error messages with path
func (_bbcdag *CT_SheetFormatPr) ValidateWithPath(path string) error { return nil }

func (_cgbaf *CT_TableStyle) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _eagdfe := range start.Attr {
		if _eagdfe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_begca, _abadb := _eagdfe.Value, error(nil)
			if _abadb != nil {
				return _abadb
			}
			_cgbaf.NameAttr = _begca
			continue
		}
		if _eagdfe.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_beadgd, _adggd := _a.ParseBool(_eagdfe.Value)
			if _adggd != nil {
				return _adggd
			}
			_cgbaf.PivotAttr = &_beadgd
			continue
		}
		if _eagdfe.Name.Local == "\u0074\u0061\u0062l\u0065" {
			_agaaf, _ccced := _a.ParseBool(_eagdfe.Value)
			if _ccced != nil {
				return _ccced
			}
			_cgbaf.TableAttr = &_agaaf
			continue
		}
		if _eagdfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggcda, _fcfgd := _a.ParseUint(_eagdfe.Value, 10, 32)
			if _fcfgd != nil {
				return _fcfgd
			}
			_beefa := uint32(_ggcda)
			_cgbaf.CountAttr = &_beefa
			continue
		}
	}
_gdgda:
	for {
		_bgdfcf, _fbaga := d.Token()
		if _fbaga != nil {
			return _fbaga
		}
		switch _fegfef := _bgdfcf.(type) {
		case _gd.StartElement:
			switch _fegfef.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}:
				_ecccb := NewCT_TableStyleElement()
				if _fgbeadb := d.DecodeElement(_ecccb, &_fegfef); _fgbeadb != nil {
					return _fgbeadb
				}
				_cgbaf.TableStyleElement = append(_cgbaf.TableStyleElement, _ecccb)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _fegfef.Name)
				if _cacce := d.Skip(); _cacce != nil {
					return _cacce
				}
			}
		case _gd.EndElement:
			break _gdgda
		case _gd.CharData:
		}
	}
	return nil
}

func (_gfegff ST_DataValidationErrorStyle) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_aeaafd := _gd.Attr{}
	_aeaafd.Name = name
	switch _gfegff {
	case ST_DataValidationErrorStyleUnset:
		_aeaafd.Value = ""
	case ST_DataValidationErrorStyleStop:
		_aeaafd.Value = "\u0073\u0074\u006f\u0070"
	case ST_DataValidationErrorStyleWarning:
		_aeaafd.Value = "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case ST_DataValidationErrorStyleInformation:
		_aeaafd.Value = "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return _aeaafd, nil
}

// Validate validates the CT_MetadataTypes and its children
func (_eeceebg *CT_MetadataTypes) Validate() error {
	return _eeceebg.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073")
}

func (_bcbab ST_GradientType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_fdfggd := _gd.Attr{}
	_fdfggd.Name = name
	switch _bcbab {
	case ST_GradientTypeUnset:
		_fdfggd.Value = ""
	case ST_GradientTypeLinear:
		_fdfggd.Value = "\u006c\u0069\u006e\u0065\u0061\u0072"
	case ST_GradientTypePath:
		_fdfggd.Value = "\u0070\u0061\u0074\u0068"
	}
	return _fdfggd, nil
}

// ValidateWithPath validates the CT_SheetViews and its children, prefixing error messages with path
func (_fcbga *CT_SheetViews) ValidateWithPath(path string) error {
	for _fcadd, _abffda := range _fcbga.SheetView {
		if _ccbcdg := _abffda.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _fcadd)); _ccbcdg != nil {
			return _ccbcdg
		}
	}
	if _fcbga.ExtLst != nil {
		if _gggec := _fcbga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gggec != nil {
			return _gggec
		}
	}
	return nil
}

// Validate validates the CT_rowItems and its children
func (_dcdga *CT_rowItems) Validate() error {
	return _dcdga.ValidateWithPath("C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073")
}

func (_cgcca *CT_Dxf) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_edgf:
	for {
		_bbeca, _faeab := d.Token()
		if _faeab != nil {
			return _faeab
		}
		switch _fceg := _bbeca.(type) {
		case _gd.StartElement:
			switch _fceg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_cgcca.Font = NewCT_Font()
				if _bbad := d.DecodeElement(_cgcca.Font, &_fceg); _bbad != nil {
					return _bbad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_cgcca.NumFmt = NewCT_NumFmt()
				if _gefg := d.DecodeElement(_cgcca.NumFmt, &_fceg); _gefg != nil {
					return _gefg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_cgcca.Fill = NewCT_Fill()
				if _cecgdc := d.DecodeElement(_cgcca.Fill, &_fceg); _cecgdc != nil {
					return _cecgdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_cgcca.Alignment = NewCT_CellAlignment()
				if _cgcac := d.DecodeElement(_cgcca.Alignment, &_fceg); _cgcac != nil {
					return _cgcac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_cgcca.Border = NewCT_Border()
				if _eagbe := d.DecodeElement(_cgcca.Border, &_fceg); _eagbe != nil {
					return _eagbe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cgcca.Protection = NewCT_CellProtection()
				if _bgdg := d.DecodeElement(_cgcca.Protection, &_fceg); _bgdg != nil {
					return _bgdg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgcca.ExtLst = NewCT_ExtensionList()
				if _fadf := d.DecodeElement(_cgcca.ExtLst, &_fceg); _fadf != nil {
					return _fadf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0078\u0066\u0020\u0025\u0076", _fceg.Name)
				if _agdg := d.Skip(); _agdg != nil {
					return _agdg
				}
			}
		case _gd.EndElement:
			break _edgf
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_CellStyleXfs() *CT_CellStyleXfs { _cfab := &CT_CellStyleXfs{}; return _cfab }

func (_facecd *MapInfo) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_facecd.CT_MapInfo = *NewCT_MapInfo()
	for _, _fdceg := range start.Attr {
		if _fdceg.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_bagdaf, _fgagb := _fdceg.Value, error(nil)
			if _fgagb != nil {
				return _fgagb
			}
			_facecd.SelectionNamespacesAttr = _bagdaf
			continue
		}
	}
_agdeac:
	for {
		_aadegc, _eabac := d.Token()
		if _eabac != nil {
			return _eabac
		}
		switch _eagbgf := _aadegc.(type) {
		case _gd.StartElement:
			switch _eagbgf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_gcccd := NewCT_Schema()
				if _eggdac := d.DecodeElement(_gcccd, &_eagbgf); _eggdac != nil {
					return _eggdac
				}
				_facecd.Schema = append(_facecd.Schema, _gcccd)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_gfgaf := NewCT_Map()
				if _eegbd := d.DecodeElement(_gfgaf, &_eagbgf); _eegbd != nil {
					return _eegbd
				}
				_facecd.Map = append(_facecd.Map, _gfgaf)
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004da\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _eagbgf.Name)
				if _cfgad := d.Skip(); _cfgad != nil {
					return _cfgad
				}
			}
		case _gd.EndElement:
			break _agdeac
		case _gd.CharData:
		}
	}
	return nil
}

func (_gacag *CT_Format) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gacag.ActionAttr != ST_FormatActionUnset {
		_bgeb, _aeaca := _gacag.ActionAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _aeaca != nil {
			return _aeaca
		}
		start.Attr = append(start.Attr, _bgeb)
	}
	if _gacag.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gacag.DxfIdAttr)})
	}
	e.EncodeToken(start)
	_edeab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_gacag.PivotArea, _edeab)
	if _gacag.ExtLst != nil {
		_ccac := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gacag.ExtLst, _ccac)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_CommentList() *CT_CommentList { _fafa := &CT_CommentList{}; return _fafa }

func (_bfafc *CT_Users) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cbgdea := range start.Attr {
		if _cbgdea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgaffb, _bcegca := _a.ParseUint(_cbgdea.Value, 10, 32)
			if _bcegca != nil {
				return _bcegca
			}
			_ebdgdg := uint32(_bgaffb)
			_bfafc.CountAttr = &_ebdgdg
			continue
		}
	}
_ccdbg:
	for {
		_fggead, _dffgg := d.Token()
		if _dffgg != nil {
			return _dffgg
		}
		switch _dgeed := _fggead.(type) {
		case _gd.StartElement:
			switch _dgeed.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_ebgde := NewCT_SharedUser()
				if _gaegea := d.DecodeElement(_ebgde, &_dgeed); _gaegea != nil {
					return _gaegea
				}
				_bfafc.UserInfo = append(_bfafc.UserInfo, _ebgde)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073\u0020\u0025\u0076", _dgeed.Name)
				if _ccafea := d.Skip(); _ccafea != nil {
					return _ccafea
				}
			}
		case _gd.EndElement:
			break _ccdbg
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the Table and its children
func (_ggffe *Table) Validate() error { return _ggffe.ValidateWithPath("\u0054\u0061\u0062l\u0065") }

func (_bcf *CT_Boolean) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(_bcf.VAttr))})
	if _bcf.UAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bcf.UAttr))})
	}
	if _bcf.FAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bcf.FAttr))})
	}
	if _bcf.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_bcf.CAttr)})
	}
	if _bcf.CpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_bcf.CpAttr)})
	}
	e.EncodeToken(start)
	if _bcf.X != nil {
		_gefa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _egec := range _bcf.X {
			e.EncodeElement(_egec, _gefa)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Members and its children
func (_ceac *CT_Members) Validate() error {
	return _ceac.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

func (_cababc *CT_SingleXmlCells) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cfbdge:
	for {
		_facec, _cacfcd := d.Token()
		if _cacfcd != nil {
			return _cacfcd
		}
		switch _afdge := _facec.(type) {
		case _gd.StartElement:
			switch _afdge.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_dfcff := NewCT_SingleXmlCell()
				if _ededfd := d.DecodeElement(_dfcff, &_afdge); _ededfd != nil {
					return _ededfd
				}
				_cababc.SingleXmlCell = append(_cababc.SingleXmlCell, _dfcff)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0073\u0020\u0025\u0076", _afdge.Name)
				if _cggae := d.Skip(); _cggae != nil {
					return _cggae
				}
			}
		case _gd.EndElement:
			break _cfbdge
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Tuple struct {

	// Field Index
	FldAttr *uint32

	// Hierarchy Index
	HierAttr *uint32

	// Item Index
	ItemAttr uint32
}

// Validate validates the CT_ExternalSheetName and its children
func (_efef *CT_ExternalSheetName) Validate() error {
	return _efef.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065")
}

func (_aabgg *CT_PivotCacheDefinition) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aabgg.CacheSource = NewCT_CacheSource()
	_aabgg.CacheFields = NewCT_CacheFields()
	for _, _ggadc := range start.Attr {
		if _ggadc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggadc.Name.Local == "\u0069\u0064" || _ggadc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ggadc.Name.Local == "\u0069\u0064" {
			_eddca, _bfdfe := _ggadc.Value, error(nil)
			if _bfdfe != nil {
				return _bfdfe
			}
			_aabgg.IdAttr = &_eddca
			continue
		}
		if _ggadc.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_aafgc, _ebffag := _a.ParseBool(_ggadc.Value)
			if _ebffag != nil {
				return _ebffag
			}
			_aabgg.UpgradeOnRefreshAttr = &_aafgc
			continue
		}
		if _ggadc.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_fgfcff, _beeae := _a.ParseBool(_ggadc.Value)
			if _beeae != nil {
				return _beeae
			}
			_aabgg.TupleCacheAttr = &_fgfcff
			continue
		}
		if _ggadc.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_geag, _edbgc := _a.ParseBool(_ggadc.Value)
			if _edbgc != nil {
				return _edbgc
			}
			_aabgg.SaveDataAttr = &_geag
			continue
		}
		if _ggadc.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_cfbfc, _eefbc := _a.ParseBool(_ggadc.Value)
			if _eefbc != nil {
				return _eefbc
			}
			_aabgg.SupportSubqueryAttr = &_cfbfc
			continue
		}
		if _ggadc.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_bbbggd, _cffead := _a.ParseBool(_ggadc.Value)
			if _cffead != nil {
				return _cffead
			}
			_aabgg.OptimizeMemoryAttr = &_bbbggd
			continue
		}
		if _ggadc.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_fadgf, _acadcd := _a.ParseBool(_ggadc.Value)
			if _acadcd != nil {
				return _acadcd
			}
			_aabgg.SupportAdvancedDrillAttr = &_fadgf
			continue
		}
		if _ggadc.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_ebddc, _cffaeg := _ggadc.Value, error(nil)
			if _cffaeg != nil {
				return _cffaeg
			}
			_aabgg.RefreshedByAttr = &_ebddc
			continue
		}
		if _ggadc.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_acfaf, _cceafd := ParseStdlibTime(_ggadc.Value)
			if _cceafd != nil {
				return _cceafd
			}
			_aabgg.RefreshedDateIsoAttr = &_acfaf
			continue
		}
		if _ggadc.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_aafbgf, _bdbdfg := _a.ParseBool(_ggadc.Value)
			if _bdbdfg != nil {
				return _bdbdfg
			}
			_aabgg.InvalidAttr = &_aafbgf
			continue
		}
		if _ggadc.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_fbbgeb, _afcegg := _a.ParseBool(_ggadc.Value)
			if _afcegg != nil {
				return _afcegg
			}
			_aabgg.BackgroundQueryAttr = &_fbbgeb
			continue
		}
		if _ggadc.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_cfabeb, _ceabga := _a.ParseUint(_ggadc.Value, 10, 32)
			if _ceabga != nil {
				return _ceabga
			}
			_dagefe := uint32(_cfabeb)
			_aabgg.MissingItemsLimitAttr = &_dagefe
			continue
		}
		if _ggadc.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_dfgdc, _bbcceb := _a.ParseUint(_ggadc.Value, 10, 8)
			if _bbcceb != nil {
				return _bbcceb
			}
			_gbebf := uint8(_dfgdc)
			_aabgg.RefreshedVersionAttr = &_gbebf
			continue
		}
		if _ggadc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_edbbe, _eecfa := _a.ParseBool(_ggadc.Value)
			if _eecfa != nil {
				return _eecfa
			}
			_aabgg.RefreshOnLoadAttr = &_edbbe
			continue
		}
		if _ggadc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_egegf, _bccag := _a.ParseFloat(_ggadc.Value, 64)
			if _bccag != nil {
				return _bccag
			}
			_aabgg.RefreshedDateAttr = &_egegf
			continue
		}
		if _ggadc.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_bbgdc, _cgcgb := _a.ParseUint(_ggadc.Value, 10, 32)
			if _cgcgb != nil {
				return _cgcgb
			}
			_dddce := uint32(_bbgdc)
			_aabgg.RecordCountAttr = &_dddce
			continue
		}
		if _ggadc.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_ecba, _gfac := _a.ParseUint(_ggadc.Value, 10, 8)
			if _gfac != nil {
				return _gfac
			}
			_gecgcf := uint8(_ecba)
			_aabgg.CreatedVersionAttr = &_gecgcf
			continue
		}
		if _ggadc.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_affaf, _befcfd := _a.ParseUint(_ggadc.Value, 10, 8)
			if _befcfd != nil {
				return _befcfd
			}
			_cacdf := uint8(_affaf)
			_aabgg.MinRefreshableVersionAttr = &_cacdf
			continue
		}
		if _ggadc.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_afafa, _cgafcf := _a.ParseBool(_ggadc.Value)
			if _cgafcf != nil {
				return _cgafcf
			}
			_aabgg.EnableRefreshAttr = &_afafa
			continue
		}
	}
_cced:
	for {
		_bdagf, _bbgcd := d.Token()
		if _bbgcd != nil {
			return _bbgcd
		}
		switch _dddcf := _bdagf.(type) {
		case _gd.StartElement:
			switch _dddcf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _dfbeg := d.DecodeElement(_aabgg.CacheSource, &_dddcf); _dfbeg != nil {
					return _dfbeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _befebd := d.DecodeElement(_aabgg.CacheFields, &_dddcf); _befebd != nil {
					return _befebd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_aabgg.CacheHierarchies = NewCT_CacheHierarchies()
				if _afbeacf := d.DecodeElement(_aabgg.CacheHierarchies, &_dddcf); _afbeacf != nil {
					return _afbeacf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_aabgg.Kpis = NewCT_PCDKPIs()
				if _cdebe := d.DecodeElement(_aabgg.Kpis, &_dddcf); _cdebe != nil {
					return _cdebe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_aabgg.TupleCache = NewCT_TupleCache()
				if _fcfbb := d.DecodeElement(_aabgg.TupleCache, &_dddcf); _fcfbb != nil {
					return _fcfbb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_aabgg.CalculatedItems = NewCT_CalculatedItems()
				if _fcdgd := d.DecodeElement(_aabgg.CalculatedItems, &_dddcf); _fcdgd != nil {
					return _fcdgd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_aabgg.CalculatedMembers = NewCT_CalculatedMembers()
				if _gfgbf := d.DecodeElement(_aabgg.CalculatedMembers, &_dddcf); _gfgbf != nil {
					return _gfgbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_aabgg.Dimensions = NewCT_Dimensions()
				if _dcabcb := d.DecodeElement(_aabgg.Dimensions, &_dddcf); _dcabcb != nil {
					return _dcabcb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_aabgg.MeasureGroups = NewCT_MeasureGroups()
				if _gdgecg := d.DecodeElement(_aabgg.MeasureGroups, &_dddcf); _gdgecg != nil {
					return _gdgecg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_aabgg.Maps = NewCT_MeasureDimensionMaps()
				if _ecfdbe := d.DecodeElement(_aabgg.Maps, &_dddcf); _ecfdbe != nil {
					return _ecfdbe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aabgg.ExtLst = NewCT_ExtensionList()
				if _daec := d.DecodeElement(_aabgg.ExtLst, &_dddcf); _daec != nil {
					return _daec
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _dddcf.Name)
				if _geeaf := d.Skip(); _geeaf != nil {
					return _geeaf
				}
			}
		case _gd.EndElement:
			break _cced
		case _gd.CharData:
		}
	}
	return nil
}

type CT_CustomChartsheetViews struct {

	// Custom Chart Sheet View
	CustomSheetView []*CT_CustomChartsheetView
}

func (_fcagfa ST_CfType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_fcagfa.String(), start)
}

const (
	ST_CommentsUnset             ST_Comments = 0
	ST_CommentsCommNone          ST_Comments = 1
	ST_CommentsCommIndicator     ST_Comments = 2
	ST_CommentsCommIndAndComment ST_Comments = 3
)

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_dbebe *CT_String) ValidateWithPath(path string) error {
	for _dbfac, _bbdef := range _dbebe.Tpls {
		if _fcdda := _bbdef.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _dbfac)); _fcdda != nil {
			return _fcdda
		}
	}
	for _feebc, _deaac := range _dbebe.X {
		if _dbfeg := _deaac.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _feebc)); _dbfeg != nil {
			return _dbfeg
		}
	}
	return nil
}

func (_ccggdd *Headers) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ccggdd.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	for _, _cbgcc := range start.Attr {
		if _cbgcc.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_cbgfg, _gcdddg := _a.ParseBool(_cbgcc.Value)
			if _gcdddg != nil {
				return _gcdddg
			}
			_ccggdd.ExclusiveAttr = &_cbgfg
			continue
		}
		if _cbgcc.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_bbffgd, _efgca := _cbgcc.Value, error(nil)
			if _efgca != nil {
				return _efgca
			}
			_ccggdd.LastGuidAttr = &_bbffgd
			continue
		}
		if _cbgcc.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_aacba, _efcbf := _a.ParseBool(_cbgcc.Value)
			if _efcbf != nil {
				return _efcbf
			}
			_ccggdd.SharedAttr = &_aacba
			continue
		}
		if _cbgcc.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_ccgcdg, _beaec := _a.ParseBool(_cbgcc.Value)
			if _beaec != nil {
				return _beaec
			}
			_ccggdd.DiskRevisionsAttr = &_ccgcdg
			continue
		}
		if _cbgcc.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_bgaad, _gegbg := _a.ParseBool(_cbgcc.Value)
			if _gegbg != nil {
				return _gegbg
			}
			_ccggdd.HistoryAttr = &_bgaad
			continue
		}
		if _cbgcc.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_fdceb, _gfcag := _a.ParseBool(_cbgcc.Value)
			if _gfcag != nil {
				return _gfcag
			}
			_ccggdd.TrackRevisionsAttr = &_fdceb
			continue
		}
		if _cbgcc.Name.Local == "\u0067\u0075\u0069\u0064" {
			_acgdcb, _gbcgbg := _cbgcc.Value, error(nil)
			if _gbcgbg != nil {
				return _gbcgbg
			}
			_ccggdd.GuidAttr = _acgdcb
			continue
		}
		if _cbgcc.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_agaba, _agbgb := _a.ParseUint(_cbgcc.Value, 10, 32)
			if _agbgb != nil {
				return _agbgb
			}
			_gbffg := uint32(_agaba)
			_ccggdd.RevisionIdAttr = &_gbffg
			continue
		}
		if _cbgcc.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_efegb, _cedfb := _a.ParseInt(_cbgcc.Value, 10, 32)
			if _cedfb != nil {
				return _cedfb
			}
			_ffebdf := int32(_efegb)
			_ccggdd.VersionAttr = &_ffebdf
			continue
		}
		if _cbgcc.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_cbdef, _cadag := _a.ParseBool(_cbgcc.Value)
			if _cadag != nil {
				return _cadag
			}
			_ccggdd.KeepChangeHistoryAttr = &_cbdef
			continue
		}
		if _cbgcc.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_dafbc, _ffecdfb := _a.ParseBool(_cbgcc.Value)
			if _ffecdfb != nil {
				return _ffecdfb
			}
			_ccggdd.ProtectedAttr = &_dafbc
			continue
		}
		if _cbgcc.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_agfbcc, _cfgaa := _a.ParseUint(_cbgcc.Value, 10, 32)
			if _cfgaa != nil {
				return _cfgaa
			}
			_beagf := uint32(_agfbcc)
			_ccggdd.PreserveHistoryAttr = &_beagf
			continue
		}
	}
_afege:
	for {
		_geeef, _fabcg := d.Token()
		if _fabcg != nil {
			return _fabcg
		}
		switch _aaeaad := _geeef.(type) {
		case _gd.StartElement:
			switch _aaeaad.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_fcdecb := NewCT_RevisionHeader()
				if _caagc := d.DecodeElement(_fcdecb, &_aaeaad); _caagc != nil {
					return _caagc
				}
				_ccggdd.Header = append(_ccggdd.Header, _fcdecb)
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048e\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _aaeaad.Name)
				if _eaged := d.Skip(); _eaged != nil {
					return _eaged
				}
			}
		case _gd.EndElement:
			break _afege
		case _gd.CharData:
		}
	}
	return nil
}

func (_gfdcf *ST_HorizontalAlignment) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_agdadf, _feggad := d.Token()
	if _feggad != nil {
		return _feggad
	}
	if _accebd, _eabegg := _agdadf.(_gd.EndElement); _eabegg && _accebd.Name == start.Name {
		*_gfdcf = 1
		return nil
	}
	if _eddedf, _bacagd := _agdadf.(_gd.CharData); !_bacagd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agdadf)
	} else {
		switch string(_eddedf) {
		case "":
			*_gfdcf = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_gfdcf = 1
		case "\u006c\u0065\u0066\u0074":
			*_gfdcf = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_gfdcf = 3
		case "\u0072\u0069\u0067h\u0074":
			*_gfdcf = 4
		case "\u0066\u0069\u006c\u006c":
			*_gfdcf = 5
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_gfdcf = 6
		case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
			*_gfdcf = 7
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_gfdcf = 8
		}
	}
	_agdadf, _feggad = d.Token()
	if _feggad != nil {
		return _feggad
	}
	if _feecdc, _cdeace := _agdadf.(_gd.EndElement); _cdeace && _feecdc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agdadf)
}

func NewCT_CellSmartTagPr() *CT_CellSmartTagPr { _eccgd := &CT_CellSmartTagPr{}; return _eccgd }

type CT_RevisionComment struct {

	// Sheet Id
	SheetIdAttr uint32

	// Cell
	CellAttr string

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction

	// Always Show Comment
	AlwaysShowAttr *bool

	// Old Comment
	OldAttr *bool

	// Comment In Hidden Row
	HiddenRowAttr *bool

	// Hidden Column
	HiddenColumnAttr *bool

	// Author
	AuthorAttr string

	// Original Comment Length
	OldLengthAttr *uint32

	// New Comment Length
	NewLengthAttr *uint32
}

type CT_TupleCache struct {

	// Entries
	Entries *CT_PCDSDTCEntries

	// Sets
	Sets *CT_Sets

	// OLAP Query Cache
	QueryCache *CT_QueryCache

	// Server Formats
	ServerFormats *CT_ServerFormats

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type Connections struct{ CT_Connections }

func (_geagf ST_SortBy) Validate() error { return _geagf.ValidateWithPath("") }

func (_bgfccee ST_HorizontalAlignment) Validate() error { return _bgfccee.ValidateWithPath("") }

func (_ffdde ST_FontScheme) String() string {
	switch _ffdde {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006d\u0061\u006ao\u0072"
	case 3:
		return "\u006d\u0069\u006eo\u0072"
	}
	return ""
}

func (_edeffe ST_Qualifier) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_edeffe.String(), start)
}

type CT_FileRecoveryPr struct {

	// Auto Recover
	AutoRecoverAttr *bool

	// Crash Save
	CrashSaveAttr *bool

	// Data Extract Load
	DataExtractLoadAttr *bool

	// Repair Load
	RepairLoadAttr *bool
}

// Validate validates the CT_RevisionMove and its children
func (_dbbbde *CT_RevisionMove) Validate() error {
	return _dbbbde.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065")
}

func (_bcbgg *CT_ExternalSheetDataSet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_ccgef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	for _, _ebebb := range _bcbgg.SheetData {
		e.EncodeElement(_ebebb, _ccgef)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fgdgga ST_TextHAlign) Validate() error { return _fgdgga.ValidateWithPath("") }

func NewCT_BooleanProperty() *CT_BooleanProperty { _edd := &CT_BooleanProperty{}; return _edd }

// ValidateWithPath validates the CT_SheetIdMap and its children, prefixing error messages with path
func (_afeaa *CT_SheetIdMap) ValidateWithPath(path string) error {
	for _eadfe, _ffeba := range _afeaa.SheetId {
		if _efedcf := _ffeba.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0065\u0065\u0074\u0049d\u005b\u0025\u0064\u005d", path, _eadfe)); _efedcf != nil {
			return _efedcf
		}
	}
	return nil
}

const (
	ST_UnderlineValuesUnset            ST_UnderlineValues = 0
	ST_UnderlineValuesSingle           ST_UnderlineValues = 1
	ST_UnderlineValuesDouble           ST_UnderlineValues = 2
	ST_UnderlineValuesSingleAccounting ST_UnderlineValues = 3
	ST_UnderlineValuesDoubleAccounting ST_UnderlineValues = 4
	ST_UnderlineValuesNone             ST_UnderlineValues = 5
)

// Validate validates the CT_FutureMetadataBlock and its children
func (_ceage *CT_FutureMetadataBlock) Validate() error {
	return _ceage.ValidateWithPath("\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b")
}

// Validate validates the CT_PivotSelection and its children
func (_ebecda *CT_PivotSelection) Validate() error {
	return _ebecda.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e")
}

func (_dfcab *CT_MetadataStrings) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dfcab.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dfcab.CountAttr)})
	}
	e.EncodeToken(start)
	_dacg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073"}}
	for _, _deged := range _dfcab.S {
		e.EncodeElement(_deged, _dacg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PhoneticRun and its children
func (_cdfdc *CT_PhoneticRun) Validate() error {
	return _cdfdc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e")
}

// Validate validates the CT_ConditionalFormat and its children
func (_ffdfga *CT_ConditionalFormat) Validate() error {
	return _ffdfga.ValidateWithPath("C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074")
}

type ST_VerticalAlignment byte

func (_bdgc *CT_PivotFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bdgc.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bdgc.CountAttr)})
	}
	e.EncodeToken(start)
	_aebegb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _gbfga := range _bdgc.PivotField {
		e.EncodeElement(_gbfga, _aebegb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_RevisionConflict struct {

	// Sheet Id
	SheetIdAttr *uint32
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

type CT_Dxf struct {

	// Font Properties
	Font *CT_Font

	// Number Format
	NumFmt *CT_NumFmt

	// Fill
	Fill *CT_Fill

	// Alignment
	Alignment *CT_CellAlignment

	// Border Properties
	Border *CT_Border

	// Protection Properties
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Query and its children, prefixing error messages with path
func (_cfbee *CT_Query) ValidateWithPath(path string) error {
	if _cfbee.Tpls != nil {
		if _abccf := _cfbee.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _abccf != nil {
			return _abccf
		}
	}
	return nil
}

func NewPivotCacheDefinition() *PivotCacheDefinition {
	_cdebd := &PivotCacheDefinition{}
	_cdebd.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	return _cdebd
}

func (_aacaf ST_FilterOperator) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_aacaf.String(), start)
}

// ValidateWithPath validates the CT_AutoSortScope and its children, prefixing error messages with path
func (_agb *CT_AutoSortScope) ValidateWithPath(path string) error {
	if _ecf := _agb.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _ecf != nil {
		return _ecf
	}
	return nil
}

func NewCT_ObjectAnchor() *CT_ObjectAnchor {
	_ccdcf := &CT_ObjectAnchor{}
	_ccdcf.From = _c.NewFrom()
	_ccdcf.To = _c.NewTo()
	return _ccdcf
}

// ValidateWithPath validates the CT_DateTime and its children, prefixing error messages with path
func (_afcef *CT_DateTime) ValidateWithPath(path string) error {
	for _eadcea, _fdebg := range _afcef.X {
		if _fgage := _fdebg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _eadcea)); _fgage != nil {
			return _fgage
		}
	}
	return nil
}

// ValidateWithPath validates the CalcChain and its children, prefixing error messages with path
func (_facafb *CalcChain) ValidateWithPath(path string) error {
	if _gebbb := _facafb.CT_CalcChain.ValidateWithPath(path); _gebbb != nil {
		return _gebbb
	}
	return nil
}

// ValidateWithPath validates the CT_FieldGroup and its children, prefixing error messages with path
func (_ccfc *CT_FieldGroup) ValidateWithPath(path string) error {
	if _ccfc.RangePr != nil {
		if _cgcge := _ccfc.RangePr.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0050\u0072"); _cgcge != nil {
			return _cgcge
		}
	}
	if _ccfc.DiscretePr != nil {
		if _ababbf := _ccfc.DiscretePr.ValidateWithPath(path + "/\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"); _ababbf != nil {
			return _ababbf
		}
	}
	if _ccfc.GroupItems != nil {
		if _fecff := _ccfc.GroupItems.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"); _fecff != nil {
			return _fecff
		}
	}
	return nil
}

// Validate validates the CT_pivotTableDefinition and its children
func (_adeae *CT_pivotTableDefinition) Validate() error {
	return _adeae.ValidateWithPath("\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}

func (_ddgfd *CT_MetadataBlocks) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ddgfd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ddgfd.CountAttr)})
	}
	e.EncodeToken(start)
	_fggee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ab\u006b"}}
	for _, _fdgef := range _ddgfd.Bk {
		e.EncodeElement(_fdgef, _fggee)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cbead ST_Orientation) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_cbead.String(), start)
}

// Validate validates the CT_WorksheetSource and its children
func (_gegge *CT_WorksheetSource) Validate() error {
	return _gegge.ValidateWithPath("\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065")
}

func (_decad *CT_DataField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _decad.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_decad.NameAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0076", _decad.FldAttr)})
	if _decad.SubtotalAttr != ST_DataConsolidateFunctionUnset {
		_febef, _fbaf := _decad.SubtotalAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c"})
		if _fbaf != nil {
			return _fbaf
		}
		start.Attr = append(start.Attr, _febef)
	}
	if _decad.ShowDataAsAttr != ST_ShowDataAsUnset {
		_bbdg, _caga := _decad.ShowDataAsAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073"})
		if _caga != nil {
			return _caga
		}
		start.Attr = append(start.Attr, _bbdg)
	}
	if _decad.BaseFieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd"}, Value: _b.Sprintf("\u0025\u0076", *_decad.BaseFieldAttr)})
	}
	if _decad.BaseItemAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_decad.BaseItemAttr)})
	}
	if _decad.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_decad.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	if _decad.ExtLst != nil {
		_acge := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_decad.ExtLst, _acge)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MergeCells and its children, prefixing error messages with path
func (_ecdfg *CT_MergeCells) ValidateWithPath(path string) error {
	for _ggcg, _ccae := range _ecdfg.MergeCell {
		if _gegfg := _ccae.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u004d\u0065\u0072g\u0065\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _ggcg)); _gegfg != nil {
			return _gegfg
		}
	}
	return nil
}

// Validate validates the CT_Formats and its children
func (_gdcca *CT_Formats) Validate() error {
	return _gdcca.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

func NewCT_SheetId() *CT_SheetId { _dddbg := &CT_SheetId{}; return _dddbg }

func (_fefaa ST_MdxSetOrder) Validate() error { return _fefaa.ValidateWithPath("") }

func NewCT_Boolean() *CT_Boolean { _da := &CT_Boolean{}; return _da }

func NewCT_Connections() *CT_Connections { _gggf := &CT_Connections{}; return _gggf }

// Validate validates the CT_PrintOptions and its children
func (_dbdff *CT_PrintOptions) Validate() error {
	return _dbdff.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073")
}

func NewCT_CellProtection() *CT_CellProtection { _dafa := &CT_CellProtection{}; return _dafa }

func (_aebg *CT_Break) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cad := range start.Attr {
		if _cad.Name.Local == "\u0069\u0064" {
			_bcag, _eddd := _a.ParseUint(_cad.Value, 10, 32)
			if _eddd != nil {
				return _eddd
			}
			_ggea := uint32(_bcag)
			_aebg.IdAttr = &_ggea
			continue
		}
		if _cad.Name.Local == "\u006d\u0069\u006e" {
			_dde, _gad := _a.ParseUint(_cad.Value, 10, 32)
			if _gad != nil {
				return _gad
			}
			_fae := uint32(_dde)
			_aebg.MinAttr = &_fae
			continue
		}
		if _cad.Name.Local == "\u006d\u0061\u0078" {
			_gefb, _debe := _a.ParseUint(_cad.Value, 10, 32)
			if _debe != nil {
				return _debe
			}
			_abbg := uint32(_gefb)
			_aebg.MaxAttr = &_abbg
			continue
		}
		if _cad.Name.Local == "\u006d\u0061\u006e" {
			_bgc, _cfge := _a.ParseBool(_cad.Value)
			if _cfge != nil {
				return _cfge
			}
			_aebg.ManAttr = &_bgc
			continue
		}
		if _cad.Name.Local == "\u0070\u0074" {
			_fgc, _eadd := _a.ParseBool(_cad.Value)
			if _eadd != nil {
				return _eadd
			}
			_aebg.PtAttr = &_fgc
			continue
		}
	}
	for {
		_ebc, _faef := d.Token()
		if _faef != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b: \u0025\u0073", _faef)
		}
		if _gae, _abbc := _ebc.(_gd.EndElement); _abbc && _gae.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SingleXmlCells and its children
func (_affce *CT_SingleXmlCells) Validate() error {
	return _affce.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

// Validate validates the CT_DataConsolidate and its children
func (_dgdf *CT_DataConsolidate) Validate() error {
	return _dgdf.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065")
}

// Validate validates the CT_DbPr and its children
func (_ccbac *CT_DbPr) Validate() error {
	return _ccbac.ValidateWithPath("\u0043T\u005f\u0044\u0062\u0050\u0072")
}

func NewCT_PatternFill() *CT_PatternFill { _feead := &CT_PatternFill{}; return _feead }

func (_cbece *CT_RevisionInsertSheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cbece.SheetIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _cbece.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _cbece.SheetPositionAttr)})
	if _cbece.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cbece.RIdAttr)})
	}
	if _cbece.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbece.UaAttr))})
	}
	if _cbece.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbece.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DateTime and its children
func (_gfadc *CT_DateTime) Validate() error {
	return _gfadc.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065")
}

type CT_FieldGroup struct {

	// Parent
	ParAttr *uint32

	// Field Base
	BaseAttr *uint32

	// Range Grouping Properties
	RangePr *CT_RangePr

	// Discrete Grouping Properties
	DiscretePr *CT_DiscretePr

	// OLAP Group Items
	GroupItems *CT_GroupItems
}

func (_ebgda *CT_RevisionConflict) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ebgda.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ebgda.SheetIdAttr)})
	}
	if _ebgda.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ebgda.RIdAttr)})
	}
	if _ebgda.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ebgda.UaAttr))})
	}
	if _ebgda.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ebgda.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dbcee *ST_SortBy) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dbcee = 0
	case "\u0076\u0061\u006cu\u0065":
		*_dbcee = 1
	case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
		*_dbcee = 2
	case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
		*_dbcee = 3
	case "\u0069\u0063\u006f\u006e":
		*_dbcee = 4
	}
	return nil
}

type CT_ChartFormat struct {

	// Chart Index
	ChartAttr uint32

	// Pivot Format Id
	FormatAttr uint32

	// Series Format
	SeriesAttr *bool

	// Pivot Table Location Rule
	PivotArea *CT_PivotArea
}

// ValidateWithPath validates the CT_Item and its children, prefixing error messages with path
func (_dafdcg *CT_Item) ValidateWithPath(path string) error {
	if _ebbff := _dafdcg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ebbff != nil {
		return _ebbff
	}
	return nil
}

func (_cfggg *CT_OleObjects) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_ecdef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ao\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _bfbcf := range _cfggg.OleObject {
		e.EncodeElement(_bfbcf, _ecdef)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dada *CT_Missing) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aegafa := range start.Attr {
		if _aegafa.Name.Local == "\u0066\u0063" {
			_cdgdc, _ggcebd := _aegafa.Value, error(nil)
			if _ggcebd != nil {
				return _ggcebd
			}
			_dada.FcAttr = &_cdgdc
			continue
		}
		if _aegafa.Name.Local == "\u0066" {
			_dfdee, _cebeb := _a.ParseBool(_aegafa.Value)
			if _cebeb != nil {
				return _cebeb
			}
			_dada.FAttr = &_dfdee
			continue
		}
		if _aegafa.Name.Local == "\u0063" {
			_babcba, _egfdc := _aegafa.Value, error(nil)
			if _egfdc != nil {
				return _egfdc
			}
			_dada.CAttr = &_babcba
			continue
		}
		if _aegafa.Name.Local == "\u0063\u0070" {
			_ggcd, _eggda := _a.ParseUint(_aegafa.Value, 10, 32)
			if _eggda != nil {
				return _eggda
			}
			_gbbbf := uint32(_ggcd)
			_dada.CpAttr = &_gbbbf
			continue
		}
		if _aegafa.Name.Local == "\u0069\u006e" {
			_ddfgf, _eeggf := _a.ParseUint(_aegafa.Value, 10, 32)
			if _eeggf != nil {
				return _eeggf
			}
			_bfbddf := uint32(_ddfgf)
			_dada.InAttr = &_bfbddf
			continue
		}
		if _aegafa.Name.Local == "\u0062\u0063" {
			_cbebf, _bbcdf := _aegafa.Value, error(nil)
			if _bbcdf != nil {
				return _bbcdf
			}
			_dada.BcAttr = &_cbebf
			continue
		}
		if _aegafa.Name.Local == "\u0075" {
			_aebfd, _cbfde := _a.ParseBool(_aegafa.Value)
			if _cbfde != nil {
				return _cbfde
			}
			_dada.UAttr = &_aebfd
			continue
		}
		if _aegafa.Name.Local == "\u0069" {
			_bbdeb, _gfgega := _a.ParseBool(_aegafa.Value)
			if _gfgega != nil {
				return _gfgega
			}
			_dada.IAttr = &_bbdeb
			continue
		}
		if _aegafa.Name.Local == "\u0075\u006e" {
			_bffdab, _bbfaa := _a.ParseBool(_aegafa.Value)
			if _bbfaa != nil {
				return _bbfaa
			}
			_dada.UnAttr = &_bffdab
			continue
		}
		if _aegafa.Name.Local == "\u0073\u0074" {
			_eeefff, _ffece := _a.ParseBool(_aegafa.Value)
			if _ffece != nil {
				return _ffece
			}
			_dada.StAttr = &_eeefff
			continue
		}
		if _aegafa.Name.Local == "\u0062" {
			_caceca, _gaedcc := _a.ParseBool(_aegafa.Value)
			if _gaedcc != nil {
				return _gaedcc
			}
			_dada.BAttr = &_caceca
			continue
		}
	}
_eebcc:
	for {
		_badcg, _cbegfc := d.Token()
		if _cbegfc != nil {
			return _cbegfc
		}
		switch _gcdee := _badcg.(type) {
		case _gd.StartElement:
			switch _gcdee.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_baebee := NewCT_Tuples()
				if _egfdf := d.DecodeElement(_baebee, &_gcdee); _egfdf != nil {
					return _egfdf
				}
				_dada.Tpls = append(_dada.Tpls, _baebee)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_cddeg := NewCT_X()
				if _gcgc := d.DecodeElement(_cddeg, &_gcdee); _gcgc != nil {
					return _gcgc
				}
				_dada.X = append(_dada.X, _cddeg)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0025\u0076", _gcdee.Name)
				if _egcea := d.Skip(); _egcea != nil {
					return _egcea
				}
			}
		case _gd.EndElement:
			break _eebcc
		case _gd.CharData:
		}
	}
	return nil
}

func (_bdac *CT_PivotSelection) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bdac.PivotArea = NewCT_PivotArea()
	for _, _aaacd := range start.Attr {
		if _aaacd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _aaacd.Name.Local == "\u0069\u0064" || _aaacd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _aaacd.Name.Local == "\u0069\u0064" {
			_aacdg, _dcbgd := _aaacd.Value, error(nil)
			if _dcbgd != nil {
				return _dcbgd
			}
			_bdac.IdAttr = &_aacdg
			continue
		}
		if _aaacd.Name.Local == "\u006d\u0069\u006e" {
			_cdegf, _dfgfb := _a.ParseUint(_aaacd.Value, 10, 32)
			if _dfgfb != nil {
				return _dfgfb
			}
			_aedgec := uint32(_cdegf)
			_bdac.MinAttr = &_aedgec
			continue
		}
		if _aaacd.Name.Local == "\u006d\u0061\u0078" {
			_cggada, _cccda := _a.ParseUint(_aaacd.Value, 10, 32)
			if _cccda != nil {
				return _cccda
			}
			_eebgb := uint32(_cggada)
			_bdac.MaxAttr = &_eebgb
			continue
		}
		if _aaacd.Name.Local == "\u006c\u0061\u0062e\u006c" {
			_gcaga, _agada := _a.ParseBool(_aaacd.Value)
			if _agada != nil {
				return _agada
			}
			_bdac.LabelAttr = &_gcaga
			continue
		}
		if _aaacd.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw" {
			_cdage, _eacgg := _a.ParseUint(_aaacd.Value, 10, 32)
			if _eacgg != nil {
				return _eacgg
			}
			_bfeeg := uint32(_cdage)
			_bdac.ActiveRowAttr = &_bfeeg
			continue
		}
		if _aaacd.Name.Local == "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065" {
			_bgbec, _gdffb := _a.ParseBool(_aaacd.Value)
			if _gdffb != nil {
				return _gdffb
			}
			_bdac.ExtendableAttr = &_bgbec
			continue
		}
		if _aaacd.Name.Local == "\u0061\u0078\u0069\u0073" {
			_bdac.AxisAttr.UnmarshalXMLAttr(_aaacd)
			continue
		}
		if _aaacd.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_egebd, _fdcgc := _a.ParseUint(_aaacd.Value, 10, 32)
			if _fdcgc != nil {
				return _fdcgc
			}
			_degda := uint32(_egebd)
			_bdac.DimensionAttr = &_degda
			continue
		}
		if _aaacd.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_gedfb, _cegdb := _a.ParseUint(_aaacd.Value, 10, 32)
			if _cegdb != nil {
				return _cegdb
			}
			_cgffb := uint32(_gedfb)
			_bdac.StartAttr = &_cgffb
			continue
		}
		if _aaacd.Name.Local == "\u0070\u0061\u006e\u0065" {
			_bdac.PaneAttr.UnmarshalXMLAttr(_aaacd)
			continue
		}
		if _aaacd.Name.Local == "\u0064\u0061\u0074\u0061" {
			_caaec, _gdgdb := _a.ParseBool(_aaacd.Value)
			if _gdgdb != nil {
				return _gdgdb
			}
			_bdac.DataAttr = &_caaec
			continue
		}
		if _aaacd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbfee, _cedbdg := _a.ParseUint(_aaacd.Value, 10, 32)
			if _cedbdg != nil {
				return _cedbdg
			}
			_gaced := uint32(_fbfee)
			_bdac.CountAttr = &_gaced
			continue
		}
		if _aaacd.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl" {
			_ddbcgb, _bbecce := _a.ParseUint(_aaacd.Value, 10, 32)
			if _bbecce != nil {
				return _bbecce
			}
			_fgfbg := uint32(_ddbcgb)
			_bdac.ActiveColAttr = &_fgfbg
			continue
		}
		if _aaacd.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077" {
			_aafaf, _acfdg := _a.ParseUint(_aaacd.Value, 10, 32)
			if _acfdg != nil {
				return _acfdg
			}
			_edffd := uint32(_aafaf)
			_bdac.PreviousRowAttr = &_edffd
			continue
		}
		if _aaacd.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c" {
			_gaffa, _eggbe := _a.ParseUint(_aaacd.Value, 10, 32)
			if _eggbe != nil {
				return _eggbe
			}
			_cbbag := uint32(_gaffa)
			_bdac.PreviousColAttr = &_cbbag
			continue
		}
		if _aaacd.Name.Local == "\u0063\u006c\u0069c\u006b" {
			_dabaed, _aaaec := _a.ParseUint(_aaacd.Value, 10, 32)
			if _aaaec != nil {
				return _aaaec
			}
			_cfdb := uint32(_dabaed)
			_bdac.ClickAttr = &_cfdb
			continue
		}
		if _aaacd.Name.Local == "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072" {
			_gaeeg, _fdeaa := _a.ParseBool(_aaacd.Value)
			if _fdeaa != nil {
				return _fdeaa
			}
			_bdac.ShowHeaderAttr = &_gaeeg
			continue
		}
	}
_aagaa:
	for {
		_fcage, _eedbb := d.Token()
		if _eedbb != nil {
			return _eedbb
		}
		switch _afgga := _fcage.(type) {
		case _gd.StartElement:
			switch _afgga.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _cdeed := d.DecodeElement(_bdac.PivotArea, &_afgga); _cdeed != nil {
					return _cdeed
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _afgga.Name)
				if _caabb := d.Skip(); _caabb != nil {
					return _caabb
				}
			}
		case _gd.EndElement:
			break _aagaa
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColHierarchiesUsage and its children, prefixing error messages with path
func (_gfcedb *CT_ColHierarchiesUsage) ValidateWithPath(path string) error {
	for _bgbc, _aeab := range _gfcedb.ColHierarchyUsage {
		if _feda := _aeab.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0043\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _bgbc)); _feda != nil {
			return _feda
		}
	}
	return nil
}

type CT_BorderPr struct {

	// Line Style
	StyleAttr ST_BorderStyle

	// Color
	Color *CT_Color
}

func (_aefbad ST_SortMethod) Validate() error { return _aefbad.ValidateWithPath("") }

func (_fbgccd *CT_ConditionalFormats) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fbgccd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fbgccd.CountAttr)})
	}
	e.EncodeToken(start)
	_fdabe := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074"}}
	for _, _ebgd := range _fbgccd.ConditionalFormat {
		e.EncodeElement(_ebgd, _fdabe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Font and its children, prefixing error messages with path
func (_bfebb *CT_Font) ValidateWithPath(path string) error {
	for _cgged, _cebbc := range _bfebb.Name {
		if _gbfg := _cebbc.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _cgged)); _gbfg != nil {
			return _gbfg
		}
	}
	for _fgcc, _dbcdd := range _bfebb.Charset {
		if _bcfb := _dbcdd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u0068\u0061\u0072\u0073\u0065t\u005b\u0025\u0064\u005d", path, _fgcc)); _bcfb != nil {
			return _bcfb
		}
	}
	for _fabgc, _gcaaf := range _bfebb.Family {
		if _abgg := _gcaaf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0046\u0061\u006d\u0069\u006c\u0079\u005b\u0025\u0064\u005d", path, _fabgc)); _abgg != nil {
			return _abgg
		}
	}
	for _gbcfg, _gcfcd := range _bfebb.B {
		if _efcfd := _gcfcd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _gbcfg)); _efcfd != nil {
			return _efcfd
		}
	}
	for _bbccfb, _abgdg := range _bfebb.I {
		if _fdga := _abgdg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _bbccfb)); _fdga != nil {
			return _fdga
		}
	}
	for _cbbbe, _cfgbf := range _bfebb.Strike {
		if _edadb := _cfgbf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u005b\u0025\u0064\u005d", path, _cbbbe)); _edadb != nil {
			return _edadb
		}
	}
	for _abcac, _agafd := range _bfebb.Outline {
		if _dbbfb := _agafd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004f\u0075\u0074\u006c\u0069\u006ee\u005b\u0025\u0064\u005d", path, _abcac)); _dbbfb != nil {
			return _dbbfb
		}
	}
	for _caaed, _aege := range _bfebb.Shadow {
		if _fgdb := _aege.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0061\u0064\u006f\u0077\u005b\u0025\u0064\u005d", path, _caaed)); _fgdb != nil {
			return _fgdb
		}
	}
	for _eeeef, _bdea := range _bfebb.Condense {
		if _dddg := _bdea.ValidateWithPath(_b.Sprintf("\u0025s\u002fC\u006f\u006e\u0064\u0065\u006e\u0073\u0065\u005b\u0025\u0064\u005d", path, _eeeef)); _dddg != nil {
			return _dddg
		}
	}
	for _cfgfe, _ccdef := range _bfebb.Extend {
		if _aaad := _ccdef.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u0065\u006e\u0064\u005b\u0025\u0064\u005d", path, _cfgfe)); _aaad != nil {
			return _aaad
		}
	}
	for _fbgbc, _egccb := range _bfebb.Color {
		if _abcba := _egccb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _fbgbc)); _abcba != nil {
			return _abcba
		}
	}
	for _daddd, _bcae := range _bfebb.Sz {
		if _dgeb := _bcae.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0053\u007a\u005b\u0025\u0064]", path, _daddd)); _dgeb != nil {
			return _dgeb
		}
	}
	for _dcaf, _feebf := range _bfebb.U {
		if _dcfga := _feebf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0055\u005b\u0025\u0064\u005d", path, _dcaf)); _dcfga != nil {
			return _dcfga
		}
	}
	for _gfdb, _ebbf := range _bfebb.VertAlign {
		if _gebca := _ebbf.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0056\u0065\u0072t\u0041\u006c\u0069\u0067\u006e\u005b\u0025\u0064\u005d", path, _gfdb)); _gebca != nil {
			return _gebca
		}
	}
	for _aggce, _bcfff := range _bfebb.Scheme {
		if _agagd := _bcfff.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u005b\u0025\u0064\u005d", path, _aggce)); _agagd != nil {
			return _agagd
		}
	}
	return nil
}

type CT_LegacyDrawing struct{ IdAttr string }

// Validate validates the CT_OutlinePr and its children
func (_ddddf *CT_OutlinePr) Validate() error {
	return _ddddf.ValidateWithPath("\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072")
}

func (_faegg ST_PageOrder) Validate() error { return _faegg.ValidateWithPath("") }

func (_agfbc *CT_Col) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0076", _agfbc.MinAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0078"}, Value: _b.Sprintf("\u0025\u0076", _agfbc.MaxAttr)})
	if _agfbc.WidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u0069\u0064t\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_agfbc.WidthAttr)})
	}
	if _agfbc.StyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0079l\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agfbc.StyleAttr)})
	}
	if _agfbc.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agfbc.HiddenAttr))})
	}
	if _agfbc.BestFitAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062e\u0073\u0074\u0046\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agfbc.BestFitAttr))})
	}
	if _agfbc.CustomWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agfbc.CustomWidthAttr))})
	}
	if _agfbc.PhoneticAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agfbc.PhoneticAttr))})
	}
	if _agfbc.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_agfbc.OutlineLevelAttr)})
	}
	if _agfbc.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agfbc.CollapsedAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DdeValue and its children, prefixing error messages with path
func (_face *CT_DdeValue) ValidateWithPath(path string) error {
	if _faega := _face.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _faega != nil {
		return _faega
	}
	return nil
}

// Validate validates the CT_SheetData and its children
func (_bddcc *CT_SheetData) Validate() error {
	return _bddcc.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061")
}

// ValidateWithPath validates the CT_RowHierarchiesUsage and its children, prefixing error messages with path
func (_babff *CT_RowHierarchiesUsage) ValidateWithPath(path string) error {
	for _ccdba, _bcface := range _babff.RowHierarchyUsage {
		if _gdgdc := _bcface.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0052\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _ccdba)); _gdgdc != nil {
			return _gdgdc
		}
	}
	return nil
}

func (_aacg *CT_Fonts) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aacg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aacg.CountAttr)})
	}
	e.EncodeToken(start)
	if _aacg.Font != nil {
		_feab := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		for _, _bdggc := range _aacg.Font {
			e.EncodeElement(_bdggc, _feab)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_ExternalConnectionType byte

func (_dgbbc ST_FontScheme) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_adfcdb := _gd.Attr{}
	_adfcdb.Name = name
	switch _dgbbc {
	case ST_FontSchemeUnset:
		_adfcdb.Value = ""
	case ST_FontSchemeNone:
		_adfcdb.Value = "\u006e\u006f\u006e\u0065"
	case ST_FontSchemeMajor:
		_adfcdb.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontSchemeMinor:
		_adfcdb.Value = "\u006d\u0069\u006eo\u0072"
	}
	return _adfcdb, nil
}

func (_cggecc *CT_WebPublishItem) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cggecc.IdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cggecc.DivIdAttr)})
	_cdfdf, _efbfc := _cggecc.SourceTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065"})
	if _efbfc != nil {
		return _efbfc
	}
	start.Attr = append(start.Attr, _cdfdf)
	if _cggecc.SourceRefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f"}, Value: _b.Sprintf("\u0025\u0076", *_cggecc.SourceRefAttr)})
	}
	if _cggecc.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cggecc.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", _cggecc.DestinationFileAttr)})
	if _cggecc.TitleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cggecc.TitleAttr)})
	}
	if _cggecc.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cggecc.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dcdaeg *CT_Dxfs) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dcdaeg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dcdaeg.CountAttr)})
	}
	e.EncodeToken(start)
	if _dcdaeg.Dxf != nil {
		_ffdd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		for _, _begcf := range _dcdaeg.Dxf {
			e.EncodeElement(_begcf, _ffdd)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_IntProperty struct {

	// Value
	ValAttr int32
}

func (_bcfgd *ST_VerticalAlignment) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_acafbf, _begcb := d.Token()
	if _begcb != nil {
		return _begcb
	}
	if _gfeef, _aeeafa := _acafbf.(_gd.EndElement); _aeeafa && _gfeef.Name == start.Name {
		*_bcfgd = 1
		return nil
	}
	if _dcgeg, _babce := _acafbf.(_gd.CharData); !_babce {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acafbf)
	} else {
		switch string(_dcgeg) {
		case "":
			*_bcfgd = 0
		case "\u0074\u006f\u0070":
			*_bcfgd = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_bcfgd = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_bcfgd = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_bcfgd = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_bcfgd = 5
		}
	}
	_acafbf, _begcb = d.Token()
	if _begcb != nil {
		return _begcb
	}
	if _gdgagf, _eedebf := _acafbf.(_gd.EndElement); _eedebf && _gdgagf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acafbf)
}

func (_bgade ST_Scope) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bgade.String(), start)
}

func NewCT_ChartsheetProtection() *CT_ChartsheetProtection {
	_dead := &CT_ChartsheetProtection{}
	return _dead
}

type CT_pivotTableDefinition struct {

	// Name
	NameAttr string

	// PivotCache Definition Id
	CacheIdAttr uint32

	// Data On Rows
	DataOnRowsAttr *bool

	// Default Data Field Position
	DataPositionAttr *uint32

	// Data Field Header Name
	DataCaptionAttr string

	// Grand Totals Caption
	GrandTotalCaptionAttr *string

	// Error Caption
	ErrorCaptionAttr *string

	// Show Error
	ShowErrorAttr *bool

	// Caption for Missing Values
	MissingCaptionAttr *string

	// Show Missing
	ShowMissingAttr *bool

	// Page Header Style Name
	PageStyleAttr *string

	// Table Style Name
	PivotTableStyleAttr *string

	// Vacated Style
	VacatedStyleAttr *string

	// PivotTable Custom String
	TagAttr *string

	// PivotTable Last Updated Version
	UpdatedVersionAttr *uint8

	// Minimum Refreshable Version
	MinRefreshableVersionAttr *uint8

	// Asterisk Totals
	AsteriskTotalsAttr *bool

	// Show Item Names
	ShowItemsAttr *bool

	// Allow Edit Data
	EditDataAttr *bool

	// Disable Field List
	DisableFieldListAttr *bool

	// Show Calculated Members
	ShowCalcMbrsAttr *bool

	// Total Visual Data
	VisualTotalsAttr *bool

	// Show Multiple Labels
	ShowMultipleLabelAttr *bool

	// Show Drop Down
	ShowDataDropDownAttr *bool

	// Show Expand Collapse
	ShowDrillAttr *bool

	// Print Drill Indicators
	PrintDrillAttr *bool

	// Show Member Property ToolTips
	ShowMemberPropertyTipsAttr *bool

	// Show ToolTips on Data
	ShowDataTipsAttr *bool

	// Enable PivotTable Wizard
	EnableWizardAttr *bool

	// Enable Drill Down
	EnableDrillAttr *bool

	// Enable Field Properties
	EnableFieldPropertiesAttr *bool

	// Preserve Formatting
	PreserveFormattingAttr *bool

	// Auto Formatting
	UseAutoFormattingAttr *bool

	// Page Wrap
	PageWrapAttr *uint32

	// Page Over Then Down
	PageOverThenDownAttr *bool

	// Subtotal Hidden Items
	SubtotalHiddenItemsAttr *bool

	// Row Grand Totals
	RowGrandTotalsAttr *bool

	// Grand Totals On Columns
	ColGrandTotalsAttr *bool

	// Field Print Titles
	FieldPrintTitlesAttr *bool

	// Item Print Titles
	ItemPrintTitlesAttr *bool

	// Merge Titles
	MergeItemAttr *bool

	// Show Drop Zones
	ShowDropZonesAttr *bool

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// Indentation for Compact Axis
	IndentAttr *uint32

	// Show Empty Row
	ShowEmptyRowAttr *bool

	// Show Empty Column
	ShowEmptyColAttr *bool

	// Show Field Headers
	ShowHeadersAttr *bool

	// Compact New Fields
	CompactAttr *bool

	// Outline New Fields
	OutlineAttr *bool

	// Outline Data Fields
	OutlineDataAttr *bool

	// Compact Data
	CompactDataAttr *bool

	// Data Fields Published
	PublishedAttr *bool

	// Enable Drop Zones
	GridDropZonesAttr *bool

	// Stop Immersive UI
	ImmersiveAttr *bool

	// Multiple Field Filters
	MultipleFieldFiltersAttr *bool

	// Chart Format Id
	ChartFormatAttr *uint32

	// Row Header Caption
	RowHeaderCaptionAttr *string

	// Column Header Caption
	ColHeaderCaptionAttr *string

	// Default Sort Order
	FieldListSortAscendingAttr *bool

	// MDX Subqueries Supported
	MdxSubqueriesAttr *bool

	// Custom List AutoSort
	CustomListSortAttr *bool

	// PivotTable Location
	Location *CT_Location

	// PivotTable Fields
	PivotFields *CT_PivotFields

	// Row Fields
	RowFields *CT_RowFields

	// Row Items
	RowItems *CT_rowItems

	// Column Fields
	ColFields *CT_ColFields

	// Column Items
	ColItems *CT_colItems

	// Page Field Items
	PageFields *CT_PageFields

	// Data Fields
	DataFields *CT_DataFields

	// PivotTable Formats
	Formats *CT_Formats

	// Conditional Formats
	ConditionalFormats *CT_ConditionalFormats

	// PivotChart Formats
	ChartFormats *CT_ChartFormats

	// PivotTable OLAP Hierarchies
	PivotHierarchies *CT_PivotHierarchies

	// PivotTable Style
	PivotTableStyleInfo *CT_PivotTableStyle

	// Filters
	Filters *CT_PivotFilters

	// Row OLAP Hierarchy References
	RowHierarchiesUsage *CT_RowHierarchiesUsage

	// Column OLAP Hierarchy References
	ColHierarchiesUsage *CT_ColHierarchiesUsage

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_abgbg *CT_ExternalRow) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", _abgbg.RAttr)})
	e.EncodeToken(start)
	if _abgbg.Cell != nil {
		_gebdf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u0065\u006c\u006c"}}
		for _, _bedbc := range _abgbg.Cell {
			e.EncodeElement(_bedbc, _gebdf)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_DateTime() *CT_DateTime { _agaa := &CT_DateTime{}; return _agaa }

type CT_DataValidation struct {

	// Data Validation Type
	TypeAttr ST_DataValidationType

	// Data Validation Error Style
	ErrorStyleAttr ST_DataValidationErrorStyle

	// IME Mode Enforced
	ImeModeAttr ST_DataValidationImeMode

	// Operator
	OperatorAttr ST_DataValidationOperator

	// Allow Blank
	AllowBlankAttr *bool

	// Show Drop Down
	ShowDropDownAttr *bool

	// Show Input Message
	ShowInputMessageAttr *bool

	// Show Error Message
	ShowErrorMessageAttr *bool

	// Error Alert Text
	ErrorTitleAttr *string

	// Error Message
	ErrorAttr *string

	// Prompt Title
	PromptTitleAttr *string

	// Input Prompt
	PromptAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Formula 1
	Formula1 *string

	// Formula 2
	Formula2 *string
}

func (_dacgbf ST_SortBy) ValidateWithPath(path string) error {
	switch _dacgbf {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dacgbf))
	}
	return nil
}

func (_aagc *CT_ObjectAnchor) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aagc.MoveWithCellsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aagc.MoveWithCellsAttr))})
	}
	if _aagc.SizeWithCellsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aagc.SizeWithCellsAttr))})
	}
	e.EncodeToken(start)
	_gacdd := _gd.StartElement{Name: _gd.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_aagc.From, _gacdd)
	_ceebg := _gd.StartElement{Name: _gd.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_aagc.To, _ceebg)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gfaac *CT_MergeCells) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bgeda := range start.Attr {
		if _bgeda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecdfd, _edccc := _a.ParseUint(_bgeda.Value, 10, 32)
			if _edccc != nil {
				return _edccc
			}
			_ebgbe := uint32(_ecdfd)
			_gfaac.CountAttr = &_ebgbe
			continue
		}
	}
_eedfcb:
	for {
		_geebb, _feae := d.Token()
		if _feae != nil {
			return _feae
		}
		switch _ebcbc := _geebb.(type) {
		case _gd.StartElement:
			switch _ebcbc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}:
				_ffaea := NewCT_MergeCell()
				if _cgfbf := d.DecodeElement(_ffaea, &_ebcbc); _cgfbf != nil {
					return _cgfbf
				}
				_gfaac.MergeCell = append(_gfaac.MergeCell, _ffaea)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004de\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073 \u0025\u0076", _ebcbc.Name)
				if _beagg := d.Skip(); _beagg != nil {
					return _beagg
				}
			}
		case _gd.EndElement:
			break _eedfcb
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionHeaders and its children, prefixing error messages with path
func (_dfaff *CT_RevisionHeaders) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_dfaff.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _dfaff.GuidAttr)
	}
	if _dfaff.LastGuidAttr != nil {
		if !_af.ST_GuidPatternRe.MatchString(*_dfaff.LastGuidAttr) {
			return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u004c\u0061s\u0074\u0047\u0075i\u0064\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, *_dfaff.LastGuidAttr)
		}
	}
	for _cbbff, _cedde := range _dfaff.Header {
		if _cedge := _cedde.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _cbbff)); _cedge != nil {
			return _cedge
		}
	}
	return nil
}

func (_ba *AG_RevData) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gef := range start.Attr {
		if _gef.Name.Local == "\u0072\u0049\u0064" {
			_efd, _ag := _a.ParseUint(_gef.Value, 10, 32)
			if _ag != nil {
				return _ag
			}
			_eed := uint32(_efd)
			_ba.RIdAttr = &_eed
			continue
		}
		if _gef.Name.Local == "\u0075\u0061" {
			_cfg, _gcc := _a.ParseBool(_gef.Value)
			if _gcc != nil {
				return _gcc
			}
			_ba.UaAttr = &_cfg
			continue
		}
		if _gef.Name.Local == "\u0072\u0061" {
			_cdg, _bfe := _a.ParseBool(_gef.Value)
			if _bfe != nil {
				return _bfe
			}
			_ba.RaAttr = &_cdg
			continue
		}
	}
	for {
		_gcde, _gf := d.Token()
		if _gf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061\u003a\u0020%\u0073", _gf)
		}
		if _gfa, _eee := _gcde.(_gd.EndElement); _eee && _gfa.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the PivotCacheDefinition and its children
func (_cgaef *PivotCacheDefinition) Validate() error {
	return _cgaef.ValidateWithPath("P\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}

func NewMapInfo() *MapInfo {
	_afeddc := &MapInfo{}
	_afeddc.CT_MapInfo = *NewCT_MapInfo()
	return _afeddc
}

// Validate validates the CT_Fills and its children
func (_eedab *CT_Fills) Validate() error {
	return _eedab.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073")
}

func (_cbgc *CT_DefinedName) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _cbgc.NameAttr)})
	if _cbgc.CommentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.CommentAttr)})
	}
	if _cbgc.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.CustomMenuAttr)})
	}
	if _cbgc.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.DescriptionAttr)})
	}
	if _cbgc.HelpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.HelpAttr)})
	}
	if _cbgc.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.StatusBarAttr)})
	}
	if _cbgc.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.LocalSheetIdAttr)})
	}
	if _cbgc.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgc.HiddenAttr))})
	}
	if _cbgc.FunctionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgc.FunctionAttr))})
	}
	if _cbgc.VbProcedureAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgc.VbProcedureAttr))})
	}
	if _cbgc.XlmAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006c\u006d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgc.XlmAttr))})
	}
	if _cbgc.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.FunctionGroupIdAttr)})
	}
	if _cbgc.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_cbgc.ShortcutKeyAttr)})
	}
	if _cbgc.PublishToServerAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgc.PublishToServerAttr))})
	}
	if _cbgc.WorkbookParameterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgc.WorkbookParameterAttr))})
	}
	e.EncodeElement(_cbgc.Content, start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bebfa *CT_NumFmts) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bebfa.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bebfa.CountAttr)})
	}
	e.EncodeToken(start)
	if _bebfa.NumFmt != nil {
		_dbfba := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		for _, _agbfc := range _bebfa.NumFmt {
			e.EncodeElement(_agbfc, _dbfba)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ddeac ST_CellComments) Validate() error { return _ddeac.ValidateWithPath("") }

type CT_XmlPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_daaffb ST_DataValidationType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_acdeg := _gd.Attr{}
	_acdeg.Name = name
	switch _daaffb {
	case ST_DataValidationTypeUnset:
		_acdeg.Value = ""
	case ST_DataValidationTypeNone:
		_acdeg.Value = "\u006e\u006f\u006e\u0065"
	case ST_DataValidationTypeWhole:
		_acdeg.Value = "\u0077\u0068\u006fl\u0065"
	case ST_DataValidationTypeDecimal:
		_acdeg.Value = "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case ST_DataValidationTypeList:
		_acdeg.Value = "\u006c\u0069\u0073\u0074"
	case ST_DataValidationTypeDate:
		_acdeg.Value = "\u0064\u0061\u0074\u0065"
	case ST_DataValidationTypeTime:
		_acdeg.Value = "\u0074\u0069\u006d\u0065"
	case ST_DataValidationTypeTextLength:
		_acdeg.Value = "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case ST_DataValidationTypeCustom:
		_acdeg.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _acdeg, nil
}

// Validate validates the CT_DefinedName and its children
func (_dceaa *CT_DefinedName) Validate() error {
	return _dceaa.ValidateWithPath("\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065")
}

// Validate validates the CT_SheetBackgroundPicture and its children
func (_afdbcb *CT_SheetBackgroundPicture) Validate() error {
	return _afdbcb.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e")
}

// Validate validates the CT_RevisionSheetRename and its children
func (_aabcg *CT_RevisionSheetRename) Validate() error {
	return _aabcg.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065")
}

func NewCT_DataConsolidate() *CT_DataConsolidate { _faaab := &CT_DataConsolidate{}; return _faaab }

func (_eadcb *CT_GroupItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eadcb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eadcb.CountAttr)})
	}
	e.EncodeToken(start)
	if _eadcb.M != nil {
		_ddccb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _adeag := range _eadcb.M {
			e.EncodeElement(_adeag, _ddccb)
		}
	}
	if _eadcb.N != nil {
		_gcagc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _agfaa := range _eadcb.N {
			e.EncodeElement(_agfaa, _gcagc)
		}
	}
	if _eadcb.B != nil {
		_fdca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _faae := range _eadcb.B {
			e.EncodeElement(_faae, _fdca)
		}
	}
	if _eadcb.E != nil {
		_cedgg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _eedc := range _eadcb.E {
			e.EncodeElement(_eedc, _cedgg)
		}
	}
	if _eadcb.S != nil {
		_ddefff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _fdeff := range _eadcb.S {
			e.EncodeElement(_fdeff, _ddefff)
		}
	}
	if _eadcb.D != nil {
		_fegcc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _gfgcb := range _eadcb.D {
			e.EncodeElement(_gfgcb, _fegcc)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NumFmt and its children
func (_fbbgea *CT_NumFmt) Validate() error {
	return _fbbgea.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt")
}

func NewCT_ExternalLinkChoice() *CT_ExternalLinkChoice {
	_fcabb := &CT_ExternalLinkChoice{}
	return _fcabb
}

func (_bgbfe ST_TargetScreenSize) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bgbfe.String(), start)
}

type ST_SortMethod byte

func (_cd *AG_AutoFormat) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ef := range start.Attr {
		if _ef.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_bf, _ea := _a.ParseUint(_ef.Value, 10, 32)
			if _ea != nil {
				return _ea
			}
			_gc := uint32(_bf)
			_cd.AutoFormatIdAttr = &_gc
			continue
		}
		if _ef.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_eae, _eaa := _a.ParseBool(_ef.Value)
			if _eaa != nil {
				return _eaa
			}
			_cd.ApplyNumberFormatsAttr = &_eae
			continue
		}
		if _ef.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_f, _dc := _a.ParseBool(_ef.Value)
			if _dc != nil {
				return _dc
			}
			_cd.ApplyBorderFormatsAttr = &_f
			continue
		}
		if _ef.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ed, _dd := _a.ParseBool(_ef.Value)
			if _dd != nil {
				return _dd
			}
			_cd.ApplyFontFormatsAttr = &_ed
			continue
		}
		if _ef.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bfb, _dgb := _a.ParseBool(_ef.Value)
			if _dgb != nil {
				return _dgb
			}
			_cd.ApplyPatternFormatsAttr = &_bfb
			continue
		}
		if _ef.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fa, _ec := _a.ParseBool(_ef.Value)
			if _ec != nil {
				return _ec
			}
			_cd.ApplyAlignmentFormatsAttr = &_fa
			continue
		}
		if _ef.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gcd, _ge := _a.ParseBool(_ef.Value)
			if _ge != nil {
				return _ge
			}
			_cd.ApplyWidthHeightFormatsAttr = &_gcd
			continue
		}
	}
	for {
		_ee, _ga := d.Token()
		if _ga != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u003a\u0020\u0025s", _ga)
		}
		if _eec, _efe := _ee.(_gd.EndElement); _efe && _eec.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionComment and its children, prefixing error messages with path
func (_dacaa *CT_RevisionComment) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_dacaa.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _dacaa.GuidAttr)
	}
	if _gdefef := _dacaa.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gdefef != nil {
		return _gdefef
	}
	return nil
}

func NewCT_CacheField() *CT_CacheField { _acd := &CT_CacheField{}; return _acd }

// Validate validates the CT_Index and its children
func (_adcag *CT_Index) Validate() error {
	return _adcag.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078")
}

type CT_PivotFilters struct {

	// Pivot Filter Count
	CountAttr *uint32

	// PivotTable Advanced Filter
	Filter []*CT_PivotFilter
}

func (_bgfbb *CT_FieldsUsage) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _feac := range start.Attr {
		if _feac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_afbdd, _ccade := _a.ParseUint(_feac.Value, 10, 32)
			if _ccade != nil {
				return _ccade
			}
			_daede := uint32(_afbdd)
			_bgfbb.CountAttr = &_daede
			continue
		}
	}
_ceaa:
	for {
		_abeec, _dbcgf := d.Token()
		if _dbcgf != nil {
			return _dbcgf
		}
		switch _dbgab := _abeec.(type) {
		case _gd.StartElement:
			switch _dbgab.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}:
				_gebda := NewCT_FieldUsage()
				if _gdgba := d.DecodeElement(_gebda, &_dbgab); _gdgba != nil {
					return _gdgba
				}
				_bgfbb.FieldUsage = append(_bgfbb.FieldUsage, _gebda)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073\u0055s\u0061g\u0065\u0020\u0025\u0076", _dbgab.Name)
				if _gbfag := d.Skip(); _gbfag != nil {
					return _gbfag
				}
			}
		case _gd.EndElement:
			break _ceaa
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalBook and its children
func (_bfbcd *CT_ExternalBook) Validate() error {
	return _bfbcd.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b")
}

func (_effafb ST_ShowDataAs) ValidateWithPath(path string) error {
	switch _effafb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_effafb))
	}
	return nil
}

func (_ddggd *CT_Items) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gccf := range start.Attr {
		if _gccf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ceeaf, _dfdgef := _a.ParseUint(_gccf.Value, 10, 32)
			if _dfdgef != nil {
				return _dfdgef
			}
			_begcc := uint32(_ceeaf)
			_ddggd.CountAttr = &_begcc
			continue
		}
	}
_aegaf:
	for {
		_efbcg, _agafb := d.Token()
		if _agafb != nil {
			return _agafb
		}
		switch _bbdcc := _efbcg.(type) {
		case _gd.StartElement:
			switch _bbdcc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}:
				_ebbcg := NewCT_Item()
				if _cfecbcf := d.DecodeElement(_ebbcg, &_bbdcc); _cfecbcf != nil {
					return _cfecbcf
				}
				_ddggd.Item = append(_ddggd.Item, _ebbcg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _bbdcc.Name)
				if _bdbbc := d.Skip(); _bdbbc != nil {
					return _bdbbc
				}
			}
		case _gd.EndElement:
			break _aegaf
		case _gd.CharData:
		}
	}
	return nil
}

func (_ecddd *ST_PatternType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_afbde, _gfceda := d.Token()
	if _gfceda != nil {
		return _gfceda
	}
	if _facfab, _gdafb := _afbde.(_gd.EndElement); _gdafb && _facfab.Name == start.Name {
		*_ecddd = 1
		return nil
	}
	if _dfbdcc, _feffa := _afbde.(_gd.CharData); !_feffa {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _afbde)
	} else {
		switch string(_dfbdcc) {
		case "":
			*_ecddd = 0
		case "\u006e\u006f\u006e\u0065":
			*_ecddd = 1
		case "\u0073\u006f\u006ci\u0064":
			*_ecddd = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
			*_ecddd = 3
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_ecddd = 4
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_ecddd = 5
		case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
			*_ecddd = 6
		case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_ecddd = 7
		case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
			*_ecddd = 8
		case "\u0064\u0061\u0072\u006b\u0055\u0070":
			*_ecddd = 9
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
			*_ecddd = 10
		case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_ecddd = 11
		case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
			*_ecddd = 12
		case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_ecddd = 13
		case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
			*_ecddd = 14
		case "\u006ci\u0067\u0068\u0074\u0055\u0070":
			*_ecddd = 15
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
			*_ecddd = 16
		case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_ecddd = 17
		case "\u0067r\u0061\u0079\u0031\u0032\u0035":
			*_ecddd = 18
		case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
			*_ecddd = 19
		}
	}
	_afbde, _gfceda = d.Token()
	if _gfceda != nil {
		return _gfceda
	}
	if _edgda, _ecdcc := _afbde.(_gd.EndElement); _ecdcc && _edgda.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _afbde)
}

func (_dedda ST_PageOrder) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dedda.String(), start)
}

func (_fbdfg ST_VerticalAlignment) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ccbdf := _gd.Attr{}
	_ccbdf.Name = name
	switch _fbdfg {
	case ST_VerticalAlignmentUnset:
		_ccbdf.Value = ""
	case ST_VerticalAlignmentTop:
		_ccbdf.Value = "\u0074\u006f\u0070"
	case ST_VerticalAlignmentCenter:
		_ccbdf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_VerticalAlignmentBottom:
		_ccbdf.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_VerticalAlignmentJustify:
		_ccbdf.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_VerticalAlignmentDistributed:
		_ccbdf.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _ccbdf, nil
}

type CT_Comment struct {

	// Cell Reference
	RefAttr string

	// Author Id
	AuthorIdAttr uint32

	// Unique Identifier for Comment
	GuidAttr *string

	// Shape ID
	ShapeIdAttr *uint32

	// Comment Text
	Text *CT_Rst

	// Comment Properties
	CommentPr *CT_CommentPr
}

func (_cgeaed *CalcChain) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ac\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e"
	return _cgeaed.CT_CalcChain.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_FontSize and its children, prefixing error messages with path
func (_abce *CT_FontSize) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Top10 and its children, prefixing error messages with path
func (_dbaga *CT_Top10) ValidateWithPath(path string) error { return nil }

func (_gaecb ST_PaneState) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_gaecb.String(), start)
}

const (
	ST_ShowDataAsUnset          ST_ShowDataAs = 0
	ST_ShowDataAsNormal         ST_ShowDataAs = 1
	ST_ShowDataAsDifference     ST_ShowDataAs = 2
	ST_ShowDataAsPercent        ST_ShowDataAs = 3
	ST_ShowDataAsPercentDiff    ST_ShowDataAs = 4
	ST_ShowDataAsRunTotal       ST_ShowDataAs = 5
	ST_ShowDataAsPercentOfRow   ST_ShowDataAs = 6
	ST_ShowDataAsPercentOfCol   ST_ShowDataAs = 7
	ST_ShowDataAsPercentOfTotal ST_ShowDataAs = 8
	ST_ShowDataAsIndex          ST_ShowDataAs = 9
)

func NewCT_Top10() *CT_Top10 { _fceebg := &CT_Top10{}; return _fceebg }

// Validate validates the CT_PivotDimension and its children
func (_gbdeb *CT_PivotDimension) Validate() error {
	return _gbdeb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

type CT_MetadataRecord struct {

	// Metadata Record Type Index
	TAttr uint32

	// Metadata Record Value Index
	VAttr uint32
}

func (_debdc *CT_ExternalBook) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ffeag := range start.Attr {
		if _ffeag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ffeag.Name.Local == "\u0069\u0064" || _ffeag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ffeag.Name.Local == "\u0069\u0064" {
			_daefc, _ccafe := _ffeag.Value, error(nil)
			if _ccafe != nil {
				return _ccafe
			}
			_debdc.IdAttr = _daefc
			continue
		}
	}
_gaeg:
	for {
		_ebed, _eabf := d.Token()
		if _eabf != nil {
			return _eabf
		}
		switch _dabgad := _ebed.(type) {
		case _gd.StartElement:
			switch _dabgad.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}:
				_debdc.SheetNames = NewCT_ExternalSheetNames()
				if _afca := d.DecodeElement(_debdc.SheetNames, &_dabgad); _afca != nil {
					return _afca
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_debdc.DefinedNames = NewCT_ExternalDefinedNames()
				if _ccef := d.DecodeElement(_debdc.DefinedNames, &_dabgad); _ccef != nil {
					return _ccef
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}:
				_debdc.SheetDataSet = NewCT_ExternalSheetDataSet()
				if _cccf := d.DecodeElement(_debdc.SheetDataSet, &_dabgad); _cccf != nil {
					return _cccf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b\u0020\u0025\u0076", _dabgad.Name)
				if _fcge := d.Skip(); _fcge != nil {
					return _fcge
				}
			}
		case _gd.EndElement:
			break _gaeg
		case _gd.CharData:
		}
	}
	return nil
}

func (_gbgc *CT_CellSmartTagPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006b\u0065\u0079"}, Value: _b.Sprintf("\u0025\u0076", _gbgc.KeyAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _gbgc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_IconFilter struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

func (_feefc ST_UpdateLinks) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_feefc.String(), start)
}

func NewCT_Workbook() *CT_Workbook {
	_aadbg := &CT_Workbook{}
	_aadbg.Sheets = NewCT_Sheets()
	return _aadbg
}

// Validate validates the CT_CellXfs and its children
func (_bcbea *CT_CellXfs) Validate() error {
	return _bcbea.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073")
}

func (_dfgcc *CT_GroupMembers) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gggea := range start.Attr {
		if _gggea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dffg, _bdcd := _a.ParseUint(_gggea.Value, 10, 32)
			if _bdcd != nil {
				return _bdcd
			}
			_egdfe := uint32(_dffg)
			_dfgcc.CountAttr = &_egdfe
			continue
		}
	}
_gbbab:
	for {
		_deaee, _cedcc := d.Token()
		if _cedcc != nil {
			return _cedcc
		}
		switch _gegga := _deaee.(type) {
		case _gd.StartElement:
			switch _gegga.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_eefba := NewCT_GroupMember()
				if _gabdc := d.DecodeElement(_eefba, &_gegga); _gabdc != nil {
					return _gabdc
				}
				_dfgcc.GroupMember = append(_dfgcc.GroupMember, _eefba)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _gegga.Name)
				if _ebdc := d.Skip(); _ebdc != nil {
					return _ebdc
				}
			}
		case _gd.EndElement:
			break _gbbab
		case _gd.CharData:
		}
	}
	return nil
}

func (_aabfe ST_SheetViewType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_gbbcc := _gd.Attr{}
	_gbbcc.Name = name
	switch _aabfe {
	case ST_SheetViewTypeUnset:
		_gbbcc.Value = ""
	case ST_SheetViewTypeNormal:
		_gbbcc.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_SheetViewTypePageBreakPreview:
		_gbbcc.Value = "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case ST_SheetViewTypePageLayout:
		_gbbcc.Value = "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return _gbbcc, nil
}

func (_bdaaf *CT_ExternalDefinedName) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fdea := range start.Attr {
		if _fdea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdfd, _gcffb := _fdea.Value, error(nil)
			if _gcffb != nil {
				return _gcffb
			}
			_bdaaf.NameAttr = _bdfd
			continue
		}
		if _fdea.Name.Local == "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f" {
			_eecc, _eeebg := _fdea.Value, error(nil)
			if _eeebg != nil {
				return _eeebg
			}
			_bdaaf.RefersToAttr = &_eecc
			continue
		}
		if _fdea.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ccgc, _fdddb := _a.ParseUint(_fdea.Value, 10, 32)
			if _fdddb != nil {
				return _fdddb
			}
			_cfag := uint32(_ccgc)
			_bdaaf.SheetIdAttr = &_cfag
			continue
		}
	}
	for {
		_caae, _gedcd := d.Token()
		if _gedcd != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072n\u0061l\u0044e\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _gedcd)
		}
		if _fccd, _deadc := _caae.(_gd.EndElement); _deadc && _fccd.Name == start.Name {
			break
		}
	}
	return nil
}

type VolTypes struct{ CT_VolTypes }

type Headers struct{ CT_RevisionHeaders }

func (_aegac *Connections) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073"
	return _aegac.CT_Connections.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_Formats and its children, prefixing error messages with path
func (_dbdc *CT_Formats) ValidateWithPath(path string) error {
	for _acefab, _cgcdf := range _dbdc.Format {
		if _cgfg := _cgcdf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _acefab)); _cgfg != nil {
			return _cgfg
		}
	}
	return nil
}

type CT_Macrosheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Macro Sheet Dimensions
	Dimension *CT_SheetDimension

	// Macro Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Protection Options
	SheetProtection *CT_SheetProtection

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidation
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks (Row)
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing Reference
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture *CT_SheetBackgroundPicture

	// Embedded Objects
	OleObjects *CT_OleObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fggdce *CT_PivotField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fdbfc := range start.Attr {
		if _fdbfc.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072" {
			_gcafgd, _egbcf := _a.ParseBool(_fdbfc.Value)
			if _egbcf != nil {
				return _egbcf
			}
			_fggdce.MeasureFilterAttr = &_gcafgd
			continue
		}
		if _fdbfc.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_fbcga, _acbgc := _a.ParseBool(_fdbfc.Value)
			if _acbgc != nil {
				return _acbgc
			}
			_fggdce.IncludeNewItemsInFilterAttr = &_fbcga
			continue
		}
		if _fdbfc.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_gfaaf, _gdfgc := _a.ParseBool(_fdbfc.Value)
			if _gdfgc != nil {
				return _gdfgc
			}
			_fggdce.CompactAttr = &_gfaaf
			continue
		}
		if _fdbfc.Name.Local == "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_fgda, _cdadeb := _a.ParseUint(_fdbfc.Value, 10, 32)
			if _cdadeb != nil {
				return _cdadeb
			}
			_gabfb := uint32(_fgda)
			_fggdce.ItemPageCountAttr = &_gabfb
			continue
		}
		if _fdbfc.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_edabf, _acdcg := _a.ParseUint(_fdbfc.Value, 10, 32)
			if _acdcg != nil {
				return _acdcg
			}
			_afeeaa := uint32(_edabf)
			_fggdce.NumFmtIdAttr = &_afeeaa
			continue
		}
		if _fdbfc.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_fggdce.SortTypeAttr.UnmarshalXMLAttr(_fdbfc)
			continue
		}
		if _fdbfc.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_gbfec, _cddge := _a.ParseBool(_fdbfc.Value)
			if _cddge != nil {
				return _cddge
			}
			_fggdce.OutlineAttr = &_gbfec
			continue
		}
		if _fdbfc.Name.Local == "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074" {
			_daadge, _ggeade := _a.ParseBool(_fdbfc.Value)
			if _ggeade != nil {
				return _ggeade
			}
			_fggdce.DataSourceSortAttr = &_daadge
			continue
		}
		if _fdbfc.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_eadbg, _gefgcg := _a.ParseBool(_fdbfc.Value)
			if _gefgcg != nil {
				return _gefgcg
			}
			_fggdce.DragToRowAttr = &_eadbg
			continue
		}
		if _fdbfc.Name.Local == "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074" {
			_dcfcd, _cebbe := _a.ParseBool(_fdbfc.Value)
			if _cebbe != nil {
				return _cebbe
			}
			_fggdce.NonAutoSortDefaultAttr = &_dcfcd
			continue
		}
		if _fdbfc.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_beegf, _dbfee := _a.ParseBool(_fdbfc.Value)
			if _dbfee != nil {
				return _dbfee
			}
			_fggdce.MultipleItemSelectionAllowedAttr = &_beegf
			continue
		}
		if _fdbfc.Name.Local == "\u0072\u0061\u006e\u006b\u0042\u0079" {
			_egddg, _acaf := _a.ParseUint(_fdbfc.Value, 10, 32)
			if _acaf != nil {
				return _acaf
			}
			_cebca := uint32(_egddg)
			_fggdce.RankByAttr = &_cebca
			continue
		}
		if _fdbfc.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_fgfab, _daeaff := _a.ParseBool(_fdbfc.Value)
			if _daeaff != nil {
				return _daeaff
			}
			_fggdce.StdDevSubtotalAttr = &_fgfab
			continue
		}
		if _fdbfc.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_agddbg, _dbbec := _a.ParseBool(_fdbfc.Value)
			if _dbbec != nil {
				return _dbbec
			}
			_fggdce.CountASubtotalAttr = &_agddbg
			continue
		}
		if _fdbfc.Name.Local == "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_efaag, _dbfbd := _a.ParseBool(_fdbfc.Value)
			if _dbfbd != nil {
				return _dbfbd
			}
			_fggdce.AutoShowAttr = &_efaag
			continue
		}
		if _fdbfc.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_ccdad, _fbefc := _a.ParseBool(_fdbfc.Value)
			if _fbefc != nil {
				return _fbefc
			}
			_fggdce.ShowPropAsCaptionAttr = &_ccdad
			continue
		}
		if _fdbfc.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ddcfb, _eadfcd := _a.ParseBool(_fdbfc.Value)
			if _eadfcd != nil {
				return _eadfcd
			}
			_fggdce.ProductSubtotalAttr = &_ddcfb
			continue
		}
		if _fdbfc.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_agaae, _dbbgcc := _a.ParseBool(_fdbfc.Value)
			if _dbbgcc != nil {
				return _dbbgcc
			}
			_fggdce.DragToPageAttr = &_agaae
			continue
		}
		if _fdbfc.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_efcbc, _eafgf := _a.ParseBool(_fdbfc.Value)
			if _eafgf != nil {
				return _eafgf
			}
			_fggdce.DefaultSubtotalAttr = &_efcbc
			continue
		}
		if _fdbfc.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_bggce, _cadceb := _a.ParseBool(_fdbfc.Value)
			if _cadceb != nil {
				return _cadceb
			}
			_fggdce.DragToDataAttr = &_bggce
			continue
		}
		if _fdbfc.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ffbgg, _bcbfg := _a.ParseBool(_fdbfc.Value)
			if _bcbfg != nil {
				return _bcbfg
			}
			_fggdce.MaxSubtotalAttr = &_ffbgg
			continue
		}
		if _fdbfc.Name.Local == "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073" {
			_ddfgc, _fabad := _a.ParseBool(_fdbfc.Value)
			if _fabad != nil {
				return _fabad
			}
			_fggdce.HideNewItemsAttr = &_ddfgc
			continue
		}
		if _fdbfc.Name.Local == "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c" {
			_cgfdf, _dbffa := _a.ParseBool(_fdbfc.Value)
			if _dbffa != nil {
				return _dbffa
			}
			_fggdce.ShowPropCellAttr = &_cgfdf
			continue
		}
		if _fdbfc.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_bgbega, _acedgf := _a.ParseBool(_fdbfc.Value)
			if _acedgf != nil {
				return _acedgf
			}
			_fggdce.SubtotalTopAttr = &_bgbega
			continue
		}
		if _fdbfc.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_dfgggd, _dffda := _a.ParseBool(_fdbfc.Value)
			if _dffda != nil {
				return _dffda
			}
			_fggdce.ServerFieldAttr = &_dfgggd
			continue
		}
		if _fdbfc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcbgg, _fafgff := _fdbfc.Value, error(nil)
			if _fafgff != nil {
				return _fafgff
			}
			_fggdce.NameAttr = &_dcbgg
			continue
		}
		if _fdbfc.Name.Local == "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b" {
			_babcc, _eeceg := _a.ParseBool(_fdbfc.Value)
			if _eeceg != nil {
				return _eeceg
			}
			_fggdce.InsertPageBreakAttr = &_babcc
			continue
		}
		if _fdbfc.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dbbea, _febda := _a.ParseBool(_fdbfc.Value)
			if _febda != nil {
				return _febda
			}
			_fggdce.SumSubtotalAttr = &_dbbea
			continue
		}
		if _fdbfc.Name.Local == "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd" {
			_bfab, _bcaec := _a.ParseBool(_fdbfc.Value)
			if _bcaec != nil {
				return _bcaec
			}
			_fggdce.DataFieldAttr = &_bfab
			continue
		}
		if _fdbfc.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bfeed, _dadaa := _a.ParseBool(_fdbfc.Value)
			if _dadaa != nil {
				return _dadaa
			}
			_fggdce.AvgSubtotalAttr = &_bfeed
			continue
		}
		if _fdbfc.Name.Local == "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_ddfeg, _gbgad := _a.ParseBool(_fdbfc.Value)
			if _gbgad != nil {
				return _gbgad
			}
			_fggdce.TopAutoShowAttr = &_ddfeg
			continue
		}
		if _fdbfc.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dafab, _afcfa := _a.ParseBool(_fdbfc.Value)
			if _afcfa != nil {
				return _afcfa
			}
			_fggdce.MinSubtotalAttr = &_dafab
			continue
		}
		if _fdbfc.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_cabcf, _dcfbd := _a.ParseBool(_fdbfc.Value)
			if _dcfbd != nil {
				return _dcfbd
			}
			_fggdce.DragOffAttr = &_cabcf
			continue
		}
		if _fdbfc.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ecdcg, _adgccb := _a.ParseBool(_fdbfc.Value)
			if _adgccb != nil {
				return _adgccb
			}
			_fggdce.CountSubtotalAttr = &_ecdcg
			continue
		}
		if _fdbfc.Name.Local == "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079" {
			_dbfbf, _afdgbf := _fdbfc.Value, error(nil)
			if _afdgbf != nil {
				return _afdgbf
			}
			_fggdce.UniqueMemberPropertyAttr = &_dbfbf
			continue
		}
		if _fdbfc.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_agbga, _gfbe := _a.ParseBool(_fdbfc.Value)
			if _gfbe != nil {
				return _gfbe
			}
			_fggdce.VarPSubtotalAttr = &_agbga
			continue
		}
		if _fdbfc.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dceab, _ccagb := _a.ParseBool(_fdbfc.Value)
			if _ccagb != nil {
				return _ccagb
			}
			_fggdce.StdDevPSubtotalAttr = &_dceab
			continue
		}
		if _fdbfc.Name.Local == "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dcgba, _bbacg := _fdbfc.Value, error(nil)
			if _bbacg != nil {
				return _bbacg
			}
			_fggdce.SubtotalCaptionAttr = &_dcgba
			continue
		}
		if _fdbfc.Name.Local == "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070" {
			_degd, _beeeea := _a.ParseBool(_fdbfc.Value)
			if _beeeea != nil {
				return _beeeea
			}
			_fggdce.ShowPropTipAttr = &_degd
			continue
		}
		if _fdbfc.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077" {
			_fbeab, _bcgcg := _a.ParseBool(_fdbfc.Value)
			if _bcgcg != nil {
				return _bcgcg
			}
			_fggdce.InsertBlankRowAttr = &_fbeab
			continue
		}
		if _fdbfc.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065" {
			_fdddd, _fgffa := _a.ParseBool(_fdbfc.Value)
			if _fgffa != nil {
				return _fgffa
			}
			_fggdce.DefaultAttributeDrillStateAttr = &_fdddd
			continue
		}
		if _fdbfc.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_addg, _gbdcgf := _a.ParseBool(_fdbfc.Value)
			if _gbdcgf != nil {
				return _gbdcgf
			}
			_fggdce.DragToColAttr = &_addg
			continue
		}
		if _fdbfc.Name.Local == "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c" {
			_gdfed, _dgdegc := _a.ParseBool(_fdbfc.Value)
			if _dgdegc != nil {
				return _dgdegc
			}
			_fggdce.HiddenLevelAttr = &_gdfed
			continue
		}
		if _fdbfc.Name.Local == "\u0061\u0078\u0069\u0073" {
			_fggdce.AxisAttr.UnmarshalXMLAttr(_fdbfc)
			continue
		}
		if _fdbfc.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073" {
			_dfef, _geaefa := _a.ParseBool(_fdbfc.Value)
			if _geaefa != nil {
				return _geaefa
			}
			_fggdce.ShowDropDownsAttr = &_dfef
			continue
		}
		if _fdbfc.Name.Local == "\u0073h\u006f\u0077\u0041\u006c\u006c" {
			_cggcd, _cafde := _a.ParseBool(_fdbfc.Value)
			if _cafde != nil {
				return _cafde
			}
			_fggdce.ShowAllAttr = &_cggcd
			continue
		}
		if _fdbfc.Name.Local == "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064" {
			_bedee, _dfaaa := _a.ParseBool(_fdbfc.Value)
			if _dfaaa != nil {
				return _dfaaa
			}
			_fggdce.AllDrilledAttr = &_bedee
			continue
		}
		if _fdbfc.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_eefff, _afagd := _a.ParseBool(_fdbfc.Value)
			if _afagd != nil {
				return _afagd
			}
			_fggdce.VarSubtotalAttr = &_eefff
			continue
		}
	}
_dfceff:
	for {
		_eeba, _gefcf := d.Token()
		if _gefcf != nil {
			return _gefcf
		}
		switch _gdaaa := _eeba.(type) {
		case _gd.StartElement:
			switch _gdaaa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}:
				_fggdce.Items = NewCT_Items()
				if _cafae := d.DecodeElement(_fggdce.Items, &_gdaaa); _cafae != nil {
					return _cafae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}:
				_fggdce.AutoSortScope = NewCT_AutoSortScope()
				if _gbdfa := d.DecodeElement(_fggdce.AutoSortScope, &_gdaaa); _gbdfa != nil {
					return _gbdfa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fggdce.ExtLst = NewCT_ExtensionList()
				if _cfeaa := d.DecodeElement(_fggdce.ExtLst, &_gdaaa); _cfeaa != nil {
					return _cfeaa
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _gdaaa.Name)
				if _bffeg := d.Skip(); _bffeg != nil {
					return _bffeg
				}
			}
		case _gd.EndElement:
			break _dfceff
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalDefinedName and its children
func (_eafd *CT_ExternalDefinedName) Validate() error {
	return _eafd.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

type CT_PCDKPI struct {

	// KPI Unique Name
	UniqueNameAttr string

	// KPI Display Name
	CaptionAttr *string

	// KPI Display Folder
	DisplayFolderAttr *string

	// KPI Measure Group Name
	MeasureGroupAttr *string

	// Parent KPI
	ParentAttr *string

	// KPI Value Unique Name
	ValueAttr string

	// KPI Goal Unique Name
	GoalAttr *string

	// KPI Status Unique Name
	StatusAttr *string

	// KPI Trend Unique Name
	TrendAttr *string

	// KPI Weight Unique Name
	WeightAttr *string

	// Time Member KPI Unique Name
	TimeAttr *string
}

// ValidateWithPath validates the CT_FieldUsage and its children, prefixing error messages with path
func (_adce *CT_FieldUsage) ValidateWithPath(path string) error { return nil }

func (_adfcdg ST_Qualifier) Validate() error { return _adfcdg.ValidateWithPath("") }

type ST_DataValidationErrorStyle byte

func (_gfgef *CT_MetadataStringIndex) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ffcgg := range start.Attr {
		if _ffcgg.Name.Local == "\u0078" {
			_geeba, _ecfa := _a.ParseUint(_ffcgg.Value, 10, 32)
			if _ecfa != nil {
				return _ecfa
			}
			_gfgef.XAttr = uint32(_geeba)
			continue
		}
		if _ffcgg.Name.Local == "\u0073" {
			_agcgfc, _dfcef := _a.ParseBool(_ffcgg.Value)
			if _dfcef != nil {
				return _dfcef
			}
			_gfgef.SAttr = &_agcgfc
			continue
		}
	}
	for {
		_efefa, _eefcf := d.Token()
		if _eefcf != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074a\u0064a\u0074a\u0053t\u0072\u0069\u006e\u0067\u0049\u006e\u0064\u0065\u0078\u003a\u0020\u0025\u0073", _eefcf)
		}
		if _debag, _cgagf := _efefa.(_gd.EndElement); _cgagf && _debag.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ccfbcf *CT_TableMissing) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cdaad ST_HorizontalAlignment) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cbefb := _gd.Attr{}
	_cbefb.Name = name
	switch _cdaad {
	case ST_HorizontalAlignmentUnset:
		_cbefb.Value = ""
	case ST_HorizontalAlignmentGeneral:
		_cbefb.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_HorizontalAlignmentLeft:
		_cbefb.Value = "\u006c\u0065\u0066\u0074"
	case ST_HorizontalAlignmentCenter:
		_cbefb.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_HorizontalAlignmentRight:
		_cbefb.Value = "\u0072\u0069\u0067h\u0074"
	case ST_HorizontalAlignmentFill:
		_cbefb.Value = "\u0066\u0069\u006c\u006c"
	case ST_HorizontalAlignmentJustify:
		_cbefb.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_HorizontalAlignmentCenterContinuous:
		_cbefb.Value = "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case ST_HorizontalAlignmentDistributed:
		_cbefb.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _cbefb, nil
}

func (_eggfdb *EG_ExtensionList) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eggfdb.Ext != nil {
		_ageedf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _fbacf := range _eggfdb.Ext {
			e.EncodeElement(_fbacf, _ageedf)
		}
	}
	return nil
}

const (
	ST_UpdateLinksUnset   ST_UpdateLinks = 0
	ST_UpdateLinksUserSet ST_UpdateLinks = 1
	ST_UpdateLinksNever   ST_UpdateLinks = 2
	ST_UpdateLinksAlways  ST_UpdateLinks = 3
)

func (_acceac *CT_Sheets) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_cbbab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074"}}
	for _, _ecgda := range _acceac.Sheet {
		e.EncodeElement(_ecgda, _cbbab)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableFormula and its children
func (_fedefa *CT_TableFormula) Validate() error {
	return _fedefa.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061")
}

type CT_RevisionFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Row or Column Formatting Change
	XfDxfAttr *bool

	// Style
	SAttr *bool

	// Sequence Of References
	SqrefAttr ST_Sqref

	// Start index
	StartAttr *uint32

	// Length
	LengthAttr *uint32

	// Formatting
	Dxf    *CT_Dxf
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_WorkbookPr and its children, prefixing error messages with path
func (_ggacc *CT_WorkbookPr) ValidateWithPath(path string) error {
	if _ddbbg := _ggacc.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _ddbbg != nil {
		return _ddbbg
	}
	if _dfedff := _ggacc.UpdateLinksAttr.ValidateWithPath(path + "\u002f\u0055p\u0064\u0061\u0074e\u004c\u0069\u006e\u006b\u0073\u0041\u0074\u0074\u0072"); _dfedff != nil {
		return _dfedff
	}
	return nil
}

// Validate validates the CT_WebPublishObject and its children
func (_gdbbf *CT_WebPublishObject) Validate() error {
	return _gdbbf.ValidateWithPath("\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_MetadataTypes and its children, prefixing error messages with path
func (_eaegc *CT_MetadataTypes) ValidateWithPath(path string) error {
	for _eecab, _gafee := range _eaegc.MetadataType {
		if _acefg := _gafee.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004det\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _eecab)); _acefg != nil {
			return _acefg
		}
	}
	return nil
}

func NewCT_ConditionalFormat() *CT_ConditionalFormat {
	_gcbc := &CT_ConditionalFormat{}
	_gcbc.PivotAreas = NewCT_PivotAreas()
	return _gcbc
}

func (_caea *CT_Cell) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _caea.RAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_caea.RAttr)})
	}
	if _caea.SAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_caea.SAttr)})
	}
	if _caea.TAttr != ST_CellTypeUnset {
		_dfcg, _beab := _caea.TAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074"})
		if _beab != nil {
			return _beab
		}
		start.Attr = append(start.Attr, _dfcg)
	}
	if _caea.CmAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_caea.CmAttr)})
	}
	if _caea.VmAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_caea.VmAttr)})
	}
	if _caea.PhAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_caea.PhAttr))})
	}
	e.EncodeToken(start)
	if _caea.F != nil {
		_aca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066"}}
		e.EncodeElement(_caea.F, _aca)
	}
	if _caea.V != nil {
		_dgda := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_e.AddPreserveSpaceAttr(&_dgda, *_caea.V)
		e.EncodeElement(_caea.V, _dgda)
	}
	if _caea.Is != nil {
		_ecd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ai\u0073"}}
		e.EncodeElement(_caea.Is, _ecd)
	}
	if _caea.ExtLst != nil {
		_agaf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_caea.ExtLst, _agaf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_CellSmartTags struct {

	// Reference
	RAttr string

	// Cell Smart Tag
	CellSmartTag []*CT_CellSmartTag
}

func (_cbefc *CT_I) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fcecg := range start.Attr {
		if _fcecg.Name.Local == "\u0074" {
			_cbefc.TAttr.UnmarshalXMLAttr(_fcecg)
			continue
		}
		if _fcecg.Name.Local == "\u0072" {
			_caacb, _abbge := _a.ParseUint(_fcecg.Value, 10, 32)
			if _abbge != nil {
				return _abbge
			}
			_bfeaa := uint32(_caacb)
			_cbefc.RAttr = &_bfeaa
			continue
		}
		if _fcecg.Name.Local == "\u0069" {
			_feacfa, _fbgge := _a.ParseUint(_fcecg.Value, 10, 32)
			if _fbgge != nil {
				return _fbgge
			}
			_eacfe := uint32(_feacfa)
			_cbefc.IAttr = &_eacfe
			continue
		}
	}
_gbafg:
	for {
		_ggead, _bfcef := d.Token()
		if _bfcef != nil {
			return _bfcef
		}
		switch _acfg := _ggead.(type) {
		case _gd.StartElement:
			switch _acfg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_ebadf := NewCT_X()
				if _bcagb := d.DecodeElement(_ebadf, &_acfg); _bcagb != nil {
					return _bcagb
				}
				_cbefc.X = append(_cbefc.X, _ebadf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0049\u0020\u0025\u0076", _acfg.Name)
				if _baaa := d.Skip(); _baaa != nil {
					return _baaa
				}
			}
		case _gd.EndElement:
			break _gbafg
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HierarchyUsage and its children, prefixing error messages with path
func (_cdgcc *CT_HierarchyUsage) ValidateWithPath(path string) error { return nil }

// Validate validates the PivotTableDefinition and its children
func (_gegcf *PivotTableDefinition) Validate() error {
	return _gegcf.ValidateWithPath("P\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}

func (_gadcc *ST_Axis) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gadcc = 0
	case "\u0061x\u0069\u0073\u0052\u006f\u0077":
		*_gadcc = 1
	case "\u0061x\u0069\u0073\u0043\u006f\u006c":
		*_gadcc = 2
	case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
		*_gadcc = 3
	case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gadcc = 4
	}
	return nil
}

// Validate validates the CT_ProtectedRange and its children
func (_fdcfd *CT_ProtectedRange) Validate() error {
	return _fdcfd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065")
}

type Comments struct{ CT_Comments }

func (_aecad ST_MdxKPIProperty) ValidateWithPath(path string) error {
	switch _aecad {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aecad))
	}
	return nil
}

func NewCT_SheetBackgroundPicture() *CT_SheetBackgroundPicture {
	_dbdgbd := &CT_SheetBackgroundPicture{}
	return _dbdgbd
}

// Validate validates the CT_Number and its children
func (_gffea *CT_Number) Validate() error {
	return _gffea.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r")
}

func NewCT_ExtensionList() *CT_ExtensionList { _fggad := &CT_ExtensionList{}; return _fggad }

// ValidateWithPath validates the CT_IconSet and its children, prefixing error messages with path
func (_ababbc *CT_IconSet) ValidateWithPath(path string) error {
	if _gbggbc := _ababbc.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _gbggbc != nil {
		return _gbggbc
	}
	for _aegca, _fbbga := range _ababbc.Cfvo {
		if _cffda := _fbbga.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _aegca)); _cffda != nil {
			return _cffda
		}
	}
	return nil
}

type CT_SheetView struct {

	// Window Protection
	WindowProtectionAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColHeadersAttr *bool

	// Show Zero Values
	ShowZerosAttr *bool

	// Right To Left
	RightToLeftAttr *bool

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Show Ruler
	ShowRulerAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool

	// Default Grid Color
	DefaultGridColorAttr *bool

	// Show White Space
	ShowWhiteSpaceAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Color Id
	ColorIdAttr *uint32

	// Zoom Scale
	ZoomScaleAttr *uint32

	// Zoom Scale Normal View
	ZoomScaleNormalAttr *uint32

	// Zoom Scale Page Break Preview
	ZoomScaleSheetLayoutViewAttr *uint32

	// Zoom Scale Page Layout View
	ZoomScalePageLayoutViewAttr *uint32

	// Workbook View Index
	WorkbookViewIdAttr uint32

	// View Pane
	Pane *CT_Pane

	// Selection
	Selection []*CT_Selection

	// PivotTable Selection
	PivotSelection []*CT_PivotSelection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewRevisions() *Revisions {
	_ebcff := &Revisions{}
	_ebcff.CT_Revisions = *NewCT_Revisions()
	return _ebcff
}

func NewCT_CellXfs() *CT_CellXfs { _acdb := &CT_CellXfs{}; return _acdb }

func (_bdcaa *CT_DdeItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cacc:
	for {
		_dafaf, _gbdce := d.Token()
		if _gbdce != nil {
			return _gbdce
		}
		switch _eeacd := _dafaf.(type) {
		case _gd.StartElement:
			switch _eeacd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}:
				_cddgb := NewCT_DdeItem()
				if _gdcf := d.DecodeElement(_cddgb, &_eeacd); _gdcf != nil {
					return _gdcf
				}
				_bdcaa.DdeItem = append(_bdcaa.DdeItem, _cddgb)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _eeacd.Name)
				if _ededa := d.Skip(); _ededa != nil {
					return _ededa
				}
			}
		case _gd.EndElement:
			break _cacc
		case _gd.CharData:
		}
	}
	return nil
}

func (_deafb *ST_ItemType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_deafb = 0
	case "\u0064\u0061\u0074\u0061":
		*_deafb = 1
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_deafb = 2
	case "\u0073\u0075\u006d":
		*_deafb = 3
	case "\u0063\u006f\u0075\u006e\u0074\u0041":
		*_deafb = 4
	case "\u0061\u0076\u0067":
		*_deafb = 5
	case "\u006d\u0061\u0078":
		*_deafb = 6
	case "\u006d\u0069\u006e":
		*_deafb = 7
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_deafb = 8
	case "\u0063\u006f\u0075n\u0074":
		*_deafb = 9
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_deafb = 10
	case "\u0073t\u0064\u0044\u0065\u0076\u0050":
		*_deafb = 11
	case "\u0076\u0061\u0072":
		*_deafb = 12
	case "\u0076\u0061\u0072\u0050":
		*_deafb = 13
	case "\u0067\u0072\u0061n\u0064":
		*_deafb = 14
	case "\u0062\u006c\u0061n\u006b":
		*_deafb = 15
	}
	return nil
}

type CT_QueryTable struct {

	// QueryTable Name
	NameAttr string

	// First Row Column Titles
	HeadersAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Disable Refresh
	DisableRefreshAttr *bool

	// Background Refresh
	BackgroundRefreshAttr *bool

	// First Background Refresh
	FirstBackgroundRefreshAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Grow Shrink Type
	GrowShrinkTypeAttr ST_GrowShrinkType

	// Fill Adjacent Formulas
	FillFormulasAttr *bool

	// Remove Data On Save
	RemoveDataOnSaveAttr *bool

	// Disable Edit
	DisableEditAttr *bool

	// Preserve Formatting On Refresh
	PreserveFormattingAttr *bool

	// Adjust Column Width On Refresh
	AdjustColumnWidthAttr *bool

	// Intermediate
	IntermediateAttr *bool

	// Connection Id
	ConnectionIdAttr uint32

	// QueryTable Refresh Information
	QueryTableRefresh *CT_QueryTableRefresh

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

type CT_Query struct {

	// MDX Query String
	MdxAttr string

	// Tuples
	Tpls *CT_Tuples
}

type CT_Sets struct {

	// Tuple Set Count
	CountAttr *uint32

	// OLAP Set
	Set []*CT_Set
}

func (_fcfbe *CT_ExternalBook) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fcfbe.IdAttr)})
	e.EncodeToken(start)
	if _fcfbe.SheetNames != nil {
		_dadd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_fcfbe.SheetNames, _dadd)
	}
	if _fcfbe.DefinedNames != nil {
		_accea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_fcfbe.DefinedNames, _accea)
	}
	if _fcfbe.SheetDataSet != nil {
		_gacb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}}
		e.EncodeElement(_fcfbe.SheetDataSet, _gacb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_RevisionQueryTableField() *CT_RevisionQueryTableField {
	_edbea := &CT_RevisionQueryTableField{}
	return _edbea
}

func NewCT_GroupLevel() *CT_GroupLevel { _acda := &CT_GroupLevel{}; return _acda }

func NewCT_XStringElement() *CT_XStringElement { _eaggef := &CT_XStringElement{}; return _eaggef }

func (_aafbd *CT_SheetViews) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_dccbfd:
	for {
		_agfgg, _ggffc := d.Token()
		if _ggffc != nil {
			return _ggffc
		}
		switch _efdb := _agfgg.(type) {
		case _gd.StartElement:
			switch _efdb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_ebafg := NewCT_SheetView()
				if _cbddg := d.DecodeElement(_ebafg, &_efdb); _cbddg != nil {
					return _cbddg
				}
				_aafbd.SheetView = append(_aafbd.SheetView, _ebafg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aafbd.ExtLst = NewCT_ExtensionList()
				if _gagadg := d.DecodeElement(_aafbd.ExtLst, &_efdb); _gagadg != nil {
					return _gagadg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073 \u0025\u0076", _efdb.Name)
				if _edaac := d.Skip(); _edaac != nil {
					return _edaac
				}
			}
		case _gd.EndElement:
			break _dccbfd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_PivotAreaReferences() *CT_PivotAreaReferences {
	_caaeab := &CT_PivotAreaReferences{}
	return _caaeab
}

func (_gafb *CT_CacheSource) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_cbff, _bad := _gafb.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _bad != nil {
		return _bad
	}
	start.Attr = append(start.Attr, _cbff)
	if _gafb.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gafb.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _gafb.WorksheetSource != nil {
		_gbe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065"}}
		e.EncodeElement(_gafb.WorksheetSource, _gbe)
	}
	if _gafb.Consolidation != nil {
		_fgac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0063\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gafb.Consolidation, _fgac)
	}
	if _gafb.ExtLst != nil {
		_cgcd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gafb.ExtLst, _cgcd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_DbPr struct {

	// Connection String
	ConnectionAttr string

	// Command Text
	CommandAttr *string

	// Command Text
	ServerCommandAttr *string

	// OLE DB Command Type
	CommandTypeAttr *uint32
}

func (_dbegfe *ST_CellFormulaType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dbegfe = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_dbegfe = 1
	case "\u0061\u0072\u0072a\u0079":
		*_dbegfe = 2
	case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
		*_dbegfe = 3
	case "\u0073\u0068\u0061\u0072\u0065\u0064":
		*_dbegfe = 4
	}
	return nil
}

func (_ccbbg *CT_Filter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fefga := range start.Attr {
		if _fefga.Name.Local == "\u0076\u0061\u006c" {
			_bacac, _egfgb := _fefga.Value, error(nil)
			if _egfgb != nil {
				return _egfgb
			}
			_ccbbg.ValAttr = &_bacac
			continue
		}
	}
	for {
		_afedd, _cbeag := d.Token()
		if _cbeag != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u003a\u0020\u0025\u0073", _cbeag)
		}
		if _defge, _dece := _afedd.(_gd.EndElement); _dece && _defge.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cdagb *ST_Visibility) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fdgab, _fddecd := d.Token()
	if _fddecd != nil {
		return _fddecd
	}
	if _bdabg, _dcefef := _fdgab.(_gd.EndElement); _dcefef && _bdabg.Name == start.Name {
		*_cdagb = 1
		return nil
	}
	if _aegaeb, _edfabe := _fdgab.(_gd.CharData); !_edfabe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdgab)
	} else {
		switch string(_aegaeb) {
		case "":
			*_cdagb = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_cdagb = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_cdagb = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_cdagb = 3
		}
	}
	_fdgab, _fddecd = d.Token()
	if _fddecd != nil {
		return _fddecd
	}
	if _abeebb, _cedfa := _fdgab.(_gd.EndElement); _cedfa && _abeebb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdgab)
}

// Validate validates the CT_ExternalCell and its children
func (_bdbe *CT_ExternalCell) Validate() error {
	return _bdbe.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c")
}

const (
	ST_CellFormulaTypeUnset     ST_CellFormulaType = 0
	ST_CellFormulaTypeNormal    ST_CellFormulaType = 1
	ST_CellFormulaTypeArray     ST_CellFormulaType = 2
	ST_CellFormulaTypeDataTable ST_CellFormulaType = 3
	ST_CellFormulaTypeShared    ST_CellFormulaType = 4
)

// Validate validates the CT_Top10 and its children
func (_febea *CT_Top10) Validate() error {
	return _febea.ValidateWithPath("\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030")
}

func (_gbbaef *CT_RowFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebfcc := range start.Attr {
		if _ebfcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_febec, _bbdbf := _a.ParseUint(_ebfcc.Value, 10, 32)
			if _bbdbf != nil {
				return _bbdbf
			}
			_abfcd := uint32(_febec)
			_gbbaef.CountAttr = &_abfcd
			continue
		}
	}
_dggd:
	for {
		_cddegb, _dgcgc := d.Token()
		if _dgcgc != nil {
			return _dgcgc
		}
		switch _deddec := _cddegb.(type) {
		case _gd.StartElement:
			switch _deddec.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_aaced := NewCT_Field()
				if _dabef := d.DecodeElement(_aaced, &_deddec); _dabef != nil {
					return _dabef
				}
				_gbbaef.Field = append(_gbbaef.Field, _aaced)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u006f\u0077F\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _deddec.Name)
				if _egfeb := d.Skip(); _egfeb != nil {
					return _egfeb
				}
			}
		case _gd.EndElement:
			break _dggd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_Fills() *CT_Fills { _dfdge := &CT_Fills{}; return _dfdge }

func (_eeddc ST_VolValueType) Validate() error { return _eeddc.ValidateWithPath("") }

// ValidateWithPath validates the CT_Users and its children, prefixing error messages with path
func (_gacfa *CT_Users) ValidateWithPath(path string) error {
	for _bgadd, _ggfbd := range _gacfa.UserInfo {
		if _gafbb := _ggfbd.ValidateWithPath(_b.Sprintf("\u0025s\u002fU\u0073\u0065\u0072\u0049\u006e\u0066\u006f\u005b\u0025\u0064\u005d", path, _bgadd)); _gafbb != nil {
			return _gafbb
		}
	}
	return nil
}

func (_edfff *CT_LevelGroup) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_edfff.GroupMembers = NewCT_GroupMembers()
	for _, _cfcd := range start.Attr {
		if _cfcd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gfcf, _eeabb := _cfcd.Value, error(nil)
			if _eeabb != nil {
				return _eeabb
			}
			_edfff.NameAttr = _gfcf
			continue
		}
		if _cfcd.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cbdfb, _gbgfa := _cfcd.Value, error(nil)
			if _gbgfa != nil {
				return _gbgfa
			}
			_edfff.UniqueNameAttr = _cbdfb
			continue
		}
		if _cfcd.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_baeg, _dfegb := _cfcd.Value, error(nil)
			if _dfegb != nil {
				return _dfegb
			}
			_edfff.CaptionAttr = _baeg
			continue
		}
		if _cfcd.Name.Local == "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074" {
			_cfcbg, _gcdcd := _cfcd.Value, error(nil)
			if _gcdcd != nil {
				return _gcdcd
			}
			_edfff.UniqueParentAttr = &_cfcbg
			continue
		}
		if _cfcd.Name.Local == "\u0069\u0064" {
			_abge, _ddebd := _a.ParseInt(_cfcd.Value, 10, 32)
			if _ddebd != nil {
				return _ddebd
			}
			_geecb := int32(_abge)
			_edfff.IdAttr = &_geecb
			continue
		}
	}
_bgdf:
	for {
		_aabfb, _ebcc := d.Token()
		if _ebcc != nil {
			return _ebcc
		}
		switch _daeba := _aabfb.(type) {
		case _gd.StartElement:
			switch _daeba.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}:
				if _fbbbc := d.DecodeElement(_edfff.GroupMembers, &_daeba); _fbbbc != nil {
					return _fbbbc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004ce\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _daeba.Name)
				if _dgcee := d.Skip(); _dgcee != nil {
					return _dgcee
				}
			}
		case _gd.EndElement:
			break _bgdf
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_IgnoredError() *CT_IgnoredError { _gbedg := &CT_IgnoredError{}; return _gbedg }

// ValidateWithPath validates the CT_Pane and its children, prefixing error messages with path
func (_fdfcf *CT_Pane) ValidateWithPath(path string) error {
	if _babeeg := _fdfcf.ActivePaneAttr.ValidateWithPath(path + "\u002fA\u0063t\u0069\u0076\u0065\u0050\u0061\u006e\u0065\u0041\u0074\u0074\u0072"); _babeeg != nil {
		return _babeeg
	}
	if _fegbc := _fdfcf.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _fegbc != nil {
		return _fegbc
	}
	return nil
}

// ValidateWithPath validates the CT_MeasureGroups and its children, prefixing error messages with path
func (_bdcbf *CT_MeasureGroups) ValidateWithPath(path string) error {
	for _cgaeb, _affa := range _bdcbf.MeasureGroup {
		if _aeaa := _affa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004dea\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _cgaeb)); _aeaa != nil {
			return _aeaa
		}
	}
	return nil
}

func (_cccab *VolTypes) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073"
	return _cccab.CT_VolTypes.MarshalXML(e, start)
}

// Validate validates the CT_DefinedNames and its children
func (_aaafc *CT_DefinedNames) Validate() error {
	return _aaafc.ValidateWithPath("\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}

func NewCT_OleObjects() *CT_OleObjects { _ceaag := &CT_OleObjects{}; return _ceaag }

// ValidateWithPath validates the CT_IgnoredError and its children, prefixing error messages with path
func (_cdcbb *CT_IgnoredError) ValidateWithPath(path string) error { return nil }

func (_gdgg *CT_DefinedNames) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _gdgg.DefinedName != nil {
		_gceec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _gcdbg := range _gdgg.DefinedName {
			e.EncodeElement(_gcdbg, _gceec)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dgbaf ST_Orientation) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_gbafd := _gd.Attr{}
	_gbafd.Name = name
	switch _dgbaf {
	case ST_OrientationUnset:
		_gbafd.Value = ""
	case ST_OrientationDefault:
		_gbafd.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_OrientationPortrait:
		_gbafd.Value = "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case ST_OrientationLandscape:
		_gbafd.Value = "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return _gbafd, nil
}

type CT_WebPublishItems struct {

	// Web Publishing Items Count
	CountAttr *uint32

	// Web Publishing Item
	WebPublishItem []*CT_WebPublishItem
}

func (_dfgcd ST_CellSpans) String() string { return _d.Join(_dfgcd, "\u0020") }

// Validate validates the CT_CellWatches and its children
func (_bgce *CT_CellWatches) Validate() error {
	return _bgce.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073")
}

// Validate validates the CT_CustomSheetViews and its children
func (_bgfdac *CT_CustomSheetViews) Validate() error {
	return _bgfdac.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

func (_caecfb *ST_DateTimeGrouping) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_egebdd, _ggcad := d.Token()
	if _ggcad != nil {
		return _ggcad
	}
	if _bebeb, _efeae := _egebdd.(_gd.EndElement); _efeae && _bebeb.Name == start.Name {
		*_caecfb = 1
		return nil
	}
	if _feedgf, _aagdbg := _egebdd.(_gd.CharData); !_aagdbg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egebdd)
	} else {
		switch string(_feedgf) {
		case "":
			*_caecfb = 0
		case "\u0079\u0065\u0061\u0072":
			*_caecfb = 1
		case "\u006d\u006f\u006et\u0068":
			*_caecfb = 2
		case "\u0064\u0061\u0079":
			*_caecfb = 3
		case "\u0068\u006f\u0075\u0072":
			*_caecfb = 4
		case "\u006d\u0069\u006e\u0075\u0074\u0065":
			*_caecfb = 5
		case "\u0073\u0065\u0063\u006f\u006e\u0064":
			*_caecfb = 6
		}
	}
	_egebdd, _ggcad = d.Token()
	if _ggcad != nil {
		return _ggcad
	}
	if _gddecb, _gagae := _egebdd.(_gd.EndElement); _gagae && _gddecb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egebdd)
}

func (_feagc *CT_OlapPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _feagc.LocalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063a\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feagc.LocalAttr))})
	}
	if _feagc.LocalConnectionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_feagc.LocalConnectionAttr)})
	}
	if _feagc.LocalRefreshAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feagc.LocalRefreshAttr))})
	}
	if _feagc.SendLocaleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feagc.SendLocaleAttr))})
	}
	if _feagc.RowDrillCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_feagc.RowDrillCountAttr)})
	}
	if _feagc.ServerFillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feagc.ServerFillAttr))})
	}
	if _feagc.ServerNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feagc.ServerNumberFormatAttr))})
	}
	if _feagc.ServerFontAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feagc.ServerFontAttr))})
	}
	if _feagc.ServerFontColorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feagc.ServerFontColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_DefinedNames() *CT_DefinedNames { _bfcg := &CT_DefinedNames{}; return _bfcg }

func NewCT_Macrosheet() *CT_Macrosheet {
	_dafdd := &CT_Macrosheet{}
	_dafdd.SheetData = NewCT_SheetData()
	return _dafdd
}

func (_eeded *CT_RevisionSheetRename) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _eeded.SheetIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fl\u0064\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _eeded.OldNameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006ee\u0077\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _eeded.NewNameAttr)})
	if _eeded.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_eeded.RIdAttr)})
	}
	if _eeded.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eeded.UaAttr))})
	}
	if _eeded.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eeded.RaAttr))})
	}
	e.EncodeToken(start)
	if _eeded.ExtLst != nil {
		_fccddg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eeded.ExtLst, _fccddg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ebdbd ST_Orientation) ValidateWithPath(path string) error {
	switch _ebdbd {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebdbd))
	}
	return nil
}

type CT_SmartTagTypes struct {

	// Smart Tag Type
	SmartTagType []*CT_SmartTagType
}

type ST_SheetViewType byte

func (_bgfdd *CT_SmartTagPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fbfdgg := range start.Attr {
		if _fbfdgg.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_bgdcg, _cagdb := _a.ParseBool(_fbfdgg.Value)
			if _cagdb != nil {
				return _cagdb
			}
			_bgfdd.EmbedAttr = &_bgdcg
			continue
		}
		if _fbfdgg.Name.Local == "\u0073\u0068\u006f\u0077" {
			_bgfdd.ShowAttr.UnmarshalXMLAttr(_fbfdgg)
			continue
		}
	}
	for {
		_efcfa, _dgada := d.Token()
		if _dgada != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0053m\u0061r\u0074T\u0061\u0067\u0050\u0072\u003a\u0020\u0025s", _dgada)
		}
		if _ccebb, _ecafgg := _efcfa.(_gd.EndElement); _ecafgg && _ccebb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_PCDKPIs and its children
func (_abdbf *CT_PCDKPIs) Validate() error {
	return _abdbf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073")
}

// ValidateWithPath validates the CT_SharedItems and its children, prefixing error messages with path
func (_fefag *CT_SharedItems) ValidateWithPath(path string) error {
	for _acdbae, _edddd := range _fefag.M {
		if _gdgbf := _edddd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _acdbae)); _gdgbf != nil {
			return _gdgbf
		}
	}
	for _ededac, _fbcefd := range _fefag.N {
		if _aagaff := _fbcefd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _ededac)); _aagaff != nil {
			return _aagaff
		}
	}
	for _gfgddg, _cggea := range _fefag.B {
		if _dccge := _cggea.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _gfgddg)); _dccge != nil {
			return _dccge
		}
	}
	for _fdfeb, _fcgee := range _fefag.E {
		if _deffg := _fcgee.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _fdfeb)); _deffg != nil {
			return _deffg
		}
	}
	for _gecba, _faegad := range _fefag.S {
		if _cgcff := _faegad.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _gecba)); _cgcff != nil {
			return _cgcff
		}
	}
	for _bfaaec, _eagbcf := range _fefag.D {
		if _gdeea := _eagbcf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _bfaaec)); _gdeea != nil {
			return _gdeea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataStrings and its children, prefixing error messages with path
func (_gfcce *CT_MetadataStrings) ValidateWithPath(path string) error {
	for _egeedd, _ffeaa := range _gfcce.S {
		if _ffgfe := _ffeaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _egeedd)); _ffgfe != nil {
			return _ffgfe
		}
	}
	return nil
}

type CT_Map struct {

	// XML Mapping ID
	IDAttr uint32

	// XML Mapping Name
	NameAttr string

	// Root Element Name
	RootElementAttr string

	// Schema Name
	SchemaIDAttr string

	// Show Validation Errors
	ShowImportExportValidationErrorsAttr bool

	// AutoFit Table on Refresh
	AutoFitAttr bool

	// Append Data to Table
	AppendAttr bool

	// Preserve AutoFilter State
	PreserveSortAFLayoutAttr bool

	// Preserve Cell Formatting
	PreserveFormatAttr bool

	// XML Mapping
	DataBinding *CT_DataBinding
}

// ValidateWithPath validates the CT_OleItems and its children, prefixing error messages with path
func (_gdfge *CT_OleItems) ValidateWithPath(path string) error {
	for _egffd, _bbedc := range _gdfge.OleItem {
		if _gfccbf := _bbedc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004f\u006c\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _egffd)); _gfccbf != nil {
			return _gfccbf
		}
	}
	return nil
}

// Validate validates the CT_TableColumn and its children
func (_caaad *CT_TableColumn) Validate() error {
	return _caaad.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e")
}

type CT_SharedUser struct {

	// User Revisions GUID
	GuidAttr string

	// User Name
	NameAttr string

	// User Id
	IdAttr int32

	// Date Time
	DateTimeAttr _db.Time
	ExtLst       *CT_ExtensionList
}

// ValidateWithPath validates the CT_InputCells and its children, prefixing error messages with path
func (_edeb *CT_InputCells) ValidateWithPath(path string) error { return nil }

func (_bbbgd *CT_DataRefs) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bbbgd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bbbgd.CountAttr)})
	}
	e.EncodeToken(start)
	if _bbbgd.DataRef != nil {
		_fdbgf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066"}}
		for _, _efafa := range _bbbgd.DataRef {
			e.EncodeElement(_efafa, _fdbgf)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QueryTableDeletedFields and its children
func (_eeagf *CT_QueryTableDeletedFields) Validate() error {
	return _eeagf.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073")
}

func NewCT_FieldsUsage() *CT_FieldsUsage { _fgfgd := &CT_FieldsUsage{}; return _fgfgd }

func (_deeef *CT_ExternalRow) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gafd := range start.Attr {
		if _gafd.Name.Local == "\u0072" {
			_ccdf, _adegd := _a.ParseUint(_gafd.Value, 10, 32)
			if _adegd != nil {
				return _adegd
			}
			_deeef.RAttr = uint32(_ccdf)
			continue
		}
	}
_gdee:
	for {
		_fgaef, _cfbdd := d.Token()
		if _cfbdd != nil {
			return _cfbdd
		}
		switch _fgbbc := _fgaef.(type) {
		case _gd.StartElement:
			switch _fgbbc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}:
				_eeef := NewCT_ExternalCell()
				if _ebaaa := d.DecodeElement(_eeef, &_fgbbc); _ebaaa != nil {
					return _ebaaa
				}
				_deeef.Cell = append(_deeef.Cell, _eeef)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061l\u0052o\u0077\u0020\u0025\u0076", _fgbbc.Name)
				if _acedg := d.Skip(); _acedg != nil {
					return _acedg
				}
			}
		case _gd.EndElement:
			break _gdee
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_RevisionMove() *CT_RevisionMove { _cfbga := &CT_RevisionMove{}; return _cfbga }

type CT_TableMissing struct{}

func NewCT_FunctionGroup() *CT_FunctionGroup { _ggcec := &CT_FunctionGroup{}; return _ggcec }

type CT_RevisionMove struct {

	// Sheet Id
	SheetIdAttr uint32

	// Source
	SourceAttr string

	// Destination
	DestinationAttr string

	// Source Sheet Id
	SourceSheetIdAttr *uint32

	// Undo
	Undo []*CT_UndoInfo

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

// ValidateWithPath validates the Sst and its children, prefixing error messages with path
func (_fbdbf *Sst) ValidateWithPath(path string) error {
	if _gcabcd := _fbdbf.CT_Sst.ValidateWithPath(path); _gcabcd != nil {
		return _gcabcd
	}
	return nil
}

func (_faga *CT_ChartFormats) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _feec := range start.Attr {
		if _feec.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cadf, _bfbc := _a.ParseUint(_feec.Value, 10, 32)
			if _bfbc != nil {
				return _bfbc
			}
			_gbgcb := uint32(_cadf)
			_faga.CountAttr = &_gbgcb
			continue
		}
	}
_dabc:
	for {
		_caaf, _cbfdg := d.Token()
		if _cbfdg != nil {
			return _cbfdg
		}
		switch _bcfg := _caaf.(type) {
		case _gd.StartElement:
			switch _bcfg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_dcbac := NewCT_ChartFormat()
				if _gbad := d.DecodeElement(_dcbac, &_bcfg); _gbad != nil {
					return _gbad
				}
				_faga.ChartFormat = append(_faga.ChartFormat, _dcbac)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _bcfg.Name)
				if _gbef := d.Skip(); _gbef != nil {
					return _gbef
				}
			}
		case _gd.EndElement:
			break _dabc
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_CalcChain() *CT_CalcChain { _ebcd := &CT_CalcChain{}; return _ebcd }

// Validate validates the CT_DataBinding and its children
func (_cfbef *CT_DataBinding) Validate() error {
	return _cfbef.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067")
}

func (_fedb *CT_FilterColumn) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006cI\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fedb.ColIdAttr)})
	if _fedb.HiddenButtonAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fedb.HiddenButtonAttr))})
	}
	if _fedb.ShowButtonAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fedb.ShowButtonAttr))})
	}
	e.EncodeToken(start)
	if _fedb.Filters != nil {
		_afaf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_fedb.Filters, _afaf)
	}
	if _fedb.Top10 != nil {
		_gggga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070\u0031\u0030"}}
		e.EncodeElement(_fedb.Top10, _gggga)
	}
	if _fedb.CustomFilters != nil {
		_egabb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_fedb.CustomFilters, _egabb)
	}
	if _fedb.DynamicFilter != nil {
		_ddeff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0064\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fedb.DynamicFilter, _ddeff)
	}
	if _fedb.ColorFilter != nil {
		_bdbbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fedb.ColorFilter, _bdbbb)
	}
	if _fedb.IconFilter != nil {
		_ggceb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fedb.IconFilter, _ggceb)
	}
	if _fedb.ExtLst != nil {
		_eaafa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fedb.ExtLst, _eaafa)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gagadf ST_MdxSetOrder) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_egded := _gd.Attr{}
	_egded.Name = name
	switch _gagadf {
	case ST_MdxSetOrderUnset:
		_egded.Value = ""
	case ST_MdxSetOrderU:
		_egded.Value = "\u0075"
	case ST_MdxSetOrderA:
		_egded.Value = "\u0061"
	case ST_MdxSetOrderD:
		_egded.Value = "\u0064"
	case ST_MdxSetOrderAa:
		_egded.Value = "\u0061\u0061"
	case ST_MdxSetOrderAd:
		_egded.Value = "\u0061\u0064"
	case ST_MdxSetOrderNa:
		_egded.Value = "\u006e\u0061"
	case ST_MdxSetOrderNd:
		_egded.Value = "\u006e\u0064"
	}
	return _egded, nil
}

func NewCT_PivotFilter() *CT_PivotFilter {
	_efgae := &CT_PivotFilter{}
	_efgae.TypeAttr = ST_PivotFilterType(1)
	_efgae.AutoFilter = NewCT_AutoFilter()
	return _efgae
}

type ST_FormulaExpression byte

func NewCT_DdeItems() *CT_DdeItems { _cafad := &CT_DdeItems{}; return _cafad }

type ST_PaneState byte

func (_fbbg *CT_Error) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _efgb := range start.Attr {
		if _efgb.Name.Local == "\u0066\u0063" {
			_gbgbd, _gcgfa := _efgb.Value, error(nil)
			if _gcgfa != nil {
				return _gcgfa
			}
			_fbbg.FcAttr = &_gbgbd
			continue
		}
		if _efgb.Name.Local == "\u0076" {
			_bbaaa, _fcdab := _efgb.Value, error(nil)
			if _fcdab != nil {
				return _fcdab
			}
			_fbbg.VAttr = _bbaaa
			continue
		}
		if _efgb.Name.Local == "\u0066" {
			_dgdd, _bfcdb := _a.ParseBool(_efgb.Value)
			if _bfcdb != nil {
				return _bfcdb
			}
			_fbbg.FAttr = &_dgdd
			continue
		}
		if _efgb.Name.Local == "\u0063" {
			_ecfff, _bgbeb := _efgb.Value, error(nil)
			if _bgbeb != nil {
				return _bgbeb
			}
			_fbbg.CAttr = &_ecfff
			continue
		}
		if _efgb.Name.Local == "\u0063\u0070" {
			_cdefd, _ddfg := _a.ParseUint(_efgb.Value, 10, 32)
			if _ddfg != nil {
				return _ddfg
			}
			_ebga := uint32(_cdefd)
			_fbbg.CpAttr = &_ebga
			continue
		}
		if _efgb.Name.Local == "\u0069\u006e" {
			_edadaa, _bcdbc := _a.ParseUint(_efgb.Value, 10, 32)
			if _bcdbc != nil {
				return _bcdbc
			}
			_bdge := uint32(_edadaa)
			_fbbg.InAttr = &_bdge
			continue
		}
		if _efgb.Name.Local == "\u0062\u0063" {
			_fdefa, _decac := _efgb.Value, error(nil)
			if _decac != nil {
				return _decac
			}
			_fbbg.BcAttr = &_fdefa
			continue
		}
		if _efgb.Name.Local == "\u0075" {
			_baggb, _ddafc := _a.ParseBool(_efgb.Value)
			if _ddafc != nil {
				return _ddafc
			}
			_fbbg.UAttr = &_baggb
			continue
		}
		if _efgb.Name.Local == "\u0069" {
			_abda, _gbgf := _a.ParseBool(_efgb.Value)
			if _gbgf != nil {
				return _gbgf
			}
			_fbbg.IAttr = &_abda
			continue
		}
		if _efgb.Name.Local == "\u0075\u006e" {
			_eeebb, _agbegb := _a.ParseBool(_efgb.Value)
			if _agbegb != nil {
				return _agbegb
			}
			_fbbg.UnAttr = &_eeebb
			continue
		}
		if _efgb.Name.Local == "\u0073\u0074" {
			_edfed, _fbfdc := _a.ParseBool(_efgb.Value)
			if _fbfdc != nil {
				return _fbfdc
			}
			_fbbg.StAttr = &_edfed
			continue
		}
		if _efgb.Name.Local == "\u0062" {
			_gefd, _cdbgb := _a.ParseBool(_efgb.Value)
			if _cdbgb != nil {
				return _cdbgb
			}
			_fbbg.BAttr = &_gefd
			continue
		}
	}
_fdaba:
	for {
		_bbfca, _eead := d.Token()
		if _eead != nil {
			return _eead
		}
		switch _ddfcd := _bbfca.(type) {
		case _gd.StartElement:
			switch _ddfcd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fbbg.Tpls = NewCT_Tuples()
				if _bbddb := d.DecodeElement(_fbbg.Tpls, &_ddfcd); _bbddb != nil {
					return _bbddb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fbeda := NewCT_X()
				if _fadfb := d.DecodeElement(_fbeda, &_ddfcd); _fadfb != nil {
					return _fadfb
				}
				_fbbg.X = append(_fbbg.X, _fbeda)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0076", _ddfcd.Name)
				if _aagg := d.Skip(); _aagg != nil {
					return _aagg
				}
			}
		case _gd.EndElement:
			break _fdaba
		case _gd.CharData:
		}
	}
	return nil
}

func (_ecfffe ST_VolValueType) ValidateWithPath(path string) error {
	switch _ecfffe {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecfffe))
	}
	return nil
}

func (_aede *CT_SheetIdMap) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aede.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aede.CountAttr)})
	}
	e.EncodeToken(start)
	_gegae := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064"}}
	for _, _bgeagd := range _aede.SheetId {
		e.EncodeElement(_bgeagd, _gegae)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_PivotField struct {

	// Field Name
	NameAttr *string

	// Axis
	AxisAttr ST_Axis

	// Data Field
	DataFieldAttr *bool

	// Custom Subtotal Caption
	SubtotalCaptionAttr *string

	// Show PivotField Header Drop Downs
	ShowDropDownsAttr *bool

	// Hidden Level
	HiddenLevelAttr *bool

	// Unique Member Property
	UniqueMemberPropertyAttr *string

	// Compact
	CompactAttr *bool

	// All Items Expanded
	AllDrilledAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Outline Items
	OutlineAttr *bool

	// Subtotals At Top
	SubtotalTopAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// Drag Field to Page
	DragToPageAttr *bool

	// Field Can Drag to Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Show All Items
	ShowAllAttr *bool

	// Insert Blank Row
	InsertBlankRowAttr *bool

	// Server-based Page Field
	ServerFieldAttr *bool

	// Insert Item Page Break
	InsertPageBreakAttr *bool

	// Auto Show
	AutoShowAttr *bool

	// Top Auto Show
	TopAutoShowAttr *bool

	// Hide New Items
	HideNewItemsAttr *bool

	// Measure Filter
	MeasureFilterAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Items Per Page Count
	ItemPageCountAttr *uint32

	// Auto Sort Type
	SortTypeAttr ST_FieldSortType

	// Data Source Sort
	DataSourceSortAttr *bool

	// Auto Sort
	NonAutoSortDefaultAttr *bool

	// Auto Show Rank By
	RankByAttr *uint32

	// Show Default Subtotal
	DefaultSubtotalAttr *bool

	// Sum Subtotal
	SumSubtotalAttr *bool

	// CountA
	CountASubtotalAttr *bool

	// Average
	AvgSubtotalAttr *bool

	// Max Subtotal
	MaxSubtotalAttr *bool

	// Min Subtotal
	MinSubtotalAttr *bool

	// Product Subtotal
	ProductSubtotalAttr *bool

	// Count
	CountSubtotalAttr *bool

	// StdDev Subtotal
	StdDevSubtotalAttr *bool

	// StdDevP Subtotal
	StdDevPSubtotalAttr *bool

	// Variance Subtotal
	VarSubtotalAttr *bool

	// VarP Subtotal
	VarPSubtotalAttr *bool

	// Show Member Property in Cell
	ShowPropCellAttr *bool

	// Show Member Property ToolTip
	ShowPropTipAttr *bool

	// Show As Caption
	ShowPropAsCaptionAttr *bool

	// Drill State
	DefaultAttributeDrillStateAttr *bool

	// Field Items
	Items *CT_Items

	// AutoSort Scope
	AutoSortScope *CT_AutoSortScope

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bebffb ST_PaneState) Validate() error { return _bebffb.ValidateWithPath("") }

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_ddfe *CT_HeaderFooter) ValidateWithPath(path string) error { return nil }

func (_cadbb *ST_SheetViewType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fbccgd, _cbgfcd := d.Token()
	if _cbgfcd != nil {
		return _cbgfcd
	}
	if _fccea, _ccbea := _fbccgd.(_gd.EndElement); _ccbea && _fccea.Name == start.Name {
		*_cadbb = 1
		return nil
	}
	if _cddde, _aeaaf := _fbccgd.(_gd.CharData); !_aeaaf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbccgd)
	} else {
		switch string(_cddde) {
		case "":
			*_cadbb = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_cadbb = 1
		case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
			*_cadbb = 2
		case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
			*_cadbb = 3
		}
	}
	_fbccgd, _cbgfcd = d.Token()
	if _cbgfcd != nil {
		return _cbgfcd
	}
	if _ffdfcf, _ccbfbbd := _fbccgd.(_gd.EndElement); _ccbfbbd && _ffdfcf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbccgd)
}

const (
	ST_TextHAlignUnset       ST_TextHAlign = 0
	ST_TextHAlignLeft        ST_TextHAlign = 1
	ST_TextHAlignCenter      ST_TextHAlign = 2
	ST_TextHAlignRight       ST_TextHAlign = 3
	ST_TextHAlignJustify     ST_TextHAlign = 4
	ST_TextHAlignDistributed ST_TextHAlign = 5
)

const (
	ST_DynamicFilterTypeUnset        ST_DynamicFilterType = 0
	ST_DynamicFilterTypeNull         ST_DynamicFilterType = 1
	ST_DynamicFilterTypeAboveAverage ST_DynamicFilterType = 2
	ST_DynamicFilterTypeBelowAverage ST_DynamicFilterType = 3
	ST_DynamicFilterTypeTomorrow     ST_DynamicFilterType = 4
	ST_DynamicFilterTypeToday        ST_DynamicFilterType = 5
	ST_DynamicFilterTypeYesterday    ST_DynamicFilterType = 6
	ST_DynamicFilterTypeNextWeek     ST_DynamicFilterType = 7
	ST_DynamicFilterTypeThisWeek     ST_DynamicFilterType = 8
	ST_DynamicFilterTypeLastWeek     ST_DynamicFilterType = 9
	ST_DynamicFilterTypeNextMonth    ST_DynamicFilterType = 10
	ST_DynamicFilterTypeThisMonth    ST_DynamicFilterType = 11
	ST_DynamicFilterTypeLastMonth    ST_DynamicFilterType = 12
	ST_DynamicFilterTypeNextQuarter  ST_DynamicFilterType = 13
	ST_DynamicFilterTypeThisQuarter  ST_DynamicFilterType = 14
	ST_DynamicFilterTypeLastQuarter  ST_DynamicFilterType = 15
	ST_DynamicFilterTypeNextYear     ST_DynamicFilterType = 16
	ST_DynamicFilterTypeThisYear     ST_DynamicFilterType = 17
	ST_DynamicFilterTypeLastYear     ST_DynamicFilterType = 18
	ST_DynamicFilterTypeYearToDate   ST_DynamicFilterType = 19
	ST_DynamicFilterTypeQ1           ST_DynamicFilterType = 20
	ST_DynamicFilterTypeQ2           ST_DynamicFilterType = 21
	ST_DynamicFilterTypeQ3           ST_DynamicFilterType = 22
	ST_DynamicFilterTypeQ4           ST_DynamicFilterType = 23
	ST_DynamicFilterTypeM1           ST_DynamicFilterType = 24
	ST_DynamicFilterTypeM2           ST_DynamicFilterType = 25
	ST_DynamicFilterTypeM3           ST_DynamicFilterType = 26
	ST_DynamicFilterTypeM4           ST_DynamicFilterType = 27
	ST_DynamicFilterTypeM5           ST_DynamicFilterType = 28
	ST_DynamicFilterTypeM6           ST_DynamicFilterType = 29
	ST_DynamicFilterTypeM7           ST_DynamicFilterType = 30
	ST_DynamicFilterTypeM8           ST_DynamicFilterType = 31
	ST_DynamicFilterTypeM9           ST_DynamicFilterType = 32
	ST_DynamicFilterTypeM10          ST_DynamicFilterType = 33
	ST_DynamicFilterTypeM11          ST_DynamicFilterType = 34
	ST_DynamicFilterTypeM12          ST_DynamicFilterType = 35
)

func NewCT_SharedItems() *CT_SharedItems { _dadee := &CT_SharedItems{}; return _dadee }

func NewCT_Rst() *CT_Rst { _dfgca := &CT_Rst{}; return _dfgca }

// ValidateWithPath validates the CT_ReviewedRevisions and its children, prefixing error messages with path
func (_ebddd *CT_ReviewedRevisions) ValidateWithPath(path string) error {
	for _aegba, _aeafgg := range _ebddd.Reviewed {
		if _aeceaf := _aeafgg.ValidateWithPath(_b.Sprintf("\u0025s\u002fR\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u005b\u0025\u0064\u005d", path, _aegba)); _aeceaf != nil {
			return _aeceaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellAlignment and its children, prefixing error messages with path
func (_gfbfg *CT_CellAlignment) ValidateWithPath(path string) error {
	if _fedf := _gfbfg.HorizontalAttr.ValidateWithPath(path + "\u002fH\u006fr\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _fedf != nil {
		return _fedf
	}
	if _daad := _gfbfg.VerticalAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u0074\u0074\u0072"); _daad != nil {
		return _daad
	}
	return nil
}

type CT_Scenario struct {

	// Scenario Name
	NameAttr string

	// Scenario Locked
	LockedAttr *bool

	// Hidden Scenario
	HiddenAttr *bool

	// Changing Cell Count
	CountAttr *uint32

	// User Name
	UserAttr *string

	// Scenario Comment
	CommentAttr *string

	// Input Cells
	InputCells []*CT_InputCells
}

func (_fbgbca *CT_SheetFormatPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fbgbca.BaseColWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_fbgbca.BaseColWidthAttr)})
	}
	if _fbgbca.DefaultColWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_fbgbca.DefaultColWidthAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", _fbgbca.DefaultRowHeightAttr)})
	if _fbgbca.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbgbca.CustomHeightAttr))})
	}
	if _fbgbca.ZeroHeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbgbca.ZeroHeightAttr))})
	}
	if _fbgbca.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbgbca.ThickTopAttr))})
	}
	if _fbgbca.ThickBottomAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbgbca.ThickBottomAttr))})
	}
	if _fbgbca.OutlineLevelRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_fbgbca.OutlineLevelRowAttr)})
	}
	if _fbgbca.OutlineLevelColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fbgbca.OutlineLevelColAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataStringIndex struct {

	// Index Value
	XAttr uint32

	// String is a Set
	SAttr *bool
}

type CT_PageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// Print Scale
	ScaleAttr *uint32

	// First Page Number
	FirstPageNumberAttr *uint32

	// Fit To Width
	FitToWidthAttr *uint32

	// Fit To Height
	FitToHeightAttr *uint32

	// Page Order
	PageOrderAttr ST_PageOrder

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Print Cell Comments
	CellCommentsAttr ST_CellComments

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Print Error Handling
	ErrorsAttr ST_PrintError

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func NewWorksheet() *Worksheet {
	_geggab := &Worksheet{}
	_geggab.CT_Worksheet = *NewCT_Worksheet()
	return _geggab
}

func NewCT_PivotField() *CT_PivotField { _gcacaf := &CT_PivotField{}; return _gcacaf }

// Validate validates the CT_ExternalReferences and its children
func (_eega *CT_ExternalReferences) Validate() error {
	return _eega.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073")
}

func (_cdf *CT_CellStyles) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dcede := range start.Attr {
		if _dcede.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbcf, _fgga := _a.ParseUint(_dcede.Value, 10, 32)
			if _fgga != nil {
				return _fgga
			}
			_gdce := uint32(_gbcf)
			_cdf.CountAttr = &_gdce
			continue
		}
	}
_bbdd:
	for {
		_eacfc, _cgfb := d.Token()
		if _cgfb != nil {
			return _cgfb
		}
		switch _bbdf := _eacfc.(type) {
		case _gd.StartElement:
			switch _bbdf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}:
				_gfgag := NewCT_CellStyle()
				if _cdgdd := d.DecodeElement(_gfgag, &_bbdf); _cdgdd != nil {
					return _cdgdd
				}
				_cdf.CellStyle = append(_cdf.CellStyle, _gfgag)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043e\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _bbdf.Name)
				if _adgc := d.Skip(); _adgc != nil {
					return _adgc
				}
			}
		case _gd.EndElement:
			break _bbdd
		case _gd.CharData:
		}
	}
	return nil
}

func (_edgga *CT_MetadataTypes) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ecaa := range start.Attr {
		if _ecaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecbb, _aagaba := _a.ParseUint(_ecaa.Value, 10, 32)
			if _aagaba != nil {
				return _aagaba
			}
			_ecffe := uint32(_ecbb)
			_edgga.CountAttr = &_ecffe
			continue
		}
	}
_gddga:
	for {
		_fcebe, _bccef := d.Token()
		if _bccef != nil {
			return _bccef
		}
		switch _ccddc := _fcebe.(type) {
		case _gd.StartElement:
			switch _ccddc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}:
				_fcgce := NewCT_MetadataType()
				if _acbf := d.DecodeElement(_fcgce, &_ccddc); _acbf != nil {
					return _acbf
				}
				_edgga.MetadataType = append(_edgga.MetadataType, _fcgce)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _ccddc.Name)
				if _bagfa := d.Skip(); _bagfa != nil {
					return _bagfa
				}
			}
		case _gd.EndElement:
			break _gddga
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_Dxfs() *CT_Dxfs { _ddegb := &CT_Dxfs{}; return _ddegb }

type CT_PatternFill struct {

	// Pattern Type
	PatternTypeAttr ST_PatternType

	// Foreground Color
	FgColor *CT_Color

	// Background Color
	BgColor *CT_Color
}

func (_bccdc *CT_Selection) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bgaec := range start.Attr {
		if _bgaec.Name.Local == "\u0070\u0061\u006e\u0065" {
			_bccdc.PaneAttr.UnmarshalXMLAttr(_bgaec)
			continue
		}
		if _bgaec.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c" {
			_cfcdf, _aaaed := _bgaec.Value, error(nil)
			if _aaaed != nil {
				return _aaaed
			}
			_bccdc.ActiveCellAttr = &_cfcdf
			continue
		}
		if _bgaec.Name.Local == "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064" {
			_gcbcd, _dgfac := _a.ParseUint(_bgaec.Value, 10, 32)
			if _dgfac != nil {
				return _dgfac
			}
			_dddab := uint32(_gcbcd)
			_bccdc.ActiveCellIdAttr = &_dddab
			continue
		}
		if _bgaec.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_gdea, _aefc := ParseSliceST_Sqref(_bgaec.Value)
			if _aefc != nil {
				return _aefc
			}
			_bccdc.SqrefAttr = &_gdea
			continue
		}
	}
	for {
		_bgegad, _gegbe := d.Token()
		if _gegbe != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _gegbe)
		}
		if _efcgb, _bgebc := _bgegad.(_gd.EndElement); _bgebc && _efcgb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheField and its children, prefixing error messages with path
func (_ddc *CT_CacheField) ValidateWithPath(path string) error {
	if _ddc.SharedItems != nil {
		if _baa := _ddc.SharedItems.ValidateWithPath(path + "\u002f\u0053\u0068a\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _baa != nil {
			return _baa
		}
	}
	if _ddc.FieldGroup != nil {
		if _bbc := _ddc.FieldGroup.ValidateWithPath(path + "/\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"); _bbc != nil {
			return _bbc
		}
	}
	for _aded, _bfed := range _ddc.MpMap {
		if _edbf := _bfed.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fM\u0070\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _aded)); _edbf != nil {
			return _edbf
		}
	}
	if _ddc.ExtLst != nil {
		if _dega := _ddc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dega != nil {
			return _dega
		}
	}
	return nil
}

type CT_RevisionDefinedName struct {

	// Local Name Sheet Id
	LocalSheetIdAttr *uint32

	// Custom View
	CustomViewAttr *bool

	// Name
	NameAttr string

	// Function
	FunctionAttr *bool

	// Old Function
	OldFunctionAttr *bool

	// Function Group Id
	FunctionGroupIdAttr *uint8

	// Old Function Group Id
	OldFunctionGroupIdAttr *uint8

	// Shortcut Key
	ShortcutKeyAttr *uint8

	// Old Short Cut Key
	OldShortcutKeyAttr *uint8

	// Named Range Hidden
	HiddenAttr *bool

	// Old Hidden
	OldHiddenAttr *bool

	// New Custom Menu
	CustomMenuAttr *string

	// Old Custom Menu Text
	OldCustomMenuAttr *string

	// Description
	DescriptionAttr *string

	// Old Description
	OldDescriptionAttr *string

	// New Help Topic
	HelpAttr *string

	// Old Help Topic
	OldHelpAttr *string

	// Status Bar
	StatusBarAttr *string

	// Old Status Bar
	OldStatusBarAttr *string

	// Name Comment
	CommentAttr *string

	// Old Name Comment
	OldCommentAttr *string

	// Formula
	Formula *string

	// Old Formula
	OldFormula *string
	ExtLst     *CT_ExtensionList
	RIdAttr    *uint32
	UaAttr     *bool
	RaAttr     *bool
}

type CT_Border struct {

	// Diagonal Up
	DiagonalUpAttr *bool

	// Diagonal Down
	DiagonalDownAttr *bool

	// Outline
	OutlineAttr *bool

	// Leading Edge Border
	Start *CT_BorderPr

	// Trailing Edge Border
	End *CT_BorderPr

	// Leading Edge Border
	Left *CT_BorderPr

	// Trailing Edge Border
	Right *CT_BorderPr

	// Top Border
	Top *CT_BorderPr

	// Bottom Border
	Bottom *CT_BorderPr

	// Diagonal
	Diagonal *CT_BorderPr

	// Vertical Inner Border
	Vertical *CT_BorderPr

	// Horizontal Inner Borders
	Horizontal *CT_BorderPr
}

func (_bbddf ST_CfvoType) ValidateWithPath(path string) error {
	switch _bbddf {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbddf))
	}
	return nil
}

func (_dbfbg ST_TableStyleType) ValidateWithPath(path string) error {
	switch _dbfbg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbfbg))
	}
	return nil
}

func (_ceeeb *CT_Drawing) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ceeeb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fbddb ST_SortBy) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ceggea := _gd.Attr{}
	_ceggea.Name = name
	switch _fbddb {
	case ST_SortByUnset:
		_ceggea.Value = ""
	case ST_SortByValue:
		_ceggea.Value = "\u0076\u0061\u006cu\u0065"
	case ST_SortByCellColor:
		_ceggea.Value = "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case ST_SortByFontColor:
		_ceggea.Value = "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case ST_SortByIcon:
		_ceggea.Value = "\u0069\u0063\u006f\u006e"
	}
	return _ceggea, nil
}

func (_abgcc *ST_OleUpdate) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_abgcc = 0
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
		*_abgcc = 1
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
		*_abgcc = 2
	}
	return nil
}

func (_bcbcb *CT_WebPublishObjects) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _edbcc := range start.Attr {
		if _edbcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbcafeb, _aebdf := _a.ParseUint(_edbcc.Value, 10, 32)
			if _aebdf != nil {
				return _aebdf
			}
			_aedafb := uint32(_gbcafeb)
			_bcbcb.CountAttr = &_aedafb
			continue
		}
	}
_dgdaf:
	for {
		_aaeeda, _geefe := d.Token()
		if _geefe != nil {
			return _geefe
		}
		switch _ggbcd := _aaeeda.(type) {
		case _gd.StartElement:
			switch _ggbcd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}:
				_acggd := NewCT_WebPublishObject()
				if _fafba := d.DecodeElement(_acggd, &_ggbcd); _fafba != nil {
					return _fafba
				}
				_bcbcb.WebPublishObject = append(_bcbcb.WebPublishObject, _acggd)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u0073\u0020\u0025\u0076", _ggbcd.Name)
				if _bdgdfc := d.Skip(); _bdgdfc != nil {
					return _bdgdfc
				}
			}
		case _gd.EndElement:
			break _dgdaf
		case _gd.CharData:
		}
	}
	return nil
}

func (_edaae *CT_FunctionGroup) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _edaae.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_edaae.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RevisionQueryTableField and its children
func (_caeff *CT_RevisionQueryTableField) Validate() error {
	return _caeff.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064")
}

func ParseSliceST_CellSpans(s string) (ST_CellSpans, error) {
	return ST_CellSpans(_d.Fields(s)), nil
}

func NewCT_Filters() *CT_Filters { _bacaa := &CT_Filters{}; return _bacaa }

// Validate validates the CT_Connection and its children
func (_gada *CT_Connection) Validate() error {
	return _gada.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

type ST_GroupBy byte

func NewCT_MetadataStrings() *CT_MetadataStrings { _afeg := &CT_MetadataStrings{}; return _afeg }

type Sst struct{ CT_Sst }

// ValidateWithPath validates the CT_XmlColumnPr and its children, prefixing error messages with path
func (_cdcaf *CT_XmlColumnPr) ValidateWithPath(path string) error {
	if _cdcaf.ExtLst != nil {
		if _egdef := _cdcaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egdef != nil {
			return _egdef
		}
	}
	return nil
}

// Validate validates the CT_IconSet and its children
func (_ggeea *CT_IconSet) Validate() error {
	return _ggeea.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074")
}

func (_aaddb *CT_QueryTableRefresh) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aaddb.QueryTableFields = NewCT_QueryTableFields()
	for _, _eacc := range start.Attr {
		if _eacc.Name.Local == "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074" {
			_egcbc, _aeefg := _a.ParseBool(_eacc.Value)
			if _aeefg != nil {
				return _aeefg
			}
			_aaddb.PreserveSortFilterLayoutAttr = &_egcbc
			continue
		}
		if _eacc.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064" {
			_dcbgde, _efcd := _a.ParseBool(_eacc.Value)
			if _efcd != nil {
				return _efcd
			}
			_aaddb.FieldIdWrappedAttr = &_dcbgde
			continue
		}
		if _eacc.Name.Local == "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068" {
			_cecag, _caafc := _a.ParseBool(_eacc.Value)
			if _caafc != nil {
				return _caafc
			}
			_aaddb.HeadersInLastRefreshAttr = &_cecag
			continue
		}
		if _eacc.Name.Local == "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_eaggf, _egddd := _a.ParseUint(_eacc.Value, 10, 8)
			if _egddd != nil {
				return _egddd
			}
			_bffbf := uint8(_eaggf)
			_aaddb.MinimumVersionAttr = &_bffbf
			continue
		}
		if _eacc.Name.Local == "\u006e\u0065\u0078\u0074\u0049\u0064" {
			_dcdgd, _fgggg := _a.ParseUint(_eacc.Value, 10, 32)
			if _fgggg != nil {
				return _fgggg
			}
			_bfdbd := uint32(_dcdgd)
			_aaddb.NextIdAttr = &_bfdbd
			continue
		}
		if _eacc.Name.Local == "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074" {
			_fdcd, _cbeedf := _a.ParseUint(_eacc.Value, 10, 32)
			if _cbeedf != nil {
				return _cbeedf
			}
			_eaffdg := uint32(_fdcd)
			_aaddb.UnboundColumnsLeftAttr = &_eaffdg
			continue
		}
		if _eacc.Name.Local == "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074" {
			_afdgd, _abeebg := _a.ParseUint(_eacc.Value, 10, 32)
			if _abeebg != nil {
				return _abeebg
			}
			_eeccdc := uint32(_afdgd)
			_aaddb.UnboundColumnsRightAttr = &_eeccdc
			continue
		}
	}
_gfeab:
	for {
		_bcfgbe, _ggbbdd := d.Token()
		if _ggbbdd != nil {
			return _ggbbdd
		}
		switch _adafca := _bcfgbe.(type) {
		case _gd.StartElement:
			switch _adafca.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _ecaga := d.DecodeElement(_aaddb.QueryTableFields, &_adafca); _ecaga != nil {
					return _ecaga
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_aaddb.QueryTableDeletedFields = NewCT_QueryTableDeletedFields()
				if _cdgdb := d.DecodeElement(_aaddb.QueryTableDeletedFields, &_adafca); _cdgdb != nil {
					return _cdgdb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_aaddb.SortState = NewCT_SortState()
				if _dgcgf := d.DecodeElement(_aaddb.SortState, &_adafca); _dgcgf != nil {
					return _dgcgf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaddb.ExtLst = NewCT_ExtensionList()
				if _eagfe := d.DecodeElement(_aaddb.ExtLst, &_adafca); _eagfe != nil {
					return _eagfe
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068\u0020\u0025\u0076", _adafca.Name)
				if _fgfef := d.Skip(); _fgfef != nil {
					return _fgfef
				}
			}
		case _gd.EndElement:
			break _gfeab
		case _gd.CharData:
		}
	}
	return nil
}

func (_ffebff *CT_WebPublishing) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _abeaa := range start.Attr {
		if _abeaa.Name.Local == "\u0063\u0073\u0073" {
			_fgcgf, _badbd := _a.ParseBool(_abeaa.Value)
			if _badbd != nil {
				return _badbd
			}
			_ffebff.CssAttr = &_fgcgf
			continue
		}
		if _abeaa.Name.Local == "\u0074h\u0069\u0063\u006b\u0065\u0074" {
			_cbbcb, _bfgbf := _a.ParseBool(_abeaa.Value)
			if _bfgbf != nil {
				return _bfgbf
			}
			_ffebff.ThicketAttr = &_cbbcb
			continue
		}
		if _abeaa.Name.Local == "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073" {
			_dfbfg, _edeac := _a.ParseBool(_abeaa.Value)
			if _edeac != nil {
				return _edeac
			}
			_ffebff.LongFileNamesAttr = &_dfbfg
			continue
		}
		if _abeaa.Name.Local == "\u0076\u006d\u006c" {
			_cegafa, _fgaba := _a.ParseBool(_abeaa.Value)
			if _fgaba != nil {
				return _fgaba
			}
			_ffebff.VmlAttr = &_cegafa
			continue
		}
		if _abeaa.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_bafbb, _geccf := _a.ParseBool(_abeaa.Value)
			if _geccf != nil {
				return _geccf
			}
			_ffebff.AllowPngAttr = &_bafbb
			continue
		}
		if _abeaa.Name.Local == "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065" {
			_ffebff.TargetScreenSizeAttr.UnmarshalXMLAttr(_abeaa)
			continue
		}
		if _abeaa.Name.Local == "\u0064\u0070\u0069" {
			_aefca, _gdade := _a.ParseUint(_abeaa.Value, 10, 32)
			if _gdade != nil {
				return _gdade
			}
			_gefdd := uint32(_aefca)
			_ffebff.DpiAttr = &_gefdd
			continue
		}
		if _abeaa.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_ecefc, _cgbde := _a.ParseUint(_abeaa.Value, 10, 32)
			if _cgbde != nil {
				return _cgbde
			}
			_dfcbb := uint32(_ecefc)
			_ffebff.CodePageAttr = &_dfcbb
			continue
		}
		if _abeaa.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_fecgc, _fadgc := _abeaa.Value, error(nil)
			if _fadgc != nil {
				return _fadgc
			}
			_ffebff.CharacterSetAttr = &_fecgc
			continue
		}
	}
	for {
		_gfbbd, _ffbag := d.Token()
		if _ffbag != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050u\u0062l\u0069\u0073\u0068\u0069\u006e\u0067\u003a \u0025\u0073", _ffbag)
		}
		if _ecddbb, _abddg := _gfbbd.(_gd.EndElement); _abddg && _ecddbb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bgeea *CT_FileRecoveryPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bgeea.AutoRecoverAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgeea.AutoRecoverAttr))})
	}
	if _bgeea.CrashSaveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgeea.CrashSaveAttr))})
	}
	if _bgeea.DataExtractLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgeea.DataExtractLoadAttr))})
	}
	if _bgeea.RepairLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgeea.RepairLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotAreaReferences and its children
func (_bbabaf *CT_PivotAreaReferences) Validate() error {
	return _bbabaf.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073")
}

// Validate validates the CT_MetadataStringIndex and its children
func (_gbced *CT_MetadataStringIndex) Validate() error {
	return _gbced.ValidateWithPath("\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078")
}

// Validate validates the CT_VolMain and its children
func (_afcdc *CT_VolMain) Validate() error {
	return _afcdc.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e")
}

func (_ddbff ST_TableStyleType) String() string {
	switch _ddbff {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case 2:
		return "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case 3:
		return "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 4:
		return "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 5:
		return "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 6:
		return "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case 7:
		return "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case 8:
		return "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case 9:
		return "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case 10:
		return "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case 11:
		return "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case 12:
		return "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case 13:
		return "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case 14:
		return "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 15:
		return "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case 16:
		return "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 17:
		return "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 18:
		return "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case 19:
		return "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 20:
		return "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case 21:
		return "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 22:
		return "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case 23:
		return "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 24:
		return "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 25:
		return "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case 26:
		return "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 27:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case 28:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

// Validate validates the CT_DataFields and its children
func (_ebeb *CT_DataFields) Validate() error {
	return _ebeb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073")
}

func NewCT_SheetData() *CT_SheetData { _afaaf := &CT_SheetData{}; return _afaaf }

type CT_Record struct {

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime

	// Shared Items Index
	X []*CT_Index
}

func (_fgcdc *CT_PivotFilter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fgcdc.FldAttr)})
	if _fgcdc.MpFldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0070\u0046l\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.MpFldAttr)})
	}
	_acbeb, _bfcfgg := _fgcdc.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _bfcfgg != nil {
		return _bfcfgg
	}
	start.Attr = append(start.Attr, _acbeb)
	if _fgcdc.EvalOrderAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.EvalOrderAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fgcdc.IdAttr)})
	if _fgcdc.IMeasureHierAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.IMeasureHierAttr)})
	}
	if _fgcdc.IMeasureFldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.IMeasureFldAttr)})
	}
	if _fgcdc.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.NameAttr)})
	}
	if _fgcdc.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.DescriptionAttr)})
	}
	if _fgcdc.StringValue1Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.StringValue1Attr)})
	}
	if _fgcdc.StringValue2Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032"}, Value: _b.Sprintf("\u0025\u0076", *_fgcdc.StringValue2Attr)})
	}
	e.EncodeToken(start)
	_dcfdf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
	e.EncodeElement(_fgcdc.AutoFilter, _dcfdf)
	if _fgcdc.ExtLst != nil {
		_fecfc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fgcdc.ExtLst, _fecfc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomWorkbookViews and its children
func (_bgfg *CT_CustomWorkbookViews) Validate() error {
	return _bgfg.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073")
}

func (_abcaa *CT_PCDKPIs) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _becc := range start.Attr {
		if _becc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccecf, _ecgc := _a.ParseUint(_becc.Value, 10, 32)
			if _ecgc != nil {
				return _ecgc
			}
			_cebgf := uint32(_ccecf)
			_abcaa.CountAttr = &_cebgf
			continue
		}
	}
_gecb:
	for {
		_ebdba, _ddgcfa := d.Token()
		if _ddgcfa != nil {
			return _ddgcfa
		}
		switch _cecef := _ebdba.(type) {
		case _gd.StartElement:
			switch _cecef.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}:
				_fdddf := NewCT_PCDKPI()
				if _bgbfd := d.DecodeElement(_fdddf, &_cecef); _bgbfd != nil {
					return _bgbfd
				}
				_abcaa.Kpi = append(_abcaa.Kpi, _fdddf)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0043\u0044\u004b\u0050\u0049\u0073\u0020\u0025\u0076", _cecef.Name)
				if _adbdf := d.Skip(); _adbdf != nil {
					return _adbdf
				}
			}
		case _gd.EndElement:
			break _gecb
		case _gd.CharData:
		}
	}
	return nil
}

type CT_PageBreak struct {

	// Page Break Count
	CountAttr *uint32

	// Manual Break Count
	ManualBreakCountAttr *uint32

	// Break
	Brk []*CT_Break
}

// ValidateWithPath validates the CT_RevisionFormatting and its children, prefixing error messages with path
func (_dcfbg *CT_RevisionFormatting) ValidateWithPath(path string) error {
	if _dcfbg.Dxf != nil {
		if _cdfgd := _dcfbg.Dxf.ValidateWithPath(path + "\u002f\u0044\u0078\u0066"); _cdfgd != nil {
			return _cdfgd
		}
	}
	if _dcfbg.ExtLst != nil {
		if _cafaf := _dcfbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cafaf != nil {
			return _cafaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontFamily and its children, prefixing error messages with path
func (_agdag *CT_FontFamily) ValidateWithPath(path string) error {
	if _agdag.ValAttr < 0 {
		return _b.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _agdag.ValAttr)
	}
	if _agdag.ValAttr > 14 {
		return _b.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003c\u003d\u0020\u00314 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _agdag.ValAttr)
	}
	return nil
}

func NewCT_CommentPr() *CT_CommentPr {
	_aecbe := &CT_CommentPr{}
	_aecbe.Anchor = NewCT_ObjectAnchor()
	return _aecbe
}

// Validate validates the CT_BookView and its children
func (_baca *CT_BookView) Validate() error {
	return _baca.ValidateWithPath("C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077")
}

func NewCT_MetadataType() *CT_MetadataType { _efcad := &CT_MetadataType{}; return _efcad }

// Validate validates the CT_ColorScale and its children
func (_dagd *CT_ColorScale) Validate() error {
	return _dagd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065")
}

type ST_CfType byte

type CT_CellStyleXfs struct {

	// Style Count
	CountAttr *uint32

	// Formatting Elements
	Xf []*CT_Xf
}

// Validate validates the CT_RevisionHeader and its children
func (_agdbeb *CT_RevisionHeader) Validate() error {
	return _agdbeb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072")
}

func (_fagac *CT_MdxKPI) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fagac.PAttr = ST_MdxKPIProperty(1)
	for _, _gdcgf := range start.Attr {
		if _gdcgf.Name.Local == "\u006e" {
			_cefba, _acgbff := _a.ParseUint(_gdcgf.Value, 10, 32)
			if _acgbff != nil {
				return _acgbff
			}
			_fagac.NAttr = uint32(_cefba)
			continue
		}
		if _gdcgf.Name.Local == "\u006e\u0070" {
			_befcd, _daeab := _a.ParseUint(_gdcgf.Value, 10, 32)
			if _daeab != nil {
				return _daeab
			}
			_fagac.NpAttr = uint32(_befcd)
			continue
		}
		if _gdcgf.Name.Local == "\u0070" {
			_fagac.PAttr.UnmarshalXMLAttr(_gdcgf)
			continue
		}
	}
	for {
		_bbcee, _baba := d.Token()
		if _baba != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0064\u0078K\u0050\u0049\u003a\u0020\u0025\u0073", _baba)
		}
		if _ddaa, _bgdgd := _bbcee.(_gd.EndElement); _bgdgd && _ddaa.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ExternalSheetName() *CT_ExternalSheetName { _ffbg := &CT_ExternalSheetName{}; return _ffbg }

const (
	ST_CredMethodUnset      ST_CredMethod = 0
	ST_CredMethodIntegrated ST_CredMethod = 1
	ST_CredMethodNone       ST_CredMethod = 2
	ST_CredMethodStored     ST_CredMethod = 3
	ST_CredMethodPrompt     ST_CredMethod = 4
)

func (_afaeb *CT_IndexedColors) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_ebded := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}}
	for _, _bfcc := range _afaeb.RgbColor {
		e.EncodeElement(_bfcc, _ebded)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomProperty and its children
func (_gebc *CT_CustomProperty) Validate() error {
	return _gebc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

func (_geggb *CT_FileVersion) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ecdbg := range start.Attr {
		if _ecdbg.Name.Local == "\u0061p\u0070\u004e\u0061\u006d\u0065" {
			_cbfcb, _fabd := _ecdbg.Value, error(nil)
			if _fabd != nil {
				return _fabd
			}
			_geggb.AppNameAttr = &_cbfcb
			continue
		}
		if _ecdbg.Name.Local == "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_bbfg, _fbcf := _ecdbg.Value, error(nil)
			if _fbcf != nil {
				return _fbcf
			}
			_geggb.LastEditedAttr = &_bbfg
			continue
		}
		if _ecdbg.Name.Local == "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_gdefa, _dfbb := _ecdbg.Value, error(nil)
			if _dfbb != nil {
				return _dfbb
			}
			_geggb.LowestEditedAttr = &_gdefa
			continue
		}
		if _ecdbg.Name.Local == "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064" {
			_aacdf, _fdacb := _ecdbg.Value, error(nil)
			if _fdacb != nil {
				return _fdacb
			}
			_geggb.RupBuildAttr = &_aacdf
			continue
		}
		if _ecdbg.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_cffbd, _faebe := _ecdbg.Value, error(nil)
			if _faebe != nil {
				return _faebe
			}
			_geggb.CodeNameAttr = &_cffbd
			continue
		}
	}
	for {
		_accgg, _fcdd := d.Token()
		if _fcdd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e:\u0020\u0025\u0073", _fcdd)
		}
		if _fagg, _ebeba := _accgg.(_gd.EndElement); _ebeba && _fagg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bgged *ST_CellComments) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bgged = 0
	case "\u006e\u006f\u006e\u0065":
		*_bgged = 1
	case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
		*_bgged = 2
	case "\u0061\u0074\u0045n\u0064":
		*_bgged = 3
	}
	return nil
}

type CT_Controls struct {

	// Embedded Control
	Control []*CT_Control
}

func (_gaegefe *ST_Qualifier) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gaegefe = 0
	case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_gaegefe = 1
	case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_gaegefe = 2
	case "\u006e\u006f\u006e\u0065":
		*_gaegefe = 3
	}
	return nil
}

func (_fgcbc *CT_PivotAreaReference) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dafdg := range start.Attr {
		if _dafdg.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ceabc, _gdefb := _a.ParseBool(_dafdg.Value)
			if _gdefb != nil {
				return _gdefb
			}
			_fgcbc.MaxSubtotalAttr = &_ceabc
			continue
		}
		if _dafdg.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fgbec, _aebfa := _a.ParseBool(_dafdg.Value)
			if _aebfa != nil {
				return _aebfa
			}
			_fgcbc.MinSubtotalAttr = &_fgbec
			continue
		}
		if _dafdg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddbed, _cfadc := _a.ParseUint(_dafdg.Value, 10, 32)
			if _cfadc != nil {
				return _cfadc
			}
			_eaada := uint32(_ddbed)
			_fgcbc.CountAttr = &_eaada
			continue
		}
		if _dafdg.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fbefa, _befcf := _a.ParseBool(_dafdg.Value)
			if _befcf != nil {
				return _befcf
			}
			_fgcbc.ProductSubtotalAttr = &_fbefa
			continue
		}
		if _dafdg.Name.Local == "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_cgead, _acbgd := _a.ParseBool(_dafdg.Value)
			if _acbgd != nil {
				return _acbgd
			}
			_fgcbc.ByPositionAttr = &_cgead
			continue
		}
		if _dafdg.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gedaa, _agaeb := _a.ParseBool(_dafdg.Value)
			if _agaeb != nil {
				return _agaeb
			}
			_fgcbc.CountSubtotalAttr = &_gedaa
			continue
		}
		if _dafdg.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gacaa, _fcgfb := _a.ParseBool(_dafdg.Value)
			if _fcgfb != nil {
				return _fcgfb
			}
			_fgcbc.DefaultSubtotalAttr = &_gacaa
			continue
		}
		if _dafdg.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_degf, _dgfbg := _a.ParseBool(_dafdg.Value)
			if _dgfbg != nil {
				return _dgfbg
			}
			_fgcbc.CountASubtotalAttr = &_degf
			continue
		}
		if _dafdg.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_efafae, _dabad := _a.ParseBool(_dafdg.Value)
			if _dabad != nil {
				return _dabad
			}
			_fgcbc.AvgSubtotalAttr = &_efafae
			continue
		}
		if _dafdg.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_gcdbf, _dfaea := _a.ParseUint(_dafdg.Value, 10, 32)
			if _dfaea != nil {
				return _dfaea
			}
			_bcbfc := uint32(_gcdbf)
			_fgcbc.FieldAttr = &_bcbfc
			continue
		}
		if _dafdg.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_ggaab, _debec := _a.ParseBool(_dafdg.Value)
			if _debec != nil {
				return _debec
			}
			_fgcbc.SelectedAttr = &_ggaab
			continue
		}
		if _dafdg.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065" {
			_bgdcb, _ebee := _a.ParseBool(_dafdg.Value)
			if _ebee != nil {
				return _ebee
			}
			_fgcbc.RelativeAttr = &_bgdcb
			continue
		}
		if _dafdg.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cgeaec, _ccbba := _a.ParseBool(_dafdg.Value)
			if _ccbba != nil {
				return _ccbba
			}
			_fgcbc.SumSubtotalAttr = &_cgeaec
			continue
		}
		if _dafdg.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_egead, _ddgcb := _a.ParseBool(_dafdg.Value)
			if _ddgcb != nil {
				return _ddgcb
			}
			_fgcbc.StdDevSubtotalAttr = &_egead
			continue
		}
		if _dafdg.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cbgce, _baabba := _a.ParseBool(_dafdg.Value)
			if _baabba != nil {
				return _baabba
			}
			_fgcbc.StdDevPSubtotalAttr = &_cbgce
			continue
		}
		if _dafdg.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dbfg, _eaabg := _a.ParseBool(_dafdg.Value)
			if _eaabg != nil {
				return _eaabg
			}
			_fgcbc.VarSubtotalAttr = &_dbfg
			continue
		}
		if _dafdg.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_feada, _ggbace := _a.ParseBool(_dafdg.Value)
			if _ggbace != nil {
				return _ggbace
			}
			_fgcbc.VarPSubtotalAttr = &_feada
			continue
		}
	}
_bfddd:
	for {
		_cgade, _fabdc := d.Token()
		if _fabdc != nil {
			return _fabdc
		}
		switch _fcdgcc := _cgade.(type) {
		case _gd.StartElement:
			switch _fcdgcc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_agecc := NewCT_Index()
				if _dfdac := d.DecodeElement(_agecc, &_fcdgcc); _dfdac != nil {
					return _dfdac
				}
				_fgcbc.X = append(_fgcbc.X, _agecc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgcbc.ExtLst = NewCT_ExtensionList()
				if _ggdff := d.DecodeElement(_fgcbc.ExtLst, &_fcdgcc); _ggdff != nil {
					return _ggdff
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _fcdgcc.Name)
				if _eecbe := d.Skip(); _eecbe != nil {
					return _eecbe
				}
			}
		case _gd.EndElement:
			break _bfddd
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionAutoFormatting and its children, prefixing error messages with path
func (_badceg *CT_RevisionAutoFormatting) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ServerFormats and its children
func (_dgbeba *CT_ServerFormats) Validate() error {
	return _dgbeba.ValidateWithPath("\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

func (_dbfedb *CT_PivotCacheRecords) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebcac := range start.Attr {
		if _ebcac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_facbb, _afgdc := _a.ParseUint(_ebcac.Value, 10, 32)
			if _afgdc != nil {
				return _afgdc
			}
			_afdaf := uint32(_facbb)
			_dbfedb.CountAttr = &_afdaf
			continue
		}
	}
_cefd:
	for {
		_facfd, _dcgbf := d.Token()
		if _dcgbf != nil {
			return _dcgbf
		}
		switch _bbfdf := _facfd.(type) {
		case _gd.StartElement:
			switch _bbfdf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_afafg := NewCT_Record()
				if _bgca := d.DecodeElement(_afafg, &_bbfdf); _bgca != nil {
					return _bgca
				}
				_dbfedb.R = append(_dbfedb.R, _afafg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbfedb.ExtLst = NewCT_ExtensionList()
				if _cbgcba := d.DecodeElement(_dbfedb.ExtLst, &_bbfdf); _cbgcba != nil {
					return _cbgcba
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _bbfdf.Name)
				if _bdcfb := d.Skip(); _bdcfb != nil {
					return _bdcfb
				}
			}
		case _gd.EndElement:
			break _cefd
		case _gd.CharData:
		}
	}
	return nil
}

const (
	ST_rwColActionTypeUnset     ST_rwColActionType = 0
	ST_rwColActionTypeInsertRow ST_rwColActionType = 1
	ST_rwColActionTypeDeleteRow ST_rwColActionType = 2
	ST_rwColActionTypeInsertCol ST_rwColActionType = 3
	ST_rwColActionTypeDeleteCol ST_rwColActionType = 4
)

// Validate validates the CT_Borders and its children
func (_egee *CT_Borders) Validate() error {
	return _egee.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_WebPublishing and its children, prefixing error messages with path
func (_dbcead *CT_WebPublishing) ValidateWithPath(path string) error {
	if _gabbg := _dbcead.TargetScreenSizeAttr.ValidateWithPath(path + "/\u0054\u0061\u0072\u0067et\u0053c\u0072\u0065\u0065\u006e\u0053i\u007a\u0065\u0041\u0074\u0074\u0072"); _gabbg != nil {
		return _gabbg
	}
	return nil
}

func NewCT_MergeCell() *CT_MergeCell { _gbaae := &CT_MergeCell{}; return _gbaae }

func (_bdgcd *CT_Query) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0064\u0078"}, Value: _b.Sprintf("\u0025\u0076", _bdgcd.MdxAttr)})
	e.EncodeToken(start)
	if _bdgcd.Tpls != nil {
		_gffaa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_bdgcd.Tpls, _gffaa)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_GradientFill() *CT_GradientFill { _gacee := &CT_GradientFill{}; return _gacee }

func (_bcaf *CT_MdxTuple) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gcgff := range start.Attr {
		if _gcgff.Name.Local == "\u0063" {
			_befde, _bdafcb := _a.ParseUint(_gcgff.Value, 10, 32)
			if _bdafcb != nil {
				return _bdafcb
			}
			_gddbd := uint32(_befde)
			_bcaf.CAttr = &_gddbd
			continue
		}
		if _gcgff.Name.Local == "\u0063\u0074" {
			_dfggc, _edaba := _gcgff.Value, error(nil)
			if _edaba != nil {
				return _edaba
			}
			_bcaf.CtAttr = &_dfggc
			continue
		}
		if _gcgff.Name.Local == "\u0073\u0069" {
			_dgabd, _becfc := _a.ParseUint(_gcgff.Value, 10, 32)
			if _becfc != nil {
				return _becfc
			}
			_dbfdb := uint32(_dgabd)
			_bcaf.SiAttr = &_dbfdb
			continue
		}
		if _gcgff.Name.Local == "\u0066\u0069" {
			_bcade, _gdefe := _a.ParseUint(_gcgff.Value, 10, 32)
			if _gdefe != nil {
				return _gdefe
			}
			_cgcgd := uint32(_bcade)
			_bcaf.FiAttr = &_cgcgd
			continue
		}
		if _gcgff.Name.Local == "\u0062\u0063" {
			_bagbdc, _efebb := _gcgff.Value, error(nil)
			if _efebb != nil {
				return _efebb
			}
			_bcaf.BcAttr = &_bagbdc
			continue
		}
		if _gcgff.Name.Local == "\u0066\u0063" {
			_efadce, _ggcebf := _gcgff.Value, error(nil)
			if _ggcebf != nil {
				return _ggcebf
			}
			_bcaf.FcAttr = &_efadce
			continue
		}
		if _gcgff.Name.Local == "\u0069" {
			_cafegd, _aacdfe := _a.ParseBool(_gcgff.Value)
			if _aacdfe != nil {
				return _aacdfe
			}
			_bcaf.IAttr = &_cafegd
			continue
		}
		if _gcgff.Name.Local == "\u0075" {
			_aeefb, _ceec := _a.ParseBool(_gcgff.Value)
			if _ceec != nil {
				return _ceec
			}
			_bcaf.UAttr = &_aeefb
			continue
		}
		if _gcgff.Name.Local == "\u0073\u0074" {
			_ddecfd, _gdcabb := _a.ParseBool(_gcgff.Value)
			if _gdcabb != nil {
				return _gdcabb
			}
			_bcaf.StAttr = &_ddecfd
			continue
		}
		if _gcgff.Name.Local == "\u0062" {
			_gefdfb, _bfdda := _a.ParseBool(_gcgff.Value)
			if _bfdda != nil {
				return _bfdda
			}
			_bcaf.BAttr = &_gefdfb
			continue
		}
	}
_afde:
	for {
		_fcea, _geeec := d.Token()
		if _geeec != nil {
			return _geeec
		}
		switch _bgaaf := _fcea.(type) {
		case _gd.StartElement:
			switch _bgaaf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_bcbbg := NewCT_MetadataStringIndex()
				if _dccbe := d.DecodeElement(_bcbbg, &_bgaaf); _dccbe != nil {
					return _dccbe
				}
				_bcaf.N = append(_bcaf.N, _bcbbg)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065\u0020\u0025\u0076", _bgaaf.Name)
				if _aegce := d.Skip(); _aegce != nil {
					return _aegce
				}
			}
		case _gd.EndElement:
			break _afde
		case _gd.CharData:
		}
	}
	return nil
}

func (_cdbc *CT_CellProtection) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dageg := range start.Attr {
		if _dageg.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_feed, _fafe := _a.ParseBool(_dageg.Value)
			if _fafe != nil {
				return _fafe
			}
			_cdbc.LockedAttr = &_feed
			continue
		}
		if _dageg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_eece, _eface := _a.ParseBool(_dageg.Value)
			if _eface != nil {
				return _eface
			}
			_cdbc.HiddenAttr = &_eece
			continue
		}
	}
	for {
		_eadf, _cfd := d.Token()
		if _cfd != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e: \u0025\u0073", _cfd)
		}
		if _agda, _caag := _eadf.(_gd.EndElement); _caag && _agda.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TableStyles and its children
func (_aebcdd *CT_TableStyles) Validate() error {
	return _aebcdd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073")
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_fdee *CT_ExtensionList) ValidateWithPath(path string) error {
	for _cgggc, _daaeg := range _fdee.Ext {
		if _efgad := _daaeg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _cgggc)); _efgad != nil {
			return _efgad
		}
	}
	return nil
}

func (_adgadc *ST_DdeValueType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gaddbf, _dfbbg := d.Token()
	if _dfbbg != nil {
		return _dfbbg
	}
	if _ffdeae, _fbedd := _gaddbf.(_gd.EndElement); _fbedd && _ffdeae.Name == start.Name {
		*_adgadc = 1
		return nil
	}
	if _effgf, _ddgaae := _gaddbf.(_gd.CharData); !_ddgaae {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaddbf)
	} else {
		switch string(_effgf) {
		case "":
			*_adgadc = 0
		case "\u006e\u0069\u006c":
			*_adgadc = 1
		case "\u0062":
			*_adgadc = 2
		case "\u006e":
			*_adgadc = 3
		case "\u0065":
			*_adgadc = 4
		case "\u0073\u0074\u0072":
			*_adgadc = 5
		}
	}
	_gaddbf, _dfbbg = d.Token()
	if _dfbbg != nil {
		return _dfbbg
	}
	if _gceeg, _eaabf := _gaddbf.(_gd.EndElement); _eaabf && _gceeg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaddbf)
}

func NewCT_UndoInfo() *CT_UndoInfo {
	_eeadbg := &CT_UndoInfo{}
	_eeadbg.ExpAttr = ST_FormulaExpression(1)
	return _eeadbg
}

// ValidateWithPath validates the CT_CustomSheetView and its children, prefixing error messages with path
func (_gcgfb *CT_CustomSheetView) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_gcgfb.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _gcgfb.GuidAttr)
	}
	if _aaca := _gcgfb.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _aaca != nil {
		return _aaca
	}
	if _afcc := _gcgfb.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _afcc != nil {
		return _afcc
	}
	if _gcgfb.Pane != nil {
		if _bagbd := _gcgfb.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _bagbd != nil {
			return _bagbd
		}
	}
	if _gcgfb.Selection != nil {
		if _afga := _gcgfb.Selection.ValidateWithPath(path + "\u002f\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _afga != nil {
			return _afga
		}
	}
	if _gcgfb.RowBreaks != nil {
		if _cfebb := _gcgfb.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _cfebb != nil {
			return _cfebb
		}
	}
	if _gcgfb.ColBreaks != nil {
		if _gedd := _gcgfb.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _gedd != nil {
			return _gedd
		}
	}
	if _gcgfb.PageMargins != nil {
		if _ecff := _gcgfb.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _ecff != nil {
			return _ecff
		}
	}
	if _gcgfb.PrintOptions != nil {
		if _baeb := _gcgfb.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _baeb != nil {
			return _baeb
		}
	}
	if _gcgfb.PageSetup != nil {
		if _fcbfa := _gcgfb.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _fcbfa != nil {
			return _fcbfa
		}
	}
	if _gcgfb.HeaderFooter != nil {
		if _gcdcb := _gcgfb.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _gcdcb != nil {
			return _gcdcb
		}
	}
	if _gcgfb.AutoFilter != nil {
		if _cffaf := _gcgfb.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _cffaf != nil {
			return _cffaf
		}
	}
	if _gcgfb.ExtLst != nil {
		if _addf := _gcgfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _addf != nil {
			return _addf
		}
	}
	return nil
}

func NewCT_PivotAreaReference() *CT_PivotAreaReference {
	_cdca := &CT_PivotAreaReference{}
	return _cdca
}

func NewCT_Item() *CT_Item { _faaec := &CT_Item{}; return _faaec }

type ST_ConditionalFormattingOperator byte

func (_dgfbb *ST_TimePeriod) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dgfbb = 0
	case "\u0074\u006f\u0064a\u0079":
		*_dgfbb = 1
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_dgfbb = 2
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_dgfbb = 3
	case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
		*_dgfbb = 4
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_dgfbb = 5
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_dgfbb = 6
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_dgfbb = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_dgfbb = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_dgfbb = 9
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_dgfbb = 10
	}
	return nil
}

func (_agadc *ST_SourceType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_agadc = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_agadc = 1
	case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
		*_agadc = 2
	case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
		*_agadc = 3
	case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
		*_agadc = 4
	}
	return nil
}

func (_dfgf *CT_CalculatedMember) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cce := range start.Attr {
		if _cce.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ffa, _adbf := _cce.Value, error(nil)
			if _adbf != nil {
				return _adbf
			}
			_dfgf.NameAttr = _ffa
			continue
		}
		if _cce.Name.Local == "\u006d\u0064\u0078" {
			_age, _fdf := _cce.Value, error(nil)
			if _fdf != nil {
				return _fdf
			}
			_dfgf.MdxAttr = _age
			continue
		}
		if _cce.Name.Local == "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065" {
			_badg, _gfadb := _cce.Value, error(nil)
			if _gfadb != nil {
				return _gfadb
			}
			_dfgf.MemberNameAttr = &_badg
			continue
		}
		if _cce.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_afac, _ebd := _cce.Value, error(nil)
			if _ebd != nil {
				return _ebd
			}
			_dfgf.HierarchyAttr = &_afac
			continue
		}
		if _cce.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_gcfc, _adgf := _cce.Value, error(nil)
			if _adgf != nil {
				return _adgf
			}
			_dfgf.ParentAttr = &_gcfc
			continue
		}
		if _cce.Name.Local == "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072" {
			_eacf, _fce := _a.ParseInt(_cce.Value, 10, 32)
			if _fce != nil {
				return _fce
			}
			_bdgg := int32(_eacf)
			_dfgf.SolveOrderAttr = &_bdgg
			continue
		}
		if _cce.Name.Local == "\u0073\u0065\u0074" {
			_beee, _baab := _a.ParseBool(_cce.Value)
			if _baab != nil {
				return _baab
			}
			_dfgf.SetAttr = &_beee
			continue
		}
	}
_dad:
	for {
		_eaba, _cgcg := d.Token()
		if _cgcg != nil {
			return _cgcg
		}
		switch _ffac := _eaba.(type) {
		case _gd.StartElement:
			switch _ffac.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfgf.ExtLst = NewCT_ExtensionList()
				if _cdc := d.DecodeElement(_dfgf.ExtLst, &_ffac); _cdc != nil {
					return _cdc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061te\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0020\u0025\u0076", _ffac.Name)
				if _dfdf := d.Skip(); _dfdf != nil {
					return _dfdf
				}
			}
		case _gd.EndElement:
			break _dad
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RevisionFormatting and its children
func (_efdgcb *CT_RevisionFormatting) Validate() error {
	return _efdgcb.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}

func NewCT_TableColumn() *CT_TableColumn { _bebdg := &CT_TableColumn{}; return _bebdg }

type CT_OleSize struct {

	// Reference
	RefAttr string
}

type CT_Fill struct {

	// Pattern
	PatternFill *CT_PatternFill

	// Gradient
	GradientFill *CT_GradientFill
}

type CT_PageMargins struct {

	// Left Page Margin
	LeftAttr float64

	// Right Page Margin
	RightAttr float64

	// Top Page Margin
	TopAttr float64

	// Bottom Page Margin
	BottomAttr float64

	// Header Page Margin
	HeaderAttr float64

	// Footer Page Margin
	FooterAttr float64
}

func (_accd *CT_CustomProperty) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _accd.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _accd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_MRUColors struct {

	// Color
	Color []*CT_Color
}

func (_bgdgg *CT_PivotAreas) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cgcad := range start.Attr {
		if _cgcad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbgga, _cbgcb := _a.ParseUint(_cgcad.Value, 10, 32)
			if _cbgcb != nil {
				return _cbgcb
			}
			_efafaa := uint32(_gbgga)
			_bgdgg.CountAttr = &_efafaa
			continue
		}
	}
_fgccf:
	for {
		_dagdef, _eecbd := d.Token()
		if _eecbd != nil {
			return _eecbd
		}
		switch _ebdefb := _dagdef.(type) {
		case _gd.StartElement:
			switch _ebdefb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				_badafc := NewCT_PivotArea()
				if _dfdda := d.DecodeElement(_badafc, &_ebdefb); _dfdda != nil {
					return _dfdda
				}
				_bgdgg.PivotArea = append(_bgdgg.PivotArea, _badafc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073 \u0025\u0076", _ebdefb.Name)
				if _afeaf := d.Skip(); _afeaf != nil {
					return _afeaf
				}
			}
		case _gd.EndElement:
			break _fgccf
		case _gd.CharData:
		}
	}
	return nil
}

func (_fddcc ST_CellComments) String() string {
	switch _fddcc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case 3:
		return "\u0061\u0074\u0045n\u0064"
	}
	return ""
}

const (
	ST_IconSetTypeUnset           ST_IconSetType = 0
	ST_IconSetType3Arrows         ST_IconSetType = 1
	ST_IconSetType3ArrowsGray     ST_IconSetType = 2
	ST_IconSetType3Flags          ST_IconSetType = 3
	ST_IconSetType3TrafficLights1 ST_IconSetType = 4
	ST_IconSetType3TrafficLights2 ST_IconSetType = 5
	ST_IconSetType3Signs          ST_IconSetType = 6
	ST_IconSetType3Symbols        ST_IconSetType = 7
	ST_IconSetType3Symbols2       ST_IconSetType = 8
	ST_IconSetType4Arrows         ST_IconSetType = 9
	ST_IconSetType4ArrowsGray     ST_IconSetType = 10
	ST_IconSetType4RedToBlack     ST_IconSetType = 11
	ST_IconSetType4Rating         ST_IconSetType = 12
	ST_IconSetType4TrafficLights  ST_IconSetType = 13
	ST_IconSetType5Arrows         ST_IconSetType = 14
	ST_IconSetType5ArrowsGray     ST_IconSetType = 15
	ST_IconSetType5Rating         ST_IconSetType = 16
	ST_IconSetType5Quarters       ST_IconSetType = 17
)

func (_facaa *CT_HierarchyUsage) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ecfed := range start.Attr {
		if _ecfed.Name.Local == "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065" {
			_dgdec, _acdge := _a.ParseInt(_ecfed.Value, 10, 32)
			if _acdge != nil {
				return _acdge
			}
			_facaa.HierarchyUsageAttr = int32(_dgdec)
			continue
		}
	}
	for {
		_ggfab, _bacec := d.Token()
		if _bacec != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0055\u0073\u0061\u0067\u0065: \u0025\u0073", _bacec)
		}
		if _acba, _efadcb := _ggfab.(_gd.EndElement); _efadcb && _acba.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fgdf *CT_Fill) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _fgdf.PatternFill != nil {
		_bgecb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fgdf.PatternFill, _bgecb)
	}
	if _fgdf.GradientFill != nil {
		_gbadf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ag\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fgdf.GradientFill, _gbadf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Border and its children, prefixing error messages with path
func (_ffd *CT_Border) ValidateWithPath(path string) error {
	if _ffd.Start != nil {
		if _dda := _ffd.Start.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0072\u0074"); _dda != nil {
			return _dda
		}
	}
	if _ffd.End != nil {
		if _aeb := _ffd.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _aeb != nil {
			return _aeb
		}
	}
	if _ffd.Left != nil {
		if _bfg := _ffd.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _bfg != nil {
			return _bfg
		}
	}
	if _ffd.Right != nil {
		if _gbd := _ffd.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _gbd != nil {
			return _gbd
		}
	}
	if _ffd.Top != nil {
		if _bca := _ffd.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _bca != nil {
			return _bca
		}
	}
	if _ffd.Bottom != nil {
		if _cgc := _ffd.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _cgc != nil {
			return _cgc
		}
	}
	if _ffd.Diagonal != nil {
		if _gac := _ffd.Diagonal.ValidateWithPath(path + "\u002fD\u0069\u0061\u0067\u006f\u006e\u0061l"); _gac != nil {
			return _gac
		}
	}
	if _ffd.Vertical != nil {
		if _afe := _ffd.Vertical.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0069\u0063\u0061l"); _afe != nil {
			return _afe
		}
	}
	if _ffd.Horizontal != nil {
		if _ced := _ffd.Horizontal.ValidateWithPath(path + "/\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"); _ced != nil {
			return _ced
		}
	}
	return nil
}

func (_ecbebd *CT_ProtectedRange) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ecbebd.PasswordAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecbebd.PasswordAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _b.Sprintf("\u0025\u0076", _ecbebd.SqrefAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ecbebd.NameAttr)})
	if _ecbebd.SecurityDescriptorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_ecbebd.SecurityDescriptorAttr)})
	}
	if _ecbebd.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ecbebd.AlgorithmNameAttr)})
	}
	if _ecbebd.HashValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_ecbebd.HashValueAttr)})
	}
	if _ecbebd.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_ecbebd.SaltValueAttr)})
	}
	if _ecbebd.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _b.Sprintf("\u0025\u0076", *_ecbebd.SpinCountAttr)})
	}
	e.EncodeToken(start)
	if _ecbebd.SecurityDescriptor != nil {
		_fgdeb := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0073\u0065cu\u0072i\u0074\u0079\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072"}}
		for _, _ggeeab := range _ecbebd.SecurityDescriptor {
			e.EncodeElement(_ggeeab, _fgdeb)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PageField and its children
func (_cddgd *CT_PageField) Validate() error {
	return _cddgd.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064")
}

type CT_Revisions struct {

	// Revision Row Column Insert Delete
	Rrc []*CT_RevisionRowColumn

	// Revision Cell Move
	Rm []*CT_RevisionMove

	// Revision Custom View
	Rcv []*CT_RevisionCustomView

	// Revision Sheet Name
	Rsnm []*CT_RevisionSheetRename

	// Revision Insert Sheet
	Ris []*CT_RevisionInsertSheet

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting

	// Revision AutoFormat
	Raf []*CT_RevisionAutoFormatting

	// Revision Defined Name
	Rdn []*CT_RevisionDefinedName

	// Revision Cell Comment
	Rcmt []*CT_RevisionComment

	// Revision Query Table
	Rqt []*CT_RevisionQueryTableField

	// Revision Merge Conflict
	Rcft []*CT_RevisionConflict
}

func (_fbceff ST_HtmlFmt) ValidateWithPath(path string) error {
	switch _fbceff {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbceff))
	}
	return nil
}

// Validate validates the CT_IntProperty and its children
func (_aebfg *CT_IntProperty) Validate() error {
	return _aebfg.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

func (_bgae *CT_Filter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bgae.ValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_bgae.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_adcbcdf ST_Qualifier) ValidateWithPath(path string) error {
	switch _adcbcdf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adcbcdf))
	}
	return nil
}

const (
	ST_MdxFunctionTypeUnset ST_MdxFunctionType = 0
	ST_MdxFunctionTypeM     ST_MdxFunctionType = 1
	ST_MdxFunctionTypeV     ST_MdxFunctionType = 2
	ST_MdxFunctionTypeS     ST_MdxFunctionType = 3
	ST_MdxFunctionTypeC     ST_MdxFunctionType = 4
	ST_MdxFunctionTypeR     ST_MdxFunctionType = 5
	ST_MdxFunctionTypeP     ST_MdxFunctionType = 6
	ST_MdxFunctionTypeK     ST_MdxFunctionType = 7
)

// Validate validates the CT_MeasureDimensionMaps and its children
func (_fgfca *CT_MeasureDimensionMaps) Validate() error {
	return _fgfca.ValidateWithPath("\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073")
}

func (_aefd *CT_MdxSet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0076", _aefd.NsAttr)})
	if _aefd.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_aefd.CAttr)})
	}
	if _aefd.OAttr != ST_MdxSetOrderUnset {
		_eebc, _gfcfc := _aefd.OAttr.MarshalXMLAttr(_gd.Name{Local: "\u006f"})
		if _gfcfc != nil {
			return _gfcfc
		}
		start.Attr = append(start.Attr, _eebc)
	}
	e.EncodeToken(start)
	if _aefd.N != nil {
		_fdgae := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _fbdec := range _aefd.N {
			e.EncodeElement(_fbdec, _fdgae)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Dxf() *CT_Dxf { _gdgb := &CT_Dxf{}; return _gdgb }

func (_fgacb *CT_CellXfs) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fgacb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fgacb.CountAttr)})
	}
	e.EncodeToken(start)
	_ffgg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _gfaag := range _fgacb.Xf {
		e.EncodeElement(_gfaag, _ffgg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TimePeriodUnset     ST_TimePeriod = 0
	ST_TimePeriodToday     ST_TimePeriod = 1
	ST_TimePeriodYesterday ST_TimePeriod = 2
	ST_TimePeriodTomorrow  ST_TimePeriod = 3
	ST_TimePeriodLast7Days ST_TimePeriod = 4
	ST_TimePeriodThisMonth ST_TimePeriod = 5
	ST_TimePeriodLastMonth ST_TimePeriod = 6
	ST_TimePeriodNextMonth ST_TimePeriod = 7
	ST_TimePeriodThisWeek  ST_TimePeriod = 8
	ST_TimePeriodLastWeek  ST_TimePeriod = 9
	ST_TimePeriodNextWeek  ST_TimePeriod = 10
)

func _dadgc(_bdfdgc bool) uint8 {
	if _bdfdgc {
		return 1
	}
	return 0
}

func (_ccccg *CT_QueryTableField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebfe := range start.Attr {
		if _ebfe.Name.Local == "\u0069\u0064" {
			_ffgce, _afeee := _a.ParseUint(_ebfe.Value, 10, 32)
			if _afeee != nil {
				return _afeee
			}
			_ccccg.IdAttr = uint32(_ffgce)
			continue
		}
		if _ebfe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdaafa, _eacec := _ebfe.Value, error(nil)
			if _eacec != nil {
				return _eacec
			}
			_ccccg.NameAttr = &_bdaafa
			continue
		}
		if _ebfe.Name.Local == "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed" {
			_ebcf, _facga := _a.ParseBool(_ebfe.Value)
			if _facga != nil {
				return _facga
			}
			_ccccg.DataBoundAttr = &_ebcf
			continue
		}
		if _ebfe.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_fagbc, _bcgfg := _a.ParseBool(_ebfe.Value)
			if _bcgfg != nil {
				return _bcgfg
			}
			_ccccg.RowNumbersAttr = &_fagbc
			continue
		}
		if _ebfe.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_acecfe, _fbcac := _a.ParseBool(_ebfe.Value)
			if _fbcac != nil {
				return _fbcac
			}
			_ccccg.FillFormulasAttr = &_acecfe
			continue
		}
		if _ebfe.Name.Local == "\u0063l\u0069\u0070\u0070\u0065\u0064" {
			_gbegg, _gafeba := _a.ParseBool(_ebfe.Value)
			if _gafeba != nil {
				return _gafeba
			}
			_ccccg.ClippedAttr = &_gbegg
			continue
		}
		if _ebfe.Name.Local == "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064" {
			_fgfaf, _fgfdb := _a.ParseUint(_ebfe.Value, 10, 32)
			if _fgfdb != nil {
				return _fgfdb
			}
			_feecf := uint32(_fgfaf)
			_ccccg.TableColumnIdAttr = &_feecf
			continue
		}
	}
_bdde:
	for {
		_ggedf, _gggfa := d.Token()
		if _gggfa != nil {
			return _gggfa
		}
		switch _fcgge := _ggedf.(type) {
		case _gd.StartElement:
			switch _fcgge.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccccg.ExtLst = NewCT_ExtensionList()
				if _fdffde := d.DecodeElement(_ccccg.ExtLst, &_fcgge); _fdffde != nil {
					return _fdffde
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _fcgge.Name)
				if _gdfagf := d.Skip(); _gdfagf != nil {
					return _gdfagf
				}
			}
		case _gd.EndElement:
			break _bdde
		case _gd.CharData:
		}
	}
	return nil
}

type CT_QueryCache struct {

	// Cached Query Count
	CountAttr *uint32

	// Query
	Query []*CT_Query
}

func NewCT_CellWatch() *CT_CellWatch { _fgcd := &CT_CellWatch{}; return _fgcd }

func (_bfagd *CT_IconFilter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bfagd.IconSetAttr = ST_IconSetType(1)
	for _, _fcgdf := range start.Attr {
		if _fcgdf.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_bfagd.IconSetAttr.UnmarshalXMLAttr(_fcgdf)
			continue
		}
		if _fcgdf.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_fbfcf, _ggebb := _a.ParseUint(_fcgdf.Value, 10, 32)
			if _ggebb != nil {
				return _ggebb
			}
			_dedge := uint32(_fbfcf)
			_bfagd.IconIdAttr = &_dedge
			continue
		}
	}
	for {
		_acdfb, _gcdeg := d.Token()
		if _gcdeg != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049c\u006fn\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s", _gcdeg)
		}
		if _afede, _badb := _acdfb.(_gd.EndElement); _badb && _afede.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalBook and its children, prefixing error messages with path
func (_ddbd *CT_ExternalBook) ValidateWithPath(path string) error {
	if _ddbd.SheetNames != nil {
		if _deec := _ddbd.SheetNames.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"); _deec != nil {
			return _deec
		}
	}
	if _ddbd.DefinedNames != nil {
		if _gbgce := _ddbd.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _gbgce != nil {
			return _gbgce
		}
	}
	if _ddbd.SheetDataSet != nil {
		if _acfa := _ddbd.SheetDataSet.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"); _acfa != nil {
			return _acfa
		}
	}
	return nil
}

func (_aefdb ST_DvAspect) String() string {
	switch _aefdb {
	case 0:
		return ""
	case 1:
		return "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case 2:
		return "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return ""
}

// ValidateWithPath validates the CT_Fills and its children, prefixing error messages with path
func (_bbaae *CT_Fills) ValidateWithPath(path string) error {
	for _gcecb, _babcb := range _bbaae.Fill {
		if _agede := _babcb.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0046\u0069\u006c\u006c\u005b\u0025\u0064\u005d", path, _gcecb)); _agede != nil {
			return _agede
		}
	}
	return nil
}

// ValidateWithPath validates the SingleXmlCells and its children, prefixing error messages with path
func (_afebea *SingleXmlCells) ValidateWithPath(path string) error {
	if _bfbeec := _afebea.CT_SingleXmlCells.ValidateWithPath(path); _bfbeec != nil {
		return _bfbeec
	}
	return nil
}

func (_bdgfe ST_CellFormulaType) Validate() error { return _bdgfe.ValidateWithPath("") }

func (_fdgaf *CT_PivotDimension) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _efdaf := range start.Attr {
		if _efdaf.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_dbba, _cfeeb := _a.ParseBool(_efdaf.Value)
			if _cfeeb != nil {
				return _cfeeb
			}
			_fdgaf.MeasureAttr = &_dbba
			continue
		}
		if _efdaf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fdecb, _dfddb := _efdaf.Value, error(nil)
			if _dfddb != nil {
				return _dfddb
			}
			_fdgaf.NameAttr = _fdecb
			continue
		}
		if _efdaf.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_agfag, _eefg := _efdaf.Value, error(nil)
			if _eefg != nil {
				return _eefg
			}
			_fdgaf.UniqueNameAttr = _agfag
			continue
		}
		if _efdaf.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_dfaaf, _eadfd := _efdaf.Value, error(nil)
			if _eadfd != nil {
				return _eadfd
			}
			_fdgaf.CaptionAttr = _dfaaf
			continue
		}
	}
	for {
		_dcfbba, _egaf := d.Token()
		if _egaf != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _egaf)
		}
		if _abaa, _eddce := _dcfbba.(_gd.EndElement); _eddce && _abaa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_babge ST_VolValueType) String() string {
	switch _babge {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	}
	return ""
}

func (_agbfb *CT_QueryCache) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _agbfb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_agbfb.CountAttr)})
	}
	e.EncodeToken(start)
	_acdag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079"}}
	for _, _dbgca := range _agbfb.Query {
		e.EncodeElement(_dbgca, _acdag)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ffbbf *CT_FieldsUsage) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ffbbf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ffbbf.CountAttr)})
	}
	e.EncodeToken(start)
	if _ffbbf.FieldUsage != nil {
		_dgdab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}}
		for _, _agead := range _ffbbf.FieldUsage {
			e.EncodeElement(_agead, _dgdab)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Stylesheet() *CT_Stylesheet { _gabfd := &CT_Stylesheet{}; return _gabfd }

type CT_MdxSet struct {

	// Set Definition Index
	NsAttr uint32

	// Sort By Member Index Count
	CAttr *uint32

	// Set Sort Order
	OAttr ST_MdxSetOrder

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func NewCT_CacheHierarchy() *CT_CacheHierarchy { _bcb := &CT_CacheHierarchy{}; return _bcb }

func (_cbgcda *CT_RevisionRowColumn) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cbgcda.ActionAttr = ST_rwColActionType(1)
	for _, _deage := range start.Attr {
		if _deage.Name.Local == "\u0073\u0049\u0064" {
			_deffd, _fbccgbe := _a.ParseUint(_deage.Value, 10, 32)
			if _fbccgbe != nil {
				return _fbccgbe
			}
			_cbgcda.SIdAttr = uint32(_deffd)
			continue
		}
		if _deage.Name.Local == "\u0065\u006f\u006c" {
			_bgcbac, _edcag := _a.ParseBool(_deage.Value)
			if _edcag != nil {
				return _edcag
			}
			_cbgcda.EolAttr = &_bgcbac
			continue
		}
		if _deage.Name.Local == "\u0072\u0065\u0066" {
			_bebee, _ebfcg := _deage.Value, error(nil)
			if _ebfcg != nil {
				return _ebfcg
			}
			_cbgcda.RefAttr = _bebee
			continue
		}
		if _deage.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_cbgcda.ActionAttr.UnmarshalXMLAttr(_deage)
			continue
		}
		if _deage.Name.Local == "\u0065\u0064\u0067\u0065" {
			_efceab, _afbcf := _a.ParseBool(_deage.Value)
			if _afbcf != nil {
				return _afbcf
			}
			_cbgcda.EdgeAttr = &_efceab
			continue
		}
		if _deage.Name.Local == "\u0072\u0049\u0064" {
			_bacccb, _cbgfb := _a.ParseUint(_deage.Value, 10, 32)
			if _cbgfb != nil {
				return _cbgfb
			}
			_ffaeg := uint32(_bacccb)
			_cbgcda.RIdAttr = &_ffaeg
			continue
		}
		if _deage.Name.Local == "\u0075\u0061" {
			_bggcf, _facadc := _a.ParseBool(_deage.Value)
			if _facadc != nil {
				return _facadc
			}
			_cbgcda.UaAttr = &_bggcf
			continue
		}
		if _deage.Name.Local == "\u0072\u0061" {
			_cebdf, _bacccc := _a.ParseBool(_deage.Value)
			if _bacccc != nil {
				return _bacccc
			}
			_cbgcda.RaAttr = &_cebdf
			continue
		}
	}
_dbagd:
	for {
		_adcea, _fcegc := d.Token()
		if _fcegc != nil {
			return _fcegc
		}
		switch _ggeece := _adcea.(type) {
		case _gd.StartElement:
			switch _ggeece.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_bbgfga := NewCT_UndoInfo()
				if _edgde := d.DecodeElement(_bbgfga, &_ggeece); _edgde != nil {
					return _edgde
				}
				_cbgcda.Undo = append(_cbgcda.Undo, _bbgfga)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_gbdae := NewCT_RevisionCellChange()
				if _dfbgdf := d.DecodeElement(_gbdae, &_ggeece); _dfbgdf != nil {
					return _dfbgdf
				}
				_cbgcda.Rcc = append(_cbgcda.Rcc, _gbdae)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_bfgde := NewCT_RevisionFormatting()
				if _cabgbc := d.DecodeElement(_bfgde, &_ggeece); _cabgbc != nil {
					return _cabgbc
				}
				_cbgcda.Rfmt = append(_cbgcda.Rfmt, _bfgde)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0052\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _ggeece.Name)
				if _gfbcb := d.Skip(); _gfbcb != nil {
					return _gfbcb
				}
			}
		case _gd.EndElement:
			break _dbagd
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Drawing and its children
func (_cdcfd *CT_Drawing) Validate() error {
	return _cdcfd.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

func (_bgbb *CT_ChartFormats) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bgbb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bgbb.CountAttr)})
	}
	e.EncodeToken(start)
	_dbdg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074"}}
	for _, _geaa := range _bgbb.ChartFormat {
		e.EncodeElement(_geaa, _dbdg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FutureMetadata and its children
func (_fegfe *CT_FutureMetadata) Validate() error {
	return _fegfe.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}

func (_bdegb ST_CellType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bdegb.String(), start)
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_bedgb *CT_CommentList) ValidateWithPath(path string) error {
	for _bdgde, _fdffd := range _bedgb.Comment {
		if _cdcg := _fdffd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006d\u006d\u0065\u006et\u005b\u0025\u0064\u005d", path, _bdgde)); _cdcg != nil {
			return _cdcg
		}
	}
	return nil
}

type CT_Fills struct {

	// Fill Count
	CountAttr *uint32

	// Fill
	Fill []*CT_Fill
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_ccefd *CT_Map) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0049\u0044"}, Value: _b.Sprintf("\u0025\u0076", _ccefd.IDAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ccefd.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", _ccefd.RootElementAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044"}, Value: _b.Sprintf("\u0025\u0076", _ccefd.SchemaIDAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(_ccefd.ShowImportExportValidationErrorsAttr))})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0041u\u0074\u006f\u0046\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(_ccefd.AutoFitAttr))})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0041\u0070\u0070\u0065\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(_ccefd.AppendAttr))})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(_ccefd.PreserveSortAFLayoutAttr))})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(_ccefd.PreserveFormatAttr))})
	e.EncodeToken(start)
	if _ccefd.DataBinding != nil {
		_abcbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067"}}
		e.EncodeElement(_ccefd.DataBinding, _abcbb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_WebPublishing() *CT_WebPublishing { _ggaeg := &CT_WebPublishing{}; return _ggaeg }

func (_fddbg *CT_PivotArea) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fddbg.FieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fddbg.FieldAttr)})
	}
	if _fddbg.TypeAttr != ST_PivotAreaTypeUnset {
		_fbcdd, _ecacd := _fddbg.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ecacd != nil {
			return _ecacd
		}
		start.Attr = append(start.Attr, _fbcdd)
	}
	if _fddbg.DataOnlyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fddbg.DataOnlyAttr))})
	}
	if _fddbg.LabelOnlyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fddbg.LabelOnlyAttr))})
	}
	if _fddbg.GrandRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fddbg.GrandRowAttr))})
	}
	if _fddbg.GrandColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fddbg.GrandColAttr))})
	}
	if _fddbg.CacheIndexAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fddbg.CacheIndexAttr))})
	}
	if _fddbg.OutlineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fddbg.OutlineAttr))})
	}
	if _fddbg.OffsetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u0066\u0066\u0073\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fddbg.OffsetAttr)})
	}
	if _fddbg.CollapsedLevelsAreSubtotalsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fddbg.CollapsedLevelsAreSubtotalsAttr))})
	}
	if _fddbg.AxisAttr != ST_AxisUnset {
		_defadc, _fgbbg := _fddbg.AxisAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _fgbbg != nil {
			return _fgbbg
		}
		start.Attr = append(start.Attr, _defadc)
	}
	if _fddbg.FieldPositionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_fddbg.FieldPositionAttr)})
	}
	e.EncodeToken(start)
	if _fddbg.References != nil {
		_gggbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_fddbg.References, _gggbb)
	}
	if _fddbg.ExtLst != nil {
		_adadb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fddbg.ExtLst, _adadb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Selection and its children, prefixing error messages with path
func (_ddbagd *CT_Selection) ValidateWithPath(path string) error {
	if _ffdagc := _ddbagd.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _ffdagc != nil {
		return _ffdagc
	}
	return nil
}

func NewCalcChain() *CalcChain {
	_fcfab := &CalcChain{}
	_fcfab.CT_CalcChain = *NewCT_CalcChain()
	return _fcfab
}

type CT_ColorScale struct {

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Color Gradiant Interpolation
	Color []*CT_Color
}

// ValidateWithPath validates the CT_TextFields and its children, prefixing error messages with path
func (_dfcac *CT_TextFields) ValidateWithPath(path string) error {
	for _gafgff, _cgfgg := range _dfcac.TextField {
		if _dacfd := _cgfgg.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0054\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _gafgff)); _dacfd != nil {
			return _dacfd
		}
	}
	return nil
}

func (_fgdcf ST_GrowShrinkType) ValidateWithPath(path string) error {
	switch _fgdcf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgdcf))
	}
	return nil
}

func (_ggeeg *CT_MdxMemeberProp) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aaecd := range start.Attr {
		if _aaecd.Name.Local == "\u006e" {
			_aabcc, _fcegg := _a.ParseUint(_aaecd.Value, 10, 32)
			if _fcegg != nil {
				return _fcegg
			}
			_ggeeg.NAttr = uint32(_aabcc)
			continue
		}
		if _aaecd.Name.Local == "\u006e\u0070" {
			_abace, _gcgdg := _a.ParseUint(_aaecd.Value, 10, 32)
			if _gcgdg != nil {
				return _gcgdg
			}
			_ggeeg.NpAttr = uint32(_abace)
			continue
		}
	}
	for {
		_gecgf, _fcdea := d.Token()
		if _fcdea != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065\u0072\u0050\u0072\u006f\u0070: \u0025\u0073", _fcdea)
		}
		if _eeafb, _abbad := _gecgf.(_gd.EndElement); _abbad && _eeafb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_RElt() *CT_RElt { _dcfa := &CT_RElt{}; return _dcfa }

func (_accee *CT_PivotFilters) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cfdf := range start.Attr {
		if _cfdf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccefa, _dbagf := _a.ParseUint(_cfdf.Value, 10, 32)
			if _dbagf != nil {
				return _dbagf
			}
			_gfbfbf := uint32(_ccefa)
			_accee.CountAttr = &_gfbfbf
			continue
		}
	}
_dggac:
	for {
		_aaega, _fdecbe := d.Token()
		if _fdecbe != nil {
			return _fdecbe
		}
		switch _cecdg := _aaega.(type) {
		case _gd.StartElement:
			switch _cecdg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_gfcbed := NewCT_PivotFilter()
				if _fbbgc := d.DecodeElement(_gfcbed, &_cecdg); _fbbgc != nil {
					return _fbbgc
				}
				_accee.Filter = append(_accee.Filter, _gfcbed)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076o\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _cecdg.Name)
				if _feaed := d.Skip(); _feaed != nil {
					return _feaed
				}
			}
		case _gd.EndElement:
			break _dggac
		case _gd.CharData:
		}
	}
	return nil
}

func (_daecf *CT_SharedUser) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _daecf.GuidAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _daecf.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _daecf.IdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _daecf.DateTimeAttr)})
	e.EncodeToken(start)
	if _daecf.ExtLst != nil {
		_dcdca := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_daecf.ExtLst, _dcdca)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gfgfea *CT_SharedItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dfefg := range start.Attr {
		if _dfefg.Name.Local == "\u006di\u006e\u0044\u0061\u0074\u0065" {
			_bbafa, _ecfedd := ParseStdlibTime(_dfefg.Value)
			if _ecfedd != nil {
				return _ecfedd
			}
			_gfgfea.MinDateAttr = &_bbafa
			continue
		}
		if _dfefg.Name.Local == "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073" {
			_gcgaga, _febabb := _a.ParseBool(_dfefg.Value)
			if _febabb != nil {
				return _febabb
			}
			_gfgfea.ContainsSemiMixedTypesAttr = &_gcgaga
			continue
		}
		if _dfefg.Name.Local == "\u006da\u0078\u0044\u0061\u0074\u0065" {
			_gedcc, _dgagf := ParseStdlibTime(_dfefg.Value)
			if _dgagf != nil {
				return _dgagf
			}
			_gfgfea.MaxDateAttr = &_gedcc
			continue
		}
		if _dfefg.Name.Local == "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065" {
			_fcaeg, _gfaga := _a.ParseBool(_dfefg.Value)
			if _gfaga != nil {
				return _gfaga
			}
			_gfgfea.ContainsDateAttr = &_fcaeg
			continue
		}
		if _dfefg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abecf, _abfab := _a.ParseUint(_dfefg.Value, 10, 32)
			if _abfab != nil {
				return _abfab
			}
			_dgbce := uint32(_abecf)
			_gfgfea.CountAttr = &_dgbce
			continue
		}
		if _dfefg.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b" {
			_gecdc, _eaefa := _a.ParseBool(_dfefg.Value)
			if _eaefa != nil {
				return _eaefa
			}
			_gfgfea.ContainsBlankAttr = &_gecdc
			continue
		}
		if _dfefg.Name.Local == "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074" {
			_cgefee, _abcfa := _a.ParseBool(_dfefg.Value)
			if _abcfa != nil {
				return _abcfa
			}
			_gfgfea.LongTextAttr = &_cgefee
			continue
		}
		if _dfefg.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072" {
			_edfeg, _daedd := _a.ParseBool(_dfefg.Value)
			if _daedd != nil {
				return _daedd
			}
			_gfgfea.ContainsNumberAttr = &_edfeg
			continue
		}
		if _dfefg.Name.Local == "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065" {
			_bdbfb, _ggcgb := _a.ParseFloat(_dfefg.Value, 64)
			if _ggcgb != nil {
				return _ggcgb
			}
			_gfgfea.MinValueAttr = &_bdbfb
			continue
		}
		if _dfefg.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065" {
			_eadge, _aeabf := _a.ParseFloat(_dfefg.Value, 64)
			if _aeabf != nil {
				return _aeabf
			}
			_gfgfea.MaxValueAttr = &_eadge
			continue
		}
		if _dfefg.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065" {
			_abefb, _bagab := _a.ParseBool(_dfefg.Value)
			if _bagab != nil {
				return _bagab
			}
			_gfgfea.ContainsNonDateAttr = &_abefb
			continue
		}
		if _dfefg.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067" {
			_ceggf, _fece := _a.ParseBool(_dfefg.Value)
			if _fece != nil {
				return _fece
			}
			_gfgfea.ContainsStringAttr = &_ceggf
			continue
		}
		if _dfefg.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073" {
			_ecadg, _cbagd := _a.ParseBool(_dfefg.Value)
			if _cbagd != nil {
				return _cbagd
			}
			_gfgfea.ContainsMixedTypesAttr = &_ecadg
			continue
		}
		if _dfefg.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072" {
			_aaacc, _aabad := _a.ParseBool(_dfefg.Value)
			if _aabad != nil {
				return _aabad
			}
			_gfgfea.ContainsIntegerAttr = &_aaacc
			continue
		}
	}
_eaece:
	for {
		_gbdgd, _cacdb := d.Token()
		if _cacdb != nil {
			return _cacdb
		}
		switch _cccdd := _gbdgd.(type) {
		case _gd.StartElement:
			switch _cccdd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_degef := NewCT_Missing()
				if _geabe := d.DecodeElement(_degef, &_cccdd); _geabe != nil {
					return _geabe
				}
				_gfgfea.M = append(_gfgfea.M, _degef)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_acbbf := NewCT_Number()
				if _bdcag := d.DecodeElement(_acbbf, &_cccdd); _bdcag != nil {
					return _bdcag
				}
				_gfgfea.N = append(_gfgfea.N, _acbbf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_cdcbc := NewCT_Boolean()
				if _gceef := d.DecodeElement(_cdcbc, &_cccdd); _gceef != nil {
					return _gceef
				}
				_gfgfea.B = append(_gfgfea.B, _cdcbc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_dcccg := NewCT_Error()
				if _ecgec := d.DecodeElement(_dcccg, &_cccdd); _ecgec != nil {
					return _ecgec
				}
				_gfgfea.E = append(_gfgfea.E, _dcccg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_gaafc := NewCT_String()
				if _gaae := d.DecodeElement(_gaafc, &_cccdd); _gaae != nil {
					return _gaae
				}
				_gfgfea.S = append(_gfgfea.S, _gaafc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_ggfd := NewCT_DateTime()
				if _addecb := d.DecodeElement(_ggfd, &_cccdd); _addecb != nil {
					return _addecb
				}
				_gfgfea.D = append(_gfgfea.D, _ggfd)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0049t\u0065m\u0073\u0020\u0025\u0076", _cccdd.Name)
				if _bcgga := d.Skip(); _bcgga != nil {
					return _bcgga
				}
			}
		case _gd.EndElement:
			break _eaece
		case _gd.CharData:
		}
	}
	return nil
}

type CT_PivotAreas struct {

	// Pivot Area Count
	CountAttr *uint32

	// Pivot Area
	PivotArea []*CT_PivotArea
}

func (_fdabb *CT_Dimensions) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _eafg := range start.Attr {
		if _eafg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aebde, _deacf := _a.ParseUint(_eafg.Value, 10, 32)
			if _deacf != nil {
				return _deacf
			}
			_ceafb := uint32(_aebde)
			_fdabb.CountAttr = &_ceafb
			continue
		}
	}
_deed:
	for {
		_defde, _cafb := d.Token()
		if _cafb != nil {
			return _cafb
		}
		switch _fbaff := _defde.(type) {
		case _gd.StartElement:
			switch _fbaff.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_dbabg := NewCT_PivotDimension()
				if _eggc := d.DecodeElement(_dbabg, &_fbaff); _eggc != nil {
					return _eggc
				}
				_fdabb.Dimension = append(_fdabb.Dimension, _dbabg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073 \u0025\u0076", _fbaff.Name)
				if _gacfe := d.Skip(); _gacfe != nil {
					return _gacfe
				}
			}
		case _gd.EndElement:
			break _deed
		case _gd.CharData:
		}
	}
	return nil
}

type CT_OleItems struct {

	// Object Link Item
	OleItem []*CT_OleItem
}

// Validate validates the CT_FieldsUsage and its children
func (_fggff *CT_FieldsUsage) Validate() error {
	return _fggff.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_NumFmt and its children, prefixing error messages with path
func (_bcfac *CT_NumFmt) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CustomSheetView and its children
func (_dfdef *CT_CustomSheetView) Validate() error {
	return _dfdef.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077")
}

type ST_DataValidationOperator byte

func (_dageae ST_RevisionAction) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dageae.String(), start)
}

func NewCT_SharedUser() *CT_SharedUser {
	_abedd := &CT_SharedUser{}
	_abedd.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _abedd
}

// Validate validates the CT_SmartTags and its children
func (_bacce *CT_SmartTags) Validate() error {
	return _bacce.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

func NewCT_Users() *CT_Users { _baaag := &CT_Users{}; return _baaag }

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_aagdba *CT_Table) ValidateWithPath(path string) error {
	if _ecbfeg := _aagdba.TableTypeAttr.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _ecbfeg != nil {
		return _ecbfeg
	}
	if _aagdba.AutoFilter != nil {
		if _ccdea := _aagdba.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _ccdea != nil {
			return _ccdea
		}
	}
	if _aagdba.SortState != nil {
		if _dffbf := _aagdba.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _dffbf != nil {
			return _dffbf
		}
	}
	if _cfbfe := _aagdba.TableColumns.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"); _cfbfe != nil {
		return _cfbfe
	}
	if _aagdba.TableStyleInfo != nil {
		if _abfbe := _aagdba.TableStyleInfo.ValidateWithPath(path + "\u002fT\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"); _abfbe != nil {
			return _abfbe
		}
	}
	if _aagdba.ExtLst != nil {
		if _abafdc := _aagdba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abafdc != nil {
			return _abafdc
		}
	}
	return nil
}

func (_adcdg *ST_DataValidationImeMode) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gdcad, _aefed := d.Token()
	if _aefed != nil {
		return _aefed
	}
	if _gegce, _cfcddf := _gdcad.(_gd.EndElement); _cfcddf && _gegce.Name == start.Name {
		*_adcdg = 1
		return nil
	}
	if _eebbf, _cgedf := _gdcad.(_gd.CharData); !_cgedf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdcad)
	} else {
		switch string(_eebbf) {
		case "":
			*_adcdg = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_adcdg = 1
		case "\u006f\u0066\u0066":
			*_adcdg = 2
		case "\u006f\u006e":
			*_adcdg = 3
		case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
			*_adcdg = 4
		case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_adcdg = 5
		case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_adcdg = 6
		case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_adcdg = 7
		case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
			*_adcdg = 8
		case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
			*_adcdg = 9
		case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
			*_adcdg = 10
		case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
			*_adcdg = 11
		}
	}
	_gdcad, _aefed = d.Token()
	if _aefed != nil {
		return _aefed
	}
	if _dgfaab, _fdebaa := _gdcad.(_gd.EndElement); _fdebaa && _dgfaab.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdcad)
}

type CT_QueryTableFields struct {

	// Column Count
	CountAttr *uint32

	// QueryTable Field
	QueryTableField []*CT_QueryTableField
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_dafeg *CT_Drawing) ValidateWithPath(path string) error { return nil }

func NewCT_ObjectPr() *CT_ObjectPr {
	_gffgd := &CT_ObjectPr{}
	_gffgd.Anchor = NewCT_ObjectAnchor()
	return _gffgd
}

func NewCT_CalculatedItem() *CT_CalculatedItem {
	_acea := &CT_CalculatedItem{}
	_acea.PivotArea = NewCT_PivotArea()
	return _acea
}

func NewCT_PageField() *CT_PageField { _gedcb := &CT_PageField{}; return _gedcb }

func (_ffaegb *ST_UnderlineValues) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_ffaegb = 0
	case "\u0073\u0069\u006e\u0067\u006c\u0065":
		*_ffaegb = 1
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_ffaegb = 2
	case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_ffaegb = 3
	case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_ffaegb = 4
	case "\u006e\u006f\u006e\u0065":
		*_ffaegb = 5
	}
	return nil
}

func (_cbfbe *CT_QueryTableFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fcdcf := range start.Attr {
		if _fcdcf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aaegf, _ccagba := _a.ParseUint(_fcdcf.Value, 10, 32)
			if _ccagba != nil {
				return _ccagba
			}
			_ecagb := uint32(_aaegf)
			_cbfbe.CountAttr = &_ecagb
			continue
		}
	}
_bdeba:
	for {
		_ddfdb, _ddfcb := d.Token()
		if _ddfcb != nil {
			return _ddfcb
		}
		switch _bcgaa := _ddfdb.(type) {
		case _gd.StartElement:
			switch _bcgaa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_dacca := NewCT_QueryTableField()
				if _agfc := d.DecodeElement(_dacca, &_bcgaa); _agfc != nil {
					return _agfc
				}
				_cbfbe.QueryTableField = append(_cbfbe.QueryTableField, _dacca)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061bl\u0065\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _bcgaa.Name)
				if _dafddg := d.Skip(); _dafddg != nil {
					return _dafddg
				}
			}
		case _gd.EndElement:
			break _bdeba
		case _gd.CharData:
		}
	}
	return nil
}

type CT_BookViews struct {

	// Workbook View
	WorkbookView []*CT_BookView
}

func NewCT_RevisionFormatting() *CT_RevisionFormatting {
	_bdcfg := &CT_RevisionFormatting{}
	return _bdcfg
}

// Validate validates the CT_SheetCalcPr and its children
func (_efdcb *CT_SheetCalcPr) Validate() error {
	return _efdcb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072")
}

type CT_PrintOptions struct {

	// Horizontal Centered
	HorizontalCenteredAttr *bool

	// Vertical Centered
	VerticalCenteredAttr *bool

	// Print Headings
	HeadingsAttr *bool

	// Print Grid Lines
	GridLinesAttr *bool

	// Grid Lines Set
	GridLinesSetAttr *bool
}

// ValidateWithPath validates the CT_MdxTuple and its children, prefixing error messages with path
func (_ffggc *CT_MdxTuple) ValidateWithPath(path string) error {
	for _cbabd, _eaefc := range _ffggc.N {
		if _cgbca := _eaefc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _cbabd)); _cgbca != nil {
			return _cgbca
		}
	}
	return nil
}

type CT_DdeItems struct {

	// DDE Item definition
	DdeItem []*CT_DdeItem
}

func (_abfgc ST_DataConsolidateFunction) String() string {
	switch _abfgc {
	case 0:
		return ""
	case 1:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u006d\u0069\u006e"
	case 6:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 7:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 8:
		return "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case 9:
		return "\u0073\u0075\u006d"
	case 10:
		return "\u0076\u0061\u0072"
	case 11:
		return "\u0076\u0061\u0072\u0070"
	}
	return ""
}

func (_dfab ST_MdxFunctionType) Validate() error { return _dfab.ValidateWithPath("") }

func (_eebd *CT_Set) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eebd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eebd.CountAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006da\u0078\u0052\u0061\u006e\u006b"}, Value: _b.Sprintf("\u0025\u0076", _eebd.MaxRankAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _eebd.SetDefinitionAttr)})
	if _eebd.SortTypeAttr != ST_SortTypeUnset {
		_bdaba, _aadcaa := _eebd.SortTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _aadcaa != nil {
			return _aadcaa
		}
		start.Attr = append(start.Attr, _bdaba)
	}
	if _eebd.QueryFailedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eebd.QueryFailedAttr))})
	}
	e.EncodeToken(start)
	if _eebd.Tpls != nil {
		_aagbbd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _cegaf := range _eebd.Tpls {
			e.EncodeElement(_cegaf, _aagbbd)
		}
	}
	if _eebd.SortByTuple != nil {
		_eaebf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u006f\u0072\u0074\u0042\u0079T\u0075\u0070\u006c\u0065"}}
		e.EncodeElement(_eebd.SortByTuple, _eaebf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_aabe *CT_Control) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dgefb := range start.Attr {
		if _dgefb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgefb.Name.Local == "\u0069\u0064" || _dgefb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgefb.Name.Local == "\u0069\u0064" {
			_adbd, _badad := _dgefb.Value, error(nil)
			if _badad != nil {
				return _badad
			}
			_aabe.IdAttr = _adbd
			continue
		}
		if _dgefb.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_edge, _bbddd := _a.ParseUint(_dgefb.Value, 10, 32)
			if _bbddd != nil {
				return _bbddd
			}
			_aabe.ShapeIdAttr = uint32(_edge)
			continue
		}
		if _dgefb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bbcf, _dfbde := _dgefb.Value, error(nil)
			if _dfbde != nil {
				return _dfbde
			}
			_aabe.NameAttr = &_bbcf
			continue
		}
	}
_dffe:
	for {
		_bgad, _efab := d.Token()
		if _efab != nil {
			return _efab
		}
		switch _feeb := _bgad.(type) {
		case _gd.StartElement:
			switch _feeb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}:
				_aabe.ControlPr = NewCT_ControlPr()
				if _abfb := d.DecodeElement(_aabe.ControlPr, &_feeb); _abfb != nil {
					return _abfb
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _feeb.Name)
				if _fffgb := d.Skip(); _fffgb != nil {
					return _fffgb
				}
			}
		case _gd.EndElement:
			break _dffe
		case _gd.CharData:
		}
	}
	return nil
}

func (_cgecb *CT_RgbColor) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bdcab := range start.Attr {
		if _bdcab.Name.Local == "\u0072\u0067\u0062" {
			_fcffc, _fabgd := _bdcab.Value, error(nil)
			if _fabgd != nil {
				return _fabgd
			}
			_cgecb.RgbAttr = &_fcffc
			continue
		}
	}
	for {
		_ceaed, _cgabd := d.Token()
		if _cgabd != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u003a\u0020\u0025\u0073", _cgabd)
		}
		if _bbgcg, _bdaae := _ceaed.(_gd.EndElement); _bdaae && _bbgcg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcfac *CT_Color) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fcfac.AutoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fcfac.AutoAttr))})
	}
	if _fcfac.IndexedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069n\u0064\u0065\u0078\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fcfac.IndexedAttr)})
	}
	if _fcfac.RgbAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0067\u0062"}, Value: _b.Sprintf("\u0025\u0076", *_fcfac.RgbAttr)})
	}
	if _fcfac.ThemeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0068\u0065m\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_fcfac.ThemeAttr)})
	}
	if _fcfac.TintAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0069\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fcfac.TintAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type PivotTableDefinition struct{ CT_pivotTableDefinition }

// ValidateWithPath validates the CT_OleObjects and its children, prefixing error messages with path
func (_deedf *CT_OleObjects) ValidateWithPath(path string) error {
	for _acbcb, _cfdggf := range _deedf.OleObject {
		if _deag := _cfdggf.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _acbcb)); _deag != nil {
			return _deag
		}
	}
	return nil
}

func (_cabcbe ST_CellComments) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_abedeb := _gd.Attr{}
	_abedeb.Name = name
	switch _cabcbe {
	case ST_CellCommentsUnset:
		_abedeb.Value = ""
	case ST_CellCommentsNone:
		_abedeb.Value = "\u006e\u006f\u006e\u0065"
	case ST_CellCommentsAsDisplayed:
		_abedeb.Value = "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case ST_CellCommentsAtEnd:
		_abedeb.Value = "\u0061\u0074\u0045n\u0064"
	}
	return _abedeb, nil
}

func NewCT_FontScheme() *CT_FontScheme {
	_ffcfa := &CT_FontScheme{}
	_ffcfa.ValAttr = ST_FontScheme(1)
	return _ffcfa
}

// Validate validates the CT_Map and its children
func (_fbbbd *CT_Map) Validate() error {
	return _fbbbd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070")
}

func (_defgb *CT_RPrElt) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _defgb.RFont != nil {
		_cfedc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_defgb.RFont, _cfedc)
	}
	if _defgb.Charset != nil {
		_bgddg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		e.EncodeElement(_defgb.Charset, _bgddg)
	}
	if _defgb.Family != nil {
		_aefac := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		e.EncodeElement(_defgb.Family, _aefac)
	}
	if _defgb.B != nil {
		_gfcgfb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062"}}
		e.EncodeElement(_defgb.B, _gfcgfb)
	}
	if _defgb.I != nil {
		_aeabg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069"}}
		e.EncodeElement(_defgb.I, _aeabg)
	}
	if _defgb.Strike != nil {
		_agbfg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		e.EncodeElement(_defgb.Strike, _agbfg)
	}
	if _defgb.Outline != nil {
		_eccce := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_defgb.Outline, _eccce)
	}
	if _defgb.Shadow != nil {
		_efcdc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		e.EncodeElement(_defgb.Shadow, _efcdc)
	}
	if _defgb.Condense != nil {
		_bgcba := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		e.EncodeElement(_defgb.Condense, _bgcba)
	}
	if _defgb.Extend != nil {
		_cadad := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		e.EncodeElement(_defgb.Extend, _cadad)
	}
	if _defgb.Color != nil {
		_gfgbfd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_defgb.Color, _gfgbfd)
	}
	if _defgb.Sz != nil {
		_aaecc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u007a"}}
		e.EncodeElement(_defgb.Sz, _aaecc)
	}
	if _defgb.U != nil {
		_dcbbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0075"}}
		e.EncodeElement(_defgb.U, _dcbbb)
	}
	if _defgb.VertAlign != nil {
		_egeae := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		e.EncodeElement(_defgb.VertAlign, _egeae)
	}
	if _defgb.Scheme != nil {
		_abdg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		e.EncodeElement(_defgb.Scheme, _abdg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataTypes struct {

	// Metadata Type Count
	CountAttr *uint32

	// Metadata Type Information
	MetadataType []*CT_MetadataType
}

func (_aabfgf *CT_Worksheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aabfgf.SheetData = NewCT_SheetData()
_fbfdb:
	for {
		_gfagec, _cffgf := d.Token()
		if _cffgf != nil {
			return _cffgf
		}
		switch _aeeea := _gfagec.(type) {
		case _gd.StartElement:
			switch _aeeea.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_aabfgf.SheetPr = NewCT_SheetPr()
				if _ccbeb := d.DecodeElement(_aabfgf.SheetPr, &_aeeea); _ccbeb != nil {
					return _ccbeb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_aabfgf.Dimension = NewCT_SheetDimension()
				if _abfda := d.DecodeElement(_aabfgf.Dimension, &_aeeea); _abfda != nil {
					return _abfda
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_aabfgf.SheetViews = NewCT_SheetViews()
				if _gbgdf := d.DecodeElement(_aabfgf.SheetViews, &_aeeea); _gbgdf != nil {
					return _gbgdf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_aabfgf.SheetFormatPr = NewCT_SheetFormatPr()
				if _cfcdd := d.DecodeElement(_aabfgf.SheetFormatPr, &_aeeea); _cfcdd != nil {
					return _cfcdd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_dagaa := NewCT_Cols()
				if _acbfb := d.DecodeElement(_dagaa, &_aeeea); _acbfb != nil {
					return _acbfb
				}
				_aabfgf.Cols = append(_aabfgf.Cols, _dagaa)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _gacgfg := d.DecodeElement(_aabfgf.SheetData, &_aeeea); _gacgfg != nil {
					return _gacgfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_aabfgf.SheetCalcPr = NewCT_SheetCalcPr()
				if _ecaae := d.DecodeElement(_aabfgf.SheetCalcPr, &_aeeea); _ecaae != nil {
					return _ecaae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_aabfgf.SheetProtection = NewCT_SheetProtection()
				if _dfecf := d.DecodeElement(_aabfgf.SheetProtection, &_aeeea); _dfecf != nil {
					return _dfecf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_aabfgf.ProtectedRanges = NewCT_ProtectedRanges()
				if _fgee := d.DecodeElement(_aabfgf.ProtectedRanges, &_aeeea); _fgee != nil {
					return _fgee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_aabfgf.Scenarios = NewCT_Scenarios()
				if _abbfg := d.DecodeElement(_aabfgf.Scenarios, &_aeeea); _abbfg != nil {
					return _abbfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_aabfgf.AutoFilter = NewCT_AutoFilter()
				if _ggfac := d.DecodeElement(_aabfgf.AutoFilter, &_aeeea); _ggfac != nil {
					return _ggfac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_aabfgf.SortState = NewCT_SortState()
				if _ceggb := d.DecodeElement(_aabfgf.SortState, &_aeeea); _ceggb != nil {
					return _ceggb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_aabfgf.DataConsolidate = NewCT_DataConsolidate()
				if _dcccd := d.DecodeElement(_aabfgf.DataConsolidate, &_aeeea); _dcccd != nil {
					return _dcccd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_aabfgf.CustomSheetViews = NewCT_CustomSheetViews()
				if _fgfddd := d.DecodeElement(_aabfgf.CustomSheetViews, &_aeeea); _fgfddd != nil {
					return _fgfddd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_aabfgf.MergeCells = NewCT_MergeCells()
				if _aagebe := d.DecodeElement(_aabfgf.MergeCells, &_aeeea); _aagebe != nil {
					return _aagebe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_aabfgf.PhoneticPr = NewCT_PhoneticPr()
				if _ffadg := d.DecodeElement(_aabfgf.PhoneticPr, &_aeeea); _ffadg != nil {
					return _ffadg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_gaage := NewCT_ConditionalFormatting()
				if _cebbgb := d.DecodeElement(_gaage, &_aeeea); _cebbgb != nil {
					return _cebbgb
				}
				_aabfgf.ConditionalFormatting = append(_aabfgf.ConditionalFormatting, _gaage)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_aabfgf.DataValidations = NewCT_DataValidations()
				if _ebbbae := d.DecodeElement(_aabfgf.DataValidations, &_aeeea); _ebbbae != nil {
					return _ebbbae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_aabfgf.Hyperlinks = NewCT_Hyperlinks()
				if _eddaf := d.DecodeElement(_aabfgf.Hyperlinks, &_aeeea); _eddaf != nil {
					return _eddaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_aabfgf.PrintOptions = NewCT_PrintOptions()
				if _ebacdd := d.DecodeElement(_aabfgf.PrintOptions, &_aeeea); _ebacdd != nil {
					return _ebacdd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_aabfgf.PageMargins = NewCT_PageMargins()
				if _gcebg := d.DecodeElement(_aabfgf.PageMargins, &_aeeea); _gcebg != nil {
					return _gcebg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_aabfgf.PageSetup = NewCT_PageSetup()
				if _fdfgc := d.DecodeElement(_aabfgf.PageSetup, &_aeeea); _fdfgc != nil {
					return _fdfgc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aabfgf.HeaderFooter = NewCT_HeaderFooter()
				if _dcbaa := d.DecodeElement(_aabfgf.HeaderFooter, &_aeeea); _dcbaa != nil {
					return _dcbaa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_aabfgf.RowBreaks = NewCT_PageBreak()
				if _egedabe := d.DecodeElement(_aabfgf.RowBreaks, &_aeeea); _egedabe != nil {
					return _egedabe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_aabfgf.ColBreaks = NewCT_PageBreak()
				if _bacbf := d.DecodeElement(_aabfgf.ColBreaks, &_aeeea); _bacbf != nil {
					return _bacbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_aabfgf.CustomProperties = NewCT_CustomProperties()
				if _ddedd := d.DecodeElement(_aabfgf.CustomProperties, &_aeeea); _ddedd != nil {
					return _ddedd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_aabfgf.CellWatches = NewCT_CellWatches()
				if _abece := d.DecodeElement(_aabfgf.CellWatches, &_aeeea); _abece != nil {
					return _abece
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_aabfgf.IgnoredErrors = NewCT_IgnoredErrors()
				if _efgcfg := d.DecodeElement(_aabfgf.IgnoredErrors, &_aeeea); _efgcfg != nil {
					return _efgcfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_aabfgf.SmartTags = NewCT_SmartTags()
				if _adgfb := d.DecodeElement(_aabfgf.SmartTags, &_aeeea); _adgfb != nil {
					return _adgfb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_aabfgf.Drawing = NewCT_Drawing()
				if _aedgg := d.DecodeElement(_aabfgf.Drawing, &_aeeea); _aedgg != nil {
					return _aedgg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_aabfgf.LegacyDrawing = NewCT_LegacyDrawing()
				if _adgcef := d.DecodeElement(_aabfgf.LegacyDrawing, &_aeeea); _adgcef != nil {
					return _adgcef
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_aabfgf.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _cbbcbg := d.DecodeElement(_aabfgf.LegacyDrawingHF, &_aeeea); _cbbcbg != nil {
					return _cbbcbg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_aabfgf.DrawingHF = NewCT_DrawingHF()
				if _dffcf := d.DecodeElement(_aabfgf.DrawingHF, &_aeeea); _dffcf != nil {
					return _dffcf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_aabfgf.Picture = NewCT_SheetBackgroundPicture()
				if _fdebb := d.DecodeElement(_aabfgf.Picture, &_aeeea); _fdebb != nil {
					return _fdebb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_aabfgf.OleObjects = NewCT_OleObjects()
				if _caaee := d.DecodeElement(_aabfgf.OleObjects, &_aeeea); _caaee != nil {
					return _caaee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_aabfgf.Controls = NewCT_Controls()
				if _cbaaa := d.DecodeElement(_aabfgf.Controls, &_aeeea); _cbaaa != nil {
					return _cbaaa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_aabfgf.WebPublishItems = NewCT_WebPublishItems()
				if _caacd := d.DecodeElement(_aabfgf.WebPublishItems, &_aeeea); _caacd != nil {
					return _caacd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_aabfgf.TableParts = NewCT_TableParts()
				if _cccac := d.DecodeElement(_aabfgf.TableParts, &_aeeea); _cccac != nil {
					return _cccac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aabfgf.ExtLst = NewCT_ExtensionList()
				if _fgccea := d.DecodeElement(_aabfgf.ExtLst, &_aeeea); _fgccea != nil {
					return _fgccea
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_W\u006f\u0072k\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _aeeea.Name)
				if _dfcbg := d.Skip(); _dfcbg != nil {
					return _dfcbg
				}
			}
		case _gd.EndElement:
			break _fbfdb
		case _gd.CharData:
		}
	}
	return nil
}

func (_cgcgf *CT_Hyperlinks) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_beafg:
	for {
		_cgdae, _gddg := d.Token()
		if _gddg != nil {
			return _gddg
		}
		switch _cgdc := _cgdae.(type) {
		case _gd.StartElement:
			switch _cgdc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}:
				_beeef := NewCT_Hyperlink()
				if _agbcf := d.DecodeElement(_beeef, &_cgdc); _agbcf != nil {
					return _agbcf
				}
				_cgcgf.Hyperlink = append(_cgcgf.Hyperlink, _beeef)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048y\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073 \u0025\u0076", _cgdc.Name)
				if _fbdcb := d.Skip(); _fbdcb != nil {
					return _fbdcb
				}
			}
		case _gd.EndElement:
			break _beafg
		case _gd.CharData:
		}
	}
	return nil
}

func (_bgaba *CT_VerticalAlignFontProperty) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_facfe, _cagfd := _bgaba.ValAttr.MarshalXMLAttr(_gd.Name{Local: "\u0076\u0061\u006c"})
	if _cagfd != nil {
		return _cagfd
	}
	start.Attr = append(start.Attr, _facfe)
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_debdb *CT_FieldUsage) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078"}, Value: _b.Sprintf("\u0025\u0076", _debdb.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SingleXmlCell and its children, prefixing error messages with path
func (_bcbdc *CT_SingleXmlCell) ValidateWithPath(path string) error {
	if _bdcebg := _bcbdc.XmlCellPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"); _bdcebg != nil {
		return _bdcebg
	}
	if _bcbdc.ExtLst != nil {
		if _cedea := _bcbdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cedea != nil {
			return _cedea
		}
	}
	return nil
}

func NewCT_OleObject() *CT_OleObject { _aacag := &CT_OleObject{}; return _aacag }

// ValidateWithPath validates the CT_IconFilter and its children, prefixing error messages with path
func (_dfaae *CT_IconFilter) ValidateWithPath(path string) error {
	if _dfaae.IconSetAttr == ST_IconSetTypeUnset {
		return _b.Errorf("%\u0073\u002f\u0049\u0063\u006f\u006eS\u0065\u0074\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bbddda := _dfaae.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _bbddda != nil {
		return _bbddda
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedItem and its children, prefixing error messages with path
func (_aedc *CT_CalculatedItem) ValidateWithPath(path string) error {
	if _eefa := _aedc.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _eefa != nil {
		return _eefa
	}
	if _aedc.ExtLst != nil {
		if _becb := _aedc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _becb != nil {
			return _becb
		}
	}
	return nil
}

func NewCT_TableStyleElement() *CT_TableStyleElement {
	_eafff := &CT_TableStyleElement{}
	_eafff.TypeAttr = ST_TableStyleType(1)
	return _eafff
}

func (_beaeca ST_DataConsolidateFunction) Validate() error { return _beaeca.ValidateWithPath("") }

func (_gabdef ST_PivotFilterType) Validate() error { return _gabdef.ValidateWithPath("") }

// Validate validates the CT_RangeSet and its children
func (_baddd *CT_RangeSet) Validate() error {
	return _baddd.ValidateWithPath("C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074")
}

func (_dcabc *CT_CustomSheetView) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dcabc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _eggbf := range start.Attr {
		if _eggbf.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_dcabc.StateAttr.UnmarshalXMLAttr(_eggbf)
			continue
		}
		if _eggbf.Name.Local == "\u0067\u0075\u0069\u0064" {
			_ebef, _dgab := _eggbf.Value, error(nil)
			if _dgab != nil {
				return _dgab
			}
			_dcabc.GuidAttr = _ebef
			continue
		}
		if _eggbf.Name.Local == "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065" {
			_aeefa, _acgc := _a.ParseBool(_eggbf.Value)
			if _acgc != nil {
				return _acgc
			}
			_dcabc.FilterUniqueAttr = &_aeefa
			continue
		}
		if _eggbf.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_daafa, _cadge := _a.ParseUint(_eggbf.Value, 10, 32)
			if _cadge != nil {
				return _cadge
			}
			_babbc := uint32(_daafa)
			_dcabc.ColorIdAttr = &_babbc
			continue
		}
		if _eggbf.Name.Local == "\u0076\u0069\u0065\u0077" {
			_dcabc.ViewAttr.UnmarshalXMLAttr(_eggbf)
			continue
		}
		if _eggbf.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_eecgd, _ecfee := _a.ParseBool(_eggbf.Value)
			if _ecfee != nil {
				return _ecfee
			}
			_dcabc.ShowFormulasAttr = &_eecgd
			continue
		}
		if _eggbf.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_bcfc, _caaaf := _a.ParseBool(_eggbf.Value)
			if _caaaf != nil {
				return _caaaf
			}
			_dcabc.ShowRulerAttr = &_bcfc
			continue
		}
		if _eggbf.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c" {
			_ffef, _bebc := _a.ParseBool(_eggbf.Value)
			if _bebc != nil {
				return _bebc
			}
			_dcabc.ShowRowColAttr = &_ffef
			continue
		}
		if _eggbf.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_abcgc, _gfcbe := _eggbf.Value, error(nil)
			if _gfcbe != nil {
				return _gfcbe
			}
			_dcabc.TopLeftCellAttr = &_abcgc
			continue
		}
		if _eggbf.Name.Local == "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073" {
			_dbaf, _bgbe := _a.ParseBool(_eggbf.Value)
			if _bgbe != nil {
				return _bgbe
			}
			_dcabc.ZeroValuesAttr = &_dbaf
			continue
		}
		if _eggbf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_daeg, _bfebc := _a.ParseBool(_eggbf.Value)
			if _bfebc != nil {
				return _bfebc
			}
			_dcabc.HiddenColumnsAttr = &_daeg
			continue
		}
		if _eggbf.Name.Local == "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073" {
			_dged, _dbac := _a.ParseBool(_eggbf.Value)
			if _dbac != nil {
				return _dbac
			}
			_dcabc.OutlineSymbolsAttr = &_dged
			continue
		}
		if _eggbf.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_ccged, _ddca := _a.ParseBool(_eggbf.Value)
			if _ddca != nil {
				return _ddca
			}
			_dcabc.FilterAttr = &_ccged
			continue
		}
		if _eggbf.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_daag, _dgadb := _a.ParseUint(_eggbf.Value, 10, 32)
			if _dgadb != nil {
				return _dgadb
			}
			_adgbc := uint32(_daag)
			_dcabc.ScaleAttr = &_adgbc
			continue
		}
		if _eggbf.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_dfgbe, _befca := _a.ParseBool(_eggbf.Value)
			if _befca != nil {
				return _befca
			}
			_dcabc.ShowGridLinesAttr = &_dfgbe
			continue
		}
		if _eggbf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073" {
			_eegcg, _bede := _a.ParseBool(_eggbf.Value)
			if _bede != nil {
				return _bede
			}
			_dcabc.HiddenRowsAttr = &_eegcg
			continue
		}
		if _eggbf.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_gfaea, _fegf := _a.ParseBool(_eggbf.Value)
			if _fegf != nil {
				return _fegf
			}
			_dcabc.FitToPageAttr = &_gfaea
			continue
		}
		if _eggbf.Name.Local == "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a" {
			_fddee, _dace := _a.ParseBool(_eggbf.Value)
			if _dace != nil {
				return _dace
			}
			_dcabc.PrintAreaAttr = &_fddee
			continue
		}
		if _eggbf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072" {
			_acgf, _daafb := _a.ParseBool(_eggbf.Value)
			if _daafb != nil {
				return _daafb
			}
			_dcabc.ShowAutoFilterAttr = &_acgf
			continue
		}
		if _eggbf.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_eabab, _afce := _a.ParseBool(_eggbf.Value)
			if _afce != nil {
				return _afce
			}
			_dcabc.ShowPageBreaksAttr = &_eabab
			continue
		}
	}
_fdgc:
	for {
		_fafef, _ggdde := d.Token()
		if _ggdde != nil {
			return _ggdde
		}
		switch _afbd := _fafef.(type) {
		case _gd.StartElement:
			switch _afbd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_dcabc.Pane = NewCT_Pane()
				if _abcab := d.DecodeElement(_dcabc.Pane, &_afbd); _abcab != nil {
					return _abcab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_dcabc.Selection = NewCT_Selection()
				if _acbc := d.DecodeElement(_dcabc.Selection, &_afbd); _acbc != nil {
					return _acbc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_dcabc.RowBreaks = NewCT_PageBreak()
				if _bfgg := d.DecodeElement(_dcabc.RowBreaks, &_afbd); _bfgg != nil {
					return _bfgg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_dcabc.ColBreaks = NewCT_PageBreak()
				if _gaccc := d.DecodeElement(_dcabc.ColBreaks, &_afbd); _gaccc != nil {
					return _gaccc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_dcabc.PageMargins = NewCT_PageMargins()
				if _dbadb := d.DecodeElement(_dcabc.PageMargins, &_afbd); _dbadb != nil {
					return _dbadb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_dcabc.PrintOptions = NewCT_PrintOptions()
				if _bbdaf := d.DecodeElement(_dcabc.PrintOptions, &_afbd); _bbdaf != nil {
					return _bbdaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_dcabc.PageSetup = NewCT_PageSetup()
				if _fdce := d.DecodeElement(_dcabc.PageSetup, &_afbd); _fdce != nil {
					return _fdce
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_dcabc.HeaderFooter = NewCT_HeaderFooter()
				if _cfecb := d.DecodeElement(_dcabc.HeaderFooter, &_afbd); _cfecb != nil {
					return _cfecb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_dcabc.AutoFilter = NewCT_AutoFilter()
				if _fbcc := d.DecodeElement(_dcabc.AutoFilter, &_afbd); _fbcc != nil {
					return _fbcc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcabc.ExtLst = NewCT_ExtensionList()
				if _ebecd := d.DecodeElement(_dcabc.ExtLst, &_afbd); _ebecd != nil {
					return _ebecd
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _afbd.Name)
				if _afgff := d.Skip(); _afgff != nil {
					return _afgff
				}
			}
		case _gd.EndElement:
			break _fdgc
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Set and its children
func (_gddcc *CT_Set) Validate() error {
	return _gddcc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0065\u0074")
}

// ValidateWithPath validates the CT_ChartsheetPr and its children, prefixing error messages with path
func (_cfdgg *CT_ChartsheetPr) ValidateWithPath(path string) error {
	if _cfdgg.TabColor != nil {
		if _cbbgg := _cfdgg.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _cbbgg != nil {
			return _cbbgg
		}
	}
	return nil
}

func (_ggbfd *CT_TextPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ccegfb := range start.Attr {
		if _ccegfb.Name.Local == "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s" {
			_addbf, _ceege := _ccegfb.Value, error(nil)
			if _ceege != nil {
				return _ceege
			}
			_ggbfd.ThousandsAttr = &_addbf
			continue
		}
		if _ccegfb.Name.Local == "\u0074\u0061\u0062" {
			_cagde, _ceeca := _a.ParseBool(_ccegfb.Value)
			if _ceeca != nil {
				return _ceeca
			}
			_ggbfd.TabAttr = &_cagde
			continue
		}
		if _ccegfb.Name.Local == "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065" {
			_ggbfd.FileTypeAttr.UnmarshalXMLAttr(_ccegfb)
			continue
		}
		if _ccegfb.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_gffab, _gaegef := _a.ParseBool(_ccegfb.Value)
			if _gaegef != nil {
				return _gaegef
			}
			_ggbfd.SpaceAttr = &_gffab
			continue
		}
		if _ccegfb.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_eadbdb, _ggebg := _ccegfb.Value, error(nil)
			if _ggebg != nil {
				return _ggebg
			}
			_ggbfd.CharacterSetAttr = &_eadbdb
			continue
		}
		if _ccegfb.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_gafbg, _daeda := _ccegfb.Value, error(nil)
			if _daeda != nil {
				return _daeda
			}
			_ggbfd.SourceFileAttr = &_gafbg
			continue
		}
		if _ccegfb.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d" {
			_fdcef, _egafc := _a.ParseBool(_ccegfb.Value)
			if _egafc != nil {
				return _egafc
			}
			_ggbfd.DelimitedAttr = &_fdcef
			continue
		}
		if _ccegfb.Name.Local == "\u0064e\u0063\u0069\u006d\u0061\u006c" {
			_ddbgg, _eaefb := _ccegfb.Value, error(nil)
			if _eaefb != nil {
				return _eaefb
			}
			_ggbfd.DecimalAttr = &_ddbgg
			continue
		}
		if _ccegfb.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_fdbga, _cfafc := _a.ParseBool(_ccegfb.Value)
			if _cfafc != nil {
				return _cfafc
			}
			_ggbfd.PromptAttr = &_fdbga
			continue
		}
		if _ccegfb.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_faaedb, _fcead := _a.ParseUint(_ccegfb.Value, 10, 32)
			if _fcead != nil {
				return _fcead
			}
			_cdeaf := uint32(_faaedb)
			_ggbfd.CodePageAttr = &_cdeaf
			continue
		}
		if _ccegfb.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_ffbgb, _cdceda := _a.ParseUint(_ccegfb.Value, 10, 32)
			if _cdceda != nil {
				return _cdceda
			}
			_fcagf := uint32(_ffbgb)
			_ggbfd.FirstRowAttr = &_fcagf
			continue
		}
		if _ccegfb.Name.Local == "\u0063\u006f\u006dm\u0061" {
			_ddbfg, _caafe := _a.ParseBool(_ccegfb.Value)
			if _caafe != nil {
				return _caafe
			}
			_ggbfd.CommaAttr = &_ddbfg
			continue
		}
		if _ccegfb.Name.Local == "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn" {
			_gddbb, _deafe := _a.ParseBool(_ccegfb.Value)
			if _deafe != nil {
				return _deafe
			}
			_ggbfd.SemicolonAttr = &_gddbb
			continue
		}
		if _ccegfb.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_aedfd, _bfabb := _a.ParseBool(_ccegfb.Value)
			if _bfabb != nil {
				return _bfabb
			}
			_ggbfd.ConsecutiveAttr = &_aedfd
			continue
		}
		if _ccegfb.Name.Local == "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r" {
			_ggbfd.QualifierAttr.UnmarshalXMLAttr(_ccegfb)
			continue
		}
		if _ccegfb.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r" {
			_bdfca, _bafcb := _ccegfb.Value, error(nil)
			if _bafcb != nil {
				return _bafcb
			}
			_ggbfd.DelimiterAttr = &_bdfca
			continue
		}
	}
_bdccff:
	for {
		_bdffb, _bgfce := d.Token()
		if _bgfce != nil {
			return _bgfce
		}
		switch _efccac := _bdffb.(type) {
		case _gd.StartElement:
			switch _efccac.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_ggbfd.TextFields = NewCT_TextFields()
				if _gcgdga := d.DecodeElement(_ggbfd.TextFields, &_efccac); _gcgdga != nil {
					return _gcgdga
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0065\u0078t\u0050\u0072 \u0025\u0076", _efccac.Name)
				if _dfged := d.Skip(); _dfged != nil {
					return _dfged
				}
			}
		case _gd.EndElement:
			break _bdccff
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CacheSource and its children
func (_ecg *CT_CacheSource) Validate() error {
	return _ecg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065")
}

func (_acfbbc ST_Axis) Validate() error { return _acfbbc.ValidateWithPath("") }

func (_acgfg ST_FontScheme) ValidateWithPath(path string) error {
	switch _acgfg {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acgfg))
	}
	return nil
}

func (_gbdgf *CT_IconSet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cgdcg := range start.Attr {
		if _cgdcg.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_gbdgf.IconSetAttr.UnmarshalXMLAttr(_cgdcg)
			continue
		}
		if _cgdcg.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_gecef, _abggc := _a.ParseBool(_cgdcg.Value)
			if _abggc != nil {
				return _abggc
			}
			_gbdgf.ShowValueAttr = &_gecef
			continue
		}
		if _cgdcg.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_eabcb, _gffdb := _a.ParseBool(_cgdcg.Value)
			if _gffdb != nil {
				return _gffdb
			}
			_gbdgf.PercentAttr = &_eabcb
			continue
		}
		if _cgdcg.Name.Local == "\u0072e\u0076\u0065\u0072\u0073\u0065" {
			_aace, _afaae := _a.ParseBool(_cgdcg.Value)
			if _afaae != nil {
				return _afaae
			}
			_gbdgf.ReverseAttr = &_aace
			continue
		}
	}
_cdde:
	for {
		_bbde, _eeaa := d.Token()
		if _eeaa != nil {
			return _eeaa
		}
		switch _ebdb := _bbde.(type) {
		case _gd.StartElement:
			switch _ebdb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_agcbf := NewCT_Cfvo()
				if _aeacaa := d.DecodeElement(_agcbf, &_ebdb); _aeacaa != nil {
					return _aeacaa
				}
				_gbdgf.Cfvo = append(_gbdgf.Cfvo, _agcbf)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fI\u0063\u006f\u006e\u0053\u0065\u0074\u0020\u0025\u0076", _ebdb.Name)
				if _efedf := d.Skip(); _efedf != nil {
					return _efedf
				}
			}
		case _gd.EndElement:
			break _cdde
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDKPIs and its children, prefixing error messages with path
func (_egeda *CT_PCDKPIs) ValidateWithPath(path string) error {
	for _cabg, _gccdgg := range _egeda.Kpi {
		if _baefe := _gccdgg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004b\u0070\u0069\u005b\u0025\u0064\u005d", path, _cabg)); _baefe != nil {
			return _baefe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TablePart and its children, prefixing error messages with path
func (_cgeeg *CT_TablePart) ValidateWithPath(path string) error { return nil }

func (_bfffc *CT_ExternalDefinedName) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bfffc.NameAttr)})
	if _bfffc.RefersToAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_bfffc.RefersToAttr)})
	}
	if _bfffc.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfffc.SheetIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Table struct {

	// Table Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Table Name
	DisplayNameAttr string

	// Table Comment
	CommentAttr *string

	// Reference
	RefAttr string

	// Table Type
	TableTypeAttr ST_TableType

	// Header Row Count
	HeaderRowCountAttr *uint32

	// Insert Row Showing
	InsertRowAttr *bool

	// Insert Row Shift
	InsertRowShiftAttr *bool

	// Totals Row Count
	TotalsRowCountAttr *uint32

	// Totals Row Shown
	TotalsRowShownAttr *bool

	// Published
	PublishedAttr *bool

	// Header Row Format Id
	HeaderRowDxfIdAttr *uint32

	// Data Area Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Border Format Id
	HeaderRowBorderDxfIdAttr *uint32

	// Table Border Format Id
	TableBorderDxfIdAttr *uint32

	// Totals Row Border Format Id
	TotalsRowBorderDxfIdAttr *uint32

	// Header Row Style
	HeaderRowCellStyleAttr *string

	// Data Style Name
	DataCellStyleAttr *string

	// Totals Row Style
	TotalsRowCellStyleAttr *string

	// Connection ID
	ConnectionIdAttr *uint32

	// Table AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Table Columns
	TableColumns *CT_TableColumns

	// Table Style
	TableStyleInfo *CT_TableStyleInfo

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dgcg *CT_CustomChartsheetViews) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cadg:
	for {
		_bgcg, _gdfd := d.Token()
		if _gdfd != nil {
			return _gdfd
		}
		switch _ddcbg := _bgcg.(type) {
		case _gd.StartElement:
			switch _ddcbg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_dfgdg := NewCT_CustomChartsheetView()
				if _fcece := d.DecodeElement(_dfgdg, &_ddcbg); _fcece != nil {
					return _fcece
				}
				_dgcg.CustomSheetView = append(_dgcg.CustomSheetView, _dfgdg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073\u0020%\u0076", _ddcbg.Name)
				if _bbaa := d.Skip(); _bbaa != nil {
					return _bbaa
				}
			}
		case _gd.EndElement:
			break _cadg
		case _gd.CharData:
		}
	}
	return nil
}

func (_cffdf *ST_PrintError) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cffdf = 0
	case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
		*_cffdf = 1
	case "\u0062\u006c\u0061n\u006b":
		*_cffdf = 2
	case "\u0064\u0061\u0073\u0068":
		*_cffdf = 3
	case "\u004e\u0041":
		*_cffdf = 4
	}
	return nil
}

func NewCT_DdeValues() *CT_DdeValues { _agbcg := &CT_DdeValues{}; return _agbcg }

func (_gfgge *CT_RgbColor) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gfgge.RgbAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0067\u0062"}, Value: _b.Sprintf("\u0025\u0076", *_gfgge.RgbAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fbgbd *CT_WebPublishObject) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fbgbd.IdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fbgbd.DivIdAttr)})
	if _fbgbd.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fbgbd.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", _fbgbd.DestinationFileAttr)})
	if _fbgbd.TitleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_fbgbd.TitleAttr)})
	}
	if _fbgbd.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbgbd.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Stylesheet struct {

	// Number Formats
	NumFmts *CT_NumFmts

	// Fonts
	Fonts *CT_Fonts

	// Fills
	Fills *CT_Fills

	// Borders
	Borders *CT_Borders

	// Formatting Records
	CellStyleXfs *CT_CellStyleXfs

	// Cell Formats
	CellXfs *CT_CellXfs

	// Cell Styles
	CellStyles *CT_CellStyles

	// Formats
	Dxfs *CT_Dxfs

	// Table Styles
	TableStyles *CT_TableStyles

	// Colors
	Colors *CT_Colors

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bdcbff *CT_TableFormula) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(_bdcbff.ArrayAttr))})
	e.EncodeElement(_bdcbff.Content, start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fbcb *CT_CellSmartTag) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", _fbcb.TypeAttr)})
	if _fbcb.DeletedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbcb.DeletedAttr))})
	}
	if _fbcb.XmlBasedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbcb.XmlBasedAttr))})
	}
	e.EncodeToken(start)
	if _fbcb.CellSmartTagPr != nil {
		_dfgg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}}
		for _, _fede := range _fbcb.CellSmartTagPr {
			e.EncodeElement(_fede, _dfgg)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalculatedMember and its children
func (_ebde *CT_CalculatedMember) Validate() error {
	return _ebde.ValidateWithPath("\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072")
}

// ValidateWithPath validates the CT_RElt and its children, prefixing error messages with path
func (_bcagc *CT_RElt) ValidateWithPath(path string) error {
	if _bcagc.RPr != nil {
		if _ecbeg := _bcagc.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _ecbeg != nil {
			return _ecbeg
		}
	}
	return nil
}

func (_acbge *CT_MetadataRecord) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074"}, Value: _b.Sprintf("\u0025\u0076", _acbge.TAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", _acbge.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ffagca ST_SourceType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_fgcgc := _gd.Attr{}
	_fgcgc.Name = name
	switch _ffagca {
	case ST_SourceTypeUnset:
		_fgcgc.Value = ""
	case ST_SourceTypeWorksheet:
		_fgcgc.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_SourceTypeExternal:
		_fgcgc.Value = "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case ST_SourceTypeConsolidation:
		_fgcgc.Value = "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case ST_SourceTypeScenario:
		_fgcgc.Value = "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return _fgcgc, nil
}

func (_acabf *SingleXmlCells) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_acabf.CT_SingleXmlCells = *NewCT_SingleXmlCells()
_dgbbbe:
	for {
		_gagbg, _ccbbf := d.Token()
		if _ccbbf != nil {
			return _ccbbf
		}
		switch _cebff := _gagbg.(type) {
		case _gd.StartElement:
			switch _cebff.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_agbdc := NewCT_SingleXmlCell()
				if _bdebb := d.DecodeElement(_agbdc, &_cebff); _bdebb != nil {
					return _bdebb
				}
				_acabf.SingleXmlCell = append(_acabf.SingleXmlCell, _agbdc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043e\u006cl\u0073\u0020\u0025\u0076", _cebff.Name)
				if _dddde := d.Skip(); _dddde != nil {
					return _dddde
				}
			}
		case _gd.EndElement:
			break _dgbbbe
		case _gd.CharData:
		}
	}
	return nil
}

func (_cdaecc *ST_SmartTagShow) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ebdcad, _fdgfa := d.Token()
	if _fdgfa != nil {
		return _fdgfa
	}
	if _aadebd, _fecea := _ebdcad.(_gd.EndElement); _fecea && _aadebd.Name == start.Name {
		*_cdaecc = 1
		return nil
	}
	if _ebgdec, _ebdab := _ebdcad.(_gd.CharData); !_ebdab {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebdcad)
	} else {
		switch string(_ebgdec) {
		case "":
			*_cdaecc = 0
		case "\u0061\u006c\u006c":
			*_cdaecc = 1
		case "\u006e\u006f\u006e\u0065":
			*_cdaecc = 2
		case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_cdaecc = 3
		}
	}
	_ebdcad, _fdgfa = d.Token()
	if _fdgfa != nil {
		return _fdgfa
	}
	if _gfccca, _acgac := _ebdcad.(_gd.EndElement); _acgac && _gfccca.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebdcad)
}

func (_egadb *CT_RevisionAutoFormatting) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _egadb.SheetIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _egadb.RefAttr)})
	if _egadb.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_egadb.AutoFormatIdAttr)})
	}
	if _egadb.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_egadb.ApplyNumberFormatsAttr))})
	}
	if _egadb.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_egadb.ApplyBorderFormatsAttr))})
	}
	if _egadb.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_egadb.ApplyFontFormatsAttr))})
	}
	if _egadb.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_egadb.ApplyPatternFormatsAttr))})
	}
	if _egadb.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_egadb.ApplyAlignmentFormatsAttr))})
	}
	if _egadb.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_egadb.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_QueryTableRefresh() *CT_QueryTableRefresh {
	_acdgf := &CT_QueryTableRefresh{}
	_acdgf.QueryTableFields = NewCT_QueryTableFields()
	return _acdgf
}

func (_ebbc *CT_Extension) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ebbc.UriAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0072\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_ebbc.UriAttr)})
	}
	e.EncodeToken(start)
	if _ebbc.Any != nil {
		_ebbc.Any.MarshalXML(e, _gd.StartElement{})
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gcbge ST_MdxSetOrder) ValidateWithPath(path string) error {
	switch _gcbge {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcbge))
	}
	return nil
}

func (_eecf *CT_DdeValues) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eecf.RowsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u006f\u0077\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_eecf.RowsAttr)})
	}
	if _eecf.ColsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_eecf.ColsAttr)})
	}
	e.EncodeToken(start)
	_cebfb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c\u0075\u0065"}}
	for _, _debca := range _eecf.Value {
		e.EncodeElement(_debca, _cebfb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_beeea ST_TotalsRowFunction) ValidateWithPath(path string) error {
	switch _beeea {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beeea))
	}
	return nil
}

func (_dccbf *CT_CustomWorkbookViews) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bbgfa:
	for {
		_ccfa, _bcbd := d.Token()
		if _bcbd != nil {
			return _bcbd
		}
		switch _gged := _ccfa.(type) {
		case _gd.StartElement:
			switch _gged.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}:
				_cece := NewCT_CustomWorkbookView()
				if _bgac := d.DecodeElement(_cece, &_gged); _bgac != nil {
					return _bgac
				}
				_dccbf.CustomWorkbookView = append(_dccbf.CustomWorkbookView, _cece)
			default:
				_e.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0075\u0073\u0074o\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _gged.Name)
				if _gfef := d.Skip(); _gfef != nil {
					return _gfef
				}
			}
		case _gd.EndElement:
			break _bbgfa
		case _gd.CharData:
		}
	}
	return nil
}

func (_ccgede *CT_Xf) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _edgfgf := range start.Attr {
		if _edgfgf.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et" {
			_dagcg, _dafeee := _a.ParseBool(_edgfgf.Value)
			if _dafeee != nil {
				return _dafeee
			}
			_ccgede.ApplyFontAttr = &_dagcg
			continue
		}
		if _edgfgf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_gabce, _fbdeda := _a.ParseUint(_edgfgf.Value, 10, 32)
			if _fbdeda != nil {
				return _fbdeda
			}
			_fcaae := uint32(_gabce)
			_ccgede.NumFmtIdAttr = &_fcaae
			continue
		}
		if _edgfgf.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl" {
			_bbgfgb, _edcfe := _a.ParseBool(_edgfgf.Value)
			if _edcfe != nil {
				return _edcfe
			}
			_ccgede.ApplyFillAttr = &_bbgfgb
			continue
		}
		if _edgfgf.Name.Local == "\u0066\u0069\u006c\u006c\u0049\u0064" {
			_dbdca, _gcaag := _a.ParseUint(_edgfgf.Value, 10, 32)
			if _gcaag != nil {
				return _gcaag
			}
			_dfgff := uint32(_dbdca)
			_ccgede.FillIdAttr = &_dfgff
			continue
		}
		if _edgfgf.Name.Local == "\u0078\u0066\u0049\u0064" {
			_baefec, _egggad := _a.ParseUint(_edgfgf.Value, 10, 32)
			if _egggad != nil {
				return _egggad
			}
			_edegca := uint32(_baefec)
			_ccgede.XfIdAttr = &_edegca
			continue
		}
		if _edgfgf.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_ebfecf, _dbaed := _a.ParseBool(_edgfgf.Value)
			if _dbaed != nil {
				return _dbaed
			}
			_ccgede.QuotePrefixAttr = &_ebfecf
			continue
		}
		if _edgfgf.Name.Local == "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e" {
			_eeaae, _fgcfef := _a.ParseBool(_edgfgf.Value)
			if _fgcfef != nil {
				return _fgcfef
			}
			_ccgede.PivotButtonAttr = &_eeaae
			continue
		}
		if _edgfgf.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074" {
			_feddg, _ffdcdc := _a.ParseBool(_edgfgf.Value)
			if _ffdcdc != nil {
				return _ffdcdc
			}
			_ccgede.ApplyNumberFormatAttr = &_feddg
			continue
		}
		if _edgfgf.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_eegef, _abfaf := _a.ParseUint(_edgfgf.Value, 10, 32)
			if _abfaf != nil {
				return _abfaf
			}
			_abfafa := uint32(_eegef)
			_ccgede.FontIdAttr = &_abfafa
			continue
		}
		if _edgfgf.Name.Local == "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064" {
			_abcbf, _gaeea := _a.ParseUint(_edgfgf.Value, 10, 32)
			if _gaeea != nil {
				return _gaeea
			}
			_bdffba := uint32(_abcbf)
			_ccgede.BorderIdAttr = &_bdffba
			continue
		}
		if _edgfgf.Name.Local == "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072" {
			_bafaf, _cadbf := _a.ParseBool(_edgfgf.Value)
			if _cadbf != nil {
				return _cadbf
			}
			_ccgede.ApplyBorderAttr = &_bafaf
			continue
		}
		if _edgfgf.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074" {
			_gacca, _cfcebc := _a.ParseBool(_edgfgf.Value)
			if _cfcebc != nil {
				return _cfcebc
			}
			_ccgede.ApplyAlignmentAttr = &_gacca
			continue
		}
		if _edgfgf.Name.Local == "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_fbagag, _bgede := _a.ParseBool(_edgfgf.Value)
			if _bgede != nil {
				return _bgede
			}
			_ccgede.ApplyProtectionAttr = &_fbagag
			continue
		}
	}
_efgecb:
	for {
		_cbcfdg, _cebdef := d.Token()
		if _cebdef != nil {
			return _cebdef
		}
		switch _bcagbfb := _cbcfdg.(type) {
		case _gd.StartElement:
			switch _bcagbfb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_ccgede.Alignment = NewCT_CellAlignment()
				if _geede := d.DecodeElement(_ccgede.Alignment, &_bcagbfb); _geede != nil {
					return _geede
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_ccgede.Protection = NewCT_CellProtection()
				if _cbaab := d.DecodeElement(_ccgede.Protection, &_bcagbfb); _cbaab != nil {
					return _cbaab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccgede.ExtLst = NewCT_ExtensionList()
				if _abbab := d.DecodeElement(_ccgede.ExtLst, &_bcagbfb); _abbab != nil {
					return _abbab
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fX\u0066 \u0025\u0076", _bcagbfb.Name)
				if _ffbddc := d.Skip(); _ffbddc != nil {
					return _ffbddc
				}
			}
		case _gd.EndElement:
			break _efgecb
		case _gd.CharData:
		}
	}
	return nil
}

func (_geba *CT_CalculatedMember) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _geba.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0064\u0078"}, Value: _b.Sprintf("\u0025\u0076", _geba.MdxAttr)})
	if _geba.MemberNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_geba.MemberNameAttr)})
	}
	if _geba.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _b.Sprintf("\u0025\u0076", *_geba.HierarchyAttr)})
	}
	if _geba.ParentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_geba.ParentAttr)})
	}
	if _geba.SolveOrderAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_geba.SolveOrderAttr)})
	}
	if _geba.SetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_geba.SetAttr))})
	}
	e.EncodeToken(start)
	if _geba.ExtLst != nil {
		_dbea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_geba.ExtLst, _dbea)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_FileRecoveryPr() *CT_FileRecoveryPr { _cgggg := &CT_FileRecoveryPr{}; return _cgggg }

func (_bbbdf ST_Visibility) String() string {
	switch _bbbdf {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

func (_afdad *CT_OutlinePr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gfdag := range start.Attr {
		if _gfdag.Name.Local == "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073" {
			_ddcde, _beege := _a.ParseBool(_gfdag.Value)
			if _beege != nil {
				return _beege
			}
			_afdad.ApplyStylesAttr = &_ddcde
			continue
		}
		if _gfdag.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077" {
			_facde, _aadcae := _a.ParseBool(_gfdag.Value)
			if _aadcae != nil {
				return _aadcae
			}
			_afdad.SummaryBelowAttr = &_facde
			continue
		}
		if _gfdag.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074" {
			_aeaad, _gaaab := _a.ParseBool(_gfdag.Value)
			if _gaaab != nil {
				return _gaaab
			}
			_afdad.SummaryRightAttr = &_aeaad
			continue
		}
		if _gfdag.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_ecced, _aedce := _a.ParseBool(_gfdag.Value)
			if _aedce != nil {
				return _aedce
			}
			_afdad.ShowOutlineSymbolsAttr = &_ecced
			continue
		}
	}
	for {
		_ffeced, _edag := d.Token()
		if _edag != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0075t\u006c\u0069\u006e\u0065\u0050\u0072\u003a\u0020\u0025\u0073", _edag)
		}
		if _bbbfe, _cabda := _ffeced.(_gd.EndElement); _cabda && _bbbfe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_debbd *CT_PivotFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dbceg := range start.Attr {
		if _dbceg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbaf, _eeaffe := _a.ParseUint(_dbceg.Value, 10, 32)
			if _eeaffe != nil {
				return _eeaffe
			}
			_bafgb := uint32(_bbaf)
			_debbd.CountAttr = &_bafgb
			continue
		}
	}
_bcagba:
	for {
		_bfgda, _ffdafb := d.Token()
		if _ffdafb != nil {
			return _ffdafb
		}
		switch _ddfa := _bfgda.(type) {
		case _gd.StartElement:
			switch _ddfa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}:
				_bgcdg := NewCT_PivotField()
				if _egegb := d.DecodeElement(_bgcdg, &_ddfa); _egegb != nil {
					return _egegb
				}
				_debbd.PivotField = append(_debbd.PivotField, _bgcdg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _ddfa.Name)
				if _acacb := d.Skip(); _acacb != nil {
					return _acacb
				}
			}
		case _gd.EndElement:
			break _bcagba
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Metadata and its children, prefixing error messages with path
func (_eebf *CT_Metadata) ValidateWithPath(path string) error {
	if _eebf.MetadataTypes != nil {
		if _gacfg := _eebf.MetadataTypes.ValidateWithPath(path + "\u002f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061T\u0079\u0070\u0065\u0073"); _gacfg != nil {
			return _gacfg
		}
	}
	if _eebf.MetadataStrings != nil {
		if _dgagd := _eebf.MetadataStrings.ValidateWithPath(path + "\u002f\u004de\u0074\u0061\u0064a\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"); _dgagd != nil {
			return _dgagd
		}
	}
	if _eebf.MdxMetadata != nil {
		if _adfdf := _eebf.MdxMetadata.ValidateWithPath(path + "\u002f\u004d\u0064x\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _adfdf != nil {
			return _adfdf
		}
	}
	for _baaed, _fbbeb := range _eebf.FutureMetadata {
		if _cgdfc := _fbbeb.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0046\u0075tu\u0072e\u004d\u0065\u0074\u0061\u0064a\u0074\u0061\u005b\u0025\u0064\u005d", path, _baaed)); _cgdfc != nil {
			return _cgdfc
		}
	}
	if _eebf.CellMetadata != nil {
		if _aecddg := _eebf.CellMetadata.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _aecddg != nil {
			return _aecddg
		}
	}
	if _eebf.ValueMetadata != nil {
		if _ggbbba := _eebf.ValueMetadata.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"); _ggbbba != nil {
			return _ggbbba
		}
	}
	if _eebf.ExtLst != nil {
		if _bddbf := _eebf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bddbf != nil {
			return _bddbf
		}
	}
	return nil
}

func NewCT_CalculatedMembers() *CT_CalculatedMembers { _gaee := &CT_CalculatedMembers{}; return _gaee }

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_gcaab *CT_Control) ValidateWithPath(path string) error {
	if _gcaab.ControlPr != nil {
		if _acfd := _gcaab.ControlPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"); _acfd != nil {
			return _acfd
		}
	}
	return nil
}

type CT_RevisionCustomView struct {

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction
}

// Validate validates the CT_PhoneticPr and its children
func (_ecegc *CT_PhoneticPr) Validate() error {
	return _ecegc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072")
}

// ValidateWithPath validates the CT_RevisionMove and its children, prefixing error messages with path
func (_ecceda *CT_RevisionMove) ValidateWithPath(path string) error {
	for _gaaacg, _cgbbe := range _ecceda.Undo {
		if _fcgbga := _cgbbe.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _gaaacg)); _fcgbga != nil {
			return _fcgbga
		}
	}
	for _ccaeg, _acgfb := range _ecceda.Rcc {
		if _adeda := _acgfb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _ccaeg)); _adeda != nil {
			return _adeda
		}
	}
	for _fgdge, _bddef := range _ecceda.Rfmt {
		if _cbde := _bddef.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _fgdge)); _cbde != nil {
			return _cbde
		}
	}
	return nil
}

type CT_Set struct {

	// Number of Tuples
	CountAttr *uint32

	// Maximum Rank Requested
	MaxRankAttr int32

	// MDX Set Definition
	SetDefinitionAttr string

	// Set Sort Order
	SortTypeAttr ST_SortType

	// Query Failed
	QueryFailedAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Sort By Tuple
	SortByTuple *CT_Tuples
}

// Validate validates the CT_Schema and its children
func (_efbde *CT_Schema) Validate() error {
	return _efbde.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da")
}

// ValidateWithPath validates the AG_AutoFormat and its children, prefixing error messages with path
func (_cdd *AG_AutoFormat) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_VolType and its children, prefixing error messages with path
func (_abefe *CT_VolType) ValidateWithPath(path string) error {
	if _abefe.TypeAttr == ST_VolDepTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ebdff := _abefe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ebdff != nil {
		return _ebdff
	}
	for _affgf, _cfcad := range _abefe.Main {
		if _eceddd := _cfcad.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u004d\u0061\u0069\u006e\u005b\u0025\u0064\u005d", path, _affgf)); _eceddd != nil {
			return _eceddd
		}
	}
	return nil
}

func (_afbda *CT_OleItem) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _afbda.NameAttr)})
	if _afbda.IconAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0063\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_afbda.IconAttr))})
	}
	if _afbda.AdviseAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_afbda.AdviseAttr))})
	}
	if _afbda.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_afbda.PreferPicAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_aabge *CT_GroupLevel) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _aabge.UniqueNameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _aabge.CaptionAttr)})
	if _aabge.UserAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aabge.UserAttr))})
	}
	if _aabge.CustomRollUpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aabge.CustomRollUpAttr))})
	}
	e.EncodeToken(start)
	if _aabge.Groups != nil {
		_afbeac := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0067\u0072\u006f\u0075\u0070s"}}
		e.EncodeElement(_aabge.Groups, _afbeac)
	}
	if _aabge.ExtLst != nil {
		_abfee := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aabge.ExtLst, _abfee)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_NumFmt struct {

	// Number Format Id
	NumFmtIdAttr uint32

	// Number Format Code
	FormatCodeAttr string
}

func (_cbcec *CT_QueryTableRefresh) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cbcec.PreserveSortFilterLayoutAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbcec.PreserveSortFilterLayoutAttr))})
	}
	if _cbcec.FieldIdWrappedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbcec.FieldIdWrappedAttr))})
	}
	if _cbcec.HeadersInLastRefreshAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbcec.HeadersInLastRefreshAttr))})
	}
	if _cbcec.MinimumVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cbcec.MinimumVersionAttr)})
	}
	if _cbcec.NextIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0065\u0078\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cbcec.NextIdAttr)})
	}
	if _cbcec.UnboundColumnsLeftAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cbcec.UnboundColumnsLeftAttr)})
	}
	if _cbcec.UnboundColumnsRightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cbcec.UnboundColumnsRightAttr)})
	}
	e.EncodeToken(start)
	_cbefec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0071ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_cbcec.QueryTableFields, _cbefec)
	if _cbcec.QueryTableDeletedFields != nil {
		_cdbgd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073"}}
		e.EncodeElement(_cbcec.QueryTableDeletedFields, _cdbgd)
	}
	if _cbcec.SortState != nil {
		_babfa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cbcec.SortState, _babfa)
	}
	if _cbcec.ExtLst != nil {
		_efeedf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbcec.ExtLst, _efeedf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextPr and its children
func (_fdfcd *CT_TextPr) Validate() error {
	return _fdfcd.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r")
}

func NewCT_CsPageSetup() *CT_CsPageSetup { _acgbe := &CT_CsPageSetup{}; return _acgbe }

func (_eabee *CT_Pane) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eabee.XSplitAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u0053\u0070\u006c\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eabee.XSplitAttr)})
	}
	if _eabee.YSplitAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0079\u0053\u0070\u006c\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eabee.YSplitAttr)})
	}
	if _eabee.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_eabee.TopLeftCellAttr)})
	}
	if _eabee.ActivePaneAttr != ST_PaneUnset {
		_bgdee, _adeb := _eabee.ActivePaneAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065"})
		if _adeb != nil {
			return _adeb
		}
		start.Attr = append(start.Attr, _bgdee)
	}
	if _eabee.StateAttr != ST_PaneStateUnset {
		_edcac, _gabdb := _eabee.StateAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _gabdb != nil {
			return _gabdb
		}
		start.Attr = append(start.Attr, _edcac)
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_acfaa *CT_PhoneticPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _acfaa.FontIdAttr)})
	if _acfaa.TypeAttr != ST_PhoneticTypeUnset {
		_dgcbg, _dfcaa := _acfaa.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dfcaa != nil {
			return _dfcaa
		}
		start.Attr = append(start.Attr, _dgcbg)
	}
	if _acfaa.AlignmentAttr != ST_PhoneticAlignmentUnset {
		_gbaaf, _ccbge := _acfaa.AlignmentAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"})
		if _ccbge != nil {
			return _ccbge
		}
		start.Attr = append(start.Attr, _gbaaf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DdeItem and its children, prefixing error messages with path
func (_bafc *CT_DdeItem) ValidateWithPath(path string) error {
	if _bafc.Values != nil {
		if _eegcd := _bafc.Values.ValidateWithPath(path + "\u002fV\u0061\u006c\u0075\u0065\u0073"); _eegcd != nil {
			return _eegcd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_rowItems and its children, prefixing error messages with path
func (_fgdgg *CT_rowItems) ValidateWithPath(path string) error {
	for _gbbbd, _ddebdg := range _fgdgg.I {
		if _cgfeac := _ddebdg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _gbbbd)); _cgfeac != nil {
			return _cgfeac
		}
	}
	return nil
}

func (_caed *CT_CacheHierarchies) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cdgc := range start.Attr {
		if _cdgc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_debea, _aaea := _a.ParseUint(_cdgc.Value, 10, 32)
			if _aaea != nil {
				return _aaea
			}
			_bggf := uint32(_debea)
			_caed.CountAttr = &_bggf
			continue
		}
	}
_eagf:
	for {
		_eddda, _bbgg := d.Token()
		if _bbgg != nil {
			return _bbgg
		}
		switch _afgd := _eddda.(type) {
		case _gd.StartElement:
			switch _afgd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_eadc := NewCT_CacheHierarchy()
				if _gcda := d.DecodeElement(_eadc, &_afgd); _gcda != nil {
					return _gcda
				}
				_caed.CacheHierarchy = append(_caed.CacheHierarchy, _eadc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _afgd.Name)
				if _eadb := d.Skip(); _eadb != nil {
					return _eadb
				}
			}
		case _gd.EndElement:
			break _eagf
		case _gd.CharData:
		}
	}
	return nil
}

func (_bffeaf *ST_VolDepType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bffeaf = 0
	case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
		*_bffeaf = 1
	case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
		*_bffeaf = 2
	}
	return nil
}

func (_eeac *CT_DdeItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _eeac.DdeItem != nil {
		_fdad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d"}}
		for _, _acgge := range _eeac.DdeItem {
			e.EncodeElement(_acgge, _fdad)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ChartFormat and its children
func (_aeeg *CT_ChartFormat) Validate() error {
	return _aeeg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074")
}

func (_cfdeb *ST_FilterOperator) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_acfcfe, _cafda := d.Token()
	if _cafda != nil {
		return _cafda
	}
	if _fcaee, _abedf := _acfcfe.(_gd.EndElement); _abedf && _fcaee.Name == start.Name {
		*_cfdeb = 1
		return nil
	}
	if _efbfb, _cbffg := _acfcfe.(_gd.CharData); !_cbffg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acfcfe)
	} else {
		switch string(_efbfb) {
		case "":
			*_cfdeb = 0
		case "\u0065\u0071\u0075a\u006c":
			*_cfdeb = 1
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_cfdeb = 2
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_cfdeb = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_cfdeb = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_cfdeb = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_cfdeb = 6
		}
	}
	_acfcfe, _cafda = d.Token()
	if _cafda != nil {
		return _cafda
	}
	if _gfabf, _dgaea := _acfcfe.(_gd.EndElement); _dgaea && _gfabf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acfcfe)
}

// ValidateWithPath validates the CT_TableColumn and its children, prefixing error messages with path
func (_dfgaf *CT_TableColumn) ValidateWithPath(path string) error {
	if _bgdccdd := _dfgaf.TotalsRowFunctionAttr.ValidateWithPath(path + "\u002f\u0054\u006f\u0074al\u0073\u0052\u006f\u0077\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074t\u0072"); _bgdccdd != nil {
		return _bgdccdd
	}
	if _dfgaf.CalculatedColumnFormula != nil {
		if _bgagbg := _dfgaf.CalculatedColumnFormula.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0043\u006fl\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"); _bgagbg != nil {
			return _bgagbg
		}
	}
	if _dfgaf.TotalsRowFormula != nil {
		if _faeea := _dfgaf.TotalsRowFormula.ValidateWithPath(path + "\u002f\u0054\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006fr\u006d\u0075\u006c\u0061"); _faeea != nil {
			return _faeea
		}
	}
	if _dfgaf.XmlColumnPr != nil {
		if _bdff := _dfgaf.XmlColumnPr.ValidateWithPath(path + "\u002f\u0058\u006dl\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"); _bdff != nil {
			return _bdff
		}
	}
	if _dfgaf.ExtLst != nil {
		if _badec := _dfgaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _badec != nil {
			return _badec
		}
	}
	return nil
}

type ST_PrintError byte

func (_fbbbcg *CT_Macrosheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Name.Local = "\u006d\u0061:\u0043\u0054\u005fM\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	if _fbbbcg.SheetPr != nil {
		_ddgba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_fbbbcg.SheetPr, _ddgba)
	}
	if _fbbbcg.Dimension != nil {
		_gcfed := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_fbbbcg.Dimension, _gcfed)
	}
	if _fbbbcg.SheetViews != nil {
		_bfdcb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fbbbcg.SheetViews, _bfdcb)
	}
	if _fbbbcg.SheetFormatPr != nil {
		_eggba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_fbbbcg.SheetFormatPr, _eggba)
	}
	if _fbbbcg.Cols != nil {
		_bdeae := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _cffae := range _fbbbcg.Cols {
			e.EncodeElement(_cffae, _bdeae)
		}
	}
	_bfbga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_fbbbcg.SheetData, _bfbga)
	if _fbbbcg.SheetProtection != nil {
		_edab := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fbbbcg.SheetProtection, _edab)
	}
	if _fbbbcg.AutoFilter != nil {
		_gadfc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fbbbcg.AutoFilter, _gadfc)
	}
	if _fbbbcg.SortState != nil {
		_dffbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_fbbbcg.SortState, _dffbc)
	}
	if _fbbbcg.DataConsolidate != nil {
		_bccfa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_fbbbcg.DataConsolidate, _bccfa)
	}
	if _fbbbcg.CustomSheetViews != nil {
		_bgced := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fbbbcg.CustomSheetViews, _bgced)
	}
	if _fbbbcg.PhoneticPr != nil {
		_bfaag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_fbbbcg.PhoneticPr, _bfaag)
	}
	if _fbbbcg.ConditionalFormatting != nil {
		_gefbf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _bffda := range _fbbbcg.ConditionalFormatting {
			e.EncodeElement(_bffda, _gefbf)
		}
	}
	if _fbbbcg.PrintOptions != nil {
		_cbfg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_fbbbcg.PrintOptions, _cbfg)
	}
	if _fbbbcg.PageMargins != nil {
		_ddcd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_fbbbcg.PageMargins, _ddcd)
	}
	if _fbbbcg.PageSetup != nil {
		_dcggf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_fbbbcg.PageSetup, _dcggf)
	}
	if _fbbbcg.HeaderFooter != nil {
		_ddbdc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_fbbbcg.HeaderFooter, _ddbdc)
	}
	if _fbbbcg.RowBreaks != nil {
		_fgceee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fbbbcg.RowBreaks, _fgceee)
	}
	if _fbbbcg.ColBreaks != nil {
		_faaed := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fbbbcg.ColBreaks, _faaed)
	}
	if _fbbbcg.CustomProperties != nil {
		_ceagg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_fbbbcg.CustomProperties, _ceagg)
	}
	if _fbbbcg.Drawing != nil {
		_bbaaec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fbbbcg.Drawing, _bbaaec)
	}
	if _fbbbcg.LegacyDrawing != nil {
		_aggac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fbbbcg.LegacyDrawing, _aggac)
	}
	if _fbbbcg.LegacyDrawingHF != nil {
		_cdabe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fbbbcg.LegacyDrawingHF, _cdabe)
	}
	if _fbbbcg.DrawingHF != nil {
		_acgad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fbbbcg.DrawingHF, _acgad)
	}
	if _fbbbcg.Picture != nil {
		_ecebg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_fbbbcg.Picture, _ecebg)
	}
	if _fbbbcg.OleObjects != nil {
		_fcdce := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_fbbbcg.OleObjects, _fcdce)
	}
	if _fbbbcg.ExtLst != nil {
		_fgbg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fbbbcg.ExtLst, _fgbg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RevisionCustomView and its children
func (_edeed *CT_RevisionCustomView) Validate() error {
	return _edeed.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077")
}

func (_gefbfa *CT_PivotHierarchy) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fgaad := range start.Attr {
		if _fgaad.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_gbgbf, _dbgae := _a.ParseBool(_fgaad.Value)
			if _dbgae != nil {
				return _dbgae
			}
			_gefbfa.DragToDataAttr = &_gbgbf
			continue
		}
		if _fgaad.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_eefge, _cagfc := _a.ParseBool(_fgaad.Value)
			if _cagfc != nil {
				return _cagfc
			}
			_gefbfa.OutlineAttr = &_eefge
			continue
		}
		if _fgaad.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_afgfb, _efbbg := _a.ParseBool(_fgaad.Value)
			if _efbbg != nil {
				return _efbbg
			}
			_gefbfa.SubtotalTopAttr = &_afgfb
			continue
		}
		if _fgaad.Name.Local == "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_bbeea, _fadda := _a.ParseBool(_fgaad.Value)
			if _fadda != nil {
				return _fadda
			}
			_gefbfa.ShowInFieldListAttr = &_bbeea
			continue
		}
		if _fgaad.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_gggd, _gdbdb := _a.ParseBool(_fgaad.Value)
			if _gdbdb != nil {
				return _gdbdb
			}
			_gefbfa.DragToRowAttr = &_gggd
			continue
		}
		if _fgaad.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_afcag, _gbedb := _a.ParseBool(_fgaad.Value)
			if _gbedb != nil {
				return _gbedb
			}
			_gefbfa.DragToColAttr = &_afcag
			continue
		}
		if _fgaad.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_dfcd, _efgfb := _a.ParseBool(_fgaad.Value)
			if _efgfb != nil {
				return _efgfb
			}
			_gefbfa.DragToPageAttr = &_dfcd
			continue
		}
		if _fgaad.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_cgfcf, _gfcdd := _a.ParseBool(_fgaad.Value)
			if _gfcdd != nil {
				return _gfcdd
			}
			_gefbfa.MultipleItemSelectionAllowedAttr = &_cgfcf
			continue
		}
		if _fgaad.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_acdad, _cabbg := _a.ParseBool(_fgaad.Value)
			if _cabbg != nil {
				return _cabbg
			}
			_gefbfa.DragOffAttr = &_acdad
			continue
		}
		if _fgaad.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_gcfef, _cabge := _a.ParseBool(_fgaad.Value)
			if _cabge != nil {
				return _cabge
			}
			_gefbfa.IncludeNewItemsInFilterAttr = &_gcfef
			continue
		}
		if _fgaad.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_aagcb, _fabda := _fgaad.Value, error(nil)
			if _fabda != nil {
				return _fabda
			}
			_gefbfa.CaptionAttr = &_aagcb
			continue
		}
	}
_cgdcd:
	for {
		_eeeefb, _aaeafg := d.Token()
		if _aaeafg != nil {
			return _aaeafg
		}
		switch _fgbfa := _eeeefb.(type) {
		case _gd.StartElement:
			switch _fgbfa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}:
				_gefbfa.Mps = NewCT_MemberProperties()
				if _ddegd := d.DecodeElement(_gefbfa.Mps, &_fgbfa); _ddegd != nil {
					return _ddegd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}:
				_fddec := NewCT_Members()
				if _cfceb := d.DecodeElement(_fddec, &_fgbfa); _cfceb != nil {
					return _cfceb
				}
				_gefbfa.Members = append(_gefbfa.Members, _fddec)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gefbfa.ExtLst = NewCT_ExtensionList()
				if _cdbbc := d.DecodeElement(_gefbfa.ExtLst, &_fgbfa); _cdbbc != nil {
					return _cdbbc
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _fgbfa.Name)
				if _baafe := d.Skip(); _baafe != nil {
					return _baafe
				}
			}
		case _gd.EndElement:
			break _cgdcd
		case _gd.CharData:
		}
	}
	return nil
}

func (_faaae *CT_PivotDimension) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _faaae.MeasureAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_faaae.MeasureAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _faaae.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _faaae.UniqueNameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _faaae.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FilterColumn and its children
func (_feaf *CT_FilterColumn) Validate() error {
	return _feaf.ValidateWithPath("\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e")
}

// Validate validates the CT_PivotHierarchy and its children
func (_cabgf *CT_PivotHierarchy) Validate() error {
	return _cabgf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

func (_ecddbf *CT_Pages) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ecddbf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ecddbf.CountAttr)})
	}
	e.EncodeToken(start)
	_bbceb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0070\u0061\u0067\u0065"}}
	for _, _bdega := range _ecddbf.Page {
		e.EncodeElement(_bdega, _bbceb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalBook struct {
	IdAttr string

	// Supporting Workbook Sheet Names
	SheetNames *CT_ExternalSheetNames

	// Named Links
	DefinedNames *CT_ExternalDefinedNames

	// Cached Worksheet Data
	SheetDataSet *CT_ExternalSheetDataSet
}

func NewCT_RevisionComment() *CT_RevisionComment {
	_ababa := &CT_RevisionComment{}
	_ababa.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _ababa
}

func (_gcabg *CT_ServerFormats) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gcabg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gcabg.CountAttr)})
	}
	e.EncodeToken(start)
	if _gcabg.ServerFormat != nil {
		_cfddg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003as\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}}
		for _, _eeafc := range _gcabg.ServerFormat {
			e.EncodeElement(_eeafc, _cfddg)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableMissing and its children
func (_deagga *CT_TableMissing) Validate() error {
	return _deagga.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}

type CT_Xf struct {

	// Number Format Id
	NumFmtIdAttr *uint32

	// Font Id
	FontIdAttr *uint32

	// Fill Id
	FillIdAttr *uint32

	// Border Id
	BorderIdAttr *uint32

	// Format Id
	XfIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Pivot Button
	PivotButtonAttr *bool

	// Apply Number Format
	ApplyNumberFormatAttr *bool

	// Apply Font
	ApplyFontAttr *bool

	// Apply Fill
	ApplyFillAttr *bool

	// Apply Border
	ApplyBorderAttr *bool

	// Apply Alignment
	ApplyAlignmentAttr *bool

	// Apply Protection
	ApplyProtectionAttr *bool

	// Alignment
	Alignment *CT_CellAlignment

	// Protection
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_InputCells and its children
func (_edddb *CT_InputCells) Validate() error {
	return _edddb.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073")
}

// ValidateWithPath validates the CT_DataField and its children, prefixing error messages with path
func (_cbbbf *CT_DataField) ValidateWithPath(path string) error {
	if _dfdgg := _cbbbf.SubtotalAttr.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _dfdgg != nil {
		return _dfdgg
	}
	if _daadb := _cbbbf.ShowDataAsAttr.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0044\u0061\u0074\u0061\u0041\u0073\u0041\u0074\u0074\u0072"); _daadb != nil {
		return _daadb
	}
	if _cbbbf.ExtLst != nil {
		if _cedc := _cbbbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cedc != nil {
			return _cedc
		}
	}
	return nil
}

func (_cafaa *ST_PageOrder) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ggbbad, _faageb := d.Token()
	if _faageb != nil {
		return _faageb
	}
	if _dgabdd, _gfgfdf := _ggbbad.(_gd.EndElement); _gfgfdf && _dgabdd.Name == start.Name {
		*_cafaa = 1
		return nil
	}
	if _gcebbc, _fecda := _ggbbad.(_gd.CharData); !_fecda {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggbbad)
	} else {
		switch string(_gcebbc) {
		case "":
			*_cafaa = 0
		case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
			*_cafaa = 1
		case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
			*_cafaa = 2
		}
	}
	_ggbbad, _faageb = d.Token()
	if _faageb != nil {
		return _faageb
	}
	if _dgffge, _bcagcd := _ggbbad.(_gd.EndElement); _bcagcd && _dgffge.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggbbad)
}

func (_affeed *CT_String) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", _affeed.VAttr)})
	if _affeed.UAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_affeed.UAttr))})
	}
	if _affeed.FAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_affeed.FAttr))})
	}
	if _affeed.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_affeed.CAttr)})
	}
	if _affeed.CpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_affeed.CpAttr)})
	}
	if _affeed.InAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_affeed.InAttr)})
	}
	if _affeed.BcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_affeed.BcAttr)})
	}
	if _affeed.FcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_affeed.FcAttr)})
	}
	if _affeed.IAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_affeed.IAttr))})
	}
	if _affeed.UnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_affeed.UnAttr))})
	}
	if _affeed.StAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_affeed.StAttr))})
	}
	if _affeed.BAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_affeed.BAttr))})
	}
	e.EncodeToken(start)
	if _affeed.Tpls != nil {
		_aagcd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _cafec := range _affeed.Tpls {
			e.EncodeElement(_cafec, _aagcd)
		}
	}
	if _affeed.X != nil {
		_afdga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _bdgcf := range _affeed.X {
			e.EncodeElement(_bdgcf, _afdga)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_baged *CT_PageBreak) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _baged.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_baged.CountAttr)})
	}
	if _baged.ManualBreakCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_baged.ManualBreakCountAttr)})
	}
	e.EncodeToken(start)
	if _baged.Brk != nil {
		_efeed := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062\u0072\u006b"}}
		for _, _gcegf := range _baged.Brk {
			e.EncodeElement(_gcegf, _efeed)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ggace *CT_Mdx) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ggace.FAttr = ST_MdxFunctionType(1)
	for _, _aeeb := range start.Attr {
		if _aeeb.Name.Local == "\u006e" {
			_cegbe, _eecdf := _a.ParseUint(_aeeb.Value, 10, 32)
			if _eecdf != nil {
				return _eecdf
			}
			_ggace.NAttr = uint32(_cegbe)
			continue
		}
		if _aeeb.Name.Local == "\u0066" {
			_ggace.FAttr.UnmarshalXMLAttr(_aeeb)
			continue
		}
	}
_agaeg:
	for {
		_agaec, _fbag := d.Token()
		if _fbag != nil {
			return _fbag
		}
		switch _cgebb := _agaec.(type) {
		case _gd.StartElement:
			switch _cgebb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_ggace.T = NewCT_MdxTuple()
				if _gfege := d.DecodeElement(_ggace.T, &_cgebb); _gfege != nil {
					return _gfege
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}:
				_ggace.Ms = NewCT_MdxSet()
				if _edgbab := d.DecodeElement(_ggace.Ms, &_cgebb); _edgbab != nil {
					return _edgbab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_ggace.P = NewCT_MdxMemeberProp()
				if _cbgf := d.DecodeElement(_ggace.P, &_cgebb); _cbgf != nil {
					return _cbgf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}:
				_ggace.K = NewCT_MdxKPI()
				if _cbbfc := d.DecodeElement(_ggace.K, &_cgebb); _cbbfc != nil {
					return _cbbfc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0020\u0025\u0076", _cgebb.Name)
				if _ffcgb := d.Skip(); _ffcgb != nil {
					return _ffcgb
				}
			}
		case _gd.EndElement:
			break _agaeg
		case _gd.CharData:
		}
	}
	return nil
}

func (_accac *CT_ConditionalFormat) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_accac.PivotAreas = NewCT_PivotAreas()
	for _, _dfed := range start.Attr {
		if _dfed.Name.Local == "\u0073\u0063\u006fp\u0065" {
			_accac.ScopeAttr.UnmarshalXMLAttr(_dfed)
			continue
		}
		if _dfed.Name.Local == "\u0074\u0079\u0070\u0065" {
			_accac.TypeAttr.UnmarshalXMLAttr(_dfed)
			continue
		}
		if _dfed.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_badgc, _fgbd := _a.ParseUint(_dfed.Value, 10, 32)
			if _fgbd != nil {
				return _fgbd
			}
			_accac.PriorityAttr = uint32(_badgc)
			continue
		}
	}
_cgaf:
	for {
		_gfae, _fddd := d.Token()
		if _fddd != nil {
			return _fddd
		}
		switch _fada := _gfae.(type) {
		case _gd.StartElement:
			switch _fada.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}:
				if _eecb := d.DecodeElement(_accac.PivotAreas, &_fada); _eecb != nil {
					return _eecb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_accac.ExtLst = NewCT_ExtensionList()
				if _cgfc := d.DecodeElement(_accac.ExtLst, &_fada); _cgfc != nil {
					return _cgfc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0020\u0025\u0076", _fada.Name)
				if _fcbe := d.Skip(); _fcbe != nil {
					return _fcbe
				}
			}
		case _gd.EndElement:
			break _cgaf
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Number and its children, prefixing error messages with path
func (_fgcg *CT_Number) ValidateWithPath(path string) error {
	for _afbg, _bffeb := range _fgcg.Tpls {
		if _fbdcc := _bffeb.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _afbg)); _fbdcc != nil {
			return _fbdcc
		}
	}
	for _gefedb, _ccbg := range _fgcg.X {
		if _cafab := _ccbg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gefedb)); _cafab != nil {
			return _cafab
		}
	}
	return nil
}

func (_eccgab ST_CfvoType) Validate() error { return _eccgab.ValidateWithPath("") }

func NewCT_XmlPr() *CT_XmlPr { _bdddf := &CT_XmlPr{}; return _bdddf }

type CT_DataConsolidate struct {

	// Function Index
	FunctionAttr ST_DataConsolidateFunction

	// Use Starting Column Labels
	StartLabelsAttr *bool

	// Starting Column Labels
	LeftLabelsAttr *bool

	// Labels In Top Row
	TopLabelsAttr *bool

	// Link
	LinkAttr *bool

	// Data Consolidation References
	DataRefs *CT_DataRefs
}

// Validate validates the CT_Workbook and its children
func (_adgeb *CT_Workbook) Validate() error {
	return _adgeb.ValidateWithPath("C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

// ValidateWithPath validates the CT_MemberProperty and its children, prefixing error messages with path
func (_baabc *CT_MemberProperty) ValidateWithPath(path string) error { return nil }

func (_bgba *CT_CacheField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bgba.NameAttr)})
	if _bgba.CaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.CaptionAttr)})
	}
	if _bgba.PropertyNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.PropertyNameAttr)})
	}
	if _bgba.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgba.ServerFieldAttr))})
	}
	if _bgba.UniqueListAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgba.UniqueListAttr))})
	}
	if _bgba.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.NumFmtIdAttr)})
	}
	if _bgba.FormulaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.FormulaAttr)})
	}
	if _bgba.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.SqlTypeAttr)})
	}
	if _bgba.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.HierarchyAttr)})
	}
	if _bgba.LevelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.LevelAttr)})
	}
	if _bgba.DatabaseFieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgba.DatabaseFieldAttr))})
	}
	if _bgba.MappingCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bgba.MappingCountAttr)})
	}
	if _bgba.MemberPropertyFieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgba.MemberPropertyFieldAttr))})
	}
	e.EncodeToken(start)
	if _bgba.SharedItems != nil {
		_fege := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_bgba.SharedItems, _fege)
	}
	if _bgba.FieldGroup != nil {
		_dfd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}}
		e.EncodeElement(_bgba.FieldGroup, _dfd)
	}
	if _bgba.MpMap != nil {
		_dfga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u004d\u0061\u0070"}}
		for _, _baea := range _bgba.MpMap {
			e.EncodeElement(_baea, _dfga)
		}
	}
	if _bgba.ExtLst != nil {
		_becd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bgba.ExtLst, _becd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_VolType struct {

	// Type
	TypeAttr ST_VolDepType

	// Main
	Main []*CT_VolMain
}

type CT_VolTypes struct {

	// Volatile Dependency Type
	VolType []*CT_VolType
	ExtLst  *CT_ExtensionList
}

func NewCT_VolTypes() *CT_VolTypes { _eadcef := &CT_VolTypes{}; return _eadcef }

func NewPivotCacheRecords() *PivotCacheRecords {
	_bacbfe := &PivotCacheRecords{}
	_bacbfe.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	return _bacbfe
}

func (_fcecgd *CT_OleObject) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fcecgd.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fcecgd.ProgIdAttr)})
	}
	if _fcecgd.DvAspectAttr != ST_DvAspectUnset {
		_dgeba, _egbfg := _fcecgd.DvAspectAttr.MarshalXMLAttr(_gd.Name{Local: "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074"})
		if _egbfg != nil {
			return _egbfg
		}
		start.Attr = append(start.Attr, _dgeba)
	}
	if _fcecgd.LinkAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _b.Sprintf("\u0025\u0076", *_fcecgd.LinkAttr)})
	}
	if _fcecgd.OleUpdateAttr != ST_OleUpdateUnset {
		_ffcc, _bbcga := _fcecgd.OleUpdateAttr.MarshalXMLAttr(_gd.Name{Local: "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e"})
		if _bbcga != nil {
			return _bbcga
		}
		start.Attr = append(start.Attr, _ffcc)
	}
	if _fcecgd.AutoLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fcecgd.AutoLoadAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fcecgd.ShapeIdAttr)})
	if _fcecgd.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fcecgd.IdAttr)})
	}
	e.EncodeToken(start)
	if _fcecgd.ObjectPr != nil {
		_cabed := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}}
		e.EncodeElement(_fcecgd.ObjectPr, _cabed)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Reviewed() *CT_Reviewed { _beagb := &CT_Reviewed{}; return _beagb }

func (_dfeaa *CT_Table) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dfeaa.TableColumns = NewCT_TableColumns()
	for _, _dceabc := range start.Attr {
		if _dceabc.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_aefgd, _bdfecf := _a.ParseUint(_dceabc.Value, 10, 32)
			if _bdfecf != nil {
				return _bdfecf
			}
			_bcbbfg := uint32(_aefgd)
			_dfeaa.DataDxfIdAttr = &_bcbbfg
			continue
		}
		if _dceabc.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_faggfe, _ffffb := _a.ParseUint(_dceabc.Value, 10, 32)
			if _ffffb != nil {
				return _ffffb
			}
			_acefe := uint32(_faggfe)
			_dfeaa.TotalsRowDxfIdAttr = &_acefe
			continue
		}
		if _dceabc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gffba, _deaec := _dceabc.Value, error(nil)
			if _deaec != nil {
				return _deaec
			}
			_dfeaa.NameAttr = &_gffba
			continue
		}
		if _dceabc.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_cacecb, _dgfef := _a.ParseUint(_dceabc.Value, 10, 32)
			if _dgfef != nil {
				return _dgfef
			}
			_dddag := uint32(_cacecb)
			_dfeaa.HeaderRowBorderDxfIdAttr = &_dddag
			continue
		}
		if _dceabc.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_dfeeff, _bgdffg := _dceabc.Value, error(nil)
			if _bgdffg != nil {
				return _bgdffg
			}
			_dfeaa.CommentAttr = &_dfeeff
			continue
		}
		if _dceabc.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_fbebf, _eebeba := _a.ParseUint(_dceabc.Value, 10, 32)
			if _eebeba != nil {
				return _eebeba
			}
			_fbdbg := uint32(_fbebf)
			_dfeaa.TableBorderDxfIdAttr = &_fbdbg
			continue
		}
		if _dceabc.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_dfeaa.TableTypeAttr.UnmarshalXMLAttr(_dceabc)
			continue
		}
		if _dceabc.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_begfd, _bfcdge := _a.ParseUint(_dceabc.Value, 10, 32)
			if _bfcdge != nil {
				return _bfcdge
			}
			_cggff := uint32(_begfd)
			_dfeaa.TotalsRowBorderDxfIdAttr = &_cggff
			continue
		}
		if _dceabc.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_ecgada, _gbggc := _a.ParseBool(_dceabc.Value)
			if _gbggc != nil {
				return _gbggc
			}
			_dfeaa.InsertRowAttr = &_ecgada
			continue
		}
		if _dceabc.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_dfaeb, _gfbgba := _dceabc.Value, error(nil)
			if _gfbgba != nil {
				return _gfbgba
			}
			_dfeaa.HeaderRowCellStyleAttr = &_dfaeb
			continue
		}
		if _dceabc.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_cggefe, _bgcec := _a.ParseUint(_dceabc.Value, 10, 32)
			if _bgcec != nil {
				return _bgcec
			}
			_ebefa := uint32(_cggefe)
			_dfeaa.TotalsRowCountAttr = &_ebefa
			continue
		}
		if _dceabc.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_gfdgdc, _cegfc := _dceabc.Value, error(nil)
			if _cegfc != nil {
				return _cegfc
			}
			_dfeaa.TotalsRowCellStyleAttr = &_gfdgdc
			continue
		}
		if _dceabc.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_agadae, _fabadd := _dceabc.Value, error(nil)
			if _fabadd != nil {
				return _fabadd
			}
			_dfeaa.DisplayNameAttr = _agadae
			continue
		}
		if _dceabc.Name.Local == "\u0069\u0064" {
			_dgdbb, _baafc := _a.ParseUint(_dceabc.Value, 10, 32)
			if _baafc != nil {
				return _baafc
			}
			_dfeaa.IdAttr = uint32(_dgdbb)
			continue
		}
		if _dceabc.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_efdeg, _gaebga := _dceabc.Value, error(nil)
			if _gaebga != nil {
				return _gaebga
			}
			_dfeaa.DataCellStyleAttr = &_efdeg
			continue
		}
		if _dceabc.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_fbgfg, _dgeff := _a.ParseBool(_dceabc.Value)
			if _dgeff != nil {
				return _dgeff
			}
			_dfeaa.PublishedAttr = &_fbgfg
			continue
		}
		if _dceabc.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_aefcd, _gcbed := _a.ParseUint(_dceabc.Value, 10, 32)
			if _gcbed != nil {
				return _gcbed
			}
			_bgfgfa := uint32(_aefcd)
			_dfeaa.ConnectionIdAttr = &_bgfgfa
			continue
		}
		if _dceabc.Name.Local == "\u0072\u0065\u0066" {
			_dggeg, _ecgef := _dceabc.Value, error(nil)
			if _ecgef != nil {
				return _ecgef
			}
			_dfeaa.RefAttr = _dggeg
			continue
		}
		if _dceabc.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_cebegf, _aebgb := _a.ParseBool(_dceabc.Value)
			if _aebgb != nil {
				return _aebgb
			}
			_dfeaa.InsertRowShiftAttr = &_cebegf
			continue
		}
		if _dceabc.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_gadaa, _deeag := _a.ParseBool(_dceabc.Value)
			if _deeag != nil {
				return _deeag
			}
			_dfeaa.TotalsRowShownAttr = &_gadaa
			continue
		}
		if _dceabc.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_dgegdc, _fcgdfb := _a.ParseUint(_dceabc.Value, 10, 32)
			if _fcgdfb != nil {
				return _fcgdfb
			}
			_dafea := uint32(_dgegdc)
			_dfeaa.HeaderRowDxfIdAttr = &_dafea
			continue
		}
		if _dceabc.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_gdacc, _effge := _a.ParseUint(_dceabc.Value, 10, 32)
			if _effge != nil {
				return _effge
			}
			_adfae := uint32(_gdacc)
			_dfeaa.HeaderRowCountAttr = &_adfae
			continue
		}
	}
_dcgad:
	for {
		_cadac, _afaba := d.Token()
		if _afaba != nil {
			return _afaba
		}
		switch _bbeef := _cadac.(type) {
		case _gd.StartElement:
			switch _bbeef.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_dfeaa.AutoFilter = NewCT_AutoFilter()
				if _gacgcd := d.DecodeElement(_dfeaa.AutoFilter, &_bbeef); _gacgcd != nil {
					return _gacgcd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_dfeaa.SortState = NewCT_SortState()
				if _fbdbdc := d.DecodeElement(_dfeaa.SortState, &_bbeef); _fbdbdc != nil {
					return _fbdbdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _ggbceb := d.DecodeElement(_dfeaa.TableColumns, &_bbeef); _ggbceb != nil {
					return _ggbceb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_dfeaa.TableStyleInfo = NewCT_TableStyleInfo()
				if _eadcbc := d.DecodeElement(_dfeaa.TableStyleInfo, &_bbeef); _eadcbc != nil {
					return _eadcbc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfeaa.ExtLst = NewCT_ExtensionList()
				if _cbca := d.DecodeElement(_dfeaa.ExtLst, &_bbeef); _cbca != nil {
					return _cbca
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _bbeef.Name)
				if _aagae := d.Skip(); _aagae != nil {
					return _aagae
				}
			}
		case _gd.EndElement:
			break _dcgad
		case _gd.CharData:
		}
	}
	return nil
}

func (_gcggca *ST_TotalsRowFunction) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gcggca = 0
	case "\u006e\u006f\u006e\u0065":
		*_gcggca = 1
	case "\u0073\u0075\u006d":
		*_gcggca = 2
	case "\u006d\u0069\u006e":
		*_gcggca = 3
	case "\u006d\u0061\u0078":
		*_gcggca = 4
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_gcggca = 5
	case "\u0063\u006f\u0075n\u0074":
		*_gcggca = 6
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_gcggca = 7
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_gcggca = 8
	case "\u0076\u0061\u0072":
		*_gcggca = 9
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_gcggca = 10
	}
	return nil
}

func NewCT_WebPublishItems() *CT_WebPublishItems { _ddfgb := &CT_WebPublishItems{}; return _ddfgb }

type ST_UnderlineValues byte

type CT_Comments struct {

	// Authors
	Authors *CT_Authors

	// List of Comments
	CommentList *CT_CommentList
	ExtLst      *CT_ExtensionList
}

func (_aecba *CT_MRUColors) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_ffdae:
	for {
		_efaceg, _ebfde := d.Token()
		if _ebfde != nil {
			return _ebfde
		}
		switch _eacge := _efaceg.(type) {
		case _gd.StartElement:
			switch _eacge.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cdebc := NewCT_Color()
				if _cadb := d.DecodeElement(_cdebc, &_eacge); _cadb != nil {
					return _cadb
				}
				_aecba.Color = append(_aecba.Color, _cdebc)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_M\u0052\u0055C\u006f\u006c\u006f\u0072\u0073\u0020\u0025\u0076", _eacge.Name)
				if _ecbgb := d.Skip(); _ecbgb != nil {
					return _ecbgb
				}
			}
		case _gd.EndElement:
			break _ffdae
		case _gd.CharData:
		}
	}
	return nil
}

func (_efddb *CT_Control) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _efddb.ShapeIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _efddb.IdAttr)})
	if _efddb.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_efddb.NameAttr)})
	}
	e.EncodeToken(start)
	if _efddb.ControlPr != nil {
		_gfcb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"}}
		e.EncodeElement(_efddb.ControlPr, _gfcb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bedbf ST_HtmlFmt) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bedbf.String(), start)
}

func NewCT_Tables() *CT_Tables { _dacgb := &CT_Tables{}; return _dacgb }

func (_cagae *ST_SmartTagShow) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cagae = 0
	case "\u0061\u006c\u006c":
		*_cagae = 1
	case "\u006e\u006f\u006e\u0065":
		*_cagae = 2
	case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_cagae = 3
	}
	return nil
}

func NewCT_Authors() *CT_Authors { _fc := &CT_Authors{}; return _fc }

func (_badd *CT_PCDSDTCEntries) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ggeadb := range start.Attr {
		if _ggeadb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gaefa, _dcgb := _a.ParseUint(_ggeadb.Value, 10, 32)
			if _dcgb != nil {
				return _dcgb
			}
			_aefbb := uint32(_gaefa)
			_badd.CountAttr = &_aefbb
			continue
		}
	}
_bfcca:
	for {
		_bacadg, _cbabc := d.Token()
		if _cbabc != nil {
			return _cbabc
		}
		switch _fcfbc := _bacadg.(type) {
		case _gd.StartElement:
			switch _fcfbc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_fdaff := NewCT_Missing()
				if _cafbgd := d.DecodeElement(_fdaff, &_fcfbc); _cafbgd != nil {
					return _cafbgd
				}
				_badd.M = append(_badd.M, _fdaff)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_dbefac := NewCT_Number()
				if _cgafc := d.DecodeElement(_dbefac, &_fcfbc); _cgafc != nil {
					return _cgafc
				}
				_badd.N = append(_badd.N, _dbefac)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_bedef := NewCT_Error()
				if _fafc := d.DecodeElement(_bedef, &_fcfbc); _fafc != nil {
					return _fafc
				}
				_badd.E = append(_badd.E, _bedef)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cececc := NewCT_String()
				if _aebcd := d.DecodeElement(_cececc, &_fcfbc); _aebcd != nil {
					return _aebcd
				}
				_badd.S = append(_badd.S, _cececc)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0025\u0076", _fcfbc.Name)
				if _gabbc := d.Skip(); _gabbc != nil {
					return _gabbc
				}
			}
		case _gd.EndElement:
			break _bfcca
		case _gd.CharData:
		}
	}
	return nil
}

func (_gaagad *ST_Type) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_agbde, _fggdd := d.Token()
	if _fggdd != nil {
		return _fggdd
	}
	if _acadd, _eecda := _agbde.(_gd.EndElement); _eecda && _acadd.Name == start.Name {
		*_gaagad = 1
		return nil
	}
	if _ceaffa, _ebcgc := _agbde.(_gd.CharData); !_ebcgc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agbde)
	} else {
		switch string(_ceaffa) {
		case "":
			*_gaagad = 0
		case "\u006e\u006f\u006e\u0065":
			*_gaagad = 1
		case "\u0061\u006c\u006c":
			*_gaagad = 2
		case "\u0072\u006f\u0077":
			*_gaagad = 3
		case "\u0063\u006f\u006c\u0075\u006d\u006e":
			*_gaagad = 4
		}
	}
	_agbde, _fggdd = d.Token()
	if _fggdd != nil {
		return _fggdd
	}
	if _abbbdd, _afcfdb := _agbde.(_gd.EndElement); _afcfdb && _abbbdd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agbde)
}

// ValidateWithPath validates the CT_BorderPr and its children, prefixing error messages with path
func (_cbe *CT_BorderPr) ValidateWithPath(path string) error {
	if _dca := _cbe.StyleAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _dca != nil {
		return _dca
	}
	if _cbe.Color != nil {
		if _abag := _cbe.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _abag != nil {
			return _abag
		}
	}
	return nil
}

// Validate validates the CT_Metadata and its children
func (_ffgea *CT_Metadata) Validate() error {
	return _ffgea.ValidateWithPath("C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}

func (_abbeb *CT_Scenarios) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _efaed := range start.Attr {
		if _efaed.Name.Local == "\u0063u\u0072\u0072\u0065\u006e\u0074" {
			_facgc, _gbebbf := _a.ParseUint(_efaed.Value, 10, 32)
			if _gbebbf != nil {
				return _gbebbf
			}
			_afggc := uint32(_facgc)
			_abbeb.CurrentAttr = &_afggc
			continue
		}
		if _efaed.Name.Local == "\u0073\u0068\u006f\u0077" {
			_gabfbe, _bebfcc := _a.ParseUint(_efaed.Value, 10, 32)
			if _bebfcc != nil {
				return _bebfcc
			}
			_cbdfgd := uint32(_gabfbe)
			_abbeb.ShowAttr = &_cbdfgd
			continue
		}
		if _efaed.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_afaebf, _cffaa := ParseSliceST_Sqref(_efaed.Value)
			if _cffaa != nil {
				return _cffaa
			}
			_abbeb.SqrefAttr = &_afaebf
			continue
		}
	}
_ccfaa:
	for {
		_fbdge, _aedb := d.Token()
		if _aedb != nil {
			return _aedb
		}
		switch _daafe := _fbdge.(type) {
		case _gd.StartElement:
			switch _daafe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}:
				_dcebf := NewCT_Scenario()
				if _edccbb := d.DecodeElement(_dcebf, &_daafe); _edccbb != nil {
					return _edccbb
				}
				_abbeb.Scenario = append(_abbeb.Scenario, _dcebf)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0063\u0065n\u0061\u0072\u0069\u006f\u0073\u0020\u0025\u0076", _daafe.Name)
				if _abbfed := d.Skip(); _abbfed != nil {
					return _abbfed
				}
			}
		case _gd.EndElement:
			break _ccfaa
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Sst and its children
func (_beefe *CT_Sst) Validate() error {
	return _beefe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0073\u0074")
}

const (
	ST_DataValidationErrorStyleUnset       ST_DataValidationErrorStyle = 0
	ST_DataValidationErrorStyleStop        ST_DataValidationErrorStyle = 1
	ST_DataValidationErrorStyleWarning     ST_DataValidationErrorStyle = 2
	ST_DataValidationErrorStyleInformation ST_DataValidationErrorStyle = 3
)

func (_dacbf *Metadata) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"
	return _dacbf.CT_Metadata.MarshalXML(e, start)
}

// Validate validates the CT_CommentList and its children
func (_bgeee *CT_CommentList) Validate() error {
	return _bgeee.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}

type CT_CsPageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// First Page Number
	FirstPageNumberAttr *uint32

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func (_fgeda *CT_Stylesheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bgfag:
	for {
		_cfffef, _efacc := d.Token()
		if _efacc != nil {
			return _efacc
		}
		switch _afgbg := _cfffef.(type) {
		case _gd.StartElement:
			switch _afgbg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_fgeda.NumFmts = NewCT_NumFmts()
				if _egfdfeb := d.DecodeElement(_fgeda.NumFmts, &_afgbg); _egfdfeb != nil {
					return _egfdfeb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_fgeda.Fonts = NewCT_Fonts()
				if _ebdfgb := d.DecodeElement(_fgeda.Fonts, &_afgbg); _ebdfgb != nil {
					return _ebdfgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_fgeda.Fills = NewCT_Fills()
				if _egbgfd := d.DecodeElement(_fgeda.Fills, &_afgbg); _egbgfd != nil {
					return _egbgfd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_fgeda.Borders = NewCT_Borders()
				if _gffgg := d.DecodeElement(_fgeda.Borders, &_afgbg); _gffgg != nil {
					return _gffgg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_fgeda.CellStyleXfs = NewCT_CellStyleXfs()
				if _bcdfb := d.DecodeElement(_fgeda.CellStyleXfs, &_afgbg); _bcdfb != nil {
					return _bcdfb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_fgeda.CellXfs = NewCT_CellXfs()
				if _faefa := d.DecodeElement(_fgeda.CellXfs, &_afgbg); _faefa != nil {
					return _faefa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fgeda.CellStyles = NewCT_CellStyles()
				if _efgce := d.DecodeElement(_fgeda.CellStyles, &_afgbg); _efgce != nil {
					return _efgce
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_fgeda.Dxfs = NewCT_Dxfs()
				if _adgcb := d.DecodeElement(_fgeda.Dxfs, &_afgbg); _adgcb != nil {
					return _adgcb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fgeda.TableStyles = NewCT_TableStyles()
				if _bfcaeb := d.DecodeElement(_fgeda.TableStyles, &_afgbg); _bfcaeb != nil {
					return _bfcaeb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_fgeda.Colors = NewCT_Colors()
				if _ffcfcg := d.DecodeElement(_fgeda.Colors, &_afgbg); _ffcfcg != nil {
					return _ffcfcg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgeda.ExtLst = NewCT_ExtensionList()
				if _gecge := d.DecodeElement(_fgeda.ExtLst, &_afgbg); _gecge != nil {
					return _gecge
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053t\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _afgbg.Name)
				if _edddf := d.Skip(); _edddf != nil {
					return _edddf
				}
			}
		case _gd.EndElement:
			break _bgfag
		case _gd.CharData:
		}
	}
	return nil
}

func (_cdcfee *CT_IndexedColors) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_ffeb:
	for {
		_ceada, _eaabd := d.Token()
		if _eaabd != nil {
			return _eaabd
		}
		switch _aabeea := _ceada.(type) {
		case _gd.StartElement:
			switch _aabeea.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_bbdff := NewCT_RgbColor()
				if _gccdea := d.DecodeElement(_bbdff, &_aabeea); _gccdea != nil {
					return _gccdea
				}
				_cdcfee.RgbColor = append(_cdcfee.RgbColor, _bbdff)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073\u0020\u0025v", _aabeea.Name)
				if _cffed := d.Skip(); _cffed != nil {
					return _cffed
				}
			}
		case _gd.EndElement:
			break _ffeb
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Revisions and its children, prefixing error messages with path
func (_gebdb *CT_Revisions) ValidateWithPath(path string) error {
	for _cfccf, _aadeg := range _gebdb.Rrc {
		if _edfgc := _aadeg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0072\u0063\u005b\u0025\u0064\u005d", path, _cfccf)); _edfgc != nil {
			return _edfgc
		}
	}
	for _bacecb, _gdaec := range _gebdb.Rm {
		if _acdaa := _gdaec.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0052\u006d\u005b\u0025\u0064]", path, _bacecb)); _acdaa != nil {
			return _acdaa
		}
	}
	for _gfeaf, _bedcgd := range _gebdb.Rcv {
		if _gdfaf := _bedcgd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0076\u005b\u0025\u0064\u005d", path, _gfeaf)); _gdfaf != nil {
			return _gdfaf
		}
	}
	for _gaafg, _bccbcg := range _gebdb.Rsnm {
		if _ccgb := _bccbcg.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0052\u0073\u006e\u006d\u005b\u0025\u0064\u005d", path, _gaafg)); _ccgb != nil {
			return _ccgb
		}
	}
	for _beafe, _cgbcad := range _gebdb.Ris {
		if _fafgffa := _cgbcad.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0069\u0073\u005b\u0025\u0064\u005d", path, _beafe)); _fafgffa != nil {
			return _fafgffa
		}
	}
	for _ecace, _dcga := range _gebdb.Rcc {
		if _ccefad := _dcga.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _ecace)); _ccefad != nil {
			return _ccefad
		}
	}
	for _aebbf, _gcbgd := range _gebdb.Rfmt {
		if _fgdfb := _gcbgd.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _aebbf)); _fgdfb != nil {
			return _fgdfb
		}
	}
	for _feadea, _gbcca := range _gebdb.Raf {
		if _gaggdb := _gbcca.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0061\u0066\u005b\u0025\u0064\u005d", path, _feadea)); _gaggdb != nil {
			return _gaggdb
		}
	}
	for _ddgae, _cecea := range _gebdb.Rdn {
		if _dfgfa := _cecea.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0064\u006e\u005b\u0025\u0064\u005d", path, _ddgae)); _dfgfa != nil {
			return _dfgfa
		}
	}
	for _bbeade, _edgfg := range _gebdb.Rcmt {
		if _cfeead := _edgfg.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0052\u0063\u006d\u0074\u005b\u0025\u0064\u005d", path, _bbeade)); _cfeead != nil {
			return _cfeead
		}
	}
	for _cgcdc, _daaffe := range _gebdb.Rqt {
		if _adagf := _daaffe.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0071\u0074\u005b\u0025\u0064\u005d", path, _cgcdc)); _adagf != nil {
			return _adagf
		}
	}
	for _gedef, _gacgg := range _gebdb.Rcft {
		if _afcbg := _gacgg.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0052\u0063\u0066\u0074\u005b\u0025\u0064\u005d", path, _gedef)); _afcbg != nil {
			return _afcbg
		}
	}
	return nil
}

func (_adadd *CT_Fonts) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aeecf := range start.Attr {
		if _aeecf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbcadg, _gcaad := _a.ParseUint(_aeecf.Value, 10, 32)
			if _gcaad != nil {
				return _gcaad
			}
			_egdeg := uint32(_dbcadg)
			_adadd.CountAttr = &_egdeg
			continue
		}
	}
_cbbcc:
	for {
		_ffada, _cdbcg := d.Token()
		if _cdbcg != nil {
			return _cdbcg
		}
		switch _bdafe := _ffada.(type) {
		case _gd.StartElement:
			switch _bdafe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_gcdca := NewCT_Font()
				if _gbabd := d.DecodeElement(_gcdca, &_bdafe); _gbabd != nil {
					return _gbabd
				}
				_adadd.Font = append(_adadd.Font, _gcdca)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073\u0020\u0025\u0076", _bdafe.Name)
				if _febafg := d.Skip(); _febafg != nil {
					return _febafg
				}
			}
		case _gd.EndElement:
			break _cbbcc
		case _gd.CharData:
		}
	}
	return nil
}

type CT_MapInfo struct {

	// Prefix Mappings for XPath Expressions
	SelectionNamespacesAttr string

	// XML Schema
	Schema []*CT_Schema

	// XML Mapping Properties
	Map []*CT_Map
}

func (_becgb *ST_GradientType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_befad, _bceef := d.Token()
	if _bceef != nil {
		return _bceef
	}
	if _ddaec, _cgdgb := _befad.(_gd.EndElement); _cgdgb && _ddaec.Name == start.Name {
		*_becgb = 1
		return nil
	}
	if _acfdc, _ffgge := _befad.(_gd.CharData); !_ffgge {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _befad)
	} else {
		switch string(_acfdc) {
		case "":
			*_becgb = 0
		case "\u006c\u0069\u006e\u0065\u0061\u0072":
			*_becgb = 1
		case "\u0070\u0061\u0074\u0068":
			*_becgb = 2
		}
	}
	_befad, _bceef = d.Token()
	if _bceef != nil {
		return _bceef
	}
	if _cbeea, _bffcba := _befad.(_gd.EndElement); _bffcba && _cbeea.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _befad)
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_dedd *CT_Color) ValidateWithPath(path string) error { return nil }

func (_gdgeg ST_PhoneticType) ValidateWithPath(path string) error {
	switch _gdgeg {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdgeg))
	}
	return nil
}

// Validate validates the CT_ObjectPr and its children
func (_dfecd *CT_ObjectPr) Validate() error {
	return _dfecd.ValidateWithPath("C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072")
}

func (_gccgc *CT_Revisions) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _gccgc.Rrc != nil {
		_dcdaad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0072\u0063"}}
		for _, _cfbfb := range _gccgc.Rrc {
			e.EncodeElement(_cfbfb, _dcdaad)
		}
	}
	if _gccgc.Rm != nil {
		_dfcba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u006d"}}
		for _, _fdbgg := range _gccgc.Rm {
			e.EncodeElement(_fdbgg, _dfcba)
		}
	}
	if _gccgc.Rcv != nil {
		_aeceed := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0076"}}
		for _, _cbcfd := range _gccgc.Rcv {
			e.EncodeElement(_cbcfd, _aeceed)
		}
	}
	if _gccgc.Rsnm != nil {
		_bead := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0072\u0073\u006e\u006d"}}
		for _, _egbefb := range _gccgc.Rsnm {
			e.EncodeElement(_egbefb, _bead)
		}
	}
	if _gccgc.Ris != nil {
		_feffg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0073"}}
		for _, _badeg := range _gccgc.Ris {
			e.EncodeElement(_badeg, _feffg)
		}
	}
	if _gccgc.Rcc != nil {
		_fbfdcf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _ddadf := range _gccgc.Rcc {
			e.EncodeElement(_ddadf, _fbfdcf)
		}
	}
	if _gccgc.Rfmt != nil {
		_aacb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _bcde := range _gccgc.Rfmt {
			e.EncodeElement(_bcde, _aacb)
		}
	}
	if _gccgc.Raf != nil {
		_dbfca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u0066"}}
		for _, _faadf := range _gccgc.Raf {
			e.EncodeElement(_faadf, _dbfca)
		}
	}
	if _gccgc.Rdn != nil {
		_fegccg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0064\u006e"}}
		for _, _fgdcg := range _gccgc.Rdn {
			e.EncodeElement(_fgdcg, _fegccg)
		}
	}
	if _gccgc.Rcmt != nil {
		_ggeab := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0072\u0063\u006d\u0074"}}
		for _, _dfccb := range _gccgc.Rcmt {
			e.EncodeElement(_dfccb, _ggeab)
		}
	}
	if _gccgc.Rqt != nil {
		_fbaeb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0071\u0074"}}
		for _, _dffacd := range _gccgc.Rqt {
			e.EncodeElement(_dffacd, _fbaeb)
		}
	}
	if _gccgc.Rcft != nil {
		_afgbe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0072\u0063\u0066\u0074"}}
		for _, _cfbcb := range _gccgc.Rcft {
			e.EncodeElement(_cfbcb, _afgbe)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalSheetData struct {

	// Sheet Id
	SheetIdAttr uint32

	// Last Refresh Resulted in Error
	RefreshErrorAttr *bool

	// Row
	Row []*CT_ExternalRow
}

// Validate validates the CT_ProtectedRanges and its children
func (_aeafcc *CT_ProtectedRanges) Validate() error {
	return _aeafcc.ValidateWithPath("\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073")
}

type CT_PivotCacheRecords struct {

	// PivotCache Records Count
	CountAttr *uint32

	// PivotCache Record
	R []*CT_Record

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_FileRecoveryPr and its children
func (_ggda *CT_FileRecoveryPr) Validate() error {
	return _ggda.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072")
}

type CT_XmlCellPr struct {

	// Table Field Id
	IdAttr uint32

	// Unique Table Name
	UniqueNameAttr *string

	// Column XML Properties
	XmlPr *CT_XmlPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fecbcg *CT_MeasureDimensionMaps) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ddgfb := range start.Attr {
		if _ddgfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdeda, _adgcc := _a.ParseUint(_ddgfb.Value, 10, 32)
			if _adgcc != nil {
				return _adgcc
			}
			_fceaa := uint32(_fdeda)
			_fecbcg.CountAttr = &_fceaa
			continue
		}
	}
_ggcbb:
	for {
		_gafec, _aecc := d.Token()
		if _aecc != nil {
			return _aecc
		}
		switch _ccfdb := _gafec.(type) {
		case _gd.StartElement:
			switch _ccfdb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}:
				_cgcab := NewCT_MeasureDimensionMap()
				if _feeeb := d.DecodeElement(_cgcab, &_ccfdb); _feeeb != nil {
					return _feeeb
				}
				_fecbcg.Map = append(_fecbcg.Map, _cgcab)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0044\u0069m\u0065\u006e\u0073\u0069\u006f\u006eM\u0061\u0070\u0073 \u0025\u0076", _ccfdb.Name)
				if _fdccb := d.Skip(); _fdccb != nil {
					return _fdccb
				}
			}
		case _gd.EndElement:
			break _ggcbb
		case _gd.CharData:
		}
	}
	return nil
}

func (_ebbb *CT_RangeSets) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _defcb := range start.Attr {
		if _defcb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdgdcb, _gcbaff := _a.ParseUint(_defcb.Value, 10, 32)
			if _gcbaff != nil {
				return _gcbaff
			}
			_eccaf := uint32(_cdgdcb)
			_ebbb.CountAttr = &_eccaf
			continue
		}
	}
_dbfffe:
	for {
		_bagfc, _egaea := d.Token()
		if _egaea != nil {
			return _egaea
		}
		switch _cebda := _bagfc.(type) {
		case _gd.StartElement:
			switch _cebda.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}:
				_ebgff := NewCT_RangeSet()
				if _bagdcb := d.DecodeElement(_ebgff, &_cebda); _bagdcb != nil {
					return _bagdcb
				}
				_ebbb.RangeSet = append(_ebbb.RangeSet, _ebgff)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0061\u006eg\u0065\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _cebda.Name)
				if _gbcag := d.Skip(); _gbcag != nil {
					return _gbcag
				}
			}
		case _gd.EndElement:
			break _dbfffe
		case _gd.CharData:
		}
	}
	return nil
}

func (_gggggg *PivotCacheRecords) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061:\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073"
	return _gggggg.CT_PivotCacheRecords.MarshalXML(e, start)
}

// Validate validates the CT_Field and its children
func (_afccb *CT_Field) Validate() error {
	return _afccb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064")
}

func (_gecae *CT_Stylesheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _gecae.NumFmts != nil {
		_addbg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006e\u0075\u006d\u0046\u006d\u0074\u0073"}}
		e.EncodeElement(_gecae.NumFmts, _addbg)
	}
	if _gecae.Fonts != nil {
		_cacee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u006e\u0074\u0073"}}
		e.EncodeElement(_gecae.Fonts, _cacee)
	}
	if _gecae.Fills != nil {
		_edadcd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u006c\u0073"}}
		e.EncodeElement(_gecae.Fills, _edadcd)
	}
	if _gecae.Borders != nil {
		_egaga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0073"}}
		e.EncodeElement(_gecae.Borders, _egaga)
	}
	if _gecae.CellStyleXfs != nil {
		_eabeb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}}
		e.EncodeElement(_gecae.CellStyleXfs, _eabeb)
	}
	if _gecae.CellXfs != nil {
		_gbeee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0058\u0066\u0073"}}
		e.EncodeElement(_gecae.CellXfs, _gbeee)
	}
	if _gecae.CellStyles != nil {
		_dabec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_gecae.CellStyles, _dabec)
	}
	if _gecae.Dxfs != nil {
		_dcdcag := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0064\u0078\u0066\u0073"}}
		e.EncodeElement(_gecae.Dxfs, _dcdcag)
	}
	if _gecae.TableStyles != nil {
		_cddgdg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_gecae.TableStyles, _cddgdg)
	}
	if _gecae.Colors != nil {
		_eeece := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u006f\u0072s"}}
		e.EncodeElement(_gecae.Colors, _eeece)
	}
	if _gecae.ExtLst != nil {
		_ggefa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gecae.ExtLst, _ggefa)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_CellSmartTagPr struct {

	// Key Name
	KeyAttr string

	// Value
	ValAttr string
}

// ValidateWithPath validates the CT_CacheHierarchy and its children, prefixing error messages with path
func (_dae *CT_CacheHierarchy) ValidateWithPath(path string) error {
	if _dae.FieldsUsage != nil {
		if _gbb := _dae.FieldsUsage.ValidateWithPath(path + "\u002f\u0046\u0069e\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"); _gbb != nil {
			return _gbb
		}
	}
	if _dae.GroupLevels != nil {
		if _gccb := _dae.GroupLevels.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"); _gccb != nil {
			return _gccb
		}
	}
	if _dae.ExtLst != nil {
		if _abc := _dae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abc != nil {
			return _abc
		}
	}
	return nil
}

func (_aegc *CT_CfRule) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aegc.TypeAttr != ST_CfTypeUnset {
		_bbba, _fbgae := _aegc.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _fbgae != nil {
			return _fbgae
		}
		start.Attr = append(start.Attr, _bbba)
	}
	if _aegc.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aegc.DxfIdAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _b.Sprintf("\u0025\u0076", _aegc.PriorityAttr)})
	if _aegc.StopIfTrueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aegc.StopIfTrueAttr))})
	}
	if _aegc.AboveAverageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aegc.AboveAverageAttr))})
	}
	if _aegc.PercentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aegc.PercentAttr))})
	}
	if _aegc.BottomAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aegc.BottomAttr))})
	}
	if _aegc.OperatorAttr != ST_ConditionalFormattingOperatorUnset {
		_bfad, _bab := _aegc.OperatorAttr.MarshalXMLAttr(_gd.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _bab != nil {
			return _bab
		}
		start.Attr = append(start.Attr, _bfad)
	}
	if _aegc.TextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aegc.TextAttr)})
	}
	if _aegc.TimePeriodAttr != ST_TimePeriodUnset {
		_bbeaa, _fedfa := _aegc.TimePeriodAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"})
		if _fedfa != nil {
			return _fedfa
		}
		start.Attr = append(start.Attr, _bbeaa)
	}
	if _aegc.RankAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061\u006e\u006b"}, Value: _b.Sprintf("\u0025\u0076", *_aegc.RankAttr)})
	}
	if _aegc.StdDevAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076"}, Value: _b.Sprintf("\u0025\u0076", *_aegc.StdDevAttr)})
	}
	if _aegc.EqualAverageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aegc.EqualAverageAttr))})
	}
	e.EncodeToken(start)
	if _aegc.Formula != nil {
		_ebe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		for _, _bdfea := range _aegc.Formula {
			e.EncodeElement(_bdfea, _ebe)
		}
	}
	if _aegc.ColorScale != nil {
		_bfec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}}
		e.EncodeElement(_aegc.ColorScale, _bfec)
	}
	if _aegc.DataBar != nil {
		_ddcb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0042\u0061\u0072"}}
		e.EncodeElement(_aegc.DataBar, _ddcb)
	}
	if _aegc.IconSet != nil {
		_cbfe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0053\u0065\u0074"}}
		e.EncodeElement(_aegc.IconSet, _cbfe)
	}
	if _aegc.ExtLst != nil {
		_bagb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aegc.ExtLst, _bagb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_VolMain and its children, prefixing error messages with path
func (_efccb *CT_VolMain) ValidateWithPath(path string) error {
	for _aafgad, _eggdca := range _efccb.Tp {
		if _bedca := _eggdca.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0054\u0070\u005b\u0025\u0064]", path, _aafgad)); _bedca != nil {
			return _bedca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SortCondition and its children, prefixing error messages with path
func (_bgdff *CT_SortCondition) ValidateWithPath(path string) error {
	if _dgdda := _bgdff.SortByAttr.ValidateWithPath(path + "/\u0053\u006f\u0072\u0074\u0042\u0079\u0041\u0074\u0074\u0072"); _dgdda != nil {
		return _dgdda
	}
	if _fcggcf := _bgdff.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _fcggcf != nil {
		return _fcggcf
	}
	return nil
}

// ValidateWithPath validates the CT_Pages and its children, prefixing error messages with path
func (_ebdgd *CT_Pages) ValidateWithPath(path string) error {
	for _gcdeb, _ecbeb := range _ebdgd.Page {
		if _dccedg := _ecbeb.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0050\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _gcdeb)); _dccedg != nil {
			return _dccedg
		}
	}
	return nil
}

func (_efeeg ST_SheetState) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_efeeg.String(), start)
}

func (_dggbc *CT_SheetPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fffcb := range start.Attr {
		if _fffcb.Name.Local == "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c" {
			_eeagb, _gbcgb := _a.ParseBool(_fffcb.Value)
			if _gbcgb != nil {
				return _gbcgb
			}
			_dggbc.SyncHorizontalAttr = &_eeagb
			continue
		}
		if _fffcb.Name.Local == "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_abaad, _dcafe := _a.ParseBool(_fffcb.Value)
			if _dcafe != nil {
				return _dcafe
			}
			_dggbc.SyncVerticalAttr = &_abaad
			continue
		}
		if _fffcb.Name.Local == "\u0073y\u006e\u0063\u0052\u0065\u0066" {
			_bbcdae, _dfggcb := _fffcb.Value, error(nil)
			if _dfggcb != nil {
				return _dfggcb
			}
			_dggbc.SyncRefAttr = &_bbcdae
			continue
		}
		if _fffcb.Name.Local == "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e" {
			_fcecd, _aggbge := _a.ParseBool(_fffcb.Value)
			if _aggbge != nil {
				return _aggbge
			}
			_dggbc.TransitionEvaluationAttr = &_fcecd
			continue
		}
		if _fffcb.Name.Local == "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079" {
			_daafd, _cfedcg := _a.ParseBool(_fffcb.Value)
			if _cfedcg != nil {
				return _cfedcg
			}
			_dggbc.TransitionEntryAttr = &_daafd
			continue
		}
		if _fffcb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_fefe, _acffbg := _a.ParseBool(_fffcb.Value)
			if _acffbg != nil {
				return _acffbg
			}
			_dggbc.PublishedAttr = &_fefe
			continue
		}
		if _fffcb.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_badced, _cagdfc := _fffcb.Value, error(nil)
			if _cagdfc != nil {
				return _cagdfc
			}
			_dggbc.CodeNameAttr = &_badced
			continue
		}
		if _fffcb.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065" {
			_fbfdfac, _cbagc := _a.ParseBool(_fffcb.Value)
			if _cbagc != nil {
				return _cbagc
			}
			_dggbc.FilterModeAttr = &_fbfdfac
			continue
		}
		if _fffcb.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e" {
			_fcggb, _afbfb := _a.ParseBool(_fffcb.Value)
			if _afbfb != nil {
				return _afbfb
			}
			_dggbc.EnableFormatConditionsCalculationAttr = &_fcggb
			continue
		}
	}
_caagf:
	for {
		_fcdef, _bdbfec := d.Token()
		if _bdbfec != nil {
			return _bdbfec
		}
		switch _fbbgf := _fcdef.(type) {
		case _gd.StartElement:
			switch _fbbgf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_dggbc.TabColor = NewCT_Color()
				if _adadba := d.DecodeElement(_dggbc.TabColor, &_fbbgf); _adadba != nil {
					return _adadba
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}:
				_dggbc.OutlinePr = NewCT_OutlinePr()
				if _facee := d.DecodeElement(_dggbc.OutlinePr, &_fbbgf); _facee != nil {
					return _facee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}:
				_dggbc.PageSetUpPr = NewCT_PageSetUpPr()
				if _dacfa := d.DecodeElement(_dggbc.PageSetUpPr, &_fbbgf); _dacfa != nil {
					return _dacfa
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _fbbgf.Name)
				if _afcgc := d.Skip(); _afcgc != nil {
					return _afcgc
				}
			}
		case _gd.EndElement:
			break _caagf
		case _gd.CharData:
		}
	}
	return nil
}

func (_bfddcd *CT_RevisionHeaders) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bfddcd.GuidAttr)})
	if _bfddcd.LastGuidAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfddcd.LastGuidAttr)})
	}
	if _bfddcd.SharedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u0061\u0072\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfddcd.SharedAttr))})
	}
	if _bfddcd.DiskRevisionsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfddcd.DiskRevisionsAttr))})
	}
	if _bfddcd.HistoryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfddcd.HistoryAttr))})
	}
	if _bfddcd.TrackRevisionsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfddcd.TrackRevisionsAttr))})
	}
	if _bfddcd.ExclusiveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfddcd.ExclusiveAttr))})
	}
	if _bfddcd.RevisionIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfddcd.RevisionIdAttr)})
	}
	if _bfddcd.VersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_bfddcd.VersionAttr)})
	}
	if _bfddcd.KeepChangeHistoryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfddcd.KeepChangeHistoryAttr))})
	}
	if _bfddcd.ProtectedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfddcd.ProtectedAttr))})
	}
	if _bfddcd.PreserveHistoryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_bfddcd.PreserveHistoryAttr)})
	}
	e.EncodeToken(start)
	_adagc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0068\u0065\u0061\u0064\u0065r"}}
	for _, _cecca := range _bfddcd.Header {
		e.EncodeElement(_cecca, _adagc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotAreaReference and its children
func (_dgdge *CT_PivotAreaReference) Validate() error {
	return _dgdge.ValidateWithPath("C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065")
}

func (_aaeda *PivotTableDefinition) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _aaeda.CT_pivotTableDefinition.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_aeca *CT_Comment) ValidateWithPath(path string) error {
	if _aeca.GuidAttr != nil {
		if !_af.ST_GuidPatternRe.MatchString(*_aeca.GuidAttr) {
			return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, *_aeca.GuidAttr)
		}
	}
	if _fcba := _aeca.Text.ValidateWithPath(path + "\u002f\u0054\u0065x\u0074"); _fcba != nil {
		return _fcba
	}
	if _aeca.CommentPr != nil {
		if _dbeca := _aeca.CommentPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"); _dbeca != nil {
			return _dbeca
		}
	}
	return nil
}

func (_ceebff *ST_DataValidationErrorStyle) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cgdad, _ggdbdb := d.Token()
	if _ggdbdb != nil {
		return _ggdbdb
	}
	if _ecbgd, _ebdbaa := _cgdad.(_gd.EndElement); _ebdbaa && _ecbgd.Name == start.Name {
		*_ceebff = 1
		return nil
	}
	if _aeagb, _ccfgad := _cgdad.(_gd.CharData); !_ccfgad {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgdad)
	} else {
		switch string(_aeagb) {
		case "":
			*_ceebff = 0
		case "\u0073\u0074\u006f\u0070":
			*_ceebff = 1
		case "\u0077a\u0072\u006e\u0069\u006e\u0067":
			*_ceebff = 2
		case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_ceebff = 3
		}
	}
	_cgdad, _ggdbdb = d.Token()
	if _ggdbdb != nil {
		return _ggdbdb
	}
	if _bcaff, _eeeffg := _cgdad.(_gd.EndElement); _eeeffg && _bcaff.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgdad)
}

type ST_Orientation byte

func (_aggd *CT_Cfvo) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aggd.TypeAttr = ST_CfvoType(1)
	for _, _cagg := range start.Attr {
		if _cagg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_aggd.TypeAttr.UnmarshalXMLAttr(_cagg)
			continue
		}
		if _cagg.Name.Local == "\u0076\u0061\u006c" {
			_defd, _fcae := _cagg.Value, error(nil)
			if _fcae != nil {
				return _fcae
			}
			_aggd.ValAttr = &_defd
			continue
		}
		if _cagg.Name.Local == "\u0067\u0074\u0065" {
			_agegf, _ggff := _a.ParseBool(_cagg.Value)
			if _ggff != nil {
				return _ggff
			}
			_aggd.GteAttr = &_agegf
			continue
		}
	}
_dbfc:
	for {
		_egdg, _efae := d.Token()
		if _efae != nil {
			return _efae
		}
		switch _fdcc := _egdg.(type) {
		case _gd.StartElement:
			switch _fdcc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aggd.ExtLst = NewCT_ExtensionList()
				if _gdgc := d.DecodeElement(_aggd.ExtLst, &_fdcc); _gdgc != nil {
					return _gdgc
				}
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0066\u0076\u006f\u0020\u0025\u0076", _fdcc.Name)
				if _decc := d.Skip(); _decc != nil {
					return _decc
				}
			}
		case _gd.EndElement:
			break _dbfc
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Field struct {

	// Field Index
	XAttr int32
}

func (_bebegg *ST_ShowDataAs) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cebgfc, _efega := d.Token()
	if _efega != nil {
		return _efega
	}
	if _ecdgbg, _ebdgdb := _cebgfc.(_gd.EndElement); _ebdgdb && _ecdgbg.Name == start.Name {
		*_bebegg = 1
		return nil
	}
	if _ebgece, _daebe := _cebgfc.(_gd.CharData); !_daebe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cebgfc)
	} else {
		switch string(_ebgece) {
		case "":
			*_bebegg = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_bebegg = 1
		case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
			*_bebegg = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_bebegg = 3
		case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
			*_bebegg = 4
		case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
			*_bebegg = 5
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
			*_bebegg = 6
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
			*_bebegg = 7
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
			*_bebegg = 8
		case "\u0069\u006e\u0064e\u0078":
			*_bebegg = 9
		}
	}
	_cebgfc, _efega = d.Token()
	if _efega != nil {
		return _efega
	}
	if _aefbc, _cgacf := _cebgfc.(_gd.EndElement); _cgacf && _aefbc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cebgfc)
}

func (_dfdaf *CT_SheetView) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dfdaf.WindowProtectionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.WindowProtectionAttr))})
	}
	if _dfdaf.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.ShowFormulasAttr))})
	}
	if _dfdaf.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.ShowGridLinesAttr))})
	}
	if _dfdaf.ShowRowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.ShowRowColHeadersAttr))})
	}
	if _dfdaf.ShowZerosAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.ShowZerosAttr))})
	}
	if _dfdaf.RightToLeftAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.RightToLeftAttr))})
	}
	if _dfdaf.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.TabSelectedAttr))})
	}
	if _dfdaf.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.ShowRulerAttr))})
	}
	if _dfdaf.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.ShowOutlineSymbolsAttr))})
	}
	if _dfdaf.DefaultGridColorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.DefaultGridColorAttr))})
	}
	if _dfdaf.ShowWhiteSpaceAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfdaf.ShowWhiteSpaceAttr))})
	}
	if _dfdaf.ViewAttr != ST_SheetViewTypeUnset {
		_bebff, _bddec := _dfdaf.ViewAttr.MarshalXMLAttr(_gd.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _bddec != nil {
			return _bddec
		}
		start.Attr = append(start.Attr, _bebff)
	}
	if _dfdaf.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_dfdaf.TopLeftCellAttr)})
	}
	if _dfdaf.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_dfdaf.ColorIdAttr)})
	}
	if _dfdaf.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _b.Sprintf("\u0025\u0076", *_dfdaf.ZoomScaleAttr)})
	}
	if _dfdaf.ZoomScaleNormalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_dfdaf.ZoomScaleNormalAttr)})
	}
	if _dfdaf.ZoomScaleSheetLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_dfdaf.ZoomScaleSheetLayoutViewAttr)})
	}
	if _dfdaf.ZoomScalePageLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_dfdaf.ZoomScalePageLayoutViewAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _dfdaf.WorkbookViewIdAttr)})
	e.EncodeToken(start)
	if _dfdaf.Pane != nil {
		_eddad := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_dfdaf.Pane, _eddad)
	}
	if _dfdaf.Selection != nil {
		_bcfba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		for _, _bgfde := range _dfdaf.Selection {
			e.EncodeElement(_bgfde, _bcfba)
		}
	}
	if _dfdaf.PivotSelection != nil {
		_bddaba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}}
		for _, _ecafg := range _dfdaf.PivotSelection {
			e.EncodeElement(_ecafg, _bddaba)
		}
	}
	if _dfdaf.ExtLst != nil {
		_bfddf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dfdaf.ExtLst, _bfddf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Col and its children
func (_efbdc *CT_Col) Validate() error {
	return _efbdc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c")
}

func NewCT_VolMain() *CT_VolMain { _aegbaf := &CT_VolMain{}; return _aegbaf }

func (_ebgf *CT_DataBar) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ebgf.Color = NewCT_Color()
	for _, _cgfbe := range start.Attr {
		if _cgfbe.Name.Local == "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h" {
			_gfdgd, _cbeb := _a.ParseUint(_cgfbe.Value, 10, 32)
			if _cbeb != nil {
				return _cbeb
			}
			_bffd := uint32(_gfdgd)
			_ebgf.MinLengthAttr = &_bffd
			continue
		}
		if _cgfbe.Name.Local == "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h" {
			_gfafa, _ccfbc := _a.ParseUint(_cgfbe.Value, 10, 32)
			if _ccfbc != nil {
				return _ccfbc
			}
			_feca := uint32(_gfafa)
			_ebgf.MaxLengthAttr = &_feca
			continue
		}
		if _cgfbe.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_agdae, _adaag := _a.ParseBool(_cgfbe.Value)
			if _adaag != nil {
				return _adaag
			}
			_ebgf.ShowValueAttr = &_agdae
			continue
		}
	}
_ccbae:
	for {
		_bcbb, _fgdd := d.Token()
		if _fgdd != nil {
			return _fgdd
		}
		switch _ebfdb := _bcbb.(type) {
		case _gd.StartElement:
			switch _ebfdb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_gdfe := NewCT_Cfvo()
				if _faagf := d.DecodeElement(_gdfe, &_ebfdb); _faagf != nil {
					return _faagf
				}
				_ebgf.Cfvo = append(_ebgf.Cfvo, _gdfe)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _cdcb := d.DecodeElement(_ebgf.Color, &_ebfdb); _cdcb != nil {
					return _cdcb
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0061\u0074\u0061\u0042\u0061\u0072\u0020\u0025\u0076", _ebfdb.Name)
				if _eecee := d.Skip(); _eecee != nil {
					return _eecee
				}
			}
		case _gd.EndElement:
			break _ccbae
		case _gd.CharData:
		}
	}
	return nil
}

func (_faffd *CT_OleItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _faffd.OleItem != nil {
		_dfgdb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d"}}
		for _, _dadgea := range _faffd.OleItem {
			e.EncodeElement(_dadgea, _dfgdb)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Tables and its children, prefixing error messages with path
func (_dgbdf *CT_Tables) ValidateWithPath(path string) error {
	for _cbgeb, _gabad := range _dgbdf.M {
		if _dbcfa := _gabad.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _cbgeb)); _dbcfa != nil {
			return _dbcfa
		}
	}
	for _dcdgf, _gdfac := range _dgbdf.S {
		if _cabag := _gdfac.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _dcdgf)); _cabag != nil {
			return _cabag
		}
	}
	for _aagf, _befbd := range _dgbdf.X {
		if _cafbf := _befbd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _aagf)); _cafbf != nil {
			return _cafbf
		}
	}
	return nil
}

type CT_PivotDimension struct {

	// Measure
	MeasureAttr *bool

	// Dimension Name
	NameAttr string

	// Dimension Unique Name
	UniqueNameAttr string

	// Dimension Display Name
	CaptionAttr string
}

func (_ffecfg ST_CfvoType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bgdad := _gd.Attr{}
	_bgdad.Name = name
	switch _ffecfg {
	case ST_CfvoTypeUnset:
		_bgdad.Value = ""
	case ST_CfvoTypeNum:
		_bgdad.Value = "\u006e\u0075\u006d"
	case ST_CfvoTypePercent:
		_bgdad.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_CfvoTypeMax:
		_bgdad.Value = "\u006d\u0061\u0078"
	case ST_CfvoTypeMin:
		_bgdad.Value = "\u006d\u0069\u006e"
	case ST_CfvoTypeFormula:
		_bgdad.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case ST_CfvoTypePercentile:
		_bgdad.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return _bgdad, nil
}

// Validate validates the CT_VolTopicRef and its children
func (_gcddd *CT_VolTopicRef) Validate() error {
	return _gcddd.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066")
}

// Validate validates the CT_RgbColor and its children
func (_efbbc *CT_RgbColor) Validate() error {
	return _efbbc.ValidateWithPath("C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

func (_cbgfc *CT_Missing) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cbgfc.UAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgfc.UAttr))})
	}
	if _cbgfc.FAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgfc.FAttr))})
	}
	if _cbgfc.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cbgfc.CAttr)})
	}
	if _cbgfc.CpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_cbgfc.CpAttr)})
	}
	if _cbgfc.InAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cbgfc.InAttr)})
	}
	if _cbgfc.BcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cbgfc.BcAttr)})
	}
	if _cbgfc.FcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cbgfc.FcAttr)})
	}
	if _cbgfc.IAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgfc.IAttr))})
	}
	if _cbgfc.UnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgfc.UnAttr))})
	}
	if _cbgfc.StAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgfc.StAttr))})
	}
	if _cbgfc.BAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbgfc.BAttr))})
	}
	e.EncodeToken(start)
	if _cbgfc.Tpls != nil {
		_bagee := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _dcff := range _cbgfc.Tpls {
			e.EncodeElement(_dcff, _bagee)
		}
	}
	if _cbgfc.X != nil {
		_dgbac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _fegd := range _cbgfc.X {
			e.EncodeElement(_fegd, _dgbac)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CsPageSetup and its children
func (_gffaf *CT_CsPageSetup) Validate() error {
	return _gffaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070")
}

// Validate validates the CT_FunctionGroups and its children
func (_cfbddb *CT_FunctionGroups) Validate() error {
	return _cfbddb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073")
}

func (_dgeab *CT_SmartTagType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _debgae := range start.Attr {
		if _debgae.Name.Local == "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069" {
			_babdd, _ccegf := _debgae.Value, error(nil)
			if _ccegf != nil {
				return _ccegf
			}
			_dgeab.NamespaceUriAttr = &_babdd
			continue
		}
		if _debgae.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gaefd, _fffbf := _debgae.Value, error(nil)
			if _fffbf != nil {
				return _fffbf
			}
			_dgeab.NameAttr = &_gaefd
			continue
		}
		if _debgae.Name.Local == "\u0075\u0072\u006c" {
			_ccgcbf, _aegec := _debgae.Value, error(nil)
			if _aegec != nil {
				return _aegec
			}
			_dgeab.UrlAttr = &_ccgcbf
			continue
		}
	}
	for {
		_fgec, _dbdba := d.Token()
		if _dbdba != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054a\u0067\u0054\u0079p\u0065:\u0020\u0025\u0073", _dbdba)
		}
		if _egcbf, _ebfea := _fgec.(_gd.EndElement); _ebfea && _egcbf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eeeb *CT_DefinedNames) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_dbab:
	for {
		_dgaaf, _cbbee := d.Token()
		if _cbbee != nil {
			return _cbbee
		}
		switch _fbbca := _dgaaf.(type) {
		case _gd.StartElement:
			switch _fbbca.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_dfea := NewCT_DefinedName()
				if _aagad := d.DecodeElement(_dfea, &_fbbca); _aagad != nil {
					return _aagad
				}
				_eeeb.DefinedName = append(_eeeb.DefinedName, _dfea)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _fbbca.Name)
				if _bcec := d.Skip(); _bcec != nil {
					return _bcec
				}
			}
		case _gd.EndElement:
			break _dbab
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the VolTypes and its children, prefixing error messages with path
func (_gaaccf *VolTypes) ValidateWithPath(path string) error {
	if _dgfdfc := _gaaccf.CT_VolTypes.ValidateWithPath(path); _dgfdfc != nil {
		return _dgfdfc
	}
	return nil
}

func (_fgeba ST_TargetScreenSize) String() string {
	switch _fgeba {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

func (_eegfa ST_ConditionalFormattingOperator) Validate() error { return _eegfa.ValidateWithPath("") }

type ST_TextHAlign byte

func (_abadec ST_ExternalConnectionType) String() string {
	switch _abadec {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u0074\u0065\u0078\u0074"
	case 3:
		return "\u004d\u0044\u0059"
	case 4:
		return "\u0044\u004d\u0059"
	case 5:
		return "\u0059\u004d\u0044"
	case 6:
		return "\u004d\u0059\u0044"
	case 7:
		return "\u0044\u0059\u004d"
	case 8:
		return "\u0059\u0044\u004d"
	case 9:
		return "\u0073\u006b\u0069\u0070"
	case 10:
		return "\u0045\u004d\u0044"
	}
	return ""
}

func (_cgbeg *PivotCacheDefinition) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _cgbeg.CT_PivotCacheDefinition.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_PageBreak and its children, prefixing error messages with path
func (_afdfd *CT_PageBreak) ValidateWithPath(path string) error {
	for _aggae, _eedce := range _afdfd.Brk {
		if _eaegb := _eedce.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u0072\u006b\u005b\u0025\u0064\u005d", path, _aggae)); _eaegb != nil {
			return _eaegb
		}
	}
	return nil
}

func (_aeeecc ST_PivotFilterType) String() string {
	switch _aeeecc {
	case 0:
		return ""
	case 1:
		return "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "\u0073\u0075\u006d"
	case 5:
		return "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case 8:
		return "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case 9:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 10:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case 11:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 12:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case 13:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case 14:
		return "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case 15:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 16:
		return "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case 17:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 18:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 19:
		return "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case 20:
		return "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 21:
		return "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 22:
		return "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 23:
		return "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 24:
		return "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 25:
		return "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 26:
		return "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 27:
		return "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case 28:
		return "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 29:
		return "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case 30:
		return "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 31:
		return "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case 32:
		return "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 33:
		return "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 34:
		return "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 35:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 36:
		return "\u0074\u006f\u0064a\u0079"
	case 37:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 38:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 39:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 40:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 41:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 42:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 43:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 44:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 45:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 46:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 47:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 48:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 49:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 50:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 51:
		return "\u0051\u0031"
	case 52:
		return "\u0051\u0032"
	case 53:
		return "\u0051\u0033"
	case 54:
		return "\u0051\u0034"
	case 55:
		return "\u004d\u0031"
	case 56:
		return "\u004d\u0032"
	case 57:
		return "\u004d\u0033"
	case 58:
		return "\u004d\u0034"
	case 59:
		return "\u004d\u0035"
	case 60:
		return "\u004d\u0036"
	case 61:
		return "\u004d\u0037"
	case 62:
		return "\u004d\u0038"
	case 63:
		return "\u004d\u0039"
	case 64:
		return "\u004d\u0031\u0030"
	case 65:
		return "\u004d\u0031\u0031"
	case 66:
		return "\u004d\u0031\u0032"
	}
	return ""
}

func NewCT_IconFilter() *CT_IconFilter {
	_aggdf := &CT_IconFilter{}
	_aggdf.IconSetAttr = ST_IconSetType(1)
	return _aggdf
}

type CT_Reviewed struct {

	// revision Id
	RIdAttr uint32
}

func (_bcga *CT_MeasureGroups) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _afgae := range start.Attr {
		if _afgae.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecgbbg, _aaeaf := _a.ParseUint(_afgae.Value, 10, 32)
			if _aaeaf != nil {
				return _aaeaf
			}
			_gfbb := uint32(_ecgbbg)
			_bcga.CountAttr = &_gfbb
			continue
		}
	}
_dfaac:
	for {
		_cdcbd, _acdgc := d.Token()
		if _acdgc != nil {
			return _acdgc
		}
		switch _beabd := _cdcbd.(type) {
		case _gd.StartElement:
			switch _beabd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}:
				_cdee := NewCT_MeasureGroup()
				if _bebda := d.DecodeElement(_cdee, &_beabd); _bebda != nil {
					return _bebda
				}
				_bcga.MeasureGroup = append(_bcga.MeasureGroup, _cdee)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025v", _beabd.Name)
				if _gfgac := d.Skip(); _gfgac != nil {
					return _gfgac
				}
			}
		case _gd.EndElement:
			break _dfaac
		case _gd.CharData:
		}
	}
	return nil
}

func (_bddde *CT_SheetProtection) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebddb := range start.Attr {
		if _ebddb.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073" {
			_cdcbce, _bcgac := _a.ParseBool(_ebddb.Value)
			if _bcgac != nil {
				return _bcgac
			}
			_bddde.FormatRowsAttr = &_cdcbce
			continue
		}
		if _ebddb.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_dagdb, _gecbf := _a.ParseBool(_ebddb.Value)
			if _gecbf != nil {
				return _gecbf
			}
			_bddde.InsertColumnsAttr = &_dagdb
			continue
		}
		if _ebddb.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_eebgf, _ebadb := _ebddb.Value, error(nil)
			if _ebadb != nil {
				return _ebadb
			}
			_bddde.AlgorithmNameAttr = &_eebgf
			continue
		}
		if _ebddb.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073" {
			_ddbgc, _ecebfg := _a.ParseBool(_ebddb.Value)
			if _ecebfg != nil {
				return _ecebfg
			}
			_bddde.InsertRowsAttr = &_ddbgc
			continue
		}
		if _ebddb.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_eedcfc, _efcdca := _ebddb.Value, error(nil)
			if _efcdca != nil {
				return _efcdca
			}
			_bddde.SaltValueAttr = &_eedcfc
			continue
		}
		if _ebddb.Name.Local == "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073" {
			_bfffce, _aggad := _a.ParseBool(_ebddb.Value)
			if _aggad != nil {
				return _aggad
			}
			_bddde.InsertHyperlinksAttr = &_bfffce
			continue
		}
		if _ebddb.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_agdgb, _fgcad := _a.ParseBool(_ebddb.Value)
			if _fgcad != nil {
				return _fgcad
			}
			_bddde.SheetAttr = &_agdgb
			continue
		}
		if _ebddb.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_cagff, _dbdde := _a.ParseBool(_ebddb.Value)
			if _dbdde != nil {
				return _dbdde
			}
			_bddde.DeleteColumnsAttr = &_cagff
			continue
		}
		if _ebddb.Name.Local == "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs" {
			_ddfdfe, _afbeab := _a.ParseBool(_ebddb.Value)
			if _afbeab != nil {
				return _afbeab
			}
			_bddde.ScenariosAttr = &_ddfdfe
			continue
		}
		if _ebddb.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_beade, _efcab := _a.ParseBool(_ebddb.Value)
			if _efcab != nil {
				return _efcab
			}
			_bddde.FormatColumnsAttr = &_beade
			continue
		}
		if _ebddb.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_bdcad, _acacd := _ebddb.Value, error(nil)
			if _acacd != nil {
				return _acacd
			}
			_bddde.PasswordAttr = &_bdcad
			continue
		}
		if _ebddb.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_edcdc, _ebabdf := _ebddb.Value, error(nil)
			if _ebabdf != nil {
				return _ebabdf
			}
			_bddde.HashValueAttr = &_edcdc
			continue
		}
		if _ebddb.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_efcdg, _eaegg := _a.ParseUint(_ebddb.Value, 10, 32)
			if _eaegg != nil {
				return _eaegg
			}
			_dbdfa := uint32(_efcdg)
			_bddde.SpinCountAttr = &_dbdfa
			continue
		}
		if _ebddb.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_efgec, _gfcdb := _a.ParseBool(_ebddb.Value)
			if _gfcdb != nil {
				return _gfcdb
			}
			_bddde.ObjectsAttr = &_efgec
			continue
		}
		if _ebddb.Name.Local == "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073" {
			_feeebb, _ebfddb := _a.ParseBool(_ebddb.Value)
			if _ebfddb != nil {
				return _ebfddb
			}
			_bddde.FormatCellsAttr = &_feeebb
			continue
		}
		if _ebddb.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073" {
			_cebcb, _gabdd := _a.ParseBool(_ebddb.Value)
			if _gabdd != nil {
				return _gabdd
			}
			_bddde.DeleteRowsAttr = &_cebcb
			continue
		}
		if _ebddb.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073" {
			_gfadce, _aefcg := _a.ParseBool(_ebddb.Value)
			if _aefcg != nil {
				return _aefcg
			}
			_bddde.SelectLockedCellsAttr = &_gfadce
			continue
		}
		if _ebddb.Name.Local == "\u0073\u006f\u0072\u0074" {
			_fedfaf, _abecfb := _a.ParseBool(_ebddb.Value)
			if _abecfb != nil {
				return _abecfb
			}
			_bddde.SortAttr = &_fedfaf
			continue
		}
		if _ebddb.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072" {
			_ebafc, _bbdac := _a.ParseBool(_ebddb.Value)
			if _bbdac != nil {
				return _bbdac
			}
			_bddde.AutoFilterAttr = &_ebafc
			continue
		}
		if _ebddb.Name.Local == "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073" {
			_ecbff, _aecab := _a.ParseBool(_ebddb.Value)
			if _aecab != nil {
				return _aecab
			}
			_bddde.PivotTablesAttr = &_ecbff
			continue
		}
		if _ebddb.Name.Local == "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073" {
			_fefda, _efebc := _a.ParseBool(_ebddb.Value)
			if _efebc != nil {
				return _efebc
			}
			_bddde.SelectUnlockedCellsAttr = &_fefda
			continue
		}
	}
	for {
		_eedae, _fggdf := d.Token()
		if _fggdf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0050\u0072o\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _fggdf)
		}
		if _cffcc, _eecegg := _eedae.(_gd.EndElement); _eecegg && _cffcc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomWorkbookView and its children, prefixing error messages with path
func (_dcfg *CT_CustomWorkbookView) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_dcfg.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _dcfg.GuidAttr)
	}
	if _fgcda := _dcfg.ShowCommentsAttr.ValidateWithPath(path + "\u002f\u0053\u0068\u006f\u0077\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _fgcda != nil {
		return _fgcda
	}
	if _bdegc := _dcfg.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _bdegc != nil {
		return _bdegc
	}
	if _dcfg.ExtLst != nil {
		if _affeg := _dcfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _affeg != nil {
			return _affeg
		}
	}
	return nil
}

func (_dege *CT_ColorScale) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_fgfc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _dbag := range _dege.Cfvo {
		e.EncodeElement(_dbag, _fgfc)
	}
	_aafg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _ebda := range _dege.Color {
		e.EncodeElement(_ebda, _aafg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cggbbe *ST_DataValidationOperator) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cggbbe = 0
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_cggbbe = 1
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_cggbbe = 2
	case "\u0065\u0071\u0075a\u006c":
		*_cggbbe = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_cggbbe = 4
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_cggbbe = 5
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_cggbbe = 6
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_cggbbe = 7
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_cggbbe = 8
	}
	return nil
}

func (_bagfbb ST_SortMethod) String() string {
	switch _bagfbb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072\u006f\u006b\u0065"
	case 2:
		return "\u0070\u0069\u006e\u0059\u0069\u006e"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

type CT_HeaderFooter struct {

	// Different Odd Even Header Footer
	DifferentOddEvenAttr *bool

	// Different First Page
	DifferentFirstAttr *bool

	// Scale Header & Footer With Document
	ScaleWithDocAttr *bool

	// Align Margins
	AlignWithMarginsAttr *bool

	// Odd Header
	OddHeader *string

	// Odd Page Footer
	OddFooter *string

	// Even Page Header
	EvenHeader *string

	// Even Page Footer
	EvenFooter *string

	// First Page Header
	FirstHeader *string

	// First Page Footer
	FirstFooter *string
}

const (
	ST_FormatActionUnset      ST_FormatAction = 0
	ST_FormatActionBlank      ST_FormatAction = 1
	ST_FormatActionFormatting ST_FormatAction = 2
	ST_FormatActionDrill      ST_FormatAction = 3
	ST_FormatActionFormula    ST_FormatAction = 4
)

func NewCT_ChartFormat() *CT_ChartFormat {
	_acgb := &CT_ChartFormat{}
	_acgb.PivotArea = NewCT_PivotArea()
	return _acgb
}

func (_aaegc ST_OleUpdate) String() string {
	switch _aaegc {
	case 0:
		return ""
	case 1:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case 2:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return ""
}

func NewCT_SingleXmlCell() *CT_SingleXmlCell {
	_afbcfd := &CT_SingleXmlCell{}
	_afbcfd.XmlCellPr = NewCT_XmlCellPr()
	return _afbcfd
}

func (_efdgc *CT_ExternalCell) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fffe := range start.Attr {
		if _fffe.Name.Local == "\u0072" {
			_facd, _bfacb := _fffe.Value, error(nil)
			if _bfacb != nil {
				return _bfacb
			}
			_efdgc.RAttr = &_facd
			continue
		}
		if _fffe.Name.Local == "\u0074" {
			_efdgc.TAttr.UnmarshalXMLAttr(_fffe)
			continue
		}
		if _fffe.Name.Local == "\u0076\u006d" {
			_cdefc, _ddcgc := _a.ParseUint(_fffe.Value, 10, 32)
			if _ddcgc != nil {
				return _ddcgc
			}
			_dfecg := uint32(_cdefc)
			_efdgc.VmAttr = &_dfecg
			continue
		}
	}
_fbff:
	for {
		_edfee, _beaab := d.Token()
		if _beaab != nil {
			return _beaab
		}
		switch _adag := _edfee.(type) {
		case _gd.StartElement:
			switch _adag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_efdgc.V = new(string)
				if _feggag := d.DecodeElement(_efdgc.V, &_adag); _feggag != nil {
					return _feggag
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _adag.Name)
				if _cbbcf := d.Skip(); _cbbcf != nil {
					return _cbbcf
				}
			}
		case _gd.EndElement:
			break _fbff
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Users and its children, prefixing error messages with path
func (_fegbd *Users) ValidateWithPath(path string) error {
	if _egfgcg := _fegbd.CT_Users.ValidateWithPath(path); _egfgcg != nil {
		return _egfgcg
	}
	return nil
}

// Validate validates the CT_ExternalSheetData and its children
func (_cbebg *CT_ExternalSheetData) Validate() error {
	return _cbebg.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061")
}

func (_abdf *CT_PivotTableStyle) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cfbg := range start.Attr {
		if _cfbg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cgcgfe, _fcecb := _cfbg.Value, error(nil)
			if _fcecb != nil {
				return _fcecb
			}
			_abdf.NameAttr = &_cgcgfe
			continue
		}
		if _cfbg.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_accef, _aggbg := _a.ParseBool(_cfbg.Value)
			if _aggbg != nil {
				return _aggbg
			}
			_abdf.ShowRowHeadersAttr = &_accef
			continue
		}
		if _cfbg.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_geac, _gfbgb := _a.ParseBool(_cfbg.Value)
			if _gfbgb != nil {
				return _gfbgb
			}
			_abdf.ShowColHeadersAttr = &_geac
			continue
		}
		if _cfbg.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_dadef, _caefa := _a.ParseBool(_cfbg.Value)
			if _caefa != nil {
				return _caefa
			}
			_abdf.ShowRowStripesAttr = &_dadef
			continue
		}
		if _cfbg.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_ddbfc, _adbde := _a.ParseBool(_cfbg.Value)
			if _adbde != nil {
				return _adbde
			}
			_abdf.ShowColStripesAttr = &_ddbfc
			continue
		}
		if _cfbg.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_eecfc, _dfcaaf := _a.ParseBool(_cfbg.Value)
			if _dfcaaf != nil {
				return _dfcaaf
			}
			_abdf.ShowLastColumnAttr = &_eecfc
			continue
		}
	}
	for {
		_gegea, _eebgbc := d.Token()
		if _eebgbc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0050\u0069\u0076\u006f\u0074\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u003a\u0020\u0025\u0073", _eebgbc)
		}
		if _dbdfdb, _affff := _gegea.(_gd.EndElement); _affff && _dbdfdb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RElt and its children
func (_bfef *CT_RElt) Validate() error {
	return _bfef.ValidateWithPath("\u0043T\u005f\u0052\u0045\u006c\u0074")
}

func (_gdedc *ST_Objects) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bgceab, _ebffac := d.Token()
	if _ebffac != nil {
		return _ebffac
	}
	if _effdb, _bdgae := _bgceab.(_gd.EndElement); _bdgae && _effdb.Name == start.Name {
		*_gdedc = 1
		return nil
	}
	if _aggaa, _edfbe := _bgceab.(_gd.CharData); !_edfbe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgceab)
	} else {
		switch string(_aggaa) {
		case "":
			*_gdedc = 0
		case "\u0061\u006c\u006c":
			*_gdedc = 1
		case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
			*_gdedc = 2
		case "\u006e\u006f\u006e\u0065":
			*_gdedc = 3
		}
	}
	_bgceab, _ebffac = d.Token()
	if _ebffac != nil {
		return _ebffac
	}
	if _aacbb, _aafeg := _bgceab.(_gd.EndElement); _aafeg && _aacbb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgceab)
}

func (_gfdf *CT_CalcPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gfdf.CalcIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061\u006c\u0063\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gfdf.CalcIdAttr)})
	}
	if _gfdf.CalcModeAttr != ST_CalcModeUnset {
		_aafc, _fccf := _gfdf.CalcModeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065"})
		if _fccf != nil {
			return _fccf
		}
		start.Attr = append(start.Attr, _aafc)
	}
	if _gfdf.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfdf.FullCalcOnLoadAttr))})
	}
	if _gfdf.RefModeAttr != ST_RefModeUnset {
		_bdeg, _bff := _gfdf.RefModeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0072e\u0066\u004d\u006f\u0064\u0065"})
		if _bff != nil {
			return _bff
		}
		start.Attr = append(start.Attr, _bdeg)
	}
	if _gfdf.IterateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfdf.IterateAttr))})
	}
	if _gfdf.IterateCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gfdf.IterateCountAttr)})
	}
	if _gfdf.IterateDeltaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0076", *_gfdf.IterateDeltaAttr)})
	}
	if _gfdf.FullPrecisionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfdf.FullPrecisionAttr))})
	}
	if _gfdf.CalcCompletedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfdf.CalcCompletedAttr))})
	}
	if _gfdf.CalcOnSaveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfdf.CalcOnSaveAttr))})
	}
	if _gfdf.ConcurrentCalcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfdf.ConcurrentCalcAttr))})
	}
	if _gfdf.ConcurrentManualCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gfdf.ConcurrentManualCountAttr)})
	}
	if _gfdf.ForceFullCalcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfdf.ForceFullCalcAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SheetCalcPr and its children, prefixing error messages with path
func (_gecbc *CT_SheetCalcPr) ValidateWithPath(path string) error { return nil }

func NewCT_Fill() *CT_Fill { _ebdae := &CT_Fill{}; return _ebdae }

func (_bgbfg ST_MdxKPIProperty) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bgbfg.String(), start)
}

func (_bag *CT_BookViews) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_dcgg:
	for {
		_egf, _afg := d.Token()
		if _afg != nil {
			return _afg
		}
		switch _agfg := _egf.(type) {
		case _gd.StartElement:
			switch _agfg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}:
				_beg := NewCT_BookView()
				if _dedg := d.DecodeElement(_beg, &_agfg); _dedg != nil {
					return _dedg
				}
				_bag.WorkbookView = append(_bag.WorkbookView, _beg)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u006fk\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _agfg.Name)
				if _ece := d.Skip(); _ece != nil {
					return _ece
				}
			}
		case _gd.EndElement:
			break _dcgg
		case _gd.CharData:
		}
	}
	return nil
}

func (_egfedb *CT_Tuples) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bcgdf := range start.Attr {
		if _bcgdf.Name.Local == "\u0063" {
			_ecbga, _ecdbf := _a.ParseUint(_bcgdf.Value, 10, 32)
			if _ecdbf != nil {
				return _ecdbf
			}
			_aabfge := uint32(_ecbga)
			_egfedb.CAttr = &_aabfge
			continue
		}
	}
_dfggff:
	for {
		_ggaad, _addbb := d.Token()
		if _addbb != nil {
			return _addbb
		}
		switch _abcbe := _ggaad.(type) {
		case _gd.StartElement:
			switch _abcbe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}:
				_becec := NewCT_Tuple()
				if _ecegg := d.DecodeElement(_becec, &_abcbe); _ecegg != nil {
					return _ecegg
				}
				_egfedb.Tpl = append(_egfedb.Tpl, _becec)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0075\u0070l\u0065\u0073 \u0025\u0076", _abcbe.Name)
				if _cgeeb := d.Skip(); _cgeeb != nil {
					return _cgeeb
				}
			}
		case _gd.EndElement:
			break _dfggff
		case _gd.CharData:
		}
	}
	return nil
}

type CT_FieldsUsage struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field Id
	FieldUsage []*CT_FieldUsage
}

// Validate validates the CT_PivotFilters and its children
func (_cdcbdd *CT_PivotFilters) Validate() error {
	return _cdcbdd.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

func NewCT_PageSetUpPr() *CT_PageSetUpPr { _efgc := &CT_PageSetUpPr{}; return _efgc }

func NewCT_Members() *CT_Members { _gdgf := &CT_Members{}; return _gdgf }

type ST_TimePeriod byte

func (_dbfdc *CT_MeasureDimensionMap) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dagefb := range start.Attr {
		if _dagefb.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_bggfc, _bacff := _a.ParseUint(_dagefb.Value, 10, 32)
			if _bacff != nil {
				return _bacff
			}
			_dgefge := uint32(_bggfc)
			_dbfdc.MeasureGroupAttr = &_dgefge
			continue
		}
		if _dagefb.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_edfad, _fgeaa := _a.ParseUint(_dagefb.Value, 10, 32)
			if _fgeaa != nil {
				return _fgeaa
			}
			_fdgcg := uint32(_edfad)
			_dbfdc.DimensionAttr = &_fdgcg
			continue
		}
	}
	for {
		_abcdg, _gbcb := d.Token()
		if _gbcb != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0061s\u0075r\u0065D\u0069m\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u003a\u0020\u0025\u0073", _gbcb)
		}
		if _dceba, _aeffc := _abcdg.(_gd.EndElement); _aeffc && _dceba.Name == start.Name {
			break
		}
	}
	return nil
}

func (_daacc *ST_CellType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_daacc = 0
	case "\u0062":
		*_daacc = 1
	case "\u006e":
		*_daacc = 2
	case "\u0065":
		*_daacc = 3
	case "\u0073":
		*_daacc = 4
	case "\u0073\u0074\u0072":
		*_daacc = 5
	case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
		*_daacc = 6
	}
	return nil
}

func NewCT_IndexedColors() *CT_IndexedColors { _eaefe := &CT_IndexedColors{}; return _eaefe }

func (_bgeeac ST_ParameterType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bgeeac.String(), start)
}

type CT_DdeValues struct {

	// Rows
	RowsAttr *uint32

	// Columns
	ColsAttr *uint32

	// Value
	Value []*CT_DdeValue
}

func (_eaec *CT_AutoSortScope) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_dced := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_eaec.PivotArea, _dced)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cgeaeg *CT_FutureMetadataBlock) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _cgeaeg.ExtLst != nil {
		_dadfe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgeaeg.ExtLst, _dadfe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dgfccf *CT_VolType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_deddg, _cfebaa := _dgfccf.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _cfebaa != nil {
		return _cfebaa
	}
	start.Attr = append(start.Attr, _deddg)
	e.EncodeToken(start)
	_ccggd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006d\u0061\u0069\u006e"}}
	for _, _gefaa := range _dgfccf.Main {
		e.EncodeElement(_gefaa, _ccggd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_beagbf ST_CalcMode) String() string {
	switch _beagbf {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

func (_dcggab ST_Orientation) Validate() error { return _dcggab.ValidateWithPath("") }

// Validate validates the CT_Border and its children
func (_abg *CT_Border) Validate() error {
	return _abg.ValidateWithPath("\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r")
}

// Validate validates the CT_Groups and its children
func (_gefac *CT_Groups) Validate() error {
	return _gefac.ValidateWithPath("\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s")
}

func (_fgebbe *ST_PhoneticAlignment) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aefegf, _cgdcc := d.Token()
	if _cgdcc != nil {
		return _cgdcc
	}
	if _cbfef, _befebf := _aefegf.(_gd.EndElement); _befebf && _cbfef.Name == start.Name {
		*_fgebbe = 1
		return nil
	}
	if _efecc, _gfaafc := _aefegf.(_gd.CharData); !_gfaafc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aefegf)
	} else {
		switch string(_efecc) {
		case "":
			*_fgebbe = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_fgebbe = 1
		case "\u006c\u0065\u0066\u0074":
			*_fgebbe = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_fgebbe = 3
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_fgebbe = 4
		}
	}
	_aefegf, _cgdcc = d.Token()
	if _cgdcc != nil {
		return _cgdcc
	}
	if _bgdcbg, _aafcf := _aefegf.(_gd.EndElement); _aafcf && _bgdcbg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aefegf)
}

func (_dfcge *CT_Workbook) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dfcge.ConformanceAttr != _af.ST_ConformanceClassUnset {
		_daccdf, _fbgaec := _dfcge.ConformanceAttr.MarshalXMLAttr(_gd.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _fbgaec != nil {
			return _fbgaec
		}
		start.Attr = append(start.Attr, _daccdf)
	}
	e.EncodeToken(start)
	if _dfcge.FileVersion != nil {
		_ffaef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_dfcge.FileVersion, _ffaef)
	}
	if _dfcge.FileSharing != nil {
		_agegfe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067"}}
		e.EncodeElement(_dfcge.FileSharing, _agegfe)
	}
	if _dfcge.WorkbookPr != nil {
		_ebgba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}}
		e.EncodeElement(_dfcge.WorkbookPr, _ebgba)
	}
	if _dfcge.WorkbookProtection != nil {
		_dfegd := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0077\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dfcge.WorkbookProtection, _dfegd)
	}
	if _dfcge.BookViews != nil {
		_afecef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ab\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_dfcge.BookViews, _afecef)
	}
	_dabda := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0068\u0065\u0065\u0074s"}}
	e.EncodeElement(_dfcge.Sheets, _dabda)
	if _dfcge.FunctionGroups != nil {
		_cdcbbf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_dfcge.FunctionGroups, _cdcbbf)
	}
	if _dfcge.ExternalReferences != nil {
		_decag := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0065\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_dfcge.ExternalReferences, _decag)
	}
	if _dfcge.DefinedNames != nil {
		_ddcfg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_dfcge.DefinedNames, _ddcfg)
	}
	if _dfcge.CalcPr != nil {
		_egdcgc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u0061\u006c\u0063\u0050r"}}
		e.EncodeElement(_dfcge.CalcPr, _egdcgc)
	}
	if _dfcge.OleSize != nil {
		_fageg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0053\u0069\u007a\u0065"}}
		e.EncodeElement(_dfcge.OleSize, _fageg)
	}
	if _dfcge.CustomWorkbookViews != nil {
		_degcg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073"}}
		e.EncodeElement(_dfcge.CustomWorkbookViews, _degcg)
	}
	if _dfcge.PivotCaches != nil {
		_bbacf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_dfcge.PivotCaches, _bbacf)
	}
	if _dfcge.SmartTagPr != nil {
		_fgaaae := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}}
		e.EncodeElement(_dfcge.SmartTagPr, _fgaaae)
	}
	if _dfcge.SmartTagTypes != nil {
		_adaba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_dfcge.SmartTagTypes, _adaba)
	}
	if _dfcge.WebPublishing != nil {
		_cgded := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0077\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}}
		e.EncodeElement(_dfcge.WebPublishing, _cgded)
	}
	if _dfcge.FileRecoveryPr != nil {
		_ceefca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}}
		for _, _deffb := range _dfcge.FileRecoveryPr {
			e.EncodeElement(_deffb, _ceefca)
		}
	}
	if _dfcge.WebPublishObjects != nil {
		_cbcag := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073"}}
		e.EncodeElement(_dfcge.WebPublishObjects, _cbcag)
	}
	if _dfcge.ExtLst != nil {
		_dgdebd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dfcge.ExtLst, _dgdebd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_DateGroupItem() *CT_DateGroupItem {
	_cecc := &CT_DateGroupItem{}
	_cecc.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	return _cecc
}

func (_bbddag *ST_FieldSortType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ggdeb, _dedgg := d.Token()
	if _dedgg != nil {
		return _dedgg
	}
	if _bdfada, _fdgfb := _ggdeb.(_gd.EndElement); _fdgfb && _bdfada.Name == start.Name {
		*_bbddag = 1
		return nil
	}
	if _cabec, _edbbfe := _ggdeb.(_gd.CharData); !_edbbfe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggdeb)
	} else {
		switch string(_cabec) {
		case "":
			*_bbddag = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_bbddag = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_bbddag = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_bbddag = 3
		}
	}
	_ggdeb, _dedgg = d.Token()
	if _dedgg != nil {
		return _dedgg
	}
	if _cdfab, _baccg := _ggdeb.(_gd.EndElement); _baccg && _cdfab.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggdeb)
}

func (_dgdbe ST_FieldSortType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dgdbe.String(), start)
}

func NewCT_RevisionAutoFormatting() *CT_RevisionAutoFormatting {
	_bfcga := &CT_RevisionAutoFormatting{}
	return _bfcga
}

// Validate validates the CT_SheetPr and its children
func (_decea *CT_SheetPr) Validate() error {
	return _decea.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072")
}

func (_eeaec *CT_WebPublishItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eeaec.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eeaec.CountAttr)})
	}
	e.EncodeToken(start)
	_edage := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}}
	for _, _ebdee := range _eeaec.WebPublishItem {
		e.EncodeElement(_ebdee, _edage)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionQueryTableField and its children, prefixing error messages with path
func (_cddcc *CT_RevisionQueryTableField) ValidateWithPath(path string) error { return nil }

func (_aggeag *ST_IconSetType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_agccffb, _dcfggd := d.Token()
	if _dcfggd != nil {
		return _dcfggd
	}
	if _decfe, _acdgcf := _agccffb.(_gd.EndElement); _acdgcf && _decfe.Name == start.Name {
		*_aggeag = 1
		return nil
	}
	if _feeada, _fgbda := _agccffb.(_gd.CharData); !_fgbda {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agccffb)
	} else {
		switch string(_feeada) {
		case "":
			*_aggeag = 0
		case "\u0033A\u0072\u0072\u006f\u0077\u0073":
			*_aggeag = 1
		case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_aggeag = 2
		case "\u0033\u0046\u006c\u0061\u0067\u0073":
			*_aggeag = 3
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
			*_aggeag = 4
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
			*_aggeag = 5
		case "\u0033\u0053\u0069\u0067\u006e\u0073":
			*_aggeag = 6
		case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
			*_aggeag = 7
		case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
			*_aggeag = 8
		case "\u0034A\u0072\u0072\u006f\u0077\u0073":
			*_aggeag = 9
		case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_aggeag = 10
		case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
			*_aggeag = 11
		case "\u0034R\u0061\u0074\u0069\u006e\u0067":
			*_aggeag = 12
		case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
			*_aggeag = 13
		case "\u0035A\u0072\u0072\u006f\u0077\u0073":
			*_aggeag = 14
		case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_aggeag = 15
		case "\u0035R\u0061\u0074\u0069\u006e\u0067":
			*_aggeag = 16
		case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
			*_aggeag = 17
		}
	}
	_agccffb, _dcfggd = d.Token()
	if _dcfggd != nil {
		return _dcfggd
	}
	if _gfeec, _edacgc := _agccffb.(_gd.EndElement); _edacgc && _gfeec.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agccffb)
}

func (_cbcdg *CT_TableStyleInfo) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cbcdg.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cbcdg.NameAttr)})
	}
	if _cbcdg.ShowFirstColumnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbcdg.ShowFirstColumnAttr))})
	}
	if _cbcdg.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbcdg.ShowLastColumnAttr))})
	}
	if _cbcdg.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbcdg.ShowRowStripesAttr))})
	}
	if _cbcdg.ShowColumnStripesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cbcdg.ShowColumnStripesAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gebcd *CT_Dimensions) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gebcd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gebcd.CountAttr)})
	}
	e.EncodeToken(start)
	if _gebcd.Dimension != nil {
		_agad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		for _, _ffcdb := range _gebcd.Dimension {
			e.EncodeElement(_ffcdb, _agad)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_MeasureGroups struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	MeasureGroup []*CT_MeasureGroup
}

// ValidateWithPath validates the CT_Member and its children, prefixing error messages with path
func (_accgc *CT_Member) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RangeSets and its children, prefixing error messages with path
func (_fbcab *CT_RangeSets) ValidateWithPath(path string) error {
	for _ggcdb, _fcgfa := range _fbcab.RangeSet {
		if _gcafe := _fcgfa.ValidateWithPath(_b.Sprintf("\u0025s\u002fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _ggcdb)); _gcafe != nil {
			return _gcafe
		}
	}
	return nil
}

func (_bacef *CT_CellXfs) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ccada := range start.Attr {
		if _ccada.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccge, _gcfa := _a.ParseUint(_ccada.Value, 10, 32)
			if _gcfa != nil {
				return _gcfa
			}
			_gbdb := uint32(_ccge)
			_bacef.CountAttr = &_gbdb
			continue
		}
	}
_ecga:
	for {
		_aadd, _eaad := d.Token()
		if _eaad != nil {
			return _eaad
		}
		switch _ebag := _aadd.(type) {
		case _gd.StartElement:
			switch _ebag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_cba := NewCT_Xf()
				if _cdgfg := d.DecodeElement(_cba, &_ebag); _cdgfg != nil {
					return _cdgfg
				}
				_bacef.Xf = append(_bacef.Xf, _cba)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0058\u0066\u0073\u0020\u0025\u0076", _ebag.Name)
				if _cbac := d.Skip(); _cbac != nil {
					return _cbac
				}
			}
		case _gd.EndElement:
			break _ecga
		case _gd.CharData:
		}
	}
	return nil
}

func (_gdfeb *CT_OleLink) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _baaca := range start.Attr {
		if _baaca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _baaca.Name.Local == "\u0069\u0064" || _baaca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _baaca.Name.Local == "\u0069\u0064" {
			_cgcdb, _bgdfg := _baaca.Value, error(nil)
			if _bgdfg != nil {
				return _bgdfg
			}
			_gdfeb.IdAttr = _cgcdb
			continue
		}
		if _baaca.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_abfa, _gebad := _baaca.Value, error(nil)
			if _gebad != nil {
				return _gebad
			}
			_gdfeb.ProgIdAttr = _abfa
			continue
		}
	}
_efdca:
	for {
		_gdfb, _cdaagc := d.Token()
		if _cdaagc != nil {
			return _cdaagc
		}
		switch _egfff := _gdfb.(type) {
		case _gd.StartElement:
			switch _egfff.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_gdfeb.OleItems = NewCT_OleItems()
				if _fgdbb := d.DecodeElement(_gdfeb.OleItems, &_egfff); _fgdbb != nil {
					return _fgdbb
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fO\u006c\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _egfff.Name)
				if _cbagge := d.Skip(); _cbagge != nil {
					return _cbagge
				}
			}
		case _gd.EndElement:
			break _efdca
		case _gd.CharData:
		}
	}
	return nil
}

func (_afdcf *ST_RevisionAction) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_afdcf = 0
	case "\u0061\u0064\u0064":
		*_afdcf = 1
	case "\u0064\u0065\u006c\u0065\u0074\u0065":
		*_afdcf = 2
	}
	return nil
}

func NewCT_SmartTagType() *CT_SmartTagType { _bcfbc := &CT_SmartTagType{}; return _bcfbc }

type CT_PivotHierarchy struct {

	// Outline New Levels
	OutlineAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// New Levels Subtotals At Top
	SubtotalTopAttr *bool

	// Show In Field List
	ShowInFieldListAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Drag to Page
	DragToPageAttr *bool

	// Drag To Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Hierarchy Caption
	CaptionAttr *string

	// OLAP Member Properties
	Mps *CT_MemberProperties

	// Members
	Members []*CT_Members

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Dialogsheet and its children
func (_ebgef *CT_Dialogsheet) Validate() error {
	return _ebgef.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074")
}

type CT_TableStyleElement struct {

	// Table Style Type
	TypeAttr ST_TableStyleType

	// Band Size
	SizeAttr *uint32

	// Formatting Id
	DxfIdAttr *uint32
}

func NewCT_SheetIdMap() *CT_SheetIdMap { _eccedc := &CT_SheetIdMap{}; return _eccedc }

type CT_SmartTagPr struct {

	// Embed SmartTags
	EmbedAttr *bool

	// Show Smart Tags
	ShowAttr ST_SmartTagShow
}

type ST_RefMode byte

// Validate validates the CT_ColorFilter and its children
func (_adaf *CT_ColorFilter) Validate() error {
	return _adaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072")
}

const (
	ST_OrientationUnset     ST_Orientation = 0
	ST_OrientationDefault   ST_Orientation = 1
	ST_OrientationPortrait  ST_Orientation = 2
	ST_OrientationLandscape ST_Orientation = 3
)

func (_beb *CT_BorderPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _beb.StyleAttr != ST_BorderStyleUnset {
		_eag, _aae := _beb.StyleAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0074\u0079l\u0065"})
		if _aae != nil {
			return _aae
		}
		start.Attr = append(start.Attr, _eag)
	}
	e.EncodeToken(start)
	if _beb.Color != nil {
		_cffc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_beb.Color, _cffc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_feeef ST_MdxKPIProperty) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bcafff := _gd.Attr{}
	_bcafff.Name = name
	switch _feeef {
	case ST_MdxKPIPropertyUnset:
		_bcafff.Value = ""
	case ST_MdxKPIPropertyV:
		_bcafff.Value = "\u0076"
	case ST_MdxKPIPropertyG:
		_bcafff.Value = "\u0067"
	case ST_MdxKPIPropertyS:
		_bcafff.Value = "\u0073"
	case ST_MdxKPIPropertyT:
		_bcafff.Value = "\u0074"
	case ST_MdxKPIPropertyW:
		_bcafff.Value = "\u0077"
	case ST_MdxKPIPropertyM:
		_bcafff.Value = "\u006d"
	}
	return _bcafff, nil
}

type CT_Users struct {

	// Active User Count
	CountAttr *uint32

	// User Information
	UserInfo []*CT_SharedUser
}

func (_dagfb *CT_MemberProperties) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fgbba := range start.Attr {
		if _fgbba.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbffc, _bfaed := _a.ParseUint(_fgbba.Value, 10, 32)
			if _bfaed != nil {
				return _bfaed
			}
			_aeafc := uint32(_bbffc)
			_dagfb.CountAttr = &_aeafc
			continue
		}
	}
_debee:
	for {
		_eaced, _bbgeb := d.Token()
		if _bbgeb != nil {
			return _bbgeb
		}
		switch _ceagfa := _eaced.(type) {
		case _gd.StartElement:
			switch _ceagfa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}:
				_ffca := NewCT_MemberProperty()
				if _daaef := d.DecodeElement(_ffca, &_ceagfa); _daaef != nil {
					return _daaef
				}
				_dagfb.Mp = append(_dagfb.Mp, _ffca)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ceagfa.Name)
				if _agaecg := d.Skip(); _agaecg != nil {
					return _agaecg
				}
			}
		case _gd.EndElement:
			break _debee
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_TableColumns() *CT_TableColumns { _acbbfa := &CT_TableColumns{}; return _acbbfa }

func (_cabea *CT_RevisionConflict) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fgeff := range start.Attr {
		if _fgeff.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fcaea, _affbfd := _a.ParseUint(_fgeff.Value, 10, 32)
			if _affbfd != nil {
				return _affbfd
			}
			_deagad := uint32(_fcaea)
			_cabea.SheetIdAttr = &_deagad
			continue
		}
		if _fgeff.Name.Local == "\u0072\u0049\u0064" {
			_eadbd, _baead := _a.ParseUint(_fgeff.Value, 10, 32)
			if _baead != nil {
				return _baead
			}
			_ecae := uint32(_eadbd)
			_cabea.RIdAttr = &_ecae
			continue
		}
		if _fgeff.Name.Local == "\u0075\u0061" {
			_cefbd, _gecgb := _a.ParseBool(_fgeff.Value)
			if _gecgb != nil {
				return _gecgb
			}
			_cabea.UaAttr = &_cefbd
			continue
		}
		if _fgeff.Name.Local == "\u0072\u0061" {
			_gecec, _ggbdae := _a.ParseBool(_fgeff.Value)
			if _ggbdae != nil {
				return _ggbdae
			}
			_cabea.RaAttr = &_gecec
			continue
		}
	}
	for {
		_fgcbf, _gdgag := d.Token()
		if _gdgag != nil {
			return _b.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0076\u0069\u0073i\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u003a\u0020\u0025\u0073", _gdgag)
		}
		if _fcggc, _dbcef := _fgcbf.(_gd.EndElement); _dbcef && _fcggc.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_FunctionGroups() *CT_FunctionGroups { _fcdf := &CT_FunctionGroups{}; return _fcdf }

type ST_Type byte

func (_ebcag ST_Objects) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ccdbb := _gd.Attr{}
	_ccdbb.Name = name
	switch _ebcag {
	case ST_ObjectsUnset:
		_ccdbb.Value = ""
	case ST_ObjectsAll:
		_ccdbb.Value = "\u0061\u006c\u006c"
	case ST_ObjectsPlaceholders:
		_ccdbb.Value = "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case ST_ObjectsNone:
		_ccdbb.Value = "\u006e\u006f\u006e\u0065"
	}
	return _ccdbb, nil
}

func (_baacd *CT_Field) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fbcba := range start.Attr {
		if _fbcba.Name.Local == "\u0078" {
			_bcbef, _adfef := _a.ParseInt(_fbcba.Value, 10, 32)
			if _adfef != nil {
				return _adfef
			}
			_baacd.XAttr = int32(_bcbef)
			continue
		}
	}
	for {
		_eaegf, _bebd := d.Token()
		if _bebd != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u0065\u006c\u0064: \u0025\u0073", _bebd)
		}
		if _debda, _gaac := _eaegf.(_gd.EndElement); _gaac && _debda.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TablePart struct{ IdAttr string }

// Validate validates the CT_RevisionRowColumn and its children
func (_bbgad *CT_RevisionRowColumn) Validate() error {
	return _bbgad.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e")
}

// ValidateWithPath validates the CT_PivotHierarchy and its children, prefixing error messages with path
func (_cefaa *CT_PivotHierarchy) ValidateWithPath(path string) error {
	if _cefaa.Mps != nil {
		if _dgdaa := _cefaa.Mps.ValidateWithPath(path + "\u002f\u004d\u0070\u0073"); _dgdaa != nil {
			return _dgdaa
		}
	}
	for _adegf, _gfcae := range _cefaa.Members {
		if _ggacf := _gfcae.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072s\u005b\u0025\u0064\u005d", path, _adegf)); _ggacf != nil {
			return _ggacf
		}
	}
	if _cefaa.ExtLst != nil {
		if _edagc := _cefaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edagc != nil {
			return _edagc
		}
	}
	return nil
}

func NewCT_PivotAreas() *CT_PivotAreas { _fegbed := &CT_PivotAreas{}; return _fegbed }

func (_ceccd *CT_Dialogsheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _ceccd.SheetPr != nil {
		_ggeca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_ceccd.SheetPr, _ggeca)
	}
	if _ceccd.SheetViews != nil {
		_fgfd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ceccd.SheetViews, _fgfd)
	}
	if _ceccd.SheetFormatPr != nil {
		_eaaaf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_ceccd.SheetFormatPr, _eaaaf)
	}
	if _ceccd.SheetProtection != nil {
		_abbfa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ceccd.SheetProtection, _abbfa)
	}
	if _ceccd.CustomSheetViews != nil {
		_bdefb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ceccd.CustomSheetViews, _bdefb)
	}
	if _ceccd.PrintOptions != nil {
		_edgb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ceccd.PrintOptions, _edgb)
	}
	if _ceccd.PageMargins != nil {
		_ggggg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_ceccd.PageMargins, _ggggg)
	}
	if _ceccd.PageSetup != nil {
		_bffbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_ceccd.PageSetup, _bffbc)
	}
	if _ceccd.HeaderFooter != nil {
		_daaa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_ceccd.HeaderFooter, _daaa)
	}
	if _ceccd.Drawing != nil {
		_fcfad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ceccd.Drawing, _fcfad)
	}
	if _ceccd.LegacyDrawing != nil {
		_bccdf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ceccd.LegacyDrawing, _bccdf)
	}
	if _ceccd.LegacyDrawingHF != nil {
		_dbcd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ceccd.LegacyDrawingHF, _dbcd)
	}
	if _ceccd.DrawingHF != nil {
		_gbebc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ceccd.DrawingHF, _gbebc)
	}
	if _ceccd.OleObjects != nil {
		_dbeab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_ceccd.OleObjects, _dbeab)
	}
	if _ceccd.Controls != nil {
		_cbad := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_ceccd.Controls, _cbad)
	}
	if _ceccd.ExtLst != nil {
		_bacaeg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ceccd.ExtLst, _bacaeg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RowFields and its children
func (_aaebd *CT_RowFields) Validate() error {
	return _aaebd.ValidateWithPath("\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_OleItem and its children
func (_ccgdf *CT_OleItem) Validate() error {
	return _ccgdf.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d")
}

func NewCT_PivotArea() *CT_PivotArea { _beabg := &CT_PivotArea{}; return _beabg }

type CT_RowFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Row Items
	Field []*CT_Field
}

func (_befcda ST_ItemType) Validate() error { return _befcda.ValidateWithPath("") }

func (_agegaf ST_Scope) ValidateWithPath(path string) error {
	switch _agegaf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agegaf))
	}
	return nil
}

// ValidateWithPath validates the CT_LegacyDrawing and its children, prefixing error messages with path
func (_aeafd *CT_LegacyDrawing) ValidateWithPath(path string) error { return nil }

func (_dffgac *CT_Sets) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dffgac.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dffgac.CountAttr)})
	}
	e.EncodeToken(start)
	_bfbcb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0065\u0074"}}
	for _, _gccdgb := range _dffgac.Set {
		e.EncodeElement(_gccdgb, _bfbcb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dabcfc ST_FileType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_egbd := _gd.Attr{}
	_egbd.Name = name
	switch _dabcfc {
	case ST_FileTypeUnset:
		_egbd.Value = ""
	case ST_FileTypeMac:
		_egbd.Value = "\u006d\u0061\u0063"
	case ST_FileTypeWin:
		_egbd.Value = "\u0077\u0069\u006e"
	case ST_FileTypeDos:
		_egbd.Value = "\u0064\u006f\u0073"
	case ST_FileTypeLin:
		_egbd.Value = "\u006c\u0069\u006e"
	case ST_FileTypeOther:
		_egbd.Value = "\u006f\u0074\u0068e\u0072"
	}
	return _egbd, nil
}

// Validate validates the CT_X and its children
func (_cgecf *CT_X) Validate() error { return _cgecf.ValidateWithPath("\u0043\u0054\u005f\u0058") }

func (_bdga ST_TextHAlign) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bgdeeg := _gd.Attr{}
	_bgdeeg.Name = name
	switch _bdga {
	case ST_TextHAlignUnset:
		_bgdeeg.Value = ""
	case ST_TextHAlignLeft:
		_bgdeeg.Value = "\u006c\u0065\u0066\u0074"
	case ST_TextHAlignCenter:
		_bgdeeg.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextHAlignRight:
		_bgdeeg.Value = "\u0072\u0069\u0067h\u0074"
	case ST_TextHAlignJustify:
		_bgdeeg.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextHAlignDistributed:
		_bgdeeg.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _bgdeeg, nil
}

func NewCT_CellStyle() *CT_CellStyle { _fggcf := &CT_CellStyle{}; return _fggcf }

func (_adgaa *ST_DvAspect) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dcaa, _abggge := d.Token()
	if _abggge != nil {
		return _abggge
	}
	if _dggfgc, _afgacc := _dcaa.(_gd.EndElement); _afgacc && _dggfgc.Name == start.Name {
		*_adgaa = 1
		return nil
	}
	if _bcabcc, _abcgba := _dcaa.(_gd.CharData); !_abcgba {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcaa)
	} else {
		switch string(_bcabcc) {
		case "":
			*_adgaa = 0
		case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
			*_adgaa = 1
		case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
			*_adgaa = 2
		}
	}
	_dcaa, _abggge = d.Token()
	if _abggge != nil {
		return _abggge
	}
	if _addeb, _feegf := _dcaa.(_gd.EndElement); _feegf && _addeb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcaa)
}

type ST_CredMethod byte

func (_bdgbg *CT_MetadataBlock) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_dafgb:
	for {
		_gafdd, _badce := d.Token()
		if _badce != nil {
			return _badce
		}
		switch _bgfe := _gafdd.(type) {
		case _gd.StartElement:
			switch _bgfe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}:
				_fbfegf := NewCT_MetadataRecord()
				if _eddbe := d.DecodeElement(_fbfegf, &_bgfe); _eddbe != nil {
					return _eddbe
				}
				_bdgbg.Rc = append(_bdgbg.Rc, _fbfegf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025v", _bgfe.Name)
				if _befdb := d.Skip(); _befdb != nil {
					return _befdb
				}
			}
		case _gd.EndElement:
			break _dafgb
		case _gd.CharData:
		}
	}
	return nil
}

type CT_MdxKPI struct {

	// Member Unique Name Index
	NAttr uint32

	// KPI Index
	NpAttr uint32

	// KPI Property
	PAttr ST_MdxKPIProperty
}

func NewCT_CalcPr() *CT_CalcPr { _geb := &CT_CalcPr{}; return _geb }

// Validate validates the CT_WebPublishItem and its children
func (_ffcecc *CT_WebPublishItem) Validate() error {
	return _ffcecc.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d")
}

func (_defegb ST_PivotFilterType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_defegb.String(), start)
}

const (
	ST_PhoneticAlignmentUnset       ST_PhoneticAlignment = 0
	ST_PhoneticAlignmentNoControl   ST_PhoneticAlignment = 1
	ST_PhoneticAlignmentLeft        ST_PhoneticAlignment = 2
	ST_PhoneticAlignmentCenter      ST_PhoneticAlignment = 3
	ST_PhoneticAlignmentDistributed ST_PhoneticAlignment = 4
)

type Revisions struct{ CT_Revisions }

// ValidateWithPath validates the CT_CommentPr and its children, prefixing error messages with path
func (_gafa *CT_CommentPr) ValidateWithPath(path string) error {
	if _baae := _gafa.TextHAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0048\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _baae != nil {
		return _baae
	}
	if _bbff := _gafa.TextVAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0056\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _bbff != nil {
		return _bbff
	}
	if _ffcfb := _gafa.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _ffcfb != nil {
		return _ffcfb
	}
	return nil
}

func (_cabbd *ST_CfvoType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cdeae, _bcdda := d.Token()
	if _bcdda != nil {
		return _bcdda
	}
	if _ebbge, _fccgg := _cdeae.(_gd.EndElement); _fccgg && _ebbge.Name == start.Name {
		*_cabbd = 1
		return nil
	}
	if _dbefab, _ebeaf := _cdeae.(_gd.CharData); !_ebeaf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdeae)
	} else {
		switch string(_dbefab) {
		case "":
			*_cabbd = 0
		case "\u006e\u0075\u006d":
			*_cabbd = 1
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_cabbd = 2
		case "\u006d\u0061\u0078":
			*_cabbd = 3
		case "\u006d\u0069\u006e":
			*_cabbd = 4
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_cabbd = 5
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
			*_cabbd = 6
		}
	}
	_cdeae, _bcdda = d.Token()
	if _bcdda != nil {
		return _bcdda
	}
	if _efecg, _faaaf := _cdeae.(_gd.EndElement); _faaaf && _efecg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdeae)
}

// Validate validates the CT_Comments and its children
func (_eecg *CT_Comments) Validate() error {
	return _eecg.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}

func (_dfcde *CT_Scenario) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _dfcde.NameAttr)})
	if _dfcde.LockedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfcde.LockedAttr))})
	}
	if _dfcde.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dfcde.HiddenAttr))})
	}
	if _dfcde.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dfcde.CountAttr)})
	}
	if _dfcde.UserAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_dfcde.UserAttr)})
	}
	if _dfcde.CommentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dfcde.CommentAttr)})
	}
	e.EncodeToken(start)
	_cagbe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}}
	for _, _gffef := range _dfcde.InputCells {
		e.EncodeElement(_gffef, _cagbe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_PivotFields() *CT_PivotFields { _dbbcd := &CT_PivotFields{}; return _dbbcd }

func (_efade *CT_PivotHierarchies) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _acaca := range start.Attr {
		if _acaca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgfcb, _bgefdb := _a.ParseUint(_acaca.Value, 10, 32)
			if _bgefdb != nil {
				return _bgefdb
			}
			_agfec := uint32(_dgfcb)
			_efade.CountAttr = &_agfec
			continue
		}
	}
_dadfce:
	for {
		_acaee, _gcffbc := d.Token()
		if _gcffbc != nil {
			return _gcffbc
		}
		switch _faggf := _acaee.(type) {
		case _gd.StartElement:
			switch _faggf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_cfffe := NewCT_PivotHierarchy()
				if _edeafe := d.DecodeElement(_cfffe, &_faggf); _edeafe != nil {
					return _edeafe
				}
				_efade.PivotHierarchy = append(_efade.PivotHierarchy, _cfffe)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _faggf.Name)
				if _gdedf := d.Skip(); _gdedf != nil {
					return _gdedf
				}
			}
		case _gd.EndElement:
			break _dadfce
		case _gd.CharData:
		}
	}
	return nil
}

func (_gddcg *CT_NumFmt) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _gddcg.NumFmtIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065"}, Value: _b.Sprintf("\u0025\u0076", _gddcg.FormatCodeAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_GroupItems() *CT_GroupItems { _beeec := &CT_GroupItems{}; return _beeec }

// Validate validates the CT_CalculatedItem and its children
func (_ddcg *CT_CalculatedItem) Validate() error {
	return _ddcg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d")
}

func (_fccdd *CT_ReviewedRevisions) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fccdd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fccdd.CountAttr)})
	}
	e.EncodeToken(start)
	_eadag := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}}
	for _, _adcg := range _fccdd.Reviewed {
		e.EncodeElement(_adcg, _eadag)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bgabe *CT_MergeCell) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _bgabe.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Fill and its children, prefixing error messages with path
func (_gcddc *CT_Fill) ValidateWithPath(path string) error {
	if _gcddc.PatternFill != nil {
		if _aabg := _gcddc.PatternFill.ValidateWithPath(path + "\u002f\u0050\u0061t\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"); _aabg != nil {
			return _aabg
		}
	}
	if _gcddc.GradientFill != nil {
		if _dagfa := _gcddc.GradientFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"); _dagfa != nil {
			return _dagfa
		}
	}
	return nil
}

func (_gdadeg *CalcChain) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gdadeg.CT_CalcChain = *NewCT_CalcChain()
_aeafga:
	for {
		_dbccd, _eaeed := d.Token()
		if _eaeed != nil {
			return _eaeed
		}
		switch _gccbe := _dbccd.(type) {
		case _gd.StartElement:
			switch _gccbe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_dgceec := NewCT_CalcCell()
				if _aeebe := d.DecodeElement(_dgceec, &_gccbe); _aeebe != nil {
					return _aeebe
				}
				_gdadeg.C = append(_gdadeg.C, _dgceec)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdadeg.ExtLst = NewCT_ExtensionList()
				if _eecdd := d.DecodeElement(_gdadeg.ExtLst, &_gccbe); _eecdd != nil {
					return _eecdd
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0061\u006c\u0063\u0043\u0068a\u0069\u006e \u0025\u0076", _gccbe.Name)
				if _aeeed := d.Skip(); _aeeed != nil {
					return _aeeed
				}
			}
		case _gd.EndElement:
			break _aeafga
		case _gd.CharData:
		}
	}
	return nil
}

func (_ffabf *CT_DdeValue) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _abcb := range start.Attr {
		if _abcb.Name.Local == "\u0074" {
			_ffabf.TAttr.UnmarshalXMLAttr(_abcb)
			continue
		}
	}
_egfg:
	for {
		_eegb, _eadbb := d.Token()
		if _eadbb != nil {
			return _eadbb
		}
		switch _daaea := _eegb.(type) {
		case _gd.StartElement:
			switch _daaea.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				if _agdf := d.DecodeElement(&_ffabf.Val, &_daaea); _agdf != nil {
					return _agdf
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _daaea.Name)
				if _fdfce := d.Skip(); _fdfce != nil {
					return _fdfce
				}
			}
		case _gd.EndElement:
			break _egfg
		case _gd.CharData:
		}
	}
	return nil
}

const (
	ST_PhoneticTypeUnset             ST_PhoneticType = 0
	ST_PhoneticTypeHalfwidthKatakana ST_PhoneticType = 1
	ST_PhoneticTypeFullwidthKatakana ST_PhoneticType = 2
	ST_PhoneticTypeHiragana          ST_PhoneticType = 3
	ST_PhoneticTypeNoConversion      ST_PhoneticType = 4
)

func (_gbgea *CT_RevisionCustomView) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gbgea.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_gbgea.ActionAttr = ST_RevisionAction(1)
	for _, _gedeca := range start.Attr {
		if _gedeca.Name.Local == "\u0067\u0075\u0069\u0064" {
			_eebga, _gfabg := _gedeca.Value, error(nil)
			if _gfabg != nil {
				return _gfabg
			}
			_gbgea.GuidAttr = _eebga
			continue
		}
		if _gedeca.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_gbgea.ActionAttr.UnmarshalXMLAttr(_gedeca)
			continue
		}
	}
	for {
		_fegbeg, _addb := d.Token()
		if _addb != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043u\u0073\u0074\u006f\u006d\u0056\u0069\u0065w\u003a\u0020\u0025\u0073", _addb)
		}
		if _aaefde, _egece := _fegbeg.(_gd.EndElement); _egece && _aaefde.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_AxisUnset      ST_Axis = 0
	ST_AxisAxisRow    ST_Axis = 1
	ST_AxisAxisCol    ST_Axis = 2
	ST_AxisAxisPage   ST_Axis = 3
	ST_AxisAxisValues ST_Axis = 4
)

type CT_rowItems struct {

	// Items in a Row Count
	CountAttr *uint32

	// Row Items
	I []*CT_I
}

func (_fegdc *Sst) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0073\u0074"
	return _fegdc.CT_Sst.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_ExternalSheetNames and its children, prefixing error messages with path
func (_faadg *CT_ExternalSheetNames) ValidateWithPath(path string) error {
	for _agge, _bbcag := range _faadg.SheetName {
		if _bbfd := _bbcag.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _agge)); _bbfd != nil {
			return _bbfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleItem and its children, prefixing error messages with path
func (_dbgfb *CT_OleItem) ValidateWithPath(path string) error { return nil }

func (_gbbae *CT_MapInfo) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0076", _gbbae.SelectionNamespacesAttr)})
	e.EncodeToken(start)
	_gafac := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0053\u0063\u0068\u0065\u006da"}}
	for _, _fagfb := range _gbbae.Schema {
		e.EncodeElement(_fagfb, _gafac)
	}
	_cffde := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u004d\u0061\u0070"}}
	for _, _ccaaa := range _gbbae.Map {
		e.EncodeElement(_ccaaa, _cffde)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_FunctionGroup struct {

	// Name
	NameAttr *string
}

type CT_colItems struct {

	// Column Item Count
	CountAttr *uint32

	// Column Items
	I []*CT_I
}

func (_fcceg *CT_TableStyles) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbdefa := range start.Attr {
		if _bbdefa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffdcf, _bagcg := _a.ParseUint(_bbdefa.Value, 10, 32)
			if _bagcg != nil {
				return _bagcg
			}
			_agdacg := uint32(_ffdcf)
			_fcceg.CountAttr = &_agdacg
			continue
		}
		if _bbdefa.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065" {
			_bdcce, _fdgbf := _bbdefa.Value, error(nil)
			if _fdgbf != nil {
				return _fdgbf
			}
			_fcceg.DefaultTableStyleAttr = &_bdcce
			continue
		}
		if _bbdefa.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065" {
			_fgdbgd, _fcgbd := _bbdefa.Value, error(nil)
			if _fcgbd != nil {
				return _fcgbd
			}
			_fcceg.DefaultPivotStyleAttr = &_fgdbgd
			continue
		}
	}
_eaedb:
	for {
		_cgdg, _dgacc := d.Token()
		if _dgacc != nil {
			return _dgacc
		}
		switch _ceadb := _cgdg.(type) {
		case _gd.StartElement:
			switch _ceadb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_edfdd := NewCT_TableStyle()
				if _dfced := d.DecodeElement(_edfdd, &_ceadb); _dfced != nil {
					return _dfced
				}
				_fcceg.TableStyle = append(_fcceg.TableStyle, _edfdd)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074y\u006ce\u0073\u0020\u0025\u0076", _ceadb.Name)
				if _facfa := d.Skip(); _facfa != nil {
					return _facfa
				}
			}
		case _gd.EndElement:
			break _eaedb
		case _gd.CharData:
		}
	}
	return nil
}

func (_daf *CT_Borders) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _daf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_daf.CountAttr)})
	}
	e.EncodeToken(start)
	if _daf.Border != nil {
		_acg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		for _, _gdg := range _daf.Border {
			e.EncodeElement(_gdg, _acg)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cda *CT_AutoFilter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cda.RefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_cda.RefAttr)})
	}
	e.EncodeToken(start)
	if _cda.FilterColumn != nil {
		_bae := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003af\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}}
		for _, _bgb := range _cda.FilterColumn {
			e.EncodeElement(_bgb, _bae)
		}
	}
	if _cda.SortState != nil {
		_cag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cda.SortState, _cag)
	}
	if _cda.ExtLst != nil {
		_cbf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cda.ExtLst, _cbf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gfegc ST_Visibility) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_eebcg := _gd.Attr{}
	_eebcg.Name = name
	switch _gfegc {
	case ST_VisibilityUnset:
		_eebcg.Value = ""
	case ST_VisibilityVisible:
		_eebcg.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_VisibilityHidden:
		_eebcg.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_VisibilityVeryHidden:
		_eebcg.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _eebcg, nil
}

func (_fdebgf *CT_SheetCalcPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fdebgf.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fdebgf.FullCalcOnLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ccbbd *ST_WebSourceType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_ccbbd = 0
	case "\u0073\u0068\u0065e\u0074":
		*_ccbbd = 1
	case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
		*_ccbbd = 2
	case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
		*_ccbbd = 3
	case "\u0072\u0061\u006eg\u0065":
		*_ccbbd = 4
	case "\u0063\u0068\u0061r\u0074":
		*_ccbbd = 5
	case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
		*_ccbbd = 6
	case "\u0071\u0075\u0065r\u0079":
		*_ccbbd = 7
	case "\u006c\u0061\u0062e\u006c":
		*_ccbbd = 8
	}
	return nil
}

const (
	ST_OleUpdateUnset            ST_OleUpdate = 0
	ST_OleUpdateOLEUPDATE_ALWAYS ST_OleUpdate = 1
	ST_OleUpdateOLEUPDATE_ONCALL ST_OleUpdate = 2
)

// ValidateWithPath validates the CT_MetadataRecord and its children, prefixing error messages with path
func (_bgcfb *CT_MetadataRecord) ValidateWithPath(path string) error { return nil }

func (_gcgcfb *CT_TablePart) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bcdbe := range start.Attr {
		if _bcdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bcdbe.Name.Local == "\u0069\u0064" || _bcdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bcdbe.Name.Local == "\u0069\u0064" {
			_fgfbgb, _gffee := _bcdbe.Value, error(nil)
			if _gffee != nil {
				return _gffee
			}
			_gcgcfb.IdAttr = _fgfbgb
			continue
		}
	}
	for {
		_fcddc, _fcbcf := d.Token()
		if _fcbcf != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061b\u006c\u0065\u0050\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _fcbcf)
		}
		if _efbdf, _geada := _fcddc.(_gd.EndElement); _geada && _efbdf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gecdd *ST_DateTimeGrouping) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gecdd = 0
	case "\u0079\u0065\u0061\u0072":
		*_gecdd = 1
	case "\u006d\u006f\u006et\u0068":
		*_gecdd = 2
	case "\u0064\u0061\u0079":
		*_gecdd = 3
	case "\u0068\u006f\u0075\u0072":
		*_gecdd = 4
	case "\u006d\u0069\u006e\u0075\u0074\u0065":
		*_gecdd = 5
	case "\u0073\u0065\u0063\u006f\u006e\u0064":
		*_gecdd = 6
	}
	return nil
}

func (_abcgad *ST_DdeValueType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_abcgad = 0
	case "\u006e\u0069\u006c":
		*_abcgad = 1
	case "\u0062":
		*_abcgad = 2
	case "\u006e":
		*_abcgad = 3
	case "\u0065":
		*_abcgad = 4
	case "\u0073\u0074\u0072":
		*_abcgad = 5
	}
	return nil
}

// ValidateWithPath validates the CT_FunctionGroups and its children, prefixing error messages with path
func (_abaff *CT_FunctionGroups) ValidateWithPath(path string) error {
	for _beeee, _dbfda := range _abaff.FunctionGroup {
		if _abacg := _dbfda.ValidateWithPath(_b.Sprintf("%\u0073/\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006eG\u0072\u006f\u0075\u0070[%\u0064\u005d", path, _beeee)); _abacg != nil {
			return _abacg
		}
	}
	return nil
}

func (_agcfc ST_VerticalAlignment) ValidateWithPath(path string) error {
	switch _agcfc {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agcfc))
	}
	return nil
}

func (_ffagc *CT_SheetBackgroundPicture) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ffagc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_LevelGroup struct {

	// Group Name
	NameAttr string

	// Unique Group Name
	UniqueNameAttr string

	// Group Caption
	CaptionAttr string

	// Parent Unique Name
	UniqueParentAttr *string

	// Group Id
	IdAttr *int32

	// OLAP Group Members
	GroupMembers *CT_GroupMembers
}

// ValidateWithPath validates the CT_ChartFormat and its children, prefixing error messages with path
func (_fdec *CT_ChartFormat) ValidateWithPath(path string) error {
	if _gcga := _fdec.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _gcga != nil {
		return _gcga
	}
	return nil
}

func (_aabgf ST_Visibility) ValidateWithPath(path string) error {
	switch _aabgf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aabgf))
	}
	return nil
}

func (_aecea *CT_GroupMember) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gfgg := range start.Attr {
		if _gfgg.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_abef, _gdcace := _gfgg.Value, error(nil)
			if _gdcace != nil {
				return _gdcace
			}
			_aecea.UniqueNameAttr = _abef
			continue
		}
		if _gfgg.Name.Local == "\u0067\u0072\u006fu\u0070" {
			_efff, _gfdff := _a.ParseBool(_gfgg.Value)
			if _gfdff != nil {
				return _gfdff
			}
			_aecea.GroupAttr = &_efff
			continue
		}
	}
	for {
		_begcfa, _efgfc := d.Token()
		if _efgfc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072:\u0020\u0025\u0073", _efgfc)
		}
		if _egdac, _bfcea := _begcfa.(_gd.EndElement); _bfcea && _egdac.Name == start.Name {
			break
		}
	}
	return nil
}

func (_agdfe *CT_LevelGroup) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _agdfe.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _agdfe.UniqueNameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _agdfe.CaptionAttr)})
	if _agdfe.UniqueParentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_agdfe.UniqueParentAttr)})
	}
	if _agdfe.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_agdfe.IdAttr)})
	}
	e.EncodeToken(start)
	_dcaga := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ag\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}}
	e.EncodeElement(_agdfe.GroupMembers, _dcaga)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_GradientType byte

func (_fgfac ST_PageOrder) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dcbfb := _gd.Attr{}
	_dcbfb.Name = name
	switch _fgfac {
	case ST_PageOrderUnset:
		_dcbfb.Value = ""
	case ST_PageOrderDownThenOver:
		_dcbfb.Value = "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case ST_PageOrderOverThenDown:
		_dcbfb.Value = "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return _dcbfb, nil
}

// ValidateWithPath validates the CT_Fonts and its children, prefixing error messages with path
func (_ebfdd *CT_Fonts) ValidateWithPath(path string) error {
	for _caac, _gabbe := range _ebfdd.Font {
		if _egcaba := _gabbe.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _caac)); _egcaba != nil {
			return _egcaba
		}
	}
	return nil
}

func NewCT_DataValidations() *CT_DataValidations { _babcg := &CT_DataValidations{}; return _babcg }

func NewCT_Pane() *CT_Pane { _dedde := &CT_Pane{}; return _dedde }

func NewCT_CalculatedMember() *CT_CalculatedMember { _abbb := &CT_CalculatedMember{}; return _abbb }

type CT_PivotTableStyle struct {

	// Table Style Name
	NameAttr *string

	// Show Row Header Formatting
	ShowRowHeadersAttr *bool

	// Show Table Style Column Header Formatting
	ShowColHeadersAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColStripesAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool
}

// ValidateWithPath validates the CT_RgbColor and its children, prefixing error messages with path
func (_ebbbe *CT_RgbColor) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_colItems and its children, prefixing error messages with path
func (_dafddc *CT_colItems) ValidateWithPath(path string) error {
	for _acefb, _cgaa := range _dafddc.I {
		if _dcfgde := _cgaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _acefb)); _dcfgde != nil {
			return _dcfgde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataValidations and its children, prefixing error messages with path
func (_edgcd *CT_DataValidations) ValidateWithPath(path string) error {
	for _adc, _aadcc := range _edgcd.DataValidation {
		if _fcbeb := _aadcc.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0044\u0061ta\u0056a\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _adc)); _fcbeb != nil {
			return _fcbeb
		}
	}
	return nil
}

func (_cbbc *CT_CellWatch) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", _cbbc.RAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dgdebcc ST_CredMethod) ValidateWithPath(path string) error {
	switch _dgdebcc {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgdebcc))
	}
	return nil
}

func (_bacaca *ST_FontScheme) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_edbcb, _ffeaf := d.Token()
	if _ffeaf != nil {
		return _ffeaf
	}
	if _dgefc, _bfcfe := _edbcb.(_gd.EndElement); _bfcfe && _dgefc.Name == start.Name {
		*_bacaca = 1
		return nil
	}
	if _dedcac, _ggdada := _edbcb.(_gd.CharData); !_ggdada {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edbcb)
	} else {
		switch string(_dedcac) {
		case "":
			*_bacaca = 0
		case "\u006e\u006f\u006e\u0065":
			*_bacaca = 1
		case "\u006d\u0061\u006ao\u0072":
			*_bacaca = 2
		case "\u006d\u0069\u006eo\u0072":
			*_bacaca = 3
		}
	}
	_edbcb, _ffeaf = d.Token()
	if _ffeaf != nil {
		return _ffeaf
	}
	if _ebbfaa, _cgebe := _edbcb.(_gd.EndElement); _cgebe && _ebbfaa.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edbcb)
}

func (_cfabg ST_Qualifier) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cefdf := _gd.Attr{}
	_cefdf.Name = name
	switch _cfabg {
	case ST_QualifierUnset:
		_cefdf.Value = ""
	case ST_QualifierDoubleQuote:
		_cefdf.Value = "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierSingleQuote:
		_cefdf.Value = "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierNone:
		_cefdf.Value = "\u006e\u006f\u006e\u0065"
	}
	return _cefdf, nil
}

// Validate validates the CT_PageBreak and its children
func (_feadb *CT_PageBreak) Validate() error {
	return _feadb.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b")
}

// ValidateWithPath validates the CT_OleSize and its children, prefixing error messages with path
func (_gaab *CT_OleSize) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ConditionalFormats and its children, prefixing error messages with path
func (_gddf *CT_ConditionalFormats) ValidateWithPath(path string) error {
	for _cafgf, _fggf := range _gddf.ConditionalFormat {
		if _efadg := _fggf.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _cafgf)); _efadg != nil {
			return _efadg
		}
	}
	return nil
}

func (_eefaf *CT_CustomProperties) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_edeaf := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}}
	for _, _egcab := range _eefaf.CustomPr {
		e.EncodeElement(_egcab, _edeaf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the SingleXmlCells and its children
func (_fadgb *SingleXmlCells) Validate() error {
	return _fadgb.ValidateWithPath("\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

// Validate validates the CT_TableStyleElement and its children
func (_deccd *CT_TableStyleElement) Validate() error {
	return _deccd.ValidateWithPath("C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074")
}

// Validate validates the CT_Colors and its children
func (_afbe *CT_Colors) Validate() error {
	return _afbe.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s")
}

func (_gacbb *CT_PrintOptions) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cbaefg := range start.Attr {
		if _cbaefg.Name.Local == "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064" {
			_eggfd, _bdeed := _a.ParseBool(_cbaefg.Value)
			if _bdeed != nil {
				return _bdeed
			}
			_gacbb.HorizontalCenteredAttr = &_eggfd
			continue
		}
		if _cbaefg.Name.Local == "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064" {
			_ebgeg, _dbfgb := _a.ParseBool(_cbaefg.Value)
			if _dbfgb != nil {
				return _dbfgb
			}
			_gacbb.VerticalCenteredAttr = &_ebgeg
			continue
		}
		if _cbaefg.Name.Local == "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073" {
			_bffaf, _cbbga := _a.ParseBool(_cbaefg.Value)
			if _cbbga != nil {
				return _cbbga
			}
			_gacbb.HeadingsAttr = &_bffaf
			continue
		}
		if _cbaefg.Name.Local == "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s" {
			_acded, _fgdba := _a.ParseBool(_cbaefg.Value)
			if _fgdba != nil {
				return _fgdba
			}
			_gacbb.GridLinesAttr = &_acded
			continue
		}
		if _cbaefg.Name.Local == "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074" {
			_fdgcd, _ffbfaa := _a.ParseBool(_cbaefg.Value)
			if _ffbfaa != nil {
				return _ffbfaa
			}
			_gacbb.GridLinesSetAttr = &_fdgcd
			continue
		}
	}
	for {
		_acfad, _egacb := d.Token()
		if _egacb != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u004fp\u0074\u0069\u006fn\u0073:\u0020\u0025\u0073", _egacb)
		}
		if _dafag, _efddg := _acfad.(_gd.EndElement); _efddg && _dafag.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bfbdfe *CT_IntProperty) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _bfbdfe.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionSheetRename and its children, prefixing error messages with path
func (_ebbba *CT_RevisionSheetRename) ValidateWithPath(path string) error {
	if _ebbba.ExtLst != nil {
		if _gfee := _ebbba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfee != nil {
			return _gfee
		}
	}
	return nil
}

// Validate validates the VolTypes and its children
func (_gfbbb *VolTypes) Validate() error {
	return _gfbbb.ValidateWithPath("\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

func NewCT_QueryTableDeletedFields() *CT_QueryTableDeletedFields {
	_bgdcc := &CT_QueryTableDeletedFields{}
	return _bgdcc
}

func (_fgeg *CT_FilterColumn) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dfgcg := range start.Attr {
		if _dfgcg.Name.Local == "\u0063\u006f\u006cI\u0064" {
			_dgaafa, _egadc := _a.ParseUint(_dfgcg.Value, 10, 32)
			if _egadc != nil {
				return _egadc
			}
			_fgeg.ColIdAttr = uint32(_dgaafa)
			continue
		}
		if _dfgcg.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e" {
			_bfbbb, _adced := _a.ParseBool(_dfgcg.Value)
			if _adced != nil {
				return _adced
			}
			_fgeg.HiddenButtonAttr = &_bfbbb
			continue
		}
		if _dfgcg.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e" {
			_cegad, _ecgea := _a.ParseBool(_dfgcg.Value)
			if _ecgea != nil {
				return _ecgea
			}
			_fgeg.ShowButtonAttr = &_cegad
			continue
		}
	}
_ccdaf:
	for {
		_ecfb, _gdefd := d.Token()
		if _gdefd != nil {
			return _gdefd
		}
		switch _ceag := _ecfb.(type) {
		case _gd.StartElement:
			switch _ceag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_fgeg.Filters = NewCT_Filters()
				if _cbbdce := d.DecodeElement(_fgeg.Filters, &_ceag); _cbbdce != nil {
					return _cbbdce
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}:
				_fgeg.Top10 = NewCT_Top10()
				if _aacf := d.DecodeElement(_fgeg.Top10, &_ceag); _aacf != nil {
					return _aacf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}:
				_fgeg.CustomFilters = NewCT_CustomFilters()
				if _bdfg := d.DecodeElement(_fgeg.CustomFilters, &_ceag); _bdfg != nil {
					return _bdfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fgeg.DynamicFilter = NewCT_DynamicFilter()
				if _bcgd := d.DecodeElement(_fgeg.DynamicFilter, &_ceag); _bcgd != nil {
					return _bcgd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fgeg.ColorFilter = NewCT_ColorFilter()
				if _eaagc := d.DecodeElement(_fgeg.ColorFilter, &_ceag); _eaagc != nil {
					return _eaagc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fgeg.IconFilter = NewCT_IconFilter()
				if _aage := d.DecodeElement(_fgeg.IconFilter, &_ceag); _aage != nil {
					return _aage
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgeg.ExtLst = NewCT_ExtensionList()
				if _efeb := d.DecodeElement(_fgeg.ExtLst, &_ceag); _efeb != nil {
					return _efeb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _ceag.Name)
				if _gefdf := d.Skip(); _gefdf != nil {
					return _gefdf
				}
			}
		case _gd.EndElement:
			break _ccdaf
		case _gd.CharData:
		}
	}
	return nil
}

type CT_PivotCaches struct {

	// PivotCache
	PivotCache []*CT_PivotCache
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_gagaf *CT_FontScheme) ValidateWithPath(path string) error {
	if _gagaf.ValAttr == ST_FontSchemeUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ddgea := _gagaf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ddgea != nil {
		return _ddgea
	}
	return nil
}

// Validate validates the CT_CellProtection and its children
func (_ggae *CT_CellProtection) Validate() error {
	return _ggae.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e")
}

func NewCT_CfRule() *CT_CfRule { _egfad := &CT_CfRule{}; return _egfad }

func (_fbfac *CT_TextFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fbfac.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fbfac.CountAttr)})
	}
	e.EncodeToken(start)
	_cfbed := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003at\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _ddcgdf := range _fbfac.TextField {
		e.EncodeElement(_ddcgdf, _cfbed)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Query and its children
func (_gdad *CT_Query) Validate() error {
	return _gdad.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079")
}

func (_cffcf *CT_CustomChartsheetView) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cffcf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _efbdd := range start.Attr {
		if _efbdd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_afef, _gcgag := _efbdd.Value, error(nil)
			if _gcgag != nil {
				return _gcgag
			}
			_cffcf.GuidAttr = _afef
			continue
		}
		if _efbdd.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_effa, _acdba := _a.ParseUint(_efbdd.Value, 10, 32)
			if _acdba != nil {
				return _acdba
			}
			_fcab := uint32(_effa)
			_cffcf.ScaleAttr = &_fcab
			continue
		}
		if _efbdd.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_cffcf.StateAttr.UnmarshalXMLAttr(_efbdd)
			continue
		}
		if _efbdd.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_cbgad, _egbeg := _a.ParseBool(_efbdd.Value)
			if _egbeg != nil {
				return _egbeg
			}
			_cffcf.ZoomToFitAttr = &_cbgad
			continue
		}
	}
_ebdf:
	for {
		_egffb, _cbag := d.Token()
		if _cbag != nil {
			return _cbag
		}
		switch _fegge := _egffb.(type) {
		case _gd.StartElement:
			switch _fegge.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_cffcf.PageMargins = NewCT_PageMargins()
				if _ddefd := d.DecodeElement(_cffcf.PageMargins, &_fegge); _ddefd != nil {
					return _ddefd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_cffcf.PageSetup = NewCT_CsPageSetup()
				if _afad := d.DecodeElement(_cffcf.PageSetup, &_fegge); _afad != nil {
					return _afad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_cffcf.HeaderFooter = NewCT_HeaderFooter()
				if _fdgd := d.DecodeElement(_cffcf.HeaderFooter, &_fegge); _fdgd != nil {
					return _fdgd
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077 \u0025\u0076", _fegge.Name)
				if _cfebd := d.Skip(); _cfebd != nil {
					return _cfebd
				}
			}
		case _gd.EndElement:
			break _ebdf
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CalcChain and its children
func (_gfdeb *CalcChain) Validate() error {
	return _gfdeb.ValidateWithPath("\u0043a\u006c\u0063\u0043\u0068\u0061\u0069n")
}

func (_cefc *CT_CsPageSetup) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _eabd := range start.Attr {
		if _eabd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eabd.Name.Local == "\u0069\u0064" || _eabd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eabd.Name.Local == "\u0069\u0064" {
			_bdfec, _gbgb := _eabd.Value, error(nil)
			if _gbgb != nil {
				return _gbgb
			}
			_cefc.IdAttr = &_bdfec
			continue
		}
		if _eabd.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_abdd, _abacb := _a.ParseUint(_eabd.Value, 10, 32)
			if _abacb != nil {
				return _abacb
			}
			_bbeg := uint32(_abdd)
			_cefc.PaperSizeAttr = &_bbeg
			continue
		}
		if _eabd.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_bbbge, _fedef := _eabd.Value, error(nil)
			if _fedef != nil {
				return _fedef
			}
			_cefc.PaperWidthAttr = &_bbbge
			continue
		}
		if _eabd.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_aefa, _adde := _a.ParseUint(_eabd.Value, 10, 32)
			if _adde != nil {
				return _adde
			}
			_ggdg := uint32(_aefa)
			_cefc.FirstPageNumberAttr = &_ggdg
			continue
		}
		if _eabd.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_cefc.OrientationAttr.UnmarshalXMLAttr(_eabd)
			continue
		}
		if _eabd.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_ggbba, _fbbe := _a.ParseBool(_eabd.Value)
			if _fbbe != nil {
				return _fbbe
			}
			_cefc.UsePrinterDefaultsAttr = &_ggbba
			continue
		}
		if _eabd.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_acce, _gbdc := _eabd.Value, error(nil)
			if _gbdc != nil {
				return _gbdc
			}
			_cefc.PaperHeightAttr = &_acce
			continue
		}
		if _eabd.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_dgbbg, _dfdbd := _a.ParseBool(_eabd.Value)
			if _dfdbd != nil {
				return _dfdbd
			}
			_cefc.DraftAttr = &_dgbbg
			continue
		}
		if _eabd.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_afff, _fdde := _a.ParseBool(_eabd.Value)
			if _fdde != nil {
				return _fdde
			}
			_cefc.UseFirstPageNumberAttr = &_afff
			continue
		}
		if _eabd.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_degaa, _accg := _a.ParseUint(_eabd.Value, 10, 32)
			if _accg != nil {
				return _accg
			}
			_bcad := uint32(_degaa)
			_cefc.HorizontalDpiAttr = &_bcad
			continue
		}
		if _eabd.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_cbdfg, _gdde := _a.ParseUint(_eabd.Value, 10, 32)
			if _gdde != nil {
				return _gdde
			}
			_ddfd := uint32(_cbdfg)
			_cefc.VerticalDpiAttr = &_ddfd
			continue
		}
		if _eabd.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_fgaa, _dcad := _a.ParseUint(_eabd.Value, 10, 32)
			if _dcad != nil {
				return _dcad
			}
			_fdfe := uint32(_fgaa)
			_cefc.CopiesAttr = &_fdfe
			continue
		}
		if _eabd.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_egdgd, _acbd := _a.ParseBool(_eabd.Value)
			if _acbd != nil {
				return _acbd
			}
			_cefc.BlackAndWhiteAttr = &_egdgd
			continue
		}
	}
	for {
		_bgbcg, _ffba := d.Token()
		if _ffba != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0073\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070:\u0020\u0025\u0073", _ffba)
		}
		if _feeaf, _eff := _bgbcg.(_gd.EndElement); _eff && _feeaf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bcaef *CT_Location) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _eafa := range start.Attr {
		if _eafa.Name.Local == "\u0072\u0065\u0066" {
			_cfeg, _eefdb := _eafa.Value, error(nil)
			if _eefdb != nil {
				return _eefdb
			}
			_bcaef.RefAttr = _cfeg
			continue
		}
		if _eafa.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077" {
			_cecgg, _ccgd := _a.ParseUint(_eafa.Value, 10, 32)
			if _ccgd != nil {
				return _ccgd
			}
			_bcaef.FirstHeaderRowAttr = uint32(_cecgg)
			continue
		}
		if _eafa.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077" {
			_adafaa, _dcedf := _a.ParseUint(_eafa.Value, 10, 32)
			if _dcedf != nil {
				return _dcedf
			}
			_bcaef.FirstDataRowAttr = uint32(_adafaa)
			continue
		}
		if _eafa.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c" {
			_adadf, _bcgbe := _a.ParseUint(_eafa.Value, 10, 32)
			if _bcgbe != nil {
				return _bcgbe
			}
			_bcaef.FirstDataColAttr = uint32(_adadf)
			continue
		}
		if _eafa.Name.Local == "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_afbee, _dbdec := _a.ParseUint(_eafa.Value, 10, 32)
			if _dbdec != nil {
				return _dbdec
			}
			_afceg := uint32(_afbee)
			_bcaef.RowPageCountAttr = &_afceg
			continue
		}
		if _eafa.Name.Local == "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_fgea, _bgcef := _a.ParseUint(_eafa.Value, 10, 32)
			if _bgcef != nil {
				return _bgcef
			}
			_ebdad := uint32(_fgea)
			_bcaef.ColPageCountAttr = &_ebdad
			continue
		}
	}
	for {
		_edceb, _abafd := d.Token()
		if _abafd != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _abafd)
		}
		if _dcgcf, _cggad := _edceb.(_gd.EndElement); _cggad && _dcgcf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_degb *CT_DataRefs) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egcf := range start.Attr {
		if _egcf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdac, _ggag := _a.ParseUint(_egcf.Value, 10, 32)
			if _ggag != nil {
				return _ggag
			}
			_ddgeb := uint32(_cdac)
			_degb.CountAttr = &_ddgeb
			continue
		}
	}
_bbccf:
	for {
		_gegg, _bbfbg := d.Token()
		if _bbfbg != nil {
			return _bbfbg
		}
		switch _cggaa := _gegg.(type) {
		case _gd.StartElement:
			switch _cggaa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}:
				_bdce := NewCT_DataRef()
				if _ccaga := d.DecodeElement(_bdce, &_cggaa); _ccaga != nil {
					return _ccaga
				}
				_degb.DataRef = append(_degb.DataRef, _bdce)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073\u0020\u0025\u0076", _cggaa.Name)
				if _gbde := d.Skip(); _gbde != nil {
					return _gbde
				}
			}
		case _gd.EndElement:
			break _bbccf
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_RevisionHeaders() *CT_RevisionHeaders {
	_agecg := &CT_RevisionHeaders{}
	_agecg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _agecg
}

type CT_WorksheetSource struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_cggfe *CT_Chartsheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _cggfe.SheetPr != nil {
		_bfba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_cggfe.SheetPr, _bfba)
	}
	_aecg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
	e.EncodeElement(_cggfe.SheetViews, _aecg)
	if _cggfe.SheetProtection != nil {
		_gcfad := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cggfe.SheetProtection, _gcfad)
	}
	if _cggfe.CustomSheetViews != nil {
		_geaab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cggfe.CustomSheetViews, _geaab)
	}
	if _cggfe.PageMargins != nil {
		_bfffa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_cggfe.PageMargins, _bfffa)
	}
	if _cggfe.PageSetup != nil {
		_abfe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_cggfe.PageSetup, _abfe)
	}
	if _cggfe.HeaderFooter != nil {
		_dgdc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_cggfe.HeaderFooter, _dgdc)
	}
	_cddc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
	e.EncodeElement(_cggfe.Drawing, _cddc)
	if _cggfe.LegacyDrawing != nil {
		_bcgb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cggfe.LegacyDrawing, _bcgb)
	}
	if _cggfe.LegacyDrawingHF != nil {
		_cagb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cggfe.LegacyDrawingHF, _cagb)
	}
	if _cggfe.DrawingHF != nil {
		_gcafb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cggfe.DrawingHF, _gcafb)
	}
	if _cggfe.Picture != nil {
		_gcbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_cggfe.Picture, _gcbb)
	}
	if _cggfe.WebPublishItems != nil {
		_ggfc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cggfe.WebPublishItems, _ggfc)
	}
	if _cggfe.ExtLst != nil {
		_bgea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cggfe.ExtLst, _bgea)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cdggg *CT_DdeValues) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cdaag := range start.Attr {
		if _cdaag.Name.Local == "\u0072\u006f\u0077\u0073" {
			_gffdg, _fbgac := _a.ParseUint(_cdaag.Value, 10, 32)
			if _fbgac != nil {
				return _fbgac
			}
			_gdaa := uint32(_gffdg)
			_cdggg.RowsAttr = &_gdaa
			continue
		}
		if _cdaag.Name.Local == "\u0063\u006f\u006c\u0073" {
			_efead, _ceca := _a.ParseUint(_cdaag.Value, 10, 32)
			if _ceca != nil {
				return _ceca
			}
			_fgadd := uint32(_efead)
			_cdggg.ColsAttr = &_fgadd
			continue
		}
	}
_ddecf:
	for {
		_egcg, _bfea := d.Token()
		if _bfea != nil {
			return _bfea
		}
		switch _fgce := _egcg.(type) {
		case _gd.StartElement:
			switch _fgce.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}:
				_gfbae := NewCT_DdeValue()
				if _ebdde := d.DecodeElement(_gfbae, &_fgce); _ebdde != nil {
					return _ebdde
				}
				_cdggg.Value = append(_cdggg.Value, _gfbae)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0064\u0065V\u0061\u006c\u0075\u0065\u0073\u0020\u0025\u0076", _fgce.Name)
				if _gbec := d.Skip(); _gbec != nil {
					return _gbec
				}
			}
		case _gd.EndElement:
			break _ddecf
		case _gd.CharData:
		}
	}
	return nil
}

func (_fcfbbe *Chartsheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fcfbbe.CT_Chartsheet = *NewCT_Chartsheet()
_dbeeaa:
	for {
		_dggdc, _ebfbg := d.Token()
		if _ebfbg != nil {
			return _ebfbg
		}
		switch _cfagd := _dggdc.(type) {
		case _gd.StartElement:
			switch _cfagd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_fcfbbe.SheetPr = NewCT_ChartsheetPr()
				if _gbbgc := d.DecodeElement(_fcfbbe.SheetPr, &_cfagd); _gbbgc != nil {
					return _gbbgc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _agcacb := d.DecodeElement(_fcfbbe.SheetViews, &_cfagd); _agcacb != nil {
					return _agcacb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fcfbbe.SheetProtection = NewCT_ChartsheetProtection()
				if _edebf := d.DecodeElement(_fcfbbe.SheetProtection, &_cfagd); _edebf != nil {
					return _edebf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fcfbbe.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _gcacd := d.DecodeElement(_fcfbbe.CustomSheetViews, &_cfagd); _gcacd != nil {
					return _gcacd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fcfbbe.PageMargins = NewCT_PageMargins()
				if _cadaf := d.DecodeElement(_fcfbbe.PageMargins, &_cfagd); _cadaf != nil {
					return _cadaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fcfbbe.PageSetup = NewCT_CsPageSetup()
				if _fbbcc := d.DecodeElement(_fcfbbe.PageSetup, &_cfagd); _fbbcc != nil {
					return _fbbcc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fcfbbe.HeaderFooter = NewCT_HeaderFooter()
				if _fbddc := d.DecodeElement(_fcfbbe.HeaderFooter, &_cfagd); _fbddc != nil {
					return _fbddc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _bdagc := d.DecodeElement(_fcfbbe.Drawing, &_cfagd); _bdagc != nil {
					return _bdagc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_fcfbbe.LegacyDrawing = NewCT_LegacyDrawing()
				if _agabf := d.DecodeElement(_fcfbbe.LegacyDrawing, &_cfagd); _agabf != nil {
					return _agabf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_fcfbbe.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _gbfff := d.DecodeElement(_fcfbbe.LegacyDrawingHF, &_cfagd); _gbfff != nil {
					return _gbfff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_fcfbbe.DrawingHF = NewCT_DrawingHF()
				if _bgbbf := d.DecodeElement(_fcfbbe.DrawingHF, &_cfagd); _bgbbf != nil {
					return _bgbbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_fcfbbe.Picture = NewCT_SheetBackgroundPicture()
				if _eaddb := d.DecodeElement(_fcfbbe.Picture, &_cfagd); _eaddb != nil {
					return _eaddb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_fcfbbe.WebPublishItems = NewCT_WebPublishItems()
				if _bdcdd := d.DecodeElement(_fcfbbe.WebPublishItems, &_cfagd); _bdcdd != nil {
					return _bdcdd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcfbbe.ExtLst = NewCT_ExtensionList()
				if _gbbeba := d.DecodeElement(_fcfbbe.ExtLst, &_cfagd); _gbbeba != nil {
					return _gbbeba
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _cfagd.Name)
				if _cbcea := d.Skip(); _cbcea != nil {
					return _cbcea
				}
			}
		case _gd.EndElement:
			break _dbeeaa
		case _gd.CharData:
		}
	}
	return nil
}

func (_aaefd *CT_Colors) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_dfbgd:
	for {
		_dacd, _ggebc := d.Token()
		if _ggebc != nil {
			return _ggebc
		}
		switch _bbcde := _dacd.(type) {
		case _gd.StartElement:
			switch _bbcde.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}:
				_aaefd.IndexedColors = NewCT_IndexedColors()
				if _dgad := d.DecodeElement(_aaefd.IndexedColors, &_bbcde); _dgad != nil {
					return _dgad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}:
				_aaefd.MruColors = NewCT_MRUColors()
				if _gcaae := d.DecodeElement(_aaefd.MruColors, &_bbcde); _gcaae != nil {
					return _gcaae
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u006f\u006co\u0072\u0073 \u0025\u0076", _bbcde.Name)
				if _beagc := d.Skip(); _beagc != nil {
					return _beagc
				}
			}
		case _gd.EndElement:
			break _dfbgd
		case _gd.CharData:
		}
	}
	return nil
}

func (_acged *CT_Worksheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _acged.SheetPr != nil {
		_afcee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_acged.SheetPr, _afcee)
	}
	if _acged.Dimension != nil {
		_gaddf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_acged.Dimension, _gaddf)
	}
	if _acged.SheetViews != nil {
		_efabe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_acged.SheetViews, _efabe)
	}
	if _acged.SheetFormatPr != nil {
		_gcbac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_acged.SheetFormatPr, _gcbac)
	}
	if _acged.Cols != nil {
		_cgdde := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _eccgde := range _acged.Cols {
			e.EncodeElement(_eccgde, _cgdde)
		}
	}
	_bdbfeg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_acged.SheetData, _bdbfeg)
	if _acged.SheetCalcPr != nil {
		_acgdgb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072"}}
		e.EncodeElement(_acged.SheetCalcPr, _acgdgb)
	}
	if _acged.SheetProtection != nil {
		_dgeea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_acged.SheetProtection, _dgeea)
	}
	if _acged.ProtectedRanges != nil {
		_fecc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ap\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073"}}
		e.EncodeElement(_acged.ProtectedRanges, _fecc)
	}
	if _acged.Scenarios != nil {
		_cdbdd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"}}
		e.EncodeElement(_acged.Scenarios, _cdbdd)
	}
	if _acged.AutoFilter != nil {
		_ededc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_acged.AutoFilter, _ededc)
	}
	if _acged.SortState != nil {
		_cdece := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_acged.SortState, _cdece)
	}
	if _acged.DataConsolidate != nil {
		_bgcdgc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_acged.DataConsolidate, _bgcdgc)
	}
	if _acged.CustomSheetViews != nil {
		_dgca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_acged.CustomSheetViews, _dgca)
	}
	if _acged.MergeCells != nil {
		_faceef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}}
		e.EncodeElement(_acged.MergeCells, _faceef)
	}
	if _acged.PhoneticPr != nil {
		_dabdag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_acged.PhoneticPr, _dabdag)
	}
	if _acged.ConditionalFormatting != nil {
		_cbeega := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _cdddb := range _acged.ConditionalFormatting {
			e.EncodeElement(_cdddb, _cbeega)
		}
	}
	if _acged.DataValidations != nil {
		_dcbgee := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_acged.DataValidations, _dcbgee)
	}
	if _acged.Hyperlinks != nil {
		_daaab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}}
		e.EncodeElement(_acged.Hyperlinks, _daaab)
	}
	if _acged.PrintOptions != nil {
		_gefca := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_acged.PrintOptions, _gefca)
	}
	if _acged.PageMargins != nil {
		_cabbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_acged.PageMargins, _cabbc)
	}
	if _acged.PageSetup != nil {
		_aggbdb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_acged.PageSetup, _aggbdb)
	}
	if _acged.HeaderFooter != nil {
		_dbgaaf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_acged.HeaderFooter, _dbgaaf)
	}
	if _acged.RowBreaks != nil {
		_acgbdg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_acged.RowBreaks, _acgbdg)
	}
	if _acged.ColBreaks != nil {
		_acbdb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_acged.ColBreaks, _acbdb)
	}
	if _acged.CustomProperties != nil {
		_ggage := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_acged.CustomProperties, _ggage)
	}
	if _acged.CellWatches != nil {
		_egcbd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_acged.CellWatches, _egcbd)
	}
	if _acged.IgnoredErrors != nil {
		_ceddf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}}
		e.EncodeElement(_acged.IgnoredErrors, _ceddf)
	}
	if _acged.SmartTags != nil {
		_gcbfb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_acged.SmartTags, _gcbfb)
	}
	if _acged.Drawing != nil {
		_fegbf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_acged.Drawing, _fegbf)
	}
	if _acged.LegacyDrawing != nil {
		_gdgee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_acged.LegacyDrawing, _gdgee)
	}
	if _acged.LegacyDrawingHF != nil {
		_ggddbf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_acged.LegacyDrawingHF, _ggddbf)
	}
	if _acged.DrawingHF != nil {
		_ceaaga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_acged.DrawingHF, _ceaaga)
	}
	if _acged.Picture != nil {
		_dafdgc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_acged.Picture, _dafdgc)
	}
	if _acged.OleObjects != nil {
		_dgadg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_acged.OleObjects, _dgadg)
	}
	if _acged.Controls != nil {
		_abdfg := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_acged.Controls, _abdfg)
	}
	if _acged.WebPublishItems != nil {
		_bddabf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_acged.WebPublishItems, _bddabf)
	}
	if _acged.TableParts != nil {
		_aacbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}}
		e.EncodeElement(_acged.TableParts, _aacbc)
	}
	if _acged.ExtLst != nil {
		_bbdfb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_acged.ExtLst, _bbdfb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_ItemType byte

// ValidateWithPath validates the CT_WorksheetSource and its children, prefixing error messages with path
func (_begbg *CT_WorksheetSource) ValidateWithPath(path string) error { return nil }

func NewCT_CacheSource() *CT_CacheSource {
	_cggc := &CT_CacheSource{}
	_cggc.TypeAttr = ST_SourceType(1)
	return _cggc
}

func (_ccde *CT_CustomFilter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ccde.OperatorAttr != ST_FilterOperatorUnset {
		_eege, _cgcce := _ccde.OperatorAttr.MarshalXMLAttr(_gd.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _cgcce != nil {
			return _cgcce
		}
		start.Attr = append(start.Attr, _eege)
	}
	if _ccde.ValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_ccde.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextPr and its children, prefixing error messages with path
func (_bgeeb *CT_TextPr) ValidateWithPath(path string) error {
	if _bbgddc := _bgeeb.FileTypeAttr.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _bbgddc != nil {
		return _bbgddc
	}
	if _cdbd := _bgeeb.QualifierAttr.ValidateWithPath(path + "\u002f\u0051\u0075\u0061\u006c\u0069\u0066\u0069\u0065r\u0041\u0074\u0074\u0072"); _cdbd != nil {
		return _cdbd
	}
	if _bgeeb.TextFields != nil {
		if _cdbeb := _bgeeb.TextFields.ValidateWithPath(path + "/\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _cdbeb != nil {
			return _cdbeb
		}
	}
	return nil
}

func NewCT_ProtectedRange() *CT_ProtectedRange { _cceaa := &CT_ProtectedRange{}; return _cceaa }

func NewCT_Table() *CT_Table {
	_dffbd := &CT_Table{}
	_dffbd.TableColumns = NewCT_TableColumns()
	return _dffbd
}

func (_agaee *CT_WorksheetSource) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egdacb := range start.Attr {
		if _egdacb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _egdacb.Name.Local == "\u0069\u0064" || _egdacb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _egdacb.Name.Local == "\u0069\u0064" {
			_aefag, _ecgfda := _egdacb.Value, error(nil)
			if _ecgfda != nil {
				return _ecgfda
			}
			_agaee.IdAttr = &_aefag
			continue
		}
		if _egdacb.Name.Local == "\u0072\u0065\u0066" {
			_ddaab, _caadgg := _egdacb.Value, error(nil)
			if _caadgg != nil {
				return _caadgg
			}
			_agaee.RefAttr = &_ddaab
			continue
		}
		if _egdacb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdafgea, _eaeae := _egdacb.Value, error(nil)
			if _eaeae != nil {
				return _eaeae
			}
			_agaee.NameAttr = &_gdafgea
			continue
		}
		if _egdacb.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_fgcbcc, _fcgae := _egdacb.Value, error(nil)
			if _fcgae != nil {
				return _fcgae
			}
			_agaee.SheetAttr = &_fgcbcc
			continue
		}
	}
	for {
		_agege, _acddg := d.Token()
		if _acddg != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u006f\u0072\u006b\u0073\u0068\u0065e\u0074\u0053\u006f\u0075\u0072\u0063\u0065\u003a\u0020\u0025\u0073", _acddg)
		}
		if _feecd, _ebefff := _agege.(_gd.EndElement); _ebefff && _feecd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aadf *CT_MdxSet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egeed := range start.Attr {
		if _egeed.Name.Local == "\u006e\u0073" {
			_beea, _cffee := _a.ParseUint(_egeed.Value, 10, 32)
			if _cffee != nil {
				return _cffee
			}
			_aadf.NsAttr = uint32(_beea)
			continue
		}
		if _egeed.Name.Local == "\u0063" {
			_bdbeb, _eeea := _a.ParseUint(_egeed.Value, 10, 32)
			if _eeea != nil {
				return _eeea
			}
			_fddaa := uint32(_bdbeb)
			_aadf.CAttr = &_fddaa
			continue
		}
		if _egeed.Name.Local == "\u006f" {
			_aadf.OAttr.UnmarshalXMLAttr(_egeed)
			continue
		}
	}
_gcebb:
	for {
		_eeafbe, _edbe := d.Token()
		if _edbe != nil {
			return _edbe
		}
		switch _dcbfd := _eeafbe.(type) {
		case _gd.StartElement:
			switch _dcbfd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_bcefd := NewCT_MetadataStringIndex()
				if _daabg := d.DecodeElement(_bcefd, &_dcbfd); _daabg != nil {
					return _daabg
				}
				_aadf.N = append(_aadf.N, _bcefd)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0064\u0078S\u0065\u0074 \u0025\u0076", _dcbfd.Name)
				if _bcbc := d.Skip(); _bcbc != nil {
					return _bcbc
				}
			}
		case _gd.EndElement:
			break _gcebb
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Colors and its children, prefixing error messages with path
func (_efbb *CT_Colors) ValidateWithPath(path string) error {
	if _efbb.IndexedColors != nil {
		if _fdaaa := _efbb.IndexedColors.ValidateWithPath(path + "\u002f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043o\u006c\u006f\u0072\u0073"); _fdaaa != nil {
			return _fdaaa
		}
	}
	if _efbb.MruColors != nil {
		if _ffffe := _efbb.MruColors.ValidateWithPath(path + "\u002f\u004d\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"); _ffffe != nil {
			return _ffffe
		}
	}
	return nil
}

func (_egcae *CT_Formats) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _egcae.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_egcae.CountAttr)})
	}
	e.EncodeToken(start)
	_edgge := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u006f\u0072\u006d\u0061t"}}
	for _, _dbge := range _egcae.Format {
		e.EncodeElement(_dbge, _edgge)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bgg *CT_BorderPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _beed := range start.Attr {
		if _beed.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_bgg.StyleAttr.UnmarshalXMLAttr(_beed)
			continue
		}
	}
_fagda:
	for {
		_eca, _cgb := d.Token()
		if _cgb != nil {
			return _cgb
		}
		switch _fee := _eca.(type) {
		case _gd.StartElement:
			switch _fee.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_bgg.Color = NewCT_Color()
				if _bef := d.DecodeElement(_bgg.Color, &_fee); _bef != nil {
					return _bef
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072\u0020\u0025\u0076", _fee.Name)
				if _cggf := d.Skip(); _cggf != nil {
					return _cggf
				}
			}
		case _gd.EndElement:
			break _fagda
		case _gd.CharData:
		}
	}
	return nil
}

func (_bgcbe *CT_FileRecoveryPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _edbgb := range start.Attr {
		if _edbgb.Name.Local == "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072" {
			_gfff, _bffg := _a.ParseBool(_edbgb.Value)
			if _bffg != nil {
				return _bffg
			}
			_bgcbe.AutoRecoverAttr = &_gfff
			continue
		}
		if _edbgb.Name.Local == "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e" {
			_fedda, _ffdea := _a.ParseBool(_edbgb.Value)
			if _ffdea != nil {
				return _ffdea
			}
			_bgcbe.CrashSaveAttr = &_fedda
			continue
		}
		if _edbgb.Name.Local == "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064" {
			_ecddb, _bdebf := _a.ParseBool(_edbgb.Value)
			if _bdebf != nil {
				return _bdebf
			}
			_bgcbe.DataExtractLoadAttr = &_ecddb
			continue
		}
		if _edbgb.Name.Local == "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064" {
			_fafdda, _ebgfg := _a.ParseBool(_edbgb.Value)
			if _ebgfg != nil {
				return _ebgfg
			}
			_bgcbe.RepairLoadAttr = &_fafdda
			continue
		}
	}
	for {
		_begga, _bdec := d.Token()
		if _bdec != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0050\u0072: \u0025\u0073", _bdec)
		}
		if _ddbc, _fedee := _begga.(_gd.EndElement); _fedee && _ddbc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_FontFamily and its children
func (_caagg *CT_FontFamily) Validate() error {
	return _caagg.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079")
}

type ST_rwColActionType byte

func (_cgfeaca *ST_TimePeriod) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aeacad, _ffdade := d.Token()
	if _ffdade != nil {
		return _ffdade
	}
	if _cacfcg, _dgbbde := _aeacad.(_gd.EndElement); _dgbbde && _cacfcg.Name == start.Name {
		*_cgfeaca = 1
		return nil
	}
	if _afdfg, _degdf := _aeacad.(_gd.CharData); !_degdf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeacad)
	} else {
		switch string(_afdfg) {
		case "":
			*_cgfeaca = 0
		case "\u0074\u006f\u0064a\u0079":
			*_cgfeaca = 1
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_cgfeaca = 2
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_cgfeaca = 3
		case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
			*_cgfeaca = 4
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_cgfeaca = 5
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_cgfeaca = 6
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_cgfeaca = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_cgfeaca = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_cgfeaca = 9
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_cgfeaca = 10
		}
	}
	_aeacad, _ffdade = d.Token()
	if _ffdade != nil {
		return _ffdade
	}
	if _agfef, _cgfee := _aeacad.(_gd.EndElement); _cgfee && _agfef.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeacad)
}

type CT_ChartsheetProtection struct {

	// Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Contents
	ContentAttr *bool

	// Objects Locked
	ObjectsAttr *bool
}

func (_bfcgb *CT_Xf) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bfcgb.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfcgb.NumFmtIdAttr)})
	}
	if _bfcgb.FontIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfcgb.FontIdAttr)})
	}
	if _bfcgb.FillIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u006c\u006c\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfcgb.FillIdAttr)})
	}
	if _bfcgb.BorderIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfcgb.BorderIdAttr)})
	}
	if _bfcgb.XfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bfcgb.XfIdAttr)})
	}
	if _bfcgb.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.QuotePrefixAttr))})
	}
	if _bfcgb.PivotButtonAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.PivotButtonAttr))})
	}
	if _bfcgb.ApplyNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.ApplyNumberFormatAttr))})
	}
	if _bfcgb.ApplyFontAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.ApplyFontAttr))})
	}
	if _bfcgb.ApplyFillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.ApplyFillAttr))})
	}
	if _bfcgb.ApplyBorderAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.ApplyBorderAttr))})
	}
	if _bfcgb.ApplyAlignmentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.ApplyAlignmentAttr))})
	}
	if _bfcgb.ApplyProtectionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfcgb.ApplyProtectionAttr))})
	}
	e.EncodeToken(start)
	if _bfcgb.Alignment != nil {
		_eddedd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_bfcgb.Alignment, _eddedd)
	}
	if _bfcgb.Protection != nil {
		_fgddd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_bfcgb.Protection, _fgddd)
	}
	if _bfcgb.ExtLst != nil {
		_cgbcd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bfcgb.ExtLst, _cgbcd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataType struct {

	// Metadata Type Name
	NameAttr string

	// Minimum Supported Version
	MinSupportedVersionAttr uint32

	// Metadata Ghost Row
	GhostRowAttr *bool

	// Metadata Ghost Column
	GhostColAttr *bool

	// Metadata Edit
	EditAttr *bool

	// Metadata Cell Value Delete
	DeleteAttr *bool

	// Metadata Copy
	CopyAttr *bool

	// Metadata Paste All
	PasteAllAttr *bool

	// Metadata Paste Formulas
	PasteFormulasAttr *bool

	// Metadata Paste Special Values
	PasteValuesAttr *bool

	// Metadata Paste Formats
	PasteFormatsAttr *bool

	// Metadata Paste Comments
	PasteCommentsAttr *bool

	// Metadata Paste Data Validation
	PasteDataValidationAttr *bool

	// Metadata Paste Borders
	PasteBordersAttr *bool

	// Metadata Paste Column Widths
	PasteColWidthsAttr *bool

	// Metadata Paste Number Formats
	PasteNumberFormatsAttr *bool

	// Metadata Merge
	MergeAttr *bool

	// Meatadata Split First
	SplitFirstAttr *bool

	// Metadata Split All
	SplitAllAttr *bool

	// Metadata Insert Delete
	RowColShiftAttr *bool

	// Metadata Clear All
	ClearAllAttr *bool

	// Metadata Clear Formats
	ClearFormatsAttr *bool

	// Metadata Clear Contents
	ClearContentsAttr *bool

	// Metadata Clear Comments
	ClearCommentsAttr *bool

	// Metadata Formula Assignment
	AssignAttr *bool

	// Metadata Coercion
	CoerceAttr *bool

	// Adjust Metadata
	AdjustAttr *bool

	// Cell Metadata
	CellMetaAttr *bool
}

type CT_CustomFilter struct {

	// Filter Comparison Operator
	OperatorAttr ST_FilterOperator

	// Top or Bottom Value
	ValAttr *string
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_feddb *CT_OleObject) ValidateWithPath(path string) error {
	if _ebdaf := _feddb.DvAspectAttr.ValidateWithPath(path + "\u002f\u0044\u0076\u0041\u0073\u0070\u0065\u0063\u0074\u0041\u0074\u0074\u0072"); _ebdaf != nil {
		return _ebdaf
	}
	if _bcdde := _feddb.OleUpdateAttr.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0055\u0070\u0064\u0061\u0074e\u0041\u0074\u0074\u0072"); _bcdde != nil {
		return _bcdde
	}
	if _feddb.ObjectPr != nil {
		if _gfdbc := _feddb.ObjectPr.ValidateWithPath(path + "\u002fO\u0062\u006a\u0065\u0063\u0074\u0050r"); _gfdbc != nil {
			return _gfdbc
		}
	}
	return nil
}

type CT_RevisionQueryTableField struct {

	// Sheet Id
	SheetIdAttr uint32

	// QueryTable Reference
	RefAttr string

	// Field Id
	FieldIdAttr uint32
}

func (_facaf *CT_Reviewed) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _facaf.RIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Metadata and its children
func (_bggae *Metadata) Validate() error {
	return _bggae.ValidateWithPath("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}

func (_bcbfe *CT_SheetId) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ceebf := range start.Attr {
		if _ceebf.Name.Local == "\u0076\u0061\u006c" {
			_acabe, _bbbdga := _a.ParseUint(_ceebf.Value, 10, 32)
			if _bbbdga != nil {
				return _bbbdga
			}
			_bcbfe.ValAttr = uint32(_acabe)
			continue
		}
	}
	for {
		_gccabb, _bdbfa := d.Token()
		if _bdbfa != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u003a\u0020%\u0073", _bdbfa)
		}
		if _bfaef, _gggfad := _gccabb.(_gd.EndElement); _gggfad && _bfaef.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_QueryTableFields() *CT_QueryTableFields { _cfecag := &CT_QueryTableFields{}; return _cfecag }

// ValidateWithPath validates the CT_CustomChartsheetView and its children, prefixing error messages with path
func (_ceafa *CT_CustomChartsheetView) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_ceafa.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _ceafa.GuidAttr)
	}
	if _faaa := _ceafa.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _faaa != nil {
		return _faaa
	}
	if _ceafa.PageMargins != nil {
		if _ggaef := _ceafa.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _ggaef != nil {
			return _ggaef
		}
	}
	if _ceafa.PageSetup != nil {
		if _cabdc := _ceafa.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _cabdc != nil {
			return _cabdc
		}
	}
	if _ceafa.HeaderFooter != nil {
		if _aebe := _ceafa.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _aebe != nil {
			return _aebe
		}
	}
	return nil
}

type ST_ShowDataAs byte

func (_cfdfc ST_SortBy) String() string {
	switch _cfdfc {
	case 0:
		return ""
	case 1:
		return "\u0076\u0061\u006cu\u0065"
	case 2:
		return "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case 3:
		return "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case 4:
		return "\u0069\u0063\u006f\u006e"
	}
	return ""
}

func (_fceca ST_FileType) String() string {
	switch _fceca {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u0063"
	case 2:
		return "\u0077\u0069\u006e"
	case 3:
		return "\u0064\u006f\u0073"
	case 4:
		return "\u006c\u0069\u006e"
	case 5:
		return "\u006f\u0074\u0068e\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_BookView and its children, prefixing error messages with path
func (_gg *CT_BookView) ValidateWithPath(path string) error {
	if _bbf := _gg.VisibilityAttr.ValidateWithPath(path + "\u002fV\u0069s\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0041\u0074\u0074\u0072"); _bbf != nil {
		return _bbf
	}
	if _gg.ExtLst != nil {
		if _eede := _gg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eede != nil {
			return _eede
		}
	}
	return nil
}

// ValidateWithPath validates the CT_X and its children, prefixing error messages with path
func (_bcgef *CT_X) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_VerticalAlignFontProperty and its children, prefixing error messages with path
func (_edgdb *CT_VerticalAlignFontProperty) ValidateWithPath(path string) error {
	if _edgdb.ValAttr == _af.ST_VerticalAlignRunUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fbagf := _edgdb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fbagf != nil {
		return _fbagf
	}
	return nil
}

type CT_CellSmartTag struct {

	// Smart Tag Type Index
	TypeAttr uint32

	// Deleted
	DeletedAttr *bool

	// XML Based
	XmlBasedAttr *bool

	// Smart Tag Properties
	CellSmartTagPr []*CT_CellSmartTagPr
}

type CT_OleObjects struct {

	// Embedded Object
	OleObject []*CT_OleObject
}

func (_fdgfe *CT_Record) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _fdgfe.M != nil {
		_gfgfb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _cabcb := range _fdgfe.M {
			e.EncodeElement(_cabcb, _gfgfb)
		}
	}
	if _fdgfe.N != nil {
		_abde := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _gdaf := range _fdgfe.N {
			e.EncodeElement(_gdaf, _abde)
		}
	}
	if _fdgfe.B != nil {
		_aedcda := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _bfddc := range _fdgfe.B {
			e.EncodeElement(_bfddc, _aedcda)
		}
	}
	if _fdgfe.E != nil {
		_fcbge := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _dgdeb := range _fdgfe.E {
			e.EncodeElement(_dgdeb, _fcbge)
		}
	}
	if _fdgfe.S != nil {
		_fadef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _fcfd := range _fdgfe.S {
			e.EncodeElement(_fcfd, _fadef)
		}
	}
	if _fdgfe.D != nil {
		_bddfb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _dbfaad := range _fdgfe.D {
			e.EncodeElement(_dbfaad, _bddfb)
		}
	}
	if _fdgfe.X != nil {
		_efacd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _gddda := range _fdgfe.X {
			e.EncodeElement(_gddda, _efacd)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TableStyleTypeUnset                  ST_TableStyleType = 0
	ST_TableStyleTypeWholeTable             ST_TableStyleType = 1
	ST_TableStyleTypeHeaderRow              ST_TableStyleType = 2
	ST_TableStyleTypeTotalRow               ST_TableStyleType = 3
	ST_TableStyleTypeFirstColumn            ST_TableStyleType = 4
	ST_TableStyleTypeLastColumn             ST_TableStyleType = 5
	ST_TableStyleTypeFirstRowStripe         ST_TableStyleType = 6
	ST_TableStyleTypeSecondRowStripe        ST_TableStyleType = 7
	ST_TableStyleTypeFirstColumnStripe      ST_TableStyleType = 8
	ST_TableStyleTypeSecondColumnStripe     ST_TableStyleType = 9
	ST_TableStyleTypeFirstHeaderCell        ST_TableStyleType = 10
	ST_TableStyleTypeLastHeaderCell         ST_TableStyleType = 11
	ST_TableStyleTypeFirstTotalCell         ST_TableStyleType = 12
	ST_TableStyleTypeLastTotalCell          ST_TableStyleType = 13
	ST_TableStyleTypeFirstSubtotalColumn    ST_TableStyleType = 14
	ST_TableStyleTypeSecondSubtotalColumn   ST_TableStyleType = 15
	ST_TableStyleTypeThirdSubtotalColumn    ST_TableStyleType = 16
	ST_TableStyleTypeFirstSubtotalRow       ST_TableStyleType = 17
	ST_TableStyleTypeSecondSubtotalRow      ST_TableStyleType = 18
	ST_TableStyleTypeThirdSubtotalRow       ST_TableStyleType = 19
	ST_TableStyleTypeBlankRow               ST_TableStyleType = 20
	ST_TableStyleTypeFirstColumnSubheading  ST_TableStyleType = 21
	ST_TableStyleTypeSecondColumnSubheading ST_TableStyleType = 22
	ST_TableStyleTypeThirdColumnSubheading  ST_TableStyleType = 23
	ST_TableStyleTypeFirstRowSubheading     ST_TableStyleType = 24
	ST_TableStyleTypeSecondRowSubheading    ST_TableStyleType = 25
	ST_TableStyleTypeThirdRowSubheading     ST_TableStyleType = 26
	ST_TableStyleTypePageFieldLabels        ST_TableStyleType = 27
	ST_TableStyleTypePageFieldValues        ST_TableStyleType = 28
)

type CT_Hyperlinks struct {

	// Hyperlink
	Hyperlink []*CT_Hyperlink
}

func (_gebg ST_BorderStyle) String() string {
	switch _gebg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0068\u0069\u006e"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d"
	case 4:
		return "\u0064\u0061\u0073\u0068\u0065\u0064"
	case 5:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 6:
		return "\u0074\u0068\u0069c\u006b"
	case 7:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 8:
		return "\u0068\u0061\u0069\u0072"
	case 9:
		return "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case 10:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 12:
		return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 13:
		return "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 14:
		return "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return ""
}

func (_edgag *ST_SheetViewType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_edgag = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_edgag = 1
	case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
		*_edgag = 2
	case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
		*_edgag = 3
	}
	return nil
}

// Validate validates the CT_SheetFormatPr and its children
func (_dgagg *CT_SheetFormatPr) Validate() error {
	return _dgagg.ValidateWithPath("\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072")
}

func NewCT_UnderlineProperty() *CT_UnderlineProperty { _adead := &CT_UnderlineProperty{}; return _adead }

func NewCT_CellSmartTags() *CT_CellSmartTags { _ccbc := &CT_CellSmartTags{}; return _ccbc }

func (_faee *CT_QueryTableFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _faee.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_faee.CountAttr)})
	}
	e.EncodeToken(start)
	if _faee.QueryTableField != nil {
		_fdaafc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003aq\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064"}}
		for _, _gdbbg := range _faee.QueryTableField {
			e.EncodeElement(_gdbbg, _fdaafc)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_FileVersion() *CT_FileVersion { _gfdfb := &CT_FileVersion{}; return _gfdfb }

func (_bdfeag *CT_ProtectedRanges) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bcagea:
	for {
		_cbaaf, _dbdfb := d.Token()
		if _dbdfb != nil {
			return _dbdfb
		}
		switch _bdfdaa := _cbaaf.(type) {
		case _gd.StartElement:
			switch _bdfdaa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}:
				_bgbda := NewCT_ProtectedRange()
				if _cagdg := d.DecodeElement(_bgbda, &_bdfdaa); _cagdg != nil {
					return _cagdg
				}
				_bdfeag.ProtectedRange = append(_bdfeag.ProtectedRange, _bgbda)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063t\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073\u0020\u0025\u0076", _bdfdaa.Name)
				if _bceee := d.Skip(); _bceee != nil {
					return _bceee
				}
			}
		case _gd.EndElement:
			break _bcagea
		case _gd.CharData:
		}
	}
	return nil
}

type CT_CustomChartsheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Visible State
	StateAttr ST_SheetState

	// Zoom To Fit
	ZoomToFitAttr *bool
	PageMargins   *CT_PageMargins

	// Chart Sheet Page Setup
	PageSetup    *CT_CsPageSetup
	HeaderFooter *CT_HeaderFooter
}

// ValidateWithPath validates the CT_WebPublishItems and its children, prefixing error messages with path
func (_ebdgb *CT_WebPublishItems) ValidateWithPath(path string) error {
	for _ccadec, _fadfd := range _ebdgb.WebPublishItem {
		if _acbcg := _fadfd.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0057\u0065bP\u0075b\u006c\u0069\u0073\u0068\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _ccadec)); _acbcg != nil {
			return _acbcg
		}
	}
	return nil
}

func (_dacee *CT_DataFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dacee.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dacee.CountAttr)})
	}
	e.EncodeToken(start)
	_gaba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ad\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064"}}
	for _, _cacfc := range _dacee.DataField {
		e.EncodeElement(_cacfc, _gaba)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_deaab *CT_ChartsheetPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _edbb := range start.Attr {
		if _edbb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_egdgc, _afdf := _a.ParseBool(_edbb.Value)
			if _afdf != nil {
				return _afdf
			}
			_deaab.PublishedAttr = &_egdgc
			continue
		}
		if _edbb.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_aafb, _edaf := _edbb.Value, error(nil)
			if _edaf != nil {
				return _edaf
			}
			_deaab.CodeNameAttr = &_aafb
			continue
		}
	}
_dbfe:
	for {
		_ggeec, _ceae := d.Token()
		if _ceae != nil {
			return _ceae
		}
		switch _ebfb := _ggeec.(type) {
		case _gd.StartElement:
			switch _ebfb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_deaab.TabColor = NewCT_Color()
				if _cfcb := d.DecodeElement(_deaab.TabColor, &_ebfb); _cfcb != nil {
					return _cfcb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _ebfb.Name)
				if _edcb := d.Skip(); _edcb != nil {
					return _edcb
				}
			}
		case _gd.EndElement:
			break _dbfe
		case _gd.CharData:
		}
	}
	return nil
}

func (_adgd *CT_CellSmartTag) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gcaf := range start.Attr {
		if _gcaf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fdg, _dedca := _a.ParseUint(_gcaf.Value, 10, 32)
			if _dedca != nil {
				return _dedca
			}
			_adgd.TypeAttr = uint32(_fdg)
			continue
		}
		if _gcaf.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_defa, _gbac := _a.ParseBool(_gcaf.Value)
			if _gbac != nil {
				return _gbac
			}
			_adgd.DeletedAttr = &_defa
			continue
		}
		if _gcaf.Name.Local == "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064" {
			_fbgc, _ggbb := _a.ParseBool(_gcaf.Value)
			if _ggbb != nil {
				return _ggbb
			}
			_adgd.XmlBasedAttr = &_fbgc
			continue
		}
	}
_dbfb:
	for {
		_defb, _fafg := d.Token()
		if _fafg != nil {
			return _fafg
		}
		switch _efce := _defb.(type) {
		case _gd.StartElement:
			switch _efce.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}:
				_cdgf := NewCT_CellSmartTagPr()
				if _bced := d.DecodeElement(_cdgf, &_efce); _bced != nil {
					return _bced
				}
				_adgd.CellSmartTagPr = append(_adgd.CellSmartTagPr, _cdgf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0020\u0025\u0076", _efce.Name)
				if _gedg := d.Skip(); _gedg != nil {
					return _gedg
				}
			}
		case _gd.EndElement:
			break _dbfb
		case _gd.CharData:
		}
	}
	return nil
}

func (_dfff *ST_FormatAction) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dfff = 0
	case "\u0062\u006c\u0061n\u006b":
		*_dfff = 1
	case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
		*_dfff = 2
	case "\u0064\u0072\u0069l\u006c":
		*_dfff = 3
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_dfff = 4
	}
	return nil
}

func NewCT_RevisionCustomView() *CT_RevisionCustomView {
	_egbb := &CT_RevisionCustomView{}
	_egbb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_egbb.ActionAttr = ST_RevisionAction(1)
	return _egbb
}

// Validate validates the CT_SmartTagType and its children
func (_gacfee *CT_SmartTagType) Validate() error {
	return _gacfee.ValidateWithPath("\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065")
}

func (_feede *ST_CredMethod) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_feede = 0
	case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
		*_feede = 1
	case "\u006e\u006f\u006e\u0065":
		*_feede = 2
	case "\u0073\u0074\u006f\u0072\u0065\u0064":
		*_feede = 3
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_feede = 4
	}
	return nil
}

func (_gdbf *CT_CacheFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gdbf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gdbf.CountAttr)})
	}
	e.EncodeToken(start)
	if _gdbf.CacheField != nil {
		_gcab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}}
		for _, _fff := range _gdbf.CacheField {
			e.EncodeElement(_fff, _gcab)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_Scope byte

func (_dbabaf ST_Type) ValidateWithPath(path string) error {
	switch _dbabaf {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbabaf))
	}
	return nil
}

func (_gffdbf *Users) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gffdbf.CT_Users = *NewCT_Users()
	for _, _eaadb := range start.Attr {
		if _eaadb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecabg, _ffbbc := _a.ParseUint(_eaadb.Value, 10, 32)
			if _ffbbc != nil {
				return _ffbbc
			}
			_aggcf := uint32(_ecabg)
			_gffdbf.CountAttr = &_aggcf
			continue
		}
	}
_fegbce:
	for {
		_decdee, _aebge := d.Token()
		if _aebge != nil {
			return _aebge
		}
		switch _edgae := _decdee.(type) {
		case _gd.StartElement:
			switch _edgae.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_dabaga := NewCT_SharedUser()
				if _eggbcg := d.DecodeElement(_dabaga, &_edgae); _eggbcg != nil {
					return _eggbcg
				}
				_gffdbf.UserInfo = append(_gffdbf.UserInfo, _dabaga)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0055\u0073\u0065r\u0073 \u0025\u0076", _edgae.Name)
				if _fabfef := d.Skip(); _fabfef != nil {
					return _fabfef
				}
			}
		case _gd.EndElement:
			break _fegbce
		case _gd.CharData:
		}
	}
	return nil
}

type CT_PivotAreaReference struct {

	// Field Index
	FieldAttr *uint32

	// Item Index Count
	CountAttr *uint32

	// Selected
	SelectedAttr *bool

	// Positional Reference
	ByPositionAttr *bool

	// Relative Reference
	RelativeAttr *bool

	// Include Default Filter
	DefaultSubtotalAttr *bool

	// Include Sum Filter
	SumSubtotalAttr *bool

	// Include CountA Filter
	CountASubtotalAttr *bool

	// Include Average Filter
	AvgSubtotalAttr *bool

	// Include Maximum Filter
	MaxSubtotalAttr *bool

	// Include Minimum Filter
	MinSubtotalAttr *bool

	// Include Product Filter
	ProductSubtotalAttr *bool

	// Include Count Subtotal
	CountSubtotalAttr *bool

	// Include StdDev Filter
	StdDevSubtotalAttr *bool

	// Include StdDevP Filter
	StdDevPSubtotalAttr *bool

	// Include Var Filter
	VarSubtotalAttr *bool

	// Include VarP Filter
	VarPSubtotalAttr *bool

	// Field Item
	X      []*CT_Index
	ExtLst *CT_ExtensionList
}

type ST_ParameterType byte

// ValidateWithPath validates the CT_SheetBackgroundPicture and its children, prefixing error messages with path
func (_dcfae *CT_SheetBackgroundPicture) ValidateWithPath(path string) error { return nil }

const (
	ST_SheetViewTypeUnset            ST_SheetViewType = 0
	ST_SheetViewTypeNormal           ST_SheetViewType = 1
	ST_SheetViewTypePageBreakPreview ST_SheetViewType = 2
	ST_SheetViewTypePageLayout       ST_SheetViewType = 3
)

// ValidateWithPath validates the Headers and its children, prefixing error messages with path
func (_edefb *Headers) ValidateWithPath(path string) error {
	if _dggfc := _edefb.CT_RevisionHeaders.ValidateWithPath(path); _dggfc != nil {
		return _dggfc
	}
	return nil
}

// Validate validates the CT_MeasureDimensionMap and its children
func (_ffgfb *CT_MeasureDimensionMap) Validate() error {
	return _ffgfb.ValidateWithPath("\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070")
}

func (_agfb *CT_CalculatedItem) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_agfb.PivotArea = NewCT_PivotArea()
	for _, _cade := range start.Attr {
		if _cade.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_bacag, _gbc := _a.ParseUint(_cade.Value, 10, 32)
			if _gbc != nil {
				return _gbc
			}
			_cdgb := uint32(_bacag)
			_agfb.FieldAttr = &_cdgb
			continue
		}
		if _cade.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_efaa, _agbb := _cade.Value, error(nil)
			if _agbb != nil {
				return _agbb
			}
			_agfb.FormulaAttr = &_efaa
			continue
		}
	}
_ddga:
	for {
		_begb, _afb := d.Token()
		if _afb != nil {
			return _afb
		}
		switch _ggg := _begb.(type) {
		case _gd.StartElement:
			switch _ggg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _gfga := d.DecodeElement(_agfb.PivotArea, &_ggg); _gfga != nil {
					return _gfga
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agfb.ExtLst = NewCT_ExtensionList()
				if _ecc := d.DecodeElement(_agfb.ExtLst, &_ggg); _ecc != nil {
					return _ecc
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _ggg.Name)
				if _ddaf := d.Skip(); _ddaf != nil {
					return _ddaf
				}
			}
		case _gd.EndElement:
			break _ddga
		case _gd.CharData:
		}
	}
	return nil
}

type CT_ChartsheetViews struct {

	// Chart Sheet View
	SheetView []*CT_ChartsheetView
	ExtLst    *CT_ExtensionList
}

// Validate validates the CT_RevisionCellChange and its children
func (_ebgddbg *CT_RevisionCellChange) Validate() error {
	return _ebgddbg.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065")
}

func (_dbcfda ST_ConditionalFormattingOperator) ValidateWithPath(path string) error {
	switch _dbcfda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbcfda))
	}
	return nil
}

type CT_Col struct {

	// Minimum Column
	MinAttr uint32

	// Maximum Column
	MaxAttr uint32

	// Column Width
	WidthAttr *float64

	// Style
	StyleAttr *uint32

	// Hidden Columns
	HiddenAttr *bool

	// Best Fit Column Width
	BestFitAttr *bool

	// Custom Width
	CustomWidthAttr *bool

	// Show Phonetic Information
	PhoneticAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool
}

func (_afddeb ST_DataValidationImeMode) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_afddeb.String(), start)
}

// Validate validates the CT_PageFields and its children
func (_bggcg *CT_PageFields) Validate() error {
	return _bggcg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

func NewCT_Scenarios() *CT_Scenarios { _bbafb := &CT_Scenarios{}; return _bbafb }

func (_ffde *CT_CustomWorkbookViews) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_adgae := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _fcgff := range _ffde.CustomWorkbookView {
		e.EncodeElement(_fcgff, _adgae)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_aeecfb ST_FileType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_aeecfb.String(), start)
}

func (_dgedg *ST_Comments) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gbccc, _ebccg := d.Token()
	if _ebccg != nil {
		return _ebccg
	}
	if _dgfdc, _bfadd := _gbccc.(_gd.EndElement); _bfadd && _dgfdc.Name == start.Name {
		*_dgedg = 1
		return nil
	}
	if _gcefbb, _cdbdc := _gbccc.(_gd.CharData); !_cdbdc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbccc)
	} else {
		switch string(_gcefbb) {
		case "":
			*_dgedg = 0
		case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
			*_dgedg = 1
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_dgedg = 2
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
			*_dgedg = 3
		}
	}
	_gbccc, _ebccg = d.Token()
	if _ebccg != nil {
		return _ebccg
	}
	if _cgacg, _ecfge := _gbccc.(_gd.EndElement); _ecfge && _cgacg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbccc)
}

func (_cbbfe ST_GrowShrinkType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_eggaf := _gd.Attr{}
	_eggaf.Name = name
	switch _cbbfe {
	case ST_GrowShrinkTypeUnset:
		_eggaf.Value = ""
	case ST_GrowShrinkTypeInsertDelete:
		_eggaf.Value = "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case ST_GrowShrinkTypeInsertClear:
		_eggaf.Value = "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case ST_GrowShrinkTypeOverwriteClear:
		_eggaf.Value = "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return _eggaf, nil
}

func (_agdbcc *ST_ItemType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cbeca, _fccac := d.Token()
	if _fccac != nil {
		return _fccac
	}
	if _bgadeg, _abcaf := _cbeca.(_gd.EndElement); _abcaf && _bgadeg.Name == start.Name {
		*_agdbcc = 1
		return nil
	}
	if _adcgg, _cfafg := _cbeca.(_gd.CharData); !_cfafg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbeca)
	} else {
		switch string(_adcgg) {
		case "":
			*_agdbcc = 0
		case "\u0064\u0061\u0074\u0061":
			*_agdbcc = 1
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_agdbcc = 2
		case "\u0073\u0075\u006d":
			*_agdbcc = 3
		case "\u0063\u006f\u0075\u006e\u0074\u0041":
			*_agdbcc = 4
		case "\u0061\u0076\u0067":
			*_agdbcc = 5
		case "\u006d\u0061\u0078":
			*_agdbcc = 6
		case "\u006d\u0069\u006e":
			*_agdbcc = 7
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_agdbcc = 8
		case "\u0063\u006f\u0075n\u0074":
			*_agdbcc = 9
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_agdbcc = 10
		case "\u0073t\u0064\u0044\u0065\u0076\u0050":
			*_agdbcc = 11
		case "\u0076\u0061\u0072":
			*_agdbcc = 12
		case "\u0076\u0061\u0072\u0050":
			*_agdbcc = 13
		case "\u0067\u0072\u0061n\u0064":
			*_agdbcc = 14
		case "\u0062\u006c\u0061n\u006b":
			*_agdbcc = 15
		}
	}
	_cbeca, _fccac = d.Token()
	if _fccac != nil {
		return _fccac
	}
	if _cdccb, _ecbgcb := _cbeca.(_gd.EndElement); _ecbgcb && _cdccb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbeca)
}

func NewCT_Comment() *CT_Comment { _bccf := &CT_Comment{}; _bccf.Text = NewCT_Rst(); return _bccf }

type CT_Colors struct {

	// Color Indexes
	IndexedColors *CT_IndexedColors

	// MRU Colors
	MruColors *CT_MRUColors
}

func (_cbedd *CT_FontScheme) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cbedd.ValAttr = ST_FontScheme(1)
	for _, _afadc := range start.Attr {
		if _afadc.Name.Local == "\u0076\u0061\u006c" {
			_cbedd.ValAttr.UnmarshalXMLAttr(_afadc)
			continue
		}
	}
	for {
		_eedfg, _gbeaf := d.Token()
		if _gbeaf != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0053c\u0068\u0065\u006d\u0065\u003a\u0020\u0025s", _gbeaf)
		}
		if _gdda, _cffafa := _eedfg.(_gd.EndElement); _cffafa && _gdda.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aceb *CT_FieldUsage) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _baccc := range start.Attr {
		if _baccc.Name.Local == "\u0078" {
			_bfaae, _daacg := _a.ParseInt(_baccc.Value, 10, 32)
			if _daacg != nil {
				return _daacg
			}
			_aceb.XAttr = int32(_bfaae)
			continue
		}
	}
	for {
		_edged, _cbcg := d.Token()
		if _cbcg != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046i\u0065l\u0064U\u0073\u0061\u0067\u0065\u003a\u0020\u0025s", _cbcg)
		}
		if _agde, _dgdbg := _edged.(_gd.EndElement); _dgdbg && _agde.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ServerFormat() *CT_ServerFormat { _gggcd := &CT_ServerFormat{}; return _gggcd }

type CT_GradientFill struct {

	// Gradient Fill Type
	TypeAttr ST_GradientType

	// Linear Gradient Degree
	DegreeAttr *float64

	// Left Convergence
	LeftAttr *float64

	// Right Convergence
	RightAttr *float64

	// Top Gradient Convergence
	TopAttr *float64

	// Bottom Convergence
	BottomAttr *float64

	// Gradient Stop
	Stop []*CT_GradientStop
}

type CT_PCDKPIs struct {

	// KPI Count
	CountAttr *uint32

	// OLAP KPI
	Kpi []*CT_PCDKPI
}

const (
	ST_ScopeUnset     ST_Scope = 0
	ST_ScopeSelection ST_Scope = 1
	ST_ScopeData      ST_Scope = 2
	ST_ScopeField     ST_Scope = 3
)

// ValidateWithPath validates the CT_Format and its children, prefixing error messages with path
func (_bbecc *CT_Format) ValidateWithPath(path string) error {
	if _defe := _bbecc.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _defe != nil {
		return _defe
	}
	if _bacefg := _bbecc.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bacefg != nil {
		return _bacefg
	}
	if _bbecc.ExtLst != nil {
		if _ebfc := _bbecc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebfc != nil {
			return _ebfc
		}
	}
	return nil
}

// Validate validates the CT_MetadataType and its children
func (_adcec *CT_MetadataType) Validate() error {
	return _adcec.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065")
}

func (_bcgca *CT_DbPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bdcae := range start.Attr {
		if _bdcae.Name.Local == "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_cdgcd, _bdceb := _bdcae.Value, error(nil)
			if _bdceb != nil {
				return _bdceb
			}
			_bcgca.ConnectionAttr = _cdgcd
			continue
		}
		if _bdcae.Name.Local == "\u0063o\u006d\u006d\u0061\u006e\u0064" {
			_babca, _daca := _bdcae.Value, error(nil)
			if _daca != nil {
				return _daca
			}
			_bcgca.CommandAttr = &_babca
			continue
		}
		if _bdcae.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064" {
			_degga, _cbebc := _bdcae.Value, error(nil)
			if _cbebc != nil {
				return _cbebc
			}
			_bcgca.ServerCommandAttr = &_degga
			continue
		}
		if _bdcae.Name.Local == "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065" {
			_fdbdff, _bcbdg := _a.ParseUint(_bdcae.Value, 10, 32)
			if _bcbdg != nil {
				return _bcbdg
			}
			_fbebb := uint32(_fdbdff)
			_bcgca.CommandTypeAttr = &_fbebb
			continue
		}
	}
	for {
		_ffce, _aegg := d.Token()
		if _aegg != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0062\u0050\u0072\u003a\u0020\u0025\u0073", _aegg)
		}
		if _eebg, _ddfc := _ffce.(_gd.EndElement); _ddfc && _eebg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gcdebd *ST_VolValueType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bacfa, _bbcbg := d.Token()
	if _bbcbg != nil {
		return _bbcbg
	}
	if _aegaca, _fegce := _bacfa.(_gd.EndElement); _fegce && _aegaca.Name == start.Name {
		*_gcdebd = 1
		return nil
	}
	if _gfecf, _gdcdbd := _bacfa.(_gd.CharData); !_gdcdbd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bacfa)
	} else {
		switch string(_gfecf) {
		case "":
			*_gcdebd = 0
		case "\u0062":
			*_gcdebd = 1
		case "\u006e":
			*_gcdebd = 2
		case "\u0065":
			*_gcdebd = 3
		case "\u0073":
			*_gcdebd = 4
		}
	}
	_bacfa, _bbcbg = d.Token()
	if _bbcbg != nil {
		return _bbcbg
	}
	if _bfecd, _cfafa := _bacfa.(_gd.EndElement); _cfafa && _bfecd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bacfa)
}

func (_begg *CT_CacheHierarchies) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _begg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_begg.CountAttr)})
	}
	e.EncodeToken(start)
	if _begg.CacheHierarchy != nil {
		_gfce := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
		for _, _bdf := range _begg.CacheHierarchy {
			e.EncodeElement(_bdf, _gfce)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalcChain and its children
func (_eaacd *CT_CalcChain) Validate() error {
	return _eaacd.ValidateWithPath("\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e")
}

func (_gfbcf ST_SmartTagShow) Validate() error { return _gfbcf.ValidateWithPath("") }

func (_bbfbfg *ST_VolDepType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fdgaeg, _dfecfb := d.Token()
	if _dfecfb != nil {
		return _dfecfb
	}
	if _ggdba, _efddgc := _fdgaeg.(_gd.EndElement); _efddgc && _ggdba.Name == start.Name {
		*_bbfbfg = 1
		return nil
	}
	if _dcgdd, _cedcd := _fdgaeg.(_gd.CharData); !_cedcd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdgaeg)
	} else {
		switch string(_dcgdd) {
		case "":
			*_bbfbfg = 0
		case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
			*_bbfbfg = 1
		case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
			*_bbfbfg = 2
		}
	}
	_fdgaeg, _dfecfb = d.Token()
	if _dfecfb != nil {
		return _dfecfb
	}
	if _bacca, _gbdbcd := _fdgaeg.(_gd.EndElement); _gbdbcd && _bacca.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdgaeg)
}

func (_bbcfgb *CT_TextFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bcedf := range start.Attr {
		if _bcedf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggdaec, _dgbaa := _a.ParseUint(_bcedf.Value, 10, 32)
			if _dgbaa != nil {
				return _dgbaa
			}
			_agfgc := uint32(_ggdaec)
			_bbcfgb.CountAttr = &_agfgc
			continue
		}
	}
_cgaec:
	for {
		_ffeea, _ceffe := d.Token()
		if _ceffe != nil {
			return _ceffe
		}
		switch _cegca := _ffeea.(type) {
		case _gd.StartElement:
			switch _cegca.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}:
				_bcdbea := NewCT_TextField()
				if _gbeeaea := d.DecodeElement(_bcdbea, &_cegca); _gbeeaea != nil {
					return _gbeeaea
				}
				_bbcfgb.TextField = append(_bbcfgb.TextField, _bcdbea)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054e\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _cegca.Name)
				if _afbbea := d.Skip(); _afbbea != nil {
					return _afbbea
				}
			}
		case _gd.EndElement:
			break _cgaec
		case _gd.CharData:
		}
	}
	return nil
}

func (_bgfcc *CT_DefinedName) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gfgfd := range start.Attr {
		if _gfgfd.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dfgba, _aagdc := _a.ParseBool(_gfgfd.Value)
			if _aagdc != nil {
				return _aagdc
			}
			_bgfcc.HiddenAttr = &_dfgba
			continue
		}
		if _gfgfd.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_bgcde, _dbcae := _a.ParseBool(_gfgfd.Value)
			if _dbcae != nil {
				return _dbcae
			}
			_bgfcc.FunctionAttr = &_bgcde
			continue
		}
		if _gfgfd.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_cdfd, _gcbbc := _gfgfd.Value, error(nil)
			if _gcbbc != nil {
				return _gcbbc
			}
			_bgfcc.CommentAttr = &_cdfd
			continue
		}
		if _gfgfd.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_fdddg, _cdad := _gfgfd.Value, error(nil)
			if _cdad != nil {
				return _cdad
			}
			_bgfcc.DescriptionAttr = &_fdddg
			continue
		}
		if _gfgfd.Name.Local == "\u0068\u0065\u006c\u0070" {
			_aefg, _cfdcg := _gfgfd.Value, error(nil)
			if _cfdcg != nil {
				return _cfdcg
			}
			_bgfcc.HelpAttr = &_aefg
			continue
		}
		if _gfgfd.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_dafad, _eefbg := _gfgfd.Value, error(nil)
			if _eefbg != nil {
				return _eefbg
			}
			_bgfcc.StatusBarAttr = &_dafad
			continue
		}
		if _gfgfd.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_aebdgd, _aeaf := _a.ParseUint(_gfgfd.Value, 10, 32)
			if _aeaf != nil {
				return _aeaf
			}
			_ccfab := uint32(_aebdgd)
			_bgfcc.LocalSheetIdAttr = &_ccfab
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aaeab, _badgga := _gfgfd.Value, error(nil)
			if _badgga != nil {
				return _badgga
			}
			_bgfcc.NameAttr = _aaeab
			continue
		}
		if _gfgfd.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_bfgga, _effad := _gfgfd.Value, error(nil)
			if _effad != nil {
				return _effad
			}
			_bgfcc.CustomMenuAttr = &_bfgga
			continue
		}
		if _gfgfd.Name.Local == "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065" {
			_aebeg, _agdff := _a.ParseBool(_gfgfd.Value)
			if _agdff != nil {
				return _agdff
			}
			_bgfcc.VbProcedureAttr = &_aebeg
			continue
		}
		if _gfgfd.Name.Local == "\u0078\u006c\u006d" {
			_fegga, _bfffb := _a.ParseBool(_gfgfd.Value)
			if _bfffb != nil {
				return _bfffb
			}
			_bgfcc.XlmAttr = &_fegga
			continue
		}
		if _gfgfd.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_dbdd, _dgga := _a.ParseUint(_gfgfd.Value, 10, 32)
			if _dgga != nil {
				return _dgga
			}
			_fdbbb := uint32(_dbdd)
			_bgfcc.FunctionGroupIdAttr = &_fdbbb
			continue
		}
		if _gfgfd.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_dggf, _aecd := _gfgfd.Value, error(nil)
			if _aecd != nil {
				return _aecd
			}
			_bgfcc.ShortcutKeyAttr = &_dggf
			continue
		}
		if _gfgfd.Name.Local == "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072" {
			_cfbdg, _fdcg := _a.ParseBool(_gfgfd.Value)
			if _fdcg != nil {
				return _fdcg
			}
			_bgfcc.PublishToServerAttr = &_cfbdg
			continue
		}
		if _gfgfd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072" {
			_ffeab, _gdfde := _a.ParseBool(_gfgfd.Value)
			if _gdfde != nil {
				return _gdfde
			}
			_bgfcc.WorkbookParameterAttr = &_ffeab
			continue
		}
	}
	for {
		_faagd, _abfd := d.Token()
		if _abfd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065:\u0020\u0025\u0073", _abfd)
		}
		if _fcedb, _cgccb := _faagd.(_gd.CharData); _cgccb {
			_bgfcc.Content = string(_fcedb)
		}
		if _bgdd, _dgba := _faagd.(_gd.EndElement); _dgba && _bgdd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Dimensions and its children
func (_efbg *CT_Dimensions) Validate() error {
	return _efbg.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073")
}

func NewCT_ProtectedRanges() *CT_ProtectedRanges { _begcfb := &CT_ProtectedRanges{}; return _begcfb }

// Validate validates the CT_OleObjects and its children
func (_ecaab *CT_OleObjects) Validate() error {
	return _ecaab.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073")
}

func (_cdacag ST_SmartTagShow) String() string {
	switch _cdacag {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return ""
}

// Validate validates the CT_MergeCell and its children
func (_gacga *CT_MergeCell) Validate() error {
	return _gacga.ValidateWithPath("\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c")
}

// Validate validates the CT_CalcPr and its children
func (_dbgga *CT_CalcPr) Validate() error {
	return _dbgga.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r")
}

func NewCT_FontFamily() *CT_FontFamily { _dbcc := &CT_FontFamily{}; _dbcc.ValAttr = 0; return _dbcc }

type CT_RangePr struct {

	// Source Data Set Beginning Range
	AutoStartAttr *bool

	// Source Data Ending Range
	AutoEndAttr *bool

	// Group By
	GroupByAttr ST_GroupBy

	// Numeric Grouping Start Value
	StartNumAttr *float64

	// Numeric Grouping End Value
	EndNumAttr *float64

	// Date Grouping Start Value
	StartDateAttr *_db.Time

	// Date Grouping End Value
	EndDateAttr *_db.Time

	// Grouping Interval
	GroupIntervalAttr *float64
}

// ValidateWithPath validates the CT_ExternalDefinedName and its children, prefixing error messages with path
func (_gbdbce *CT_ExternalDefinedName) ValidateWithPath(path string) error { return nil }

func (_fgfabb *CT_ProtectedRanges) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_gagfe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}}
	for _, _faffa := range _fgfabb.ProtectedRange {
		e.EncodeElement(_faffa, _gagfe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Worksheet and its children, prefixing error messages with path
func (_cbgcbag *Worksheet) ValidateWithPath(path string) error {
	if _cedcf := _cbgcbag.CT_Worksheet.ValidateWithPath(path); _cedcf != nil {
		return _cedcf
	}
	return nil
}

func NewCT_Scenario() *CT_Scenario { _eebeb := &CT_Scenario{}; return _eebeb }

func NewCT_VolTopicRef() *CT_VolTopicRef { _dfedc := &CT_VolTopicRef{}; return _dfedc }

func NewCT_BookView() *CT_BookView { _dfbd := &CT_BookView{}; return _dfbd }

func (_aeacd *CT_Table) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _aeacd.IdAttr)})
	if _aeacd.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.NameAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _aeacd.DisplayNameAttr)})
	if _aeacd.CommentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.CommentAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _aeacd.RefAttr)})
	if _aeacd.TableTypeAttr != ST_TableTypeUnset {
		_eebfa, _gbeea := _aeacd.TableTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e"})
		if _gbeea != nil {
			return _gbeea
		}
		start.Attr = append(start.Attr, _eebfa)
	}
	if _aeacd.HeaderRowCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.HeaderRowCountAttr)})
	}
	if _aeacd.InsertRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aeacd.InsertRowAttr))})
	}
	if _aeacd.InsertRowShiftAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aeacd.InsertRowShiftAttr))})
	}
	if _aeacd.TotalsRowCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.TotalsRowCountAttr)})
	}
	if _aeacd.TotalsRowShownAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aeacd.TotalsRowShownAttr))})
	}
	if _aeacd.PublishedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aeacd.PublishedAttr))})
	}
	if _aeacd.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.HeaderRowDxfIdAttr)})
	}
	if _aeacd.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.DataDxfIdAttr)})
	}
	if _aeacd.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.TotalsRowDxfIdAttr)})
	}
	if _aeacd.HeaderRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.HeaderRowBorderDxfIdAttr)})
	}
	if _aeacd.TableBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.TableBorderDxfIdAttr)})
	}
	if _aeacd.TotalsRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.TotalsRowBorderDxfIdAttr)})
	}
	if _aeacd.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.HeaderRowCellStyleAttr)})
	}
	if _aeacd.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.DataCellStyleAttr)})
	}
	if _aeacd.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.TotalsRowCellStyleAttr)})
	}
	if _aeacd.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aeacd.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _aeacd.AutoFilter != nil {
		_eabgf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_aeacd.AutoFilter, _eabgf)
	}
	if _aeacd.SortState != nil {
		_bbgeba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_aeacd.SortState, _bbgeba)
	}
	_gfgga := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003at\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}}
	e.EncodeElement(_aeacd.TableColumns, _gfgga)
	if _aeacd.TableStyleInfo != nil {
		_ccaae := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_aeacd.TableStyleInfo, _ccaae)
	}
	if _aeacd.ExtLst != nil {
		_egfggg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aeacd.ExtLst, _egfggg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Groups() *CT_Groups { _gabff := &CT_Groups{}; return _gabff }

func NewCT_PivotCacheRecords() *CT_PivotCacheRecords { _egeef := &CT_PivotCacheRecords{}; return _egeef }

func (_cfbbd ST_GrowShrinkType) String() string {
	switch _cfbbd {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case 2:
		return "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case 3:
		return "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_pivotTableDefinition and its children, prefixing error messages with path
func (_fcdgf *CT_pivotTableDefinition) ValidateWithPath(path string) error {
	if _fecdg := _fcdgf.Location.ValidateWithPath(path + "\u002fL\u006f\u0063\u0061\u0074\u0069\u006fn"); _fecdg != nil {
		return _fecdg
	}
	if _fcdgf.PivotFields != nil {
		if _faagfb := _fcdgf.PivotFields.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _faagfb != nil {
			return _faagfb
		}
	}
	if _fcdgf.RowFields != nil {
		if _fadagf := _fcdgf.RowFields.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"); _fadagf != nil {
			return _fadagf
		}
	}
	if _fcdgf.RowItems != nil {
		if _dfgcaf := _fcdgf.RowItems.ValidateWithPath(path + "\u002fR\u006f\u0077\u0049\u0074\u0065\u006ds"); _dfgcaf != nil {
			return _dfgcaf
		}
	}
	if _fcdgf.ColFields != nil {
		if _ddbfd := _fcdgf.ColFields.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"); _ddbfd != nil {
			return _ddbfd
		}
	}
	if _fcdgf.ColItems != nil {
		if _cafbb := _fcdgf.ColItems.ValidateWithPath(path + "\u002fC\u006f\u006c\u0049\u0074\u0065\u006ds"); _cafbb != nil {
			return _cafbb
		}
	}
	if _fcdgf.PageFields != nil {
		if _bacgc := _fcdgf.PageFields.ValidateWithPath(path + "/\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _bacgc != nil {
			return _bacgc
		}
	}
	if _fcdgf.DataFields != nil {
		if _befdeg := _fcdgf.DataFields.ValidateWithPath(path + "/\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"); _befdeg != nil {
			return _befdeg
		}
	}
	if _fcdgf.Formats != nil {
		if _eedfgb := _fcdgf.Formats.ValidateWithPath(path + "\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _eedfgb != nil {
			return _eedfgb
		}
	}
	if _fcdgf.ConditionalFormats != nil {
		if _egaaag := _fcdgf.ConditionalFormats.ValidateWithPath(path + "\u002f\u0043\u006f\u006edi\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _egaaag != nil {
			return _egaaag
		}
	}
	if _fcdgf.ChartFormats != nil {
		if _bgadbg := _fcdgf.ChartFormats.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _bgadbg != nil {
			return _bgadbg
		}
	}
	if _fcdgf.PivotHierarchies != nil {
		if _fadab := _fcdgf.PivotHierarchies.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _fadab != nil {
			return _fadab
		}
	}
	if _fcdgf.PivotTableStyleInfo != nil {
		if _efbae := _fcdgf.PivotTableStyleInfo.ValidateWithPath(path + "/\u0050i\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065In\u0066\u006f"); _efbae != nil {
			return _efbae
		}
	}
	if _fcdgf.Filters != nil {
		if _afacc := _fcdgf.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _afacc != nil {
			return _afacc
		}
	}
	if _fcdgf.RowHierarchiesUsage != nil {
		if _beaage := _fcdgf.RowHierarchiesUsage.ValidateWithPath(path + "/\u0052o\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _beaage != nil {
			return _beaage
		}
	}
	if _fcdgf.ColHierarchiesUsage != nil {
		if _feffbe := _fcdgf.ColHierarchiesUsage.ValidateWithPath(path + "/\u0043o\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _feffbe != nil {
			return _feffbe
		}
	}
	if _fcdgf.ExtLst != nil {
		if _deefde := _fcdgf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deefde != nil {
			return _deefde
		}
	}
	return nil
}

func NewCT_CustomWorkbookView() *CT_CustomWorkbookView {
	_ddgb := &CT_CustomWorkbookView{}
	_ddgb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _ddgb
}

func (_cdbfg *CT_CellSmartTags) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _deee := range start.Attr {
		if _deee.Name.Local == "\u0072" {
			_bega, _fcec := _deee.Value, error(nil)
			if _fcec != nil {
				return _fcec
			}
			_cdbfg.RAttr = _bega
			continue
		}
	}
_bagg:
	for {
		_deegd, _gaag := d.Token()
		if _gaag != nil {
			return _gaag
		}
		switch _gccab := _deegd.(type) {
		case _gd.StartElement:
			switch _gccab.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}:
				_fggda := NewCT_CellSmartTag()
				if _ggde := d.DecodeElement(_fggda, &_gccab); _ggde != nil {
					return _ggde
				}
				_cdbfg.CellSmartTag = append(_cdbfg.CellSmartTag, _fggda)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073\u0020\u0025v", _gccab.Name)
				if _dfbg := d.Skip(); _dfbg != nil {
					return _dfbg
				}
			}
		case _gd.EndElement:
			break _bagg
		case _gd.CharData:
		}
	}
	return nil
}

func (_fbcfc *CT_XStringElement) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", _fbcfc.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bcdbb *ST_OleUpdate) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_agdca, _fcfbbea := d.Token()
	if _fcfbbea != nil {
		return _fcfbbea
	}
	if _bgdgge, _dgbfd := _agdca.(_gd.EndElement); _dgbfd && _bgdgge.Name == start.Name {
		*_bcdbb = 1
		return nil
	}
	if _faeef, _fdbee := _agdca.(_gd.CharData); !_fdbee {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agdca)
	} else {
		switch string(_faeef) {
		case "":
			*_bcdbb = 0
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
			*_bcdbb = 1
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
			*_bcdbb = 2
		}
	}
	_agdca, _fcfbbea = d.Token()
	if _fcfbbea != nil {
		return _fcfbbea
	}
	if _ccbcf, _dfcdb := _agdca.(_gd.EndElement); _dfcdb && _ccbcf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agdca)
}

// Validate validates the CT_RangeSets and its children
func (_fcgcfa *CT_RangeSets) Validate() error {
	return _fcgcfa.ValidateWithPath("\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073")
}

type CT_ExternalSheetName struct {

	// Sheet Name Value
	ValAttr *string
}

// ValidateWithPath validates the CT_PhoneticRun and its children, prefixing error messages with path
func (_cfagf *CT_PhoneticRun) ValidateWithPath(path string) error { return nil }

type PivotCacheDefinition struct{ CT_PivotCacheDefinition }

func (_bbfe *CT_CacheField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dab := range start.Attr {
		if _dab.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_ddg, _faefb := _a.ParseInt(_dab.Value, 10, 32)
			if _faefb != nil {
				return _faefb
			}
			_bba := int32(_ddg)
			_bbfe.HierarchyAttr = &_bba
			continue
		}
		if _dab.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_fegb, _eaaea := _a.ParseUint(_dab.Value, 10, 32)
			if _eaaea != nil {
				return _eaaea
			}
			_fgb := uint32(_fegb)
			_bbfe.LevelAttr = &_fgb
			continue
		}
		if _dab.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_eaeec, _edb := _dab.Value, error(nil)
			if _edb != nil {
				return _edb
			}
			_bbfe.CaptionAttr = &_eaeec
			continue
		}
		if _dab.Name.Local == "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064" {
			_gdge, _dea := _a.ParseBool(_dab.Value)
			if _dea != nil {
				return _dea
			}
			_bbfe.DatabaseFieldAttr = &_gdge
			continue
		}
		if _dab.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_bbga, _aga := _a.ParseBool(_dab.Value)
			if _aga != nil {
				return _aga
			}
			_bbfe.ServerFieldAttr = &_bbga
			continue
		}
		if _dab.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_gfd, _abbgc := _a.ParseUint(_dab.Value, 10, 32)
			if _abbgc != nil {
				return _abbgc
			}
			_dabg := uint32(_gfd)
			_bbfe.NumFmtIdAttr = &_dabg
			continue
		}
		if _dab.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_adb, _acca := _dab.Value, error(nil)
			if _acca != nil {
				return _acca
			}
			_bbfe.FormulaAttr = &_adb
			continue
		}
		if _dab.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_cfgeg, _aec := _a.ParseInt(_dab.Value, 10, 32)
			if _aec != nil {
				return _aec
			}
			_abac := int32(_cfgeg)
			_bbfe.SqlTypeAttr = &_abac
			continue
		}
		if _dab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gag, _dba := _dab.Value, error(nil)
			if _dba != nil {
				return _dba
			}
			_bbfe.NameAttr = _gag
			continue
		}
		if _dab.Name.Local == "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065" {
			_bfgf, _cfa := _dab.Value, error(nil)
			if _cfa != nil {
				return _cfa
			}
			_bbfe.PropertyNameAttr = &_bfgf
			continue
		}
		if _dab.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074" {
			_dbgg, _agd := _a.ParseBool(_dab.Value)
			if _agd != nil {
				return _agd
			}
			_bbfe.UniqueListAttr = &_dbgg
			continue
		}
		if _dab.Name.Local == "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074" {
			_agfa, _fgbf := _a.ParseUint(_dab.Value, 10, 32)
			if _fgbf != nil {
				return _fgbf
			}
			_ceb := uint32(_agfa)
			_bbfe.MappingCountAttr = &_ceb
			continue
		}
		if _dab.Name.Local == "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064" {
			_bdc, _dbd := _a.ParseBool(_dab.Value)
			if _dbd != nil {
				return _dbd
			}
			_bbfe.MemberPropertyFieldAttr = &_bdc
			continue
		}
	}
_eage:
	for {
		_ceef, _adeg := d.Token()
		if _adeg != nil {
			return _adeg
		}
		switch _bbe := _ceef.(type) {
		case _gd.StartElement:
			switch _bbe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_bbfe.SharedItems = NewCT_SharedItems()
				if _fbdf := d.DecodeElement(_bbfe.SharedItems, &_bbe); _fbdf != nil {
					return _fbdf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}:
				_bbfe.FieldGroup = NewCT_FieldGroup()
				if _agc := d.DecodeElement(_bbfe.FieldGroup, &_bbe); _agc != nil {
					return _agc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}:
				_ggbe := NewCT_X()
				if _bfd := d.DecodeElement(_ggbe, &_bbe); _bfd != nil {
					return _bfd
				}
				_bbfe.MpMap = append(_bbfe.MpMap, _ggbe)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbfe.ExtLst = NewCT_ExtensionList()
				if _gefab := d.DecodeElement(_bbfe.ExtLst, &_bbe); _gefab != nil {
					return _gefab
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043a\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _bbe.Name)
				if _ada := d.Skip(); _ada != nil {
					return _ada
				}
			}
		case _gd.EndElement:
			break _eage
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ProtectedRanges and its children, prefixing error messages with path
func (_degca *CT_ProtectedRanges) ValidateWithPath(path string) error {
	for _gfefa, _ecgeb := range _degca.ProtectedRange {
		if _ceafe := _ecgeb.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0050\u0072ot\u0065c\u0074\u0065\u0064\u0052\u0061n\u0067\u0065\u005b\u0025\u0064\u005d", path, _gfefa)); _ceafe != nil {
			return _ceafe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotSelection and its children, prefixing error messages with path
func (_aafba *CT_PivotSelection) ValidateWithPath(path string) error {
	if _bfgb := _aafba.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _bfgb != nil {
		return _bfgb
	}
	if _gfeca := _aafba.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _gfeca != nil {
		return _gfeca
	}
	if _bfadae := _aafba.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bfadae != nil {
		return _bfadae
	}
	return nil
}

func NewCT_MetadataBlocks() *CT_MetadataBlocks { _gdcdb := &CT_MetadataBlocks{}; return _gdcdb }

func (_dadcb *ST_SheetState) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_efeaff, _feddab := d.Token()
	if _feddab != nil {
		return _feddab
	}
	if _eagefg, _cdeaef := _efeaff.(_gd.EndElement); _cdeaef && _eagefg.Name == start.Name {
		*_dadcb = 1
		return nil
	}
	if _aeccee, _aedfdd := _efeaff.(_gd.CharData); !_aedfdd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efeaff)
	} else {
		switch string(_aeccee) {
		case "":
			*_dadcb = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_dadcb = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_dadcb = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_dadcb = 3
		}
	}
	_efeaff, _feddab = d.Token()
	if _feddab != nil {
		return _feddab
	}
	if _ddcdc, _aabgb := _efeaff.(_gd.EndElement); _aabgb && _ddcdc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efeaff)
}

func (_aegbfc ST_VerticalAlignment) Validate() error { return _aegbfc.ValidateWithPath("") }

type CT_Tuples struct {

	// Member Name Count
	CAttr *uint32

	// Tuple
	Tpl []*CT_Tuple
}

func (_ebffaf ST_Objects) String() string {
	switch _ebffaf {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func (_cgceac ST_ExternalConnectionType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ffdcca := _gd.Attr{}
	_ffdcca.Name = name
	switch _cgceac {
	case ST_ExternalConnectionTypeUnset:
		_ffdcca.Value = ""
	case ST_ExternalConnectionTypeGeneral:
		_ffdcca.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_ExternalConnectionTypeText:
		_ffdcca.Value = "\u0074\u0065\u0078\u0074"
	case ST_ExternalConnectionTypeMDY:
		_ffdcca.Value = "\u004d\u0044\u0059"
	case ST_ExternalConnectionTypeDMY:
		_ffdcca.Value = "\u0044\u004d\u0059"
	case ST_ExternalConnectionTypeYMD:
		_ffdcca.Value = "\u0059\u004d\u0044"
	case ST_ExternalConnectionTypeMYD:
		_ffdcca.Value = "\u004d\u0059\u0044"
	case ST_ExternalConnectionTypeDYM:
		_ffdcca.Value = "\u0044\u0059\u004d"
	case ST_ExternalConnectionTypeYDM:
		_ffdcca.Value = "\u0059\u0044\u004d"
	case ST_ExternalConnectionTypeSkip:
		_ffdcca.Value = "\u0073\u006b\u0069\u0070"
	case ST_ExternalConnectionTypeEMD:
		_ffdcca.Value = "\u0045\u004d\u0044"
	}
	return _ffdcca, nil
}

func NewCT_SheetViews() *CT_SheetViews { _ffbbgb := &CT_SheetViews{}; return _ffbbgb }

// ValidateWithPath validates the CT_Workbook and its children, prefixing error messages with path
func (_ebbfcg *CT_Workbook) ValidateWithPath(path string) error {
	if _cbdfgf := _ebbfcg.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _cbdfgf != nil {
		return _cbdfgf
	}
	if _ebbfcg.FileVersion != nil {
		if _eecce := _ebbfcg.FileVersion.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"); _eecce != nil {
			return _eecce
		}
	}
	if _ebbfcg.FileSharing != nil {
		if _cbdfa := _ebbfcg.FileSharing.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"); _cbdfa != nil {
			return _cbdfa
		}
	}
	if _ebbfcg.WorkbookPr != nil {
		if _eecfdd := _ebbfcg.WorkbookPr.ValidateWithPath(path + "/\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"); _eecfdd != nil {
			return _eecfdd
		}
	}
	if _ebbfcg.WorkbookProtection != nil {
		if _gaeadg := _ebbfcg.WorkbookProtection.ValidateWithPath(path + "\u002f\u0057\u006f\u0072kb\u006f\u006f\u006b\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _gaeadg != nil {
			return _gaeadg
		}
	}
	if _ebbfcg.BookViews != nil {
		if _bcdff := _ebbfcg.BookViews.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"); _bcdff != nil {
			return _bcdff
		}
	}
	if _ceega := _ebbfcg.Sheets.ValidateWithPath(path + "\u002fS\u0068\u0065\u0065\u0074\u0073"); _ceega != nil {
		return _ceega
	}
	if _ebbfcg.FunctionGroups != nil {
		if _gacgd := _ebbfcg.FunctionGroups.ValidateWithPath(path + "\u002fF\u0075n\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073"); _gacgd != nil {
			return _gacgd
		}
	}
	if _ebbfcg.ExternalReferences != nil {
		if _dbdac := _ebbfcg.ExternalReferences.ValidateWithPath(path + "\u002f\u0045\u0078\u0074er\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _dbdac != nil {
			return _dbdac
		}
	}
	if _ebbfcg.DefinedNames != nil {
		if _dbbgbg := _ebbfcg.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _dbbgbg != nil {
			return _dbbgbg
		}
	}
	if _ebbfcg.CalcPr != nil {
		if _fgebbf := _ebbfcg.CalcPr.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0050\u0072"); _fgebbf != nil {
			return _fgebbf
		}
	}
	if _ebbfcg.OleSize != nil {
		if _fccfbb := _ebbfcg.OleSize.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0053\u0069\u007a\u0065"); _fccfbb != nil {
			return _fccfbb
		}
	}
	if _ebbfcg.CustomWorkbookViews != nil {
		if _dbaba := _ebbfcg.CustomWorkbookViews.ValidateWithPath(path + "/\u0043u\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006bb\u006f\u006f\u006b\u0056ie\u0077\u0073"); _dbaba != nil {
			return _dbaba
		}
	}
	if _ebbfcg.PivotCaches != nil {
		if _affbeb := _ebbfcg.PivotCaches.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"); _affbeb != nil {
			return _affbeb
		}
	}
	if _ebbfcg.SmartTagPr != nil {
		if _adfec := _ebbfcg.SmartTagPr.ValidateWithPath(path + "/\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"); _adfec != nil {
			return _adfec
		}
	}
	if _ebbfcg.SmartTagTypes != nil {
		if _bdebc := _ebbfcg.SmartTagTypes.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067T\u0079\u0070\u0065\u0073"); _bdebc != nil {
			return _bdebc
		}
	}
	if _ebbfcg.WebPublishing != nil {
		if _cfbde := _ebbfcg.WebPublishing.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u0069\u006e\u0067"); _cfbde != nil {
			return _cfbde
		}
	}
	for _afcfde, _gdabd := range _ebbfcg.FileRecoveryPr {
		if _bffce := _gdabd.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0046\u0069le\u0052e\u0063\u006f\u0076\u0065\u0072y\u0050\u0072\u005b\u0025\u0064\u005d", path, _afcfde)); _bffce != nil {
			return _bffce
		}
	}
	if _ebbfcg.WebPublishObjects != nil {
		if _gbgade := _ebbfcg.WebPublishObjects.ValidateWithPath(path + "\u002fW\u0065b\u0050\u0075\u0062\u006c\u0069s\u0068\u004fb\u006a\u0065\u0063\u0074\u0073"); _gbgade != nil {
			return _gbgade
		}
	}
	if _ebbfcg.ExtLst != nil {
		if _cgbdgb := _ebbfcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgbdgb != nil {
			return _cgbdgb
		}
	}
	return nil
}

// Validate validates the CT_TableStyleInfo and its children
func (_eabcf *CT_TableStyleInfo) Validate() error {
	return _eabcf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f")
}

// ValidateWithPath validates the CT_TupleCache and its children, prefixing error messages with path
func (_faaac *CT_TupleCache) ValidateWithPath(path string) error {
	if _faaac.Entries != nil {
		if _dccaa := _faaac.Entries.ValidateWithPath(path + "\u002f\u0045\u006e\u0074\u0072\u0069\u0065\u0073"); _dccaa != nil {
			return _dccaa
		}
	}
	if _faaac.Sets != nil {
		if _fdbdb := _faaac.Sets.ValidateWithPath(path + "\u002f\u0053\u0065t\u0073"); _fdbdb != nil {
			return _fdbdb
		}
	}
	if _faaac.QueryCache != nil {
		if _gbcafe := _faaac.QueryCache.ValidateWithPath(path + "/\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"); _gbcafe != nil {
			return _gbcafe
		}
	}
	if _faaac.ServerFormats != nil {
		if _edfdb := _faaac.ServerFormats.ValidateWithPath(path + "\u002f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006fr\u006d\u0061\u0074\u0073"); _edfdb != nil {
			return _edfdb
		}
	}
	if _faaac.ExtLst != nil {
		if _cbfad := _faaac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbfad != nil {
			return _cbfad
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorFilter and its children, prefixing error messages with path
func (_dbbe *CT_ColorFilter) ValidateWithPath(path string) error { return nil }

func (_fabdceg ST_CellFormulaType) ValidateWithPath(path string) error {
	switch _fabdceg {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fabdceg))
	}
	return nil
}

func (_feffb *CT_MeasureGroups) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _feffb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_feffb.CountAttr)})
	}
	e.EncodeToken(start)
	if _feffb.MeasureGroup != nil {
		_cddb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003am\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}}
		for _, _bdefc := range _feffb.MeasureGroup {
			e.EncodeElement(_bdefc, _cddb)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cfbaca ST_Pane) String() string {
	switch _cfbaca {
	case 0:
		return ""
	case 1:
		return "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 2:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 4:
		return "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return ""
}

func (_eecbbe ST_DataValidationImeMode) ValidateWithPath(path string) error {
	switch _eecbbe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eecbbe))
	}
	return nil
}

func (_cdag *CT_DateTime) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ageff := range start.Attr {
		if _ageff.Name.Local == "\u0076" {
			_bcgc, _acad := ParseStdlibTime(_ageff.Value)
			if _acad != nil {
				return _acad
			}
			_cdag.VAttr = _bcgc
			continue
		}
		if _ageff.Name.Local == "\u0075" {
			_gaedd, _dcggc := _a.ParseBool(_ageff.Value)
			if _dcggc != nil {
				return _dcggc
			}
			_cdag.UAttr = &_gaedd
			continue
		}
		if _ageff.Name.Local == "\u0066" {
			_gcee, _fecbd := _a.ParseBool(_ageff.Value)
			if _fecbd != nil {
				return _fecbd
			}
			_cdag.FAttr = &_gcee
			continue
		}
		if _ageff.Name.Local == "\u0063" {
			_fcfaf, _dfbad := _ageff.Value, error(nil)
			if _dfbad != nil {
				return _dfbad
			}
			_cdag.CAttr = &_fcfaf
			continue
		}
		if _ageff.Name.Local == "\u0063\u0070" {
			_ceceg, _bbbab := _a.ParseUint(_ageff.Value, 10, 32)
			if _bbbab != nil {
				return _bbbab
			}
			_fdfdb := uint32(_ceceg)
			_cdag.CpAttr = &_fdfdb
			continue
		}
	}
_cdgbb:
	for {
		_cdefe, _gcbag := d.Token()
		if _gcbag != nil {
			return _gcbag
		}
		switch _beaa := _cdefe.(type) {
		case _gd.StartElement:
			switch _beaa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fbgb := NewCT_X()
				if _aabee := d.DecodeElement(_fbgb, &_beaa); _aabee != nil {
					return _aabee
				}
				_cdag.X = append(_cdag.X, _fbgb)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065\u0020\u0025\u0076", _beaa.Name)
				if _cdcfc := d.Skip(); _cdcfc != nil {
					return _cdcfc
				}
			}
		case _gd.EndElement:
			break _cdgbb
		case _gd.CharData:
		}
	}
	return nil
}

func (_egfga *CT_TableStyleElement) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_fabcee, _gcbdf := _egfga.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _gcbdf != nil {
		return _gcbdf
	}
	start.Attr = append(start.Attr, _fabcee)
	if _egfga.SizeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0069\u007a\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_egfga.SizeAttr)})
	}
	if _egfga.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_egfga.DxfIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Consolidation and its children
func (_fced *CT_Consolidation) Validate() error {
	return _fced.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e")
}

func (_gacge ST_VerticalAlignment) String() string {
	switch _gacge {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

func (_dbefda ST_UnderlineValues) Validate() error { return _dbefda.ValidateWithPath("") }

type MapInfo struct{ CT_MapInfo }

func (_gcfdf *CT_ExternalLink) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_acceb:
	for {
		_bfadc, _bfdf := d.Token()
		if _bfdf != nil {
			return _bfdf
		}
		switch _aaab := _bfadc.(type) {
		case _gd.StartElement:
			switch _aaab.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_gcfdf.Choice = NewCT_ExternalLinkChoice()
				if _afdgb := d.DecodeElement(&_gcfdf.Choice.ExternalBook, &_aaab); _afdgb != nil {
					return _afdgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_gcfdf.Choice = NewCT_ExternalLinkChoice()
				if _dcdf := d.DecodeElement(&_gcfdf.Choice.DdeLink, &_aaab); _dcdf != nil {
					return _dcdf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_gcfdf.Choice = NewCT_ExternalLinkChoice()
				if _cfece := d.DecodeElement(&_gcfdf.Choice.OleLink, &_aaab); _cfece != nil {
					return _cfece
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcfdf.ExtLst = NewCT_ExtensionList()
				if _deeb := d.DecodeElement(_gcfdf.ExtLst, &_aaab); _deeb != nil {
					return _deeb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _aaab.Name)
				if _becg := d.Skip(); _becg != nil {
					return _becg
				}
			}
		case _gd.EndElement:
			break _acceb
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_FileSharing() *CT_FileSharing { _caaea := &CT_FileSharing{}; return _caaea }

type ST_VolDepType byte

func NewCT_CustomProperty() *CT_CustomProperty { _fgae := &CT_CustomProperty{}; return _fgae }

func (_aeeaf *Dialogsheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0064\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074"
	return _aeeaf.CT_Dialogsheet.MarshalXML(e, start)
}

const (
	ST_DdeValueTypeUnset ST_DdeValueType = 0
	ST_DdeValueTypeNil   ST_DdeValueType = 1
	ST_DdeValueTypeB     ST_DdeValueType = 2
	ST_DdeValueTypeN     ST_DdeValueType = 3
	ST_DdeValueTypeE     ST_DdeValueType = 4
	ST_DdeValueTypeStr   ST_DdeValueType = 5
)

func (_bcbecg ST_UpdateLinks) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_acefdd := _gd.Attr{}
	_acefdd.Name = name
	switch _bcbecg {
	case ST_UpdateLinksUnset:
		_acefdd.Value = ""
	case ST_UpdateLinksUserSet:
		_acefdd.Value = "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case ST_UpdateLinksNever:
		_acefdd.Value = "\u006e\u0065\u0076e\u0072"
	case ST_UpdateLinksAlways:
		_acefdd.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _acefdd, nil
}

func (_eagaf *CT_Item) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eagaf.NAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_eagaf.NAttr)})
	}
	if _eagaf.TAttr != ST_ItemTypeUnset {
		_eggdc, _agcc := _eagaf.TAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074"})
		if _agcc != nil {
			return _agcc
		}
		start.Attr = append(start.Attr, _eggdc)
	}
	if _eagaf.HAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.HAttr))})
	}
	if _eagaf.SAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.SAttr))})
	}
	if _eagaf.SdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.SdAttr))})
	}
	if _eagaf.FAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.FAttr))})
	}
	if _eagaf.MAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.MAttr))})
	}
	if _eagaf.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.CAttr))})
	}
	if _eagaf.XAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078"}, Value: _b.Sprintf("\u0025\u0076", *_eagaf.XAttr)})
	}
	if _eagaf.DAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.DAttr))})
	}
	if _eagaf.EAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eagaf.EAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellStyleXfs and its children, prefixing error messages with path
func (_gffg *CT_CellStyleXfs) ValidateWithPath(path string) error {
	for _defbb, _febab := range _gffg.Xf {
		if _cdgbf := _febab.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _defbb)); _cdgbf != nil {
			return _cdgbf
		}
	}
	return nil
}

func (_dafbb *CT_UndoInfo) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0064e\u0078"}, Value: _b.Sprintf("\u0025\u0076", _dafbb.IndexAttr)})
	_dcgfb, _efgge := _dafbb.ExpAttr.MarshalXMLAttr(_gd.Name{Local: "\u0065\u0078\u0070"})
	if _efgge != nil {
		return _efgge
	}
	start.Attr = append(start.Attr, _dcgfb)
	if _dafbb.Ref3DAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u00663\u0044"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafbb.Ref3DAttr))})
	}
	if _dafbb.ArrayAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafbb.ArrayAttr))})
	}
	if _dafbb.VAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafbb.VAttr))})
	}
	if _dafbb.NfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafbb.NfAttr))})
	}
	if _dafbb.CsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafbb.CsAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0072"}, Value: _b.Sprintf("\u0025\u0076", _dafbb.DrAttr)})
	if _dafbb.DnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_dafbb.DnAttr)})
	}
	if _dafbb.RAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_dafbb.RAttr)})
	}
	if _dafbb.SIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_dafbb.SIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dfcfad ST_GrowShrinkType) Validate() error { return _dfcfad.ValidateWithPath("") }

type CT_SheetCalcPr struct {

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool
}

func (_bdaf *CT_Comment) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bdaf.Text = NewCT_Rst()
	for _, _fbfce := range start.Attr {
		if _fbfce.Name.Local == "\u0072\u0065\u0066" {
			_ecce, _cbgg := _fbfce.Value, error(nil)
			if _cbgg != nil {
				return _cbgg
			}
			_bdaf.RefAttr = _ecce
			continue
		}
		if _fbfce.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_agfbe, _edcd := _a.ParseUint(_fbfce.Value, 10, 32)
			if _edcd != nil {
				return _edcd
			}
			_bdaf.AuthorIdAttr = uint32(_agfbe)
			continue
		}
		if _fbfce.Name.Local == "\u0067\u0075\u0069\u0064" {
			_beeg, _ccfg := _fbfce.Value, error(nil)
			if _ccfg != nil {
				return _ccfg
			}
			_bdaf.GuidAttr = &_beeg
			continue
		}
		if _fbfce.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_daac, _gcafg := _a.ParseUint(_fbfce.Value, 10, 32)
			if _gcafg != nil {
				return _gcafg
			}
			_dbae := uint32(_daac)
			_bdaf.ShapeIdAttr = &_dbae
			continue
		}
	}
_ecgg:
	for {
		_aefe, _agafe := d.Token()
		if _agafe != nil {
			return _agafe
		}
		switch _gaed := _aefe.(type) {
		case _gd.StartElement:
			switch _gaed.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _aedcf := d.DecodeElement(_bdaf.Text, &_gaed); _aedcf != nil {
					return _aedcf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}:
				_bdaf.CommentPr = NewCT_CommentPr()
				if _dfdfe := d.DecodeElement(_bdaf.CommentPr, &_gaed); _dfdfe != nil {
					return _dfdfe
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _gaed.Name)
				if _bagc := d.Skip(); _bagc != nil {
					return _bagc
				}
			}
		case _gd.EndElement:
			break _ecgg
		case _gd.CharData:
		}
	}
	return nil
}

func (_eegeb *CT_ObjectAnchor) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_eegeb.From = _c.NewFrom()
	_eegeb.To = _c.NewTo()
	for _, _gfbga := range start.Attr {
		if _gfbga.Name.Local == "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_bbac, _edbbc := _a.ParseBool(_gfbga.Value)
			if _edbbc != nil {
				return _edbbc
			}
			_eegeb.MoveWithCellsAttr = &_bbac
			continue
		}
		if _gfbga.Name.Local == "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_cdeac, _ggdae := _a.ParseBool(_gfbga.Value)
			if _ggdae != nil {
				return _ggdae
			}
			_eegeb.SizeWithCellsAttr = &_cdeac
			continue
		}
	}
_cdfbd:
	for {
		_dbefa, _bfbag := d.Token()
		if _bfbag != nil {
			return _bfbag
		}
		switch _gdacb := _dbefa.(type) {
		case _gd.StartElement:
			switch _gdacb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _gd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _fdfab := d.DecodeElement(_eegeb.From, &_gdacb); _fdfab != nil {
					return _fdfab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _gd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _eagegf := d.DecodeElement(_eegeb.To, &_gdacb); _eagegf != nil {
					return _eagegf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006ae\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _gdacb.Name)
				if _afddb := d.Skip(); _afddb != nil {
					return _afddb
				}
			}
		case _gd.EndElement:
			break _cdfbd
		case _gd.CharData:
		}
	}
	return nil
}

func (_cgbg ST_PivotFilterType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_gbebfb := _gd.Attr{}
	_gbebfb.Name = name
	switch _cgbg {
	case ST_PivotFilterTypeUnset:
		_gbebfb.Value = ""
	case ST_PivotFilterTypeUnknown:
		_gbebfb.Value = "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case ST_PivotFilterTypeCount:
		_gbebfb.Value = "\u0063\u006f\u0075n\u0074"
	case ST_PivotFilterTypePercent:
		_gbebfb.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_PivotFilterTypeSum:
		_gbebfb.Value = "\u0073\u0075\u006d"
	case ST_PivotFilterTypeCaptionEqual:
		_gbebfb.Value = "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionNotEqual:
		_gbebfb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionBeginsWith:
		_gbebfb.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotBeginsWith:
		_gbebfb.Value = "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case ST_PivotFilterTypeCaptionEndsWith:
		_gbebfb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotEndsWith:
		_gbebfb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionContains:
		_gbebfb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionNotContains:
		_gbebfb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionGreaterThan:
		_gbebfb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionGreaterThanOrEqual:
		_gbebfb.Value = "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeCaptionLessThan:
		_gbebfb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionLessThanOrEqual:
		_gbebfb.Value = "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case ST_PivotFilterTypeCaptionBetween:
		_gbebfb.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeCaptionNotBetween:
		_gbebfb.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueEqual:
		_gbebfb.Value = "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueNotEqual:
		_gbebfb.Value = "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueGreaterThan:
		_gbebfb.Value = "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueGreaterThanOrEqual:
		_gbebfb.Value = "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueLessThan:
		_gbebfb.Value = "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueLessThanOrEqual:
		_gbebfb.Value = "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeValueBetween:
		_gbebfb.Value = "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueNotBetween:
		_gbebfb.Value = "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateEqual:
		_gbebfb.Value = "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeDateNotEqual:
		_gbebfb.Value = "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeDateOlderThan:
		_gbebfb.Value = "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateOlderThanOrEqual:
		_gbebfb.Value = "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateNewerThan:
		_gbebfb.Value = "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateNewerThanOrEqual:
		_gbebfb.Value = "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateBetween:
		_gbebfb.Value = "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateNotBetween:
		_gbebfb.Value = "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeTomorrow:
		_gbebfb.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_PivotFilterTypeToday:
		_gbebfb.Value = "\u0074\u006f\u0064a\u0079"
	case ST_PivotFilterTypeYesterday:
		_gbebfb.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_PivotFilterTypeNextWeek:
		_gbebfb.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeThisWeek:
		_gbebfb.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeLastWeek:
		_gbebfb.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeNextMonth:
		_gbebfb.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeThisMonth:
		_gbebfb.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeLastMonth:
		_gbebfb.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeNextQuarter:
		_gbebfb.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeThisQuarter:
		_gbebfb.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeLastQuarter:
		_gbebfb.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeNextYear:
		_gbebfb.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeThisYear:
		_gbebfb.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeLastYear:
		_gbebfb.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeYearToDate:
		_gbebfb.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_PivotFilterTypeQ1:
		_gbebfb.Value = "\u0051\u0031"
	case ST_PivotFilterTypeQ2:
		_gbebfb.Value = "\u0051\u0032"
	case ST_PivotFilterTypeQ3:
		_gbebfb.Value = "\u0051\u0033"
	case ST_PivotFilterTypeQ4:
		_gbebfb.Value = "\u0051\u0034"
	case ST_PivotFilterTypeM1:
		_gbebfb.Value = "\u004d\u0031"
	case ST_PivotFilterTypeM2:
		_gbebfb.Value = "\u004d\u0032"
	case ST_PivotFilterTypeM3:
		_gbebfb.Value = "\u004d\u0033"
	case ST_PivotFilterTypeM4:
		_gbebfb.Value = "\u004d\u0034"
	case ST_PivotFilterTypeM5:
		_gbebfb.Value = "\u004d\u0035"
	case ST_PivotFilterTypeM6:
		_gbebfb.Value = "\u004d\u0036"
	case ST_PivotFilterTypeM7:
		_gbebfb.Value = "\u004d\u0037"
	case ST_PivotFilterTypeM8:
		_gbebfb.Value = "\u004d\u0038"
	case ST_PivotFilterTypeM9:
		_gbebfb.Value = "\u004d\u0039"
	case ST_PivotFilterTypeM10:
		_gbebfb.Value = "\u004d\u0031\u0030"
	case ST_PivotFilterTypeM11:
		_gbebfb.Value = "\u004d\u0031\u0031"
	case ST_PivotFilterTypeM12:
		_gbebfb.Value = "\u004d\u0031\u0032"
	}
	return _gbebfb, nil
}

// Validate validates the CT_Hyperlinks and its children
func (_bacbb *CT_Hyperlinks) Validate() error {
	return _bacbb.ValidateWithPath("\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073")
}

// Validate validates the Dialogsheet and its children
func (_cbaed *Dialogsheet) Validate() error {
	return _cbaed.ValidateWithPath("D\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_Filters and its children
func (_bgbf *CT_Filters) Validate() error {
	return _bgbf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

func (_bdegab ST_BorderStyle) Validate() error { return _bdegab.ValidateWithPath("") }

func (_dbegb ST_DvAspect) Validate() error { return _dbegb.ValidateWithPath("") }

// ValidateWithPath validates the CT_IntProperty and its children, prefixing error messages with path
func (_accdf *CT_IntProperty) ValidateWithPath(path string) error { return nil }

func (_aadefd *ST_PageOrder) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_aadefd = 0
	case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
		*_aadefd = 1
	case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
		*_aadefd = 2
	}
	return nil
}

// ValidateWithPath validates the CT_Parameter and its children, prefixing error messages with path
func (_aacdda *CT_Parameter) ValidateWithPath(path string) error {
	if _ebcef := _aacdda.ParameterTypeAttr.ValidateWithPath(path + "\u002fP\u0061r\u0061\u006d\u0065\u0074\u0065r\u0054\u0079p\u0065\u0041\u0074\u0074\u0072"); _ebcef != nil {
		return _ebcef
	}
	return nil
}

func (_dgaed *ST_ParameterType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dgaed = 0
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_dgaed = 1
	case "\u0076\u0061\u006cu\u0065":
		*_dgaed = 2
	case "\u0063\u0065\u006c\u006c":
		*_dgaed = 3
	}
	return nil
}

func NewCT_Xf() *CT_Xf { _cdgeg := &CT_Xf{}; return _cdgeg }

type CT_Worksheet struct {

	// Worksheet Properties
	SheetPr *CT_SheetPr

	// Worksheet Dimensions
	Dimension *CT_SheetDimension

	// Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Calculation Properties
	SheetCalcPr *CT_SheetCalcPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Protected Ranges
	ProtectedRanges *CT_ProtectedRanges

	// Scenarios
	Scenarios *CT_Scenarios

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidate
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Merge Cells
	MergeCells *CT_MergeCells

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Data Validations
	DataValidations *CT_DataValidations

	// Hyperlinks
	Hyperlinks *CT_Hyperlinks

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header and Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Cell Watch Items
	CellWatches *CT_CellWatches

	// Ignored Errors
	IgnoredErrors *CT_IgnoredErrors

	// Smart Tags
	SmartTags *CT_SmartTags

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture    *CT_SheetBackgroundPicture
	OleObjects *CT_OleObjects

	// Embedded Controls
	Controls *CT_Controls

	// Web Publishing Items
	WebPublishItems *CT_WebPublishItems

	// Table Parts
	TableParts *CT_TableParts

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_ExternalReference() *CT_ExternalReference { _dcfc := &CT_ExternalReference{}; return _dcfc }

func (_cceeff ST_TextHAlign) String() string {
	switch _cceeff {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0072\u0069\u0067h\u0074"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

func (_ebeceg *ST_GroupBy) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bcccfd, _fgebg := d.Token()
	if _fgebg != nil {
		return _fgebg
	}
	if _agfac, _gdbac := _bcccfd.(_gd.EndElement); _gdbac && _agfac.Name == start.Name {
		*_ebeceg = 1
		return nil
	}
	if _cfaecc, _fgdfd := _bcccfd.(_gd.CharData); !_fgdfd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcccfd)
	} else {
		switch string(_cfaecc) {
		case "":
			*_ebeceg = 0
		case "\u0072\u0061\u006eg\u0065":
			*_ebeceg = 1
		case "\u0073e\u0063\u006f\u006e\u0064\u0073":
			*_ebeceg = 2
		case "\u006di\u006e\u0075\u0074\u0065\u0073":
			*_ebeceg = 3
		case "\u0068\u006f\u0075r\u0073":
			*_ebeceg = 4
		case "\u0064\u0061\u0079\u0073":
			*_ebeceg = 5
		case "\u006d\u006f\u006e\u0074\u0068\u0073":
			*_ebeceg = 6
		case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
			*_ebeceg = 7
		case "\u0079\u0065\u0061r\u0073":
			*_ebeceg = 8
		}
	}
	_bcccfd, _fgebg = d.Token()
	if _fgebg != nil {
		return _fgebg
	}
	if _bdfbd, _cgaebe := _bcccfd.(_gd.EndElement); _cgaebe && _bdfbd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcccfd)
}

func (_adfbdd *CT_rowItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _adfbdd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_adfbdd.CountAttr)})
	}
	e.EncodeToken(start)
	_effda := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _geecbb := range _adfbdd.I {
		e.EncodeElement(_geecbb, _effda)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_eabacg ST_SourceType) String() string {
	switch _eabacg {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case 3:
		return "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return ""
}

type ST_TextVAlign byte

func (_bfbgda ST_PivotAreaType) ValidateWithPath(path string) error {
	switch _bfbgda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfbgda))
	}
	return nil
}

func (_daedec *CT_SmartTagType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _daedec.NamespaceUriAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_daedec.NamespaceUriAttr)})
	}
	if _daedec.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_daedec.NameAttr)})
	}
	if _daedec.UrlAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0072\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_daedec.UrlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalSheetNames struct {

	// Sheet Name
	SheetName []*CT_ExternalSheetName
}

func NewCT_VolTopic() *CT_VolTopic { _bcfbab := &CT_VolTopic{}; return _bcfbab }

func (_bagbae *CT_MdxMemeberProp) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e"}, Value: _b.Sprintf("\u0025\u0076", _bagbae.NAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0070"}, Value: _b.Sprintf("\u0025\u0076", _bagbae.NpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cfbcg *CT_XmlColumnPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cfbcg.MapIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _b.Sprintf("\u0025\u0076", _cfbcg.XpathAttr)})
	if _cfbcg.DenormalizedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfbcg.DenormalizedAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", _cfbcg.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _cfbcg.ExtLst != nil {
		_fcdfc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfbcg.ExtLst, _fcdfc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cbdbg *ST_BorderStyle) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aeccb, _efdgd := d.Token()
	if _efdgd != nil {
		return _efdgd
	}
	if _cgbbaf, _ggeaed := _aeccb.(_gd.EndElement); _ggeaed && _cgbbaf.Name == start.Name {
		*_cbdbg = 1
		return nil
	}
	if _abddc, _afccbc := _aeccb.(_gd.CharData); !_afccbc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeccb)
	} else {
		switch string(_abddc) {
		case "":
			*_cbdbg = 0
		case "\u006e\u006f\u006e\u0065":
			*_cbdbg = 1
		case "\u0074\u0068\u0069\u006e":
			*_cbdbg = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d":
			*_cbdbg = 3
		case "\u0064\u0061\u0073\u0068\u0065\u0064":
			*_cbdbg = 4
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_cbdbg = 5
		case "\u0074\u0068\u0069c\u006b":
			*_cbdbg = 6
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_cbdbg = 7
		case "\u0068\u0061\u0069\u0072":
			*_cbdbg = 8
		case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
			*_cbdbg = 9
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_cbdbg = 10
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_cbdbg = 11
		case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cbdbg = 12
		case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cbdbg = 13
		case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_cbdbg = 14
		}
	}
	_aeccb, _efdgd = d.Token()
	if _efdgd != nil {
		return _efdgd
	}
	if _becfec, _eabfb := _aeccb.(_gd.EndElement); _eabfb && _becfec.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeccb)
}

// Validate validates the CT_SheetId and its children
func (_gdcgb *CT_SheetId) Validate() error {
	return _gdcgb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064")
}

func (_cccfe *CT_PrintOptions) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cccfe.HorizontalCenteredAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cccfe.HorizontalCenteredAttr))})
	}
	if _cccfe.VerticalCenteredAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cccfe.VerticalCenteredAttr))})
	}
	if _cccfe.HeadingsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cccfe.HeadingsAttr))})
	}
	if _cccfe.GridLinesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cccfe.GridLinesAttr))})
	}
	if _cccfe.GridLinesSetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cccfe.GridLinesSetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_TableFormula struct {
	ArrayAttr bool
	Content   string
}

// Validate validates the CT_PivotCacheDefinition and its children
func (_bbefd *CT_PivotCacheDefinition) Validate() error {
	return _bbefd.ValidateWithPath("\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}

type CT_MetadataBlock struct {

	// Metadata Record
	Rc []*CT_MetadataRecord
}

type CT_GroupLevels struct {

	// Grouping Level Count
	CountAttr *uint32

	// OLAP Grouping Levels
	GroupLevel []*CT_GroupLevel
}

func NewExternalLink() *ExternalLink {
	_gdggg := &ExternalLink{}
	_gdggg.CT_ExternalLink = *NewCT_ExternalLink()
	return _gdggg
}

func NewCT_LevelGroup() *CT_LevelGroup {
	_acggb := &CT_LevelGroup{}
	_acggb.GroupMembers = NewCT_GroupMembers()
	return _acggb
}

func (_dccbc *CT_VolTopicRef) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ageae := range start.Attr {
		if _ageae.Name.Local == "\u0072" {
			_fdced, _faceb := _ageae.Value, error(nil)
			if _faceb != nil {
				return _faceb
			}
			_dccbc.RAttr = _fdced
			continue
		}
		if _ageae.Name.Local == "\u0073" {
			_gdaad, _gbbeb := _a.ParseUint(_ageae.Value, 10, 32)
			if _gbbeb != nil {
				return _gbbeb
			}
			_dccbc.SAttr = uint32(_gdaad)
			continue
		}
	}
	for {
		_eebca, _agbced := d.Token()
		if _agbced != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0052\u0065\u0066:\u0020\u0025\u0073", _agbced)
		}
		if _fdeba, _ddea := _eebca.(_gd.EndElement); _ddea && _fdeba.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ceafeb ST_DataValidationOperator) Validate() error { return _ceafeb.ValidateWithPath("") }

// Validate validates the CT_CellSmartTags and its children
func (_ceabg *CT_CellSmartTags) Validate() error {
	return _ceabg.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

func (_cefe ST_TableType) String() string {
	switch _cefe {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0078\u006d\u006c"
	case 3:
		return "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

func (_gdgggb ST_TableStyleType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_fccfd := _gd.Attr{}
	_fccfd.Name = name
	switch _gdgggb {
	case ST_TableStyleTypeUnset:
		_fccfd.Value = ""
	case ST_TableStyleTypeWholeTable:
		_fccfd.Value = "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case ST_TableStyleTypeHeaderRow:
		_fccfd.Value = "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case ST_TableStyleTypeTotalRow:
		_fccfd.Value = "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumn:
		_fccfd.Value = "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeLastColumn:
		_fccfd.Value = "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstRowStripe:
		_fccfd.Value = "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondRowStripe:
		_fccfd.Value = "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstColumnStripe:
		_fccfd.Value = "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondColumnStripe:
		_fccfd.Value = "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstHeaderCell:
		_fccfd.Value = "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastHeaderCell:
		_fccfd.Value = "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstTotalCell:
		_fccfd.Value = "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastTotalCell:
		_fccfd.Value = "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstSubtotalColumn:
		_fccfd.Value = "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeSecondSubtotalColumn:
		_fccfd.Value = "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case ST_TableStyleTypeThirdSubtotalColumn:
		_fccfd.Value = "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstSubtotalRow:
		_fccfd.Value = "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeSecondSubtotalRow:
		_fccfd.Value = "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeThirdSubtotalRow:
		_fccfd.Value = "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeBlankRow:
		_fccfd.Value = "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumnSubheading:
		_fccfd.Value = "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondColumnSubheading:
		_fccfd.Value = "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case ST_TableStyleTypeThirdColumnSubheading:
		_fccfd.Value = "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeFirstRowSubheading:
		_fccfd.Value = "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondRowSubheading:
		_fccfd.Value = "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeThirdRowSubheading:
		_fccfd.Value = "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypePageFieldLabels:
		_fccfd.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case ST_TableStyleTypePageFieldValues:
		_fccfd.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _fccfd, nil
}

const (
	ST_DataValidationOperatorUnset              ST_DataValidationOperator = 0
	ST_DataValidationOperatorBetween            ST_DataValidationOperator = 1
	ST_DataValidationOperatorNotBetween         ST_DataValidationOperator = 2
	ST_DataValidationOperatorEqual              ST_DataValidationOperator = 3
	ST_DataValidationOperatorNotEqual           ST_DataValidationOperator = 4
	ST_DataValidationOperatorLessThan           ST_DataValidationOperator = 5
	ST_DataValidationOperatorLessThanOrEqual    ST_DataValidationOperator = 6
	ST_DataValidationOperatorGreaterThan        ST_DataValidationOperator = 7
	ST_DataValidationOperatorGreaterThanOrEqual ST_DataValidationOperator = 8
)

func NewCT_BorderPr() *CT_BorderPr { _bec := &CT_BorderPr{}; return _bec }

func (_cbcge *CT_IgnoredErrors) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_fbdb:
	for {
		_abeeg, _acfef := d.Token()
		if _acfef != nil {
			return _acfef
		}
		switch _adafcg := _abeeg.(type) {
		case _gd.StartElement:
			switch _adafcg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}:
				_dgbdb := NewCT_IgnoredError()
				if _eccd := d.DecodeElement(_dgbdb, &_adafcg); _eccd != nil {
					return _eccd
				}
				_cbcge.IgnoredError = append(_cbcge.IgnoredError, _dgbdb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbcge.ExtLst = NewCT_ExtensionList()
				if _dacdd := d.DecodeElement(_cbcge.ExtLst, &_adafcg); _dacdd != nil {
					return _dacdd
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073\u0020\u0025v", _adafcg.Name)
				if _bbccg := d.Skip(); _bbccg != nil {
					return _bbccg
				}
			}
		case _gd.EndElement:
			break _fbdb
		case _gd.CharData:
		}
	}
	return nil
}

func (_edfdef *Sst) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_edfdef.CT_Sst = *NewCT_Sst()
	for _, _cbedb := range start.Attr {
		if _cbedb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cgfdaf, _bcdgf := _a.ParseUint(_cbedb.Value, 10, 32)
			if _bcdgf != nil {
				return _bcdgf
			}
			_fcgbb := uint32(_cgfdaf)
			_edfdef.CountAttr = &_fcgbb
			continue
		}
		if _cbedb.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_cfbbb, _bfdba := _a.ParseUint(_cbedb.Value, 10, 32)
			if _bfdba != nil {
				return _bfdba
			}
			_bfbcc := uint32(_cfbbb)
			_edfdef.UniqueCountAttr = &_bfbcc
			continue
		}
	}
_edffee:
	for {
		_effgc, _bfabc := d.Token()
		if _bfabc != nil {
			return _bfabc
		}
		switch _bbeaac := _effgc.(type) {
		case _gd.StartElement:
			switch _bbeaac.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_ceeecb := NewCT_Rst()
				if _acafb := d.DecodeElement(_ceeecb, &_bbeaac); _acafb != nil {
					return _acafb
				}
				_edfdef.Si = append(_edfdef.Si, _ceeecb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edfdef.ExtLst = NewCT_ExtensionList()
				if _aegcf := d.DecodeElement(_edfdef.ExtLst, &_bbeaac); _aegcf != nil {
					return _aegcf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053s\u0074\u0020\u0025\u0076", _bbeaac.Name)
				if _cdggd := d.Skip(); _cdggd != nil {
					return _cdggd
				}
			}
		case _gd.EndElement:
			break _edffee
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_WebPublishObjects() *CT_WebPublishObjects { _gfacb := &CT_WebPublishObjects{}; return _gfacb }

type CT_CellStyles struct {

	// Style Count
	CountAttr *uint32

	// Cell Style
	CellStyle []*CT_CellStyle
}

func (_ebbae *CT_RevisionRowColumn) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ebbae.SIdAttr)})
	if _ebbae.EolAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ebbae.EolAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _ebbae.RefAttr)})
	_eebb, _fcdeg := _ebbae.ActionAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _fcdeg != nil {
		return _fcdeg
	}
	start.Attr = append(start.Attr, _eebb)
	if _ebbae.EdgeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0064\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ebbae.EdgeAttr))})
	}
	if _ebbae.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ebbae.RIdAttr)})
	}
	if _ebbae.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ebbae.UaAttr))})
	}
	if _ebbae.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ebbae.RaAttr))})
	}
	e.EncodeToken(start)
	if _ebbae.Undo != nil {
		_ebaed := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _efgcc := range _ebbae.Undo {
			e.EncodeElement(_efgcc, _ebaed)
		}
	}
	if _ebbae.Rcc != nil {
		_babac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _ccaee := range _ebbae.Rcc {
			e.EncodeElement(_ccaee, _babac)
		}
	}
	if _ebbae.Rfmt != nil {
		_bcgba := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _aeedg := range _ebbae.Rfmt {
			e.EncodeElement(_aeedg, _bcgba)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gegbee ST_TimePeriod) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_gegbee.String(), start)
}

// Validate validates the CT_Boolean and its children
func (_cdb *CT_Boolean) Validate() error {
	return _cdb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

func (_gdcd *CT_CellFormula) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gdcd.TAttr != ST_CellFormulaTypeUnset {
		_degaf, _acee := _gdcd.TAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074"})
		if _acee != nil {
			return _acee
		}
		start.Attr = append(start.Attr, _degaf)
	}
	if _gdcd.AcaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0063\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdcd.AcaAttr))})
	}
	if _gdcd.RefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_gdcd.RefAttr)})
	}
	if _gdcd.Dt2DAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0074\u0032\u0044"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdcd.Dt2DAttr))})
	}
	if _gdcd.DtrAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0074\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdcd.DtrAttr))})
	}
	if _gdcd.Del1Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u006c\u0031"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdcd.Del1Attr))})
	}
	if _gdcd.Del2Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u006c\u0032"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdcd.Del2Attr))})
	}
	if _gdcd.R1Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0031"}, Value: _b.Sprintf("\u0025\u0076", *_gdcd.R1Attr)})
	}
	if _gdcd.R2Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0032"}, Value: _b.Sprintf("\u0025\u0076", *_gdcd.R2Attr)})
	}
	if _gdcd.CaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdcd.CaAttr))})
	}
	if _gdcd.SiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_gdcd.SiAttr)})
	}
	if _gdcd.BxAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0078"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdcd.BxAttr))})
	}
	e.EncodeElement(_gdcd.Content, start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_SheetPr() *CT_SheetPr { _eafeb := &CT_SheetPr{}; return _eafeb }

func (_eggf *CT_Consolidation) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eggf.AutoPageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eggf.AutoPageAttr))})
	}
	e.EncodeToken(start)
	if _eggf.Pages != nil {
		_gebd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0073"}}
		e.EncodeElement(_eggf.Pages, _gebd)
	}
	_egbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"}}
	e.EncodeElement(_eggf.RangeSets, _egbc)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DataRefs and its children, prefixing error messages with path
func (_faebc *CT_DataRefs) ValidateWithPath(path string) error {
	for _fgcb, _bbbf := range _faebc.DataRef {
		if _bacad := _bbbf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0044\u0061\u0074\u0061\u0052\u0065f\u005b\u0025\u0064\u005d", path, _fgcb)); _bacad != nil {
			return _bacad
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Dxfs and its children, prefixing error messages with path
func (_bgbab *CT_Dxfs) ValidateWithPath(path string) error {
	for _eeabd, _gcbbcf := range _bgbab.Dxf {
		if _acbe := _gcbbcf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0044\u0078\u0066\u005b\u0025\u0064\u005d", path, _eeabd)); _acbe != nil {
			return _acbe
		}
	}
	return nil
}

func (_daabe *CT_Sst) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _daabe.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_daabe.CountAttr)})
	}
	if _daabe.UniqueCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_daabe.UniqueCountAttr)})
	}
	e.EncodeToken(start)
	if _daabe.Si != nil {
		_dadag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0069"}}
		for _, _cddf := range _daabe.Si {
			e.EncodeElement(_cddf, _dadag)
		}
	}
	if _daabe.ExtLst != nil {
		_acedd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_daabe.ExtLst, _acedd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_babe *CT_CustomSheetViews) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cdfe:
	for {
		_afffc, _aggg := d.Token()
		if _aggg != nil {
			return _aggg
		}
		switch _ecaf := _afffc.(type) {
		case _gd.StartElement:
			switch _ecaf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_fdac := NewCT_CustomSheetView()
				if _dcfe := d.DecodeElement(_fdac, &_ecaf); _dcfe != nil {
					return _dcfe
				}
				_babe.CustomSheetView = append(_babe.CustomSheetView, _fdac)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053he\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _ecaf.Name)
				if _adfc := d.Skip(); _adfc != nil {
					return _adfc
				}
			}
		case _gd.EndElement:
			break _cdfe
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_UnderlineProperty and its children, prefixing error messages with path
func (_fadgg *CT_UnderlineProperty) ValidateWithPath(path string) error {
	if _aggcg := _fadgg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aggcg != nil {
		return _aggcg
	}
	return nil
}

func (_begbeg ST_Visibility) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_begbeg.String(), start)
}

func NewCT_CustomChartsheetView() *CT_CustomChartsheetView {
	_gbgge := &CT_CustomChartsheetView{}
	_gbgge.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _gbgge
}

func (_fbcgae ST_VolValueType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_fbcgae.String(), start)
}

func (_gedbec ST_DataValidationImeMode) Validate() error { return _gedbec.ValidateWithPath("") }

func (_gedega *CT_XmlPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ccbcef := range start.Attr {
		if _ccbcef.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_adac, _ebfca := _a.ParseUint(_ccbcef.Value, 10, 32)
			if _ebfca != nil {
				return _ebfca
			}
			_gedega.MapIdAttr = uint32(_adac)
			continue
		}
		if _ccbcef.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_feefg, _aeagd := _ccbcef.Value, error(nil)
			if _aeagd != nil {
				return _aeagd
			}
			_gedega.XpathAttr = _feefg
			continue
		}
		if _ccbcef.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_eggbab, _bbabda := _ccbcef.Value, error(nil)
			if _bbabda != nil {
				return _bbabda
			}
			_gedega.XmlDataTypeAttr = _eggbab
			continue
		}
	}
_acffca:
	for {
		_acgggc, _ffggf := d.Token()
		if _ffggf != nil {
			return _ffggf
		}
		switch _dgacg := _acgggc.(type) {
		case _gd.StartElement:
			switch _dgacg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gedega.ExtLst = NewCT_ExtensionList()
				if _baefdd := d.DecodeElement(_gedega.ExtLst, &_dgacg); _baefdd != nil {
					return _baefdd
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072\u0020\u0025\u0076", _dgacg.Name)
				if _eagdfc := d.Skip(); _eagdfc != nil {
					return _eagdfc
				}
			}
		case _gd.EndElement:
			break _acffca
		case _gd.CharData:
		}
	}
	return nil
}

type CT_MergeCell struct {

	// Reference
	RefAttr string
}

type CT_BooleanProperty struct {

	// Value
	ValAttr *bool
}

type CT_SheetId struct {

	// Sheet Id
	ValAttr uint32
}

func (_bfece *CT_Row) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bfcae := range start.Attr {
		if _bfcae.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_deafc, _abdde := _a.ParseUint(_bfcae.Value, 10, 8)
			if _abdde != nil {
				return _abdde
			}
			_ffedg := uint8(_deafc)
			_bfece.OutlineLevelAttr = &_ffedg
			continue
		}
		if _bfcae.Name.Local == "\u0072" {
			_fcege, _ebeg := _a.ParseUint(_bfcae.Value, 10, 32)
			if _ebeg != nil {
				return _ebeg
			}
			_bagbe := uint32(_fcege)
			_bfece.RAttr = &_bagbe
			continue
		}
		if _bfcae.Name.Local == "\u0073" {
			_egfgg, _baafbc := _a.ParseUint(_bfcae.Value, 10, 32)
			if _baafbc != nil {
				return _baafbc
			}
			_gegdc := uint32(_egfgg)
			_bfece.SAttr = &_gegdc
			continue
		}
		if _bfcae.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074" {
			_ggegf, _fbaag := _a.ParseBool(_bfcae.Value)
			if _fbaag != nil {
				return _fbaag
			}
			_bfece.CustomFormatAttr = &_ggegf
			continue
		}
		if _bfcae.Name.Local == "\u0068\u0074" {
			_efcef, _fgefg := _a.ParseFloat(_bfcae.Value, 64)
			if _fgefg != nil {
				return _fgefg
			}
			_bfece.HtAttr = &_efcef
			continue
		}
		if _bfcae.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_bcggg, _gaafb := _a.ParseBool(_bfcae.Value)
			if _gaafb != nil {
				return _gaafb
			}
			_bfece.HiddenAttr = &_bcggg
			continue
		}
		if _bfcae.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_daedb, _edfc := _a.ParseBool(_bfcae.Value)
			if _edfc != nil {
				return _edfc
			}
			_bfece.CustomHeightAttr = &_daedb
			continue
		}
		if _bfcae.Name.Local == "\u0073\u0070\u0061n\u0073" {
			_bdgge, _adefc := ParseSliceST_CellSpans(_bfcae.Value)
			if _adefc != nil {
				return _adefc
			}
			_bfece.SpansAttr = &_bdgge
			continue
		}
		if _bfcae.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_bddfga, _adaaa := _a.ParseBool(_bfcae.Value)
			if _adaaa != nil {
				return _adaaa
			}
			_bfece.CollapsedAttr = &_bddfga
			continue
		}
		if _bfcae.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_dcebd, _eaafb := _a.ParseBool(_bfcae.Value)
			if _eaafb != nil {
				return _eaafb
			}
			_bfece.ThickTopAttr = &_dcebd
			continue
		}
		if _bfcae.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074" {
			_efaae, _ebdfb := _a.ParseBool(_bfcae.Value)
			if _ebdfb != nil {
				return _ebdfb
			}
			_bfece.ThickBotAttr = &_efaae
			continue
		}
		if _bfcae.Name.Local == "\u0070\u0068" {
			_bafac, _dgafgb := _a.ParseBool(_bfcae.Value)
			if _dgafgb != nil {
				return _dgafgb
			}
			_bfece.PhAttr = &_bafac
			continue
		}
	}
_baegb:
	for {
		_efbbcg, _abcdd := d.Token()
		if _abcdd != nil {
			return _abcdd
		}
		switch _aacef := _efbbcg.(type) {
		case _gd.StartElement:
			switch _aacef.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_ggdce := NewCT_Cell()
				if _afdee := d.DecodeElement(_ggdce, &_aacef); _afdee != nil {
					return _afdee
				}
				_bfece.C = append(_bfece.C, _ggdce)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfece.ExtLst = NewCT_ExtensionList()
				if _dagb := d.DecodeElement(_bfece.ExtLst, &_aacef); _dagb != nil {
					return _dagb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u006f\u0077\u0020\u0025\u0076", _aacef.Name)
				if _daeag := d.Skip(); _daeag != nil {
					return _daeag
				}
			}
		case _gd.EndElement:
			break _baegb
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_PivotCacheDefinition() *CT_PivotCacheDefinition {
	_ffbac := &CT_PivotCacheDefinition{}
	_ffbac.CacheSource = NewCT_CacheSource()
	_ffbac.CacheFields = NewCT_CacheFields()
	return _ffbac
}

type CT_Missing struct {

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

type CT_Chartsheet struct {

	// Chart Sheet Properties
	SheetPr *CT_ChartsheetPr

	// Chart Sheet Views
	SheetViews *CT_ChartsheetViews

	// Chart Sheet Protection
	SheetProtection *CT_ChartsheetProtection

	// Custom Chart Sheet Views
	CustomSheetViews *CT_CustomChartsheetViews
	PageMargins      *CT_PageMargins
	PageSetup        *CT_CsPageSetup
	HeaderFooter     *CT_HeaderFooter

	// Drawing
	Drawing       *CT_Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Reference in Header Footer
	LegacyDrawingHF *CT_LegacyDrawing

	// Drawing Reference in Header Footer
	DrawingHF       *CT_DrawingHF
	Picture         *CT_SheetBackgroundPicture
	WebPublishItems *CT_WebPublishItems
	ExtLst          *CT_ExtensionList
}

func (_beeecc *CT_PageFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _beeecc.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_beeecc.CountAttr)})
	}
	e.EncodeToken(start)
	_dgdeg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064"}}
	for _, _cdged := range _beeecc.PageField {
		e.EncodeElement(_cdged, _dgdeg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleObject and its children
func (_fgcce *CT_OleObject) Validate() error {
	return _fgcce.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

// Validate validates the CT_Control and its children
func (_bbcc *CT_Control) Validate() error {
	return _bbcc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

func (_efada *CT_RevisionDefinedName) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _efada.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_efada.LocalSheetIdAttr)})
	}
	if _efada.CustomViewAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efada.CustomViewAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _efada.NameAttr)})
	if _efada.FunctionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efada.FunctionAttr))})
	}
	if _efada.OldFunctionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efada.OldFunctionAttr))})
	}
	if _efada.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_efada.FunctionGroupIdAttr)})
	}
	if _efada.OldFunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_efada.OldFunctionGroupIdAttr)})
	}
	if _efada.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_efada.ShortcutKeyAttr)})
	}
	if _efada.OldShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_efada.OldShortcutKeyAttr)})
	}
	if _efada.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efada.HiddenAttr))})
	}
	if _efada.OldHiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efada.OldHiddenAttr))})
	}
	if _efada.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _b.Sprintf("\u0025\u0076", *_efada.CustomMenuAttr)})
	}
	if _efada.OldCustomMenuAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _b.Sprintf("\u0025\u0076", *_efada.OldCustomMenuAttr)})
	}
	if _efada.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_efada.DescriptionAttr)})
	}
	if _efada.OldDescriptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_efada.OldDescriptionAttr)})
	}
	if _efada.HelpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_efada.HelpAttr)})
	}
	if _efada.OldHelpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fl\u0064\u0048\u0065\u006c\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_efada.OldHelpAttr)})
	}
	if _efada.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _b.Sprintf("\u0025\u0076", *_efada.StatusBarAttr)})
	}
	if _efada.OldStatusBarAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_efada.OldStatusBarAttr)})
	}
	if _efada.CommentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_efada.CommentAttr)})
	}
	if _efada.OldCommentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_efada.OldCommentAttr)})
	}
	if _efada.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_efada.RIdAttr)})
	}
	if _efada.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efada.UaAttr))})
	}
	if _efada.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efada.RaAttr))})
	}
	e.EncodeToken(start)
	if _efada.Formula != nil {
		_fbadc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_e.AddPreserveSpaceAttr(&_fbadc, *_efada.Formula)
		e.EncodeElement(_efada.Formula, _fbadc)
	}
	if _efada.OldFormula != nil {
		_gfcgb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_e.AddPreserveSpaceAttr(&_gfcgb, *_efada.OldFormula)
		e.EncodeElement(_efada.OldFormula, _gfcgb)
	}
	if _efada.ExtLst != nil {
		_fdgeg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_efada.ExtLst, _fdgeg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_DataFields struct {

	// Data Items Count
	CountAttr *uint32

	// Data Field Item
	DataField []*CT_DataField
}

func NewCT_Query() *CT_Query { _ccaaad := &CT_Query{}; return _ccaaad }

func (_gcgdaf ST_TableStyleType) Validate() error { return _gcgdaf.ValidateWithPath("") }

func (_beffa ST_PhoneticAlignment) Validate() error { return _beffa.ValidateWithPath("") }

// ValidateWithPath validates the CT_Field and its children, prefixing error messages with path
func (_dccba *CT_Field) ValidateWithPath(path string) error { return nil }

func (_agaafd ST_DdeValueType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bgabbg := _gd.Attr{}
	_bgabbg.Name = name
	switch _agaafd {
	case ST_DdeValueTypeUnset:
		_bgabbg.Value = ""
	case ST_DdeValueTypeNil:
		_bgabbg.Value = "\u006e\u0069\u006c"
	case ST_DdeValueTypeB:
		_bgabbg.Value = "\u0062"
	case ST_DdeValueTypeN:
		_bgabbg.Value = "\u006e"
	case ST_DdeValueTypeE:
		_bgabbg.Value = "\u0065"
	case ST_DdeValueTypeStr:
		_bgabbg.Value = "\u0073\u0074\u0072"
	}
	return _bgabbg, nil
}

// ValidateWithPath validates the PivotCacheDefinition and its children, prefixing error messages with path
func (_dcgea *PivotCacheDefinition) ValidateWithPath(path string) error {
	if _agefc := _dcgea.CT_PivotCacheDefinition.ValidateWithPath(path); _agefc != nil {
		return _agefc
	}
	return nil
}

func (_edafca *CT_Row) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _edafca.RAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_edafca.RAttr)})
	}
	if _edafca.SpansAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0070\u0061n\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_edafca.SpansAttr)})
	}
	if _edafca.SAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_edafca.SAttr)})
	}
	if _edafca.CustomFormatAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edafca.CustomFormatAttr))})
	}
	if _edafca.HtAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_edafca.HtAttr)})
	}
	if _edafca.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edafca.HiddenAttr))})
	}
	if _edafca.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edafca.CustomHeightAttr))})
	}
	if _edafca.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_edafca.OutlineLevelAttr)})
	}
	if _edafca.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edafca.CollapsedAttr))})
	}
	if _edafca.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edafca.ThickTopAttr))})
	}
	if _edafca.ThickBotAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edafca.ThickBotAttr))})
	}
	if _edafca.PhAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edafca.PhAttr))})
	}
	e.EncodeToken(start)
	if _edafca.C != nil {
		_gceee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063"}}
		for _, _decec := range _edafca.C {
			e.EncodeElement(_decec, _gceee)
		}
	}
	if _edafca.ExtLst != nil {
		_beaeg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_edafca.ExtLst, _beaeg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_WebPr struct {

	// XML Source
	XmlAttr *bool

	// Import XML Source Data
	SourceDataAttr *bool

	// Parse PRE
	ParsePreAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Use First Row
	FirstRowAttr *bool

	// Created in Excel 97
	Xl97Attr *bool

	// Dates as Text
	TextDatesAttr *bool

	// Refreshed in Excel 2000
	Xl2000Attr *bool

	// URL
	UrlAttr *string

	// Web Post
	PostAttr *string

	// HTML Tables Only
	HtmlTablesAttr *bool

	// HTML Formatting Handling
	HtmlFormatAttr ST_HtmlFmt

	// Edit Query URL
	EditPageAttr *string

	// Tables
	Tables *CT_Tables
}

func NewCT_SheetCalcPr() *CT_SheetCalcPr { _gadgd := &CT_SheetCalcPr{}; return _gadgd }

func NewCT_CellAlignment() *CT_CellAlignment { _bfda := &CT_CellAlignment{}; return _bfda }

// Validate validates the CT_OleSize and its children
func (_cbbdf *CT_OleSize) Validate() error {
	return _cbbdf.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065")
}

func (_egfc *CT_CellStyles) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _egfc.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_egfc.CountAttr)})
	}
	e.EncodeToken(start)
	_bgedd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}}
	for _, _dfgd := range _egfc.CellStyle {
		e.EncodeElement(_dfgd, _bgedd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetViews and its children
func (_gafcd *CT_SheetViews) Validate() error {
	return _gafcd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

func (_ebbcgg *CT_PageSetup) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _agcbcc := range start.Attr {
		if _agcbcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agcbcc.Name.Local == "\u0069\u0064" || _agcbcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _agcbcc.Name.Local == "\u0069\u0064" {
			_dcdaa, _agbfe := _agcbcc.Value, error(nil)
			if _agbfe != nil {
				return _agbfe
			}
			_ebbcgg.IdAttr = &_dcdaa
			continue
		}
		if _agcbcc.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_fcfe, _efeg := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _efeg != nil {
				return _efeg
			}
			_cgddb := uint32(_fcfe)
			_ebbcgg.PaperSizeAttr = &_cgddb
			continue
		}
		if _agcbcc.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_efeeb, _cgefa := _a.ParseBool(_agcbcc.Value)
			if _cgefa != nil {
				return _cgefa
			}
			_ebbcgg.BlackAndWhiteAttr = &_efeeb
			continue
		}
		if _agcbcc.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_bgbd, _facae := _a.ParseBool(_agcbcc.Value)
			if _facae != nil {
				return _facae
			}
			_ebbcgg.DraftAttr = &_bgbd
			continue
		}
		if _agcbcc.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_ffgbe, _cfbddf := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _cfbddf != nil {
				return _cfbddf
			}
			_gfegf := uint32(_ffgbe)
			_ebbcgg.ScaleAttr = &_gfegf
			continue
		}
		if _agcbcc.Name.Local == "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_ebbcgg.CellCommentsAttr.UnmarshalXMLAttr(_agcbcc)
			continue
		}
		if _agcbcc.Name.Local == "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068" {
			_fdfca, _bgacg := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _bgacg != nil {
				return _bgacg
			}
			_dgbde := uint32(_fdfca)
			_ebbcgg.FitToWidthAttr = &_dgbde
			continue
		}
		if _agcbcc.Name.Local == "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r" {
			_ebbcgg.PageOrderAttr.UnmarshalXMLAttr(_agcbcc)
			continue
		}
		if _agcbcc.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_ebbcgg.OrientationAttr.UnmarshalXMLAttr(_agcbcc)
			continue
		}
		if _agcbcc.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_gage, _gggfb := _agcbcc.Value, error(nil)
			if _gggfb != nil {
				return _gggfb
			}
			_ebbcgg.PaperHeightAttr = &_gage
			continue
		}
		if _agcbcc.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_ecdba, _adda := _agcbcc.Value, error(nil)
			if _adda != nil {
				return _adda
			}
			_ebbcgg.PaperWidthAttr = &_ecdba
			continue
		}
		if _agcbcc.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_eafca, _dbeba := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _dbeba != nil {
				return _dbeba
			}
			_egdffg := uint32(_eafca)
			_ebbcgg.FirstPageNumberAttr = &_egdffg
			continue
		}
		if _agcbcc.Name.Local == "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_efgde, _fcgg := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _fcgg != nil {
				return _fcgg
			}
			_addeg := uint32(_efgde)
			_ebbcgg.FitToHeightAttr = &_addeg
			continue
		}
		if _agcbcc.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_ddaca, _cagac := _a.ParseBool(_agcbcc.Value)
			if _cagac != nil {
				return _cagac
			}
			_ebbcgg.UseFirstPageNumberAttr = &_ddaca
			continue
		}
		if _agcbcc.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0073" {
			_ebbcgg.ErrorsAttr.UnmarshalXMLAttr(_agcbcc)
			continue
		}
		if _agcbcc.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_afdgfd, _afeab := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _afeab != nil {
				return _afeab
			}
			_gcafa := uint32(_afdgfd)
			_ebbcgg.HorizontalDpiAttr = &_gcafa
			continue
		}
		if _agcbcc.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_fbfdfa, _acgcd := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _acgcd != nil {
				return _acgcd
			}
			_egdca := uint32(_fbfdfa)
			_ebbcgg.VerticalDpiAttr = &_egdca
			continue
		}
		if _agcbcc.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_bgecae, _bddfc := _a.ParseUint(_agcbcc.Value, 10, 32)
			if _bddfc != nil {
				return _bddfc
			}
			_babbb := uint32(_bgecae)
			_ebbcgg.CopiesAttr = &_babbb
			continue
		}
		if _agcbcc.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_cbede, _dbfdd := _a.ParseBool(_agcbcc.Value)
			if _dbfdd != nil {
				return _dbfdd
			}
			_ebbcgg.UsePrinterDefaultsAttr = &_cbede
			continue
		}
	}
	for {
		_cceec, _aabcf := d.Token()
		if _aabcf != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061g\u0065\u0053\u0065\u0074\u0075\u0070\u003a\u0020\u0025\u0073", _aabcf)
		}
		if _abbcg, _faegf := _cceec.(_gd.EndElement); _faegf && _abbcg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecbaa *CT_X) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbcbb := range start.Attr {
		if _bbcbb.Name.Local == "\u0076" {
			_adbbfb, _ffacgf := _a.ParseInt(_bbcbb.Value, 10, 32)
			if _ffacgf != nil {
				return _ffacgf
			}
			_bffcab := int32(_adbbfb)
			_ecbaa.VAttr = &_bffcab
			continue
		}
	}
	for {
		_ggaeef, _decbe := d.Token()
		if _decbe != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0058\u003a\u0020\u0025\u0073", _decbe)
		}
		if _baefa, _begff := _ggaeef.(_gd.EndElement); _begff && _baefa.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the AG_AutoFormat and its children
func (_eg *AG_AutoFormat) Validate() error {
	return _eg.ValidateWithPath("\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074")
}

func (_dagcc *ST_FileType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ebbcf, _egaff := d.Token()
	if _egaff != nil {
		return _egaff
	}
	if _gecbe, _beeege := _ebbcf.(_gd.EndElement); _beeege && _gecbe.Name == start.Name {
		*_dagcc = 1
		return nil
	}
	if _ebbdb, _begcd := _ebbcf.(_gd.CharData); !_begcd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebbcf)
	} else {
		switch string(_ebbdb) {
		case "":
			*_dagcc = 0
		case "\u006d\u0061\u0063":
			*_dagcc = 1
		case "\u0077\u0069\u006e":
			*_dagcc = 2
		case "\u0064\u006f\u0073":
			*_dagcc = 3
		case "\u006c\u0069\u006e":
			*_dagcc = 4
		case "\u006f\u0074\u0068e\u0072":
			*_dagcc = 5
		}
	}
	_ebbcf, _egaff = d.Token()
	if _egaff != nil {
		return _egaff
	}
	if _aacaca, _egcff := _ebbcf.(_gd.EndElement); _egcff && _aacaca.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebbcf)
}

const (
	ST_PivotFilterTypeUnset                     ST_PivotFilterType = 0
	ST_PivotFilterTypeUnknown                   ST_PivotFilterType = 1
	ST_PivotFilterTypeCount                     ST_PivotFilterType = 2
	ST_PivotFilterTypePercent                   ST_PivotFilterType = 3
	ST_PivotFilterTypeSum                       ST_PivotFilterType = 4
	ST_PivotFilterTypeCaptionEqual              ST_PivotFilterType = 5
	ST_PivotFilterTypeCaptionNotEqual           ST_PivotFilterType = 6
	ST_PivotFilterTypeCaptionBeginsWith         ST_PivotFilterType = 7
	ST_PivotFilterTypeCaptionNotBeginsWith      ST_PivotFilterType = 8
	ST_PivotFilterTypeCaptionEndsWith           ST_PivotFilterType = 9
	ST_PivotFilterTypeCaptionNotEndsWith        ST_PivotFilterType = 10
	ST_PivotFilterTypeCaptionContains           ST_PivotFilterType = 11
	ST_PivotFilterTypeCaptionNotContains        ST_PivotFilterType = 12
	ST_PivotFilterTypeCaptionGreaterThan        ST_PivotFilterType = 13
	ST_PivotFilterTypeCaptionGreaterThanOrEqual ST_PivotFilterType = 14
	ST_PivotFilterTypeCaptionLessThan           ST_PivotFilterType = 15
	ST_PivotFilterTypeCaptionLessThanOrEqual    ST_PivotFilterType = 16
	ST_PivotFilterTypeCaptionBetween            ST_PivotFilterType = 17
	ST_PivotFilterTypeCaptionNotBetween         ST_PivotFilterType = 18
	ST_PivotFilterTypeValueEqual                ST_PivotFilterType = 19
	ST_PivotFilterTypeValueNotEqual             ST_PivotFilterType = 20
	ST_PivotFilterTypeValueGreaterThan          ST_PivotFilterType = 21
	ST_PivotFilterTypeValueGreaterThanOrEqual   ST_PivotFilterType = 22
	ST_PivotFilterTypeValueLessThan             ST_PivotFilterType = 23
	ST_PivotFilterTypeValueLessThanOrEqual      ST_PivotFilterType = 24
	ST_PivotFilterTypeValueBetween              ST_PivotFilterType = 25
	ST_PivotFilterTypeValueNotBetween           ST_PivotFilterType = 26
	ST_PivotFilterTypeDateEqual                 ST_PivotFilterType = 27
	ST_PivotFilterTypeDateNotEqual              ST_PivotFilterType = 28
	ST_PivotFilterTypeDateOlderThan             ST_PivotFilterType = 29
	ST_PivotFilterTypeDateOlderThanOrEqual      ST_PivotFilterType = 30
	ST_PivotFilterTypeDateNewerThan             ST_PivotFilterType = 31
	ST_PivotFilterTypeDateNewerThanOrEqual      ST_PivotFilterType = 32
	ST_PivotFilterTypeDateBetween               ST_PivotFilterType = 33
	ST_PivotFilterTypeDateNotBetween            ST_PivotFilterType = 34
	ST_PivotFilterTypeTomorrow                  ST_PivotFilterType = 35
	ST_PivotFilterTypeToday                     ST_PivotFilterType = 36
	ST_PivotFilterTypeYesterday                 ST_PivotFilterType = 37
	ST_PivotFilterTypeNextWeek                  ST_PivotFilterType = 38
	ST_PivotFilterTypeThisWeek                  ST_PivotFilterType = 39
	ST_PivotFilterTypeLastWeek                  ST_PivotFilterType = 40
	ST_PivotFilterTypeNextMonth                 ST_PivotFilterType = 41
	ST_PivotFilterTypeThisMonth                 ST_PivotFilterType = 42
	ST_PivotFilterTypeLastMonth                 ST_PivotFilterType = 43
	ST_PivotFilterTypeNextQuarter               ST_PivotFilterType = 44
	ST_PivotFilterTypeThisQuarter               ST_PivotFilterType = 45
	ST_PivotFilterTypeLastQuarter               ST_PivotFilterType = 46
	ST_PivotFilterTypeNextYear                  ST_PivotFilterType = 47
	ST_PivotFilterTypeThisYear                  ST_PivotFilterType = 48
	ST_PivotFilterTypeLastYear                  ST_PivotFilterType = 49
	ST_PivotFilterTypeYearToDate                ST_PivotFilterType = 50
	ST_PivotFilterTypeQ1                        ST_PivotFilterType = 51
	ST_PivotFilterTypeQ2                        ST_PivotFilterType = 52
	ST_PivotFilterTypeQ3                        ST_PivotFilterType = 53
	ST_PivotFilterTypeQ4                        ST_PivotFilterType = 54
	ST_PivotFilterTypeM1                        ST_PivotFilterType = 55
	ST_PivotFilterTypeM2                        ST_PivotFilterType = 56
	ST_PivotFilterTypeM3                        ST_PivotFilterType = 57
	ST_PivotFilterTypeM4                        ST_PivotFilterType = 58
	ST_PivotFilterTypeM5                        ST_PivotFilterType = 59
	ST_PivotFilterTypeM6                        ST_PivotFilterType = 60
	ST_PivotFilterTypeM7                        ST_PivotFilterType = 61
	ST_PivotFilterTypeM8                        ST_PivotFilterType = 62
	ST_PivotFilterTypeM9                        ST_PivotFilterType = 63
	ST_PivotFilterTypeM10                       ST_PivotFilterType = 64
	ST_PivotFilterTypeM11                       ST_PivotFilterType = 65
	ST_PivotFilterTypeM12                       ST_PivotFilterType = 66
)

func (_fabef *CT_PCDSDTCEntries) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fabef.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fabef.CountAttr)})
	}
	e.EncodeToken(start)
	if _fabef.M != nil {
		_gcfge := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _cgfdc := range _fabef.M {
			e.EncodeElement(_cgfdc, _gcfge)
		}
	}
	if _fabef.N != nil {
		_befcca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _bdedg := range _fabef.N {
			e.EncodeElement(_bdedg, _befcca)
		}
	}
	if _fabef.E != nil {
		_acdbag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _egfgbb := range _fabef.E {
			e.EncodeElement(_egfgbb, _acdbag)
		}
	}
	if _fabef.S != nil {
		_ebabdc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _ebdefe := range _fabef.S {
			e.EncodeElement(_ebdefe, _ebabdc)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupMember and its children, prefixing error messages with path
func (_edcaa *CT_GroupMember) ValidateWithPath(path string) error { return nil }

func (_aecgb *CT_ConditionalFormatting) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aecgb.PivotAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aecgb.PivotAttr))})
	}
	if _aecgb.SqrefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_aecgb.SqrefAttr)})
	}
	e.EncodeToken(start)
	_cadfd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u0066\u0052\u0075\u006ce"}}
	for _, _dgcc := range _aecgb.CfRule {
		e.EncodeElement(_dgcc, _cadfd)
	}
	if _aecgb.ExtLst != nil {
		_ecgfa := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aecgb.ExtLst, _ecgfa)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ccfgb *CT_Schema) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _addgg := range start.Attr {
		if _addgg.Name.Local == "\u0049\u0044" {
			_ecbedc, _abgbf := _addgg.Value, error(nil)
			if _abgbf != nil {
				return _abgbf
			}
			_ccfgb.IDAttr = _ecbedc
			continue
		}
		if _addgg.Name.Local == "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f" {
			_ggfgf, _bccbcf := _addgg.Value, error(nil)
			if _bccbcf != nil {
				return _bccbcf
			}
			_ccfgb.SchemaRefAttr = &_ggfgf
			continue
		}
		if _addgg.Name.Local == "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e" {
			_deecd, _gfagga := _addgg.Value, error(nil)
			if _gfagga != nil {
				return _gfagga
			}
			_ccfgb.NamespaceAttr = &_deecd
			continue
		}
		if _addgg.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065" {
			_bbfadc, _cfgdd := _addgg.Value, error(nil)
			if _cfgdd != nil {
				return _cfgdd
			}
			_ccfgb.SchemaLanguageAttr = &_bbfadc
			continue
		}
	}
_dgbef:
	for {
		_cdcab, _bbccd := d.Token()
		if _bbccd != nil {
			return _bbccd
		}
		switch _egafa := _cdcab.(type) {
		case _gd.StartElement:
			switch _egafa.Name {
			default:
				if _bgeec, _dggcf := _e.CreateElement(_egafa); _dggcf != nil {
					return _dggcf
				} else {
					if _cffdg := d.DecodeElement(_bgeec, &_egafa); _cffdg != nil {
						return _cffdg
					}
					_ccfgb.Any = _bgeec
				}
			}
		case _gd.EndElement:
			break _dgbef
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CustomFilter and its children
func (_efgf *CT_CustomFilter) Validate() error {
	return _efgf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072")
}

type CT_TableStyles struct {

	// Table Style Count
	CountAttr *uint32

	// Default Table Style
	DefaultTableStyleAttr *string

	// Default Pivot Style
	DefaultPivotStyleAttr *string

	// Table Style
	TableStyle []*CT_TableStyle
}

// ValidateWithPath validates the CT_SmartTagType and its children, prefixing error messages with path
func (_eeedf *CT_SmartTagType) ValidateWithPath(path string) error { return nil }

func (_cecad *ST_Visibility) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cecad = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_cecad = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_cecad = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_cecad = 3
	}
	return nil
}

func NewCT_Sheet() *CT_Sheet { _dbcea := &CT_Sheet{}; return _dbcea }

// Validate validates the CT_Parameters and its children
func (_bbfgdc *CT_Parameters) Validate() error {
	return _bbfgdc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073")
}

func NewCT_MapInfo() *CT_MapInfo { _fabec := &CT_MapInfo{}; return _fabec }

func (_efecd ST_CellFormulaType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_efecd.String(), start)
}

func (_egfeg ST_SheetViewType) ValidateWithPath(path string) error {
	switch _egfeg {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egfeg))
	}
	return nil
}

// ValidateWithPath validates the CT_MRUColors and its children, prefixing error messages with path
func (_acbg *CT_MRUColors) ValidateWithPath(path string) error {
	for _dedaa, _acgaa := range _acbg.Color {
		if _aecdd := _acgaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _dedaa)); _aecdd != nil {
			return _aecdd
		}
	}
	return nil
}

// Validate validates the CT_SharedUser and its children
func (_gaada *CT_SharedUser) Validate() error {
	return _gaada.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072")
}

// ValidateWithPath validates the CT_Sst and its children, prefixing error messages with path
func (_agfed *CT_Sst) ValidateWithPath(path string) error {
	for _aefffe, _daafg := range _agfed.Si {
		if _babcce := _daafg.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0053\u0069\u005b\u0025\u0064]", path, _aefffe)); _babcce != nil {
			return _babcce
		}
	}
	if _agfed.ExtLst != nil {
		if _afdde := _agfed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afdde != nil {
			return _afdde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DefinedNames and its children, prefixing error messages with path
func (_cagf *CT_DefinedNames) ValidateWithPath(path string) error {
	for _cfaa, _faea := range _cagf.DefinedName {
		if _eadccb := _faea.ValidateWithPath(_b.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _cfaa)); _eadccb != nil {
			return _eadccb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPr and its children, prefixing error messages with path
func (_eadeg *CT_WebPr) ValidateWithPath(path string) error {
	if _eaega := _eadeg.HtmlFormatAttr.ValidateWithPath(path + "\u002fH\u0074m\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0041\u0074\u0074\u0072"); _eaega != nil {
		return _eaega
	}
	if _eadeg.Tables != nil {
		if _acfbd := _eadeg.Tables.ValidateWithPath(path + "\u002fT\u0061\u0062\u006c\u0065\u0073"); _acfbd != nil {
			return _acfbd
		}
	}
	return nil
}

func (_ebggb ST_TimePeriod) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_efedcd := _gd.Attr{}
	_efedcd.Name = name
	switch _ebggb {
	case ST_TimePeriodUnset:
		_efedcd.Value = ""
	case ST_TimePeriodToday:
		_efedcd.Value = "\u0074\u006f\u0064a\u0079"
	case ST_TimePeriodYesterday:
		_efedcd.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_TimePeriodTomorrow:
		_efedcd.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_TimePeriodLast7Days:
		_efedcd.Value = "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case ST_TimePeriodThisMonth:
		_efedcd.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodLastMonth:
		_efedcd.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodNextMonth:
		_efedcd.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodThisWeek:
		_efedcd.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_TimePeriodLastWeek:
		_efedcd.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_TimePeriodNextWeek:
		_efedcd.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return _efedcd, nil
}

type CT_GroupItems struct {

	// Items Created Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

// ValidateWithPath validates the CT_FontName and its children, prefixing error messages with path
func (_fbfff *CT_FontName) ValidateWithPath(path string) error { return nil }

func (_bfccf *CT_QueryCache) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _adcaa := range start.Attr {
		if _adcaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbcdb, _aadad := _a.ParseUint(_adcaa.Value, 10, 32)
			if _aadad != nil {
				return _aadad
			}
			_eeag := uint32(_dbcdb)
			_bfccf.CountAttr = &_eeag
			continue
		}
	}
_fbgef:
	for {
		_bacbdc, _ffgfdf := d.Token()
		if _ffgfdf != nil {
			return _ffgfdf
		}
		switch _dcafa := _bacbdc.(type) {
		case _gd.StartElement:
			switch _dcafa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}:
				_cfdcc := NewCT_Query()
				if _ffadfee := d.DecodeElement(_cfdcc, &_dcafa); _ffadfee != nil {
					return _ffadfee
				}
				_bfccf.Query = append(_bfccf.Query, _cfdcc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _dcafa.Name)
				if _eeeda := d.Skip(); _eeeda != nil {
					return _eeeda
				}
			}
		case _gd.EndElement:
			break _fbgef
		case _gd.CharData:
		}
	}
	return nil
}

func (_aecage *CT_InputCells) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", _aecage.RAttr)})
	if _aecage.DeletedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aecage.DeletedAttr))})
	}
	if _aecage.UndoneAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0064\u006f\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aecage.UndoneAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _aecage.ValAttr)})
	if _aecage.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aecage.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ccfeg *CT_SheetPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ccfeg.SyncHorizontalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccfeg.SyncHorizontalAttr))})
	}
	if _ccfeg.SyncVerticalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccfeg.SyncVerticalAttr))})
	}
	if _ccfeg.SyncRefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073y\u006e\u0063\u0052\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_ccfeg.SyncRefAttr)})
	}
	if _ccfeg.TransitionEvaluationAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccfeg.TransitionEvaluationAttr))})
	}
	if _ccfeg.TransitionEntryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccfeg.TransitionEntryAttr))})
	}
	if _ccfeg.PublishedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccfeg.PublishedAttr))})
	}
	if _ccfeg.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ccfeg.CodeNameAttr)})
	}
	if _ccfeg.FilterModeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccfeg.FilterModeAttr))})
	}
	if _ccfeg.EnableFormatConditionsCalculationAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccfeg.EnableFormatConditionsCalculationAttr))})
	}
	e.EncodeToken(start)
	if _ccfeg.TabColor != nil {
		_fegfd := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_ccfeg.TabColor, _fegfd)
	}
	if _ccfeg.OutlinePr != nil {
		_abfgg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ao\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"}}
		e.EncodeElement(_ccfeg.OutlinePr, _abfgg)
	}
	if _ccfeg.PageSetUpPr != nil {
		_gfage := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072"}}
		e.EncodeElement(_ccfeg.PageSetUpPr, _gfage)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_SingleXmlCell struct {

	// Table Id
	IdAttr uint32

	// Reference
	RAttr string

	// Connection ID
	ConnectionIdAttr uint32

	// Cell Properties
	XmlCellPr *CT_XmlCellPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fcga *CT_Fills) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gabfe := range start.Attr {
		if _gabfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddgcf, _cacfg := _a.ParseUint(_gabfe.Value, 10, 32)
			if _cacfg != nil {
				return _cacfg
			}
			_bcdceb := uint32(_ddgcf)
			_fcga.CountAttr = &_bcdceb
			continue
		}
	}
_agbbc:
	for {
		_eaadf, _dbbf := d.Token()
		if _dbbf != nil {
			return _dbbf
		}
		switch _ebgea := _eaadf.(type) {
		case _gd.StartElement:
			switch _ebgea.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_ceeecf := NewCT_Fill()
				if _feag := d.DecodeElement(_ceeecf, &_ebgea); _feag != nil {
					return _feag
				}
				_fcga.Fill = append(_fcga.Fill, _ceeecf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073\u0020\u0025\u0076", _ebgea.Name)
				if _cbbdc := d.Skip(); _cbbdc != nil {
					return _cbbdc
				}
			}
		case _gd.EndElement:
			break _agbbc
		case _gd.CharData:
		}
	}
	return nil
}

func (_abbdd ST_VolDepType) Validate() error { return _abbdd.ValidateWithPath("") }

func (_abeee *CT_FunctionGroup) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aedcd := range start.Attr {
		if _aedcd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_afbdg, _bbefe := _aedcd.Value, error(nil)
			if _bbefe != nil {
				return _bbefe
			}
			_abeee.NameAttr = &_afbdg
			continue
		}
	}
	for {
		_egceg, _baebd := d.Token()
		if _baebd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063t\u0069o\u006e\u0047\u0072\u006f\u0075\u0070\u003a \u0025\u0073", _baebd)
		}
		if _cgdbc, _fbbb := _egceg.(_gd.EndElement); _fbbb && _cgdbc.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_DataValidationImeMode byte

type CT_DataField struct {

	// Data Field Name
	NameAttr *string

	// Field
	FldAttr uint32

	// Subtotal
	SubtotalAttr ST_DataConsolidateFunction

	// Show Data As Display Format
	ShowDataAsAttr ST_ShowDataAs

	// 'Show Data As' Base Field
	BaseFieldAttr *int32

	// 'Show Data As' Base Setting
	BaseItemAttr *uint32

	// Number Format Id
	NumFmtIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_CellSmartTag and its children, prefixing error messages with path
func (_cbeeb *CT_CellSmartTag) ValidateWithPath(path string) error {
	for _gbed, _ffcf := range _cbeeb.CellSmartTagPr {
		if _deeg := _ffcf.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u0065ll\u0053m\u0061\u0072\u0074\u0054\u0061g\u0050\u0072\u005b\u0025\u0064\u005d", path, _gbed)); _deeg != nil {
			return _deeg
		}
	}
	return nil
}

func NewCT_TableParts() *CT_TableParts { _badfc := &CT_TableParts{}; return _badfc }

// Validate validates the CT_QueryTable and its children
func (_dcacd *CT_QueryTable) Validate() error {
	return _dcacd.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

func (_aaace *CT_WorkbookProtection) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aaace.WorkbookPasswordAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.WorkbookPasswordAttr)})
	}
	if _aaace.WorkbookPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.WorkbookPasswordCharacterSetAttr)})
	}
	if _aaace.RevisionsPasswordAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.RevisionsPasswordAttr)})
	}
	if _aaace.RevisionsPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.RevisionsPasswordCharacterSetAttr)})
	}
	if _aaace.LockStructureAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aaace.LockStructureAttr))})
	}
	if _aaace.LockWindowsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aaace.LockWindowsAttr))})
	}
	if _aaace.LockRevisionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aaace.LockRevisionAttr))})
	}
	if _aaace.RevisionsAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.RevisionsAlgorithmNameAttr)})
	}
	if _aaace.RevisionsHashValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.RevisionsHashValueAttr)})
	}
	if _aaace.RevisionsSaltValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.RevisionsSaltValueAttr)})
	}
	if _aaace.RevisionsSpinCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.RevisionsSpinCountAttr)})
	}
	if _aaace.WorkbookAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.WorkbookAlgorithmNameAttr)})
	}
	if _aaace.WorkbookHashValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.WorkbookHashValueAttr)})
	}
	if _aaace.WorkbookSaltValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.WorkbookSaltValueAttr)})
	}
	if _aaace.WorkbookSpinCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_aaace.WorkbookSpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bfcee *CT_SheetData) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_ddcef:
	for {
		_eecbb, _bddcb := d.Token()
		if _bddcb != nil {
			return _bddcb
		}
		switch _acbfc := _eecbb.(type) {
		case _gd.StartElement:
			switch _acbfc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_egdgg := NewCT_Row()
				if _gcbce := d.DecodeElement(_egdgg, &_acbfc); _gcbce != nil {
					return _gcbce
				}
				_bfcee.Row = append(_bfcee.Row, _egdgg)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _acbfc.Name)
				if _bgcea := d.Skip(); _bgcea != nil {
					return _bgcea
				}
			}
		case _gd.EndElement:
			break _ddcef
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_ConditionalFormats() *CT_ConditionalFormats {
	_deafa := &CT_ConditionalFormats{}
	return _deafa
}

type CT_VolTopic struct {

	// Type
	TAttr ST_VolValueType

	// Topic Value
	V string

	// Strings in Subtopic
	Stp []string

	// References
	Tr []*CT_VolTopicRef
}

func (_afaea ST_RefMode) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dafcb := _gd.Attr{}
	_dafcb.Name = name
	switch _afaea {
	case ST_RefModeUnset:
		_dafcb.Value = ""
	case ST_RefModeA1:
		_dafcb.Value = "\u0041\u0031"
	case ST_RefModeR1C1:
		_dafcb.Value = "\u0052\u0031\u0043\u0031"
	}
	return _dafcb, nil
}

// Validate validates the CT_GradientStop and its children
func (_edaff *CT_GradientStop) Validate() error {
	return _edaff.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

func NewCT_RangeSet() *CT_RangeSet { _eeffb := &CT_RangeSet{}; return _eeffb }

type CT_ExternalDefinedName struct {

	// Defined Name
	NameAttr string

	// Refers To
	RefersToAttr *string

	// Sheet Id
	SheetIdAttr *uint32
}

func (_degfg ST_FontScheme) Validate() error { return _degfg.ValidateWithPath("") }

func (_dcedeb *CT_ChartsheetViews) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_dgeag:
	for {
		_affe, _eade := d.Token()
		if _eade != nil {
			return _eade
		}
		switch _fgbfb := _affe.(type) {
		case _gd.StartElement:
			switch _fgbfb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_afcd := NewCT_ChartsheetView()
				if _gbaa := d.DecodeElement(_afcd, &_fgbfb); _gbaa != nil {
					return _gbaa
				}
				_dcedeb.SheetView = append(_dcedeb.SheetView, _afcd)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcedeb.ExtLst = NewCT_ExtensionList()
				if _fggce := d.DecodeElement(_dcedeb.ExtLst, &_fgbfb); _fggce != nil {
					return _fggce
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _fgbfb.Name)
				if _acgbb := d.Skip(); _acgbb != nil {
					return _acgbb
				}
			}
		case _gd.EndElement:
			break _dgeag
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_PageFields() *CT_PageFields { _adecg := &CT_PageFields{}; return _adecg }

// ValidateWithPath validates the Metadata and its children, prefixing error messages with path
func (_aecga *Metadata) ValidateWithPath(path string) error {
	if _egabbd := _aecga.CT_Metadata.ValidateWithPath(path); _egabbd != nil {
		return _egabbd
	}
	return nil
}

type CT_MeasureGroup struct {

	// Measure Group Name
	NameAttr string

	// Measure Group Display Name
	CaptionAttr string
}

type CT_Groups struct {

	// Level Group Count
	CountAttr *uint32

	// OLAP Group
	Group []*CT_LevelGroup
}

type CT_PCDSCPage struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Item
	PageItem []*CT_PageItem
}

func (_bfdbe *CT_PatternFill) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bfdbe.PatternTypeAttr != ST_PatternTypeUnset {
		_bgafe, _fcgcfd := _bfdbe.PatternTypeAttr.MarshalXMLAttr(_gd.Name{Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065"})
		if _fcgcfd != nil {
			return _fcgcfd
		}
		start.Attr = append(start.Attr, _bgafe)
	}
	e.EncodeToken(start)
	if _bfdbe.FgColor != nil {
		_bbbef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bfdbe.FgColor, _bbbef)
	}
	if _bfdbe.BgColor != nil {
		_ccafd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bfdbe.BgColor, _ccafd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Selection and its children
func (_affbfb *CT_Selection) Validate() error {
	return _affbfb.ValidateWithPath("\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_Xf and its children
func (_egeaa *CT_Xf) Validate() error { return _egeaa.ValidateWithPath("\u0043\u0054\u005fX\u0066") }

// ValidateWithPath validates the CT_Error and its children, prefixing error messages with path
func (_ecfca *CT_Error) ValidateWithPath(path string) error {
	if _ecfca.Tpls != nil {
		if _caeaa := _ecfca.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _caeaa != nil {
			return _caeaa
		}
	}
	for _gcgaf, _fffce := range _ecfca.X {
		if _aggbe := _fffce.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gcgaf)); _aggbe != nil {
			return _aggbe
		}
	}
	return nil
}

type CT_RevisionCellChange struct {

	// Sheet Id
	SIdAttr uint32

	// Old Formatting Information
	OdxfAttr *bool

	// Row Column Formatting Change
	XfDxfAttr *bool

	// Style Revision
	SAttr *bool

	// Formatting
	DxfAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Old Quote Prefix
	OldQuotePrefixAttr *bool

	// Phonetic Text
	PhAttr *bool

	// Old Phonetic Text
	OldPhAttr *bool

	// End of List Formula Update
	EndOfListFormulaUpdateAttr *bool

	// Old Cell Data
	Oc *CT_Cell

	// New Cell Data
	Nc *CT_Cell

	// Old Formatting Information
	Odxf *CT_Dxf

	// New Formatting Information
	Ndxf    *CT_Dxf
	ExtLst  *CT_ExtensionList
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

type ST_PatternType byte

func (_dffaa ST_TimePeriod) ValidateWithPath(path string) error {
	switch _dffaa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dffaa))
	}
	return nil
}

func (_ccdda ST_GrowShrinkType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ccdda.String(), start)
}

func (_abdce *CT_RevisionCellChange) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_abdce.Nc = NewCT_Cell()
	for _, _aagdd := range start.Attr {
		if _aagdd.Name.Local == "\u006f\u006c\u0064P\u0068" {
			_gebfc, _efcfb := _a.ParseBool(_aagdd.Value)
			if _efcfb != nil {
				return _efcfb
			}
			_abdce.OldPhAttr = &_gebfc
			continue
		}
		if _aagdd.Name.Local == "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065" {
			_geeg, _bdccda := _a.ParseBool(_aagdd.Value)
			if _bdccda != nil {
				return _bdccda
			}
			_abdce.EndOfListFormulaUpdateAttr = &_geeg
			continue
		}
		if _aagdd.Name.Local == "\u006f\u0064\u0078\u0066" {
			_gacgc, _gead := _a.ParseBool(_aagdd.Value)
			if _gead != nil {
				return _gead
			}
			_abdce.OdxfAttr = &_gacgc
			continue
		}
		if _aagdd.Name.Local == "\u0073" {
			_abdbag, _ceagdf := _a.ParseBool(_aagdd.Value)
			if _ceagdf != nil {
				return _ceagdf
			}
			_abdce.SAttr = &_abdbag
			continue
		}
		if _aagdd.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_ceabb, _gbgde := _a.ParseUint(_aagdd.Value, 10, 32)
			if _gbgde != nil {
				return _gbgde
			}
			_fbadg := uint32(_ceabb)
			_abdce.NumFmtIdAttr = &_fbadg
			continue
		}
		if _aagdd.Name.Local == "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078" {
			_beeefe, _daabc := _a.ParseBool(_aagdd.Value)
			if _daabc != nil {
				return _daabc
			}
			_abdce.OldQuotePrefixAttr = &_beeefe
			continue
		}
		if _aagdd.Name.Local == "\u0070\u0068" {
			_acacf, _egacg := _a.ParseBool(_aagdd.Value)
			if _egacg != nil {
				return _egacg
			}
			_abdce.PhAttr = &_acacf
			continue
		}
		if _aagdd.Name.Local == "\u0073\u0049\u0064" {
			_eegfff, _ggegg := _a.ParseUint(_aagdd.Value, 10, 32)
			if _ggegg != nil {
				return _ggegg
			}
			_abdce.SIdAttr = uint32(_eegfff)
			continue
		}
		if _aagdd.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_aeaga, _gaecfb := _a.ParseBool(_aagdd.Value)
			if _gaecfb != nil {
				return _gaecfb
			}
			_abdce.XfDxfAttr = &_aeaga
			continue
		}
		if _aagdd.Name.Local == "\u0064\u0078\u0066" {
			_ebefc, _ceabe := _a.ParseBool(_aagdd.Value)
			if _ceabe != nil {
				return _ceabe
			}
			_abdce.DxfAttr = &_ebefc
			continue
		}
		if _aagdd.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_ddfcca, _dfcbd := _a.ParseBool(_aagdd.Value)
			if _dfcbd != nil {
				return _dfcbd
			}
			_abdce.QuotePrefixAttr = &_ddfcca
			continue
		}
		if _aagdd.Name.Local == "\u0072\u0049\u0064" {
			_facbbb, _begfbg := _a.ParseUint(_aagdd.Value, 10, 32)
			if _begfbg != nil {
				return _begfbg
			}
			_ccgea := uint32(_facbbb)
			_abdce.RIdAttr = &_ccgea
			continue
		}
		if _aagdd.Name.Local == "\u0075\u0061" {
			_bcegdb, _ebfbc := _a.ParseBool(_aagdd.Value)
			if _ebfbc != nil {
				return _ebfbc
			}
			_abdce.UaAttr = &_bcegdb
			continue
		}
		if _aagdd.Name.Local == "\u0072\u0061" {
			_ffgae, _bcafa := _a.ParseBool(_aagdd.Value)
			if _bcafa != nil {
				return _bcafa
			}
			_abdce.RaAttr = &_ffgae
			continue
		}
	}
_edeff:
	for {
		_dcdeg, _bdecf := d.Token()
		if _bdecf != nil {
			return _bdecf
		}
		switch _edabe := _dcdeg.(type) {
		case _gd.StartElement:
			switch _edabe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}:
				_abdce.Oc = NewCT_Cell()
				if _ggabc := d.DecodeElement(_abdce.Oc, &_edabe); _ggabc != nil {
					return _ggabc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}:
				if _cabff := d.DecodeElement(_abdce.Nc, &_edabe); _cabff != nil {
					return _cabff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}:
				_abdce.Odxf = NewCT_Dxf()
				if _baga := d.DecodeElement(_abdce.Odxf, &_edabe); _baga != nil {
					return _baga
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}:
				_abdce.Ndxf = NewCT_Dxf()
				if _gcfab := d.DecodeElement(_abdce.Ndxf, &_edabe); _gcfab != nil {
					return _gcfab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abdce.ExtLst = NewCT_ExtensionList()
				if _gfadg := d.DecodeElement(_abdce.ExtLst, &_edabe); _gfadg != nil {
					return _gfadg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043\u0065\u006c\u006c\u0043\u0068\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _edabe.Name)
				if _ggcab := d.Skip(); _ggcab != nil {
					return _ggcab
				}
			}
		case _gd.EndElement:
			break _edeff
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the Sst and its children
func (_egacgd *Sst) Validate() error { return _egacgd.ValidateWithPath("\u0053\u0073\u0074") }

func (_bgacfd *CT_SheetViews) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_edbfg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _ddebf := range _bgacfd.SheetView {
		e.EncodeElement(_ddebf, _edbfg)
	}
	if _bgacfd.ExtLst != nil {
		_dbddd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bgacfd.ExtLst, _dbddd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ccbbc *CT_Filters) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ccbbc.BlankAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u006c\u0061n\u006b"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ccbbc.BlankAttr))})
	}
	if _ccbbc.CalendarTypeAttr != _af.ST_CalendarTypeUnset {
		_ecgb, _ffbdb := _ccbbc.CalendarTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065"})
		if _ffbdb != nil {
			return _ffbdb
		}
		start.Attr = append(start.Attr, _ecgb)
	}
	e.EncodeToken(start)
	if _ccbbc.Filter != nil {
		_cecbb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _affbf := range _ccbbc.Filter {
			e.EncodeElement(_affbf, _cecbb)
		}
	}
	if _ccbbc.DateGroupItem != nil {
		_cadcd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0064\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}}
		for _, _gaecea := range _ccbbc.DateGroupItem {
			e.EncodeElement(_gaecea, _cadcd)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_QueryTable and its children, prefixing error messages with path
func (_bafgg *CT_QueryTable) ValidateWithPath(path string) error {
	if _dcdc := _bafgg.GrowShrinkTypeAttr.ValidateWithPath(path + "\u002f\u0047\u0072\u006fwS\u0068\u0072\u0069\u006e\u006b\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _dcdc != nil {
		return _dcdc
	}
	if _bafgg.QueryTableRefresh != nil {
		if _cbbac := _bafgg.QueryTableRefresh.ValidateWithPath(path + "\u002fQ\u0075e\u0072\u0079\u0054\u0061\u0062l\u0065\u0052e\u0066\u0072\u0065\u0073\u0068"); _cbbac != nil {
			return _cbbac
		}
	}
	if _bafgg.ExtLst != nil {
		if _dcgcc := _bafgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcgcc != nil {
			return _dcgcc
		}
	}
	return nil
}

func (_efbbfb *CT_Top10) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _efbbfb.TopAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efbbfb.TopAttr))})
	}
	if _efbbfb.PercentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efbbfb.PercentAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _efbbfb.ValAttr)})
	if _efbbfb.FilterValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l"}, Value: _b.Sprintf("\u0025\u0076", *_efbbfb.FilterValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gabca ST_Comments) ValidateWithPath(path string) error {
	switch _gabca {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gabca))
	}
	return nil
}

// ValidateWithPath validates the CT_DrawingHF and its children, prefixing error messages with path
func (_facf *CT_DrawingHF) ValidateWithPath(path string) error { return nil }

func (_fbce *CT_Map) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ddabf := range start.Attr {
		if _ddabf.Name.Local == "\u0049\u0044" {
			_adcagf, _edbd := _a.ParseUint(_ddabf.Value, 10, 32)
			if _edbd != nil {
				return _edbd
			}
			_fbce.IDAttr = uint32(_adcagf)
			continue
		}
		if _ddabf.Name.Local == "\u004e\u0061\u006d\u0065" {
			_eedfc, _geeb := _ddabf.Value, error(nil)
			if _geeb != nil {
				return _geeb
			}
			_fbce.NameAttr = _eedfc
			continue
		}
		if _ddabf.Name.Local == "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074" {
			_cagbgg, _fecgg := _ddabf.Value, error(nil)
			if _fecgg != nil {
				return _fecgg
			}
			_fbce.RootElementAttr = _cagbgg
			continue
		}
		if _ddabf.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044" {
			_fbdaa, _ffae := _ddabf.Value, error(nil)
			if _ffae != nil {
				return _ffae
			}
			_fbce.SchemaIDAttr = _fbdaa
			continue
		}
		if _ddabf.Name.Local == "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073" {
			_bcaag, _acffc := _a.ParseBool(_ddabf.Value)
			if _acffc != nil {
				return _acffc
			}
			_fbce.ShowImportExportValidationErrorsAttr = _bcaag
			continue
		}
		if _ddabf.Name.Local == "\u0041u\u0074\u006f\u0046\u0069\u0074" {
			_dagdd, _egdaba := _a.ParseBool(_ddabf.Value)
			if _egdaba != nil {
				return _egdaba
			}
			_fbce.AutoFitAttr = _dagdd
			continue
		}
		if _ddabf.Name.Local == "\u0041\u0070\u0070\u0065\u006e\u0064" {
			_cfccef, _cfegg := _a.ParseBool(_ddabf.Value)
			if _cfegg != nil {
				return _cfegg
			}
			_fbce.AppendAttr = _cfccef
			continue
		}
		if _ddabf.Name.Local == "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074" {
			_bdbfe, _fgbea := _a.ParseBool(_ddabf.Value)
			if _fgbea != nil {
				return _fgbea
			}
			_fbce.PreserveSortAFLayoutAttr = _bdbfe
			continue
		}
		if _ddabf.Name.Local == "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074" {
			_bddfg, _fggba := _a.ParseBool(_ddabf.Value)
			if _fggba != nil {
				return _fggba
			}
			_fbce.PreserveFormatAttr = _bddfg
			continue
		}
	}
_daadc:
	for {
		_bgfaff, _fedbe := d.Token()
		if _fedbe != nil {
			return _fedbe
		}
		switch _acccd := _bgfaff.(type) {
		case _gd.StartElement:
			switch _acccd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}:
				_fbce.DataBinding = NewCT_DataBinding()
				if _gcdgb := d.DecodeElement(_fbce.DataBinding, &_acccd); _gcdgb != nil {
					return _gcdgb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0070\u0020\u0025\u0076", _acccd.Name)
				if _eacfg := d.Skip(); _eacfg != nil {
					return _eacfg
				}
			}
		case _gd.EndElement:
			break _daadc
		case _gd.CharData:
		}
	}
	return nil
}

func (_gaefdc ST_UnderlineValues) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_gaefdc.String(), start)
}

func NewCT_LegacyDrawing() *CT_LegacyDrawing { _afbbe := &CT_LegacyDrawing{}; return _afbbe }

// Validate validates the CT_PivotHierarchies and its children
func (_dfag *CT_PivotHierarchies) Validate() error {
	return _dfag.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

type ST_CellFormulaType byte

type CT_PivotFields struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field
	PivotField []*CT_PivotField
}

type CT_PhoneticRun struct {

	// Base Text Start Index
	SbAttr uint32

	// Base Text End Index
	EbAttr uint32

	// Text
	T string
}

type CT_ServerFormat struct {

	// Culture
	CultureAttr *string

	// Format
	FormatAttr *string
}

func (_dbbac *CT_WebPublishObjects) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dbbac.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dbbac.CountAttr)})
	}
	e.EncodeToken(start)
	_ecfacg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0077eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _adcd := range _dbbac.WebPublishObject {
		e.EncodeElement(_adcd, _ecfacg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gcaed ST_ConditionalFormattingOperator) String() string {
	switch _gcaed {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 2:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 7:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 8:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return ""
}

// Validate validates the PivotCacheRecords and its children
func (_cgbcacd *PivotCacheRecords) Validate() error {
	return _cgbcacd.ValidateWithPath("\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073")
}

func (_dbgbf ST_MdxFunctionType) String() string {
	switch _dbgbf {
	case 0:
		return ""
	case 1:
		return "\u006d"
	case 2:
		return "\u0076"
	case 3:
		return "\u0073"
	case 4:
		return "\u0063"
	case 5:
		return "\u0072"
	case 6:
		return "\u0070"
	case 7:
		return "\u006b"
	}
	return ""
}

func NewCT_QueryCache() *CT_QueryCache { _cffcbd := &CT_QueryCache{}; return _cffcbd }

// ValidateWithPath validates the CT_CellProtection and its children, prefixing error messages with path
func (_fbdc *CT_CellProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ExternalSheetDataSet and its children, prefixing error messages with path
func (_abdbb *CT_ExternalSheetDataSet) ValidateWithPath(path string) error {
	for _gadfd, _gbaac := range _abdbb.SheetData {
		if _decd := _gbaac.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _gadfd)); _decd != nil {
			return _decd
		}
	}
	return nil
}

func (_cdbab *CT_ServerFormat) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cdbab.CultureAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063u\u006c\u0074\u0075\u0072\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cdbab.CultureAttr)})
	}
	if _cdbab.FormatAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cdbab.FormatAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fdeea *ST_SortBy) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_eebfab, _gdcag := d.Token()
	if _gdcag != nil {
		return _gdcag
	}
	if _fbfffg, _fgdffe := _eebfab.(_gd.EndElement); _fgdffe && _fbfffg.Name == start.Name {
		*_fdeea = 1
		return nil
	}
	if _edbcf, _ffeagd := _eebfab.(_gd.CharData); !_ffeagd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eebfab)
	} else {
		switch string(_edbcf) {
		case "":
			*_fdeea = 0
		case "\u0076\u0061\u006cu\u0065":
			*_fdeea = 1
		case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
			*_fdeea = 2
		case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
			*_fdeea = 3
		case "\u0069\u0063\u006f\u006e":
			*_fdeea = 4
		}
	}
	_eebfab, _gdcag = d.Token()
	if _gdcag != nil {
		return _gdcag
	}
	if _affcb, _cddae := _eebfab.(_gd.EndElement); _cddae && _affcb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eebfab)
}

// Validate validates the CT_UnderlineProperty and its children
func (_bcgdb *CT_UnderlineProperty) Validate() error {
	return _bcgdb.ValidateWithPath("C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079")
}

func NewMetadata() *Metadata {
	_edacg := &Metadata{}
	_edacg.CT_Metadata = *NewCT_Metadata()
	return _edacg
}

func NewCT_Items() *CT_Items { _dfdag := &CT_Items{}; return _dfdag }

func NewCT_MdxSet() *CT_MdxSet { _gfcfb := &CT_MdxSet{}; return _gfcfb }

func NewCT_pivotTableDefinition() *CT_pivotTableDefinition {
	_ccfff := &CT_pivotTableDefinition{}
	_ccfff.Location = NewCT_Location()
	return _ccfff
}

func NewAG_AutoFormat() *AG_AutoFormat { _dg := &AG_AutoFormat{}; return _dg }

func (_dgfefb ST_SortType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dgfefb.String(), start)
}

func (_gdgdad *SingleXmlCells) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073"
	return _gdgdad.CT_SingleXmlCells.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_MdxMemeberProp and its children, prefixing error messages with path
func (_befeg *CT_MdxMemeberProp) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Error and its children
func (_bbffb *CT_Error) Validate() error {
	return _bbffb.ValidateWithPath("\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072")
}

func NewCT_RevisionInsertSheet() *CT_RevisionInsertSheet {
	_aabbg := &CT_RevisionInsertSheet{}
	return _aabbg
}

func (_aebbbd ST_DataValidationErrorStyle) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_aebbbd.String(), start)
}

func (_bbfdg *CT_Revisions) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_dcgfe:
	for {
		_ceccdb, _dadab := d.Token()
		if _dadab != nil {
			return _dadab
		}
		switch _egbag := _ceccdb.(type) {
		case _gd.StartElement:
			switch _egbag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_dgegf := NewCT_RevisionRowColumn()
				if _fbbgcg := d.DecodeElement(_dgegf, &_egbag); _fbbgcg != nil {
					return _fbbgcg
				}
				_bbfdg.Rrc = append(_bbfdg.Rrc, _dgegf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_defeae := NewCT_RevisionMove()
				if _gdfgb := d.DecodeElement(_defeae, &_egbag); _gdfgb != nil {
					return _gdfgb
				}
				_bbfdg.Rm = append(_bbfdg.Rm, _defeae)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_fdcce := NewCT_RevisionCustomView()
				if _bdfc := d.DecodeElement(_fdcce, &_egbag); _bdfc != nil {
					return _bdfc
				}
				_bbfdg.Rcv = append(_bbfdg.Rcv, _fdcce)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_fdgfd := NewCT_RevisionSheetRename()
				if _dcaba := d.DecodeElement(_fdgfd, &_egbag); _dcaba != nil {
					return _dcaba
				}
				_bbfdg.Rsnm = append(_bbfdg.Rsnm, _fdgfd)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_egdfc := NewCT_RevisionInsertSheet()
				if _eaecb := d.DecodeElement(_egdfc, &_egbag); _eaecb != nil {
					return _eaecb
				}
				_bbfdg.Ris = append(_bbfdg.Ris, _egdfc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_gabag := NewCT_RevisionCellChange()
				if _bgdeab := d.DecodeElement(_gabag, &_egbag); _bgdeab != nil {
					return _bgdeab
				}
				_bbfdg.Rcc = append(_bbfdg.Rcc, _gabag)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_dcbgf := NewCT_RevisionFormatting()
				if _dcdac := d.DecodeElement(_dcbgf, &_egbag); _dcdac != nil {
					return _dcdac
				}
				_bbfdg.Rfmt = append(_bbfdg.Rfmt, _dcbgf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_bbafe := NewCT_RevisionAutoFormatting()
				if _ffdebf := d.DecodeElement(_bbafe, &_egbag); _ffdebf != nil {
					return _ffdebf
				}
				_bbfdg.Raf = append(_bbfdg.Raf, _bbafe)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_fffaf := NewCT_RevisionDefinedName()
				if _cgced := d.DecodeElement(_fffaf, &_egbag); _cgced != nil {
					return _cgced
				}
				_bbfdg.Rdn = append(_bbfdg.Rdn, _fffaf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_cccga := NewCT_RevisionComment()
				if _bgbegf := d.DecodeElement(_cccga, &_egbag); _bgbegf != nil {
					return _bgbegf
				}
				_bbfdg.Rcmt = append(_bbfdg.Rcmt, _cccga)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_aaafb := NewCT_RevisionQueryTableField()
				if _fbfdg := d.DecodeElement(_aaafb, &_egbag); _fbfdg != nil {
					return _fbfdg
				}
				_bbfdg.Rqt = append(_bbfdg.Rqt, _aaafb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_bccbg := NewCT_RevisionConflict()
				if _bgegd := d.DecodeElement(_bccbg, &_egbag); _bgegd != nil {
					return _bgegd
				}
				_bbfdg.Rcft = append(_bbfdg.Rcft, _bccbg)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0065\u0076i\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _egbag.Name)
				if _bbadd := d.Skip(); _bbadd != nil {
					return _bbadd
				}
			}
		case _gd.EndElement:
			break _dcgfe
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_SheetDimension() *CT_SheetDimension { _gegfe := &CT_SheetDimension{}; return _gegfe }

// Validate validates the CT_Break and its children
func (_egc *CT_Break) Validate() error {
	return _egc.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b")
}

// ValidateWithPath validates the CT_ColorScale and its children, prefixing error messages with path
func (_fba *CT_ColorScale) ValidateWithPath(path string) error {
	for _bagf, _dbegd := range _fba.Cfvo {
		if _egcd := _dbegd.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _bagf)); _egcd != nil {
			return _egcd
		}
	}
	for _fcgc, _egeeb := range _fba.Color {
		if _fadg := _egeeb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _fcgc)); _fadg != nil {
			return _fadg
		}
	}
	return nil
}

type CT_Filter struct {

	// Filter Value
	ValAttr *string
}

func NewCT_PCDKPI() *CT_PCDKPI { _gebeg := &CT_PCDKPI{}; return _gebeg }

func (_aeggge *CT_Record) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_efdcg:
	for {
		_gfbef, _bafdb := d.Token()
		if _bafdb != nil {
			return _bafdb
		}
		switch _bdfdg := _gfbef.(type) {
		case _gd.StartElement:
			switch _bdfdg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_aeaff := NewCT_Missing()
				if _bgag := d.DecodeElement(_aeaff, &_bdfdg); _bgag != nil {
					return _bgag
				}
				_aeggge.M = append(_aeggge.M, _aeaff)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_fgba := NewCT_Number()
				if _ccagd := d.DecodeElement(_fgba, &_bdfdg); _ccagd != nil {
					return _ccagd
				}
				_aeggge.N = append(_aeggge.N, _fgba)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_ggfgd := NewCT_Boolean()
				if _acdgg := d.DecodeElement(_ggfgd, &_bdfdg); _acdgg != nil {
					return _acdgg
				}
				_aeggge.B = append(_aeggge.B, _ggfgd)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_bgebb := NewCT_Error()
				if _fgagc := d.DecodeElement(_bgebb, &_bdfdg); _fgagc != nil {
					return _fgagc
				}
				_aeggge.E = append(_aeggge.E, _bgebb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cfcea := NewCT_String()
				if _cbdbd := d.DecodeElement(_cfcea, &_bdfdg); _cbdbd != nil {
					return _cbdbd
				}
				_aeggge.S = append(_aeggge.S, _cfcea)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_eafdbf := NewCT_DateTime()
				if _befa := d.DecodeElement(_eafdbf, &_bdfdg); _befa != nil {
					return _befa
				}
				_aeggge.D = append(_aeggge.D, _eafdbf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_gfbcd := NewCT_Index()
				if _cbdc := d.DecodeElement(_gfbcd, &_bdfdg); _cbdc != nil {
					return _cbdc
				}
				_aeggge.X = append(_aeggge.X, _gfbcd)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0065\u0063o\u0072\u0064 \u0025\u0076", _bdfdg.Name)
				if _cedd := d.Skip(); _cedd != nil {
					return _cedd
				}
			}
		case _gd.EndElement:
			break _efdcg
		case _gd.CharData:
		}
	}
	return nil
}

func (_defeaf *CT_Users) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _defeaf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_defeaf.CountAttr)})
	}
	e.EncodeToken(start)
	if _defeaf.UserInfo != nil {
		_ceefe := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}}
		for _, _dgfcgd := range _defeaf.UserInfo {
			e.EncodeElement(_dgfcgd, _ceefe)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fagb *CT_Comments) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fagb.Authors = NewCT_Authors()
	_fagb.CommentList = NewCT_CommentList()
_cfgbd:
	for {
		_agbeb, _ebbd := d.Token()
		if _ebbd != nil {
			return _ebbd
		}
		switch _gfba := _agbeb.(type) {
		case _gd.StartElement:
			switch _gfba.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _bdda := d.DecodeElement(_fagb.Authors, &_gfba); _bdda != nil {
					return _bdda
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _faabf := d.DecodeElement(_fagb.CommentList, &_gfba); _faabf != nil {
					return _faabf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fagb.ExtLst = NewCT_ExtensionList()
				if _ggbbbg := d.DecodeElement(_fagb.ExtLst, &_gfba); _ggbbbg != nil {
					return _ggbbbg
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _gfba.Name)
				if _bcbf := d.Skip(); _bcbf != nil {
					return _bcbf
				}
			}
		case _gd.EndElement:
			break _cfgbd
		case _gd.CharData:
		}
	}
	return nil
}

func (_aadfc ST_DateTimeGrouping) String() string {
	switch _aadfc {
	case 0:
		return ""
	case 1:
		return "\u0079\u0065\u0061\u0072"
	case 2:
		return "\u006d\u006f\u006et\u0068"
	case 3:
		return "\u0064\u0061\u0079"
	case 4:
		return "\u0068\u006f\u0075\u0072"
	case 5:
		return "\u006d\u0069\u006e\u0075\u0074\u0065"
	case 6:
		return "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return ""
}

// Validate validates the CT_CellStyleXfs and its children
func (_feaa *CT_CellStyleXfs) Validate() error {
	return _feaa.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073")
}

func (_ddcge *CT_FontName) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _ddcge.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RowHierarchiesUsage and its children
func (_gbbddc *CT_RowHierarchiesUsage) Validate() error {
	return _gbbddc.ValidateWithPath("\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}

func (_adfba ST_PhoneticAlignment) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_edfbad := _gd.Attr{}
	_edfbad.Name = name
	switch _adfba {
	case ST_PhoneticAlignmentUnset:
		_edfbad.Value = ""
	case ST_PhoneticAlignmentNoControl:
		_edfbad.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_PhoneticAlignmentLeft:
		_edfbad.Value = "\u006c\u0065\u0066\u0074"
	case ST_PhoneticAlignmentCenter:
		_edfbad.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_PhoneticAlignmentDistributed:
		_edfbad.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _edfbad, nil
}

type ST_SheetState byte

func (_bdbcg *CT_TableColumn) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bdbcg.IdAttr)})
	if _bdbcg.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.UniqueNameAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bdbcg.NameAttr)})
	if _bdbcg.TotalsRowFunctionAttr != ST_TotalsRowFunctionUnset {
		_egfec, _adadg := _bdbcg.TotalsRowFunctionAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e"})
		if _adadg != nil {
			return _adadg
		}
		start.Attr = append(start.Attr, _egfec)
	}
	if _bdbcg.TotalsRowLabelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.TotalsRowLabelAttr)})
	}
	if _bdbcg.QueryTableFieldIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.QueryTableFieldIdAttr)})
	}
	if _bdbcg.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.HeaderRowDxfIdAttr)})
	}
	if _bdbcg.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.DataDxfIdAttr)})
	}
	if _bdbcg.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.TotalsRowDxfIdAttr)})
	}
	if _bdbcg.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.HeaderRowCellStyleAttr)})
	}
	if _bdbcg.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.DataCellStyleAttr)})
	}
	if _bdbcg.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbcg.TotalsRowCellStyleAttr)})
	}
	e.EncodeToken(start)
	if _bdbcg.CalculatedColumnFormula != nil {
		_ccece := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072m\u0075\u006c\u0061"}}
		e.EncodeElement(_bdbcg.CalculatedColumnFormula, _ccece)
	}
	if _bdbcg.TotalsRowFormula != nil {
		_bgdgf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074ot\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		e.EncodeElement(_bdbcg.TotalsRowFormula, _bgdgf)
	}
	if _bdbcg.XmlColumnPr != nil {
		_gfdab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072"}}
		e.EncodeElement(_bdbcg.XmlColumnPr, _gfdab)
	}
	if _bdbcg.ExtLst != nil {
		_aabac := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bdbcg.ExtLst, _aabac)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FutureMetadataBlock and its children, prefixing error messages with path
func (_dcdbb *CT_FutureMetadataBlock) ValidateWithPath(path string) error {
	if _dcdbb.ExtLst != nil {
		if _dfcgg := _dcdbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfcgg != nil {
			return _dfcgg
		}
	}
	return nil
}

func (_fadcf ST_CfvoType) String() string {
	switch _fadcf {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006d"
	case 2:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 3:
		return "\u006d\u0061\u0078"
	case 4:
		return "\u006d\u0069\u006e"
	case 5:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case 6:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_PageSetup and its children, prefixing error messages with path
func (_efeafb *CT_PageSetup) ValidateWithPath(path string) error {
	if _efeafb.PaperHeightAttr != nil {
		if !_af.ST_PositiveUniversalMeasurePatternRe.MatchString(*_efeafb.PaperHeightAttr) {
			return _b.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_PositiveUniversalMeasurePatternRe, *_efeafb.PaperHeightAttr)
		}
	}
	if _efeafb.PaperHeightAttr != nil {
		if !_af.ST_UniversalMeasurePatternRe.MatchString(*_efeafb.PaperHeightAttr) {
			return _b.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_UniversalMeasurePatternRe, *_efeafb.PaperHeightAttr)
		}
	}
	if _efeafb.PaperWidthAttr != nil {
		if !_af.ST_PositiveUniversalMeasurePatternRe.MatchString(*_efeafb.PaperWidthAttr) {
			return _b.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_PositiveUniversalMeasurePatternRe, *_efeafb.PaperWidthAttr)
		}
	}
	if _efeafb.PaperWidthAttr != nil {
		if !_af.ST_UniversalMeasurePatternRe.MatchString(*_efeafb.PaperWidthAttr) {
			return _b.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_UniversalMeasurePatternRe, *_efeafb.PaperWidthAttr)
		}
	}
	if _ggabe := _efeafb.PageOrderAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u004f\u0072\u0064\u0065r\u0041\u0074\u0074\u0072"); _ggabe != nil {
		return _ggabe
	}
	if _gbceb := _efeafb.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gbceb != nil {
		return _gbceb
	}
	if _bbagde := _efeafb.CellCommentsAttr.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _bbagde != nil {
		return _bbagde
	}
	if _bcead := _efeafb.ErrorsAttr.ValidateWithPath(path + "/\u0045\u0072\u0072\u006f\u0072\u0073\u0041\u0074\u0074\u0072"); _bcead != nil {
		return _bcead
	}
	return nil
}

func NewCT_Set() *CT_Set { _ceadd := &CT_Set{}; return _ceadd }

func (_eeffe ST_rwColActionType) ValidateWithPath(path string) error {
	switch _eeffe {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeffe))
	}
	return nil
}

type CT_Location struct {

	// Reference
	RefAttr string

	// First Header Row
	FirstHeaderRowAttr uint32

	// PivotTable Data First Row
	FirstDataRowAttr uint32

	// First Data Column
	FirstDataColAttr uint32

	// Rows Per Page Count
	RowPageCountAttr *uint32

	// Columns Per Page
	ColPageCountAttr *uint32
}

func NewCT_XmlCellPr() *CT_XmlCellPr {
	_accgab := &CT_XmlCellPr{}
	_accgab.XmlPr = NewCT_XmlPr()
	return _accgab
}

// Validate validates the CT_OleItems and its children
func (_bcfffd *CT_OleItems) Validate() error {
	return _bcfffd.ValidateWithPath("C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073")
}

func (_fgef *CT_ExternalSheetName) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fgef.ValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fgef.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Sets() *CT_Sets { _affffe := &CT_Sets{}; return _affffe }

// Validate validates the CT_Sheet and its children
func (_cgeac *CT_Sheet) Validate() error {
	return _cgeac.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_DdeItems and its children, prefixing error messages with path
func (_gfcgf *CT_DdeItems) ValidateWithPath(path string) error {
	for _cefb, _cgdb := range _gfcgf.DdeItem {
		if _defc := _cgdb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0044\u0064\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _cefb)); _defc != nil {
			return _defc
		}
	}
	return nil
}

func (_ecbfd *CT_DiscretePr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ecbfd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ecbfd.CountAttr)})
	}
	e.EncodeToken(start)
	_adbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
	for _, _bfbbc := range _ecbfd.X {
		e.EncodeElement(_bfbbc, _adbc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gcdce *CT_OleObjects) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_gfdfba:
	for {
		_aaagb, _egbca := d.Token()
		if _egbca != nil {
			return _egbca
		}
		switch _cedbg := _aaagb.(type) {
		case _gd.StartElement:
			switch _cedbg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}:
				_dgdgf := NewCT_OleObject()
				if _fbgga := d.DecodeElement(_dgdgf, &_cedbg); _fbgga != nil {
					return _fbgga
				}
				_gcdce.OleObject = append(_gcdce.OleObject, _dgdgf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fl\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073 \u0025\u0076", _cedbg.Name)
				if _fedce := d.Skip(); _fedce != nil {
					return _fedce
				}
			}
		case _gd.EndElement:
			break _gfdfba
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_OleItem() *CT_OleItem { _dbgd := &CT_OleItem{}; return _dbgd }

const (
	ST_WebSourceTypeUnset      ST_WebSourceType = 0
	ST_WebSourceTypeSheet      ST_WebSourceType = 1
	ST_WebSourceTypePrintArea  ST_WebSourceType = 2
	ST_WebSourceTypeAutoFilter ST_WebSourceType = 3
	ST_WebSourceTypeRange      ST_WebSourceType = 4
	ST_WebSourceTypeChart      ST_WebSourceType = 5
	ST_WebSourceTypePivotTable ST_WebSourceType = 6
	ST_WebSourceTypeQuery      ST_WebSourceType = 7
	ST_WebSourceTypeLabel      ST_WebSourceType = 8
)

func (_fgbecd *CT_Tables) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dbeea := range start.Attr {
		if _dbeea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddccc, _eaafad := _a.ParseUint(_dbeea.Value, 10, 32)
			if _eaafad != nil {
				return _eaafad
			}
			_fgfgde := uint32(_ddccc)
			_fgbecd.CountAttr = &_fgfgde
			continue
		}
	}
_gfccc:
	for {
		_fgaeca, _dfcga := d.Token()
		if _dfcga != nil {
			return _dfcga
		}
		switch _gagafc := _fgaeca.(type) {
		case _gd.StartElement:
			switch _gagafc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_aeaebb := NewCT_TableMissing()
				if _bgbbc := d.DecodeElement(_aeaebb, &_gagafc); _bgbbc != nil {
					return _bgbbc
				}
				_fgbecd.M = append(_fgbecd.M, _aeaebb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_bccac := NewCT_XStringElement()
				if _begaf := d.DecodeElement(_bccac, &_gagafc); _begaf != nil {
					return _begaf
				}
				_fgbecd.S = append(_fgbecd.S, _bccac)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_dggga := NewCT_Index()
				if _gbfbf := d.DecodeElement(_dggga, &_gagafc); _gbfbf != nil {
					return _gbfbf
				}
				_fgbecd.X = append(_fgbecd.X, _dggga)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0073 \u0025\u0076", _gagafc.Name)
				if _bcgfc := d.Skip(); _bcgfc != nil {
					return _bcgfc
				}
			}
		case _gd.EndElement:
			break _gfccc
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LegacyDrawing and its children
func (_ddeb *CT_LegacyDrawing) Validate() error {
	return _ddeb.ValidateWithPath("\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

func (_fcaefd ST_TimePeriod) Validate() error { return _fcaefd.ValidateWithPath("") }

func (_egfaef *CT_MetadataBlock) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_cdge := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u0063"}}
	for _, _cddee := range _egfaef.Rc {
		e.EncodeElement(_cddee, _cdge)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_BookView struct {

	// Visibility
	VisibilityAttr ST_Visibility

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Upper Left Corner (X Coordinate)
	XWindowAttr *int32

	// Upper Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr *uint32

	// Window Height
	WindowHeightAttr *uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// First Sheet
	FirstSheetAttr *uint32

	// Active Sheet Index
	ActiveTabAttr *uint32

	// AutoFilter Date Grouping
	AutoFilterDateGroupingAttr *bool
	ExtLst                     *CT_ExtensionList
}

func (_acf *CT_Boolean) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fbe := range start.Attr {
		if _fbe.Name.Local == "\u0076" {
			_ade, _caf := _a.ParseBool(_fbe.Value)
			if _caf != nil {
				return _caf
			}
			_acf.VAttr = _ade
			continue
		}
		if _fbe.Name.Local == "\u0075" {
			_eaac, _fbf := _a.ParseBool(_fbe.Value)
			if _fbf != nil {
				return _fbf
			}
			_acf.UAttr = &_eaac
			continue
		}
		if _fbe.Name.Local == "\u0066" {
			_eabg, _addd := _a.ParseBool(_fbe.Value)
			if _addd != nil {
				return _addd
			}
			_acf.FAttr = &_eabg
			continue
		}
		if _fbe.Name.Local == "\u0063" {
			_aad, _eadg := _fbe.Value, error(nil)
			if _eadg != nil {
				return _eadg
			}
			_acf.CAttr = &_aad
			continue
		}
		if _fbe.Name.Local == "\u0063\u0070" {
			_cff, _gab := _a.ParseUint(_fbe.Value, 10, 32)
			if _gab != nil {
				return _gab
			}
			_fef := uint32(_cff)
			_acf.CpAttr = &_fef
			continue
		}
	}
_fagd:
	for {
		_ae, _aadg := d.Token()
		if _aadg != nil {
			return _aadg
		}
		switch _cfgf := _ae.(type) {
		case _gd.StartElement:
			switch _cfgf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_cea := NewCT_X()
				if _cbg := d.DecodeElement(_cea, &_cfgf); _cbg != nil {
					return _cbg
				}
				_acf.X = append(_acf.X, _cea)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u006f\u006c\u0065\u0061\u006e\u0020\u0025\u0076", _cfgf.Name)
				if _dfg := d.Skip(); _dfg != nil {
					return _dfg
				}
			}
		case _gd.EndElement:
			break _fagd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_DdeValue() *CT_DdeValue { _dabgb := &CT_DdeValue{}; return _dabgb }

func (_geebad ST_SheetState) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_beggae := _gd.Attr{}
	_beggae.Name = name
	switch _geebad {
	case ST_SheetStateUnset:
		_beggae.Value = ""
	case ST_SheetStateVisible:
		_beggae.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_SheetStateHidden:
		_beggae.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_SheetStateVeryHidden:
		_beggae.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _beggae, nil
}

// ValidateWithPath validates the CT_DdeValues and its children, prefixing error messages with path
func (_bbeeb *CT_DdeValues) ValidateWithPath(path string) error {
	for _deac, _agga := range _bbeeb.Value {
		if _gcabc := _agga.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _deac)); _gcabc != nil {
			return _gcabc
		}
	}
	return nil
}

func (_fadad ST_PhoneticAlignment) ValidateWithPath(path string) error {
	switch _fadad {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fadad))
	}
	return nil
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_gcafef *CT_SmartTags) ValidateWithPath(path string) error {
	for _ddebdb, _ddgbg := range _gcafef.CellSmartTags {
		if _egadbe := _ddgbg.ValidateWithPath(_b.Sprintf("%\u0073/\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072t\u0054\u0061\u0067\u0073[%\u0064\u005d", path, _ddebdb)); _egadbe != nil {
			return _egadbe
		}
	}
	return nil
}

func (_dggca *CT_ExternalSheetData) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _dggca.SheetIdAttr)})
	if _dggca.RefreshErrorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dggca.RefreshErrorAttr))})
	}
	e.EncodeToken(start)
	if _dggca.Row != nil {
		_baebe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _fgca := range _dggca.Row {
			e.EncodeElement(_fgca, _baebe)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_GradientStop() *CT_GradientStop {
	_fccfg := &CT_GradientStop{}
	_fccfg.Color = NewCT_Color()
	return _fccfg
}

func (_acdcf ST_GroupBy) String() string {
	switch _acdcf {
	case 0:
		return ""
	case 1:
		return "\u0072\u0061\u006eg\u0065"
	case 2:
		return "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case 3:
		return "\u006di\u006e\u0075\u0074\u0065\u0073"
	case 4:
		return "\u0068\u006f\u0075r\u0073"
	case 5:
		return "\u0064\u0061\u0079\u0073"
	case 6:
		return "\u006d\u006f\u006e\u0074\u0068\u0073"
	case 7:
		return "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case 8:
		return "\u0079\u0065\u0061r\u0073"
	}
	return ""
}

func (_ddcfa *CT_RangeSets) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ddcfa.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ddcfa.CountAttr)})
	}
	e.EncodeToken(start)
	_bdcec := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}}
	for _, _cccgc := range _ddcfa.RangeSet {
		e.EncodeElement(_cccgc, _bdcec)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_ReviewedRevisions struct {

	// Reviewed Revisions Count
	CountAttr *uint32

	// Reviewed
	Reviewed []*CT_Reviewed
}

func (_bafcbb *CT_VolTypes) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_bbebbd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065"}}
	for _, _aaaga := range _bafcbb.VolType {
		e.EncodeElement(_aaaga, _bbebbd)
	}
	if _bafcbb.ExtLst != nil {
		_efcdce := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bafcbb.ExtLst, _efcdce)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cgcdbb ST_Axis) ValidateWithPath(path string) error {
	switch _cgcdbb {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgcdbb))
	}
	return nil
}

func (_egcc *CT_CommentList) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_acdg:
	for {
		_ffcd, _bfdaa := d.Token()
		if _bfdaa != nil {
			return _bfdaa
		}
		switch _abagc := _ffcd.(type) {
		case _gd.StartElement:
			switch _abagc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}:
				_adbgb := NewCT_Comment()
				if _eacbf := d.DecodeElement(_adbgb, &_abagc); _eacbf != nil {
					return _eacbf
				}
				_egcc.Comment = append(_egcc.Comment, _adbgb)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _abagc.Name)
				if _dbagb := d.Skip(); _dbagb != nil {
					return _dbagb
				}
			}
		case _gd.EndElement:
			break _acdg
		case _gd.CharData:
		}
	}
	return nil
}

func (_cdea *CT_DataRef) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cdea.RefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_cdea.RefAttr)})
	}
	if _cdea.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cdea.NameAttr)})
	}
	if _cdea.SheetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cdea.SheetAttr)})
	}
	if _cdea.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cdea.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gdbcg *CT_ChartFormat) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gdbcg.PivotArea = NewCT_PivotArea()
	for _, _aeee := range start.Attr {
		if _aeee.Name.Local == "\u0063\u0068\u0061r\u0074" {
			_fbgaa, _cedg := _a.ParseUint(_aeee.Value, 10, 32)
			if _cedg != nil {
				return _cedg
			}
			_gdbcg.ChartAttr = uint32(_fbgaa)
			continue
		}
		if _aeee.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_gefe, _bdaad := _a.ParseUint(_aeee.Value, 10, 32)
			if _bdaad != nil {
				return _bdaad
			}
			_gdbcg.FormatAttr = uint32(_gefe)
			continue
		}
		if _aeee.Name.Local == "\u0073\u0065\u0072\u0069\u0065\u0073" {
			_bgbga, _cbga := _a.ParseBool(_aeee.Value)
			if _cbga != nil {
				return _cbga
			}
			_gdbcg.SeriesAttr = &_bgbga
			continue
		}
	}
_bbcd:
	for {
		_bcgg, _egda := d.Token()
		if _egda != nil {
			return _egda
		}
		switch _dade := _bcgg.(type) {
		case _gd.StartElement:
			switch _dade.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _gagf := d.DecodeElement(_gdbcg.PivotArea, &_dade); _gagf != nil {
					return _gagf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046\u006fr\u006da\u0074\u0020\u0025\u0076", _dade.Name)
				if _bgga := d.Skip(); _bgga != nil {
					return _bgga
				}
			}
		case _gd.EndElement:
			break _bbcd
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDSDTCEntries and its children, prefixing error messages with path
func (_gegeg *CT_PCDSDTCEntries) ValidateWithPath(path string) error {
	for _gbedf, _aegab := range _gegeg.M {
		if _caeg := _aegab.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _gbedf)); _caeg != nil {
			return _caeg
		}
	}
	for _fbcca, _gbegac := range _gegeg.N {
		if _bfgfe := _gbegac.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _fbcca)); _bfgfe != nil {
			return _bfgfe
		}
	}
	for _afbge, _dfgda := range _gegeg.E {
		if _fdgcc := _dfgda.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _afbge)); _fdgcc != nil {
			return _fdgcc
		}
	}
	for _bbede, _cdded := range _gegeg.S {
		if _adegc := _cdded.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _bbede)); _adegc != nil {
			return _adegc
		}
	}
	return nil
}

func (_ggfb *CT_ChartsheetViews) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_afdfe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _ceea := range _ggfb.SheetView {
		e.EncodeElement(_ceea, _afdfe)
	}
	if _ggfb.ExtLst != nil {
		_aadc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ggfb.ExtLst, _aadc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fafbac ST_UpdateLinks) Validate() error { return _fafbac.ValidateWithPath("") }

func (_caca *CT_CustomFilter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbbgg := range start.Attr {
		if _bbbgg.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_caca.OperatorAttr.UnmarshalXMLAttr(_bbbgg)
			continue
		}
		if _bbbgg.Name.Local == "\u0076\u0061\u006c" {
			_efga, _dcgd := _bbbgg.Value, error(nil)
			if _dcgd != nil {
				return _dcgd
			}
			_caca.ValAttr = &_efga
			continue
		}
	}
	for {
		_dccc, _gfgd := d.Token()
		if _gfgd != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dF\u0069\u006c\u0074e\u0072:\u0020\u0025\u0073", _gfgd)
		}
		if _begbd, _faaffb := _dccc.(_gd.EndElement); _faaffb && _begbd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcfde *CT_SortCondition) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fcfde.DescendingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fcfde.DescendingAttr))})
	}
	if _fcfde.SortByAttr != ST_SortByUnset {
		_adbcg, _fgdeg := _fcfde.SortByAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u006f\u0072\u0074\u0042\u0079"})
		if _fgdeg != nil {
			return _fgdeg
		}
		start.Attr = append(start.Attr, _adbcg)
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _fcfde.RefAttr)})
	if _fcfde.CustomListAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fcfde.CustomListAttr)})
	}
	if _fcfde.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fcfde.DxfIdAttr)})
	}
	if _fcfde.IconSetAttr != ST_IconSetTypeUnset {
		_acbdd, _fabeg := _fcfde.IconSetAttr.MarshalXMLAttr(_gd.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _fabeg != nil {
			return _fabeg
		}
		start.Attr = append(start.Attr, _acbdd)
	}
	if _fcfde.IconIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fcfde.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Tuple and its children, prefixing error messages with path
func (_eafcg *CT_Tuple) ValidateWithPath(path string) error { return nil }

func (_bdgba *ST_DynamicFilterType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bdgba = 0
	case "\u006e\u0075\u006c\u006c":
		*_bdgba = 1
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_bdgba = 2
	case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_bdgba = 3
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_bdgba = 4
	case "\u0074\u006f\u0064a\u0079":
		*_bdgba = 5
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_bdgba = 6
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_bdgba = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_bdgba = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_bdgba = 9
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_bdgba = 10
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_bdgba = 11
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_bdgba = 12
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_bdgba = 13
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_bdgba = 14
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_bdgba = 15
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_bdgba = 16
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_bdgba = 17
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_bdgba = 18
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_bdgba = 19
	case "\u0051\u0031":
		*_bdgba = 20
	case "\u0051\u0032":
		*_bdgba = 21
	case "\u0051\u0033":
		*_bdgba = 22
	case "\u0051\u0034":
		*_bdgba = 23
	case "\u004d\u0031":
		*_bdgba = 24
	case "\u004d\u0032":
		*_bdgba = 25
	case "\u004d\u0033":
		*_bdgba = 26
	case "\u004d\u0034":
		*_bdgba = 27
	case "\u004d\u0035":
		*_bdgba = 28
	case "\u004d\u0036":
		*_bdgba = 29
	case "\u004d\u0037":
		*_bdgba = 30
	case "\u004d\u0038":
		*_bdgba = 31
	case "\u004d\u0039":
		*_bdgba = 32
	case "\u004d\u0031\u0030":
		*_bdgba = 33
	case "\u004d\u0031\u0031":
		*_bdgba = 34
	case "\u004d\u0031\u0032":
		*_bdgba = 35
	}
	return nil
}

func (_gdfdd ST_ConditionalFormattingOperator) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_geaacd := _gd.Attr{}
	_geaacd.Name = name
	switch _gdfdd {
	case ST_ConditionalFormattingOperatorUnset:
		_geaacd.Value = ""
	case ST_ConditionalFormattingOperatorLessThan:
		_geaacd.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorLessThanOrEqual:
		_geaacd.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorEqual:
		_geaacd.Value = "\u0065\u0071\u0075a\u006c"
	case ST_ConditionalFormattingOperatorNotEqual:
		_geaacd.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThanOrEqual:
		_geaacd.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThan:
		_geaacd.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorBetween:
		_geaacd.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorNotBetween:
		_geaacd.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorContainsText:
		_geaacd.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_ConditionalFormattingOperatorNotContains:
		_geaacd.Value = "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_ConditionalFormattingOperatorBeginsWith:
		_geaacd.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_ConditionalFormattingOperatorEndsWith:
		_geaacd.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return _geaacd, nil
}

// ValidateWithPath validates the CT_FutureMetadata and its children, prefixing error messages with path
func (_dadg *CT_FutureMetadata) ValidateWithPath(path string) error {
	for _bbbff, _baabe := range _dadg.Bk {
		if _bgddfac := _baabe.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _bbbff)); _bgddfac != nil {
			return _bgddfac
		}
	}
	if _dadg.ExtLst != nil {
		if _gcfcb := _dadg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcfcb != nil {
			return _gcfcb
		}
	}
	return nil
}

func (_agecgb *CT_pivotTableDefinition) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _agecgb.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _agecgb.CacheIdAttr)})
	if _agecgb.DataOnRowsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.DataOnRowsAttr))})
	}
	if _agecgb.DataPositionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.DataPositionAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _agecgb.DataCaptionAttr)})
	if _agecgb.GrandTotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.GrandTotalCaptionAttr)})
	}
	if _agecgb.ErrorCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.ErrorCaptionAttr)})
	}
	if _agecgb.ShowErrorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowErrorAttr))})
	}
	if _agecgb.MissingCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.MissingCaptionAttr)})
	}
	if _agecgb.ShowMissingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowMissingAttr))})
	}
	if _agecgb.PageStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.PageStyleAttr)})
	}
	if _agecgb.PivotTableStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.PivotTableStyleAttr)})
	}
	if _agecgb.VacatedStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.VacatedStyleAttr)})
	}
	if _agecgb.TagAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0061\u0067"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.TagAttr)})
	}
	if _agecgb.UpdatedVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.UpdatedVersionAttr)})
	}
	if _agecgb.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.MinRefreshableVersionAttr)})
	}
	if _agecgb.AsteriskTotalsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.AsteriskTotalsAttr))})
	}
	if _agecgb.ShowItemsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowItemsAttr))})
	}
	if _agecgb.EditDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.EditDataAttr))})
	}
	if _agecgb.DisableFieldListAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.DisableFieldListAttr))})
	}
	if _agecgb.ShowCalcMbrsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowCalcMbrsAttr))})
	}
	if _agecgb.VisualTotalsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.VisualTotalsAttr))})
	}
	if _agecgb.ShowMultipleLabelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowMultipleLabelAttr))})
	}
	if _agecgb.ShowDataDropDownAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowDataDropDownAttr))})
	}
	if _agecgb.ShowDrillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowDrillAttr))})
	}
	if _agecgb.PrintDrillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.PrintDrillAttr))})
	}
	if _agecgb.ShowMemberPropertyTipsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowMemberPropertyTipsAttr))})
	}
	if _agecgb.ShowDataTipsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowDataTipsAttr))})
	}
	if _agecgb.EnableWizardAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.EnableWizardAttr))})
	}
	if _agecgb.EnableDrillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.EnableDrillAttr))})
	}
	if _agecgb.EnableFieldPropertiesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.EnableFieldPropertiesAttr))})
	}
	if _agecgb.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.PreserveFormattingAttr))})
	}
	if _agecgb.UseAutoFormattingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.UseAutoFormattingAttr))})
	}
	if _agecgb.PageWrapAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.PageWrapAttr)})
	}
	if _agecgb.PageOverThenDownAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.PageOverThenDownAttr))})
	}
	if _agecgb.SubtotalHiddenItemsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.SubtotalHiddenItemsAttr))})
	}
	if _agecgb.RowGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.RowGrandTotalsAttr))})
	}
	if _agecgb.ColGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ColGrandTotalsAttr))})
	}
	if _agecgb.FieldPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.FieldPrintTitlesAttr))})
	}
	if _agecgb.ItemPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ItemPrintTitlesAttr))})
	}
	if _agecgb.MergeItemAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.MergeItemAttr))})
	}
	if _agecgb.ShowDropZonesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowDropZonesAttr))})
	}
	if _agecgb.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.CreatedVersionAttr)})
	}
	if _agecgb.IndentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.IndentAttr)})
	}
	if _agecgb.ShowEmptyRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowEmptyRowAttr))})
	}
	if _agecgb.ShowEmptyColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowEmptyColAttr))})
	}
	if _agecgb.ShowHeadersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ShowHeadersAttr))})
	}
	if _agecgb.CompactAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.CompactAttr))})
	}
	if _agecgb.OutlineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.OutlineAttr))})
	}
	if _agecgb.OutlineDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.OutlineDataAttr))})
	}
	if _agecgb.CompactDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.CompactDataAttr))})
	}
	if _agecgb.PublishedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.PublishedAttr))})
	}
	if _agecgb.GridDropZonesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.GridDropZonesAttr))})
	}
	if _agecgb.ImmersiveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ImmersiveAttr))})
	}
	if _agecgb.MultipleFieldFiltersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.MultipleFieldFiltersAttr))})
	}
	if _agecgb.ChartFormatAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.ChartFormatAttr)})
	}
	if _agecgb.RowHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.RowHeaderCaptionAttr)})
	}
	if _agecgb.ColHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.ColHeaderCaptionAttr)})
	}
	if _agecgb.FieldListSortAscendingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.FieldListSortAscendingAttr))})
	}
	if _agecgb.MdxSubqueriesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.MdxSubqueriesAttr))})
	}
	if _agecgb.CustomListSortAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.CustomListSortAttr))})
	}
	if _agecgb.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_agecgb.AutoFormatIdAttr)})
	}
	if _agecgb.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ApplyNumberFormatsAttr))})
	}
	if _agecgb.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ApplyBorderFormatsAttr))})
	}
	if _agecgb.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ApplyFontFormatsAttr))})
	}
	if _agecgb.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ApplyPatternFormatsAttr))})
	}
	if _agecgb.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ApplyAlignmentFormatsAttr))})
	}
	if _agecgb.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agecgb.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	_bcacf := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}}
	e.EncodeElement(_agecgb.Location, _bcacf)
	if _agecgb.PivotFields != nil {
		_ageab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agecgb.PivotFields, _ageab)
	}
	if _agecgb.RowFields != nil {
		_faaabb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agecgb.RowFields, _faaabb)
	}
	if _agecgb.RowItems != nil {
		_cggcdc := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_agecgb.RowItems, _cggcdc)
	}
	if _agecgb.ColFields != nil {
		_bcbged := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agecgb.ColFields, _bcbged)
	}
	if _agecgb.ColItems != nil {
		_bbffg := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_agecgb.ColItems, _bbffg)
	}
	if _agecgb.PageFields != nil {
		_aaaae := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agecgb.PageFields, _aaaae)
	}
	if _agecgb.DataFields != nil {
		_cdfea := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agecgb.DataFields, _cdfea)
	}
	if _agecgb.Formats != nil {
		_bbfgde := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_agecgb.Formats, _bbfgde)
	}
	if _agecgb.ConditionalFormats != nil {
		_bgebf := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_agecgb.ConditionalFormats, _bgebf)
	}
	if _agecgb.ChartFormats != nil {
		_egeaf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_agecgb.ChartFormats, _egeaf)
	}
	if _agecgb.PivotHierarchies != nil {
		_eegcc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_agecgb.PivotHierarchies, _eegcc)
	}
	if _agecgb.PivotTableStyleInfo != nil {
		_gbfeb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006ef\u006f"}}
		e.EncodeElement(_agecgb.PivotTableStyleInfo, _gbfeb)
	}
	if _agecgb.Filters != nil {
		_gced := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_agecgb.Filters, _gced)
	}
	if _agecgb.RowHierarchiesUsage != nil {
		_bdadf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_agecgb.RowHierarchiesUsage, _bdadf)
	}
	if _agecgb.ColHierarchiesUsage != nil {
		_gfaaa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_agecgb.ColHierarchiesUsage, _gfaaa)
	}
	if _agecgb.ExtLst != nil {
		_baggc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agecgb.ExtLst, _baggc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Cols and its children, prefixing error messages with path
func (_edcba *CT_Cols) ValidateWithPath(path string) error {
	for _fdef, _ggcc := range _edcba.Col {
		if _eegc := _ggcc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006c\u005b\u0025\u0064\u005d", path, _fdef)); _eegc != nil {
			return _eegc
		}
	}
	return nil
}

func (_abacc *CT_ServerFormats) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cfeeaa := range start.Attr {
		if _cfeeaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eaegba, _cggec := _a.ParseUint(_cfeeaa.Value, 10, 32)
			if _cggec != nil {
				return _cggec
			}
			_afedg := uint32(_eaegba)
			_abacc.CountAttr = &_afedg
			continue
		}
	}
_gccdf:
	for {
		_gdfec, _debgag := d.Token()
		if _debgag != nil {
			return _debgag
		}
		switch _dgggc := _gdfec.(type) {
		case _gd.StartElement:
			switch _dgggc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_gaege := NewCT_ServerFormat()
				if _aeefgf := d.DecodeElement(_gaege, &_dgggc); _aeefgf != nil {
					return _aeefgf
				}
				_abacc.ServerFormat = append(_abacc.ServerFormat, _gaege)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025v", _dgggc.Name)
				if _bbadc := d.Skip(); _bbadc != nil {
					return _bbadc
				}
			}
		case _gd.EndElement:
			break _gccdf
		case _gd.CharData:
		}
	}
	return nil
}

func (_ccace *CT_PatternFill) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ecfbb := range start.Attr {
		if _ecfbb.Name.Local == "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065" {
			_ccace.PatternTypeAttr.UnmarshalXMLAttr(_ecfbb)
			continue
		}
	}
_dggbb:
	for {
		_gaabg, _gggeaa := d.Token()
		if _gggeaa != nil {
			return _gggeaa
		}
		switch _dbdfg := _gaabg.(type) {
		case _gd.StartElement:
			switch _dbdfg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}:
				_ccace.FgColor = NewCT_Color()
				if _decf := d.DecodeElement(_ccace.FgColor, &_dbdfg); _decf != nil {
					return _decf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}:
				_ccace.BgColor = NewCT_Color()
				if _gfadf := d.DecodeElement(_ccace.BgColor, &_dbdfg); _gfadf != nil {
					return _gfadf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006eF\u0069l\u006c\u0020\u0025\u0076", _dbdfg.Name)
				if _geaac := d.Skip(); _geaac != nil {
					return _geaac
				}
			}
		case _gd.EndElement:
			break _dggbb
		case _gd.CharData:
		}
	}
	return nil
}

func (_fbbde *ST_PrintError) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ebcbce, _fbfaf := d.Token()
	if _fbfaf != nil {
		return _fbfaf
	}
	if _dbaea, _dbdgc := _ebcbce.(_gd.EndElement); _dbdgc && _dbaea.Name == start.Name {
		*_fbbde = 1
		return nil
	}
	if _afgffg, _ggdad := _ebcbce.(_gd.CharData); !_ggdad {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebcbce)
	} else {
		switch string(_afgffg) {
		case "":
			*_fbbde = 0
		case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
			*_fbbde = 1
		case "\u0062\u006c\u0061n\u006b":
			*_fbbde = 2
		case "\u0064\u0061\u0073\u0068":
			*_fbbde = 3
		case "\u004e\u0041":
			*_fbbde = 4
		}
	}
	_ebcbce, _fbfaf = d.Token()
	if _fbfaf != nil {
		return _fbfaf
	}
	if _ccabc, _dgfag := _ebcbce.(_gd.EndElement); _dgfag && _ccabc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebcbce)
}

func (_begbe ST_TableType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_begbe.String(), start)
}

// ValidateWithPath validates the CT_CalcChain and its children, prefixing error messages with path
func (_afed *CT_CalcChain) ValidateWithPath(path string) error {
	for _bcdc, _bgcc := range _afed.C {
		if _edf := _bgcc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _bcdc)); _edf != nil {
			return _edf
		}
	}
	if _afed.ExtLst != nil {
		if _cga := _afed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cga != nil {
			return _cga
		}
	}
	return nil
}

func (_ecfac *CT_SingleXmlCell) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ecfac.XmlCellPr = NewCT_XmlCellPr()
	for _, _feggeg := range start.Attr {
		if _feggeg.Name.Local == "\u0069\u0064" {
			_fbcec, _ebbaaf := _a.ParseUint(_feggeg.Value, 10, 32)
			if _ebbaaf != nil {
				return _ebbaaf
			}
			_ecfac.IdAttr = uint32(_fbcec)
			continue
		}
		if _feggeg.Name.Local == "\u0072" {
			_dfbdc, _agbce := _feggeg.Value, error(nil)
			if _agbce != nil {
				return _agbce
			}
			_ecfac.RAttr = _dfbdc
			continue
		}
		if _feggeg.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_beeed, _fbada := _a.ParseUint(_feggeg.Value, 10, 32)
			if _fbada != nil {
				return _fbada
			}
			_ecfac.ConnectionIdAttr = uint32(_beeed)
			continue
		}
	}
_ddbge:
	for {
		_dccea, _ceaddf := d.Token()
		if _ceaddf != nil {
			return _ceaddf
		}
		switch _bdddd := _dccea.(type) {
		case _gd.StartElement:
			switch _bdddd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}:
				if _fbcaaf := d.DecodeElement(_ecfac.XmlCellPr, &_bdddd); _fbcaaf != nil {
					return _fbcaaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecfac.ExtLst = NewCT_ExtensionList()
				if _dgcbf := d.DecodeElement(_ecfac.ExtLst, &_bdddd); _dgcbf != nil {
					return _dgcbf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0020\u0025v", _bdddd.Name)
				if _edabd := d.Skip(); _edabd != nil {
					return _edabd
				}
			}
		case _gd.EndElement:
			break _ddbge
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ControlPr and its children
func (_cgfd *CT_ControlPr) Validate() error {
	return _cgfd.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072")
}

// Validate validates the CT_MdxMemeberProp and its children
func (_bedaa *CT_MdxMemeberProp) Validate() error {
	return _bedaa.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070")
}

type PivotCacheRecords struct{ CT_PivotCacheRecords }

func (_gaefff *ST_CfType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gaefff = 0
	case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
		*_gaefff = 1
	case "\u0063\u0065\u006c\u006c\u0049\u0073":
		*_gaefff = 2
	case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
		*_gaefff = 3
	case "\u0064a\u0074\u0061\u0042\u0061\u0072":
		*_gaefff = 4
	case "\u0069c\u006f\u006e\u0053\u0065\u0074":
		*_gaefff = 5
	case "\u0074\u006f\u00701\u0030":
		*_gaefff = 6
	case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gaefff = 7
	case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gaefff = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_gaefff = 9
	case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_gaefff = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_gaefff = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_gaefff = 12
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_gaefff = 13
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_gaefff = 14
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_gaefff = 15
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_gaefff = 16
	case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gaefff = 17
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_gaefff = 18
	}
	return nil
}

func (_ggca *CT_DateGroupItem) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0079\u0065\u0061\u0072"}, Value: _b.Sprintf("\u0025\u0076", _ggca.YearAttr)})
	if _ggca.MonthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u006f\u006et\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_ggca.MonthAttr)})
	}
	if _ggca.DayAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_ggca.DayAttr)})
	}
	if _ggca.HourAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u006f\u0075\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_ggca.HourAttr)})
	}
	if _ggca.MinuteAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e\u0075\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ggca.MinuteAttr)})
	}
	if _ggca.SecondAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0063\u006f\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ggca.SecondAttr)})
	}
	_gfbac, _fdfd := _ggca.DateTimeGroupingAttr.MarshalXMLAttr(_gd.Name{Local: "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067"})
	if _fdfd != nil {
		return _fdfd
	}
	start.Attr = append(start.Attr, _gfbac)
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Row and its children
func (_gfaba *CT_Row) Validate() error {
	return _gfaba.ValidateWithPath("\u0043\u0054\u005f\u0052\u006f\u0077")
}

// ValidateWithPath validates the CT_MdxMetadata and its children, prefixing error messages with path
func (_ggaa *CT_MdxMetadata) ValidateWithPath(path string) error {
	for _abafa, _bbgdd := range _ggaa.Mdx {
		if _egag := _bbgdd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u0064\u0078\u005b\u0025\u0064\u005d", path, _abafa)); _egag != nil {
			return _egag
		}
	}
	return nil
}

func (_afcbeb *ST_FontScheme) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_afcbeb = 0
	case "\u006e\u006f\u006e\u0065":
		*_afcbeb = 1
	case "\u006d\u0061\u006ao\u0072":
		*_afcbeb = 2
	case "\u006d\u0069\u006eo\u0072":
		*_afcbeb = 3
	}
	return nil
}

type CT_SheetFormatPr struct {

	// Base Column Width
	BaseColWidthAttr *uint32

	// Default Column Width
	DefaultColWidthAttr *float64

	// Default Row Height
	DefaultRowHeightAttr float64

	// Custom Height
	CustomHeightAttr *bool

	// Hidden By Default
	ZeroHeightAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom Border
	ThickBottomAttr *bool

	// Maximum Outline Row
	OutlineLevelRowAttr *uint8

	// Column Outline Level
	OutlineLevelColAttr *uint8
}

// ValidateWithPath validates the CT_MapInfo and its children, prefixing error messages with path
func (_eced *CT_MapInfo) ValidateWithPath(path string) error {
	for _fdeac, _fbcd := range _eced.Schema {
		if _cdaee := _fbcd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d", path, _fdeac)); _cdaee != nil {
			return _cdaee
		}
	}
	for _bcagg, _aeeef := range _eced.Map {
		if _eedgb := _aeeef.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _bcagg)); _eedgb != nil {
			return _eedgb
		}
	}
	return nil
}

// Validate validates the CT_TablePart and its children
func (_eeace *CT_TablePart) Validate() error {
	return _eeace.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074")
}

func (_aeega *CT_IconFilter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_ebfg, _bfbea := _aeega.IconSetAttr.MarshalXMLAttr(_gd.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
	if _bfbea != nil {
		return _bfbea
	}
	start.Attr = append(start.Attr, _ebfg)
	if _aeega.IconIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aeega.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_TextFields struct {

	// Count of Fields
	CountAttr *uint32

	// Text Import Field Settings
	TextField []*CT_TextField
}

// ValidateWithPath validates the CT_MeasureDimensionMap and its children, prefixing error messages with path
func (_cacff *CT_MeasureDimensionMap) ValidateWithPath(path string) error { return nil }

type ST_DvAspect byte

func (_dgfaa ST_TextVAlign) ValidateWithPath(path string) error {
	switch _dgfaa {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgfaa))
	}
	return nil
}

func (_aeded *ST_ConditionalFormattingOperator) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_eegccc, _feged := d.Token()
	if _feged != nil {
		return _feged
	}
	if _cdfge, _cbbgga := _eegccc.(_gd.EndElement); _cbbgga && _cdfge.Name == start.Name {
		*_aeded = 1
		return nil
	}
	if _bcega, _ecadf := _eegccc.(_gd.CharData); !_ecadf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eegccc)
	} else {
		switch string(_bcega) {
		case "":
			*_aeded = 0
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_aeded = 1
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_aeded = 2
		case "\u0065\u0071\u0075a\u006c":
			*_aeded = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_aeded = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_aeded = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_aeded = 6
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_aeded = 7
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_aeded = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_aeded = 9
		case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_aeded = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_aeded = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_aeded = 12
		}
	}
	_eegccc, _feged = d.Token()
	if _feged != nil {
		return _feged
	}
	if _faebba, _eecde := _eegccc.(_gd.EndElement); _eecde && _faebba.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eegccc)
}

// ValidateWithPath validates the CT_Sheets and its children, prefixing error messages with path
func (_bedcge *CT_Sheets) ValidateWithPath(path string) error {
	for _dabea, _dbegdc := range _bedcge.Sheet {
		if _aadbad := _dbegdc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fS\u0068\u0065\u0065\u0074\u005b\u0025\u0064\u005d", path, _dabea)); _aadbad != nil {
			return _aadbad
		}
	}
	return nil
}

func (_efb *CT_Border) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _efb.DiagonalUpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efb.DiagonalUpAttr))})
	}
	if _efb.DiagonalDownAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efb.DiagonalDownAttr))})
	}
	if _efb.OutlineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_efb.OutlineAttr))})
	}
	e.EncodeToken(start)
	if _efb.Start != nil {
		_dff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0061\u0072\u0074"}}
		e.EncodeElement(_efb.Start, _dff)
	}
	if _efb.End != nil {
		_gge := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0064"}}
		e.EncodeElement(_efb.End, _gge)
	}
	if _efb.Left != nil {
		_gfea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_efb.Left, _gfea)
	}
	if _efb.Right != nil {
		_bfa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_efb.Right, _bfa)
	}
	if _efb.Top != nil {
		_aff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070"}}
		e.EncodeElement(_efb.Top, _aff)
	}
	if _efb.Bottom != nil {
		_fbd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0062\u006f\u0074\u0074\u006fm"}}
		e.EncodeElement(_efb.Bottom, _fbd)
	}
	if _efb.Diagonal != nil {
		_fde := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}}
		e.EncodeElement(_efb.Diagonal, _fde)
	}
	if _efb.Vertical != nil {
		_gdbc := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}}
		e.EncodeElement(_efb.Vertical, _gdbc)
	}
	if _efb.Horizontal != nil {
		_bbfb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}}
		e.EncodeElement(_efb.Horizontal, _bbfb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_agbbdg ST_PrintError) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_agbbdg.String(), start)
}

func (_dbeeg ST_ConditionalFormattingOperator) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dbeeg.String(), start)
}

// ValidateWithPath validates the CT_Missing and its children, prefixing error messages with path
func (_gadab *CT_Missing) ValidateWithPath(path string) error {
	for _affd, _abbbcb := range _gadab.Tpls {
		if _fbcdfc := _abbbcb.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _affd)); _fbcdfc != nil {
			return _fbcdfc
		}
	}
	for _ddacd, _deege := range _gadab.X {
		if _ggeeae := _deege.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _ddacd)); _ggeeae != nil {
			return _ggeeae
		}
	}
	return nil
}

type ST_PivotFilterType byte

func (_cgfea *CT_String) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _eggbdd := range start.Attr {
		if _eggbdd.Name.Local == "\u0066\u0063" {
			_bdbeba, _bdgdg := _eggbdd.Value, error(nil)
			if _bdgdg != nil {
				return _bdgdg
			}
			_cgfea.FcAttr = &_bdbeba
			continue
		}
		if _eggbdd.Name.Local == "\u0076" {
			_aeaeae, _cgfbb := _eggbdd.Value, error(nil)
			if _cgfbb != nil {
				return _cgfbb
			}
			_cgfea.VAttr = _aeaeae
			continue
		}
		if _eggbdd.Name.Local == "\u0066" {
			_aeafdb, _feffe := _a.ParseBool(_eggbdd.Value)
			if _feffe != nil {
				return _feffe
			}
			_cgfea.FAttr = &_aeafdb
			continue
		}
		if _eggbdd.Name.Local == "\u0063" {
			_fgede, _ecgdd := _eggbdd.Value, error(nil)
			if _ecgdd != nil {
				return _ecgdd
			}
			_cgfea.CAttr = &_fgede
			continue
		}
		if _eggbdd.Name.Local == "\u0063\u0070" {
			_facfca, _gacgac := _a.ParseUint(_eggbdd.Value, 10, 32)
			if _gacgac != nil {
				return _gacgac
			}
			_cbfcd := uint32(_facfca)
			_cgfea.CpAttr = &_cbfcd
			continue
		}
		if _eggbdd.Name.Local == "\u0069\u006e" {
			_efgcf, _fccgd := _a.ParseUint(_eggbdd.Value, 10, 32)
			if _fccgd != nil {
				return _fccgd
			}
			_eddbf := uint32(_efgcf)
			_cgfea.InAttr = &_eddbf
			continue
		}
		if _eggbdd.Name.Local == "\u0062\u0063" {
			_baacae, _bgbdb := _eggbdd.Value, error(nil)
			if _bgbdb != nil {
				return _bgbdb
			}
			_cgfea.BcAttr = &_baacae
			continue
		}
		if _eggbdd.Name.Local == "\u0075" {
			_dcfdfg, _bbcdfc := _a.ParseBool(_eggbdd.Value)
			if _bbcdfc != nil {
				return _bbcdfc
			}
			_cgfea.UAttr = &_dcfdfg
			continue
		}
		if _eggbdd.Name.Local == "\u0069" {
			_dedab, _ebgaa := _a.ParseBool(_eggbdd.Value)
			if _ebgaa != nil {
				return _ebgaa
			}
			_cgfea.IAttr = &_dedab
			continue
		}
		if _eggbdd.Name.Local == "\u0075\u006e" {
			_bddeg, _gbfbc := _a.ParseBool(_eggbdd.Value)
			if _gbfbc != nil {
				return _gbfbc
			}
			_cgfea.UnAttr = &_bddeg
			continue
		}
		if _eggbdd.Name.Local == "\u0073\u0074" {
			_fbadd, _gedfgf := _a.ParseBool(_eggbdd.Value)
			if _gedfgf != nil {
				return _gedfgf
			}
			_cgfea.StAttr = &_fbadd
			continue
		}
		if _eggbdd.Name.Local == "\u0062" {
			_gbdbcc, _dbbae := _a.ParseBool(_eggbdd.Value)
			if _dbbae != nil {
				return _dbbae
			}
			_cgfea.BAttr = &_gbdbcc
			continue
		}
	}
_abdef:
	for {
		_gcbcdg, _abeedd := d.Token()
		if _abeedd != nil {
			return _abeedd
		}
		switch _gbeeb := _gcbcdg.(type) {
		case _gd.StartElement:
			switch _gbeeb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_dffegg := NewCT_Tuples()
				if _dddef := d.DecodeElement(_dffegg, &_gbeeb); _dddef != nil {
					return _dddef
				}
				_cgfea.Tpls = append(_cgfea.Tpls, _dffegg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_dgccd := NewCT_X()
				if _gaadf := d.DecodeElement(_dgccd, &_gbeeb); _gaadf != nil {
					return _gaadf
				}
				_cgfea.X = append(_cgfea.X, _dgccd)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0074\u0072i\u006e\u0067 \u0025\u0076", _gbeeb.Name)
				if _deedg := d.Skip(); _deedg != nil {
					return _deedg
				}
			}
		case _gd.EndElement:
			break _abdef
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotArea and its children, prefixing error messages with path
func (_cbbdg *CT_PivotArea) ValidateWithPath(path string) error {
	if _acgcbe := _cbbdg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _acgcbe != nil {
		return _acgcbe
	}
	if _cbgef := _cbbdg.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _cbgef != nil {
		return _cbgef
	}
	if _cbbdg.References != nil {
		if _fbcef := _cbbdg.References.ValidateWithPath(path + "/\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _fbcef != nil {
			return _fbcef
		}
	}
	if _cbbdg.ExtLst != nil {
		if _ebbaad := _cbbdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebbaad != nil {
			return _ebbaad
		}
	}
	return nil
}

func (_eedfgd ST_Comments) String() string {
	switch _eedfgd {
	case 0:
		return ""
	case 1:
		return "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case 2:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case 3:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return ""
}

func (_ddaced ST_DataValidationType) ValidateWithPath(path string) error {
	switch _ddaced {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddaced))
	}
	return nil
}

type CT_Parameter struct {

	// Parameter Name
	NameAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Parameter Type
	ParameterTypeAttr ST_ParameterType

	// Refresh on Change
	RefreshOnChangeAttr *bool

	// Parameter Prompt String
	PromptAttr *string

	// Boolean
	BooleanAttr *bool

	// Double
	DoubleAttr *float64

	// Integer
	IntegerAttr *int32

	// String
	StringAttr *string

	// Cell Reference
	CellAttr *string
}

// ValidateWithPath validates the CT_IgnoredErrors and its children, prefixing error messages with path
func (_ecdaae *CT_IgnoredErrors) ValidateWithPath(path string) error {
	for _acbeg, _bacaga := range _ecdaae.IgnoredError {
		if _gfgfa := _bacaga.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0049gn\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u005b\u0025\u0064\u005d", path, _acbeg)); _gfgfa != nil {
			return _gfgfa
		}
	}
	if _ecdaae.ExtLst != nil {
		if _bfgfg := _ecdaae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfgfg != nil {
			return _bfgfg
		}
	}
	return nil
}

func (_dcgdg *CT_PivotCache) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bcffd := range start.Attr {
		if _bcffd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bcffd.Name.Local == "\u0069\u0064" || _bcffd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bcffd.Name.Local == "\u0069\u0064" {
			_cbdgdb, _fcbdb := _bcffd.Value, error(nil)
			if _fcbdb != nil {
				return _fcbdb
			}
			_dcgdg.IdAttr = _cbdgdb
			continue
		}
		if _bcffd.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_fbbac, _ecfegd := _a.ParseUint(_bcffd.Value, 10, 32)
			if _ecfegd != nil {
				return _ecfegd
			}
			_dcgdg.CacheIdAttr = uint32(_fbbac)
			continue
		}
	}
	for {
		_cbfebd, _gadcf := d.Token()
		if _gadcf != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050i\u0076o\u0074C\u0061\u0063\u0068\u0065\u003a\u0020\u0025s", _gadcf)
		}
		if _gegfd, _gbadfa := _cbfebd.(_gd.EndElement); _gbadfa && _gegfd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_MdxKPI() *CT_MdxKPI {
	_geca := &CT_MdxKPI{}
	_geca.PAttr = ST_MdxKPIProperty(1)
	return _geca
}

const (
	ST_ObjectsUnset        ST_Objects = 0
	ST_ObjectsAll          ST_Objects = 1
	ST_ObjectsPlaceholders ST_Objects = 2
	ST_ObjectsNone         ST_Objects = 3
)

func (_ddcbda ST_CalcMode) Validate() error { return _ddcbda.ValidateWithPath("") }

func (_dcbeg ST_DataValidationType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dcbeg.String(), start)
}

func (_ggabba ST_FontScheme) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ggabba.String(), start)
}

func (_bbge *CT_GradientFill) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bbge.TypeAttr != ST_GradientTypeUnset {
		_acdgb, _dabae := _bbge.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dabae != nil {
			return _dabae
		}
		start.Attr = append(start.Attr, _acdgb)
	}
	if _bbge.DegreeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u0067\u0072\u0065\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bbge.DegreeAttr)})
	}
	if _bbge.LeftAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bbge.LeftAttr)})
	}
	if _bbge.RightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bbge.RightAttr)})
	}
	if _bbge.TopAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_bbge.TopAttr)})
	}
	if _bbge.BottomAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_bbge.BottomAttr)})
	}
	e.EncodeToken(start)
	if _bbge.Stop != nil {
		_ggfae := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0074\u006f\u0070"}}
		for _, _aabf := range _bbge.Stop {
			e.EncodeElement(_aabf, _ggfae)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_VerticalAlignFontProperty struct {

	// Value
	ValAttr _af.ST_VerticalAlignRun
}

type CT_Tables struct {

	// Count of Tables
	CountAttr *uint32

	// No Value
	M []*CT_TableMissing

	// Character Value
	S []*CT_XStringElement

	// Index
	X []*CT_Index
}

type CT_Pages struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Items
	Page []*CT_PCDSCPage
}

func (_bdfgb *CT_Member) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fdage := range start.Attr {
		if _fdage.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgccg, _egecg := _fdage.Value, error(nil)
			if _egecg != nil {
				return _egecg
			}
			_bdfgb.NameAttr = _bgccg
			continue
		}
	}
	for {
		_bcebg, _cbabg := d.Token()
		if _cbabg != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0065\u006db\u0065\u0072\u003a\u0020\u0025\u0073", _cbabg)
		}
		if _becbe, _caaag := _bcebg.(_gd.EndElement); _caaag && _becbe.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_XStringElement and its children
func (_agdbcfg *CT_XStringElement) Validate() error {
	return _agdbcfg.ValidateWithPath("\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074")
}

func (_gcdgg ST_PatternType) Validate() error { return _gcdgg.ValidateWithPath("") }

type CT_PivotSelection struct {

	// Pane
	PaneAttr ST_Pane

	// Show Header
	ShowHeaderAttr *bool

	// Label
	LabelAttr *bool

	// Data Selection
	DataAttr *bool

	// Extendable
	ExtendableAttr *bool

	// Selection Count
	CountAttr *uint32

	// Axis
	AxisAttr ST_Axis

	// Dimension
	DimensionAttr *uint32

	// Start
	StartAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Active Row
	ActiveRowAttr *uint32

	// Active Column
	ActiveColAttr *uint32

	// Previous Row
	PreviousRowAttr *uint32

	// Previous Column Selection
	PreviousColAttr *uint32

	// Click Count
	ClickAttr *uint32
	IdAttr    *string

	// Pivot Area
	PivotArea *CT_PivotArea
}

type CT_FontName struct {

	// String Value
	ValAttr string
}

type CT_UndoInfo struct {

	// Index
	IndexAttr uint32

	// Expression
	ExpAttr ST_FormulaExpression

	// Reference 3D
	Ref3DAttr *bool

	// Array Formula
	ArrayAttr *bool

	// Value Needed
	VAttr *bool

	// Defined Name Formula
	NfAttr *bool

	// Cross Sheet Move
	CsAttr *bool

	// Range
	DrAttr string

	// Defined Name
	DnAttr *string

	// Cell Reference
	RAttr *string

	// Sheet Id
	SIdAttr *uint32
}

type CT_SheetBackgroundPicture struct{ IdAttr string }

func (_cggdd *CT_Tuple) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ffeed := range start.Attr {
		if _ffeed.Name.Local == "\u0066\u006c\u0064" {
			_cfcfa, _ddbggb := _a.ParseUint(_ffeed.Value, 10, 32)
			if _ddbggb != nil {
				return _ddbggb
			}
			_gabdf := uint32(_cfcfa)
			_cggdd.FldAttr = &_gabdf
			continue
		}
		if _ffeed.Name.Local == "\u0068\u0069\u0065\u0072" {
			_ddceg, _afbaf := _a.ParseUint(_ffeed.Value, 10, 32)
			if _afbaf != nil {
				return _afbaf
			}
			_fabea := uint32(_ddceg)
			_cggdd.HierAttr = &_fabea
			continue
		}
		if _ffeed.Name.Local == "\u0069\u0074\u0065\u006d" {
			_egbbg, _febeab := _a.ParseUint(_ffeed.Value, 10, 32)
			if _febeab != nil {
				return _febeab
			}
			_cggdd.ItemAttr = uint32(_egbbg)
			continue
		}
	}
	for {
		_dafbd, _aegefc := d.Token()
		if _aegefc != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0075\u0070\u006c\u0065: \u0025\u0073", _aegefc)
		}
		if _gebcg, _edacab := _dafbd.(_gd.EndElement); _edacab && _gebcg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fbbgcb *CT_TableParts) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gedda := range start.Attr {
		if _gedda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acbgef, _geccd := _a.ParseUint(_gedda.Value, 10, 32)
			if _geccd != nil {
				return _geccd
			}
			_abbfedg := uint32(_acbgef)
			_fbbgcb.CountAttr = &_abbfedg
			continue
		}
	}
_edfcb:
	for {
		_gbegc, _gbbcf := d.Token()
		if _gbbcf != nil {
			return _gbbcf
		}
		switch _abgbe := _gbegc.(type) {
		case _gd.StartElement:
			switch _abgbe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}:
				_facecg := NewCT_TablePart()
				if _ddbec := d.DecodeElement(_facecg, &_abgbe); _ddbec != nil {
					return _ddbec
				}
				_fbbgcb.TablePart = append(_fbbgcb.TablePart, _facecg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073 \u0025\u0076", _abgbe.Name)
				if _bdcde := d.Skip(); _bdcde != nil {
					return _bdcde
				}
			}
		case _gd.EndElement:
			break _edfcb
		case _gd.CharData:
		}
	}
	return nil
}

type CT_ExternalReferences struct {

	// External Reference
	ExternalReference []*CT_ExternalReference
}

type CT_Hyperlink struct {

	// Reference
	RefAttr string
	IdAttr  *string

	// Location
	LocationAttr *string

	// Tool Tip
	TooltipAttr *string

	// Display String
	DisplayAttr *string
}

type CT_AutoFilter struct {

	// Cell or Range Reference
	RefAttr *string

	// AutoFilter Column
	FilterColumn []*CT_FilterColumn

	// Sort State for Auto Filter
	SortState *CT_SortState
	ExtLst    *CT_ExtensionList
}

type CT_DateGroupItem struct {

	// Year
	YearAttr uint16

	// Month
	MonthAttr *uint16

	// Day
	DayAttr *uint16

	// Hour
	HourAttr *uint16

	// Minute
	MinuteAttr *uint16

	// Second
	SecondAttr *uint16

	// Date Time Grouping
	DateTimeGroupingAttr ST_DateTimeGrouping
}

// Validate validates the Workbook and its children
func (_afaca *Workbook) Validate() error {
	return _afaca.ValidateWithPath("\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

func (_gfabc *CT_DynamicFilter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_fgacd, _dgce := _gfabc.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _dgce != nil {
		return _dgce
	}
	start.Attr = append(start.Attr, _fgacd)
	if _gfabc.ValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_gfabc.ValAttr)})
	}
	if _gfabc.ValIsoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c\u0049\u0073\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_gfabc.ValIsoAttr)})
	}
	if _gfabc.MaxValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_gfabc.MaxValAttr)})
	}
	if _gfabc.MaxValIsoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o"}, Value: _b.Sprintf("\u0025\u0076", *_gfabc.MaxValIsoAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_ExternalRow() *CT_ExternalRow { _dafee := &CT_ExternalRow{}; return _dafee }

func (_agcada ST_TextVAlign) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_fgdbcf := _gd.Attr{}
	_fgdbcf.Name = name
	switch _agcada {
	case ST_TextVAlignUnset:
		_fgdbcf.Value = ""
	case ST_TextVAlignTop:
		_fgdbcf.Value = "\u0074\u006f\u0070"
	case ST_TextVAlignCenter:
		_fgdbcf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextVAlignBottom:
		_fgdbcf.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_TextVAlignJustify:
		_fgdbcf.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextVAlignDistributed:
		_fgdbcf.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _fgdbcf, nil
}

func (_abgba *CT_ExternalSheetName) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cfdec := range start.Attr {
		if _cfdec.Name.Local == "\u0076\u0061\u006c" {
			_abaf, _cgfbea := _cfdec.Value, error(nil)
			if _cgfbea != nil {
				return _cgfbea
			}
			_abgba.ValAttr = &_abaf
			continue
		}
	}
	for {
		_ebbeg, _dfca := d.Token()
		if _dfca != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _dfca)
		}
		if _ccdfa, _eedeb := _ebbeg.(_gd.EndElement); _eedeb && _ccdfa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cfdaa *CT_Scenarios) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cfdaa.CurrentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063u\u0072\u0072\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cfdaa.CurrentAttr)})
	}
	if _cfdaa.ShowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_cfdaa.ShowAttr)})
	}
	if _cfdaa.SqrefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_cfdaa.SqrefAttr)})
	}
	e.EncodeToken(start)
	_egfebd := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}}
	for _, _aeeae := range _cfdaa.Scenario {
		e.EncodeElement(_aeeae, _egfebd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type AG_RevData struct {
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

// ValidateWithPath validates the CT_Filter and its children, prefixing error messages with path
func (_ggeg *CT_Filter) ValidateWithPath(path string) error { return nil }

type CT_TextPr struct {

	// Prompt for File Name
	PromptAttr *bool

	// File Type
	FileTypeAttr ST_FileType

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string

	// First Row
	FirstRowAttr *uint32

	// Source File Name
	SourceFileAttr *string

	// Delimited File
	DelimitedAttr *bool

	// Decimal Separator
	DecimalAttr *string

	// Thousands Separator
	ThousandsAttr *string

	// Tab as Delimiter
	TabAttr *bool

	// Space is Delimiter
	SpaceAttr *bool

	// Comma is Delimiter
	CommaAttr *bool

	// Semicolon is Delimiter
	SemicolonAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Qualifier
	QualifierAttr ST_Qualifier

	// Custom Delimiter
	DelimiterAttr *string

	// Fields
	TextFields *CT_TextFields
}

func (_cddad *CT_SheetDimension) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _cddad.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bcbbe *CT_PivotArea) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _beegd := range start.Attr {
		if _beegd.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_ggegc, _ggbdee := _a.ParseBool(_beegd.Value)
			if _ggbdee != nil {
				return _ggbdee
			}
			_bcbbe.OutlineAttr = &_ggegc
			continue
		}
		if _beegd.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_bgeag, _ggbdg := _a.ParseInt(_beegd.Value, 10, 32)
			if _ggbdg != nil {
				return _ggbdg
			}
			_fcgab := int32(_bgeag)
			_bcbbe.FieldAttr = &_fcgab
			continue
		}
		if _beegd.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079" {
			_aaggc, _ebbec := _a.ParseBool(_beegd.Value)
			if _ebbec != nil {
				return _ebbec
			}
			_bcbbe.DataOnlyAttr = &_aaggc
			continue
		}
		if _beegd.Name.Local == "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy" {
			_ffaeag, _afece := _a.ParseBool(_beegd.Value)
			if _afece != nil {
				return _afece
			}
			_bcbbe.LabelOnlyAttr = &_ffaeag
			continue
		}
		if _beegd.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077" {
			_becgg, _fgdff := _a.ParseBool(_beegd.Value)
			if _fgdff != nil {
				return _fgdff
			}
			_bcbbe.GrandRowAttr = &_becgg
			continue
		}
		if _beegd.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c" {
			_ffbaf, _efbfe := _a.ParseBool(_beegd.Value)
			if _efbfe != nil {
				return _efbfe
			}
			_bcbbe.GrandColAttr = &_ffbaf
			continue
		}
		if _beegd.Name.Local == "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078" {
			_cbdbb, _fddfeb := _a.ParseBool(_beegd.Value)
			if _fddfeb != nil {
				return _fddfeb
			}
			_bcbbe.CacheIndexAttr = &_cbdbb
			continue
		}
		if _beegd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bcbbe.TypeAttr.UnmarshalXMLAttr(_beegd)
			continue
		}
		if _beegd.Name.Local == "\u006f\u0066\u0066\u0073\u0065\u0074" {
			_daega, _cgdff := _beegd.Value, error(nil)
			if _cgdff != nil {
				return _cgdff
			}
			_bcbbe.OffsetAttr = &_daega
			continue
		}
		if _beegd.Name.Local == "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073" {
			_abebg, _dcbb := _a.ParseBool(_beegd.Value)
			if _dcbb != nil {
				return _dcbb
			}
			_bcbbe.CollapsedLevelsAreSubtotalsAttr = &_abebg
			continue
		}
		if _beegd.Name.Local == "\u0061\u0078\u0069\u0073" {
			_bcbbe.AxisAttr.UnmarshalXMLAttr(_beegd)
			continue
		}
		if _beegd.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_fbfb, _ffade := _a.ParseUint(_beegd.Value, 10, 32)
			if _ffade != nil {
				return _ffade
			}
			_dfcca := uint32(_fbfb)
			_bcbbe.FieldPositionAttr = &_dfcca
			continue
		}
	}
_aggca:
	for {
		_deacd, _gecff := d.Token()
		if _gecff != nil {
			return _gecff
		}
		switch _ggfaf := _deacd.(type) {
		case _gd.StartElement:
			switch _ggfaf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}:
				_bcbbe.References = NewCT_PivotAreaReferences()
				if _fabf := d.DecodeElement(_bcbbe.References, &_ggfaf); _fabf != nil {
					return _fabf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcbbe.ExtLst = NewCT_ExtensionList()
				if _ebccd := d.DecodeElement(_bcbbe.ExtLst, &_ggfaf); _ebccd != nil {
					return _ebccd
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u0020\u0025\u0076", _ggfaf.Name)
				if _bdgeb := d.Skip(); _bdgeb != nil {
					return _bdgeb
				}
			}
		case _gd.EndElement:
			break _aggca
		case _gd.CharData:
		}
	}
	return nil
}

type CT_SingleXmlCells struct {

	// Table Properties
	SingleXmlCell []*CT_SingleXmlCell
}

// Validate validates the CT_RevisionDefinedName and its children
func (_cdcfab *CT_RevisionDefinedName) Validate() error {
	return _cdcfab.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

// Validate validates the CT_SortCondition and its children
func (_egcdc *CT_SortCondition) Validate() error {
	return _egcdc.ValidateWithPath("\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_BorderPr and its children
func (_gea *CT_BorderPr) Validate() error {
	return _gea.ValidateWithPath("C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072")
}

// ValidateWithPath validates the CT_PivotAreaReference and its children, prefixing error messages with path
func (_badga *CT_PivotAreaReference) ValidateWithPath(path string) error {
	for _baegfa, _bcbfb := range _badga.X {
		if _aegcdd := _bcbfb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _baegfa)); _aegcdd != nil {
			return _aegcdd
		}
	}
	if _badga.ExtLst != nil {
		if _agdcg := _badga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agdcg != nil {
			return _agdcg
		}
	}
	return nil
}

// ValidateWithPath validates the Connections and its children, prefixing error messages with path
func (_egadf *Connections) ValidateWithPath(path string) error {
	if _ffecdf := _egadf.CT_Connections.ValidateWithPath(path); _ffecdf != nil {
		return _ffecdf
	}
	return nil
}

type CT_FilterColumn struct {

	// Filter Column Data
	ColIdAttr uint32

	// Hidden AutoFilter Button
	HiddenButtonAttr *bool

	// Show Filter Button
	ShowButtonAttr *bool

	// Filter Criteria
	Filters *CT_Filters

	// Top 10
	Top10 *CT_Top10

	// Custom Filters
	CustomFilters *CT_CustomFilters

	// Dynamic Filter
	DynamicFilter *CT_DynamicFilter

	// Color Filter Criteria
	ColorFilter *CT_ColorFilter

	// Icon Filter
	IconFilter *CT_IconFilter
	ExtLst     *CT_ExtensionList
}

type CT_Scenarios struct {

	// Current Scenario
	CurrentAttr *uint32

	// Last Shown Scenario
	ShowAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Scenario
	Scenario []*CT_Scenario
}

const (
	ST_MdxKPIPropertyUnset ST_MdxKPIProperty = 0
	ST_MdxKPIPropertyV     ST_MdxKPIProperty = 1
	ST_MdxKPIPropertyG     ST_MdxKPIProperty = 2
	ST_MdxKPIPropertyS     ST_MdxKPIProperty = 3
	ST_MdxKPIPropertyT     ST_MdxKPIProperty = 4
	ST_MdxKPIPropertyW     ST_MdxKPIProperty = 5
	ST_MdxKPIPropertyM     ST_MdxKPIProperty = 6
)

// ValidateWithPath validates the CT_QueryTableFields and its children, prefixing error messages with path
func (_gcgffd *CT_QueryTableFields) ValidateWithPath(path string) error {
	for _fcffa, _ceagga := range _gcgffd.QueryTableField {
		if _ccacg := _ceagga.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u005b\u0025d\u005d", path, _fcffa)); _ccacg != nil {
			return _ccacg
		}
	}
	return nil
}

func NewCT_String() *CT_String { _fafegd := &CT_String{}; return _fafegd }

// Validate validates the CT_Scenarios and its children
func (_ddbedf *CT_Scenarios) Validate() error {
	return _ddbedf.ValidateWithPath("\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073")
}

func (_eddfb *ST_TargetScreenSize) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_eddfb = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_eddfb = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_eddfb = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_eddfb = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_eddfb = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_eddfb = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_eddfb = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_eddfb = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_eddfb = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_eddfb = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
		*_eddfb = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_eddfb = 11
	}
	return nil
}

func (_gfcbeb *CT_X) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gfcbeb.VAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", *_gfcbeb.VAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_MemberProperty() *CT_MemberProperty { _gafccd := &CT_MemberProperty{}; return _gafccd }

func NewCT_ExternalReferences() *CT_ExternalReferences {
	_cecaa := &CT_ExternalReferences{}
	return _cecaa
}

func (_cgcga *CT_ObjectPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cgcga.LockedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.LockedAttr))})
	}
	if _cgcga.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.DefaultSizeAttr))})
	}
	if _cgcga.PrintAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.PrintAttr))})
	}
	if _cgcga.DisabledAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.DisabledAttr))})
	}
	if _cgcga.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.UiObjectAttr))})
	}
	if _cgcga.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.AutoFillAttr))})
	}
	if _cgcga.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.AutoLineAttr))})
	}
	if _cgcga.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.AutoPictAttr))})
	}
	if _cgcga.MacroAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_cgcga.MacroAttr)})
	}
	if _cgcga.AltTextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cgcga.AltTextAttr)})
	}
	if _cgcga.DdeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0064\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgcga.DdeAttr))})
	}
	if _cgcga.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cgcga.IdAttr)})
	}
	e.EncodeToken(start)
	_defbba := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_cgcga.Anchor, _defbba)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Controls and its children, prefixing error messages with path
func (_dbfd *CT_Controls) ValidateWithPath(path string) error {
	for _dddee, _gbgg := range _dbfd.Control {
		if _fdecc := _gbgg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _dddee)); _fdecc != nil {
			return _fdecc
		}
	}
	return nil
}

func (_baaae *CT_RangePr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fcffff := range start.Attr {
		if _fcffff.Name.Local == "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t" {
			_fgbecg, _ebggad := _a.ParseBool(_fcffff.Value)
			if _ebggad != nil {
				return _ebggad
			}
			_baaae.AutoStartAttr = &_fgbecg
			continue
		}
		if _fcffff.Name.Local == "\u0061u\u0074\u006f\u0045\u006e\u0064" {
			_gggad, _gdffa := _a.ParseBool(_fcffff.Value)
			if _gdffa != nil {
				return _gdffa
			}
			_baaae.AutoEndAttr = &_gggad
			continue
		}
		if _fcffff.Name.Local == "\u0067r\u006f\u0075\u0070\u0042\u0079" {
			_baaae.GroupByAttr.UnmarshalXMLAttr(_fcffff)
			continue
		}
		if _fcffff.Name.Local == "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d" {
			_fffed, _egdad := _a.ParseFloat(_fcffff.Value, 64)
			if _egdad != nil {
				return _egdad
			}
			_baaae.StartNumAttr = &_fffed
			continue
		}
		if _fcffff.Name.Local == "\u0065\u006e\u0064\u004e\u0075\u006d" {
			_afeafc, _bdadd := _a.ParseFloat(_fcffff.Value, 64)
			if _bdadd != nil {
				return _bdadd
			}
			_baaae.EndNumAttr = &_afeafc
			continue
		}
		if _fcffff.Name.Local == "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e" {
			_egcfg, _fgdca := ParseStdlibTime(_fcffff.Value)
			if _fgdca != nil {
				return _fgdca
			}
			_baaae.StartDateAttr = &_egcfg
			continue
		}
		if _fcffff.Name.Local == "\u0065n\u0064\u0044\u0061\u0074\u0065" {
			_cbaac, _ecbef := ParseStdlibTime(_fcffff.Value)
			if _ecbef != nil {
				return _ecbef
			}
			_baaae.EndDateAttr = &_cbaac
			continue
		}
		if _fcffff.Name.Local == "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_debad, _fgfebd := _a.ParseFloat(_fcffff.Value, 64)
			if _fgfebd != nil {
				return _fgfebd
			}
			_baaae.GroupIntervalAttr = &_debad
			continue
		}
	}
	for {
		_caadg, _gdbcbb := d.Token()
		if _gdbcbb != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072\u003a\u0020%\u0073", _gdbcbb)
		}
		if _aaeb, _dgbba := _caadg.(_gd.EndElement); _dgbba && _aaeb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_DataRef struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

type CT_Connections struct {

	// Connection
	Connection []*CT_Connection
}

func NewCT_ExternalBook() *CT_ExternalBook { _bdbgc := &CT_ExternalBook{}; return _bdbgc }

type CT_FontFamily struct{ ValAttr int64 }

func (_cfaag *CT_MemberProperties) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cfaag.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cfaag.CountAttr)})
	}
	e.EncodeToken(start)
	_fbedc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003am\u0070"}}
	for _, _eeed := range _cfaag.Mp {
		e.EncodeElement(_eeed, _fbedc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalSheetDataSet struct {

	// External Sheet Data Set
	SheetData []*CT_ExternalSheetData
}

type CT_Dialogsheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Dialog Sheet Views
	SheetViews *CT_SheetViews

	// Dialog Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header & Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF
	OleObjects      *CT_OleObjects
	Controls        *CT_Controls

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fgccaa *ST_PhoneticType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_fgccaa = 0
	case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_fgccaa = 1
	case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_fgccaa = 2
	case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_fgccaa = 3
	case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
		*_fgccaa = 4
	}
	return nil
}

func NewCT_OleItems() *CT_OleItems { _fffcg := &CT_OleItems{}; return _fffcg }

func (_cebfbd *CT_ReviewedRevisions) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ceffb := range start.Attr {
		if _ceffb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aadaa, _degaeg := _a.ParseUint(_ceffb.Value, 10, 32)
			if _degaeg != nil {
				return _degaeg
			}
			_aeacf := uint32(_aadaa)
			_cebfbd.CountAttr = &_aeacf
			continue
		}
	}
_dbfgbb:
	for {
		_gbdfad, _bdfad := d.Token()
		if _bdfad != nil {
			return _bdfad
		}
		switch _beeag := _gbdfad.(type) {
		case _gd.StartElement:
			switch _beeag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}:
				_dcec := NewCT_Reviewed()
				if _agdfc := d.DecodeElement(_dcec, &_beeag); _agdfc != nil {
					return _agdfc
				}
				_cebfbd.Reviewed = append(_cebfbd.Reviewed, _dcec)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _beeag.Name)
				if _egdegf := d.Skip(); _egdegf != nil {
					return _egdegf
				}
			}
		case _gd.EndElement:
			break _dbfgbb
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_ggdb *CT_Connection) ValidateWithPath(path string) error {
	if _gded := _ggdb.CredentialsAttr.ValidateWithPath(path + "\u002f\u0043r\u0065\u0064\u0065n\u0074\u0069\u0061\u006c\u0073\u0041\u0074\u0074\u0072"); _gded != nil {
		return _gded
	}
	if _ggdb.DbPr != nil {
		if _dabd := _ggdb.DbPr.ValidateWithPath(path + "\u002f\u0044\u0062P\u0072"); _dabd != nil {
			return _dabd
		}
	}
	if _ggdb.OlapPr != nil {
		if _ebdef := _ggdb.OlapPr.ValidateWithPath(path + "\u002fO\u006c\u0061\u0070\u0050\u0072"); _ebdef != nil {
			return _ebdef
		}
	}
	if _ggdb.WebPr != nil {
		if _eeafd := _ggdb.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _eeafd != nil {
			return _eeafd
		}
	}
	if _ggdb.TextPr != nil {
		if _aeeec := _ggdb.TextPr.ValidateWithPath(path + "\u002fT\u0065\u0078\u0074\u0050\u0072"); _aeeec != nil {
			return _aeeec
		}
	}
	if _ggdb.Parameters != nil {
		if _ccbcb := _ggdb.Parameters.ValidateWithPath(path + "/\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"); _ccbcb != nil {
			return _ccbcb
		}
	}
	if _ggdb.ExtLst != nil {
		if _egdab := _ggdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egdab != nil {
			return _egdab
		}
	}
	return nil
}

// Validate validates the CT_ServerFormat and its children
func (_baadcf *CT_ServerFormat) Validate() error {
	return _baadcf.ValidateWithPath("\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074")
}

const (
	ST_PivotAreaTypeUnset    ST_PivotAreaType = 0
	ST_PivotAreaTypeNone     ST_PivotAreaType = 1
	ST_PivotAreaTypeNormal   ST_PivotAreaType = 2
	ST_PivotAreaTypeData     ST_PivotAreaType = 3
	ST_PivotAreaTypeAll      ST_PivotAreaType = 4
	ST_PivotAreaTypeOrigin   ST_PivotAreaType = 5
	ST_PivotAreaTypeButton   ST_PivotAreaType = 6
	ST_PivotAreaTypeTopEnd   ST_PivotAreaType = 7
	ST_PivotAreaTypeTopRight ST_PivotAreaType = 8
)

func (_gbcac *CT_PivotFilter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gbcac.TypeAttr = ST_PivotFilterType(1)
	_gbcac.AutoFilter = NewCT_AutoFilter()
	for _, _agfe := range start.Attr {
		if _agfe.Name.Local == "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064" {
			_bfcbg, _bgdgc := _a.ParseUint(_agfe.Value, 10, 32)
			if _bgdgc != nil {
				return _bgdgc
			}
			_edebg := uint32(_bfcbg)
			_gbcac.IMeasureFldAttr = &_edebg
			continue
		}
		if _agfe.Name.Local == "\u006d\u0070\u0046l\u0064" {
			_bdbc, _bdbea := _a.ParseUint(_agfe.Value, 10, 32)
			if _bdbea != nil {
				return _bdbea
			}
			_cgff := uint32(_bdbc)
			_gbcac.MpFldAttr = &_cgff
			continue
		}
		if _agfe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gbcac.TypeAttr.UnmarshalXMLAttr(_agfe)
			continue
		}
		if _agfe.Name.Local == "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r" {
			_cbdd, _abdbbc := _a.ParseInt(_agfe.Value, 10, 32)
			if _abdbbc != nil {
				return _abdbbc
			}
			_fafge := int32(_cbdd)
			_gbcac.EvalOrderAttr = &_fafge
			continue
		}
		if _agfe.Name.Local == "\u0069\u0064" {
			_babf, _ecbfe := _a.ParseUint(_agfe.Value, 10, 32)
			if _ecbfe != nil {
				return _ecbfe
			}
			_gbcac.IdAttr = uint32(_babf)
			continue
		}
		if _agfe.Name.Local == "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072" {
			_dfdce, _bdad := _a.ParseUint(_agfe.Value, 10, 32)
			if _bdad != nil {
				return _bdad
			}
			_befcagg := uint32(_dfdce)
			_gbcac.IMeasureHierAttr = &_befcagg
			continue
		}
		if _agfe.Name.Local == "\u0066\u006c\u0064" {
			_gggab, _cgbdf := _a.ParseUint(_agfe.Value, 10, 32)
			if _cgbdf != nil {
				return _cgbdf
			}
			_gbcac.FldAttr = uint32(_gggab)
			continue
		}
		if _agfe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cgbfb, _dggbd := _agfe.Value, error(nil)
			if _dggbd != nil {
				return _dggbd
			}
			_gbcac.NameAttr = &_cgbfb
			continue
		}
		if _agfe.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_fbffg, _ecddc := _agfe.Value, error(nil)
			if _ecddc != nil {
				return _ecddc
			}
			_gbcac.DescriptionAttr = &_fbffg
			continue
		}
		if _agfe.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031" {
			_bccbb, _bebdf := _agfe.Value, error(nil)
			if _bebdf != nil {
				return _bebdf
			}
			_gbcac.StringValue1Attr = &_bccbb
			continue
		}
		if _agfe.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032" {
			_egfdfe, _bbegf := _agfe.Value, error(nil)
			if _bbegf != nil {
				return _bbegf
			}
			_gbcac.StringValue2Attr = &_egfdfe
			continue
		}
	}
_ffgfbd:
	for {
		_aggbd, _fccfbc := d.Token()
		if _fccfbc != nil {
			return _fccfbc
		}
		switch _fccad := _aggbd.(type) {
		case _gd.StartElement:
			switch _fccad.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				if _afedb := d.DecodeElement(_gbcac.AutoFilter, &_fccad); _afedb != nil {
					return _afedb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbcac.ExtLst = NewCT_ExtensionList()
				if _gdbcb := d.DecodeElement(_gbcac.ExtLst, &_fccad); _gdbcb != nil {
					return _gdbcb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069l\u0074e\u0072\u0020\u0025\u0076", _fccad.Name)
				if _cafada := d.Skip(); _cafada != nil {
					return _cafada
				}
			}
		case _gd.EndElement:
			break _ffgfbd
		case _gd.CharData:
		}
	}
	return nil
}

func (_gebee *CT_SheetCalcPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bcggd := range start.Attr {
		if _bcggd.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_fabbd, _decdcb := _a.ParseBool(_bcggd.Value)
			if _decdcb != nil {
				return _decdcb
			}
			_gebee.FullCalcOnLoadAttr = &_fabbd
			continue
		}
	}
	for {
		_gbefe, _cdgffa := d.Token()
		if _cdgffa != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072:\u0020\u0025\u0073", _cdgffa)
		}
		if _agaef, _geffb := _gbefe.(_gd.EndElement); _geffb && _agaef.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Pages and its children
func (_bcecb *CT_Pages) Validate() error {
	return _bcecb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073")
}

func (_dbafd ST_RevisionAction) ValidateWithPath(path string) error {
	switch _dbafd {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbafd))
	}
	return nil
}

func (_efcca *CT_FileSharing) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbcg := range start.Attr {
		if _bbcg.Name.Local == "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064" {
			_bbedf, _fdcb := _a.ParseBool(_bbcg.Value)
			if _fdcb != nil {
				return _fdcb
			}
			_efcca.ReadOnlyRecommendedAttr = &_bbedf
			continue
		}
		if _bbcg.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_cabeg, _eagec := _bbcg.Value, error(nil)
			if _eagec != nil {
				return _eagec
			}
			_efcca.UserNameAttr = &_cabeg
			continue
		}
		if _bbcg.Name.Local == "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_bgab, _afade := _bbcg.Value, error(nil)
			if _afade != nil {
				return _afade
			}
			_efcca.ReservationPasswordAttr = &_bgab
			continue
		}
		if _bbcg.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_beabc, _edcec := _bbcg.Value, error(nil)
			if _edcec != nil {
				return _edcec
			}
			_efcca.AlgorithmNameAttr = &_beabc
			continue
		}
		if _bbcg.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_dgcce, _cggcc := _bbcg.Value, error(nil)
			if _cggcc != nil {
				return _cggcc
			}
			_efcca.HashValueAttr = &_dgcce
			continue
		}
		if _bbcg.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_daadf, _dgagc := _bbcg.Value, error(nil)
			if _dgagc != nil {
				return _dgagc
			}
			_efcca.SaltValueAttr = &_daadf
			continue
		}
		if _bbcg.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_cdgda, _gdag := _a.ParseUint(_bbcg.Value, 10, 32)
			if _gdag != nil {
				return _gdag
			}
			_dgfcf := uint32(_cdgda)
			_efcca.SpinCountAttr = &_dgfcf
			continue
		}
	}
	for {
		_eefcg, _fgdcd := d.Token()
		if _fgdcd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067:\u0020\u0025\u0073", _fgdcd)
		}
		if _bbgac, _ecfce := _eefcg.(_gd.EndElement); _ecfce && _bbgac.Name == start.Name {
			break
		}
	}
	return nil
}

func (_deffga *ST_PhoneticType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cfcdeg, _beddg := d.Token()
	if _beddg != nil {
		return _beddg
	}
	if _gaaaeg, _bfdaf := _cfcdeg.(_gd.EndElement); _bfdaf && _gaaaeg.Name == start.Name {
		*_deffga = 1
		return nil
	}
	if _dbecb, _ceaadd := _cfcdeg.(_gd.CharData); !_ceaadd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfcdeg)
	} else {
		switch string(_dbecb) {
		case "":
			*_deffga = 0
		case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_deffga = 1
		case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_deffga = 2
		case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_deffga = 3
		case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
			*_deffga = 4
		}
	}
	_cfcdeg, _beddg = d.Token()
	if _beddg != nil {
		return _beddg
	}
	if _bagdf, _abaadf := _cfcdeg.(_gd.EndElement); _abaadf && _bagdf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfcdeg)
}

// Validate validates the CT_DdeValues and its children
func (_bfce *CT_DdeValues) Validate() error {
	return _bfce.ValidateWithPath("\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073")
}

func (_cgefc *CT_RPrElt) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_ddce:
	for {
		_gcaeff, _feaae := d.Token()
		if _feaae != nil {
			return _feaae
		}
		switch _ebcad := _gcaeff.(type) {
		case _gd.StartElement:
			switch _ebcad.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}:
				_cgefc.RFont = NewCT_FontName()
				if _gaffg := d.DecodeElement(_cgefc.RFont, &_ebcad); _gaffg != nil {
					return _gaffg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_cgefc.Charset = NewCT_IntProperty()
				if _gcbdg := d.DecodeElement(_cgefc.Charset, &_ebcad); _gcbdg != nil {
					return _gcbdg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_cgefc.Family = NewCT_IntProperty()
				if _begfb := d.DecodeElement(_cgefc.Family, &_ebcad); _begfb != nil {
					return _begfb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_cgefc.B = NewCT_BooleanProperty()
				if _afagg := d.DecodeElement(_cgefc.B, &_ebcad); _afagg != nil {
					return _afagg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cgefc.I = NewCT_BooleanProperty()
				if _bfcac := d.DecodeElement(_cgefc.I, &_ebcad); _bfcac != nil {
					return _bfcac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_cgefc.Strike = NewCT_BooleanProperty()
				if _faafd := d.DecodeElement(_cgefc.Strike, &_ebcad); _faafd != nil {
					return _faafd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_cgefc.Outline = NewCT_BooleanProperty()
				if _gdceb := d.DecodeElement(_cgefc.Outline, &_ebcad); _gdceb != nil {
					return _gdceb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_cgefc.Shadow = NewCT_BooleanProperty()
				if _bfdcg := d.DecodeElement(_cgefc.Shadow, &_ebcad); _bfdcg != nil {
					return _bfdcg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_cgefc.Condense = NewCT_BooleanProperty()
				if _ddcffg := d.DecodeElement(_cgefc.Condense, &_ebcad); _ddcffg != nil {
					return _ddcffg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_cgefc.Extend = NewCT_BooleanProperty()
				if _cfeccc := d.DecodeElement(_cgefc.Extend, &_ebcad); _cfeccc != nil {
					return _cfeccc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cgefc.Color = NewCT_Color()
				if _ffecd := d.DecodeElement(_cgefc.Color, &_ebcad); _ffecd != nil {
					return _ffecd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_cgefc.Sz = NewCT_FontSize()
				if _cbfdfg := d.DecodeElement(_cgefc.Sz, &_ebcad); _cbfdfg != nil {
					return _cbfdfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_cgefc.U = NewCT_UnderlineProperty()
				if _eabca := d.DecodeElement(_cgefc.U, &_ebcad); _eabca != nil {
					return _eabca
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_cgefc.VertAlign = NewCT_VerticalAlignFontProperty()
				if _bcbcd := d.DecodeElement(_cgefc.VertAlign, &_ebcad); _bcbcd != nil {
					return _bcbcd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_cgefc.Scheme = NewCT_FontScheme()
				if _aeddf := d.DecodeElement(_cgefc.Scheme, &_ebcad); _aeddf != nil {
					return _aeddf
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0050\u0072E\u006c\u0074 \u0025\u0076", _ebcad.Name)
				if _afcfag := d.Skip(); _afcfag != nil {
					return _afcfag
				}
			}
		case _gd.EndElement:
			break _ddce
		case _gd.CharData:
		}
	}
	return nil
}

func (_edcg *CT_DataValidation) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _edcg.TypeAttr != ST_DataValidationTypeUnset {
		_egcb, _cfbca := _edcg.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _cfbca != nil {
			return _cfbca
		}
		start.Attr = append(start.Attr, _egcb)
	}
	if _edcg.ErrorStyleAttr != ST_DataValidationErrorStyleUnset {
		_gcfee, _afaa := _edcg.ErrorStyleAttr.MarshalXMLAttr(_gd.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065"})
		if _afaa != nil {
			return _afaa
		}
		start.Attr = append(start.Attr, _gcfee)
	}
	if _edcg.ImeModeAttr != ST_DataValidationImeModeUnset {
		_cfaed, _dabe := _edcg.ImeModeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0069m\u0065\u004d\u006f\u0064\u0065"})
		if _dabe != nil {
			return _dabe
		}
		start.Attr = append(start.Attr, _cfaed)
	}
	if _edcg.OperatorAttr != ST_DataValidationOperatorUnset {
		_adgg, _dbcg := _edcg.OperatorAttr.MarshalXMLAttr(_gd.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _dbcg != nil {
			return _dbcg
		}
		start.Attr = append(start.Attr, _adgg)
	}
	if _edcg.AllowBlankAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edcg.AllowBlankAttr))})
	}
	if _edcg.ShowDropDownAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edcg.ShowDropDownAttr))})
	}
	if _edcg.ShowInputMessageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edcg.ShowInputMessageAttr))})
	}
	if _edcg.ShowErrorMessageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_edcg.ShowErrorMessageAttr))})
	}
	if _edcg.ErrorTitleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_edcg.ErrorTitleAttr)})
	}
	if _edcg.ErrorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0072\u0072o\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_edcg.ErrorAttr)})
	}
	if _edcg.PromptTitleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_edcg.PromptTitleAttr)})
	}
	if _edcg.PromptAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_edcg.PromptAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _b.Sprintf("\u0025\u0076", _edcg.SqrefAttr)})
	e.EncodeToken(start)
	if _edcg.Formula1 != nil {
		_cgbdg := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}}
		_e.AddPreserveSpaceAttr(&_cgbdg, *_edcg.Formula1)
		e.EncodeElement(_edcg.Formula1, _cgbdg)
	}
	if _edcg.Formula2 != nil {
		_aacd := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}}
		_e.AddPreserveSpaceAttr(&_aacd, *_edcg.Formula2)
		e.EncodeElement(_edcg.Formula2, _aacd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_CalcPr struct {

	// Calculation Id
	CalcIdAttr *uint32

	// Calculation Mode
	CalcModeAttr ST_CalcMode

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool

	// Reference Mode
	RefModeAttr ST_RefMode

	// Calculation Iteration
	IterateAttr *bool

	// Iteration Count
	IterateCountAttr *uint32

	// Iterative Calculation Delta
	IterateDeltaAttr *float64

	// Full Precision Calculation
	FullPrecisionAttr *bool

	// Calc Completed
	CalcCompletedAttr *bool

	// Calculate On Save
	CalcOnSaveAttr *bool

	// Concurrent Calculations
	ConcurrentCalcAttr *bool

	// Concurrent Thread Manual Count
	ConcurrentManualCountAttr *uint32

	// Force Full Calculation
	ForceFullCalcAttr *bool
}

func (_ebffge *CT_RevisionHeader) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ebffge.GuidAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ebffge.DateTimeAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ebffge.MaxSheetIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ebffge.UserNameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ebffge.IdAttr)})
	if _ebffge.MinRIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e\u0052\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ebffge.MinRIdAttr)})
	}
	if _ebffge.MaxRIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0078\u0052\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ebffge.MaxRIdAttr)})
	}
	e.EncodeToken(start)
	_bebga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}}
	e.EncodeElement(_ebffge.SheetIdMap, _bebga)
	if _ebffge.ReviewedList != nil {
		_cbcda := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ar\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}}
		e.EncodeElement(_ebffge.ReviewedList, _cbcda)
	}
	if _ebffge.ExtLst != nil {
		_eebad := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ebffge.ExtLst, _eebad)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_IgnoredError and its children
func (_deff *CT_IgnoredError) Validate() error {
	return _deff.ValidateWithPath("\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072")
}

func (_bffca *CT_WorkbookPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _adgbd := range start.Attr {
		if _adgbd.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_ccfdba, _gadcg := _adgbd.Value, error(nil)
			if _gadcg != nil {
				return _gadcg
			}
			_bffca.CodeNameAttr = &_ccfdba
			continue
		}
		if _adgbd.Name.Local == "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034" {
			_bcgdg, _fddc := _a.ParseBool(_adgbd.Value)
			if _fddc != nil {
				return _fddc
			}
			_bffca.Date1904Attr = &_bcgdg
			continue
		}
		if _adgbd.Name.Local == "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074" {
			_ggcefd, _cbeefb := _a.ParseBool(_adgbd.Value)
			if _cbeefb != nil {
				return _cbeefb
			}
			_bffca.HidePivotFieldListAttr = &_ggcefd
			continue
		}
		if _adgbd.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073" {
			_afgcc, _cceca := _a.ParseBool(_adgbd.Value)
			if _cceca != nil {
				return _cceca
			}
			_bffca.ShowBorderUnselectedTablesAttr = &_afgcc
			continue
		}
		if _adgbd.Name.Local == "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072" {
			_bgcdeg, _acceg := _a.ParseBool(_adgbd.Value)
			if _acceg != nil {
				return _acceg
			}
			_bffca.ShowPivotChartFilterAttr = &_bgcdeg
			continue
		}
		if _adgbd.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073" {
			_abbca, _cfabbb := _a.ParseBool(_adgbd.Value)
			if _cfabbb != nil {
				return _cfabbb
			}
			_bffca.PromptedSolutionsAttr = &_abbca
			continue
		}
		if _adgbd.Name.Local == "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065" {
			_ebgaca, _fceebe := _a.ParseBool(_adgbd.Value)
			if _fceebe != nil {
				return _fceebe
			}
			_bffca.BackupFileAttr = &_ebgaca
			continue
		}
		if _adgbd.Name.Local == "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073" {
			_gdfceac, _bdacf := _a.ParseBool(_adgbd.Value)
			if _bdacf != nil {
				return _bdacf
			}
			_bffca.SaveExternalLinkValuesAttr = &_gdfceac
			continue
		}
		if _adgbd.Name.Local == "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073" {
			_bffca.UpdateLinksAttr.UnmarshalXMLAttr(_adgbd)
			continue
		}
		if _adgbd.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_bffca.ShowObjectsAttr.UnmarshalXMLAttr(_adgbd)
			continue
		}
		if _adgbd.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079" {
			_fbcfeg, _fdagfb := _a.ParseBool(_adgbd.Value)
			if _fdagfb != nil {
				return _fdagfb
			}
			_bffca.FilterPrivacyAttr = &_fbcfeg
			continue
		}
		if _adgbd.Name.Local == "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e" {
			_aegbb, _cbfaca := _a.ParseBool(_adgbd.Value)
			if _cbfaca != nil {
				return _cbfaca
			}
			_bffca.ShowInkAnnotationAttr = &_aegbb
			continue
		}
		if _adgbd.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079" {
			_dgcdf, _faafec := _a.ParseBool(_adgbd.Value)
			if _faafec != nil {
				return _faafec
			}
			_bffca.AllowRefreshQueryAttr = &_dgcdf
			continue
		}
		if _adgbd.Name.Local == "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073" {
			_ecfcgb, _fegea := _a.ParseBool(_adgbd.Value)
			if _fegea != nil {
				return _fegea
			}
			_bffca.PublishItemsAttr = &_ecfcgb
			continue
		}
		if _adgbd.Name.Local == "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079" {
			_defee, _efcba := _a.ParseBool(_adgbd.Value)
			if _efcba != nil {
				return _efcba
			}
			_bffca.CheckCompatibilityAttr = &_defee
			continue
		}
		if _adgbd.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_gcfeda, _bebad := _a.ParseBool(_adgbd.Value)
			if _bebad != nil {
				return _bebad
			}
			_bffca.AutoCompressPicturesAttr = &_gcfeda
			continue
		}
		if _adgbd.Name.Local == "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073" {
			_gbgda, _facfec := _a.ParseBool(_adgbd.Value)
			if _facfec != nil {
				return _facfec
			}
			_bffca.RefreshAllConnectionsAttr = &_gbgda
			continue
		}
		if _adgbd.Name.Local == "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_caded, _gffgea := _a.ParseUint(_adgbd.Value, 10, 32)
			if _gffgea != nil {
				return _gffgea
			}
			_cabbgf := uint32(_caded)
			_bffca.DefaultThemeVersionAttr = &_cabbgf
			continue
		}
	}
	for {
		_edec, _cbgaf := d.Token()
		if _cbgaf != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057o\u0072k\u0062o\u006f\u006b\u0050\u0072\u003a\u0020\u0025s", _cbgaf)
		}
		if _defgag, _cbffc := _edec.(_gd.EndElement); _cbffc && _defgag.Name == start.Name {
			break
		}
	}
	return nil
}

func (_abddf *CT_SingleXmlCells) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_fdgbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0073\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}}
	for _, _caccd := range _abddf.SingleXmlCell {
		e.EncodeElement(_caccd, _fdgbb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_acefa *CT_Consolidation) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_acefa.RangeSets = NewCT_RangeSets()
	for _, _bbffd := range start.Attr {
		if _bbffd.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065" {
			_cagbd, _cebb := _a.ParseBool(_bbffd.Value)
			if _cebb != nil {
				return _cebb
			}
			_acefa.AutoPageAttr = &_cagbd
			continue
		}
	}
_efag:
	for {
		_egcaf, _bcdfc := d.Token()
		if _bcdfc != nil {
			return _bcdfc
		}
		switch _efbbf := _egcaf.(type) {
		case _gd.StartElement:
			switch _efbbf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}:
				_acefa.Pages = NewCT_Pages()
				if _dafe := d.DecodeElement(_acefa.Pages, &_efbbf); _dafe != nil {
					return _dafe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}:
				if _cgde := d.DecodeElement(_acefa.RangeSets, &_efbbf); _cgde != nil {
					return _cgde
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025v", _efbbf.Name)
				if _acdc := d.Skip(); _acdc != nil {
					return _acdc
				}
			}
		case _gd.EndElement:
			break _efag
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedMember and its children, prefixing error messages with path
func (_fdeb *CT_CalculatedMember) ValidateWithPath(path string) error {
	if _fdeb.ExtLst != nil {
		if _dabf := _fdeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dabf != nil {
			return _dabf
		}
	}
	return nil
}

func (_eadgb *CT_VolType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_eadgb.TypeAttr = ST_VolDepType(1)
	for _, _cgcccf := range start.Attr {
		if _cgcccf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_eadgb.TypeAttr.UnmarshalXMLAttr(_cgcccf)
			continue
		}
	}
_cccgf:
	for {
		_bdeaf, _adedce := d.Token()
		if _adedce != nil {
			return _adedce
		}
		switch _gabbf := _bdeaf.(type) {
		case _gd.StartElement:
			switch _gabbf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}:
				_badfa := NewCT_VolMain()
				if _gcfff := d.DecodeElement(_badfa, &_gabbf); _gcfff != nil {
					return _gcfff
				}
				_eadgb.Main = append(_eadgb.Main, _badfa)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _gabbf.Name)
				if _egdgde := d.Skip(); _egdgde != nil {
					return _egdgde
				}
			}
		case _gd.EndElement:
			break _cccgf
		case _gd.CharData:
		}
	}
	return nil
}

func (_dbeda *ST_WebSourceType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ffedc, _bcdcff := d.Token()
	if _bcdcff != nil {
		return _bcdcff
	}
	if _geeecg, _dcffa := _ffedc.(_gd.EndElement); _dcffa && _geeecg.Name == start.Name {
		*_dbeda = 1
		return nil
	}
	if _abecef, _efgddd := _ffedc.(_gd.CharData); !_efgddd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffedc)
	} else {
		switch string(_abecef) {
		case "":
			*_dbeda = 0
		case "\u0073\u0068\u0065e\u0074":
			*_dbeda = 1
		case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
			*_dbeda = 2
		case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
			*_dbeda = 3
		case "\u0072\u0061\u006eg\u0065":
			*_dbeda = 4
		case "\u0063\u0068\u0061r\u0074":
			*_dbeda = 5
		case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
			*_dbeda = 6
		case "\u0071\u0075\u0065r\u0079":
			*_dbeda = 7
		case "\u006c\u0061\u0062e\u006c":
			*_dbeda = 8
		}
	}
	_ffedc, _bcdcff = d.Token()
	if _bcdcff != nil {
		return _bcdcff
	}
	if _bceec, _bdbgf := _ffedc.(_gd.EndElement); _bdbgf && _bceec.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffedc)
}

// ValidateWithPath validates the CT_GroupItems and its children, prefixing error messages with path
func (_eaga *CT_GroupItems) ValidateWithPath(path string) error {
	for _eeabdb, _dbdea := range _eaga.M {
		if _gbadg := _dbdea.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _eeabdb)); _gbadg != nil {
			return _gbadg
		}
	}
	for _deefe, _afbfg := range _eaga.N {
		if _aageb := _afbfg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _deefe)); _aageb != nil {
			return _aageb
		}
	}
	for _eeefa, _edfea := range _eaga.B {
		if _bfbbbc := _edfea.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _eeefa)); _bfbbbc != nil {
			return _bfbbbc
		}
	}
	for _cabdg, _bffcf := range _eaga.E {
		if _gbfe := _bffcf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _cabdg)); _gbfe != nil {
			return _gbfe
		}
	}
	for _eeged, _ageba := range _eaga.S {
		if _acffa := _ageba.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _eeged)); _acffa != nil {
			return _acffa
		}
	}
	for _cgda, _fcbcg := range _eaga.D {
		if _gecea := _fcbcg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _cgda)); _gecea != nil {
			return _gecea
		}
	}
	return nil
}

func (_affac ST_PhoneticType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_affac.String(), start)
}

// Validate validates the CT_MdxMetadata and its children
func (_gbgfb *CT_MdxMetadata) Validate() error {
	return _gbgfb.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}

// ValidateWithPath validates the Comments and its children, prefixing error messages with path
func (_dddcb *Comments) ValidateWithPath(path string) error {
	if _agaefb := _dddcb.CT_Comments.ValidateWithPath(path); _agaefb != nil {
		return _agaefb
	}
	return nil
}

type CT_ServerFormats struct {

	// Format Count
	CountAttr *uint32

	// Server Format
	ServerFormat []*CT_ServerFormat
}

func (_bgge *CT_ExternalSheetNames) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_ffdfc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065"}}
	for _, _gdeff := range _bgge.SheetName {
		e.EncodeElement(_gdeff, _ffdfc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_DdeValue struct {

	// DDE Value Type
	TAttr ST_DdeValueType

	// DDE Link Value
	Val string
}

func (_aag *CT_Break) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aag.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_aag.IdAttr)})
	}
	if _aag.MinAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_aag.MinAttr)})
	}
	if _aag.MaxAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0078"}, Value: _b.Sprintf("\u0025\u0076", *_aag.MaxAttr)})
	}
	if _aag.ManAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aag.ManAttr))})
	}
	if _aag.PtAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aag.PtAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_febeg *CT_FutureMetadata) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _faca := range start.Attr {
		if _faca.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dfaa, _faeaa := _faca.Value, error(nil)
			if _faeaa != nil {
				return _faeaa
			}
			_febeg.NameAttr = _dfaa
			continue
		}
		if _faca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdaec, _ffefd := _a.ParseUint(_faca.Value, 10, 32)
			if _ffefd != nil {
				return _ffefd
			}
			_agcgf := uint32(_fdaec)
			_febeg.CountAttr = &_agcgf
			continue
		}
	}
_cdbee:
	for {
		_bbeeg, _bfbbg := d.Token()
		if _bfbbg != nil {
			return _bfbbg
		}
		switch _fdeca := _bbeeg.(type) {
		case _gd.StartElement:
			switch _fdeca.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_ecgac := NewCT_FutureMetadataBlock()
				if _dfbf := d.DecodeElement(_ecgac, &_fdeca); _dfbf != nil {
					return _dfbf
				}
				_febeg.Bk = append(_febeg.Bk, _ecgac)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_febeg.ExtLst = NewCT_ExtensionList()
				if _ddecfa := d.DecodeElement(_febeg.ExtLst, &_fdeca); _ddecfa != nil {
					return _ddecfa
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _fdeca.Name)
				if _bfag := d.Skip(); _bfag != nil {
					return _bfag
				}
			}
		case _gd.EndElement:
			break _cdbee
		case _gd.CharData:
		}
	}
	return nil
}

func (_badeb *ST_MdxFunctionType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bbcgbd, _cabcaa := d.Token()
	if _cabcaa != nil {
		return _cabcaa
	}
	if _cfbafb, _dafeb := _bbcgbd.(_gd.EndElement); _dafeb && _cfbafb.Name == start.Name {
		*_badeb = 1
		return nil
	}
	if _cbcff, _ddbdcc := _bbcgbd.(_gd.CharData); !_ddbdcc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbcgbd)
	} else {
		switch string(_cbcff) {
		case "":
			*_badeb = 0
		case "\u006d":
			*_badeb = 1
		case "\u0076":
			*_badeb = 2
		case "\u0073":
			*_badeb = 3
		case "\u0063":
			*_badeb = 4
		case "\u0072":
			*_badeb = 5
		case "\u0070":
			*_badeb = 6
		case "\u006b":
			*_badeb = 7
		}
	}
	_bbcgbd, _cabcaa = d.Token()
	if _cabcaa != nil {
		return _cabcaa
	}
	if _afdgdb, _cgacbf := _bbcgbd.(_gd.EndElement); _cgacbf && _afdgdb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbcgbd)
}

type CT_Error struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls *CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

func (_afaab *CT_Schema) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0049\u0044"}, Value: _b.Sprintf("\u0025\u0076", _afaab.IDAttr)})
	if _afaab.SchemaRefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f"}, Value: _b.Sprintf("\u0025\u0076", *_afaab.SchemaRefAttr)})
	}
	if _afaab.NamespaceAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e"}, Value: _b.Sprintf("\u0025\u0076", *_afaab.NamespaceAttr)})
	}
	if _afaab.SchemaLanguageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_afaab.SchemaLanguageAttr)})
	}
	e.EncodeToken(start)
	if _afaab.Any != nil {
		_afaab.Any.MarshalXML(e, _gd.StartElement{})
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_febafgc *ST_MdxFunctionType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_febafgc = 0
	case "\u006d":
		*_febafgc = 1
	case "\u0076":
		*_febafgc = 2
	case "\u0073":
		*_febafgc = 3
	case "\u0063":
		*_febafgc = 4
	case "\u0072":
		*_febafgc = 5
	case "\u0070":
		*_febafgc = 6
	case "\u006b":
		*_febafgc = 7
	}
	return nil
}

func (_dabge ST_ShowDataAs) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dgdba := _gd.Attr{}
	_dgdba.Name = name
	switch _dabge {
	case ST_ShowDataAsUnset:
		_dgdba.Value = ""
	case ST_ShowDataAsNormal:
		_dgdba.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_ShowDataAsDifference:
		_dgdba.Value = "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case ST_ShowDataAsPercent:
		_dgdba.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_ShowDataAsPercentDiff:
		_dgdba.Value = "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case ST_ShowDataAsRunTotal:
		_dgdba.Value = "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsPercentOfRow:
		_dgdba.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case ST_ShowDataAsPercentOfCol:
		_dgdba.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case ST_ShowDataAsPercentOfTotal:
		_dgdba.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsIndex:
		_dgdba.Value = "\u0069\u006e\u0064e\u0078"
	}
	return _dgdba, nil
}

func (_eafaa ST_HorizontalAlignment) String() string {
	switch _eafaa {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0069\u0067h\u0074"
	case 5:
		return "\u0066\u0069\u006c\u006c"
	case 6:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 7:
		return "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case 8:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

// Validate validates the CT_WorkbookPr and its children
func (_badde *CT_WorkbookPr) Validate() error {
	return _badde.ValidateWithPath("\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072")
}

type ST_VolValueType byte

func (_eefcd ST_GradientType) ValidateWithPath(path string) error {
	switch _eefcd {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eefcd))
	}
	return nil
}

type ST_FieldSortType byte

func (_bcbefb ST_DateTimeGrouping) Validate() error { return _bcbefb.ValidateWithPath("") }

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_aagec *EG_ExtensionList) ValidateWithPath(path string) error {
	for _ccfgf, _beede := range _aagec.Ext {
		if _fgdee := _beede.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _ccfgf)); _fgdee != nil {
			return _fgdee
		}
	}
	return nil
}

const (
	ST_DateTimeGroupingUnset  ST_DateTimeGrouping = 0
	ST_DateTimeGroupingYear   ST_DateTimeGrouping = 1
	ST_DateTimeGroupingMonth  ST_DateTimeGrouping = 2
	ST_DateTimeGroupingDay    ST_DateTimeGrouping = 3
	ST_DateTimeGroupingHour   ST_DateTimeGrouping = 4
	ST_DateTimeGroupingMinute ST_DateTimeGrouping = 5
	ST_DateTimeGroupingSecond ST_DateTimeGrouping = 6
)

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_beagcc *CT_Schema) ValidateWithPath(path string) error { return nil }

type CT_WorkbookPr struct {

	// Date 1904
	Date1904Attr *bool

	// Show Objects
	ShowObjectsAttr ST_Objects

	// Show Border Unselected Table
	ShowBorderUnselectedTablesAttr *bool

	// Filter Privacy
	FilterPrivacyAttr *bool

	// Prompted Solutions
	PromptedSolutionsAttr *bool

	// Show Ink Annotations
	ShowInkAnnotationAttr *bool

	// Create Backup File
	BackupFileAttr *bool

	// Save External Link Values
	SaveExternalLinkValuesAttr *bool

	// Update Links Behavior
	UpdateLinksAttr ST_UpdateLinks

	// Code Name
	CodeNameAttr *string

	// Hide Pivot Field List
	HidePivotFieldListAttr *bool

	// Show Pivot Chart Filter
	ShowPivotChartFilterAttr *bool

	// Allow Refresh Query
	AllowRefreshQueryAttr *bool

	// Publish Items
	PublishItemsAttr *bool

	// Check Compatibility On Save
	CheckCompatibilityAttr *bool

	// Auto Compress Pictures
	AutoCompressPicturesAttr *bool

	// Refresh all Connections on Open
	RefreshAllConnectionsAttr *bool

	// Default Theme Version
	DefaultThemeVersionAttr *uint32
}

// Validate validates the CT_FontSize and its children
func (_gafgfd *CT_FontSize) Validate() error {
	return _gafgfd.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065")
}

func (_ccfddb ST_VolValueType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_accde := _gd.Attr{}
	_accde.Name = name
	switch _ccfddb {
	case ST_VolValueTypeUnset:
		_accde.Value = ""
	case ST_VolValueTypeB:
		_accde.Value = "\u0062"
	case ST_VolValueTypeN:
		_accde.Value = "\u006e"
	case ST_VolValueTypeE:
		_accde.Value = "\u0065"
	case ST_VolValueTypeS:
		_accde.Value = "\u0073"
	}
	return _accde, nil
}

func (_fdacbc *CT_Metadata) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bgegbd:
	for {
		_eecdb, _efffd := d.Token()
		if _efffd != nil {
			return _efffd
		}
		switch _aadde := _eecdb.(type) {
		case _gd.StartElement:
			switch _aadde.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_fdacbc.MetadataTypes = NewCT_MetadataTypes()
				if _fcebg := d.DecodeElement(_fdacbc.MetadataTypes, &_aadde); _fcebg != nil {
					return _fcebg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_fdacbc.MetadataStrings = NewCT_MetadataStrings()
				if _fabce := d.DecodeElement(_fdacbc.MetadataStrings, &_aadde); _fabce != nil {
					return _fabce
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fdacbc.MdxMetadata = NewCT_MdxMetadata()
				if _badggb := d.DecodeElement(_fdacbc.MdxMetadata, &_aadde); _badggb != nil {
					return _badggb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_dedff := NewCT_FutureMetadata()
				if _bacefa := d.DecodeElement(_dedff, &_aadde); _bacefa != nil {
					return _bacefa
				}
				_fdacbc.FutureMetadata = append(_fdacbc.FutureMetadata, _dedff)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fdacbc.CellMetadata = NewCT_MetadataBlocks()
				if _bcdad := d.DecodeElement(_fdacbc.CellMetadata, &_aadde); _bcdad != nil {
					return _bcdad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fdacbc.ValueMetadata = NewCT_MetadataBlocks()
				if _cddcb := d.DecodeElement(_fdacbc.ValueMetadata, &_aadde); _cddcb != nil {
					return _cddcb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdacbc.ExtLst = NewCT_ExtensionList()
				if _eeeee := d.DecodeElement(_fdacbc.ExtLst, &_aadde); _eeeee != nil {
					return _eeeee
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _aadde.Name)
				if _ebdbc := d.Skip(); _ebdbc != nil {
					return _ebdbc
				}
			}
		case _gd.EndElement:
			break _bgegbd
		case _gd.CharData:
		}
	}
	return nil
}

const (
	ST_FontSchemeUnset ST_FontScheme = 0
	ST_FontSchemeNone  ST_FontScheme = 1
	ST_FontSchemeMajor ST_FontScheme = 2
	ST_FontSchemeMinor ST_FontScheme = 3
)

type CT_RowHierarchiesUsage struct {

	// Item Count
	CountAttr *uint32

	// Row OLAP Hierarchies
	RowHierarchyUsage []*CT_HierarchyUsage
}

type CT_OleItem struct {

	// Object Name
	NameAttr string

	// Icon
	IconAttr *bool

	// Advise
	AdviseAttr *bool

	// Object is an Image
	PreferPicAttr *bool
}

func (_dcdgc *CT_WorkbookPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dcdgc.Date1904Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.Date1904Attr))})
	}
	if _dcdgc.ShowObjectsAttr != ST_ObjectsUnset {
		_ggfbeg, _cbdgb := _dcdgc.ShowObjectsAttr.MarshalXMLAttr(_gd.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _cbdgb != nil {
			return _cbdgb
		}
		start.Attr = append(start.Attr, _ggfbeg)
	}
	if _dcdgc.ShowBorderUnselectedTablesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.ShowBorderUnselectedTablesAttr))})
	}
	if _dcdgc.FilterPrivacyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.FilterPrivacyAttr))})
	}
	if _dcdgc.PromptedSolutionsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.PromptedSolutionsAttr))})
	}
	if _dcdgc.ShowInkAnnotationAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.ShowInkAnnotationAttr))})
	}
	if _dcdgc.BackupFileAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.BackupFileAttr))})
	}
	if _dcdgc.SaveExternalLinkValuesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.SaveExternalLinkValuesAttr))})
	}
	if _dcdgc.UpdateLinksAttr != ST_UpdateLinksUnset {
		_ggdgbd, _ebbdge := _dcdgc.UpdateLinksAttr.MarshalXMLAttr(_gd.Name{Local: "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073"})
		if _ebbdge != nil {
			return _ebbdge
		}
		start.Attr = append(start.Attr, _ggdgbd)
	}
	if _dcdgc.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_dcdgc.CodeNameAttr)})
	}
	if _dcdgc.HidePivotFieldListAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.HidePivotFieldListAttr))})
	}
	if _dcdgc.ShowPivotChartFilterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.ShowPivotChartFilterAttr))})
	}
	if _dcdgc.AllowRefreshQueryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.AllowRefreshQueryAttr))})
	}
	if _dcdgc.PublishItemsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.PublishItemsAttr))})
	}
	if _dcdgc.CheckCompatibilityAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.CheckCompatibilityAttr))})
	}
	if _dcdgc.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.AutoCompressPicturesAttr))})
	}
	if _dcdgc.RefreshAllConnectionsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dcdgc.RefreshAllConnectionsAttr))})
	}
	if _dcdgc.DefaultThemeVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_dcdgc.DefaultThemeVersionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Members and its children, prefixing error messages with path
func (_dedbgb *CT_Members) ValidateWithPath(path string) error {
	for _bbfee, _adfea := range _dedbgb.Member {
		if _ecadc := _adfea.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _bbfee)); _ecadc != nil {
			return _ecadc
		}
	}
	return nil
}

func (_daeec ST_PrintError) String() string {
	switch _daeec {
	case 0:
		return ""
	case 1:
		return "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case 2:
		return "\u0062\u006c\u0061n\u006b"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u004e\u0041"
	}
	return ""
}

func (_bgacff *CT_SmartTagPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bgacff.EmbedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u006d\u0062e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgacff.EmbedAttr))})
	}
	if _bgacff.ShowAttr != ST_SmartTagShowUnset {
		_cdbbcd, _eggbcb := _bgacff.ShowAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0068\u006f\u0077"})
		if _eggbcb != nil {
			return _eggbcb
		}
		start.Attr = append(start.Attr, _cdbbcd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ecec *CT_MRUColors) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_acdeeb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _eefac := range _ecec.Color {
		e.EncodeElement(_eefac, _acdeeb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_VolTopicRef struct {

	// Reference
	RAttr string

	// Sheet Id
	SAttr uint32
}

type CT_CellAlignment struct {

	// Horizontal Alignment
	HorizontalAttr ST_HorizontalAlignment

	// Vertical Alignment
	VerticalAttr ST_VerticalAlignment

	// Text Rotation
	TextRotationAttr *uint8

	// Wrap Text
	WrapTextAttr *bool

	// Indent
	IndentAttr *uint32

	// Relative Indent
	RelativeIndentAttr *int32

	// Justify Last Line
	JustifyLastLineAttr *bool

	// Shrink To Fit
	ShrinkToFitAttr *bool

	// Reading Order
	ReadingOrderAttr *uint32
}

// ValidateWithPath validates the CT_TableParts and its children, prefixing error messages with path
func (_dcfdc *CT_TableParts) ValidateWithPath(path string) error {
	for _babbcg, _ebbfc := range _dcfdc.TablePart {
		if _dddgc := _ebbfc.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0074\u005b\u0025\u0064\u005d", path, _babbcg)); _dddgc != nil {
			return _dddgc
		}
	}
	return nil
}

func (_gcfcf *CT_CommentPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gcfcf.Anchor = NewCT_ObjectAnchor()
	for _, _gaece := range start.Attr {
		if _gaece.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_ccee, _ecgf := _gaece.Value, error(nil)
			if _ecgf != nil {
				return _ecgf
			}
			_gcfcf.AltTextAttr = &_ccee
			continue
		}
		if _gaece.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_faab, _edea := _a.ParseBool(_gaece.Value)
			if _edea != nil {
				return _edea
			}
			_gcfcf.DefaultSizeAttr = &_faab
			continue
		}
		if _gaece.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_bbgb, _acac := _a.ParseBool(_gaece.Value)
			if _acac != nil {
				return _acac
			}
			_gcfcf.PrintAttr = &_bbgb
			continue
		}
		if _gaece.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_fbea, _cbeed := _a.ParseBool(_gaece.Value)
			if _cbeed != nil {
				return _cbeed
			}
			_gcfcf.DisabledAttr = &_fbea
			continue
		}
		if _gaece.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_febe, _acefd := _a.ParseBool(_gaece.Value)
			if _acefd != nil {
				return _acefd
			}
			_gcfcf.AutoFillAttr = &_febe
			continue
		}
		if _gaece.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_bbee, _bfcd := _a.ParseBool(_gaece.Value)
			if _bfcd != nil {
				return _bfcd
			}
			_gcfcf.AutoLineAttr = &_bbee
			continue
		}
		if _gaece.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_eadce, _fbggc := _a.ParseBool(_gaece.Value)
			if _fbggc != nil {
				return _fbggc
			}
			_gcfcf.LockedAttr = &_eadce
			continue
		}
		if _gaece.Name.Local == "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e" {
			_gcfcf.TextHAlignAttr.UnmarshalXMLAttr(_gaece)
			continue
		}
		if _gaece.Name.Local == "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e" {
			_gcfcf.TextVAlignAttr.UnmarshalXMLAttr(_gaece)
			continue
		}
		if _gaece.Name.Local == "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074" {
			_cfbc, _bgega := _a.ParseBool(_gaece.Value)
			if _bgega != nil {
				return _bgega
			}
			_gcfcf.LockTextAttr = &_cfbc
			continue
		}
		if _gaece.Name.Local == "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X" {
			_aeec, _gecc := _a.ParseBool(_gaece.Value)
			if _gecc != nil {
				return _gecc
			}
			_gcfcf.JustLastXAttr = &_aeec
			continue
		}
		if _gaece.Name.Local == "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce" {
			_gacf, _agea := _a.ParseBool(_gaece.Value)
			if _agea != nil {
				return _agea
			}
			_gcfcf.AutoScaleAttr = &_gacf
			continue
		}
	}
_cceea:
	for {
		_acae, _cffg := d.Token()
		if _cffg != nil {
			return _cffg
		}
		switch _fdbf := _acae.(type) {
		case _gd.StartElement:
			switch _fdbf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _eabe := d.DecodeElement(_gcfcf.Anchor, &_fdbf); _eabe != nil {
					return _eabe
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006dm\u0065\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _fdbf.Name)
				if _agbca := d.Skip(); _agbca != nil {
					return _agbca
				}
			}
		case _gd.EndElement:
			break _cceea
		case _gd.CharData:
		}
	}
	return nil
}

func (_bffb *CT_ColorFilter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bffb.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bffb.DxfIdAttr)})
	}
	if _bffb.CellColorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bffb.CellColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_SortBy byte

type ST_Comments byte

func NewCT_ControlPr() *CT_ControlPr {
	_fgfe := &CT_ControlPr{}
	_fgfe.Anchor = NewCT_ObjectAnchor()
	return _fgfe
}

func (_gcbea ST_PaneState) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ddbgge := _gd.Attr{}
	_ddbgge.Name = name
	switch _gcbea {
	case ST_PaneStateUnset:
		_ddbgge.Value = ""
	case ST_PaneStateSplit:
		_ddbgge.Value = "\u0073\u0070\u006ci\u0074"
	case ST_PaneStateFrozen:
		_ddbgge.Value = "\u0066\u0072\u006f\u007a\u0065\u006e"
	case ST_PaneStateFrozenSplit:
		_ddbgge.Value = "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return _ddbgge, nil
}

// Validate validates the CT_ExternalSheetNames and its children
func (_geef *CT_ExternalSheetNames) Validate() error {
	return _geef.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073")
}

func (_cfea *CT_CalculatedMembers) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cfea.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cfea.CountAttr)})
	}
	e.EncodeToken(start)
	_bcbe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}}
	for _, _cac := range _cfea.CalculatedMember {
		e.EncodeElement(_cac, _bcbe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Error() *CT_Error { _deccb := &CT_Error{}; return _deccb }

func (_efaedg ST_FilterOperator) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cddef := _gd.Attr{}
	_cddef.Name = name
	switch _efaedg {
	case ST_FilterOperatorUnset:
		_cddef.Value = ""
	case ST_FilterOperatorEqual:
		_cddef.Value = "\u0065\u0071\u0075a\u006c"
	case ST_FilterOperatorLessThan:
		_cddef.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_FilterOperatorLessThanOrEqual:
		_cddef.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorNotEqual:
		_cddef.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThanOrEqual:
		_cddef.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThan:
		_cddef.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return _cddef, nil
}

func (_fafeg *CT_MdxMetadata) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fafeg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fafeg.CountAttr)})
	}
	e.EncodeToken(start)
	_dadgf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078"}}
	for _, _eaffd := range _fafeg.Mdx {
		e.EncodeElement(_eaffd, _dadgf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_WebPublishItem and its children, prefixing error messages with path
func (_dffcg *CT_WebPublishItem) ValidateWithPath(path string) error {
	if _dffcg.SourceTypeAttr == ST_WebSourceTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0053\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006da\u006e\u0064\u0061\u0074\u006fr\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _bfdade := _dffcg.SourceTypeAttr.ValidateWithPath(path + "\u002fS\u006fu\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _bfdade != nil {
		return _bfdade
	}
	return nil
}

func NewCT_ExternalLink() *CT_ExternalLink { _fefge := &CT_ExternalLink{}; return _fefge }

type CT_CacheField struct {

	// PivotCache Field Name
	NameAttr string

	// PivotCache Field Caption
	CaptionAttr *string

	// Property Name
	PropertyNameAttr *string

	// Server-based Field
	ServerFieldAttr *bool

	// Unique List Retrieved
	UniqueListAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Calculated Field Formula
	FormulaAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Hierarchy
	HierarchyAttr *int32

	// Hierarchy Level
	LevelAttr *uint32

	// Database Field
	DatabaseFieldAttr *bool

	// Member Property Count
	MappingCountAttr *uint32

	// Member Property Field
	MemberPropertyFieldAttr *bool

	// Shared Items
	SharedItems *CT_SharedItems

	// Field Group Properties
	FieldGroup *CT_FieldGroup

	// Member Properties Map
	MpMap []*CT_X

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cdbbe *ST_DataValidationImeMode) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cdbbe = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_cdbbe = 1
	case "\u006f\u0066\u0066":
		*_cdbbe = 2
	case "\u006f\u006e":
		*_cdbbe = 3
	case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
		*_cdbbe = 4
	case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_cdbbe = 5
	case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_cdbbe = 6
	case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_cdbbe = 7
	case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
		*_cdbbe = 8
	case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
		*_cdbbe = 9
	case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
		*_cdbbe = 10
	case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
		*_cdbbe = 11
	}
	return nil
}

func (_gbefcd ST_ParameterType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_fegdd := _gd.Attr{}
	_fegdd.Name = name
	switch _gbefcd {
	case ST_ParameterTypeUnset:
		_fegdd.Value = ""
	case ST_ParameterTypePrompt:
		_fegdd.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	case ST_ParameterTypeValue:
		_fegdd.Value = "\u0076\u0061\u006cu\u0065"
	case ST_ParameterTypeCell:
		_fegdd.Value = "\u0063\u0065\u006c\u006c"
	}
	return _fegdd, nil
}

func (_dgfeff *ST_FieldSortType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dgfeff = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_dgfeff = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_dgfeff = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_dgfeff = 3
	}
	return nil
}

func (_facgd *CT_QueryTable) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _facgd.NameAttr)})
	if _facgd.HeadersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.HeadersAttr))})
	}
	if _facgd.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.RowNumbersAttr))})
	}
	if _facgd.DisableRefreshAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.DisableRefreshAttr))})
	}
	if _facgd.BackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.BackgroundRefreshAttr))})
	}
	if _facgd.FirstBackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.FirstBackgroundRefreshAttr))})
	}
	if _facgd.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.RefreshOnLoadAttr))})
	}
	if _facgd.GrowShrinkTypeAttr != ST_GrowShrinkTypeUnset {
		_cacdc, _ccbfb := _facgd.GrowShrinkTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065"})
		if _ccbfb != nil {
			return _ccbfb
		}
		start.Attr = append(start.Attr, _cacdc)
	}
	if _facgd.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.FillFormulasAttr))})
	}
	if _facgd.RemoveDataOnSaveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.RemoveDataOnSaveAttr))})
	}
	if _facgd.DisableEditAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.DisableEditAttr))})
	}
	if _facgd.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.PreserveFormattingAttr))})
	}
	if _facgd.AdjustColumnWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.AdjustColumnWidthAttr))})
	}
	if _facgd.IntermediateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.IntermediateAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _facgd.ConnectionIdAttr)})
	if _facgd.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_facgd.AutoFormatIdAttr)})
	}
	if _facgd.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.ApplyNumberFormatsAttr))})
	}
	if _facgd.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.ApplyBorderFormatsAttr))})
	}
	if _facgd.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.ApplyFontFormatsAttr))})
	}
	if _facgd.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.ApplyPatternFormatsAttr))})
	}
	if _facgd.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.ApplyAlignmentFormatsAttr))})
	}
	if _facgd.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_facgd.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	if _facgd.QueryTableRefresh != nil {
		_dfgbd := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068"}}
		e.EncodeElement(_facgd.QueryTableRefresh, _dfgbd)
	}
	if _facgd.ExtLst != nil {
		_ecbee := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_facgd.ExtLst, _ecbee)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_daaag *CT_VolMain) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebefb := range start.Attr {
		if _ebefb.Name.Local == "\u0066\u0069\u0072s\u0074" {
			_gfcba, _ecagaf := _ebefb.Value, error(nil)
			if _ecagaf != nil {
				return _ecagaf
			}
			_daaag.FirstAttr = _gfcba
			continue
		}
	}
_gebaed:
	for {
		_gagfba, _aeaaa := d.Token()
		if _aeaaa != nil {
			return _aeaaa
		}
		switch _gggfab := _gagfba.(type) {
		case _gd.StartElement:
			switch _gggfab.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}:
				_adadc := NewCT_VolTopic()
				if _agcad := d.DecodeElement(_adadc, &_gggfab); _agcad != nil {
					return _agcad
				}
				_daaag.Tp = append(_daaag.Tp, _adadc)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u004d\u0061\u0069\u006e\u0020\u0025\u0076", _gggfab.Name)
				if _bcgbc := d.Skip(); _bcgbc != nil {
					return _bcgbc
				}
			}
		case _gd.EndElement:
			break _gebaed
		case _gd.CharData:
		}
	}
	return nil
}

func (_efdcf *ST_TextHAlign) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_efdcf = 0
	case "\u006c\u0065\u0066\u0074":
		*_efdcf = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_efdcf = 2
	case "\u0072\u0069\u0067h\u0074":
		*_efdcf = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_efdcf = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_efdcf = 5
	}
	return nil
}

func (_caage *CT_GroupLevels) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _adae := range start.Attr {
		if _adae.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_agcdd, _bfbae := _a.ParseUint(_adae.Value, 10, 32)
			if _bfbae != nil {
				return _bfbae
			}
			_bdegf := uint32(_agcdd)
			_caage.CountAttr = &_bdegf
			continue
		}
	}
_badagd:
	for {
		_cgdec, _cbacg := d.Token()
		if _cbacg != nil {
			return _cbacg
		}
		switch _gbge := _cgdec.(type) {
		case _gd.StartElement:
			switch _gbge.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}:
				_bffdd := NewCT_GroupLevel()
				if _cddga := d.DecodeElement(_bffdd, &_gbge); _cddga != nil {
					return _cddga
				}
				_caage.GroupLevel = append(_caage.GroupLevel, _bffdd)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065v\u0065l\u0073\u0020\u0025\u0076", _gbge.Name)
				if _bddaa := d.Skip(); _bddaa != nil {
					return _bddaa
				}
			}
		case _gd.EndElement:
			break _badagd
		case _gd.CharData:
		}
	}
	return nil
}

const (
	ST_TypeUnset  ST_Type = 0
	ST_TypeNone   ST_Type = 1
	ST_TypeAll    ST_Type = 2
	ST_TypeRow    ST_Type = 3
	ST_TypeColumn ST_Type = 4
)

func (_gdfbc *Metadata) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gdfbc.CT_Metadata = *NewCT_Metadata()
_beddb:
	for {
		_aefcc, _afgdg := d.Token()
		if _afgdg != nil {
			return _afgdg
		}
		switch _cbcgd := _aefcc.(type) {
		case _gd.StartElement:
			switch _cbcgd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_gdfbc.MetadataTypes = NewCT_MetadataTypes()
				if _gfgdc := d.DecodeElement(_gdfbc.MetadataTypes, &_cbcgd); _gfgdc != nil {
					return _gfgdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_gdfbc.MetadataStrings = NewCT_MetadataStrings()
				if _cgbed := d.DecodeElement(_gdfbc.MetadataStrings, &_cbcgd); _cgbed != nil {
					return _cgbed
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_gdfbc.MdxMetadata = NewCT_MdxMetadata()
				if _fdgcde := d.DecodeElement(_gdfbc.MdxMetadata, &_cbcgd); _fdgcde != nil {
					return _fdgcde
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_edaacg := NewCT_FutureMetadata()
				if _ccfdd := d.DecodeElement(_edaacg, &_cbcgd); _ccfdd != nil {
					return _ccfdd
				}
				_gdfbc.FutureMetadata = append(_gdfbc.FutureMetadata, _edaacg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_gdfbc.CellMetadata = NewCT_MetadataBlocks()
				if _caege := d.DecodeElement(_gdfbc.CellMetadata, &_cbcgd); _caege != nil {
					return _caege
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_gdfbc.ValueMetadata = NewCT_MetadataBlocks()
				if _fefdaf := d.DecodeElement(_gdfbc.ValueMetadata, &_cbcgd); _fefdaf != nil {
					return _fefdaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdfbc.ExtLst = NewCT_ExtensionList()
				if _fgfeca := d.DecodeElement(_gdfbc.ExtLst, &_cbcgd); _fgfeca != nil {
					return _fgfeca
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _cbcgd.Name)
				if _ggdbe := d.Skip(); _ggdbe != nil {
					return _ggdbe
				}
			}
		case _gd.EndElement:
			break _beddb
		case _gd.CharData:
		}
	}
	return nil
}

type CT_IndexedColors struct {

	// RGB Color
	RgbColor []*CT_RgbColor
}

func (_ecafc ST_GroupBy) ValidateWithPath(path string) error {
	switch _ecafc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecafc))
	}
	return nil
}

type CT_GradientStop struct {

	// Gradient Stop Position
	PositionAttr float64

	// Color
	Color *CT_Color
}

func (_adceag ST_WebSourceType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_abcbd := _gd.Attr{}
	_abcbd.Name = name
	switch _adceag {
	case ST_WebSourceTypeUnset:
		_abcbd.Value = ""
	case ST_WebSourceTypeSheet:
		_abcbd.Value = "\u0073\u0068\u0065e\u0074"
	case ST_WebSourceTypePrintArea:
		_abcbd.Value = "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case ST_WebSourceTypeAutoFilter:
		_abcbd.Value = "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case ST_WebSourceTypeRange:
		_abcbd.Value = "\u0072\u0061\u006eg\u0065"
	case ST_WebSourceTypeChart:
		_abcbd.Value = "\u0063\u0068\u0061r\u0074"
	case ST_WebSourceTypePivotTable:
		_abcbd.Value = "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case ST_WebSourceTypeQuery:
		_abcbd.Value = "\u0071\u0075\u0065r\u0079"
	case ST_WebSourceTypeLabel:
		_abcbd.Value = "\u006c\u0061\u0062e\u006c"
	}
	return _abcbd, nil
}

// Validate validates the CT_Stylesheet and its children
func (_eaabde *CT_Stylesheet) Validate() error {
	return _eaabde.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074")
}

func (_badcb *CT_FieldGroup) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _afbba := range start.Attr {
		if _afbba.Name.Local == "\u0070\u0061\u0072" {
			_gedcdb, _eadcg := _a.ParseUint(_afbba.Value, 10, 32)
			if _eadcg != nil {
				return _eadcg
			}
			_agaea := uint32(_gedcdb)
			_badcb.ParAttr = &_agaea
			continue
		}
		if _afbba.Name.Local == "\u0062\u0061\u0073\u0065" {
			_bbecg, _gefge := _a.ParseUint(_afbba.Value, 10, 32)
			if _gefge != nil {
				return _gefge
			}
			_ggede := uint32(_bbecg)
			_badcb.BaseAttr = &_ggede
			continue
		}
	}
_fdgdd:
	for {
		_dfcag, _gggc := d.Token()
		if _gggc != nil {
			return _gggc
		}
		switch _begf := _dfcag.(type) {
		case _gd.StartElement:
			switch _begf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}:
				_badcb.RangePr = NewCT_RangePr()
				if _ffdeb := d.DecodeElement(_badcb.RangePr, &_begf); _ffdeb != nil {
					return _ffdeb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}:
				_badcb.DiscretePr = NewCT_DiscretePr()
				if _gbbf := d.DecodeElement(_badcb.DiscretePr, &_begf); _gbbf != nil {
					return _gbbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}:
				_badcb.GroupItems = NewCT_GroupItems()
				if _fbecg := d.DecodeElement(_badcb.GroupItems, &_begf); _fbecg != nil {
					return _fbecg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _begf.Name)
				if _ffdef := d.Skip(); _ffdef != nil {
					return _ffdef
				}
			}
		case _gd.EndElement:
			break _fdgdd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_PCDSDTCEntries() *CT_PCDSDTCEntries { _bfeca := &CT_PCDSDTCEntries{}; return _bfeca }

// Validate validates the CT_CustomFilters and its children
func (_gadd *CT_CustomFilters) Validate() error {
	return _gadd.ValidateWithPath("\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

func (_bdfb *CT_Font) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _bdfb.Name != nil {
		_cfgfb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006e\u0061\u006d\u0065"}}
		for _, _eagcb := range _bdfb.Name {
			e.EncodeElement(_eagcb, _cfgfb)
		}
	}
	if _bdfb.Charset != nil {
		_bfgad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		for _, _dgdabb := range _bdfb.Charset {
			e.EncodeElement(_dgdabb, _bfgad)
		}
	}
	if _bdfb.Family != nil {
		_cfeag := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		for _, _dbce := range _bdfb.Family {
			e.EncodeElement(_dbce, _cfeag)
		}
	}
	if _bdfb.B != nil {
		_edcf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _agdcf := range _bdfb.B {
			e.EncodeElement(_agdcf, _edcf)
		}
	}
	if _bdfb.I != nil {
		_dedbg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069"}}
		for _, _cbec := range _bdfb.I {
			e.EncodeElement(_cbec, _dedbg)
		}
	}
	if _bdfb.Strike != nil {
		_cgef := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		for _, _dffac := range _bdfb.Strike {
			e.EncodeElement(_dffac, _cgef)
		}
	}
	if _bdfb.Outline != nil {
		_fcgcf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		for _, _ccca := range _bdfb.Outline {
			e.EncodeElement(_ccca, _fcgcf)
		}
	}
	if _bdfb.Shadow != nil {
		_ggaga := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		for _, _eadccd := range _bdfb.Shadow {
			e.EncodeElement(_eadccd, _ggaga)
		}
	}
	if _bdfb.Condense != nil {
		_fgaaf := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		for _, _efcg := range _bdfb.Condense {
			e.EncodeElement(_efcg, _fgaaf)
		}
	}
	if _bdfb.Extend != nil {
		_ggbag := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		for _, _ebgfc := range _bdfb.Extend {
			e.EncodeElement(_ebgfc, _ggbag)
		}
	}
	if _bdfb.Color != nil {
		_dfbe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		for _, _faead := range _bdfb.Color {
			e.EncodeElement(_faead, _dfbe)
		}
	}
	if _bdfb.Sz != nil {
		_dabbe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u007a"}}
		for _, _dfda := range _bdfb.Sz {
			e.EncodeElement(_dfda, _dabbe)
		}
	}
	if _bdfb.U != nil {
		_afaag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0075"}}
		for _, _aafcb := range _bdfb.U {
			e.EncodeElement(_aafcb, _afaag)
		}
	}
	if _bdfb.VertAlign != nil {
		_bgcbc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		for _, _fadc := range _bdfb.VertAlign {
			e.EncodeElement(_fadc, _bgcbc)
		}
	}
	if _bdfb.Scheme != nil {
		_cceae := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		for _, _gdcg := range _bdfb.Scheme {
			e.EncodeElement(_gdcg, _cceae)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_QueryTableField and its children, prefixing error messages with path
func (_gafgc *CT_QueryTableField) ValidateWithPath(path string) error {
	if _gafgc.ExtLst != nil {
		if _bfgdac := _gafgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfgdac != nil {
			return _bfgdac
		}
	}
	return nil
}

func (_ecgaea ST_IconSetType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_gafba := _gd.Attr{}
	_gafba.Name = name
	switch _ecgaea {
	case ST_IconSetTypeUnset:
		_gafba.Value = ""
	case ST_IconSetType3Arrows:
		_gafba.Value = "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType3ArrowsGray:
		_gafba.Value = "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType3Flags:
		_gafba.Value = "\u0033\u0046\u006c\u0061\u0067\u0073"
	case ST_IconSetType3TrafficLights1:
		_gafba.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case ST_IconSetType3TrafficLights2:
		_gafba.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case ST_IconSetType3Signs:
		_gafba.Value = "\u0033\u0053\u0069\u0067\u006e\u0073"
	case ST_IconSetType3Symbols:
		_gafba.Value = "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case ST_IconSetType3Symbols2:
		_gafba.Value = "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case ST_IconSetType4Arrows:
		_gafba.Value = "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType4ArrowsGray:
		_gafba.Value = "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType4RedToBlack:
		_gafba.Value = "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case ST_IconSetType4Rating:
		_gafba.Value = "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType4TrafficLights:
		_gafba.Value = "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case ST_IconSetType5Arrows:
		_gafba.Value = "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType5ArrowsGray:
		_gafba.Value = "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType5Rating:
		_gafba.Value = "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType5Quarters:
		_gafba.Value = "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return _gafba, nil
}

func (_cfebab ST_RefMode) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_cfebab.String(), start)
}

func (_acaa *CT_FontSize) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gggce := range start.Attr {
		if _gggce.Name.Local == "\u0076\u0061\u006c" {
			_ababf, _beaag := _a.ParseFloat(_gggce.Value, 64)
			if _beaag != nil {
				return _beaag
			}
			_acaa.ValAttr = _ababf
			continue
		}
	}
	for {
		_gbgbe, _bfdgg := d.Token()
		if _bfdgg != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _bfdgg)
		}
		if _afdba, _egcfb := _gbgbe.(_gd.EndElement); _egcfb && _afdba.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DdeValue and its children
func (_gebaa *CT_DdeValue) Validate() error {
	return _gebaa.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065")
}

func (_dbeccg ST_VerticalAlignment) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dbeccg.String(), start)
}

type CT_XmlColumnPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// Denormalized
	DenormalizedAttr *bool

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ddeag *ST_SortMethod) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gfebc, _aeeeff := d.Token()
	if _aeeeff != nil {
		return _aeeeff
	}
	if _fdgec, _ccecg := _gfebc.(_gd.EndElement); _ccecg && _fdgec.Name == start.Name {
		*_ddeag = 1
		return nil
	}
	if _acdfe, _cbeab := _gfebc.(_gd.CharData); !_cbeab {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfebc)
	} else {
		switch string(_acdfe) {
		case "":
			*_ddeag = 0
		case "\u0073\u0074\u0072\u006f\u006b\u0065":
			*_ddeag = 1
		case "\u0070\u0069\u006e\u0059\u0069\u006e":
			*_ddeag = 2
		case "\u006e\u006f\u006e\u0065":
			*_ddeag = 3
		}
	}
	_gfebc, _aeeeff = d.Token()
	if _aeeeff != nil {
		return _aeeeff
	}
	if _bgcceb, _gadcaf := _gfebc.(_gd.EndElement); _gadcaf && _bgcceb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfebc)
}

func (_efdcge ST_HorizontalAlignment) ValidateWithPath(path string) error {
	switch _efdcge {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efdcge))
	}
	return nil
}

// ValidateWithPath validates the CT_Set and its children, prefixing error messages with path
func (_dbcfb *CT_Set) ValidateWithPath(path string) error {
	if _faeaf := _dbcfb.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _faeaf != nil {
		return _faeaf
	}
	for _gagad, _ebcgbg := range _dbcfb.Tpls {
		if _gbdda := _ebcgbg.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _gagad)); _gbdda != nil {
			return _gbdda
		}
	}
	if _dbcfb.SortByTuple != nil {
		if _bagbf := _dbcfb.SortByTuple.ValidateWithPath(path + "\u002f\u0053\u006fr\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"); _bagbf != nil {
			return _bagbf
		}
	}
	return nil
}

func (_dgdff *CT_MetadataType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _baacde := range start.Attr {
		if _baacde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073" {
			_afcgd, _aecda := _a.ParseBool(_baacde.Value)
			if _aecda != nil {
				return _aecda
			}
			_dgdff.PasteColWidthsAttr = &_afcgd
			continue
		}
		if _baacde.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eeddb, _bdfbb := _baacde.Value, error(nil)
			if _bdfbb != nil {
				return _bdfbb
			}
			_dgdff.NameAttr = _eeddb
			continue
		}
		if _baacde.Name.Local == "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ebecbb, _gffb := _a.ParseBool(_baacde.Value)
			if _gffb != nil {
				return _gffb
			}
			_dgdff.PasteNumberFormatsAttr = &_ebecbb
			continue
		}
		if _baacde.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077" {
			_gfdde, _agfdd := _a.ParseBool(_baacde.Value)
			if _agfdd != nil {
				return _agfdd
			}
			_dgdff.GhostRowAttr = &_gfdde
			continue
		}
		if _baacde.Name.Local == "\u006d\u0065\u0072g\u0065" {
			_abbeg, _daada := _a.ParseBool(_baacde.Value)
			if _daada != nil {
				return _daada
			}
			_dgdff.MergeAttr = &_abbeg
			continue
		}
		if _baacde.Name.Local == "\u0065\u0064\u0069\u0074" {
			_dfgad, _effb := _a.ParseBool(_baacde.Value)
			if _effb != nil {
				return _effb
			}
			_dgdff.EditAttr = &_dfgad
			continue
		}
		if _baacde.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074" {
			_efbgc, _fagfe := _a.ParseBool(_baacde.Value)
			if _fagfe != nil {
				return _fagfe
			}
			_dgdff.SplitFirstAttr = &_efbgc
			continue
		}
		if _baacde.Name.Local == "\u0063\u006f\u0070\u0079" {
			_beeeb, _gabffa := _a.ParseBool(_baacde.Value)
			if _gabffa != nil {
				return _gabffa
			}
			_dgdff.CopyAttr = &_beeeb
			continue
		}
		if _baacde.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c" {
			_ffgc, _ffecg := _a.ParseBool(_baacde.Value)
			if _ffecg != nil {
				return _ffecg
			}
			_dgdff.SplitAllAttr = &_ffgc
			continue
		}
		if _baacde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_bdecb, _cgafb := _a.ParseBool(_baacde.Value)
			if _cgafb != nil {
				return _cgafb
			}
			_dgdff.PasteFormulasAttr = &_bdecb
			continue
		}
		if _baacde.Name.Local == "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061" {
			_dccf, _gbdec := _a.ParseBool(_baacde.Value)
			if _gbdec != nil {
				return _gbdec
			}
			_dgdff.CellMetaAttr = &_dccf
			continue
		}
		if _baacde.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c" {
			_gggge, _bbbc := _a.ParseBool(_baacde.Value)
			if _bbbc != nil {
				return _bbbc
			}
			_dgdff.ClearAllAttr = &_gggge
			continue
		}
		if _baacde.Name.Local == "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_fcecgc, _gacgf := _a.ParseUint(_baacde.Value, 10, 32)
			if _gacgf != nil {
				return _gacgf
			}
			_dgdff.MinSupportedVersionAttr = uint32(_fcecgc)
			continue
		}
		if _baacde.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074" {
			_bbfbbb, _dbfef := _a.ParseBool(_baacde.Value)
			if _dbfef != nil {
				return _dbfef
			}
			_dgdff.AdjustAttr = &_bbfbbb
			continue
		}
		if _baacde.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_bcdacf, _cgbab := _a.ParseBool(_baacde.Value)
			if _cgbab != nil {
				return _cgbab
			}
			_dgdff.ClearContentsAttr = &_bcdacf
			continue
		}
		if _baacde.Name.Local == "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073" {
			_fdfa, _edfde := _a.ParseBool(_baacde.Value)
			if _edfde != nil {
				return _edfde
			}
			_dgdff.PasteValuesAttr = &_fdfa
			continue
		}
		if _baacde.Name.Local == "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074" {
			_aegdc, _bgcefd := _a.ParseBool(_baacde.Value)
			if _bgcefd != nil {
				return _bgcefd
			}
			_dgdff.RowColShiftAttr = &_aegdc
			continue
		}
		if _baacde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_fbdde, _cacd := _a.ParseBool(_baacde.Value)
			if _cacd != nil {
				return _cacd
			}
			_dgdff.PasteCommentsAttr = &_fbdde
			continue
		}
		if _baacde.Name.Local == "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cbbeeb, _eafcd := _a.ParseBool(_baacde.Value)
			if _eafcd != nil {
				return _eafcd
			}
			_dgdff.ClearFormatsAttr = &_cbbeeb
			continue
		}
		if _baacde.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c" {
			_adbbf, _fdeef := _a.ParseBool(_baacde.Value)
			if _fdeef != nil {
				return _fdeef
			}
			_dgdff.GhostColAttr = &_adbbf
			continue
		}
		if _baacde.Name.Local == "\u0063\u006f\u0065\u0072\u0063\u0065" {
			_fefgf, _efcac := _a.ParseBool(_baacde.Value)
			if _efcac != nil {
				return _efcac
			}
			_dgdff.CoerceAttr = &_fefgf
			continue
		}
		if _baacde.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_bfcdg, _bfggf := _a.ParseBool(_baacde.Value)
			if _bfggf != nil {
				return _bfggf
			}
			_dgdff.ClearCommentsAttr = &_bfcdg
			continue
		}
		if _baacde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c" {
			_gbega, _gaecf := _a.ParseBool(_baacde.Value)
			if _gaecf != nil {
				return _gaecf
			}
			_dgdff.PasteAllAttr = &_gbega
			continue
		}
		if _baacde.Name.Local == "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073" {
			_abggg, _dgdg := _a.ParseBool(_baacde.Value)
			if _dgdg != nil {
				return _dgdg
			}
			_dgdff.PasteBordersAttr = &_abggg
			continue
		}
		if _baacde.Name.Local == "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cfgbc, _gbgced := _a.ParseBool(_baacde.Value)
			if _gbgced != nil {
				return _gbgced
			}
			_dgdff.PasteFormatsAttr = &_cfgbc
			continue
		}
		if _baacde.Name.Local == "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e" {
			_afbc, _gagcea := _a.ParseBool(_baacde.Value)
			if _gagcea != nil {
				return _gagcea
			}
			_dgdff.PasteDataValidationAttr = &_afbc
			continue
		}
		if _baacde.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065" {
			_baaaa, _bbgaf := _a.ParseBool(_baacde.Value)
			if _bbgaf != nil {
				return _bbgaf
			}
			_dgdff.DeleteAttr = &_baaaa
			continue
		}
		if _baacde.Name.Local == "\u0061\u0073\u0073\u0069\u0067\u006e" {
			_adeaf, _gbbg := _a.ParseBool(_baacde.Value)
			if _gbbg != nil {
				return _gbbg
			}
			_dgdff.AssignAttr = &_adeaf
			continue
		}
	}
	for {
		_ebfaa, _ddac := d.Token()
		if _ddac != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0054\u0079p\u0065:\u0020\u0025\u0073", _ddac)
		}
		if _dgbg, _ccfbd := _ebfaa.(_gd.EndElement); _ccfbd && _dgbg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eeabbf *StyleSheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	return _eeabbf.CT_Stylesheet.MarshalXML(e, start)
}

func (_faefg ST_Scope) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ccefff := _gd.Attr{}
	_ccefff.Name = name
	switch _faefg {
	case ST_ScopeUnset:
		_ccefff.Value = ""
	case ST_ScopeSelection:
		_ccefff.Value = "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case ST_ScopeData:
		_ccefff.Value = "\u0064\u0061\u0074\u0061"
	case ST_ScopeField:
		_ccefff.Value = "\u0066\u0069\u0065l\u0064"
	}
	return _ccefff, nil
}

// ValidateWithPath validates the CT_PageSetUpPr and its children, prefixing error messages with path
func (_agaac *CT_PageSetUpPr) ValidateWithPath(path string) error { return nil }

type ST_MdxSetOrder byte

type CT_Dimensions struct {

	// OLAP Dimensions Count
	CountAttr *uint32

	// OLAP Dimension
	Dimension []*CT_PivotDimension
}

func (_aceab *CT_DdeItem) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aceab.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aceab.NameAttr)})
	}
	if _aceab.OleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aceab.OleAttr))})
	}
	if _aceab.AdviseAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aceab.AdviseAttr))})
	}
	if _aceab.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aceab.PreferPicAttr))})
	}
	e.EncodeToken(start)
	if _aceab.Values != nil {
		_gdfg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0076\u0061\u006c\u0075\u0065s"}}
		e.EncodeElement(_aceab.Values, _gdfg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fdedd *CT_Top10) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aaeca := range start.Attr {
		if _aaeca.Name.Local == "\u0074\u006f\u0070" {
			_cfgfa, _gfafad := _a.ParseBool(_aaeca.Value)
			if _gfafad != nil {
				return _gfafad
			}
			_fdedd.TopAttr = &_cfgfa
			continue
		}
		if _aaeca.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_bffdg, _cagcb := _a.ParseBool(_aaeca.Value)
			if _cagcb != nil {
				return _cagcb
			}
			_fdedd.PercentAttr = &_bffdg
			continue
		}
		if _aaeca.Name.Local == "\u0076\u0061\u006c" {
			_daceee, _dfbfdg := _a.ParseFloat(_aaeca.Value, 64)
			if _dfbfdg != nil {
				return _dfbfdg
			}
			_fdedd.ValAttr = _daceee
			continue
		}
		if _aaeca.Name.Local == "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l" {
			_fdfga, _ggggbf := _a.ParseFloat(_aaeca.Value, 64)
			if _ggggbf != nil {
				return _ggggbf
			}
			_fdedd.FilterValAttr = &_fdfga
			continue
		}
	}
	for {
		_dbeff, _bcddc := d.Token()
		if _bcddc != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u006f\u0070\u0031\u0030: \u0025\u0073", _bcddc)
		}
		if _afeeaf, _dfcbfc := _dbeff.(_gd.EndElement); _dfcbfc && _afeeaf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bfadaf *CT_Scenario) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gaagcc := range start.Attr {
		if _gaagcc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cbbdb, _eaabdf := _gaagcc.Value, error(nil)
			if _eaabdf != nil {
				return _eaabdf
			}
			_bfadaf.NameAttr = _cbbdb
			continue
		}
		if _gaagcc.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_aabef, _bddaf := _a.ParseBool(_gaagcc.Value)
			if _bddaf != nil {
				return _bddaf
			}
			_bfadaf.LockedAttr = &_aabef
			continue
		}
		if _gaagcc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cbgaa, _cagea := _a.ParseBool(_gaagcc.Value)
			if _cagea != nil {
				return _cagea
			}
			_bfadaf.HiddenAttr = &_cbgaa
			continue
		}
		if _gaagcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gcbgf, _abadce := _a.ParseUint(_gaagcc.Value, 10, 32)
			if _abadce != nil {
				return _abadce
			}
			_adfeb := uint32(_gcbgf)
			_bfadaf.CountAttr = &_adfeb
			continue
		}
		if _gaagcc.Name.Local == "\u0075\u0073\u0065\u0072" {
			_gbbef, _febgg := _gaagcc.Value, error(nil)
			if _febgg != nil {
				return _febgg
			}
			_bfadaf.UserAttr = &_gbbef
			continue
		}
		if _gaagcc.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_egaba, _ebeag := _gaagcc.Value, error(nil)
			if _ebeag != nil {
				return _ebeag
			}
			_bfadaf.CommentAttr = &_egaba
			continue
		}
	}
_acdbg:
	for {
		_bdbbg, _gfeaa := d.Token()
		if _gfeaa != nil {
			return _gfeaa
		}
		switch _bdfgbg := _bdbbg.(type) {
		case _gd.StartElement:
			switch _bdfgbg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}:
				_cbegb := NewCT_InputCells()
				if _dbfdbd := d.DecodeElement(_cbegb, &_bdfgbg); _dbfdbd != nil {
					return _dbfdbd
				}
				_bfadaf.InputCells = append(_bfadaf.InputCells, _cbegb)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0020\u0025\u0076", _bdfgbg.Name)
				if _fggef := d.Skip(); _fggef != nil {
					return _fggef
				}
			}
		case _gd.EndElement:
			break _acdbg
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FieldsUsage and its children, prefixing error messages with path
func (_baee *CT_FieldsUsage) ValidateWithPath(path string) error {
	for _eefaa, _ebggf := range _baee.FieldUsage {
		if _aebb := _ebggf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067e\u005b\u0025\u0064\u005d", path, _eefaa)); _aebb != nil {
			return _aebb
		}
	}
	return nil
}

func (_dacegd ST_MdxFunctionType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dacegd.String(), start)
}

func (_agf *CT_AutoFilter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _df := range start.Attr {
		if _df.Name.Local == "\u0072\u0065\u0066" {
			_eda, _deb := _df.Value, error(nil)
			if _deb != nil {
				return _deb
			}
			_agf.RefAttr = &_eda
			continue
		}
	}
_gee:
	for {
		_dcb, _fcd := d.Token()
		if _fcd != nil {
			return _fcd
		}
		switch _dcg := _dcb.(type) {
		case _gd.StartElement:
			switch _dcg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_ce := NewCT_FilterColumn()
				if _cbfd := d.DecodeElement(_ce, &_dcg); _cbfd != nil {
					return _cbfd
				}
				_agf.FilterColumn = append(_agf.FilterColumn, _ce)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_agf.SortState = NewCT_SortState()
				if _ad := d.DecodeElement(_agf.SortState, &_dcg); _ad != nil {
					return _ad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agf.ExtLst = NewCT_ExtensionList()
				if _ead := d.DecodeElement(_agf.ExtLst, &_dcg); _ead != nil {
					return _ead
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041u\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072 \u0025\u0076", _dcg.Name)
				if _faf := d.Skip(); _faf != nil {
					return _faf
				}
			}
		case _gd.EndElement:
			break _gee
		case _gd.CharData:
		}
	}
	return nil
}

func (_acgcb *CT_Pane) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dfbfc := range start.Attr {
		if _dfbfc.Name.Local == "\u0078\u0053\u0070\u006c\u0069\u0074" {
			_ddace, _efbaa := _a.ParseFloat(_dfbfc.Value, 64)
			if _efbaa != nil {
				return _efbaa
			}
			_acgcb.XSplitAttr = &_ddace
			continue
		}
		if _dfbfc.Name.Local == "\u0079\u0053\u0070\u006c\u0069\u0074" {
			_ddbeb, _dgcb := _a.ParseFloat(_dfbfc.Value, 64)
			if _dgcb != nil {
				return _dgcb
			}
			_acgcb.YSplitAttr = &_ddbeb
			continue
		}
		if _dfbfc.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_gafgee, _fgfa := _dfbfc.Value, error(nil)
			if _fgfa != nil {
				return _fgfa
			}
			_acgcb.TopLeftCellAttr = &_gafgee
			continue
		}
		if _dfbfc.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065" {
			_acgcb.ActivePaneAttr.UnmarshalXMLAttr(_dfbfc)
			continue
		}
		if _dfbfc.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_acgcb.StateAttr.UnmarshalXMLAttr(_dfbfc)
			continue
		}
	}
	for {
		_bbgc, _bdbdf := d.Token()
		if _bdbdf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u006e\u0065\u003a\u0020\u0025\u0073", _bdbdf)
		}
		if _cbebb, _facad := _bbgc.(_gd.EndElement); _facad && _cbebb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_DataBinding() *CT_DataBinding { _dfcb := &CT_DataBinding{}; return _dfcb }

// ValidateWithPath validates the CT_QueryCache and its children, prefixing error messages with path
func (_eecfcf *CT_QueryCache) ValidateWithPath(path string) error {
	for _eccgg, _eecbfe := range _eecfcf.Query {
		if _bgcgcd := _eecbfe.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fQ\u0075\u0065\u0072\u0079\u005b\u0025\u0064\u005d", path, _eccgg)); _bgcgcd != nil {
			return _bgcgcd
		}
	}
	return nil
}

func (_fefae *CT_Rst) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_gfcdc:
	for {
		_dfagb, _daagf := d.Token()
		if _daagf != nil {
			return _daagf
		}
		switch _bbfbd := _dfagb.(type) {
		case _gd.StartElement:
			switch _bbfbd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_fefae.T = new(string)
				if _cdgec := d.DecodeElement(_fefae.T, &_bbfbd); _cdgec != nil {
					return _cdgec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_gcdbed := NewCT_RElt()
				if _ccfba := d.DecodeElement(_gcdbed, &_bbfbd); _ccfba != nil {
					return _ccfba
				}
				_fefae.R = append(_fefae.R, _gcdbed)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}:
				_bedcb := NewCT_PhoneticRun()
				if _egadg := d.DecodeElement(_bedcb, &_bbfbd); _egadg != nil {
					return _egadg
				}
				_fefae.RPh = append(_fefae.RPh, _bedcb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_fefae.PhoneticPr = NewCT_PhoneticPr()
				if _gbfge := d.DecodeElement(_fefae.PhoneticPr, &_bbfbd); _gbfge != nil {
					return _gbfge
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0073\u0074\u0020\u0025\u0076", _bbfbd.Name)
				if _dffdc := d.Skip(); _dffdc != nil {
					return _dffdc
				}
			}
		case _gd.EndElement:
			break _gfcdc
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GroupMembers and its children
func (_bgdde *CT_GroupMembers) Validate() error {
	return _bgdde.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_ServerFormat and its children, prefixing error messages with path
func (_dfbdbb *CT_ServerFormat) ValidateWithPath(path string) error { return nil }

func (_aacge *PivotCacheDefinition) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aacge.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	for _, _dgdcf := range start.Attr {
		if _dgdcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgdcf.Name.Local == "\u0069\u0064" || _dgdcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgdcf.Name.Local == "\u0069\u0064" {
			_ebeac, _cfdad := _dgdcf.Value, error(nil)
			if _cfdad != nil {
				return _cfdad
			}
			_aacge.IdAttr = &_ebeac
			continue
		}
		if _dgdcf.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_cdcad, _ddcdg := _a.ParseBool(_dgdcf.Value)
			if _ddcdg != nil {
				return _ddcdg
			}
			_aacge.UpgradeOnRefreshAttr = &_cdcad
			continue
		}
		if _dgdcf.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_gbafea, _bfccc := _a.ParseBool(_dgdcf.Value)
			if _bfccc != nil {
				return _bfccc
			}
			_aacge.TupleCacheAttr = &_gbafea
			continue
		}
		if _dgdcf.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_daabb, _gcafaa := _a.ParseBool(_dgdcf.Value)
			if _gcafaa != nil {
				return _gcafaa
			}
			_aacge.SaveDataAttr = &_daabb
			continue
		}
		if _dgdcf.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_afdcg, _fdfbc := _a.ParseBool(_dgdcf.Value)
			if _fdfbc != nil {
				return _fdfbc
			}
			_aacge.SupportSubqueryAttr = &_afdcg
			continue
		}
		if _dgdcf.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_bgcbfd, _dgfgc := _a.ParseBool(_dgdcf.Value)
			if _dgfgc != nil {
				return _dgfgc
			}
			_aacge.OptimizeMemoryAttr = &_bgcbfd
			continue
		}
		if _dgdcf.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_gdggc, _fbddde := _a.ParseBool(_dgdcf.Value)
			if _fbddde != nil {
				return _fbddde
			}
			_aacge.SupportAdvancedDrillAttr = &_gdggc
			continue
		}
		if _dgdcf.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_fefef, _dgbgf := _dgdcf.Value, error(nil)
			if _dgbgf != nil {
				return _dgbgf
			}
			_aacge.RefreshedByAttr = &_fefef
			continue
		}
		if _dgdcf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_geecd, _adcfd := ParseStdlibTime(_dgdcf.Value)
			if _adcfd != nil {
				return _adcfd
			}
			_aacge.RefreshedDateIsoAttr = &_geecd
			continue
		}
		if _dgdcf.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_ffgdd, _eebafa := _a.ParseBool(_dgdcf.Value)
			if _eebafa != nil {
				return _eebafa
			}
			_aacge.InvalidAttr = &_ffgdd
			continue
		}
		if _dgdcf.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_bgfebc, _cgfbee := _a.ParseBool(_dgdcf.Value)
			if _cgfbee != nil {
				return _cgfbee
			}
			_aacge.BackgroundQueryAttr = &_bgfebc
			continue
		}
		if _dgdcf.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_fggfe, _ceaff := _a.ParseUint(_dgdcf.Value, 10, 32)
			if _ceaff != nil {
				return _ceaff
			}
			_efeca := uint32(_fggfe)
			_aacge.MissingItemsLimitAttr = &_efeca
			continue
		}
		if _dgdcf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gdgcb, _eaadad := _a.ParseUint(_dgdcf.Value, 10, 8)
			if _eaadad != nil {
				return _eaadad
			}
			_aadef := uint8(_gdgcb)
			_aacge.RefreshedVersionAttr = &_aadef
			continue
		}
		if _dgdcf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_eecefe, _beceg := _a.ParseBool(_dgdcf.Value)
			if _beceg != nil {
				return _beceg
			}
			_aacge.RefreshOnLoadAttr = &_eecefe
			continue
		}
		if _dgdcf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_fccda, _bbdccc := _a.ParseFloat(_dgdcf.Value, 64)
			if _bbdccc != nil {
				return _bbdccc
			}
			_aacge.RefreshedDateAttr = &_fccda
			continue
		}
		if _dgdcf.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_egbaf, _ccccgb := _a.ParseUint(_dgdcf.Value, 10, 32)
			if _ccccgb != nil {
				return _ccccgb
			}
			_gggfbc := uint32(_egbaf)
			_aacge.RecordCountAttr = &_gggfbc
			continue
		}
		if _dgdcf.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_aaefgf, _eafgc := _a.ParseUint(_dgdcf.Value, 10, 8)
			if _eafgc != nil {
				return _eafgc
			}
			_gadac := uint8(_aaefgf)
			_aacge.CreatedVersionAttr = &_gadac
			continue
		}
		if _dgdcf.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_fbbbfb, _agegbf := _a.ParseUint(_dgdcf.Value, 10, 8)
			if _agegbf != nil {
				return _agegbf
			}
			_aeecff := uint8(_fbbbfb)
			_aacge.MinRefreshableVersionAttr = &_aeecff
			continue
		}
		if _dgdcf.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_bebfb, _ffbfe := _a.ParseBool(_dgdcf.Value)
			if _ffbfe != nil {
				return _ffbfe
			}
			_aacge.EnableRefreshAttr = &_bebfb
			continue
		}
	}
_efaeb:
	for {
		_cafbgc, _cggbe := d.Token()
		if _cggbe != nil {
			return _cggbe
		}
		switch _cfaad := _cafbgc.(type) {
		case _gd.StartElement:
			switch _cfaad.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _bbggd := d.DecodeElement(_aacge.CacheSource, &_cfaad); _bbggd != nil {
					return _bbggd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _gfdfc := d.DecodeElement(_aacge.CacheFields, &_cfaad); _gfdfc != nil {
					return _gfdfc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_aacge.CacheHierarchies = NewCT_CacheHierarchies()
				if _eaggg := d.DecodeElement(_aacge.CacheHierarchies, &_cfaad); _eaggg != nil {
					return _eaggg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_aacge.Kpis = NewCT_PCDKPIs()
				if _gcegc := d.DecodeElement(_aacge.Kpis, &_cfaad); _gcegc != nil {
					return _gcegc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_aacge.TupleCache = NewCT_TupleCache()
				if _dddbb := d.DecodeElement(_aacge.TupleCache, &_cfaad); _dddbb != nil {
					return _dddbb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_aacge.CalculatedItems = NewCT_CalculatedItems()
				if _dgbacg := d.DecodeElement(_aacge.CalculatedItems, &_cfaad); _dgbacg != nil {
					return _dgbacg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_aacge.CalculatedMembers = NewCT_CalculatedMembers()
				if _agdcgd := d.DecodeElement(_aacge.CalculatedMembers, &_cfaad); _agdcgd != nil {
					return _agdcgd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_aacge.Dimensions = NewCT_Dimensions()
				if _eefec := d.DecodeElement(_aacge.Dimensions, &_cfaad); _eefec != nil {
					return _eefec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_aacge.MeasureGroups = NewCT_MeasureGroups()
				if _cedbdb := d.DecodeElement(_aacge.MeasureGroups, &_cfaad); _cedbdb != nil {
					return _cedbdb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_aacge.Maps = NewCT_MeasureDimensionMaps()
				if _dccfcd := d.DecodeElement(_aacge.Maps, &_cfaad); _dccfcd != nil {
					return _dccfcd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aacge.ExtLst = NewCT_ExtensionList()
				if _adegcg := d.DecodeElement(_aacge.ExtLst, &_cfaad); _adegcg != nil {
					return _adegcg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _cfaad.Name)
				if _egdaa := d.Skip(); _egdaa != nil {
					return _egdaa
				}
			}
		case _gd.EndElement:
			break _efaeb
		case _gd.CharData:
		}
	}
	return nil
}

func NewUsers() *Users { _cgafde := &Users{}; _cgafde.CT_Users = *NewCT_Users(); return _cgafde }

func (_eaeca *CT_Cols) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_afcbe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c"}}
	for _, _abba := range _eaeca.Col {
		e.EncodeElement(_abba, _afcbe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cbacd *ST_ExternalConnectionType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cbacd = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_cbacd = 1
	case "\u0074\u0065\u0078\u0074":
		*_cbacd = 2
	case "\u004d\u0044\u0059":
		*_cbacd = 3
	case "\u0044\u004d\u0059":
		*_cbacd = 4
	case "\u0059\u004d\u0044":
		*_cbacd = 5
	case "\u004d\u0059\u0044":
		*_cbacd = 6
	case "\u0044\u0059\u004d":
		*_cbacd = 7
	case "\u0059\u0044\u004d":
		*_cbacd = 8
	case "\u0073\u006b\u0069\u0070":
		*_cbacd = 9
	case "\u0045\u004d\u0044":
		*_cbacd = 10
	}
	return nil
}

type CT_RevisionAutoFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Reference
	RefAttr                     string
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

type CT_TableColumn struct {

	// Table Field Id
	IdAttr uint32

	// Unique Name
	UniqueNameAttr *string

	// Column name
	NameAttr string

	// Totals Row Function
	TotalsRowFunctionAttr ST_TotalsRowFunction

	// Totals Row Label
	TotalsRowLabelAttr *string

	// Query Table Field Id
	QueryTableFieldIdAttr *uint32

	// Header Row Cell Format Id
	HeaderRowDxfIdAttr *uint32

	// Data & Insert Row Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Cell Style
	HeaderRowCellStyleAttr *string

	// Data Area Style Name
	DataCellStyleAttr *string

	// Totals Row Style Name
	TotalsRowCellStyleAttr *string

	// Calculated Column Formula
	CalculatedColumnFormula *CT_TableFormula

	// Totals Row Formula
	TotalsRowFormula *CT_TableFormula

	// XML Column Properties
	XmlColumnPr *CT_XmlColumnPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ffccbe ST_ParameterType) Validate() error { return _ffccbe.ValidateWithPath("") }

func NewCT_TablePart() *CT_TablePart { _cegag := &CT_TablePart{}; return _cegag }

// ValidateWithPath validates the CT_Connections and its children, prefixing error messages with path
func (_cgbc *CT_Connections) ValidateWithPath(path string) error {
	for _cfed, _bbab := range _cgbc.Connection {
		if _bcdce := _bbab.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _cfed)); _bcdce != nil {
			return _bcdce
		}
	}
	return nil
}

func NewCT_PageSetup() *CT_PageSetup { _cbbbfd := &CT_PageSetup{}; return _cbbbfd }

func NewCT_WorkbookProtection() *CT_WorkbookProtection {
	_eaebd := &CT_WorkbookProtection{}
	return _eaebd
}

type CT_Top10 struct {

	// Top
	TopAttr *bool

	// Filter by Percent
	PercentAttr *bool

	// Top or Bottom Value
	ValAttr float64

	// Filter Value
	FilterValAttr *float64
}

func (_aeac *CT_CustomFilters) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _edgc := range start.Attr {
		if _edgc.Name.Local == "\u0061\u006e\u0064" {
			_dddc, _beafd := _a.ParseBool(_edgc.Value)
			if _beafd != nil {
				return _beafd
			}
			_aeac.AndAttr = &_dddc
			continue
		}
	}
_acfec:
	for {
		_gfda, _fgde := d.Token()
		if _fgde != nil {
			return _fgde
		}
		switch _bfdd := _gfda.(type) {
		case _gd.StartElement:
			switch _bfdd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_cgca := NewCT_CustomFilter()
				if _adffe := d.DecodeElement(_cgca, &_bfdd); _adffe != nil {
					return _adffe
				}
				_aeac.CustomFilter = append(_aeac.CustomFilter, _cgca)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025v", _bfdd.Name)
				if _egbfc := d.Skip(); _egbfc != nil {
					return _egbfc
				}
			}
		case _gd.EndElement:
			break _acfec
		case _gd.CharData:
		}
	}
	return nil
}

func (_bfage *CT_OleObject) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _agca := range start.Attr {
		if _agca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agca.Name.Local == "\u0069\u0064" || _agca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _agca.Name.Local == "\u0069\u0064" {
			_agbcgb, _ffbf := _agca.Value, error(nil)
			if _ffbf != nil {
				return _ffbf
			}
			_bfage.IdAttr = &_agbcgb
			continue
		}
		if _agca.Name.Local == "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074" {
			_bfage.DvAspectAttr.UnmarshalXMLAttr(_agca)
			continue
		}
		if _agca.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ceefc, _egagd := _agca.Value, error(nil)
			if _egagd != nil {
				return _egagd
			}
			_bfage.LinkAttr = &_ceefc
			continue
		}
		if _agca.Name.Local == "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e" {
			_bfage.OleUpdateAttr.UnmarshalXMLAttr(_agca)
			continue
		}
		if _agca.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064" {
			_fcbgb, _acdcb := _a.ParseBool(_agca.Value)
			if _acdcb != nil {
				return _acdcb
			}
			_bfage.AutoLoadAttr = &_fcbgb
			continue
		}
		if _agca.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_fbgbb, _dceef := _a.ParseUint(_agca.Value, 10, 32)
			if _dceef != nil {
				return _dceef
			}
			_bfage.ShapeIdAttr = uint32(_fbgbb)
			continue
		}
		if _agca.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_bcfbb, _bece := _agca.Value, error(nil)
			if _bece != nil {
				return _bece
			}
			_bfage.ProgIdAttr = &_bcfbb
			continue
		}
	}
_fdeaf:
	for {
		_fabbc, _fbggb := d.Token()
		if _fbggb != nil {
			return _fbggb
		}
		switch _acfcf := _fabbc.(type) {
		case _gd.StartElement:
			switch _acfcf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}:
				_bfage.ObjectPr = NewCT_ObjectPr()
				if _aagef := d.DecodeElement(_bfage.ObjectPr, &_acfcf); _aagef != nil {
					return _aagef
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _acfcf.Name)
				if _ffaad := d.Skip(); _ffaad != nil {
					return _ffaad
				}
			}
		case _gd.EndElement:
			break _fdeaf
		case _gd.CharData:
		}
	}
	return nil
}

func (_aagfe ST_SortType) ValidateWithPath(path string) error {
	switch _aagfe {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aagfe))
	}
	return nil
}

func (_eebfb *ST_SheetState) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_eebfb = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_eebfb = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_eebfb = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_eebfb = 3
	}
	return nil
}

func (_cabbf *ST_PaneState) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cabbf = 0
	case "\u0073\u0070\u006ci\u0074":
		*_cabbf = 1
	case "\u0066\u0072\u006f\u007a\u0065\u006e":
		*_cabbf = 2
	case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
		*_cabbf = 3
	}
	return nil
}

func (_dcdbf ST_Type) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dcdbf.String(), start)
}

func (_acff *CT_CellStyleXfs) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _efcea := range start.Attr {
		if _efcea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbfb, _fcfb := _a.ParseUint(_efcea.Value, 10, 32)
			if _fcfb != nil {
				return _fcfb
			}
			_fcda := uint32(_cbfb)
			_acff.CountAttr = &_fcda
			continue
		}
	}
_bga:
	for {
		_ecebc, _faff := d.Token()
		if _faff != nil {
			return _faff
		}
		switch _bfeg := _ecebc.(type) {
		case _gd.StartElement:
			switch _bfeg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_fdaac := NewCT_Xf()
				if _gebe := d.DecodeElement(_fdaac, &_bfeg); _gebe != nil {
					return _gebe
				}
				_acff.Xf = append(_acff.Xf, _fdaac)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073\u0020\u0025\u0076", _bfeg.Name)
				if _abeed := d.Skip(); _abeed != nil {
					return _abeed
				}
			}
		case _gd.EndElement:
			break _bga
		case _gd.CharData:
		}
	}
	return nil
}

func (_faaged ST_TotalsRowFunction) Validate() error { return _faaged.ValidateWithPath("") }

func (_fadga *ST_CfvoType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_fadga = 0
	case "\u006e\u0075\u006d":
		*_fadga = 1
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_fadga = 2
	case "\u006d\u0061\u0078":
		*_fadga = 3
	case "\u006d\u0069\u006e":
		*_fadga = 4
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_fadga = 5
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
		*_fadga = 6
	}
	return nil
}

type CT_ExternalLinkChoice struct {
	ExternalBook *CT_ExternalBook
	DdeLink      *CT_DdeLink
	OleLink      *CT_OleLink
}

func (_fefca *ST_TableStyleType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dfadc, _cddda := d.Token()
	if _cddda != nil {
		return _cddda
	}
	if _bbcbc, _ccgfc := _dfadc.(_gd.EndElement); _ccgfc && _bbcbc.Name == start.Name {
		*_fefca = 1
		return nil
	}
	if _gdecd, _bfffff := _dfadc.(_gd.CharData); !_bfffff {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfadc)
	} else {
		switch string(_gdecd) {
		case "":
			*_fefca = 0
		case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
			*_fefca = 1
		case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
			*_fefca = 2
		case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_fefca = 3
		case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_fefca = 4
		case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_fefca = 5
		case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
			*_fefca = 6
		case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
			*_fefca = 7
		case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
			*_fefca = 8
		case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
			*_fefca = 9
		case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
			*_fefca = 10
		case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
			*_fefca = 11
		case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
			*_fefca = 12
		case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
			*_fefca = 13
		case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_fefca = 14
		case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
			*_fefca = 15
		case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_fefca = 16
		case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_fefca = 17
		case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
			*_fefca = 18
		case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_fefca = 19
		case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
			*_fefca = 20
		case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_fefca = 21
		case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
			*_fefca = 22
		case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_fefca = 23
		case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_fefca = 24
		case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
			*_fefca = 25
		case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_fefca = 26
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
			*_fefca = 27
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
			*_fefca = 28
		}
	}
	_dfadc, _cddda = d.Token()
	if _cddda != nil {
		return _cddda
	}
	if _gadbc, _ggefe := _dfadc.(_gd.EndElement); _ggefe && _gadbc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfadc)
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_gdeffb *CT_TextField) ValidateWithPath(path string) error {
	if _ecggf := _gdeffb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ecggf != nil {
		return _ecggf
	}
	return nil
}

type CT_SheetProtection struct {

	// Legacy Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Sheet Locked
	SheetAttr *bool

	// Objects Locked
	ObjectsAttr *bool

	// Scenarios Locked
	ScenariosAttr *bool

	// Format Cells Locked
	FormatCellsAttr *bool

	// Format Columns Locked
	FormatColumnsAttr *bool

	// Format Rows Locked
	FormatRowsAttr *bool

	// Insert Columns Locked
	InsertColumnsAttr *bool

	// Insert Rows Locked
	InsertRowsAttr *bool

	// Insert Hyperlinks Locked
	InsertHyperlinksAttr *bool

	// Delete Columns Locked
	DeleteColumnsAttr *bool

	// Delete Rows Locked
	DeleteRowsAttr *bool

	// Select Locked Cells Locked
	SelectLockedCellsAttr *bool

	// Sort Locked
	SortAttr *bool

	// AutoFilter Locked
	AutoFilterAttr *bool

	// Pivot Tables Locked
	PivotTablesAttr *bool

	// Select Unlocked Cells Locked
	SelectUnlockedCellsAttr *bool
}

func (_bacade *CT_NumFmt) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egacc := range start.Attr {
		if _egacc.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_fdfad, _daccg := _a.ParseUint(_egacc.Value, 10, 32)
			if _daccg != nil {
				return _daccg
			}
			_bacade.NumFmtIdAttr = uint32(_fdfad)
			continue
		}
		if _egacc.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065" {
			_baegf, _gbdcg := _egacc.Value, error(nil)
			if _gbdcg != nil {
				return _gbdcg
			}
			_bacade.FormatCodeAttr = _baegf
			continue
		}
	}
	for {
		_bfcgd, _bcdg := d.Token()
		if _bcdg != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004e\u0075\u006dF\u006d\u0074\u003a\u0020\u0025\u0073", _bcdg)
		}
		if _baafb, _abeg := _bfcgd.(_gd.EndElement); _abeg && _baafb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_acfcd *CT_VolTypes) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_gdbea:
	for {
		_dgdaee, _bfge := d.Token()
		if _bfge != nil {
			return _bfge
		}
		switch _bfcbc := _dgdaee.(type) {
		case _gd.StartElement:
			switch _bfcbc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_bfbfd := NewCT_VolType()
				if _cebde := d.DecodeElement(_bfbfd, &_bfcbc); _cebde != nil {
					return _cebde
				}
				_acfcd.VolType = append(_acfcd.VolType, _bfbfd)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acfcd.ExtLst = NewCT_ExtensionList()
				if _becca := d.DecodeElement(_acfcd.ExtLst, &_bfcbc); _becca != nil {
					return _becca
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _bfcbc.Name)
				if _aeafgd := d.Skip(); _aeafgd != nil {
					return _aeafgd
				}
			}
		case _gd.EndElement:
			break _gdbea
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Sheets struct {

	// Sheet Information
	Sheet []*CT_Sheet
}

// ValidateWithPath validates the CT_SheetPr and its children, prefixing error messages with path
func (_afbce *CT_SheetPr) ValidateWithPath(path string) error {
	if _afbce.TabColor != nil {
		if _dgdffc := _afbce.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _dgdffc != nil {
			return _dgdffc
		}
	}
	if _afbce.OutlinePr != nil {
		if _fbbf := _afbce.OutlinePr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"); _fbbf != nil {
			return _fbbf
		}
	}
	if _afbce.PageSetUpPr != nil {
		if _dcfbdg := _afbce.PageSetUpPr.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"); _dcfbdg != nil {
			return _dcfbdg
		}
	}
	return nil
}

func (_egcge ST_UpdateLinks) ValidateWithPath(path string) error {
	switch _egcge {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egcge))
	}
	return nil
}

type CT_FileSharing struct {

	// Read Only Recommended
	ReadOnlyRecommendedAttr *bool

	// User Name
	UserNameAttr *string

	// Write Reservation Password
	ReservationPasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32
}

// Validate validates the CT_Users and its children
func (_abbd *CT_Users) Validate() error {
	return _abbd.ValidateWithPath("\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073")
}

func (_bdgcb *ST_MdxSetOrder) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bdgcb = 0
	case "\u0075":
		*_bdgcb = 1
	case "\u0061":
		*_bdgcb = 2
	case "\u0064":
		*_bdgcb = 3
	case "\u0061\u0061":
		*_bdgcb = 4
	case "\u0061\u0064":
		*_bdgcb = 5
	case "\u006e\u0061":
		*_bdgcb = 6
	case "\u006e\u0064":
		*_bdgcb = 7
	}
	return nil
}

func (_ecggb ST_PivotFilterType) ValidateWithPath(path string) error {
	switch _ecggb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecggb))
	}
	return nil
}

func NewCT_Hyperlinks() *CT_Hyperlinks { _gedbe := &CT_Hyperlinks{}; return _gedbe }

func (_degdb *CT_VolMain) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072s\u0074"}, Value: _b.Sprintf("\u0025\u0076", _degdb.FirstAttr)})
	e.EncodeToken(start)
	_baecb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003at\u0070"}}
	for _, _aebbe := range _degdb.Tp {
		e.EncodeElement(_aebbe, _baecb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_IndexedColors and its children
func (_bgdea *CT_IndexedColors) Validate() error {
	return _bgdea.ValidateWithPath("\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073")
}

// Validate validates the CT_PivotArea and its children
func (_bcbda *CT_PivotArea) Validate() error {
	return _bcbda.ValidateWithPath("\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061")
}

type ST_CellType byte

func (_fcaccf *EG_ExtensionList) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_ebgfa:
	for {
		_bdadde, _aacagd := d.Token()
		if _aacagd != nil {
			return _aacagd
		}
		switch _bdgef := _bdadde.(type) {
		case _gd.StartElement:
			switch _bdgef.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_gcede := NewCT_Extension()
				if _dccbd := d.DecodeElement(_gcede, &_bdgef); _dccbd != nil {
					return _dccbd
				}
				_fcaccf.Ext = append(_fcaccf.Ext, _gcede)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _bdgef.Name)
				if _bbbb := d.Skip(); _bbbb != nil {
					return _bbbb
				}
			}
		case _gd.EndElement:
			break _ebgfa
		case _gd.CharData:
		}
	}
	return nil
}

func (_dcdbc *CT_Reviewed) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ggdbg := range start.Attr {
		if _ggdbg.Name.Local == "\u0072\u0049\u0064" {
			_becfe, _aadfe := _a.ParseUint(_ggdbg.Value, 10, 32)
			if _aadfe != nil {
				return _aadfe
			}
			_dcdbc.RIdAttr = uint32(_becfe)
			continue
		}
	}
	for {
		_abeag, _aedcc := d.Token()
		if _aedcc != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u003a\u0020\u0025\u0073", _aedcc)
		}
		if _daecd, _cgebag := _abeag.(_gd.EndElement); _cgebag && _daecd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_DrawingHF struct {
	IdAttr string

	// Left Header for Odd Pages
	LhoAttr *uint32

	// Left Header for Even Pages
	LheAttr *uint32

	// Left Header for First Page
	LhfAttr *uint32

	// Center Header for Odd Pages
	ChoAttr *uint32

	// Center Header for Even Pages
	CheAttr *uint32

	// Center Header for First Page
	ChfAttr *uint32

	// Right Header for Odd Pages
	RhoAttr *uint32

	// Right Header for Even Pages
	RheAttr *uint32

	// Right Header for First Page
	RhfAttr *uint32

	// Left Footer for Odd Pages
	LfoAttr *uint32

	// Left Footer for Even Pages
	LfeAttr *uint32

	// Left Footer for First Page
	LffAttr *uint32

	// Center Footer for Odd Pages
	CfoAttr *uint32

	// Center Footer for Even Pages
	CfeAttr *uint32

	// Center Footer for First Page
	CffAttr *uint32

	// Right Footer for Odd Pages
	RfoAttr *uint32

	// Right Footer for Even Pages
	RfeAttr *uint32

	// Right Footer for First Page
	RffAttr *uint32
}

type CT_WebPublishing struct {

	// Use CSS
	CssAttr *bool

	// Thicket
	ThicketAttr *bool

	// Enable Long File Names
	LongFileNamesAttr *bool

	// VML in Browsers
	VmlAttr *bool

	// Allow PNG
	AllowPngAttr *bool

	// Target Screen Size
	TargetScreenSizeAttr ST_TargetScreenSize

	// DPI
	DpiAttr *uint32

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string
}

func (_aadgb *ST_rwColActionType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bcfce, _abedff := d.Token()
	if _abedff != nil {
		return _abedff
	}
	if _eeafdd, _eeebe := _bcfce.(_gd.EndElement); _eeebe && _eeafdd.Name == start.Name {
		*_aadgb = 1
		return nil
	}
	if _acbddd, _bebeef := _bcfce.(_gd.CharData); !_bebeef {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcfce)
	} else {
		switch string(_acbddd) {
		case "":
			*_aadgb = 0
		case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
			*_aadgb = 1
		case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
			*_aadgb = 2
		case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
			*_aadgb = 3
		case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
			*_aadgb = 4
		}
	}
	_bcfce, _abedff = d.Token()
	if _abedff != nil {
		return _abedff
	}
	if _dbaaf, _badgb := _bcfce.(_gd.EndElement); _badgb && _dbaaf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcfce)
}

func (_adebe ST_PivotAreaType) Validate() error { return _adebe.ValidateWithPath("") }

// Validate validates the CT_CellWatch and its children
func (_fbeca *CT_CellWatch) Validate() error {
	return _fbeca.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068")
}

func (_cggfcf ST_PaneState) ValidateWithPath(path string) error {
	switch _cggfcf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cggfcf))
	}
	return nil
}

// ValidateWithPath validates the CT_Tuples and its children, prefixing error messages with path
func (_dbagdf *CT_Tuples) ValidateWithPath(path string) error {
	for _aeacfb, _fddef := range _dbagdf.Tpl {
		if _ggbcc := _fddef.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0054\u0070\u006c\u005b\u0025\u0064\u005d", path, _aeacfb)); _ggbcc != nil {
			return _ggbcc
		}
	}
	return nil
}

// Validate validates the CT_Member and its children
func (_ffee *CT_Member) Validate() error {
	return _ffee.ValidateWithPath("\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r")
}

func NewCT_colItems() *CT_colItems { _effgbce := &CT_colItems{}; return _effgbce }

func NewCT_MeasureDimensionMaps() *CT_MeasureDimensionMaps {
	_ggecag := &CT_MeasureDimensionMaps{}
	return _ggecag
}

func (_fgbgf ST_Axis) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_fdfdg := _gd.Attr{}
	_fdfdg.Name = name
	switch _fgbgf {
	case ST_AxisUnset:
		_fdfdg.Value = ""
	case ST_AxisAxisRow:
		_fdfdg.Value = "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case ST_AxisAxisCol:
		_fdfdg.Value = "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case ST_AxisAxisPage:
		_fdfdg.Value = "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case ST_AxisAxisValues:
		_fdfdg.Value = "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _fdfdg, nil
}

func NewCT_WebPr() *CT_WebPr { _gcgfbb := &CT_WebPr{}; return _gcgfbb }

func (_edfdca ST_RevisionAction) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dcgge := _gd.Attr{}
	_dcgge.Name = name
	switch _edfdca {
	case ST_RevisionActionUnset:
		_dcgge.Value = ""
	case ST_RevisionActionAdd:
		_dcgge.Value = "\u0061\u0064\u0064"
	case ST_RevisionActionDelete:
		_dcgge.Value = "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return _dcgge, nil
}

// ValidateWithPath validates the CT_Worksheet and its children, prefixing error messages with path
func (_cfaff *CT_Worksheet) ValidateWithPath(path string) error {
	if _cfaff.SheetPr != nil {
		if _dgfae := _cfaff.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _dgfae != nil {
			return _dgfae
		}
	}
	if _cfaff.Dimension != nil {
		if _fdfgca := _cfaff.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _fdfgca != nil {
			return _fdfgca
		}
	}
	if _cfaff.SheetViews != nil {
		if _gfbce := _cfaff.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _gfbce != nil {
			return _gfbce
		}
	}
	if _cfaff.SheetFormatPr != nil {
		if _fafgd := _cfaff.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _fafgd != nil {
			return _fafgd
		}
	}
	for _gadba, _dbbgcf := range _cfaff.Cols {
		if _gbead := _dbbgcf.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _gadba)); _gbead != nil {
			return _gbead
		}
	}
	if _aegefb := _cfaff.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _aegefb != nil {
		return _aegefb
	}
	if _cfaff.SheetCalcPr != nil {
		if _cadgf := _cfaff.SheetCalcPr.ValidateWithPath(path + "\u002f\u0053\u0068e\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"); _cadgf != nil {
			return _cadgf
		}
	}
	if _cfaff.SheetProtection != nil {
		if _cabcfa := _cfaff.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _cabcfa != nil {
			return _cabcfa
		}
	}
	if _cfaff.ProtectedRanges != nil {
		if _edfba := _cfaff.ProtectedRanges.ValidateWithPath(path + "\u002f\u0050r\u006f\u0074\u0065c\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"); _edfba != nil {
			return _edfba
		}
	}
	if _cfaff.Scenarios != nil {
		if _aedgaa := _cfaff.Scenarios.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"); _aedgaa != nil {
			return _aedgaa
		}
	}
	if _cfaff.AutoFilter != nil {
		if _dgcge := _cfaff.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _dgcge != nil {
			return _dgcge
		}
	}
	if _cfaff.SortState != nil {
		if _becbc := _cfaff.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _becbc != nil {
			return _becbc
		}
	}
	if _cfaff.DataConsolidate != nil {
		if _bedged := _cfaff.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _bedged != nil {
			return _bedged
		}
	}
	if _cfaff.CustomSheetViews != nil {
		if _bfffg := _cfaff.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _bfffg != nil {
			return _bfffg
		}
	}
	if _cfaff.MergeCells != nil {
		if _ddfed := _cfaff.MergeCells.ValidateWithPath(path + "/\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"); _ddfed != nil {
			return _ddfed
		}
	}
	if _cfaff.PhoneticPr != nil {
		if _fegba := _cfaff.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _fegba != nil {
			return _fegba
		}
	}
	for _dccgc, _fggcc := range _cfaff.ConditionalFormatting {
		if _fgebe := _fggcc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _dccgc)); _fgebe != nil {
			return _fgebe
		}
	}
	if _cfaff.DataValidations != nil {
		if _cdeebc := _cfaff.DataValidations.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"); _cdeebc != nil {
			return _cdeebc
		}
	}
	if _cfaff.Hyperlinks != nil {
		if _bgdec := _cfaff.Hyperlinks.ValidateWithPath(path + "/\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"); _bgdec != nil {
			return _bgdec
		}
	}
	if _cfaff.PrintOptions != nil {
		if _afbed := _cfaff.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _afbed != nil {
			return _afbed
		}
	}
	if _cfaff.PageMargins != nil {
		if _ccffg := _cfaff.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _ccffg != nil {
			return _ccffg
		}
	}
	if _cfaff.PageSetup != nil {
		if _ebdda := _cfaff.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _ebdda != nil {
			return _ebdda
		}
	}
	if _cfaff.HeaderFooter != nil {
		if _bfgdf := _cfaff.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _bfgdf != nil {
			return _bfgdf
		}
	}
	if _cfaff.RowBreaks != nil {
		if _cfffa := _cfaff.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _cfffa != nil {
			return _cfffa
		}
	}
	if _cfaff.ColBreaks != nil {
		if _bcbcba := _cfaff.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _bcbcba != nil {
			return _bcbcba
		}
	}
	if _cfaff.CustomProperties != nil {
		if _egfdd := _cfaff.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _egfdd != nil {
			return _egfdd
		}
	}
	if _cfaff.CellWatches != nil {
		if _edceg := _cfaff.CellWatches.ValidateWithPath(path + "\u002f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"); _edceg != nil {
			return _edceg
		}
	}
	if _cfaff.IgnoredErrors != nil {
		if _dfbee := _cfaff.IgnoredErrors.ValidateWithPath(path + "\u002f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045r\u0072\u006f\u0072\u0073"); _dfbee != nil {
			return _dfbee
		}
	}
	if _cfaff.SmartTags != nil {
		if _eebgd := _cfaff.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _eebgd != nil {
			return _eebgd
		}
	}
	if _cfaff.Drawing != nil {
		if _bdbfecf := _cfaff.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _bdbfecf != nil {
			return _bdbfecf
		}
	}
	if _cfaff.LegacyDrawing != nil {
		if _cdabbe := _cfaff.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _cdabbe != nil {
			return _cdabbe
		}
	}
	if _cfaff.LegacyDrawingHF != nil {
		if _gbgfg := _cfaff.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gbgfg != nil {
			return _gbgfg
		}
	}
	if _cfaff.DrawingHF != nil {
		if _ecgbc := _cfaff.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ecgbc != nil {
			return _ecgbc
		}
	}
	if _cfaff.Picture != nil {
		if _bbae := _cfaff.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _bbae != nil {
			return _bbae
		}
	}
	if _cfaff.OleObjects != nil {
		if _fcacab := _cfaff.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _fcacab != nil {
			return _fcacab
		}
	}
	if _cfaff.Controls != nil {
		if _ddff := _cfaff.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _ddff != nil {
			return _ddff
		}
	}
	if _cfaff.WebPublishItems != nil {
		if _bcbbdg := _cfaff.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _bcbbdg != nil {
			return _bcbbdg
		}
	}
	if _cfaff.TableParts != nil {
		if _dbbdg := _cfaff.TableParts.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"); _dbbdg != nil {
			return _dbbdg
		}
	}
	if _cfaff.ExtLst != nil {
		if _bgggc := _cfaff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgggc != nil {
			return _bgggc
		}
	}
	return nil
}

func (_fgbdf *CT_PageSetup) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fgbdf.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.PaperSizeAttr)})
	}
	if _fgbdf.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.PaperHeightAttr)})
	}
	if _fgbdf.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.PaperWidthAttr)})
	}
	if _fgbdf.ScaleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.ScaleAttr)})
	}
	if _fgbdf.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.FirstPageNumberAttr)})
	}
	if _fgbdf.FitToWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.FitToWidthAttr)})
	}
	if _fgbdf.FitToHeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.FitToHeightAttr)})
	}
	if _fgbdf.PageOrderAttr != ST_PageOrderUnset {
		_abgga, _ageag := _fgbdf.PageOrderAttr.MarshalXMLAttr(_gd.Name{Local: "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r"})
		if _ageag != nil {
			return _ageag
		}
		start.Attr = append(start.Attr, _abgga)
	}
	if _fgbdf.OrientationAttr != ST_OrientationUnset {
		_gcgda, _dbafa := _fgbdf.OrientationAttr.MarshalXMLAttr(_gd.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _dbafa != nil {
			return _dbafa
		}
		start.Attr = append(start.Attr, _gcgda)
	}
	if _fgbdf.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgbdf.UsePrinterDefaultsAttr))})
	}
	if _fgbdf.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgbdf.BlackAndWhiteAttr))})
	}
	if _fgbdf.DraftAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgbdf.DraftAttr))})
	}
	if _fgbdf.CellCommentsAttr != ST_CellCommentsUnset {
		_geceac, _bdagg := _fgbdf.CellCommentsAttr.MarshalXMLAttr(_gd.Name{Local: "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _bdagg != nil {
			return _bdagg
		}
		start.Attr = append(start.Attr, _geceac)
	}
	if _fgbdf.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgbdf.UseFirstPageNumberAttr))})
	}
	if _fgbdf.ErrorsAttr != ST_PrintErrorUnset {
		_ggadd, _gdcba := _fgbdf.ErrorsAttr.MarshalXMLAttr(_gd.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0073"})
		if _gdcba != nil {
			return _gdcba
		}
		start.Attr = append(start.Attr, _ggadd)
	}
	if _fgbdf.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.HorizontalDpiAttr)})
	}
	if _fgbdf.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.VerticalDpiAttr)})
	}
	if _fgbdf.CopiesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.CopiesAttr)})
	}
	if _fgbdf.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fgbdf.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gbaeb ST_Scope) Validate() error { return _gbaeb.ValidateWithPath("") }

const (
	ST_PaneStateUnset       ST_PaneState = 0
	ST_PaneStateSplit       ST_PaneState = 1
	ST_PaneStateFrozen      ST_PaneState = 2
	ST_PaneStateFrozenSplit ST_PaneState = 3
)

func (_acfff *CT_Format) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_acfff.PivotArea = NewCT_PivotArea()
	for _, _bfffcd := range start.Attr {
		if _bfffcd.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_acfff.ActionAttr.UnmarshalXMLAttr(_bfffcd)
			continue
		}
		if _bfffcd.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_fgdec, _gbeac := _a.ParseUint(_bfffcd.Value, 10, 32)
			if _gbeac != nil {
				return _gbeac
			}
			_acecc := uint32(_fgdec)
			_acfff.DxfIdAttr = &_acecc
			continue
		}
	}
_gebeb:
	for {
		_egfd, _bdab := d.Token()
		if _bdab != nil {
			return _bdab
		}
		switch _ggcca := _egfd.(type) {
		case _gd.StartElement:
			switch _ggcca.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _dcfgc := d.DecodeElement(_acfff.PivotArea, &_ggcca); _dcfgc != nil {
					return _dcfgc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acfff.ExtLst = NewCT_ExtensionList()
				if _ccbfd := d.DecodeElement(_acfff.ExtLst, &_ggcca); _ccbfd != nil {
					return _ccbfd
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u006f\u0072m\u0061\u0074 \u0025\u0076", _ggcca.Name)
				if _aacga := d.Skip(); _aacga != nil {
					return _aacga
				}
			}
		case _gd.EndElement:
			break _gebeb
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_HierarchyUsage() *CT_HierarchyUsage { _bgabb := &CT_HierarchyUsage{}; return _bgabb }

// ValidateWithPath validates the CT_SingleXmlCells and its children, prefixing error messages with path
func (_cdgdf *CT_SingleXmlCells) ValidateWithPath(path string) error {
	for _gebae, _fbaebd := range _cdgdf.SingleXmlCell {
		if _abdbdb := _fbaebd.ValidateWithPath(_b.Sprintf("%\u0073/\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006dl\u0043\u0065\u006c\u006c[%\u0064\u005d", path, _gebae)); _abdbdb != nil {
			return _abdbdb
		}
	}
	return nil
}

func NewSingleXmlCells() *SingleXmlCells {
	_cgccd := &SingleXmlCells{}
	_cgccd.CT_SingleXmlCells = *NewCT_SingleXmlCells()
	return _cgccd
}

type CT_ControlPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Recalculation Flag
	RecalcAlwaysAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Linked Formula
	LinkedCellAttr *string

	// List Items Source Range
	ListFillRangeAttr *string

	// Image Format
	CfAttr *string
	IdAttr *string

	// Object Cell Anchor
	Anchor *CT_ObjectAnchor
}

func (_adefeb *CT_SheetFormatPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gbgabc := range start.Attr {
		if _gbgabc.Name.Local == "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_cebga, _ebfae := _a.ParseUint(_gbgabc.Value, 10, 32)
			if _ebfae != nil {
				return _ebfae
			}
			_eedfb := uint32(_cebga)
			_adefeb.BaseColWidthAttr = &_eedfb
			continue
		}
		if _gbgabc.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_afggcg, _cgedc := _a.ParseFloat(_gbgabc.Value, 64)
			if _cgedc != nil {
				return _cgedc
			}
			_adefeb.DefaultColWidthAttr = &_afggcg
			continue
		}
		if _gbgabc.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_eaadab, _ffcccg := _a.ParseFloat(_gbgabc.Value, 64)
			if _ffcccg != nil {
				return _ffcccg
			}
			_adefeb.DefaultRowHeightAttr = _eaadab
			continue
		}
		if _gbgabc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_babba, _gfbgd := _a.ParseBool(_gbgabc.Value)
			if _gfbgd != nil {
				return _gfbgd
			}
			_adefeb.CustomHeightAttr = &_babba
			continue
		}
		if _gbgabc.Name.Local == "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_deggc, _ecgee := _a.ParseBool(_gbgabc.Value)
			if _ecgee != nil {
				return _ecgee
			}
			_adefeb.ZeroHeightAttr = &_deggc
			continue
		}
		if _gbgabc.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_gacddc, _ddebe := _a.ParseBool(_gbgabc.Value)
			if _ddebe != nil {
				return _ddebe
			}
			_adefeb.ThickTopAttr = &_gacddc
			continue
		}
		if _gbgabc.Name.Local == "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d" {
			_cfecbg, _bdbdg := _a.ParseBool(_gbgabc.Value)
			if _bdbdg != nil {
				return _bdbdg
			}
			_adefeb.ThickBottomAttr = &_cfecbg
			continue
		}
		if _gbgabc.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077" {
			_ccbfg, _ffbdc := _a.ParseUint(_gbgabc.Value, 10, 8)
			if _ffbdc != nil {
				return _ffbdc
			}
			_adafad := uint8(_ccbfg)
			_adefeb.OutlineLevelRowAttr = &_adafad
			continue
		}
		if _gbgabc.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c" {
			_dafef, _eaggeb := _a.ParseUint(_gbgabc.Value, 10, 8)
			if _eaggeb != nil {
				return _eaggeb
			}
			_efggf := uint8(_dafef)
			_adefeb.OutlineLevelColAttr = &_efggf
			continue
		}
	}
	for {
		_fgcag, _fefcgf := d.Token()
		if _fefcgf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065t\u0046o\u0072\u006d\u0061\u0074\u0050\u0072\u003a \u0025\u0073", _fefcgf)
		}
		if _fbcaf, _fbabf := _fgcag.(_gd.EndElement); _fbabf && _fbcaf.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Sheets() *CT_Sheets { _gcfaf := &CT_Sheets{}; return _gcfaf }

func NewCT_Dimensions() *CT_Dimensions { _acecf := &CT_Dimensions{}; return _acecf }

// Validate validates the CT_ChartsheetPr and its children
func (_daaf *CT_ChartsheetPr) Validate() error {
	return _daaf.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072")
}

type CT_NumFmts struct {

	// Number Format Count
	CountAttr *uint32

	// Number Formats
	NumFmt []*CT_NumFmt
}

type ST_IconSetType byte

type CT_PivotHierarchies struct {

	// OLAP Hierarchy Count
	CountAttr *uint32

	// OLAP Hierarchy
	PivotHierarchy []*CT_PivotHierarchy
}

func NewCT_MeasureGroups() *CT_MeasureGroups { _gcada := &CT_MeasureGroups{}; return _gcada }

func (_eaadcd ST_BorderStyle) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_eaadcd.String(), start)
}

// ValidateWithPath validates the CT_DataBinding and its children, prefixing error messages with path
func (_acfdb *CT_DataBinding) ValidateWithPath(path string) error { return nil }

func (_baccf ST_HtmlFmt) String() string {
	switch _baccf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0072\u0074\u0066"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

// Validate validates the CT_SheetIdMap and its children
func (_cfffb *CT_SheetIdMap) Validate() error {
	return _cfffb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070")
}

func (_cbfdcb ST_GroupBy) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dbcce := _gd.Attr{}
	_dbcce.Name = name
	switch _cbfdcb {
	case ST_GroupByUnset:
		_dbcce.Value = ""
	case ST_GroupByRange:
		_dbcce.Value = "\u0072\u0061\u006eg\u0065"
	case ST_GroupBySeconds:
		_dbcce.Value = "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case ST_GroupByMinutes:
		_dbcce.Value = "\u006di\u006e\u0075\u0074\u0065\u0073"
	case ST_GroupByHours:
		_dbcce.Value = "\u0068\u006f\u0075r\u0073"
	case ST_GroupByDays:
		_dbcce.Value = "\u0064\u0061\u0079\u0073"
	case ST_GroupByMonths:
		_dbcce.Value = "\u006d\u006f\u006e\u0074\u0068\u0073"
	case ST_GroupByQuarters:
		_dbcce.Value = "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case ST_GroupByYears:
		_dbcce.Value = "\u0079\u0065\u0061r\u0073"
	}
	return _dbcce, nil
}

type CT_Rst struct {

	// Text
	T *string

	// Rich Text Run
	R []*CT_RElt

	// Phonetic Run
	RPh []*CT_PhoneticRun

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr
}

func NewCT_CacheHierarchies() *CT_CacheHierarchies { _fecb := &CT_CacheHierarchies{}; return _fecb }

func (_ggbg *CT_PivotFilters) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ggbg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ggbg.CountAttr)})
	}
	e.EncodeToken(start)
	if _ggbg.Filter != nil {
		_faage := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _bcfcg := range _ggbg.Filter {
			e.EncodeElement(_bcfcg, _faage)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalSheetDataSet and its children
func (_edaag *CT_ExternalSheetDataSet) Validate() error {
	return _edaag.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074")
}

// ValidateWithPath validates the CT_PrintOptions and its children, prefixing error messages with path
func (_cagge *CT_PrintOptions) ValidateWithPath(path string) error { return nil }

type ST_PageOrder byte

func (_fbegc ST_DdeValueType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_fbegc.String(), start)
}

func (_cgbacd *ST_FormatAction) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gcceca, _bfbfdg := d.Token()
	if _bfbfdg != nil {
		return _bfbfdg
	}
	if _bfagb, _ebcacd := _gcceca.(_gd.EndElement); _ebcacd && _bfagb.Name == start.Name {
		*_cgbacd = 1
		return nil
	}
	if _fffad, _ecdab := _gcceca.(_gd.CharData); !_ecdab {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcceca)
	} else {
		switch string(_fffad) {
		case "":
			*_cgbacd = 0
		case "\u0062\u006c\u0061n\u006b":
			*_cgbacd = 1
		case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
			*_cgbacd = 2
		case "\u0064\u0072\u0069l\u006c":
			*_cgbacd = 3
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_cgbacd = 4
		}
	}
	_gcceca, _bfbfdg = d.Token()
	if _bfbfdg != nil {
		return _bfbfdg
	}
	if _bebgc, _bcceac := _gcceca.(_gd.EndElement); _bcceac && _bebgc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcceca)
}

func (_dceeae ST_CfType) Validate() error { return _dceeae.ValidateWithPath("") }

type CT_CalculatedMembers struct {

	// Calculated Members Count
	CountAttr *uint32

	// Calculated Member
	CalculatedMember []*CT_CalculatedMember
}

func NewCT_SortState() *CT_SortState { _febca := &CT_SortState{}; return _febca }

func (_afdbb *CT_Selection) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _afdbb.PaneAttr != ST_PaneUnset {
		_eafede, _adeeb := _afdbb.PaneAttr.MarshalXMLAttr(_gd.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _adeeb != nil {
			return _adeeb
		}
		start.Attr = append(start.Attr, _eafede)
	}
	if _afdbb.ActiveCellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_afdbb.ActiveCellAttr)})
	}
	if _afdbb.ActiveCellIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_afdbb.ActiveCellIdAttr)})
	}
	if _afdbb.SqrefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_afdbb.SqrefAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ebbgc *Table) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ebbgc.CT_Table = *NewCT_Table()
	for _, _gefdcc := range start.Attr {
		if _gefdcc.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_fccge, _cefcaa := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _cefcaa != nil {
				return _cefcaa
			}
			_fddfd := uint32(_fccge)
			_ebbgc.DataDxfIdAttr = &_fddfd
			continue
		}
		if _gefdcc.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_ffdad, _dcgfgd := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _dcgfgd != nil {
				return _dcgfgd
			}
			_cacae := uint32(_ffdad)
			_ebbgc.TotalsRowDxfIdAttr = &_cacae
			continue
		}
		if _gefdcc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dggcb, _cgceg := _gefdcc.Value, error(nil)
			if _cgceg != nil {
				return _cgceg
			}
			_ebbgc.NameAttr = &_dggcb
			continue
		}
		if _gefdcc.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_aefaf, _abgcd := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _abgcd != nil {
				return _abgcd
			}
			_fecba := uint32(_aefaf)
			_ebbgc.HeaderRowBorderDxfIdAttr = &_fecba
			continue
		}
		if _gefdcc.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_ggaefa, _cbgada := _gefdcc.Value, error(nil)
			if _cbgada != nil {
				return _cbgada
			}
			_ebbgc.CommentAttr = &_ggaefa
			continue
		}
		if _gefdcc.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_caabbg, _efcfc := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _efcfc != nil {
				return _efcfc
			}
			_caggd := uint32(_caabbg)
			_ebbgc.TableBorderDxfIdAttr = &_caggd
			continue
		}
		if _gefdcc.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_ebbgc.TableTypeAttr.UnmarshalXMLAttr(_gefdcc)
			continue
		}
		if _gefdcc.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_feadd, _aadeb := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _aadeb != nil {
				return _aadeb
			}
			_bbcae := uint32(_feadd)
			_ebbgc.TotalsRowBorderDxfIdAttr = &_bbcae
			continue
		}
		if _gefdcc.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_egcec, _bfgag := _a.ParseBool(_gefdcc.Value)
			if _bfgag != nil {
				return _bfgag
			}
			_ebbgc.InsertRowAttr = &_egcec
			continue
		}
		if _gefdcc.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_bggeb, _ddaac := _gefdcc.Value, error(nil)
			if _ddaac != nil {
				return _ddaac
			}
			_ebbgc.HeaderRowCellStyleAttr = &_bggeb
			continue
		}
		if _gefdcc.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_dcbdb, _ffgef := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _ffgef != nil {
				return _ffgef
			}
			_egbbf := uint32(_dcbdb)
			_ebbgc.TotalsRowCountAttr = &_egbbf
			continue
		}
		if _gefdcc.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_cdegd, _gacaag := _gefdcc.Value, error(nil)
			if _gacaag != nil {
				return _gacaag
			}
			_ebbgc.TotalsRowCellStyleAttr = &_cdegd
			continue
		}
		if _gefdcc.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_beebbg, _dbccaf := _gefdcc.Value, error(nil)
			if _dbccaf != nil {
				return _dbccaf
			}
			_ebbgc.DisplayNameAttr = _beebbg
			continue
		}
		if _gefdcc.Name.Local == "\u0069\u0064" {
			_gddgb, _addfad := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _addfad != nil {
				return _addfad
			}
			_ebbgc.IdAttr = uint32(_gddgb)
			continue
		}
		if _gefdcc.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_cdeda, _ebbbad := _gefdcc.Value, error(nil)
			if _ebbbad != nil {
				return _ebbbad
			}
			_ebbgc.DataCellStyleAttr = &_cdeda
			continue
		}
		if _gefdcc.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_ddgef, _bffbff := _a.ParseBool(_gefdcc.Value)
			if _bffbff != nil {
				return _bffbff
			}
			_ebbgc.PublishedAttr = &_ddgef
			continue
		}
		if _gefdcc.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_efaee, _bfaab := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _bfaab != nil {
				return _bfaab
			}
			_cafgdg := uint32(_efaee)
			_ebbgc.ConnectionIdAttr = &_cafgdg
			continue
		}
		if _gefdcc.Name.Local == "\u0072\u0065\u0066" {
			_bffgd, _afdbge := _gefdcc.Value, error(nil)
			if _afdbge != nil {
				return _afdbge
			}
			_ebbgc.RefAttr = _bffgd
			continue
		}
		if _gefdcc.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_ggeadf, _edcbb := _a.ParseBool(_gefdcc.Value)
			if _edcbb != nil {
				return _edcbb
			}
			_ebbgc.InsertRowShiftAttr = &_ggeadf
			continue
		}
		if _gefdcc.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_cegfbb, _cegdg := _a.ParseBool(_gefdcc.Value)
			if _cegdg != nil {
				return _cegdg
			}
			_ebbgc.TotalsRowShownAttr = &_cegfbb
			continue
		}
		if _gefdcc.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_faefe, _gbaaec := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _gbaaec != nil {
				return _gbaaec
			}
			_aegcdf := uint32(_faefe)
			_ebbgc.HeaderRowDxfIdAttr = &_aegcdf
			continue
		}
		if _gefdcc.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_fgdgc, _ddadd := _a.ParseUint(_gefdcc.Value, 10, 32)
			if _ddadd != nil {
				return _ddadd
			}
			_adgca := uint32(_fgdgc)
			_ebbgc.HeaderRowCountAttr = &_adgca
			continue
		}
	}
_cgfeb:
	for {
		_gfcaf, _efaage := d.Token()
		if _efaage != nil {
			return _efaage
		}
		switch _fggbac := _gfcaf.(type) {
		case _gd.StartElement:
			switch _fggbac.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_ebbgc.AutoFilter = NewCT_AutoFilter()
				if _ggagaa := d.DecodeElement(_ebbgc.AutoFilter, &_fggbac); _ggagaa != nil {
					return _ggagaa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_ebbgc.SortState = NewCT_SortState()
				if _bbcbbd := d.DecodeElement(_ebbgc.SortState, &_fggbac); _bbcbbd != nil {
					return _bbcbbd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _bfeaf := d.DecodeElement(_ebbgc.TableColumns, &_fggbac); _bfeaf != nil {
					return _bfeaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_ebbgc.TableStyleInfo = NewCT_TableStyleInfo()
				if _edddg := d.DecodeElement(_ebbgc.TableStyleInfo, &_fggbac); _edddg != nil {
					return _edddg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebbgc.ExtLst = NewCT_ExtensionList()
				if _bgcab := d.DecodeElement(_ebbgc.ExtLst, &_fggbac); _bgcab != nil {
					return _bgcab
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0061\u0062l\u0065 \u0025\u0076", _fggbac.Name)
				if _dbbfa := d.Skip(); _dbbfa != nil {
					return _dbbfa
				}
			}
		case _gd.EndElement:
			break _cgfeb
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_colItems and its children
func (_eebaf *CT_colItems) Validate() error {
	return _eebaf.ValidateWithPath("C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073")
}

func (_ccbcbb *CT_VolTopic) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ccbcbb.TAttr != ST_VolValueTypeUnset {
		_fddfef, _aadce := _ccbcbb.TAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074"})
		if _aadce != nil {
			return _aadce
		}
		start.Attr = append(start.Attr, _fddfef)
	}
	e.EncodeToken(start)
	_fddaf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0076"}}
	_e.AddPreserveSpaceAttr(&_fddaf, _ccbcbb.V)
	e.EncodeElement(_ccbcbb.V, _fddaf)
	if _ccbcbb.Stp != nil {
		_bdefg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0070"}}
		for _, _gaeefd := range _ccbcbb.Stp {
			e.EncodeElement(_gaeefd, _bdefg)
		}
	}
	_gaegec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003at\u0072"}}
	for _, _dgeeb := range _ccbcbb.Tr {
		e.EncodeElement(_dgeeb, _gaegec)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_FieldUsage() *CT_FieldUsage { _fafdd := &CT_FieldUsage{}; return _fafdd }

func (_acebcg ST_FormatAction) Validate() error { return _acebcg.ValidateWithPath("") }

func NewCT_TableStyles() *CT_TableStyles { _becad := &CT_TableStyles{}; return _becad }

func (_fbbddg ST_DdeValueType) String() string {
	switch _fbbddg {
	case 0:
		return ""
	case 1:
		return "\u006e\u0069\u006c"
	case 2:
		return "\u0062"
	case 3:
		return "\u006e"
	case 4:
		return "\u0065"
	case 5:
		return "\u0073\u0074\u0072"
	}
	return ""
}

type ST_CellComments byte

func (_adagfb ST_MdxKPIProperty) String() string {
	switch _adagfb {
	case 0:
		return ""
	case 1:
		return "\u0076"
	case 2:
		return "\u0067"
	case 3:
		return "\u0073"
	case 4:
		return "\u0074"
	case 5:
		return "\u0077"
	case 6:
		return "\u006d"
	}
	return ""
}

func (_fafgfg *ST_RevisionAction) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_edfab, _ccbfgb := d.Token()
	if _ccbfgb != nil {
		return _ccbfgb
	}
	if _cccag, _adadbe := _edfab.(_gd.EndElement); _adadbe && _cccag.Name == start.Name {
		*_fafgfg = 1
		return nil
	}
	if _gdcgg, _afbfe := _edfab.(_gd.CharData); !_afbfe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edfab)
	} else {
		switch string(_gdcgg) {
		case "":
			*_fafgfg = 0
		case "\u0061\u0064\u0064":
			*_fafgfg = 1
		case "\u0064\u0065\u006c\u0065\u0074\u0065":
			*_fafgfg = 2
		}
	}
	_edfab, _ccbfgb = d.Token()
	if _ccbfgb != nil {
		return _ccbfgb
	}
	if _edcga, _dbdbb := _edfab.(_gd.EndElement); _dbdbb && _edcga.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edfab)
}

// ValidateWithPath validates the CT_CustomFilter and its children, prefixing error messages with path
func (_dbdf *CT_CustomFilter) ValidateWithPath(path string) error {
	if _aaafe := _dbdf.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _aaafe != nil {
		return _aaafe
	}
	return nil
}

func NewCT_DeletedField() *CT_DeletedField { _fefg := &CT_DeletedField{}; return _fefg }

func (_acebaa ST_HorizontalAlignment) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_acebaa.String(), start)
}

func (_afggf *CT_FutureMetadataBlock) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cffab:
	for {
		_dfcae, _dfdeg := d.Token()
		if _dfdeg != nil {
			return _dfdeg
		}
		switch _deecb := _dfcae.(type) {
		case _gd.StartElement:
			switch _deecb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afggf.ExtLst = NewCT_ExtensionList()
				if _bafea := d.DecodeElement(_afggf.ExtLst, &_deecb); _bafea != nil {
					return _bafea
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u0074\u0075r\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025\u0076", _deecb.Name)
				if _fcdfb := d.Skip(); _fcdfb != nil {
					return _fcdfb
				}
			}
		case _gd.EndElement:
			break _cffab
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CfRule and its children
func (_bcda *CT_CfRule) Validate() error {
	return _bcda.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce")
}

func (_dcee *CT_CellWatches) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_gbacb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068"}}
	for _, _caaa := range _dcee.CellWatch {
		e.EncodeElement(_caaa, _gbacb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RangePr and its children, prefixing error messages with path
func (_cadeb *CT_RangePr) ValidateWithPath(path string) error {
	if _gbafb := _cadeb.GroupByAttr.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u0042\u0079\u0041\u0074\u0074\u0072"); _gbafb != nil {
		return _gbafb
	}
	return nil
}

func (_dadc *CT_CellWatch) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fcaag := range start.Attr {
		if _fcaag.Name.Local == "\u0072" {
			_cbbd, _dbca := _fcaag.Value, error(nil)
			if _dbca != nil {
				return _dbca
			}
			_dadc.RAttr = _cbbd
			continue
		}
	}
	for {
		_bfcf, _fdfb := d.Token()
		if _fdfb != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u003a\u0020\u0025\u0073", _fdfb)
		}
		if _eacfd, _edfe := _bfcf.(_gd.EndElement); _edfe && _eacfd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Filter and its children
func (_aeae *CT_Filter) Validate() error {
	return _aeae.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r")
}

func (_ecdeg ST_MdxSetOrder) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ecdeg.String(), start)
}

func (_eggcd *ST_DataConsolidateFunction) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_eggcd = 0
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_eggcd = 1
	case "\u0063\u006f\u0075n\u0074":
		*_eggcd = 2
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_eggcd = 3
	case "\u006d\u0061\u0078":
		*_eggcd = 4
	case "\u006d\u0069\u006e":
		*_eggcd = 5
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_eggcd = 6
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_eggcd = 7
	case "\u0073t\u0064\u0044\u0065\u0076\u0070":
		*_eggcd = 8
	case "\u0073\u0075\u006d":
		*_eggcd = 9
	case "\u0076\u0061\u0072":
		*_eggcd = 10
	case "\u0076\u0061\u0072\u0070":
		*_eggcd = 11
	}
	return nil
}

func NewCT_AutoSortScope() *CT_AutoSortScope {
	_ded := &CT_AutoSortScope{}
	_ded.PivotArea = NewCT_PivotArea()
	return _ded
}

type CT_QueryTableDeletedFields struct {

	// Deleted Fields Count
	CountAttr *uint32

	// Deleted Field
	DeletedField []*CT_DeletedField
}

// Validate validates the CT_VerticalAlignFontProperty and its children
func (_dffee *CT_VerticalAlignFontProperty) Validate() error {
	return _dffee.ValidateWithPath("\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079")
}

func NewCT_CustomFilter() *CT_CustomFilter { _aebdg := &CT_CustomFilter{}; return _aebdg }

// ValidateWithPath validates the CT_OlapPr and its children, prefixing error messages with path
func (_adfg *CT_OlapPr) ValidateWithPath(path string) error { return nil }

func (_ebebe ST_SourceType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ebebe.String(), start)
}

func (_ceeef *CT_TableParts) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ceeef.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ceeef.CountAttr)})
	}
	e.EncodeToken(start)
	if _ceeef.TablePart != nil {
		_bfbfb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003at\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074"}}
		for _, _dbbaga := range _ceeef.TablePart {
			e.EncodeElement(_dbbaga, _bfbfb)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PageFields and its children, prefixing error messages with path
func (_befba *CT_PageFields) ValidateWithPath(path string) error {
	for _cgfdg, _ccdee := range _befba.PageField {
		if _efgd := _ccdee.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0050\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _cgfdg)); _efgd != nil {
			return _efgd
		}
	}
	return nil
}

type CT_CustomProperty struct {

	// Custom Property Name
	NameAttr string
	IdAttr   string
}

// ValidateWithPath validates the CT_CacheHierarchies and its children, prefixing error messages with path
func (_cgga *CT_CacheHierarchies) ValidateWithPath(path string) error {
	for _fbc, _eadca := range _cgga.CacheHierarchy {
		if _bcd := _eadca.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u0061ch\u0065H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _fbc)); _bcd != nil {
			return _bcd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_XmlPr and its children, prefixing error messages with path
func (_ggadf *CT_XmlPr) ValidateWithPath(path string) error {
	if _ggadf.ExtLst != nil {
		if _bbabaa := _ggadf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbabaa != nil {
			return _bbabaa
		}
	}
	return nil
}

func (_efedc *CT_PageItem) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _efedc.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dbcbge ST_SmartTagShow) ValidateWithPath(path string) error {
	switch _dbcbge {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbcbge))
	}
	return nil
}

type ST_CfvoType byte

func (_feaea *ST_Qualifier) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bcbcdcd, _bbgfba := d.Token()
	if _bbgfba != nil {
		return _bbgfba
	}
	if _ebaag, _gbccb := _bcbcdcd.(_gd.EndElement); _gbccb && _ebaag.Name == start.Name {
		*_feaea = 1
		return nil
	}
	if _gfbfc, _fcbgag := _bcbcdcd.(_gd.CharData); !_fcbgag {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcbcdcd)
	} else {
		switch string(_gfbfc) {
		case "":
			*_feaea = 0
		case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_feaea = 1
		case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_feaea = 2
		case "\u006e\u006f\u006e\u0065":
			*_feaea = 3
		}
	}
	_bcbcdcd, _bbgfba = d.Token()
	if _bbgfba != nil {
		return _bbgfba
	}
	if _begcfc, _ggccgf := _bcbcdcd.(_gd.EndElement); _ggccgf && _begcfc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcbcdcd)
}

func (_eegff *CT_GroupMember) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _eegff.UniqueNameAttr)})
	if _eegff.GroupAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0072\u006fu\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eegff.GroupAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

const (
	ST_CellTypeUnset     ST_CellType = 0
	ST_CellTypeB         ST_CellType = 1
	ST_CellTypeN         ST_CellType = 2
	ST_CellTypeE         ST_CellType = 3
	ST_CellTypeS         ST_CellType = 4
	ST_CellTypeStr       ST_CellType = 5
	ST_CellTypeInlineStr ST_CellType = 6
)

const (
	ST_DataValidationImeModeUnset        ST_DataValidationImeMode = 0
	ST_DataValidationImeModeNoControl    ST_DataValidationImeMode = 1
	ST_DataValidationImeModeOff          ST_DataValidationImeMode = 2
	ST_DataValidationImeModeOn           ST_DataValidationImeMode = 3
	ST_DataValidationImeModeDisabled     ST_DataValidationImeMode = 4
	ST_DataValidationImeModeHiragana     ST_DataValidationImeMode = 5
	ST_DataValidationImeModeFullKatakana ST_DataValidationImeMode = 6
	ST_DataValidationImeModeHalfKatakana ST_DataValidationImeMode = 7
	ST_DataValidationImeModeFullAlpha    ST_DataValidationImeMode = 8
	ST_DataValidationImeModeHalfAlpha    ST_DataValidationImeMode = 9
	ST_DataValidationImeModeFullHangul   ST_DataValidationImeMode = 10
	ST_DataValidationImeModeHalfHangul   ST_DataValidationImeMode = 11
)

// ValidateWithPath validates the CT_MdxSet and its children, prefixing error messages with path
func (_ddba *CT_MdxSet) ValidateWithPath(path string) error {
	if _fbddg := _ddba.OAttr.ValidateWithPath(path + "\u002f\u004f\u0041\u0074\u0074\u0072"); _fbddg != nil {
		return _fbddg
	}
	for _eeceeb, _fedbcc := range _ddba.N {
		if _bdgec := _fedbcc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _eeceeb)); _bdgec != nil {
			return _bdgec
		}
	}
	return nil
}

const (
	ST_MdxSetOrderUnset ST_MdxSetOrder = 0
	ST_MdxSetOrderU     ST_MdxSetOrder = 1
	ST_MdxSetOrderA     ST_MdxSetOrder = 2
	ST_MdxSetOrderD     ST_MdxSetOrder = 3
	ST_MdxSetOrderAa    ST_MdxSetOrder = 4
	ST_MdxSetOrderAd    ST_MdxSetOrder = 5
	ST_MdxSetOrderNa    ST_MdxSetOrder = 6
	ST_MdxSetOrderNd    ST_MdxSetOrder = 7
)

func (_edca *CT_ExtensionList) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _edca.Ext != nil {
		_dcdec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _ccdd := range _edca.Ext {
			e.EncodeElement(_ccdd, _dcdec)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_eefffe ST_Comments) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cbgecd := _gd.Attr{}
	_cbgecd.Name = name
	switch _eefffe {
	case ST_CommentsUnset:
		_cbgecd.Value = ""
	case ST_CommentsCommNone:
		_cbgecd.Value = "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case ST_CommentsCommIndicator:
		_cbgecd.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case ST_CommentsCommIndAndComment:
		_cbgecd.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return _cbgecd, nil
}

// Validate validates the CT_FieldUsage and its children
func (_faabb *CT_FieldUsage) Validate() error {
	return _faabb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065")
}

// Validate validates the CT_BookViews and its children
func (_fdd *CT_BookViews) Validate() error {
	return _fdd.ValidateWithPath("\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073")
}

// ValidateWithPath validates the CT_Rst and its children, prefixing error messages with path
func (_cfbfa *CT_Rst) ValidateWithPath(path string) error {
	for _ffgfdc, _dacge := range _cfbfa.R {
		if _febbc := _dacge.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _ffgfdc)); _febbc != nil {
			return _febbc
		}
	}
	for _dcefe, _bdcgd := range _cfbfa.RPh {
		if _aeeda := _bdcgd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0050\u0068\u005b\u0025\u0064\u005d", path, _dcefe)); _aeeda != nil {
			return _aeeda
		}
	}
	if _cfbfa.PhoneticPr != nil {
		if _cfda := _cfbfa.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _cfda != nil {
			return _cfda
		}
	}
	return nil
}

func (_cdcce ST_PageOrder) ValidateWithPath(path string) error {
	switch _cdcce {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdcce))
	}
	return nil
}

func (_gade *CT_ColHierarchiesUsage) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _agfgd := range start.Attr {
		if _agfgd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fecg, _gbedd := _a.ParseUint(_agfgd.Value, 10, 32)
			if _gbedd != nil {
				return _gbedd
			}
			_cgdf := uint32(_fecg)
			_gade.CountAttr = &_cgdf
			continue
		}
	}
_bdba:
	for {
		_egffa, _fffg := d.Token()
		if _fffg != nil {
			return _fffg
		}
		switch _abadd := _egffa.(type) {
		case _gd.StartElement:
			switch _abadd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_efbc := NewCT_HierarchyUsage()
				if _egbf := d.DecodeElement(_efbc, &_abadd); _egbf != nil {
					return _egbf
				}
				_gade.ColHierarchyUsage = append(_gade.ColHierarchyUsage, _efbc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _abadd.Name)
				if _dcab := d.Skip(); _dcab != nil {
					return _dcab
				}
			}
		case _gd.EndElement:
			break _bdba
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Cell and its children, prefixing error messages with path
func (_egeg *CT_Cell) ValidateWithPath(path string) error {
	if _fcfa := _egeg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _fcfa != nil {
		return _fcfa
	}
	if _egeg.F != nil {
		if _gadc := _egeg.F.ValidateWithPath(path + "\u002f\u0046"); _gadc != nil {
			return _gadc
		}
	}
	if _egeg.Is != nil {
		if _gdgd := _egeg.Is.ValidateWithPath(path + "\u002f\u0049\u0073"); _gdgd != nil {
			return _gdgd
		}
	}
	if _egeg.ExtLst != nil {
		if _ccegg := _egeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccegg != nil {
			return _ccegg
		}
	}
	return nil
}

func (_gafgb ST_DataConsolidateFunction) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ccbfdf := _gd.Attr{}
	_ccbfdf.Name = name
	switch _gafgb {
	case ST_DataConsolidateFunctionUnset:
		_ccbfdf.Value = ""
	case ST_DataConsolidateFunctionAverage:
		_ccbfdf.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_DataConsolidateFunctionCount:
		_ccbfdf.Value = "\u0063\u006f\u0075n\u0074"
	case ST_DataConsolidateFunctionCountNums:
		_ccbfdf.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_DataConsolidateFunctionMax:
		_ccbfdf.Value = "\u006d\u0061\u0078"
	case ST_DataConsolidateFunctionMin:
		_ccbfdf.Value = "\u006d\u0069\u006e"
	case ST_DataConsolidateFunctionProduct:
		_ccbfdf.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_DataConsolidateFunctionStdDev:
		_ccbfdf.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_DataConsolidateFunctionStdDevp:
		_ccbfdf.Value = "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case ST_DataConsolidateFunctionSum:
		_ccbfdf.Value = "\u0073\u0075\u006d"
	case ST_DataConsolidateFunctionVar:
		_ccbfdf.Value = "\u0076\u0061\u0072"
	case ST_DataConsolidateFunctionVarp:
		_ccbfdf.Value = "\u0076\u0061\u0072\u0070"
	}
	return _ccbfdf, nil
}

// Validate validates the CT_GroupItems and its children
func (_ebabd *CT_GroupItems) Validate() error {
	return _ebabd.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073")
}

func (_bdaaa *CT_MergeCell) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fgbdg := range start.Attr {
		if _fgbdg.Name.Local == "\u0072\u0065\u0066" {
			_gedgd, _cdccg := _fgbdg.Value, error(nil)
			if _cdccg != nil {
				return _cdccg
			}
			_bdaaa.RefAttr = _gedgd
			continue
		}
	}
	for {
		_ccdca, _decdgb := d.Token()
		if _decdgb != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065r\u0067\u0065\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _decdgb)
		}
		if _eaecaf, _degge := _ccdca.(_gd.EndElement); _degge && _eaecaf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ObjectPr and its children, prefixing error messages with path
func (_ggddc *CT_ObjectPr) ValidateWithPath(path string) error {
	if _gdbee := _ggddc.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _gdbee != nil {
		return _gdbee
	}
	return nil
}

func (_aabeb ST_IconSetType) String() string {
	switch _aabeb {
	case 0:
		return ""
	case 1:
		return "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case 2:
		return "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 3:
		return "\u0033\u0046\u006c\u0061\u0067\u0073"
	case 4:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case 5:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case 6:
		return "\u0033\u0053\u0069\u0067\u006e\u0073"
	case 7:
		return "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case 8:
		return "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case 9:
		return "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case 10:
		return "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 11:
		return "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case 12:
		return "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case 13:
		return "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case 14:
		return "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case 15:
		return "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 16:
		return "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case 17:
		return "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return ""
}

type CT_CfRule struct {

	// Type
	TypeAttr ST_CfType

	// Differential Formatting Id
	DxfIdAttr *uint32

	// Priority
	PriorityAttr int32

	// Stop If True
	StopIfTrueAttr *bool

	// Above Or Below Average
	AboveAverageAttr *bool

	// Top 10 Percent
	PercentAttr *bool

	// Bottom N
	BottomAttr *bool

	// Operator
	OperatorAttr ST_ConditionalFormattingOperator

	// Text
	TextAttr *string

	// Time Period
	TimePeriodAttr ST_TimePeriod

	// Rank
	RankAttr *uint32

	// StdDev
	StdDevAttr *int32

	// Equal Average
	EqualAverageAttr *bool

	// Formula
	Formula []string

	// Color Scale
	ColorScale *CT_ColorScale

	// Data Bar
	DataBar *CT_DataBar

	// Icon Set
	IconSet *CT_IconSet
	ExtLst  *CT_ExtensionList
}

func NewCT_Index() *CT_Index { _gaagc := &CT_Index{}; return _gaagc }

func (_aceebg *CT_ExternalSheetDataSet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bbbggb:
	for {
		_aebab, _debfe := d.Token()
		if _debfe != nil {
			return _debfe
		}
		switch _dgeac := _aebab.(type) {
		case _gd.StartElement:
			switch _dgeac.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				_ddgbf := NewCT_ExternalSheetData()
				if _bfbgd := d.DecodeElement(_ddgbf, &_dgeac); _bfbgd != nil {
					return _bfbgd
				}
				_aceebg.SheetData = append(_aceebg.SheetData, _ddgbf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053h\u0065\u0065\u0074\u0044\u0061\u0074a\u0053\u0065\u0074 \u0025\u0076", _dgeac.Name)
				if _fdfecg := d.Skip(); _fdfecg != nil {
					return _fdfecg
				}
			}
		case _gd.EndElement:
			break _bbbggb
		case _gd.CharData:
		}
	}
	return nil
}

func (_gefeb *ST_rwColActionType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gefeb = 0
	case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
		*_gefeb = 1
	case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
		*_gefeb = 2
	case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
		*_gefeb = 3
	case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
		*_gefeb = 4
	}
	return nil
}

func NewCT_Font() *CT_Font { _fgbed := &CT_Font{}; return _fgbed }

// ValidateWithPath validates the CT_TableStyles and its children, prefixing error messages with path
func (_ffacb *CT_TableStyles) ValidateWithPath(path string) error {
	for _fgdfbb, _ebdede := range _ffacb.TableStyle {
		if _ccfegg := _ebdede.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u005b\u0025\u0064\u005d", path, _fgdfbb)); _ccfegg != nil {
			return _ccfegg
		}
	}
	return nil
}

type CT_ColHierarchiesUsage struct {

	// Items Count
	CountAttr *uint32

	// Column OLAP Hierarchies
	ColHierarchyUsage []*CT_HierarchyUsage
}

// ValidateWithPath validates the CT_PageField and its children, prefixing error messages with path
func (_ebacd *CT_PageField) ValidateWithPath(path string) error {
	if _ebacd.ExtLst != nil {
		if _gbgcda := _ebacd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbgcda != nil {
			return _gbgcda
		}
	}
	return nil
}

// Validate validates the CT_ConditionalFormats and its children
func (_feff *CT_ConditionalFormats) Validate() error {
	return _feff.ValidateWithPath("C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073")
}

func NewCT_RevisionSheetRename() *CT_RevisionSheetRename {
	_bbgfd := &CT_RevisionSheetRename{}
	return _bbgfd
}

func (_eafbe *ST_TextVAlign) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_eafbe = 0
	case "\u0074\u006f\u0070":
		*_eafbe = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_eafbe = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_eafbe = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_eafbe = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_eafbe = 5
	}
	return nil
}

func (_fdcfe *CT_PivotAreaReferences) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cdda := range start.Attr {
		if _cdda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aadba, _fcdad := _a.ParseUint(_cdda.Value, 10, 32)
			if _fcdad != nil {
				return _fcdad
			}
			_bgcgc := uint32(_aadba)
			_fdcfe.CountAttr = &_bgcgc
			continue
		}
	}
_fbafa:
	for {
		_bcfgb, _gggca := d.Token()
		if _gggca != nil {
			return _gggca
		}
		switch _cabga := _bcfgb.(type) {
		case _gd.StartElement:
			switch _cabga.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}:
				_dbbgb := NewCT_PivotAreaReference()
				if _edccf := d.DecodeElement(_dbbgb, &_cabga); _edccf != nil {
					return _edccf
				}
				_fdcfe.Reference = append(_fdcfe.Reference, _dbbgb)
			default:
				_e.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0069\u0076\u006ft\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _cabga.Name)
				if _bggab := d.Skip(); _bggab != nil {
					return _bggab
				}
			}
		case _gd.EndElement:
			break _fbafa
		case _gd.CharData:
		}
	}
	return nil
}

func (_dbaeff ST_Pane) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bagbeg := _gd.Attr{}
	_bagbeg.Name = name
	switch _dbaeff {
	case ST_PaneUnset:
		_bagbeg.Value = ""
	case ST_PaneBottomRight:
		_bagbeg.Value = "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneTopRight:
		_bagbeg.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneBottomLeft:
		_bagbeg.Value = "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PaneTopLeft:
		_bagbeg.Value = "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return _bagbeg, nil
}

// Validate validates the CT_WebPublishObjects and its children
func (_ebdccb *CT_WebPublishObjects) Validate() error {
	return _ebdccb.ValidateWithPath("C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073")
}

// Validate validates the CT_CellFormula and its children
func (_bdbg *CT_CellFormula) Validate() error {
	return _bdbg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061")
}

type CT_Row struct {

	// Row Index
	RAttr *uint32

	// Spans
	SpansAttr *ST_CellSpans

	// Style Index
	SAttr *uint32

	// Custom Format
	CustomFormatAttr *bool

	// Row Height
	HtAttr *float64

	// Hidden
	HiddenAttr *bool

	// Custom Height
	CustomHeightAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom
	ThickBotAttr *bool

	// Show Phonetic
	PhAttr *bool

	// Cell
	C []*CT_Cell

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type CT_UnderlineProperty struct {

	// Underline Value
	ValAttr ST_UnderlineValues
}

func (_cbea *CT_CellAlignment) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ggee := range start.Attr {
		if _ggee.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c" {
			_cbea.HorizontalAttr.UnmarshalXMLAttr(_ggee)
			continue
		}
		if _ggee.Name.Local == "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_cbea.VerticalAttr.UnmarshalXMLAttr(_ggee)
			continue
		}
		if _ggee.Name.Local == "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e" {
			_bfgc, _badgg := _a.ParseUint(_ggee.Value, 10, 8)
			if _badgg != nil {
				return _badgg
			}
			_ebcg := uint8(_bfgc)
			_cbea.TextRotationAttr = &_ebcg
			continue
		}
		if _ggee.Name.Local == "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074" {
			_gccd, _dfde := _a.ParseBool(_ggee.Value)
			if _dfde != nil {
				return _dfde
			}
			_cbea.WrapTextAttr = &_gccd
			continue
		}
		if _ggee.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_ccd, _bgfc := _a.ParseUint(_ggee.Value, 10, 32)
			if _bgfc != nil {
				return _bgfc
			}
			_bafd := uint32(_ccd)
			_cbea.IndentAttr = &_bafd
			continue
		}
		if _ggee.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074" {
			_fffac, _bbead := _a.ParseInt(_ggee.Value, 10, 32)
			if _bbead != nil {
				return _bbead
			}
			_bfbf := int32(_fffac)
			_cbea.RelativeIndentAttr = &_bfbf
			continue
		}
		if _ggee.Name.Local == "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065" {
			_decb, _fggg := _a.ParseBool(_ggee.Value)
			if _fggg != nil {
				return _fggg
			}
			_cbea.JustifyLastLineAttr = &_decb
			continue
		}
		if _ggee.Name.Local == "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074" {
			_cfcce, _gga := _a.ParseBool(_ggee.Value)
			if _gga != nil {
				return _gga
			}
			_cbea.ShrinkToFitAttr = &_cfcce
			continue
		}
		if _ggee.Name.Local == "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072" {
			_daa, _baec := _a.ParseUint(_ggee.Value, 10, 32)
			if _baec != nil {
				return _baec
			}
			_cgbf := uint32(_daa)
			_cbea.ReadingOrderAttr = &_cgbf
			continue
		}
	}
	for {
		_dcac, _cgeg := d.Token()
		if _cgeg != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006cA\u006ci\u0067\u006e\u006d\u0065\u006e\u0074\u003a \u0025\u0073", _cgeg)
		}
		if _becf, _aegf := _dcac.(_gd.EndElement); _aegf && _becf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Tables and its children
func (_cbabe *CT_Tables) Validate() error {
	return _cbabe.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s")
}

// ValidateWithPath validates the CT_Filters and its children, prefixing error messages with path
func (_gfgb *CT_Filters) ValidateWithPath(path string) error {
	if _gfaeab := _gfgb.CalendarTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0065\u006e\u0064\u0061\u0072\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _gfaeab != nil {
		return _gfaeab
	}
	for _afdc, _fcadf := range _gfgb.Filter {
		if _eggca := _fcadf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _afdc)); _eggca != nil {
			return _eggca
		}
	}
	for _ebbaa, _aeacc := range _gfgb.DateGroupItem {
		if _ceagf := _aeacc.ValidateWithPath(_b.Sprintf("%\u0073/\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075p\u0049\u0074\u0065\u006d[%\u0064\u005d", path, _ebbaa)); _ceagf != nil {
			return _ceagf
		}
	}
	return nil
}

// Validate validates the CT_ReviewedRevisions and its children
func (_egaaa *CT_ReviewedRevisions) Validate() error {
	return _egaaa.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073")
}

func (_fceed *CT_DataValidations) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fceed.DisablePromptsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fceed.DisablePromptsAttr))})
	}
	if _fceed.XWindowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_fceed.XWindowAttr)})
	}
	if _fceed.YWindowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_fceed.YWindowAttr)})
	}
	if _fceed.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fceed.CountAttr)})
	}
	e.EncodeToken(start)
	_fgbdd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}}
	for _, _cfecc := range _fceed.DataValidation {
		e.EncodeElement(_cfecc, _fgbdd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_acbebg *ExternalLink) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_acbebg.CT_ExternalLink = *NewCT_ExternalLink()
_efcde:
	for {
		_afddec, _cdfbe := d.Token()
		if _cdfbe != nil {
			return _cdfbe
		}
		switch _aedba := _afddec.(type) {
		case _gd.StartElement:
			switch _aedba.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_acbebg.Choice = NewCT_ExternalLinkChoice()
				if _gbgaf := d.DecodeElement(&_acbebg.Choice.ExternalBook, &_aedba); _gbgaf != nil {
					return _gbgaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_acbebg.Choice = NewCT_ExternalLinkChoice()
				if _daabea := d.DecodeElement(&_acbebg.Choice.DdeLink, &_aedba); _daabea != nil {
					return _daabea
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_acbebg.Choice = NewCT_ExternalLinkChoice()
				if _ebbebb := d.DecodeElement(&_acbebg.Choice.OleLink, &_aedba); _ebbebb != nil {
					return _ebbebb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acbebg.ExtLst = NewCT_ExtensionList()
				if _gaeeee := d.DecodeElement(_acbebg.ExtLst, &_aedba); _gaeeee != nil {
					return _gaeeee
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0078te\u0072\u006ea\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _aedba.Name)
				if _dfaag := d.Skip(); _dfaag != nil {
					return _dfaag
				}
			}
		case _gd.EndElement:
			break _efcde
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishObject and its children, prefixing error messages with path
func (_aeeag *CT_WebPublishObject) ValidateWithPath(path string) error { return nil }

func (_deacgg ST_RefMode) Validate() error { return _deacgg.ValidateWithPath("") }

func NewCT_DbPr() *CT_DbPr { _agddd := &CT_DbPr{}; return _agddd }

func (_cccc *CT_DdeValue) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cccc.TAttr != ST_DdeValueTypeUnset {
		_ecbgc, _bcbdgd := _cccc.TAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074"})
		if _bcbdgd != nil {
			return _bcbdgd
		}
		start.Attr = append(start.Attr, _ecbgc)
	}
	e.EncodeToken(start)
	_dfbdbf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c"}}
	_e.AddPreserveSpaceAttr(&_dfbdbf, _cccc.Val)
	e.EncodeElement(_cccc.Val, _dfbdbf)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_OleUpdate byte

// ValidateWithPath validates the CT_I and its children, prefixing error messages with path
func (_fcaf *CT_I) ValidateWithPath(path string) error {
	if _becbad := _fcaf.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _becbad != nil {
		return _becbad
	}
	for _gcdecc, _ddccba := range _fcaf.X {
		if _cdaga := _ddccba.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gcdecc)); _cdaga != nil {
			return _cdaga
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VolTypes and its children, prefixing error messages with path
func (_gebag *CT_VolTypes) ValidateWithPath(path string) error {
	for _fbbfg, _effdc := range _gebag.VolType {
		if _ebaddc := _effdc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0056\u006f\u006c\u0054\u0079\u0070e\u005b\u0025\u0064\u005d", path, _fbbfg)); _ebaddc != nil {
			return _ebaddc
		}
	}
	if _gebag.ExtLst != nil {
		if _eddceg := _gebag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eddceg != nil {
			return _eddceg
		}
	}
	return nil
}

const (
	ST_FileTypeUnset ST_FileType = 0
	ST_FileTypeMac   ST_FileType = 1
	ST_FileTypeWin   ST_FileType = 2
	ST_FileTypeDos   ST_FileType = 3
	ST_FileTypeLin   ST_FileType = 4
	ST_FileTypeOther ST_FileType = 5
)

// Validate validates the CT_TextFields and its children
func (_fcbad *CT_TextFields) Validate() error {
	return _fcbad.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073")
}

// ValidateWithPath validates the CT_ExternalLinkChoice and its children, prefixing error messages with path
func (_ggfca *CT_ExternalLinkChoice) ValidateWithPath(path string) error {
	if _ggfca.ExternalBook != nil {
		if _bgdc := _ggfca.ExternalBook.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"); _bgdc != nil {
			return _bgdc
		}
	}
	if _ggfca.DdeLink != nil {
		if _ggdbc := _ggfca.DdeLink.ValidateWithPath(path + "\u002f\u0044\u0064\u0065\u004c\u0069\u006e\u006b"); _ggdbc != nil {
			return _ggdbc
		}
	}
	if _ggfca.OleLink != nil {
		if _badac := _ggfca.OleLink.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u004c\u0069\u006e\u006b"); _badac != nil {
			return _badac
		}
	}
	return nil
}

func NewCT_RangeSets() *CT_RangeSets { _ebgdg := &CT_RangeSets{}; return _ebgdg }

func NewCT_RevisionDefinedName() *CT_RevisionDefinedName {
	_bedcf := &CT_RevisionDefinedName{}
	return _bedcf
}

// ValidateWithPath validates the CT_DataBar and its children, prefixing error messages with path
func (_geecf *CT_DataBar) ValidateWithPath(path string) error {
	for _dgafe, _bfbce := range _geecf.Cfvo {
		if _gafg := _bfbce.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _dgafe)); _gafg != nil {
			return _gafg
		}
	}
	if _bfbe := _geecf.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _bfbe != nil {
		return _bfbe
	}
	return nil
}

// ValidateWithPath validates the CT_DataConsolidate and its children, prefixing error messages with path
func (_gbfa *CT_DataConsolidate) ValidateWithPath(path string) error {
	if _ebcgb := _gbfa.FunctionAttr.ValidateWithPath(path + "\u002f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _ebcgb != nil {
		return _ebcgb
	}
	if _gbfa.DataRefs != nil {
		if _fffdc := _gbfa.DataRefs.ValidateWithPath(path + "\u002fD\u0061\u0074\u0061\u0052\u0065\u0066s"); _fffdc != nil {
			return _fffdc
		}
	}
	return nil
}

func (_gadbf ST_OleUpdate) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_edgadf := _gd.Attr{}
	_edgadf.Name = name
	switch _gadbf {
	case ST_OleUpdateUnset:
		_edgadf.Value = ""
	case ST_OleUpdateOLEUPDATE_ALWAYS:
		_edgadf.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case ST_OleUpdateOLEUPDATE_ONCALL:
		_edgadf.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return _edgadf, nil
}

// Validate validates the CT_NumFmts and its children
func (_fcfge *CT_NumFmts) Validate() error {
	return _fcfge.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073")
}

func (_eccfdg ST_CellType) String() string {
	switch _eccfdg {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	case 5:
		return "\u0073\u0074\u0072"
	case 6:
		return "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return ""
}

// Validate validates the MapInfo and its children
func (_bbfdc *MapInfo) Validate() error {
	return _bbfdc.ValidateWithPath("\u004da\u0070\u0049\u006e\u0066\u006f")
}

func (_ggggb *CT_ObjectPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ggggb.Anchor = NewCT_ObjectAnchor()
	for _, _dgbdd := range start.Attr {
		if _dgbdd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgbdd.Name.Local == "\u0069\u0064" || _dgbdd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgbdd.Name.Local == "\u0069\u0064" {
			_ffaf, _edcgc := _dgbdd.Value, error(nil)
			if _edcgc != nil {
				return _edcgc
			}
			_ggggb.IdAttr = &_ffaf
			continue
		}
		if _dgbdd.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_bcabe, _ecca := _a.ParseBool(_dgbdd.Value)
			if _ecca != nil {
				return _ecca
			}
			_ggggb.AutoLineAttr = &_bcabe
			continue
		}
		if _dgbdd.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_agdeb, _dabdb := _a.ParseBool(_dgbdd.Value)
			if _dabdb != nil {
				return _dabdb
			}
			_ggggb.PrintAttr = &_agdeb
			continue
		}
		if _dgbdd.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_cfgbfe, _gfbfa := _a.ParseBool(_dgbdd.Value)
			if _gfbfa != nil {
				return _gfbfa
			}
			_ggggb.DisabledAttr = &_cfgbfe
			continue
		}
		if _dgbdd.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_ffedf, _cdbb := _a.ParseBool(_dgbdd.Value)
			if _cdbb != nil {
				return _cdbb
			}
			_ggggb.UiObjectAttr = &_ffedf
			continue
		}
		if _dgbdd.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_cecbc, _cfgg := _a.ParseBool(_dgbdd.Value)
			if _cfgg != nil {
				return _cfgg
			}
			_ggggb.AutoFillAttr = &_cecbc
			continue
		}
		if _dgbdd.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_gdbge, _fcdbd := _a.ParseBool(_dgbdd.Value)
			if _fcdbd != nil {
				return _fcdbd
			}
			_ggggb.LockedAttr = &_gdbge
			continue
		}
		if _dgbdd.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_bgdbg, _ffcab := _a.ParseBool(_dgbdd.Value)
			if _ffcab != nil {
				return _ffcab
			}
			_ggggb.AutoPictAttr = &_bgdbg
			continue
		}
		if _dgbdd.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_cgfef, _ccfcf := _dgbdd.Value, error(nil)
			if _ccfcf != nil {
				return _ccfcf
			}
			_ggggb.MacroAttr = &_cgfef
			continue
		}
		if _dgbdd.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_fffbd, _aafdc := _dgbdd.Value, error(nil)
			if _aafdc != nil {
				return _aafdc
			}
			_ggggb.AltTextAttr = &_fffbd
			continue
		}
		if _dgbdd.Name.Local == "\u0064\u0064\u0065" {
			_dcedfg, _ddfdfd := _a.ParseBool(_dgbdd.Value)
			if _ddfdfd != nil {
				return _ddfdfd
			}
			_ggggb.DdeAttr = &_dcedfg
			continue
		}
		if _dgbdd.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_dgabe, _adbe := _a.ParseBool(_dgbdd.Value)
			if _adbe != nil {
				return _adbe
			}
			_ggggb.DefaultSizeAttr = &_dgabe
			continue
		}
	}
_afcde:
	for {
		_cdbgg, _caad := d.Token()
		if _caad != nil {
			return _caad
		}
		switch _aefbg := _cdbgg.(type) {
		case _gd.StartElement:
			switch _aefbg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _bffga := d.DecodeElement(_ggggb.Anchor, &_aefbg); _bffga != nil {
					return _bffga
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072\u0020\u0025\u0076", _aefbg.Name)
				if _cfead := d.Skip(); _cfead != nil {
					return _cfead
				}
			}
		case _gd.EndElement:
			break _afcde
		case _gd.CharData:
		}
	}
	return nil
}

func (_bffe *CT_MeasureGroup) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bffe.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _bffe.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cgbac ST_IconSetType) Validate() error { return _cgbac.ValidateWithPath("") }

func (_abcgcf *CT_WorksheetSource) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _abcgcf.RefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_abcgcf.RefAttr)})
	}
	if _abcgcf.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_abcgcf.NameAttr)})
	}
	if _abcgcf.SheetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_abcgcf.SheetAttr)})
	}
	if _abcgcf.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_abcgcf.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cgagc *CT_DrawingHF) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbaba := range start.Attr {
		if _bbaba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bbaba.Name.Local == "\u0069\u0064" || _bbaba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bbaba.Name.Local == "\u0069\u0064" {
			_fbfeg, _cfbce := _bbaba.Value, error(nil)
			if _cfbce != nil {
				return _cfbce
			}
			_cgagc.IdAttr = _fbfeg
			continue
		}
		if _bbaba.Name.Local == "\u0072\u0068\u0066" {
			_cfbda, _gedeg := _a.ParseUint(_bbaba.Value, 10, 32)
			if _gedeg != nil {
				return _gedeg
			}
			_cega := uint32(_cfbda)
			_cgagc.RhfAttr = &_cega
			continue
		}
		if _bbaba.Name.Local == "\u006c\u0066\u006f" {
			_dddfa, _eddff := _a.ParseUint(_bbaba.Value, 10, 32)
			if _eddff != nil {
				return _eddff
			}
			_adab := uint32(_dddfa)
			_cgagc.LfoAttr = &_adab
			continue
		}
		if _bbaba.Name.Local == "\u006c\u0066\u0065" {
			_gcaabg, _dbcad := _a.ParseUint(_bbaba.Value, 10, 32)
			if _dbcad != nil {
				return _dbcad
			}
			_gcff := uint32(_gcaabg)
			_cgagc.LfeAttr = &_gcff
			continue
		}
		if _bbaba.Name.Local == "\u006c\u0068\u0066" {
			_eabgc, _gcfd := _a.ParseUint(_bbaba.Value, 10, 32)
			if _gcfd != nil {
				return _gcfd
			}
			_cfecg := uint32(_eabgc)
			_cgagc.LhfAttr = &_cfecg
			continue
		}
		if _bbaba.Name.Local == "\u006c\u0066\u0066" {
			_eagdf, _ccfbb := _a.ParseUint(_bbaba.Value, 10, 32)
			if _ccfbb != nil {
				return _ccfbb
			}
			_dfggg := uint32(_eagdf)
			_cgagc.LffAttr = &_dfggg
			continue
		}
		if _bbaba.Name.Local == "\u0063\u0068\u0065" {
			_deedc, _gdgac := _a.ParseUint(_bbaba.Value, 10, 32)
			if _gdgac != nil {
				return _gdgac
			}
			_fbegg := uint32(_deedc)
			_cgagc.CheAttr = &_fbegg
			continue
		}
		if _bbaba.Name.Local == "\u0072\u0068\u006f" {
			_fagbb, _bgfcf := _a.ParseUint(_bbaba.Value, 10, 32)
			if _bgfcf != nil {
				return _bgfcf
			}
			_bcegd := uint32(_fagbb)
			_cgagc.RhoAttr = &_bcegd
			continue
		}
		if _bbaba.Name.Local == "\u0072\u0068\u0065" {
			_ddfcc, _babef := _a.ParseUint(_bbaba.Value, 10, 32)
			if _babef != nil {
				return _babef
			}
			_debd := uint32(_ddfcc)
			_cgagc.RheAttr = &_debd
			continue
		}
		if _bbaba.Name.Local == "\u006c\u0068\u006f" {
			_gfdc, _gbedc := _a.ParseUint(_bbaba.Value, 10, 32)
			if _gbedc != nil {
				return _gbedc
			}
			_affcg := uint32(_gfdc)
			_cgagc.LhoAttr = &_affcg
			continue
		}
		if _bbaba.Name.Local == "\u006c\u0068\u0065" {
			_bbbd, _gcgeb := _a.ParseUint(_bbaba.Value, 10, 32)
			if _gcgeb != nil {
				return _gcgeb
			}
			_abeeb := uint32(_bbbd)
			_cgagc.LheAttr = &_abeeb
			continue
		}
		if _bbaba.Name.Local == "\u0063\u0068\u006f" {
			_dadf, _aegfb := _a.ParseUint(_bbaba.Value, 10, 32)
			if _aegfb != nil {
				return _aegfb
			}
			_caede := uint32(_dadf)
			_cgagc.ChoAttr = &_caede
			continue
		}
		if _bbaba.Name.Local == "\u0063\u0068\u0066" {
			_bedacb, _edfg := _a.ParseUint(_bbaba.Value, 10, 32)
			if _edfg != nil {
				return _edfg
			}
			_geafb := uint32(_bedacb)
			_cgagc.ChfAttr = &_geafb
			continue
		}
		if _bbaba.Name.Local == "\u0063\u0066\u006f" {
			_fdabc, _geab := _a.ParseUint(_bbaba.Value, 10, 32)
			if _geab != nil {
				return _geab
			}
			_dcbdc := uint32(_fdabc)
			_cgagc.CfoAttr = &_dcbdc
			continue
		}
		if _bbaba.Name.Local == "\u0063\u0066\u0065" {
			_eeegd, _defcf := _a.ParseUint(_bbaba.Value, 10, 32)
			if _defcf != nil {
				return _defcf
			}
			_cdfc := uint32(_eeegd)
			_cgagc.CfeAttr = &_cdfc
			continue
		}
		if _bbaba.Name.Local == "\u0063\u0066\u0066" {
			_agbeg, _debf := _a.ParseUint(_bbaba.Value, 10, 32)
			if _debf != nil {
				return _debf
			}
			_bcdb := uint32(_agbeg)
			_cgagc.CffAttr = &_bcdb
			continue
		}
		if _bbaba.Name.Local == "\u0072\u0066\u006f" {
			_egbfcf, _aceeb := _a.ParseUint(_bbaba.Value, 10, 32)
			if _aceeb != nil {
				return _aceeb
			}
			_febgf := uint32(_egbfcf)
			_cgagc.RfoAttr = &_febgf
			continue
		}
		if _bbaba.Name.Local == "\u0072\u0066\u0065" {
			_egeb, _eddag := _a.ParseUint(_bbaba.Value, 10, 32)
			if _eddag != nil {
				return _eddag
			}
			_gcgdc := uint32(_egeb)
			_cgagc.RfeAttr = &_gcgdc
			continue
		}
		if _bbaba.Name.Local == "\u0072\u0066\u0066" {
			_aacdc, _fbcg := _a.ParseUint(_bbaba.Value, 10, 32)
			if _fbcg != nil {
				return _fbcg
			}
			_bbcda := uint32(_aacdc)
			_cgagc.RffAttr = &_bbcda
			continue
		}
	}
	for {
		_edga, _cbccb := d.Token()
		if _cbccb != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0072a\u0077\u0069\u006e\u0067\u0048\u0046\u003a\u0020\u0025\u0073", _cbccb)
		}
		if _fddgc, _efdaa := _edga.(_gd.EndElement); _efdaa && _fddgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cabab *CT_Parameter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cabab.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cabab.NameAttr)})
	}
	if _cabab.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cabab.SqlTypeAttr)})
	}
	if _cabab.ParameterTypeAttr != ST_ParameterTypeUnset {
		_gebdfd, _eagbg := _cabab.ParameterTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065"})
		if _eagbg != nil {
			return _eagbg
		}
		start.Attr = append(start.Attr, _gebdfd)
	}
	if _cabab.RefreshOnChangeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cabab.RefreshOnChangeAttr))})
	}
	if _cabab.PromptAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cabab.PromptAttr)})
	}
	if _cabab.BooleanAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062o\u006f\u006c\u0065\u0061\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cabab.BooleanAttr))})
	}
	if _cabab.DoubleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u006f\u0075\u0062\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cabab.DoubleAttr)})
	}
	if _cabab.IntegerAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069n\u0074\u0065\u0067\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_cabab.IntegerAttr)})
	}
	if _cabab.StringAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0072\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0076", *_cabab.StringAttr)})
	}
	if _cabab.CellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_cabab.CellAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ebgaac *ST_TableType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bbddgf, _badfd := d.Token()
	if _badfd != nil {
		return _badfd
	}
	if _eefbag, _dacebe := _bbddgf.(_gd.EndElement); _dacebe && _eefbag.Name == start.Name {
		*_ebgaac = 1
		return nil
	}
	if _bbeabf, _deacdb := _bbddgf.(_gd.CharData); !_deacdb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbddgf)
	} else {
		switch string(_bbeabf) {
		case "":
			*_ebgaac = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_ebgaac = 1
		case "\u0078\u006d\u006c":
			*_ebgaac = 2
		case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
			*_ebgaac = 3
		}
	}
	_bbddgf, _badfd = d.Token()
	if _badfd != nil {
		return _badfd
	}
	if _ggeee, _gcfbee := _bbddgf.(_gd.EndElement); _gcfbee && _ggeee.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbddgf)
}

type CT_CustomFilters struct {

	// And
	AndAttr *bool

	// Custom Filter Criteria
	CustomFilter []*CT_CustomFilter
}

const (
	ST_TableTypeUnset      ST_TableType = 0
	ST_TableTypeWorksheet  ST_TableType = 1
	ST_TableTypeXml        ST_TableType = 2
	ST_TableTypeQueryTable ST_TableType = 3
)

func (_bcafe ST_SheetState) Validate() error { return _bcafe.ValidateWithPath("") }

func (_gagef *CT_SortState) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gagef.ColumnSortAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gagef.ColumnSortAttr))})
	}
	if _gagef.CaseSensitiveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gagef.CaseSensitiveAttr))})
	}
	if _gagef.SortMethodAttr != ST_SortMethodUnset {
		_ccagdc, _daecb := _gagef.SortMethodAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064"})
		if _daecb != nil {
			return _daecb
		}
		start.Attr = append(start.Attr, _ccagdc)
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _gagef.RefAttr)})
	e.EncodeToken(start)
	if _gagef.SortCondition != nil {
		_bbbeg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0073\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}}
		for _, _daacgba := range _gagef.SortCondition {
			e.EncodeElement(_daacgba, _bbbeg)
		}
	}
	if _gagef.ExtLst != nil {
		_ebfbcg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gagef.ExtLst, _ebfbcg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Pane and its children
func (_bgdfc *CT_Pane) Validate() error {
	return _bgdfc.ValidateWithPath("\u0043T\u005f\u0050\u0061\u006e\u0065")
}

// Validate validates the CT_Revisions and its children
func (_agccg *CT_Revisions) Validate() error {
	return _agccg.ValidateWithPath("\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073")
}

func NewCT_Tuple() *CT_Tuple { _fgdbc := &CT_Tuple{}; return _fgdbc }

// ValidateWithPath validates the CT_QueryTableRefresh and its children, prefixing error messages with path
func (_fgdbbf *CT_QueryTableRefresh) ValidateWithPath(path string) error {
	if _aaadb := _fgdbbf.QueryTableFields.ValidateWithPath(path + "\u002f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064\u0073"); _aaadb != nil {
		return _aaadb
	}
	if _fgdbbf.QueryTableDeletedFields != nil {
		if _defag := _fgdbbf.QueryTableDeletedFields.ValidateWithPath(path + "\u002fQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065l\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"); _defag != nil {
			return _defag
		}
	}
	if _fgdbbf.SortState != nil {
		if _gdaaad := _fgdbbf.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _gdaaad != nil {
			return _gdaaad
		}
	}
	if _fgdbbf.ExtLst != nil {
		if _gcfac := _fgdbbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcfac != nil {
			return _gcfac
		}
	}
	return nil
}

const (
	ST_CalcModeUnset       ST_CalcMode = 0
	ST_CalcModeManual      ST_CalcMode = 1
	ST_CalcModeAuto        ST_CalcMode = 2
	ST_CalcModeAutoNoTable ST_CalcMode = 3
)

func (_cdddd ST_TargetScreenSize) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bccagb := _gd.Attr{}
	_bccagb.Name = name
	switch _cdddd {
	case ST_TargetScreenSizeUnset:
		_bccagb.Value = ""
	case ST_TargetScreenSize544x376:
		_bccagb.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_TargetScreenSize640x480:
		_bccagb.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_TargetScreenSize720x512:
		_bccagb.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_TargetScreenSize800x600:
		_bccagb.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_TargetScreenSize1024x768:
		_bccagb.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_TargetScreenSize1152x882:
		_bccagb.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_TargetScreenSize1152x900:
		_bccagb.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_TargetScreenSize1280x1024:
		_bccagb.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_TargetScreenSize1600x1200:
		_bccagb.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_TargetScreenSize1800x1440:
		_bccagb.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case ST_TargetScreenSize1920x1200:
		_bccagb.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _bccagb, nil
}

func (_efed *CT_FontScheme) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_ebgee, _bbfcb := _efed.ValAttr.MarshalXMLAttr(_gd.Name{Local: "\u0076\u0061\u006c"})
	if _bbfcb != nil {
		return _bbfcb
	}
	start.Attr = append(start.Attr, _ebgee)
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_FieldUsage struct {

	// Field Index
	XAttr int32
}

type CT_MetadataStrings struct {

	// MDX Metadata String Count
	CountAttr *uint32

	// MDX Metadata String
	S []*CT_XStringElement
}

func (_gegdcc ST_SheetViewType) Validate() error { return _gegdcc.ValidateWithPath("") }

func (_efffg ST_FilterOperator) Validate() error { return _efffg.ValidateWithPath("") }

type CT_Cols struct {

	// Column Width & Formatting
	Col []*CT_Col
}

type CT_DdeItem struct {

	// DDE Name
	NameAttr *string

	// Object Linking TechnologyE
	OleAttr *bool

	// Advise
	AdviseAttr *bool

	// Data is an Image
	PreferPicAttr *bool

	// DDE Name Values
	Values *CT_DdeValues
}

func (_bcdbg ST_Qualifier) String() string {
	switch _bcdbg {
	case 0:
		return ""
	case 1:
		return "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 2:
		return "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// Validate validates the CT_UndoInfo and its children
func (_fabdg *CT_UndoInfo) Validate() error {
	return _fabdg.ValidateWithPath("C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f")
}

// Validate validates the CT_PivotTableStyle and its children
func (_cbfded *CT_PivotTableStyle) Validate() error {
	return _cbfded.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_CalculatedMembers and its children
func (_dage *CT_CalculatedMembers) Validate() error {
	return _dage.ValidateWithPath("C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073")
}

type ST_Sqref []string

// ValidateWithPath validates the CT_PivotDimension and its children, prefixing error messages with path
func (_egedab *CT_PivotDimension) ValidateWithPath(path string) error { return nil }

func (_bgafb *ST_GrowShrinkType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bgafed, _gbgfgb := d.Token()
	if _gbgfgb != nil {
		return _gbgfgb
	}
	if _bffea, _afgca := _bgafed.(_gd.EndElement); _afgca && _bffea.Name == start.Name {
		*_bgafb = 1
		return nil
	}
	if _aegea, _begcdb := _bgafed.(_gd.CharData); !_begcdb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgafed)
	} else {
		switch string(_aegea) {
		case "":
			*_bgafb = 0
		case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
			*_bgafb = 1
		case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
			*_bgafb = 2
		case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
			*_bgafb = 3
		}
	}
	_bgafed, _gbgfgb = d.Token()
	if _gbgfgb != nil {
		return _gbgfgb
	}
	if _deefg, _cfgaag := _bgafed.(_gd.EndElement); _cfgaag && _deefg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgafed)
}

func (_gafc *CT_AutoSortScope) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gafc.PivotArea = NewCT_PivotArea()
_be:
	for {
		_cgg, _add := d.Token()
		if _add != nil {
			return _add
		}
		switch _dfb := _cgg.(type) {
		case _gd.StartElement:
			switch _dfb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _ccb := d.DecodeElement(_gafc.PivotArea, &_dfb); _ccb != nil {
					return _ccb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065\u0020\u0025v", _dfb.Name)
				if _eef := d.Skip(); _eef != nil {
					return _eef
				}
			}
		case _gd.EndElement:
			break _be
		case _gd.CharData:
		}
	}
	return nil
}

type CT_CustomWorkbookView struct {

	// Custom View Name
	NameAttr string

	// Custom View GUID
	GuidAttr string

	// Auto Update
	AutoUpdateAttr *bool

	// Merge Interval
	MergeIntervalAttr *uint32

	// Changes Saved Win
	ChangesSavedWinAttr *bool

	// Only Synch
	OnlySyncAttr *bool

	// Personal View
	PersonalViewAttr *bool

	// Include Print Settings
	IncludePrintSettingsAttr *bool

	// Include Hidden Rows & Columns
	IncludeHiddenRowColAttr *bool

	// Maximized
	MaximizedAttr *bool

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Top Left Corner (X Coordinate)
	XWindowAttr *int32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr uint32

	// Window Height
	WindowHeightAttr uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// Active Sheet in Book View
	ActiveSheetIdAttr uint32

	// Show Formula Bar
	ShowFormulaBarAttr *bool

	// Show Status Bar
	ShowStatusbarAttr *bool

	// Show Comments
	ShowCommentsAttr ST_Comments

	// Show Objects
	ShowObjectsAttr ST_Objects
	ExtLst          *CT_ExtensionList
}

type CT_CommentPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Alternative Text
	AltTextAttr *string

	// Text Horizontal Alignment
	TextHAlignAttr ST_TextHAlign

	// ext Vertical Alignment
	TextVAlignAttr ST_TextVAlign

	// Text Lock Flag
	LockTextAttr *bool

	// Far East Alignment Flag
	JustLastXAttr *bool

	// Automatic Text Scaling Flag
	AutoScaleAttr *bool
	Anchor        *CT_ObjectAnchor
}

func (_gcage ST_PatternType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_gcage.String(), start)
}

type CT_OlapPr struct {

	// Local Cube
	LocalAttr *bool

	// Local Cube Connection
	LocalConnectionAttr *string

	// Local Refresh
	LocalRefreshAttr *bool

	// Send Locale to OLAP
	SendLocaleAttr *bool

	// Drill Through Count
	RowDrillCountAttr *uint32

	// OLAP Fill Formatting
	ServerFillAttr *bool

	// OLAP Number Format
	ServerNumberFormatAttr *bool

	// OLAP Server Font
	ServerFontAttr *bool

	// OLAP Font Formatting
	ServerFontColorAttr *bool
}

const (
	ST_VolValueTypeUnset ST_VolValueType = 0
	ST_VolValueTypeB     ST_VolValueType = 1
	ST_VolValueTypeN     ST_VolValueType = 2
	ST_VolValueTypeE     ST_VolValueType = 3
	ST_VolValueTypeS     ST_VolValueType = 4
)

type CT_VolMain struct {

	// First String
	FirstAttr string

	// Topic
	Tp []*CT_VolTopic
}

type CT_PageSetUpPr struct {

	// Show Auto Page Breaks
	AutoPageBreaksAttr *bool

	// Fit To Page
	FitToPageAttr *bool
}

const (
	ST_BorderStyleUnset            ST_BorderStyle = 0
	ST_BorderStyleNone             ST_BorderStyle = 1
	ST_BorderStyleThin             ST_BorderStyle = 2
	ST_BorderStyleMedium           ST_BorderStyle = 3
	ST_BorderStyleDashed           ST_BorderStyle = 4
	ST_BorderStyleDotted           ST_BorderStyle = 5
	ST_BorderStyleThick            ST_BorderStyle = 6
	ST_BorderStyleDouble           ST_BorderStyle = 7
	ST_BorderStyleHair             ST_BorderStyle = 8
	ST_BorderStyleMediumDashed     ST_BorderStyle = 9
	ST_BorderStyleDashDot          ST_BorderStyle = 10
	ST_BorderStyleMediumDashDot    ST_BorderStyle = 11
	ST_BorderStyleDashDotDot       ST_BorderStyle = 12
	ST_BorderStyleMediumDashDotDot ST_BorderStyle = 13
	ST_BorderStyleSlantDashDot     ST_BorderStyle = 14
)

type CT_Cfvo struct {

	// Type
	TypeAttr ST_CfvoType

	// Value
	ValAttr *string

	// Greater Than Or Equal
	GteAttr *bool
	ExtLst  *CT_ExtensionList
}

func (_fafdg *CT_HierarchyUsage) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0076", _fafdg.HierarchyUsageAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_aaabd ST_GradientType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_aaabd.String(), start)
}

func (_dcecc *Connections) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dcecc.CT_Connections = *NewCT_Connections()
_dbfaag:
	for {
		_dbdfde, _gcdgd := d.Token()
		if _gcdgd != nil {
			return _gcdgd
		}
		switch _aabeg := _dbdfde.(type) {
		case _gd.StartElement:
			switch _aabeg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_adaaf := NewCT_Connection()
				if _deeedb := d.DecodeElement(_adaaf, &_aabeg); _deeedb != nil {
					return _deeedb
				}
				_dcecc.Connection = append(_dcecc.Connection, _adaaf)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _aabeg.Name)
				if _adgfbb := d.Skip(); _adgfbb != nil {
					return _adgfbb
				}
			}
		case _gd.EndElement:
			break _dbfaag
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_GroupLevels() *CT_GroupLevels { _bfdb := &CT_GroupLevels{}; return _bfdb }

type CT_TableColumns struct {

	// Column Count
	CountAttr *uint32

	// Table Column
	TableColumn []*CT_TableColumn
}

func NewTable() *Table { _aedea := &Table{}; _aedea.CT_Table = *NewCT_Table(); return _aedea }

func (_eccfbe ST_ParameterType) String() string {
	switch _eccfbe {
	case 0:
		return ""
	case 1:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	case 2:
		return "\u0076\u0061\u006cu\u0065"
	case 3:
		return "\u0063\u0065\u006c\u006c"
	}
	return ""
}

// ValidateWithPath validates the CT_PivotFields and its children, prefixing error messages with path
func (_ggcdc *CT_PivotFields) ValidateWithPath(path string) error {
	for _abaaa, _bfdfc := range _ggcdc.PivotField {
		if _bfbge := _bfdfc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _abaaa)); _bfbge != nil {
			return _bfbge
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellStyle and its children, prefixing error messages with path
func (_bdee *CT_CellStyle) ValidateWithPath(path string) error {
	if _bdee.ExtLst != nil {
		if _agec := _bdee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agec != nil {
			return _agec
		}
	}
	return nil
}

type Metadata struct{ CT_Metadata }

func (_geeca ST_DateTimeGrouping) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cgfff := _gd.Attr{}
	_cgfff.Name = name
	switch _geeca {
	case ST_DateTimeGroupingUnset:
		_cgfff.Value = ""
	case ST_DateTimeGroupingYear:
		_cgfff.Value = "\u0079\u0065\u0061\u0072"
	case ST_DateTimeGroupingMonth:
		_cgfff.Value = "\u006d\u006f\u006et\u0068"
	case ST_DateTimeGroupingDay:
		_cgfff.Value = "\u0064\u0061\u0079"
	case ST_DateTimeGroupingHour:
		_cgfff.Value = "\u0068\u006f\u0075\u0072"
	case ST_DateTimeGroupingMinute:
		_cgfff.Value = "\u006d\u0069\u006e\u0075\u0074\u0065"
	case ST_DateTimeGroupingSecond:
		_cgfff.Value = "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return _cgfff, nil
}

func (_efaef *CT_MeasureGroup) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _edefc := range start.Attr {
		if _edefc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbfed, _cabdgg := _edefc.Value, error(nil)
			if _cabdgg != nil {
				return _cabdgg
			}
			_efaef.NameAttr = _gbfed
			continue
		}
		if _edefc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ggedb, _gdcdd := _edefc.Value, error(nil)
			if _gdcdd != nil {
				return _gdcdd
			}
			_efaef.CaptionAttr = _ggedb
			continue
		}
	}
	for {
		_gbgdc, _ddcfc := d.Token()
		if _ddcfc != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072e\u0047\u0072\u006fu\u0070:\u0020\u0025\u0073", _ddcfc)
		}
		if _abgfc, _gbgcd := _gbgdc.(_gd.EndElement); _gbgcd && _abgfc.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_rowItems() *CT_rowItems { _defeg := &CT_rowItems{}; return _defeg }

func (_gcggf *CT_LegacyDrawing) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bcbeae := range start.Attr {
		if _bcbeae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bcbeae.Name.Local == "\u0069\u0064" || _bcbeae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bcbeae.Name.Local == "\u0069\u0064" {
			_gafebd, _efbfg := _bcbeae.Value, error(nil)
			if _efbfg != nil {
				return _efbfg
			}
			_gcggf.IdAttr = _gafebd
			continue
		}
	}
	for {
		_bbdcbc, _cggfc := d.Token()
		if _cggfc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0065\u0067\u0061c\u0079D\u0072\u0061\u0077\u0069\u006e\u0067\u003a \u0025\u0073", _cggfc)
		}
		if _cbfee, _acadc := _bbdcbc.(_gd.EndElement); _acadc && _cbfee.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_XStringElement struct {

	// Value
	VAttr string
}

func (_cfcga ST_Visibility) Validate() error { return _cfcga.ValidateWithPath("") }

func NewCT_CustomWorkbookViews() *CT_CustomWorkbookViews {
	_bagfb := &CT_CustomWorkbookViews{}
	return _bagfb
}

type CT_FontSize struct {

	// Value
	ValAttr float64
}

// ValidateWithPath validates the CT_Dxf and its children, prefixing error messages with path
func (_afgac *CT_Dxf) ValidateWithPath(path string) error {
	if _afgac.Font != nil {
		if _bggc := _afgac.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _bggc != nil {
			return _bggc
		}
	}
	if _afgac.NumFmt != nil {
		if _cbcb := _afgac.NumFmt.ValidateWithPath(path + "\u002fN\u0075\u006d\u0046\u006d\u0074"); _cbcb != nil {
			return _cbcb
		}
	}
	if _afgac.Fill != nil {
		if _bgddf := _afgac.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _bgddf != nil {
			return _bgddf
		}
	}
	if _afgac.Alignment != nil {
		if _aegb := _afgac.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _aegb != nil {
			return _aegb
		}
	}
	if _afgac.Border != nil {
		if _abec := _afgac.Border.ValidateWithPath(path + "\u002fB\u006f\u0072\u0064\u0065\u0072"); _abec != nil {
			return _abec
		}
	}
	if _afgac.Protection != nil {
		if _eggbd := _afgac.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _eggbd != nil {
			return _eggbd
		}
	}
	if _afgac.ExtLst != nil {
		if _gabab := _afgac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gabab != nil {
			return _gabab
		}
	}
	return nil
}

func (_defga *CT_TupleCache) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _defga.Entries != nil {
		_gbfcf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0074\u0072\u0069\u0065\u0073"}}
		e.EncodeElement(_defga.Entries, _gbfcf)
	}
	if _defga.Sets != nil {
		_agbcea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0073\u0065\u0074\u0073"}}
		e.EncodeElement(_defga.Sets, _agbcea)
	}
	if _defga.QueryCache != nil {
		_ddgebf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_defga.QueryCache, _ddgebf)
	}
	if _defga.ServerFormats != nil {
		_aeceg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_defga.ServerFormats, _aeceg)
	}
	if _defga.ExtLst != nil {
		_eebede := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_defga.ExtLst, _eebede)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_gedgb *CT_SheetDimension) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bdgcc := range start.Attr {
		if _bdgcc.Name.Local == "\u0072\u0065\u0066" {
			_agfgbd, _gdgacb := _bdgcc.Value, error(nil)
			if _gdgacb != nil {
				return _gdgacb
			}
			_gedgb.RefAttr = _agfgbd
			continue
		}
	}
	for {
		_aeddb, _gadbg := d.Token()
		if _gadbg != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _gadbg)
		}
		if _afgeg, _decde := _aeddb.(_gd.EndElement); _decde && _afgeg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DynamicFilter and its children
func (_cagbg *CT_DynamicFilter) Validate() error {
	return _cagbg.ValidateWithPath("\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072")
}

func (_gbeeg *CT_PageField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0076", _gbeeg.FldAttr)})
	if _gbeeg.ItemAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_gbeeg.ItemAttr)})
	}
	if _gbeeg.HierAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_gbeeg.HierAttr)})
	}
	if _gbeeg.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_gbeeg.NameAttr)})
	}
	if _gbeeg.CapAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_gbeeg.CapAttr)})
	}
	e.EncodeToken(start)
	if _gbeeg.ExtLst != nil {
		_cbeff := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gbeeg.ExtLst, _cbeff)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewPivotTableDefinition() *PivotTableDefinition {
	_deab := &PivotTableDefinition{}
	_deab.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	return _deab
}

func (_dbgdc ST_PaneState) String() string {
	switch _dbgdc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070\u006ci\u0074"
	case 2:
		return "\u0066\u0072\u006f\u007a\u0065\u006e"
	case 3:
		return "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return ""
}

func NewConnections() *Connections {
	_bdbcf := &Connections{}
	_bdbcf.CT_Connections = *NewCT_Connections()
	return _bdbcf
}

func (_gefga ST_DataValidationErrorStyle) String() string {
	switch _gefga {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u006f\u0070"
	case 2:
		return "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case 3:
		return "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return ""
}

func (_bebfc *CT_DateGroupItem) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bebfc.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	for _, _bcbg := range start.Attr {
		if _bcbg.Name.Local == "\u0079\u0065\u0061\u0072" {
			_bffc, _aagac := _a.ParseUint(_bcbg.Value, 10, 16)
			if _aagac != nil {
				return _aagac
			}
			_bebfc.YearAttr = uint16(_bffc)
			continue
		}
		if _bcbg.Name.Local == "\u006d\u006f\u006et\u0068" {
			_dafd, _cgbe := _a.ParseUint(_bcbg.Value, 10, 16)
			if _cgbe != nil {
				return _cgbe
			}
			_gbgd := uint16(_dafd)
			_bebfc.MonthAttr = &_gbgd
			continue
		}
		if _bcbg.Name.Local == "\u0064\u0061\u0079" {
			_afaad, _fdeg := _a.ParseUint(_bcbg.Value, 10, 16)
			if _fdeg != nil {
				return _fdeg
			}
			_dbdbe := uint16(_afaad)
			_bebfc.DayAttr = &_dbdbe
			continue
		}
		if _bcbg.Name.Local == "\u0068\u006f\u0075\u0072" {
			_bfafa, _eaacg := _a.ParseUint(_bcbg.Value, 10, 16)
			if _eaacg != nil {
				return _eaacg
			}
			_fbca := uint16(_bfafa)
			_bebfc.HourAttr = &_fbca
			continue
		}
		if _bcbg.Name.Local == "\u006d\u0069\u006e\u0075\u0074\u0065" {
			_ggge, _aada := _a.ParseUint(_bcbg.Value, 10, 16)
			if _aada != nil {
				return _aada
			}
			_fdbdf := uint16(_ggge)
			_bebfc.MinuteAttr = &_fdbdf
			continue
		}
		if _bcbg.Name.Local == "\u0073\u0065\u0063\u006f\u006e\u0064" {
			_dbgf, _gefabd := _a.ParseUint(_bcbg.Value, 10, 16)
			if _gefabd != nil {
				return _gefabd
			}
			_gdfa := uint16(_dbgf)
			_bebfc.SecondAttr = &_gdfa
			continue
		}
		if _bcbg.Name.Local == "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067" {
			_bebfc.DateTimeGroupingAttr.UnmarshalXMLAttr(_bcbg)
			continue
		}
	}
	for {
		_efcf, _eegec := d.Token()
		if _eegec != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065G\u0072o\u0075\u0070\u0049\u0074\u0065\u006d\u003a \u0025\u0073", _eegec)
		}
		if _gadfa, _bfegg := _efcf.(_gd.EndElement); _bfegg && _gadfa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_babefa ST_PhoneticType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_agfbd := _gd.Attr{}
	_agfbd.Name = name
	switch _babefa {
	case ST_PhoneticTypeUnset:
		_agfbd.Value = ""
	case ST_PhoneticTypeHalfwidthKatakana:
		_agfbd.Value = "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeFullwidthKatakana:
		_agfbd.Value = "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeHiragana:
		_agfbd.Value = "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_PhoneticTypeNoConversion:
		_agfbd.Value = "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return _agfbd, nil
}

// ValidateWithPath validates the CT_GroupLevels and its children, prefixing error messages with path
func (_debb *CT_GroupLevels) ValidateWithPath(path string) error {
	for _ddbcg, _gcdcfa := range _debb.GroupLevel {
		if _cbccf := _gcdcfa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _ddbcg)); _cbccf != nil {
			return _cbccf
		}
	}
	return nil
}

func NewCT_DataField() *CT_DataField { _dcde := &CT_DataField{}; return _dcde }

func (_fagf *CT_Cols) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_agbe:
	for {
		_cbdb, _cecd := d.Token()
		if _cecd != nil {
			return _cecd
		}
		switch _aged := _cbdb.(type) {
		case _gd.StartElement:
			switch _aged.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}:
				_cbbf := NewCT_Col()
				if _eddg := d.DecodeElement(_cbbf, &_aged); _eddg != nil {
					return _eddg
				}
				_fagf.Col = append(_fagf.Col, _cbbf)
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0073\u0020\u0025\u0076", _aged.Name)
				if _fedg := d.Skip(); _fedg != nil {
					return _fedg
				}
			}
		case _gd.EndElement:
			break _agbe
		case _gd.CharData:
		}
	}
	return nil
}

type ST_FilterOperator byte

// Validate validates the CT_MdxSet and its children
func (_cfadg *CT_MdxSet) Validate() error {
	return _cfadg.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t")
}

func NewCT_CacheFields() *CT_CacheFields { _gba := &CT_CacheFields{}; return _gba }

func (_accdd ST_ShowDataAs) Validate() error { return _accdd.ValidateWithPath("") }

func NewCT_Break() *CT_Break { _dffa := &CT_Break{}; return _dffa }

func (_gceacc *ST_DvAspect) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gceacc = 0
	case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
		*_gceacc = 1
	case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
		*_gceacc = 2
	}
	return nil
}

type CT_MdxTuple struct {

	// Member Index Count
	CAttr *uint32

	// Server Formatting Culture Currency
	CtAttr *string

	// Server Formatting String Index
	SiAttr *uint32

	// Server Formatting Built-In Number Format Index
	FiAttr *uint32

	// Server Formatting Background Color
	BcAttr *string

	// Server Formatting Foreground Color
	FcAttr *string

	// Server Formatting Italic Font
	IAttr *bool

	// Server Formatting Underline Font
	UAttr *bool

	// Server Formatting Strikethrough Font
	StAttr *bool

	// Server Formatting Bold Font
	BAttr *bool

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

// ValidateWithPath validates the Chartsheet and its children, prefixing error messages with path
func (_ffced *Chartsheet) ValidateWithPath(path string) error {
	if _ebdgbc := _ffced.CT_Chartsheet.ValidateWithPath(path); _ebdgbc != nil {
		return _ebdgbc
	}
	return nil
}

type CT_MetadataBlocks struct {

	// Metadata Block Count
	CountAttr *uint32

	// Metadata Block
	Bk []*CT_MetadataBlock
}

func (_eggfe *CT_Sets) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aeege := range start.Attr {
		if _aeege.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgagb, _dcbbg := _a.ParseUint(_aeege.Value, 10, 32)
			if _dcbbg != nil {
				return _dcbbg
			}
			_bddfd := uint32(_bgagb)
			_eggfe.CountAttr = &_bddfd
			continue
		}
	}
_ccdbe:
	for {
		_ebfcf, _ddfcdc := d.Token()
		if _ddfcdc != nil {
			return _ddfcdc
		}
		switch _ebdgdf := _ebfcf.(type) {
		case _gd.StartElement:
			switch _ebdgdf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_daebg := NewCT_Set()
				if _fdgaa := d.DecodeElement(_daebg, &_ebdgdf); _fdgaa != nil {
					return _fdgaa
				}
				_eggfe.Set = append(_eggfe.Set, _daebg)
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _ebdgdf.Name)
				if _bagda := d.Skip(); _bagda != nil {
					return _bagda
				}
			}
		case _gd.EndElement:
			break _ccdbe
		case _gd.CharData:
		}
	}
	return nil
}

func (_bgbeg *CT_DataBinding) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bgbeg.DataBindingNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bgbeg.DataBindingNameAttr)})
	}
	if _bgbeg.FileBindingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bgbeg.FileBindingAttr))})
	}
	if _bgbeg.ConnectionIDAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044"}, Value: _b.Sprintf("\u0025\u0076", *_bgbeg.ConnectionIDAttr)})
	}
	if _bgbeg.FileBindingNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bgbeg.FileBindingNameAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bgbeg.DataBindingLoadModeAttr)})
	e.EncodeToken(start)
	if _bgbeg.Any != nil {
		_bgbeg.Any.MarshalXML(e, _gd.StartElement{})
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_MemberProperties() *CT_MemberProperties { _gfdcc := &CT_MemberProperties{}; return _gfdcc }

func (_gffa *CT_Color) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gdgdf := range start.Attr {
		if _gdgdf.Name.Local == "\u0061\u0075\u0074\u006f" {
			_gbbdd, _egde := _a.ParseBool(_gdgdf.Value)
			if _egde != nil {
				return _egde
			}
			_gffa.AutoAttr = &_gbbdd
			continue
		}
		if _gdgdf.Name.Local == "\u0069n\u0064\u0065\u0078\u0065\u0064" {
			_degg, _cfgef := _a.ParseUint(_gdgdf.Value, 10, 32)
			if _cfgef != nil {
				return _cfgef
			}
			_acgd := uint32(_degg)
			_gffa.IndexedAttr = &_acgd
			continue
		}
		if _gdgdf.Name.Local == "\u0072\u0067\u0062" {
			_aceg, _efec := _gdgdf.Value, error(nil)
			if _efec != nil {
				return _efec
			}
			_gffa.RgbAttr = &_aceg
			continue
		}
		if _gdgdf.Name.Local == "\u0074\u0068\u0065m\u0065" {
			_cfcac, _gcdg := _a.ParseUint(_gdgdf.Value, 10, 32)
			if _gcdg != nil {
				return _gcdg
			}
			_daae := uint32(_cfcac)
			_gffa.ThemeAttr = &_daae
			continue
		}
		if _gdgdf.Name.Local == "\u0074\u0069\u006e\u0074" {
			_fbgg, _afba := _a.ParseFloat(_gdgdf.Value, 64)
			if _afba != nil {
				return _afba
			}
			_gffa.TintAttr = &_fbgg
			continue
		}
	}
	for {
		_fegc, _gdga := d.Token()
		if _gdga != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072: \u0025\u0073", _gdga)
		}
		if _dfdec, _abfeb := _fegc.(_gd.EndElement); _abfeb && _dfdec.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cafegf *CT_DataValidation) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dgbbb := range start.Attr {
		if _dgbbb.Name.Local == "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_ebecb, _cbab := _a.ParseBool(_dgbbb.Value)
			if _cbab != nil {
				return _cbab
			}
			_cafegf.ShowErrorMessageAttr = &_ebecb
			continue
		}
		if _dgbbb.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065" {
			_aafbc, _bbcce := _dgbbb.Value, error(nil)
			if _bbcce != nil {
				return _bbcce
			}
			_cafegf.ErrorTitleAttr = &_aafbc
			continue
		}
		if _dgbbb.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065" {
			_cafegf.ErrorStyleAttr.UnmarshalXMLAttr(_dgbbb)
			continue
		}
		if _dgbbb.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_cafegf.OperatorAttr.UnmarshalXMLAttr(_dgbbb)
			continue
		}
		if _dgbbb.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b" {
			_edaa, _beedb := _a.ParseBool(_dgbbb.Value)
			if _beedb != nil {
				return _beedb
			}
			_cafegf.AllowBlankAttr = &_edaa
			continue
		}
		if _dgbbb.Name.Local == "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_gfbd, _cbcc := _a.ParseBool(_dgbbb.Value)
			if _cbcc != nil {
				return _cbcc
			}
			_cafegf.ShowDropDownAttr = &_gfbd
			continue
		}
		if _dgbbb.Name.Local == "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_badab, _egad := _a.ParseBool(_dgbbb.Value)
			if _egad != nil {
				return _egad
			}
			_cafegf.ShowInputMessageAttr = &_badab
			continue
		}
		if _dgbbb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cafegf.TypeAttr.UnmarshalXMLAttr(_dgbbb)
			continue
		}
		if _dgbbb.Name.Local == "\u0069m\u0065\u004d\u006f\u0064\u0065" {
			_cafegf.ImeModeAttr.UnmarshalXMLAttr(_dgbbb)
			continue
		}
		if _dgbbb.Name.Local == "\u0065\u0072\u0072o\u0072" {
			_abae, _eabef := _dgbbb.Value, error(nil)
			if _eabef != nil {
				return _eabef
			}
			_cafegf.ErrorAttr = &_abae
			continue
		}
		if _dgbbb.Name.Local == "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065" {
			_ddad, _bcabb := _dgbbb.Value, error(nil)
			if _bcabb != nil {
				return _bcabb
			}
			_cafegf.PromptTitleAttr = &_ddad
			continue
		}
		if _dgbbb.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_ffgba, _cgecc := _dgbbb.Value, error(nil)
			if _cgecc != nil {
				return _cgecc
			}
			_cafegf.PromptAttr = &_ffgba
			continue
		}
		if _dgbbb.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_gdac, _cgece := ParseSliceST_Sqref(_dgbbb.Value)
			if _cgece != nil {
				return _cgece
			}
			_cafegf.SqrefAttr = _gdac
			continue
		}
	}
_gdef:
	for {
		_bdeec, _eababb := d.Token()
		if _eababb != nil {
			return _eababb
		}
		switch _gbebd := _bdeec.(type) {
		case _gd.StartElement:
			switch _gbebd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}:
				_cafegf.Formula1 = new(string)
				if _agdbc := d.DecodeElement(_cafegf.Formula1, &_gbebd); _agdbc != nil {
					return _agdbc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}:
				_cafegf.Formula2 = new(string)
				if _cdcf := d.DecodeElement(_cafegf.Formula2, &_gbebd); _cdcf != nil {
					return _cdcf
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gbebd.Name)
				if _ebbdc := d.Skip(); _ebbdc != nil {
					return _ebbdc
				}
			}
		case _gd.EndElement:
			break _gdef
		case _gd.CharData:
		}
	}
	return nil
}

func (_ddega *CT_PCDSCPage) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bafad := range start.Attr {
		if _bafad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_adafg, _gaeff := _a.ParseUint(_bafad.Value, 10, 32)
			if _gaeff != nil {
				return _gaeff
			}
			_ecaabc := uint32(_adafg)
			_ddega.CountAttr = &_ecaabc
			continue
		}
	}
_aceac:
	for {
		_edbda, _feddd := d.Token()
		if _feddd != nil {
			return _feddd
		}
		switch _dagc := _edbda.(type) {
		case _gd.StartElement:
			switch _dagc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}:
				_efgfgc := NewCT_PageItem()
				if _fdbcc := d.DecodeElement(_efgfgc, &_dagc); _fdbcc != nil {
					return _fdbcc
				}
				_ddega.PageItem = append(_ddega.PageItem, _efgfgc)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0043\u0044S\u0043\u0050\u0061\u0067\u0065\u0020\u0025\u0076", _dagc.Name)
				if _cadaa := d.Skip(); _cadaa != nil {
					return _cadaa
				}
			}
		case _gd.EndElement:
			break _aceac
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Control struct {

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      string

	// Control Name
	NameAttr *string

	// Embedded Control Properties
	ControlPr *CT_ControlPr
}

func (_agdda *QueryTable) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	return _agdda.CT_QueryTable.MarshalXML(e, start)
}

// Validate validates the CT_ChartsheetViews and its children
func (_beda *CT_ChartsheetViews) Validate() error {
	return _beda.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073")
}

func (_abggd ST_DdeValueType) ValidateWithPath(path string) error {
	switch _abggd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abggd))
	}
	return nil
}

func NewCT_Selection() *CT_Selection { _aacgg := &CT_Selection{}; return _aacgg }

func (_fbcbac *CT_FutureMetadata) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _fbcbac.NameAttr)})
	if _fbcbac.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fbcbac.CountAttr)})
	}
	e.EncodeToken(start)
	if _fbcbac.Bk != nil {
		_fgfda := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ab\u006b"}}
		for _, _fead := range _fbcbac.Bk {
			e.EncodeElement(_fead, _fgfda)
		}
	}
	if _fbcbac.ExtLst != nil {
		_edcaf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fbcbac.ExtLst, _edcaf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cfbf *CT_DbPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _cfbf.ConnectionAttr)})
	if _cfbf.CommandAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006d\u006d\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cfbf.CommandAttr)})
	}
	if _cfbf.ServerCommandAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cfbf.ServerCommandAttr)})
	}
	if _cfbf.CommandTypeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cfbf.CommandTypeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WorkbookProtection and its children
func (_cebcg *CT_WorkbookProtection) Validate() error {
	return _cebcg.ValidateWithPath("C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e")
}

func (_fbb *CT_CalcChain) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_bcfed := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063"}}
	for _, _ceee := range _fbb.C {
		e.EncodeElement(_ceee, _bcfed)
	}
	if _fbb.ExtLst != nil {
		_befd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fbb.ExtLst, _befd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ebgbg *ST_PhoneticAlignment) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_ebgbg = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_ebgbg = 1
	case "\u006c\u0065\u0066\u0074":
		*_ebgbg = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_ebgbg = 3
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_ebgbg = 4
	}
	return nil
}

type CT_Items struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field Item
	Item []*CT_Item
}

func (_fdgaaa ST_SortMethod) ValidateWithPath(path string) error {
	switch _fdgaaa {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdgaaa))
	}
	return nil
}

type CT_PivotFilter struct {

	// Field Index
	FldAttr uint32

	// Member Property Field Id
	MpFldAttr *uint32

	// Pivot Filter Type
	TypeAttr ST_PivotFilterType

	// Evaluation Order
	EvalOrderAttr *int32

	// Pivot Filter Id
	IdAttr uint32

	// Measure Index
	IMeasureHierAttr *uint32

	// Measure Field Index
	IMeasureFldAttr *uint32

	// Pivot Filter Name
	NameAttr *string

	// Pivot Filter Description
	DescriptionAttr *string

	// Label Pivot
	StringValue1Attr *string

	// Label Pivot Filter String Value 2
	StringValue2Attr *string

	// Auto Filter
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

// Validate validates the CT_Worksheet and its children
func (_egeebad *CT_Worksheet) Validate() error {
	return _egeebad.ValidateWithPath("\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_AutoFilter and its children, prefixing error messages with path
func (_bgfd *CT_AutoFilter) ValidateWithPath(path string) error {
	for _dbf, _cab := range _bgfd.FilterColumn {
		if _cgf := _cab.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0046il\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u005b\u0025\u0064\u005d", path, _dbf)); _cgf != nil {
			return _cgf
		}
	}
	if _bgfd.SortState != nil {
		if _cc := _bgfd.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _cc != nil {
			return _cc
		}
	}
	if _bgfd.ExtLst != nil {
		if _bfc := _bgfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfc != nil {
			return _bfc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalReference and its children, prefixing error messages with path
func (_becgf *CT_ExternalReference) ValidateWithPath(path string) error { return nil }

func (_agcac *CT_QueryTableDeletedFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fgbbgc := range start.Attr {
		if _fgbbgc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gaeag, _gdecf := _a.ParseUint(_fgbbgc.Value, 10, 32)
			if _gdecf != nil {
				return _gdecf
			}
			_gdggb := uint32(_gaeag)
			_agcac.CountAttr = &_gdggb
			continue
		}
	}
_aacdb:
	for {
		_abgacb, _bgdfa := d.Token()
		if _bgdfa != nil {
			return _bgdfa
		}
		switch _faec := _abgacb.(type) {
		case _gd.StartElement:
			switch _faec.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}:
				_dbcbb := NewCT_DeletedField()
				if _ggcdg := d.DecodeElement(_dbcbb, &_faec); _ggcdg != nil {
					return _ggcdg
				}
				_agcac.DeletedField = append(_agcac.DeletedField, _dbcbb)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0051\u0075e\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _faec.Name)
				if _bafeb := d.Skip(); _bafeb != nil {
					return _bafeb
				}
			}
		case _gd.EndElement:
			break _aacdb
		case _gd.CharData:
		}
	}
	return nil
}

func (_gfafg *CT_RowHierarchiesUsage) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gfafg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gfafg.CountAttr)})
	}
	e.EncodeToken(start)
	_gabe := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _ddfbg := range _gfafg.RowHierarchyUsage {
		e.EncodeElement(_ddfbg, _gabe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_abecc *CT_ExternalReferences) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_bgcfa := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065"}}
	for _, _cceef := range _abecc.ExternalReference {
		e.EncodeElement(_cceef, _bgcfa)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

const (
	ST_VerticalAlignmentUnset       ST_VerticalAlignment = 0
	ST_VerticalAlignmentTop         ST_VerticalAlignment = 1
	ST_VerticalAlignmentCenter      ST_VerticalAlignment = 2
	ST_VerticalAlignmentBottom      ST_VerticalAlignment = 3
	ST_VerticalAlignmentJustify     ST_VerticalAlignment = 4
	ST_VerticalAlignmentDistributed ST_VerticalAlignment = 5
)

func (_dbacd *ST_TotalsRowFunction) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cdeeda, _feadbb := d.Token()
	if _feadbb != nil {
		return _feadbb
	}
	if _dbfede, _cccde := _cdeeda.(_gd.EndElement); _cccde && _dbfede.Name == start.Name {
		*_dbacd = 1
		return nil
	}
	if _adebc, _ffcgef := _cdeeda.(_gd.CharData); !_ffcgef {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdeeda)
	} else {
		switch string(_adebc) {
		case "":
			*_dbacd = 0
		case "\u006e\u006f\u006e\u0065":
			*_dbacd = 1
		case "\u0073\u0075\u006d":
			*_dbacd = 2
		case "\u006d\u0069\u006e":
			*_dbacd = 3
		case "\u006d\u0061\u0078":
			*_dbacd = 4
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_dbacd = 5
		case "\u0063\u006f\u0075n\u0074":
			*_dbacd = 6
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_dbacd = 7
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_dbacd = 8
		case "\u0076\u0061\u0072":
			*_dbacd = 9
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_dbacd = 10
		}
	}
	_cdeeda, _feadbb = d.Token()
	if _feadbb != nil {
		return _feadbb
	}
	if _dddeef, _ccggf := _cdeeda.(_gd.EndElement); _ccggf && _dddeef.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdeeda)
}

func (_baeac *CT_ExternalSheetNames) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bdafc:
	for {
		_gbbdg, _ffdaa := d.Token()
		if _ffdaa != nil {
			return _ffdaa
		}
		switch _cabe := _gbbdg.(type) {
		case _gd.StartElement:
			switch _cabe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}:
				_bcdae := NewCT_ExternalSheetName()
				if _degae := d.DecodeElement(_bcdae, &_cabe); _degae != nil {
					return _degae
				}
				_baeac.SheetName = append(_baeac.SheetName, _bcdae)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _cabe.Name)
				if _gcfaa := d.Skip(); _gcfaa != nil {
					return _gcfaa
				}
			}
		case _gd.EndElement:
			break _bdafc
		case _gd.CharData:
		}
	}
	return nil
}

func (_ddcc *CT_ExternalSheetData) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dabaa := range start.Attr {
		if _dabaa.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_cdcba, _ebgga := _a.ParseUint(_dabaa.Value, 10, 32)
			if _ebgga != nil {
				return _ebgga
			}
			_ddcc.SheetIdAttr = uint32(_cdcba)
			continue
		}
		if _dabaa.Name.Local == "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072" {
			_dgag, _agfdf := _a.ParseBool(_dabaa.Value)
			if _agfdf != nil {
				return _agfdf
			}
			_ddcc.RefreshErrorAttr = &_dgag
			continue
		}
	}
_eada:
	for {
		_ffgec, _bbabab := d.Token()
		if _bbabab != nil {
			return _bbabab
		}
		switch _bcadb := _ffgec.(type) {
		case _gd.StartElement:
			switch _bcadb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_egab := NewCT_ExternalRow()
				if _dbdge := d.DecodeElement(_egab, &_bcadb); _dbdge != nil {
					return _dbdge
				}
				_ddcc.Row = append(_ddcc.Row, _egab)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _bcadb.Name)
				if _aefeg := d.Skip(); _aefeg != nil {
					return _aefeg
				}
			}
		case _gd.EndElement:
			break _eada
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedItems and its children, prefixing error messages with path
func (_bacae *CT_CalculatedItems) ValidateWithPath(path string) error {
	for _gege, _cbge := range _bacae.CalculatedItem {
		if _gcbd := _cbge.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u0061lc\u0075l\u0061\u0074\u0065\u0064\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _gege)); _gcbd != nil {
			return _gcbd
		}
	}
	return nil
}

func (_aaafd *CT_Members) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cbccc := range start.Attr {
		if _cbccc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdeeb, _ecbc := _a.ParseUint(_cbccc.Value, 10, 32)
			if _ecbc != nil {
				return _ecbc
			}
			_gefgc := uint32(_cdeeb)
			_aaafd.CountAttr = &_gefgc
			continue
		}
		if _cbccc.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_gagce, _dbcaea := _a.ParseUint(_cbccc.Value, 10, 32)
			if _dbcaea != nil {
				return _dbcaea
			}
			_eafbc := uint32(_gagce)
			_aaafd.LevelAttr = &_eafbc
			continue
		}
	}
_ebdac:
	for {
		_eedcf, _cggbba := d.Token()
		if _cggbba != nil {
			return _cggbba
		}
		switch _abcc := _eedcf.(type) {
		case _gd.StartElement:
			switch _abcc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}:
				_ecabf := NewCT_Member()
				if _fcccf := d.DecodeElement(_ecabf, &_abcc); _fcccf != nil {
					return _fcccf
				}
				_aaafd.Member = append(_aaafd.Member, _ecabf)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _abcc.Name)
				if _bbgfg := d.Skip(); _bbgfg != nil {
					return _bbgfg
				}
			}
		case _gd.EndElement:
			break _ebdac
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Groups and its children, prefixing error messages with path
func (_cfbdf *CT_Groups) ValidateWithPath(path string) error {
	for _bbcfc, _cccbc := range _cfbdf.Group {
		if _gaead := _cccbc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fG\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _bbcfc)); _gaead != nil {
			return _gaead
		}
	}
	return nil
}

func (_agbd *CT_TableColumns) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fffff := range start.Attr {
		if _fffff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ededbc, _dcfcf := _a.ParseUint(_fffff.Value, 10, 32)
			if _dcfcf != nil {
				return _dcfcf
			}
			_deccgd := uint32(_ededbc)
			_agbd.CountAttr = &_deccgd
			continue
		}
	}
_begea:
	for {
		_bbfgg, _accgcc := d.Token()
		if _accgcc != nil {
			return _accgcc
		}
		switch _aegbe := _bbfgg.(type) {
		case _gd.StartElement:
			switch _aegbe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_ffcfbfe := NewCT_TableColumn()
				if _gggbd := d.DecodeElement(_ffcfbfe, &_aegbe); _gggbd != nil {
					return _gggbd
				}
				_agbd.TableColumn = append(_agbd.TableColumn, _ffcfbfe)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0020\u0025\u0076", _aegbe.Name)
				if _aeede := d.Skip(); _aeede != nil {
					return _aeede
				}
			}
		case _gd.EndElement:
			break _begea
		case _gd.CharData:
		}
	}
	return nil
}

func (_bcccb *CT_RevisionHeader) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bcccb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_bcccb.SheetIdMap = NewCT_SheetIdMap()
	for _, _adeed := range start.Attr {
		if _adeed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _adeed.Name.Local == "\u0069\u0064" || _adeed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _adeed.Name.Local == "\u0069\u0064" {
			_fedcf, _cfdege := _adeed.Value, error(nil)
			if _cfdege != nil {
				return _cfdege
			}
			_bcccb.IdAttr = _fedcf
			continue
		}
		if _adeed.Name.Local == "\u0067\u0075\u0069\u0064" {
			_cafga, _accabc := _adeed.Value, error(nil)
			if _accabc != nil {
				return _accabc
			}
			_bcccb.GuidAttr = _cafga
			continue
		}
		if _adeed.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_fdgebb, _facdf := ParseStdlibTime(_adeed.Value)
			if _facdf != nil {
				return _facdf
			}
			_bcccb.DateTimeAttr = _fdgebb
			continue
		}
		if _adeed.Name.Local == "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_eccfd, _egfed := _a.ParseUint(_adeed.Value, 10, 32)
			if _egfed != nil {
				return _egfed
			}
			_bcccb.MaxSheetIdAttr = uint32(_eccfd)
			continue
		}
		if _adeed.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_bfdad, _ceaee := _adeed.Value, error(nil)
			if _ceaee != nil {
				return _ceaee
			}
			_bcccb.UserNameAttr = _bfdad
			continue
		}
		if _adeed.Name.Local == "\u006d\u0069\u006e\u0052\u0049\u0064" {
			_ddcfce, _bfdgf := _a.ParseUint(_adeed.Value, 10, 32)
			if _bfdgf != nil {
				return _bfdgf
			}
			_befbf := uint32(_ddcfce)
			_bcccb.MinRIdAttr = &_befbf
			continue
		}
		if _adeed.Name.Local == "\u006d\u0061\u0078\u0052\u0049\u0064" {
			_acfb, _bdbffd := _a.ParseUint(_adeed.Value, 10, 32)
			if _bdbffd != nil {
				return _bdbffd
			}
			_bgage := uint32(_acfb)
			_bcccb.MaxRIdAttr = &_bgage
			continue
		}
	}
_fadag:
	for {
		_fdbed, _cebdg := d.Token()
		if _cebdg != nil {
			return _cebdg
		}
		switch _ffbdd := _fdbed.(type) {
		case _gd.StartElement:
			switch _ffbdd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}:
				if _decdc := d.DecodeElement(_bcccb.SheetIdMap, &_ffbdd); _decdc != nil {
					return _decdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}:
				_bcccb.ReviewedList = NewCT_ReviewedRevisions()
				if _afcfd := d.DecodeElement(_bcccb.ReviewedList, &_ffbdd); _afcfd != nil {
					return _afcfd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcccb.ExtLst = NewCT_ExtensionList()
				if _gadfe := d.DecodeElement(_bcccb.ExtLst, &_ffbdd); _gadfe != nil {
					return _gadfe
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0020\u0025\u0076", _ffbdd.Name)
				if _cdfa := d.Skip(); _cdfa != nil {
					return _cdfa
				}
			}
		case _gd.EndElement:
			break _fadag
		case _gd.CharData:
		}
	}
	return nil
}

func (_eddcd ST_DataValidationOperator) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_eddcd.String(), start)
}

func (_aagce *ST_Scope) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cedeee, _cafbeb := d.Token()
	if _cafbeb != nil {
		return _cafbeb
	}
	if _dedee, _fbffa := _cedeee.(_gd.EndElement); _fbffa && _dedee.Name == start.Name {
		*_aagce = 1
		return nil
	}
	if _bfede, _fdefef := _cedeee.(_gd.CharData); !_fdefef {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cedeee)
	} else {
		switch string(_bfede) {
		case "":
			*_aagce = 0
		case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
			*_aagce = 1
		case "\u0064\u0061\u0074\u0061":
			*_aagce = 2
		case "\u0066\u0069\u0065l\u0064":
			*_aagce = 3
		}
	}
	_cedeee, _cafbeb = d.Token()
	if _cafbeb != nil {
		return _cafbeb
	}
	if _cceeec, _gbdgb := _cedeee.(_gd.EndElement); _gbdgb && _cceeec.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cedeee)
}

// Validate validates the CT_LevelGroup and its children
func (_egfaeb *CT_LevelGroup) Validate() error {
	return _egfaeb.ValidateWithPath("\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070")
}

func (_agbbb *CT_ChartsheetPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _agbbb.PublishedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_agbbb.PublishedAttr))})
	}
	if _agbbb.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_agbbb.CodeNameAttr)})
	}
	e.EncodeToken(start)
	if _agbbb.TabColor != nil {
		_gaca := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_agbbb.TabColor, _gaca)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cbdf *CT_ColorFilter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fbee := range start.Attr {
		if _fbee.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_bbcdb, _ccga := _a.ParseUint(_fbee.Value, 10, 32)
			if _ccga != nil {
				return _ccga
			}
			_ecdad := uint32(_bbcdb)
			_cbdf.DxfIdAttr = &_ecdad
			continue
		}
		if _fbee.Name.Local == "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr" {
			_abcad, _baac := _a.ParseBool(_fbee.Value)
			if _baac != nil {
				return _baac
			}
			_cbdf.CellColorAttr = &_abcad
			continue
		}
	}
	for {
		_dgfc, _bacc := d.Token()
		if _bacc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072:\u0020\u0025\u0073", _bacc)
		}
		if _bedac, _cffcb := _dgfc.(_gd.EndElement); _cffcb && _bedac.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SheetIdMap struct {

	// Sheet Count
	CountAttr *uint32

	// Sheet Id
	SheetId []*CT_SheetId
}

func (_ffed *CT_ExternalLink) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _ffed.Choice != nil {
		_ffed.Choice.MarshalXML(e, _gd.StartElement{})
	}
	if _ffed.ExtLst != nil {
		_abadf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffed.ExtLst, _abadf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

const (
	ST_CfvoTypeUnset      ST_CfvoType = 0
	ST_CfvoTypeNum        ST_CfvoType = 1
	ST_CfvoTypePercent    ST_CfvoType = 2
	ST_CfvoTypeMax        ST_CfvoType = 3
	ST_CfvoTypeMin        ST_CfvoType = 4
	ST_CfvoTypeFormula    ST_CfvoType = 5
	ST_CfvoTypePercentile ST_CfvoType = 6
)

func (_fgded ST_CredMethod) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_fgded.String(), start)
}

const (
	ST_HtmlFmtUnset ST_HtmlFmt = 0
	ST_HtmlFmtNone  ST_HtmlFmt = 1
	ST_HtmlFmtRtf   ST_HtmlFmt = 2
	ST_HtmlFmtAll   ST_HtmlFmt = 3
)

// ValidateWithPath validates the CT_UndoInfo and its children, prefixing error messages with path
func (_gbged *CT_UndoInfo) ValidateWithPath(path string) error {
	if _gbged.ExpAttr == ST_FormulaExpressionUnset {
		return _b.Errorf("\u0025\u0073\u002fE\u0078\u0070\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _daceg := _gbged.ExpAttr.ValidateWithPath(path + "\u002f\u0045\u0078\u0070\u0041\u0074\u0074\u0072"); _daceg != nil {
		return _daceg
	}
	return nil
}

func NewCT_GroupMembers() *CT_GroupMembers { _feggcb := &CT_GroupMembers{}; return _feggcb }

func (_cccef ST_TextHAlign) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_cccef.String(), start)
}

// ValidateWithPath validates the CT_PivotHierarchies and its children, prefixing error messages with path
func (_ebaec *CT_PivotHierarchies) ValidateWithPath(path string) error {
	for _bbfbbd, _faefc := range _ebaec.PivotHierarchy {
		if _cecf := _faefc.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _bbfbbd)); _cecf != nil {
			return _cecf
		}
	}
	return nil
}

func (_cccbd *CT_Tuple) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cccbd.FldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cccbd.FldAttr)})
	}
	if _cccbd.HierAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_cccbd.HierAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _b.Sprintf("\u0025\u0076", _cccbd.ItemAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Row and its children, prefixing error messages with path
func (_geade *CT_Row) ValidateWithPath(path string) error {
	for _dgfad, _ccgcdd := range _geade.C {
		if _dgfba := _ccgcdd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _dgfad)); _dgfba != nil {
			return _dgfba
		}
	}
	if _geade.ExtLst != nil {
		if _gdafge := _geade.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdafge != nil {
			return _gdafge
		}
	}
	return nil
}

func NewCT_PhoneticRun() *CT_PhoneticRun { _geeeg := &CT_PhoneticRun{}; return _geeeg }

func (_agadb ST_CalcMode) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_agadb.String(), start)
}

const (
	ST_CfTypeUnset             ST_CfType = 0
	ST_CfTypeExpression        ST_CfType = 1
	ST_CfTypeCellIs            ST_CfType = 2
	ST_CfTypeColorScale        ST_CfType = 3
	ST_CfTypeDataBar           ST_CfType = 4
	ST_CfTypeIconSet           ST_CfType = 5
	ST_CfTypeTop10             ST_CfType = 6
	ST_CfTypeUniqueValues      ST_CfType = 7
	ST_CfTypeDuplicateValues   ST_CfType = 8
	ST_CfTypeContainsText      ST_CfType = 9
	ST_CfTypeNotContainsText   ST_CfType = 10
	ST_CfTypeBeginsWith        ST_CfType = 11
	ST_CfTypeEndsWith          ST_CfType = 12
	ST_CfTypeContainsBlanks    ST_CfType = 13
	ST_CfTypeNotContainsBlanks ST_CfType = 14
	ST_CfTypeContainsErrors    ST_CfType = 15
	ST_CfTypeNotContainsErrors ST_CfType = 16
	ST_CfTypeTimePeriod        ST_CfType = 17
	ST_CfTypeAboveAverage      ST_CfType = 18
)

func (_ggbge *CT_XmlCellPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ggbge.XmlPr = NewCT_XmlPr()
	for _, _ccdbea := range start.Attr {
		if _ccdbea.Name.Local == "\u0069\u0064" {
			_acfeff, _ffbef := _a.ParseUint(_ccdbea.Value, 10, 32)
			if _ffbef != nil {
				return _ffbef
			}
			_ggbge.IdAttr = uint32(_acfeff)
			continue
		}
		if _ccdbea.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_edgeb, _ebbdd := _ccdbea.Value, error(nil)
			if _ebbdd != nil {
				return _ebbdd
			}
			_ggbge.UniqueNameAttr = &_edgeb
			continue
		}
	}
_bcgcgd:
	for {
		_gaddb, _cdgbbb := d.Token()
		if _cdgbbb != nil {
			return _cdgbbb
		}
		switch _ffbgdc := _gaddb.(type) {
		case _gd.StartElement:
			switch _ffbgdc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}:
				if _cddfa := d.DecodeElement(_ggbge.XmlPr, &_ffbgdc); _cddfa != nil {
					return _cddfa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggbge.ExtLst = NewCT_ExtensionList()
				if _adgbg := d.DecodeElement(_ggbge.ExtLst, &_ffbgdc); _adgbg != nil {
					return _adgbg
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_X\u006d\u006cC\u0065\u006c\u006c\u0050\u0072\u0020\u0025\u0076", _ffbgdc.Name)
				if _fbadag := d.Skip(); _fbadag != nil {
					return _fbadag
				}
			}
		case _gd.EndElement:
			break _bcgcgd
		case _gd.CharData:
		}
	}
	return nil
}

const (
	ST_RefModeUnset ST_RefMode = 0
	ST_RefModeA1    ST_RefMode = 1
	ST_RefModeR1C1  ST_RefMode = 2
)

func (_cfcde *CT_RevisionCellChange) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cfcde.SIdAttr)})
	if _cfcde.OdxfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u0064\u0078\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.OdxfAttr))})
	}
	if _cfcde.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.XfDxfAttr))})
	}
	if _cfcde.SAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.SAttr))})
	}
	if _cfcde.DxfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0078\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.DxfAttr))})
	}
	if _cfcde.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cfcde.NumFmtIdAttr)})
	}
	if _cfcde.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.QuotePrefixAttr))})
	}
	if _cfcde.OldQuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.OldQuotePrefixAttr))})
	}
	if _cfcde.PhAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.PhAttr))})
	}
	if _cfcde.OldPhAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064P\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.OldPhAttr))})
	}
	if _cfcde.EndOfListFormulaUpdateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.EndOfListFormulaUpdateAttr))})
	}
	if _cfcde.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cfcde.RIdAttr)})
	}
	if _cfcde.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.UaAttr))})
	}
	if _cfcde.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfcde.RaAttr))})
	}
	e.EncodeToken(start)
	if _cfcde.Oc != nil {
		_bbgba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ao\u0063"}}
		e.EncodeElement(_cfcde.Oc, _bbgba)
	}
	_bcfec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003an\u0063"}}
	e.EncodeElement(_cfcde.Nc, _bcfec)
	if _cfcde.Odxf != nil {
		_ecgdc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006f\u0064\u0078\u0066"}}
		e.EncodeElement(_cfcde.Odxf, _ecgdc)
	}
	if _cfcde.Ndxf != nil {
		_cbecd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006e\u0064\u0078\u0066"}}
		e.EncodeElement(_cfcde.Ndxf, _cbecd)
	}
	if _cfcde.ExtLst != nil {
		_adbbe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfcde.ExtLst, _adbbe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_PivotDimension() *CT_PivotDimension { _aagdcb := &CT_PivotDimension{}; return _aagdcb }

func (_baafd *CT_Sheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cgbbad := range start.Attr {
		if _cgbbad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cgbbad.Name.Local == "\u0069\u0064" || _cgbbad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cgbbad.Name.Local == "\u0069\u0064" {
			_acgaad, _dgfg := _cgbbad.Value, error(nil)
			if _dgfg != nil {
				return _dgfg
			}
			_baafd.IdAttr = _acgaad
			continue
		}
		if _cgbbad.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfgag, _fbaed := _cgbbad.Value, error(nil)
			if _fbaed != nil {
				return _fbaed
			}
			_baafd.NameAttr = _cfgag
			continue
		}
		if _cgbbad.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fgfebg, _fgccc := _a.ParseUint(_cgbbad.Value, 10, 32)
			if _fgccc != nil {
				return _fgccc
			}
			_baafd.SheetIdAttr = uint32(_fgfebg)
			continue
		}
		if _cgbbad.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_baafd.StateAttr.UnmarshalXMLAttr(_cgbbad)
			continue
		}
	}
	for {
		_abcda, _cfcgg := d.Token()
		if _cfcgg != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074: \u0025\u0073", _cfcgg)
		}
		if _cgdca, _acaba := _abcda.(_gd.EndElement); _acaba && _cgdca.Name == start.Name {
			break
		}
	}
	return nil
}

func (_afaaea ST_CfType) String() string {
	switch _afaaea {
	case 0:
		return ""
	case 1:
		return "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case 2:
		return "\u0063\u0065\u006c\u006c\u0049\u0073"
	case 3:
		return "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case 4:
		return "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case 5:
		return "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case 6:
		return "\u0074\u006f\u00701\u0030"
	case 7:
		return "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 8:
		return "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 13:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 14:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 15:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 16:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 17:
		return "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case 18:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return ""
}

// Validate validates the CT_ColHierarchiesUsage and its children
func (_cecg *CT_ColHierarchiesUsage) Validate() error {
	return _cecg.ValidateWithPath("\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}

// ValidateWithPath validates the CT_CalcCell and its children, prefixing error messages with path
func (_feef *CT_CalcCell) ValidateWithPath(path string) error { return nil }

func NewCT_Controls() *CT_Controls { _badcc := &CT_Controls{}; return _badcc }

func (_bddgg *CT_PageField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fedgg := range start.Attr {
		if _fedgg.Name.Local == "\u0066\u006c\u0064" {
			_dgcfd, _dbee := _a.ParseInt(_fedgg.Value, 10, 32)
			if _dbee != nil {
				return _dbee
			}
			_bddgg.FldAttr = int32(_dgcfd)
			continue
		}
		if _fedgg.Name.Local == "\u0069\u0074\u0065\u006d" {
			_cfabe, _ecgaa := _a.ParseUint(_fedgg.Value, 10, 32)
			if _ecgaa != nil {
				return _ecgaa
			}
			_cfgc := uint32(_cfabe)
			_bddgg.ItemAttr = &_cfgc
			continue
		}
		if _fedgg.Name.Local == "\u0068\u0069\u0065\u0072" {
			_gdgae, _dfadg := _a.ParseInt(_fedgg.Value, 10, 32)
			if _dfadg != nil {
				return _dfadg
			}
			_gaacf := int32(_gdgae)
			_bddgg.HierAttr = &_gaacf
			continue
		}
		if _fedgg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eaeac, _dadda := _fedgg.Value, error(nil)
			if _dadda != nil {
				return _dadda
			}
			_bddgg.NameAttr = &_eaeac
			continue
		}
		if _fedgg.Name.Local == "\u0063\u0061\u0070" {
			_facef, _cfcda := _fedgg.Value, error(nil)
			if _cfcda != nil {
				return _cfcda
			}
			_bddgg.CapAttr = &_facef
			continue
		}
	}
_bdfda:
	for {
		_ggfgg, _cggef := d.Token()
		if _cggef != nil {
			return _cggef
		}
		switch _eggcg := _ggfgg.(type) {
		case _gd.StartElement:
			switch _eggcg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bddgg.ExtLst = NewCT_ExtensionList()
				if _aaae := d.DecodeElement(_bddgg.ExtLst, &_eggcg); _aaae != nil {
					return _aaae
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _eggcg.Name)
				if _cfeca := d.Skip(); _cfeca != nil {
					return _cfeca
				}
			}
		case _gd.EndElement:
			break _bdfda
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataBlocks and its children, prefixing error messages with path
func (_fceaf *CT_MetadataBlocks) ValidateWithPath(path string) error {
	for _ecffa, _fdccg := range _fceaf.Bk {
		if _dbcec := _fdccg.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _ecffa)); _dbcec != nil {
			return _dbcec
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MergeCell and its children, prefixing error messages with path
func (_ecdf *CT_MergeCell) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_RevisionComment and its children
func (_dgdcd *CT_RevisionComment) Validate() error {
	return _dgdcd.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074")
}

type CT_SheetDimension struct {

	// Reference
	RefAttr string
}

type CT_DynamicFilter struct {

	// Dynamic filter type
	TypeAttr ST_DynamicFilterType

	// Value
	ValAttr *float64

	// ISO Value
	ValIsoAttr *_db.Time

	// Max Value
	MaxValAttr *float64

	// Max ISO Value
	MaxValIsoAttr *_db.Time
}

func (_bddf *CT_Macrosheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bddf.SheetData = NewCT_SheetData()
_bdfaa:
	for {
		_efge, _bgcbf := d.Token()
		if _bgcbf != nil {
			return _bgcbf
		}
		switch _fddea := _efge.(type) {
		case _gd.StartElement:
			switch _fddea.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_bddf.SheetPr = NewCT_SheetPr()
				if _edbbf := d.DecodeElement(_bddf.SheetPr, &_fddea); _edbbf != nil {
					return _edbbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_bddf.Dimension = NewCT_SheetDimension()
				if _gccdg := d.DecodeElement(_bddf.Dimension, &_fddea); _gccdg != nil {
					return _gccdg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bddf.SheetViews = NewCT_SheetViews()
				if _aegcad := d.DecodeElement(_bddf.SheetViews, &_fddea); _aegcad != nil {
					return _aegcad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_bddf.SheetFormatPr = NewCT_SheetFormatPr()
				if _cabcc := d.DecodeElement(_bddf.SheetFormatPr, &_fddea); _cabcc != nil {
					return _cabcc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_addde := NewCT_Cols()
				if _cdaaa := d.DecodeElement(_addde, &_fddea); _cdaaa != nil {
					return _cdaaa
				}
				_bddf.Cols = append(_bddf.Cols, _addde)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _gdcfa := d.DecodeElement(_bddf.SheetData, &_fddea); _gdcfa != nil {
					return _gdcfa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bddf.SheetProtection = NewCT_SheetProtection()
				if _bcagf := d.DecodeElement(_bddf.SheetProtection, &_fddea); _bcagf != nil {
					return _bcagf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bddf.AutoFilter = NewCT_AutoFilter()
				if _gdab := d.DecodeElement(_bddf.AutoFilter, &_fddea); _gdab != nil {
					return _gdab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_bddf.SortState = NewCT_SortState()
				if _efdab := d.DecodeElement(_bddf.SortState, &_fddea); _efdab != nil {
					return _efdab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_bddf.DataConsolidate = NewCT_DataConsolidate()
				if _dcfb := d.DecodeElement(_bddf.DataConsolidate, &_fddea); _dcfb != nil {
					return _dcfb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bddf.CustomSheetViews = NewCT_CustomSheetViews()
				if _cgafd := d.DecodeElement(_bddf.CustomSheetViews, &_fddea); _cgafd != nil {
					return _cgafd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_bddf.PhoneticPr = NewCT_PhoneticPr()
				if _daabd := d.DecodeElement(_bddf.PhoneticPr, &_fddea); _daabd != nil {
					return _daabd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_dffbe := NewCT_ConditionalFormatting()
				if _afbac := d.DecodeElement(_dffbe, &_fddea); _afbac != nil {
					return _afbac
				}
				_bddf.ConditionalFormatting = append(_bddf.ConditionalFormatting, _dffbe)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_bddf.PrintOptions = NewCT_PrintOptions()
				if _aaceb := d.DecodeElement(_bddf.PrintOptions, &_fddea); _aaceb != nil {
					return _aaceb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bddf.PageMargins = NewCT_PageMargins()
				if _bfbeg := d.DecodeElement(_bddf.PageMargins, &_fddea); _bfbeg != nil {
					return _bfbeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bddf.PageSetup = NewCT_PageSetup()
				if _dbfff := d.DecodeElement(_bddf.PageSetup, &_fddea); _dbfff != nil {
					return _dbfff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bddf.HeaderFooter = NewCT_HeaderFooter()
				if _adecf := d.DecodeElement(_bddf.HeaderFooter, &_fddea); _adecf != nil {
					return _adecf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_bddf.RowBreaks = NewCT_PageBreak()
				if _cfdgd := d.DecodeElement(_bddf.RowBreaks, &_fddea); _cfdgd != nil {
					return _cfdgd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_bddf.ColBreaks = NewCT_PageBreak()
				if _egbef := d.DecodeElement(_bddf.ColBreaks, &_fddea); _egbef != nil {
					return _egbef
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_bddf.CustomProperties = NewCT_CustomProperties()
				if _bbgd := d.DecodeElement(_bddf.CustomProperties, &_fddea); _bbgd != nil {
					return _bbgd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_bddf.Drawing = NewCT_Drawing()
				if _fegfg := d.DecodeElement(_bddf.Drawing, &_fddea); _fegfg != nil {
					return _fegfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_bddf.LegacyDrawing = NewCT_LegacyDrawing()
				if _ecdg := d.DecodeElement(_bddf.LegacyDrawing, &_fddea); _ecdg != nil {
					return _ecdg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_bddf.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _agbcad := d.DecodeElement(_bddf.LegacyDrawingHF, &_fddea); _agbcad != nil {
					return _agbcad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_bddf.DrawingHF = NewCT_DrawingHF()
				if _bgffe := d.DecodeElement(_bddf.DrawingHF, &_fddea); _bgffe != nil {
					return _bgffe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_bddf.Picture = NewCT_SheetBackgroundPicture()
				if _egeff := d.DecodeElement(_bddf.Picture, &_fddea); _egeff != nil {
					return _egeff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_bddf.OleObjects = NewCT_OleObjects()
				if _dcbgc := d.DecodeElement(_bddf.OleObjects, &_fddea); _dcbgc != nil {
					return _dcbgc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bddf.ExtLst = NewCT_ExtensionList()
				if _aead := d.DecodeElement(_bddf.ExtLst, &_fddea); _aead != nil {
					return _aead
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004da\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _fddea.Name)
				if _fcabd := d.Skip(); _fcabd != nil {
					return _fcabd
				}
			}
		case _gd.EndElement:
			break _bdfaa
		case _gd.CharData:
		}
	}
	return nil
}

type CT_CacheHierarchies struct {

	// Hierarchy Count
	CountAttr *uint32

	// PivotCache Hierarchy
	CacheHierarchy []*CT_CacheHierarchy
}

func (_aabdc ST_HtmlFmt) Validate() error { return _aabdc.ValidateWithPath("") }

func (_gabadg ST_SheetState) ValidateWithPath(path string) error {
	switch _gabadg {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gabadg))
	}
	return nil
}

// ValidateWithPath validates the CT_CustomFilters and its children, prefixing error messages with path
func (_ccega *CT_CustomFilters) ValidateWithPath(path string) error {
	for _eggb, _gadee := range _ccega.CustomFilter {
		if _ebdg := _gadee.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _eggb)); _ebdg != nil {
			return _ebdg
		}
	}
	return nil
}

// Validate validates the CT_RPrElt and its children
func (_gbccd *CT_RPrElt) Validate() error {
	return _gbccd.ValidateWithPath("\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct")
}

const (
	ST_SortTypeUnset             ST_SortType = 0
	ST_SortTypeNone              ST_SortType = 1
	ST_SortTypeAscending         ST_SortType = 2
	ST_SortTypeDescending        ST_SortType = 3
	ST_SortTypeAscendingAlpha    ST_SortType = 4
	ST_SortTypeDescendingAlpha   ST_SortType = 5
	ST_SortTypeAscendingNatural  ST_SortType = 6
	ST_SortTypeDescendingNatural ST_SortType = 7
)

// Validate validates the CT_PivotCacheRecords and its children
func (_gfedg *CT_PivotCacheRecords) Validate() error {
	return _gfedg.ValidateWithPath("C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073")
}

// ValidateWithPath validates the CT_Col and its children, prefixing error messages with path
func (_fcbd *CT_Col) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CustomProperties and its children
func (_eeae *CT_CustomProperties) Validate() error {
	return _eeae.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_ProtectedRange struct {

	// Legacy Password
	PasswordAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Name
	NameAttr string

	// Security Descriptor
	SecurityDescriptorAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Security Descriptor
	SecurityDescriptor []string
}

// ValidateWithPath validates the CT_Hyperlinks and its children, prefixing error messages with path
func (_cbdgd *CT_Hyperlinks) ValidateWithPath(path string) error {
	for _debgc, _acabb := range _cbdgd.Hyperlink {
		if _eceag := _acabb.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0048\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u005b\u0025\u0064\u005d", path, _debgc)); _eceag != nil {
			return _eceag
		}
	}
	return nil
}

func (_ceecc ST_TableType) ValidateWithPath(path string) error {
	switch _ceecc {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ceecc))
	}
	return nil
}

func (_ccgdd *ST_DynamicFilterType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gefbd, _facgda := d.Token()
	if _facgda != nil {
		return _facgda
	}
	if _bccdde, _acegg := _gefbd.(_gd.EndElement); _acegg && _bccdde.Name == start.Name {
		*_ccgdd = 1
		return nil
	}
	if _faedc, _ebffdg := _gefbd.(_gd.CharData); !_ebffdg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gefbd)
	} else {
		switch string(_faedc) {
		case "":
			*_ccgdd = 0
		case "\u006e\u0075\u006c\u006c":
			*_ccgdd = 1
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_ccgdd = 2
		case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_ccgdd = 3
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_ccgdd = 4
		case "\u0074\u006f\u0064a\u0079":
			*_ccgdd = 5
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_ccgdd = 6
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_ccgdd = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_ccgdd = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_ccgdd = 9
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_ccgdd = 10
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_ccgdd = 11
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_ccgdd = 12
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccgdd = 13
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccgdd = 14
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccgdd = 15
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_ccgdd = 16
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_ccgdd = 17
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_ccgdd = 18
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_ccgdd = 19
		case "\u0051\u0031":
			*_ccgdd = 20
		case "\u0051\u0032":
			*_ccgdd = 21
		case "\u0051\u0033":
			*_ccgdd = 22
		case "\u0051\u0034":
			*_ccgdd = 23
		case "\u004d\u0031":
			*_ccgdd = 24
		case "\u004d\u0032":
			*_ccgdd = 25
		case "\u004d\u0033":
			*_ccgdd = 26
		case "\u004d\u0034":
			*_ccgdd = 27
		case "\u004d\u0035":
			*_ccgdd = 28
		case "\u004d\u0036":
			*_ccgdd = 29
		case "\u004d\u0037":
			*_ccgdd = 30
		case "\u004d\u0038":
			*_ccgdd = 31
		case "\u004d\u0039":
			*_ccgdd = 32
		case "\u004d\u0031\u0030":
			*_ccgdd = 33
		case "\u004d\u0031\u0031":
			*_ccgdd = 34
		case "\u004d\u0031\u0032":
			*_ccgdd = 35
		}
	}
	_gefbd, _facgda = d.Token()
	if _facgda != nil {
		return _facgda
	}
	if _gdffcf, _gdcdef := _gefbd.(_gd.EndElement); _gdcdef && _gdffcf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gefbd)
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_adfb *CT_Extension) ValidateWithPath(path string) error { return nil }

type ST_Visibility byte

// Validate validates the CT_VolTypes and its children
func (_deggef *CT_VolTypes) Validate() error {
	return _deggef.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

func NewCT_Sst() *CT_Sst { _geffef := &CT_Sst{}; return _geffef }

// Validate validates the CT_CellSmartTag and its children
func (_bedg *CT_CellSmartTag) Validate() error {
	return _bedg.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067")
}

type Table struct{ CT_Table }

// ValidateWithPath validates the CT_MeasureGroup and its children, prefixing error messages with path
func (_ggebcb *CT_MeasureGroup) ValidateWithPath(path string) error { return nil }

func (_egfbc *ST_CellType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_acfdf, _gbdgdc := d.Token()
	if _gbdgdc != nil {
		return _gbdgdc
	}
	if _febafd, _eedagg := _acfdf.(_gd.EndElement); _eedagg && _febafd.Name == start.Name {
		*_egfbc = 1
		return nil
	}
	if _deaaf, _dcdfeg := _acfdf.(_gd.CharData); !_dcdfeg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acfdf)
	} else {
		switch string(_deaaf) {
		case "":
			*_egfbc = 0
		case "\u0062":
			*_egfbc = 1
		case "\u006e":
			*_egfbc = 2
		case "\u0065":
			*_egfbc = 3
		case "\u0073":
			*_egfbc = 4
		case "\u0073\u0074\u0072":
			*_egfbc = 5
		case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
			*_egfbc = 6
		}
	}
	_acfdf, _gbdgdc = d.Token()
	if _gbdgdc != nil {
		return _gbdgdc
	}
	if _aebgbg, _fcfcf := _acfdf.(_gd.EndElement); _fcfcf && _aebgbg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acfdf)
}

// ValidateWithPath validates the CT_ProtectedRange and its children, prefixing error messages with path
func (_ccdcd *CT_ProtectedRange) ValidateWithPath(path string) error { return nil }

func NewCT_Fonts() *CT_Fonts { _fgcca := &CT_Fonts{}; return _fgcca }

func (_efeee *CT_colItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _efeee.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_efeee.CountAttr)})
	}
	e.EncodeToken(start)
	_gdafgee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _bdbfed := range _efeee.I {
		e.EncodeElement(_bdbfed, _gdafgee)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_PivotHierarchy() *CT_PivotHierarchy { _eabdb := &CT_PivotHierarchy{}; return _eabdb }

func (_ggecg ST_RevisionAction) String() string {
	switch _ggecg {
	case 0:
		return ""
	case 1:
		return "\u0061\u0064\u0064"
	case 2:
		return "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return ""
}

func (_dgbbbb *ST_GroupBy) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dgbbbb = 0
	case "\u0072\u0061\u006eg\u0065":
		*_dgbbbb = 1
	case "\u0073e\u0063\u006f\u006e\u0064\u0073":
		*_dgbbbb = 2
	case "\u006di\u006e\u0075\u0074\u0065\u0073":
		*_dgbbbb = 3
	case "\u0068\u006f\u0075r\u0073":
		*_dgbbbb = 4
	case "\u0064\u0061\u0079\u0073":
		*_dgbbbb = 5
	case "\u006d\u006f\u006e\u0074\u0068\u0073":
		*_dgbbbb = 6
	case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
		*_dgbbbb = 7
	case "\u0079\u0065\u0061r\u0073":
		*_dgbbbb = 8
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalRow and its children, prefixing error messages with path
func (_ccfe *CT_ExternalRow) ValidateWithPath(path string) error {
	for _ccgge, _gfed := range _ccfe.Cell {
		if _fbaa := _gfed.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _ccgge)); _fbaa != nil {
			return _fbaa
		}
	}
	return nil
}

type CT_ExternalLink struct {
	Choice *CT_ExternalLinkChoice
	ExtLst *CT_ExtensionList
}

func (_baddgf ST_VolDepType) ValidateWithPath(path string) error {
	switch _baddgf {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baddgf))
	}
	return nil
}

func (_cdggc *Revisions) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cdggc.CT_Revisions = *NewCT_Revisions()
_cdfeeb:
	for {
		_fgddbb, _egdabf := d.Token()
		if _egdabf != nil {
			return _egdabf
		}
		switch _efggb := _fgddbb.(type) {
		case _gd.StartElement:
			switch _efggb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_babbcf := NewCT_RevisionRowColumn()
				if _fgggd := d.DecodeElement(_babbcf, &_efggb); _fgggd != nil {
					return _fgggd
				}
				_cdggc.Rrc = append(_cdggc.Rrc, _babbcf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_dgcfbb := NewCT_RevisionMove()
				if _bddgf := d.DecodeElement(_dgcfbb, &_efggb); _bddgf != nil {
					return _bddgf
				}
				_cdggc.Rm = append(_cdggc.Rm, _dgcfbb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_cbebe := NewCT_RevisionCustomView()
				if _cfbbe := d.DecodeElement(_cbebe, &_efggb); _cfbbe != nil {
					return _cfbbe
				}
				_cdggc.Rcv = append(_cdggc.Rcv, _cbebe)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_caageg := NewCT_RevisionSheetRename()
				if _fefbd := d.DecodeElement(_caageg, &_efggb); _fefbd != nil {
					return _fefbd
				}
				_cdggc.Rsnm = append(_cdggc.Rsnm, _caageg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_egegc := NewCT_RevisionInsertSheet()
				if _abdfc := d.DecodeElement(_egegc, &_efggb); _abdfc != nil {
					return _abdfc
				}
				_cdggc.Ris = append(_cdggc.Ris, _egegc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_efgda := NewCT_RevisionCellChange()
				if _cceaab := d.DecodeElement(_efgda, &_efggb); _cceaab != nil {
					return _cceaab
				}
				_cdggc.Rcc = append(_cdggc.Rcc, _efgda)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_ccagaa := NewCT_RevisionFormatting()
				if _gedbg := d.DecodeElement(_ccagaa, &_efggb); _gedbg != nil {
					return _gedbg
				}
				_cdggc.Rfmt = append(_cdggc.Rfmt, _ccagaa)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_ddabe := NewCT_RevisionAutoFormatting()
				if _geffbd := d.DecodeElement(_ddabe, &_efggb); _geffbd != nil {
					return _geffbd
				}
				_cdggc.Raf = append(_cdggc.Raf, _ddabe)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_begfa := NewCT_RevisionDefinedName()
				if _fcgad := d.DecodeElement(_begfa, &_efggb); _fcgad != nil {
					return _fcgad
				}
				_cdggc.Rdn = append(_cdggc.Rdn, _begfa)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_ceefcb := NewCT_RevisionComment()
				if _aefaca := d.DecodeElement(_ceefcb, &_efggb); _aefaca != nil {
					return _aefaca
				}
				_cdggc.Rcmt = append(_cdggc.Rcmt, _ceefcb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_beaef := NewCT_RevisionQueryTableField()
				if _aagadc := d.DecodeElement(_beaef, &_efggb); _aagadc != nil {
					return _aagadc
				}
				_cdggc.Rqt = append(_cdggc.Rqt, _beaef)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_ccgbc := NewCT_RevisionConflict()
				if _bdggd := d.DecodeElement(_ccgbc, &_efggb); _bdggd != nil {
					return _bdggd
				}
				_cdggc.Rcft = append(_cdggc.Rcft, _ccgbc)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0073 \u0025\u0076", _efggb.Name)
				if _eeccb := d.Skip(); _eeccb != nil {
					return _eeccb
				}
			}
		case _gd.EndElement:
			break _cdfeeb
		case _gd.CharData:
		}
	}
	return nil
}

func (_dafc *CT_MetadataType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _dafc.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _dafc.MinSupportedVersionAttr)})
	if _dafc.GhostRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.GhostRowAttr))})
	}
	if _dafc.GhostColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.GhostColAttr))})
	}
	if _dafc.EditAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0064\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.EditAttr))})
	}
	if _dafc.DeleteAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.DeleteAttr))})
	}
	if _dafc.CopyAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0070\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.CopyAttr))})
	}
	if _dafc.PasteAllAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteAllAttr))})
	}
	if _dafc.PasteFormulasAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteFormulasAttr))})
	}
	if _dafc.PasteValuesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteValuesAttr))})
	}
	if _dafc.PasteFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteFormatsAttr))})
	}
	if _dafc.PasteCommentsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteCommentsAttr))})
	}
	if _dafc.PasteDataValidationAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteDataValidationAttr))})
	}
	if _dafc.PasteBordersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteBordersAttr))})
	}
	if _dafc.PasteColWidthsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteColWidthsAttr))})
	}
	if _dafc.PasteNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.PasteNumberFormatsAttr))})
	}
	if _dafc.MergeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u0072g\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.MergeAttr))})
	}
	if _dafc.SplitFirstAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.SplitFirstAttr))})
	}
	if _dafc.SplitAllAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.SplitAllAttr))})
	}
	if _dafc.RowColShiftAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.RowColShiftAttr))})
	}
	if _dafc.ClearAllAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.ClearAllAttr))})
	}
	if _dafc.ClearFormatsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.ClearFormatsAttr))})
	}
	if _dafc.ClearContentsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.ClearContentsAttr))})
	}
	if _dafc.ClearCommentsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.ClearCommentsAttr))})
	}
	if _dafc.AssignAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0073\u0073\u0069\u0067\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.AssignAttr))})
	}
	if _dafc.CoerceAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0065\u0072\u0063\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.CoerceAttr))})
	}
	if _dafc.AdjustAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.AdjustAttr))})
	}
	if _dafc.CellMetaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dafc.CellMetaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_feabc *CT_RElt) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_fgccb:
	for {
		_becge, _fcdfd := d.Token()
		if _fcdfd != nil {
			return _fcdfd
		}
		switch _aegcdc := _becge.(type) {
		case _gd.StartElement:
			switch _aegcdc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_feabc.RPr = NewCT_RPrElt()
				if _fgdce := d.DecodeElement(_feabc.RPr, &_aegcdc); _fgdce != nil {
					return _fgdce
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _bbecae := d.DecodeElement(&_feabc.T, &_aegcdc); _bbecae != nil {
					return _bbecae
				}
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0045\u006c\u0074\u0020\u0025\u0076", _aegcdc.Name)
				if _aeebf := d.Skip(); _aeebf != nil {
					return _aeebf
				}
			}
		case _gd.EndElement:
			break _fgccb
		case _gd.CharData:
		}
	}
	return nil
}

func (_adfcf *CT_WebPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gggdf := range start.Attr {
		if _gggdf.Name.Local == "\u0078\u006c\u0032\u0030\u0030\u0030" {
			_dgbcb, _fbaaf := _a.ParseBool(_gggdf.Value)
			if _fbaaf != nil {
				return _fbaaf
			}
			_adfcf.Xl2000Attr = &_dgbcb
			continue
		}
		if _gggdf.Name.Local == "\u0078\u006d\u006c" {
			_bdfdc, _bbbgeg := _a.ParseBool(_gggdf.Value)
			if _bbbgeg != nil {
				return _bbbgeg
			}
			_adfcf.XmlAttr = &_bdfdc
			continue
		}
		if _gggdf.Name.Local == "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065" {
			_ccgafd, _abeefb := _a.ParseBool(_gggdf.Value)
			if _abeefb != nil {
				return _abeefb
			}
			_adfcf.ParsePreAttr = &_ccgafd
			continue
		}
		if _gggdf.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_fggbf, _faecf := _a.ParseBool(_gggdf.Value)
			if _faecf != nil {
				return _faecf
			}
			_adfcf.ConsecutiveAttr = &_fggbf
			continue
		}
		if _gggdf.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_fbbdf, _cfcgb := _a.ParseBool(_gggdf.Value)
			if _cfcgb != nil {
				return _cfcgb
			}
			_adfcf.FirstRowAttr = &_fbbdf
			continue
		}
		if _gggdf.Name.Local == "\u0078\u006c\u0039\u0037" {
			_feceb, _cgdac := _a.ParseBool(_gggdf.Value)
			if _cgdac != nil {
				return _cgdac
			}
			_adfcf.Xl97Attr = &_feceb
			continue
		}
		if _gggdf.Name.Local == "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s" {
			_cbcdd, _dadeg := _a.ParseBool(_gggdf.Value)
			if _dadeg != nil {
				return _dadeg
			}
			_adfcf.TextDatesAttr = &_cbcdd
			continue
		}
		if _gggdf.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061" {
			_cgfbc, _cdecb := _a.ParseBool(_gggdf.Value)
			if _cdecb != nil {
				return _cdecb
			}
			_adfcf.SourceDataAttr = &_cgfbc
			continue
		}
		if _gggdf.Name.Local == "\u0075\u0072\u006c" {
			_gbcacc, _dedfe := _gggdf.Value, error(nil)
			if _dedfe != nil {
				return _dedfe
			}
			_adfcf.UrlAttr = &_gbcacc
			continue
		}
		if _gggdf.Name.Local == "\u0070\u006f\u0073\u0074" {
			_gdebab, _cgbbac := _gggdf.Value, error(nil)
			if _cgbbac != nil {
				return _cgbbac
			}
			_adfcf.PostAttr = &_gdebab
			continue
		}
		if _gggdf.Name.Local == "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073" {
			_cfage, _aeeeba := _a.ParseBool(_gggdf.Value)
			if _aeeeba != nil {
				return _aeeeba
			}
			_adfcf.HtmlTablesAttr = &_cfage
			continue
		}
		if _gggdf.Name.Local == "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074" {
			_adfcf.HtmlFormatAttr.UnmarshalXMLAttr(_gggdf)
			continue
		}
		if _gggdf.Name.Local == "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065" {
			_gfcfcb, _bcfgf := _gggdf.Value, error(nil)
			if _bcfgf != nil {
				return _bcfgf
			}
			_adfcf.EditPageAttr = &_gfcfcb
			continue
		}
	}
_gadef:
	for {
		_bgbfc, _dceafb := d.Token()
		if _dceafb != nil {
			return _dceafb
		}
		switch _acffce := _bgbfc.(type) {
		case _gd.StartElement:
			switch _acffce.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}:
				_adfcf.Tables = NewCT_Tables()
				if _bdedge := d.DecodeElement(_adfcf.Tables, &_acffce); _bdedge != nil {
					return _bdedge
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u0020\u0025\u0076", _acffce.Name)
				if _bgfdf := d.Skip(); _bgfdf != nil {
					return _bgfdf
				}
			}
		case _gd.EndElement:
			break _gadef
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_CellFormula() *CT_CellFormula { _gfaf := &CT_CellFormula{}; return _gfaf }

// Validate validates the CT_WebPublishing and its children
func (_fadbf *CT_WebPublishing) Validate() error {
	return _fadbf.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067")
}

type ST_PhoneticAlignment byte

const (
	ST_DvAspectUnset            ST_DvAspect = 0
	ST_DvAspectDVASPECT_CONTENT ST_DvAspect = 1
	ST_DvAspectDVASPECT_ICON    ST_DvAspect = 2
)

// Validate validates the CT_Item and its children
func (_fgfde *CT_Item) Validate() error {
	return _fgfde.ValidateWithPath("\u0043T\u005f\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_SmartTagPr and its children
func (_fcfacf *CT_SmartTagPr) Validate() error {
	return _fcfacf.ValidateWithPath("\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072")
}

func (_abeged *Worksheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_abeged.CT_Worksheet = *NewCT_Worksheet()
_feagcc:
	for {
		_dcfba, _fggeae := d.Token()
		if _fggeae != nil {
			return _fggeae
		}
		switch _agdfec := _dcfba.(type) {
		case _gd.StartElement:
			switch _agdfec.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_abeged.SheetPr = NewCT_SheetPr()
				if _dgbbed := d.DecodeElement(_abeged.SheetPr, &_agdfec); _dgbbed != nil {
					return _dgbbed
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_abeged.Dimension = NewCT_SheetDimension()
				if _feaaea := d.DecodeElement(_abeged.Dimension, &_agdfec); _feaaea != nil {
					return _feaaea
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_abeged.SheetViews = NewCT_SheetViews()
				if _acaced := d.DecodeElement(_abeged.SheetViews, &_agdfec); _acaced != nil {
					return _acaced
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_abeged.SheetFormatPr = NewCT_SheetFormatPr()
				if _febbg := d.DecodeElement(_abeged.SheetFormatPr, &_agdfec); _febbg != nil {
					return _febbg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_dcdea := NewCT_Cols()
				if _beecde := d.DecodeElement(_dcdea, &_agdfec); _beecde != nil {
					return _beecde
				}
				_abeged.Cols = append(_abeged.Cols, _dcdea)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _cddeee := d.DecodeElement(_abeged.SheetData, &_agdfec); _cddeee != nil {
					return _cddeee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_abeged.SheetCalcPr = NewCT_SheetCalcPr()
				if _egeefd := d.DecodeElement(_abeged.SheetCalcPr, &_agdfec); _egeefd != nil {
					return _egeefd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_abeged.SheetProtection = NewCT_SheetProtection()
				if _gbagg := d.DecodeElement(_abeged.SheetProtection, &_agdfec); _gbagg != nil {
					return _gbagg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_abeged.ProtectedRanges = NewCT_ProtectedRanges()
				if _edaaee := d.DecodeElement(_abeged.ProtectedRanges, &_agdfec); _edaaee != nil {
					return _edaaee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_abeged.Scenarios = NewCT_Scenarios()
				if _bbfbgd := d.DecodeElement(_abeged.Scenarios, &_agdfec); _bbfbgd != nil {
					return _bbfbgd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_abeged.AutoFilter = NewCT_AutoFilter()
				if _gbaeg := d.DecodeElement(_abeged.AutoFilter, &_agdfec); _gbaeg != nil {
					return _gbaeg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_abeged.SortState = NewCT_SortState()
				if _bfbdff := d.DecodeElement(_abeged.SortState, &_agdfec); _bfbdff != nil {
					return _bfbdff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_abeged.DataConsolidate = NewCT_DataConsolidate()
				if _afddbd := d.DecodeElement(_abeged.DataConsolidate, &_agdfec); _afddbd != nil {
					return _afddbd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_abeged.CustomSheetViews = NewCT_CustomSheetViews()
				if _efdbc := d.DecodeElement(_abeged.CustomSheetViews, &_agdfec); _efdbc != nil {
					return _efdbc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_abeged.MergeCells = NewCT_MergeCells()
				if _gdgagd := d.DecodeElement(_abeged.MergeCells, &_agdfec); _gdgagd != nil {
					return _gdgagd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_abeged.PhoneticPr = NewCT_PhoneticPr()
				if _bgbecf := d.DecodeElement(_abeged.PhoneticPr, &_agdfec); _bgbecf != nil {
					return _bgbecf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_fgefd := NewCT_ConditionalFormatting()
				if _gagfc := d.DecodeElement(_fgefd, &_agdfec); _gagfc != nil {
					return _gagfc
				}
				_abeged.ConditionalFormatting = append(_abeged.ConditionalFormatting, _fgefd)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_abeged.DataValidations = NewCT_DataValidations()
				if _efcbfa := d.DecodeElement(_abeged.DataValidations, &_agdfec); _efcbfa != nil {
					return _efcbfa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_abeged.Hyperlinks = NewCT_Hyperlinks()
				if _fgcgdb := d.DecodeElement(_abeged.Hyperlinks, &_agdfec); _fgcgdb != nil {
					return _fgcgdb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_abeged.PrintOptions = NewCT_PrintOptions()
				if _eabdg := d.DecodeElement(_abeged.PrintOptions, &_agdfec); _eabdg != nil {
					return _eabdg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_abeged.PageMargins = NewCT_PageMargins()
				if _bdffe := d.DecodeElement(_abeged.PageMargins, &_agdfec); _bdffe != nil {
					return _bdffe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_abeged.PageSetup = NewCT_PageSetup()
				if _gffcf := d.DecodeElement(_abeged.PageSetup, &_agdfec); _gffcf != nil {
					return _gffcf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_abeged.HeaderFooter = NewCT_HeaderFooter()
				if _gbbcd := d.DecodeElement(_abeged.HeaderFooter, &_agdfec); _gbbcd != nil {
					return _gbbcd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_abeged.RowBreaks = NewCT_PageBreak()
				if _ceagdfc := d.DecodeElement(_abeged.RowBreaks, &_agdfec); _ceagdfc != nil {
					return _ceagdfc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_abeged.ColBreaks = NewCT_PageBreak()
				if _bbgacd := d.DecodeElement(_abeged.ColBreaks, &_agdfec); _bbgacd != nil {
					return _bbgacd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_abeged.CustomProperties = NewCT_CustomProperties()
				if _begdc := d.DecodeElement(_abeged.CustomProperties, &_agdfec); _begdc != nil {
					return _begdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_abeged.CellWatches = NewCT_CellWatches()
				if _ggdec := d.DecodeElement(_abeged.CellWatches, &_agdfec); _ggdec != nil {
					return _ggdec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_abeged.IgnoredErrors = NewCT_IgnoredErrors()
				if _eggcgb := d.DecodeElement(_abeged.IgnoredErrors, &_agdfec); _eggcgb != nil {
					return _eggcgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_abeged.SmartTags = NewCT_SmartTags()
				if _bcaaca := d.DecodeElement(_abeged.SmartTags, &_agdfec); _bcaaca != nil {
					return _bcaaca
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_abeged.Drawing = NewCT_Drawing()
				if _gaaaa := d.DecodeElement(_abeged.Drawing, &_agdfec); _gaaaa != nil {
					return _gaaaa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_abeged.LegacyDrawing = NewCT_LegacyDrawing()
				if _gdebc := d.DecodeElement(_abeged.LegacyDrawing, &_agdfec); _gdebc != nil {
					return _gdebc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_abeged.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _gcabe := d.DecodeElement(_abeged.LegacyDrawingHF, &_agdfec); _gcabe != nil {
					return _gcabe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_abeged.DrawingHF = NewCT_DrawingHF()
				if _bgecaec := d.DecodeElement(_abeged.DrawingHF, &_agdfec); _bgecaec != nil {
					return _bgecaec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_abeged.Picture = NewCT_SheetBackgroundPicture()
				if _badbe := d.DecodeElement(_abeged.Picture, &_agdfec); _badbe != nil {
					return _badbe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_abeged.OleObjects = NewCT_OleObjects()
				if _bbeba := d.DecodeElement(_abeged.OleObjects, &_agdfec); _bbeba != nil {
					return _bbeba
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_abeged.Controls = NewCT_Controls()
				if _cgbag := d.DecodeElement(_abeged.Controls, &_agdfec); _cgbag != nil {
					return _cgbag
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_abeged.WebPublishItems = NewCT_WebPublishItems()
				if _dbdffd := d.DecodeElement(_abeged.WebPublishItems, &_agdfec); _dbdffd != nil {
					return _dbdffd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_abeged.TableParts = NewCT_TableParts()
				if _baceaf := d.DecodeElement(_abeged.TableParts, &_agdfec); _baceaf != nil {
					return _baceaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abeged.ExtLst = NewCT_ExtensionList()
				if _acbec := d.DecodeElement(_abeged.ExtLst, &_agdfec); _acbec != nil {
					return _acbec
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0057\u006f\u0072\u006b\u0073\u0068e\u0065\u0074 \u0025\u0076", _agdfec.Name)
				if _cafbe := d.Skip(); _cafbe != nil {
					return _cafbe
				}
			}
		case _gd.EndElement:
			break _feagcc
		case _gd.CharData:
		}
	}
	return nil
}

func (_eafc *CT_Col) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ecea := range start.Attr {
		if _ecea.Name.Local == "\u006d\u0069\u006e" {
			_dddd, _bdgd := _a.ParseUint(_ecea.Value, 10, 32)
			if _bdgd != nil {
				return _bdgd
			}
			_eafc.MinAttr = uint32(_dddd)
			continue
		}
		if _ecea.Name.Local == "\u006d\u0061\u0078" {
			_cabb, _gccbc := _a.ParseUint(_ecea.Value, 10, 32)
			if _gccbc != nil {
				return _gccbc
			}
			_eafc.MaxAttr = uint32(_cabb)
			continue
		}
		if _ecea.Name.Local == "\u0077\u0069\u0064t\u0068" {
			_eaca, _adef := _a.ParseFloat(_ecea.Value, 64)
			if _adef != nil {
				return _adef
			}
			_eafc.WidthAttr = &_eaca
			continue
		}
		if _ecea.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_caec, _bcef := _a.ParseUint(_ecea.Value, 10, 32)
			if _bcef != nil {
				return _bcef
			}
			_bbec := uint32(_caec)
			_eafc.StyleAttr = &_bbec
			continue
		}
		if _ecea.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_babc, _ggbbb := _a.ParseBool(_ecea.Value)
			if _ggbbb != nil {
				return _ggbbb
			}
			_eafc.HiddenAttr = &_babc
			continue
		}
		if _ecea.Name.Local == "\u0062e\u0073\u0074\u0046\u0069\u0074" {
			_fagad, _ffcb := _a.ParseBool(_ecea.Value)
			if _ffcb != nil {
				return _ffcb
			}
			_eafc.BestFitAttr = &_fagad
			continue
		}
		if _ecea.Name.Local == "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068" {
			_gccbd, _egbg := _a.ParseBool(_ecea.Value)
			if _egbg != nil {
				return _egbg
			}
			_eafc.CustomWidthAttr = &_gccbd
			continue
		}
		if _ecea.Name.Local == "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063" {
			_egdc, _aab := _a.ParseBool(_ecea.Value)
			if _aab != nil {
				return _aab
			}
			_eafc.PhoneticAttr = &_egdc
			continue
		}
		if _ecea.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_aebd, _beag := _a.ParseUint(_ecea.Value, 10, 8)
			if _beag != nil {
				return _beag
			}
			_bfaf := uint8(_aebd)
			_eafc.OutlineLevelAttr = &_bfaf
			continue
		}
		if _ecea.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_fedfb, _eageg := _a.ParseBool(_ecea.Value)
			if _eageg != nil {
				return _eageg
			}
			_eafc.CollapsedAttr = &_fedfb
			continue
		}
	}
	for {
		_eecec, _gbdbc := d.Token()
		if _gbdbc != nil {
			return _b.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0043o\u006c\u003a\u0020\u0025\u0073", _gbdbc)
		}
		if _eagc, _ddge := _eecec.(_gd.EndElement); _ddge && _eagc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfbgc *ST_PatternType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dfbgc = 0
	case "\u006e\u006f\u006e\u0065":
		*_dfbgc = 1
	case "\u0073\u006f\u006ci\u0064":
		*_dfbgc = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
		*_dfbgc = 3
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_dfbgc = 4
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_dfbgc = 5
	case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
		*_dfbgc = 6
	case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_dfbgc = 7
	case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
		*_dfbgc = 8
	case "\u0064\u0061\u0072\u006b\u0055\u0070":
		*_dfbgc = 9
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
		*_dfbgc = 10
	case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_dfbgc = 11
	case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
		*_dfbgc = 12
	case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_dfbgc = 13
	case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
		*_dfbgc = 14
	case "\u006ci\u0067\u0068\u0074\u0055\u0070":
		*_dfbgc = 15
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
		*_dfbgc = 16
	case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_dfbgc = 17
	case "\u0067r\u0061\u0079\u0031\u0032\u0035":
		*_dfbgc = 18
	case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
		*_dfbgc = 19
	}
	return nil
}

type CT_DiscretePr struct {

	// Mapping Index Count
	CountAttr *uint32

	// Element Group
	X []*CT_Index
}

func (_aacgb *CT_ProtectedRange) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cdebg := range start.Attr {
		if _cdebg.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_baagb, _fabdcd := _cdebg.Value, error(nil)
			if _fabdcd != nil {
				return _fabdcd
			}
			_aacgb.PasswordAttr = &_baagb
			continue
		}
		if _cdebg.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_ceebgf, _ffccc := ParseSliceST_Sqref(_cdebg.Value)
			if _ffccc != nil {
				return _ffccc
			}
			_aacgb.SqrefAttr = _ceebgf
			continue
		}
		if _cdebg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cbcee, _faeae := _cdebg.Value, error(nil)
			if _faeae != nil {
				return _faeae
			}
			_aacgb.NameAttr = _cbcee
			continue
		}
		if _cdebg.Name.Local == "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072" {
			_bafb, _ddfaa := _cdebg.Value, error(nil)
			if _ddfaa != nil {
				return _ddfaa
			}
			_aacgb.SecurityDescriptorAttr = &_bafb
			continue
		}
		if _cdebg.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_cbeaa, _fbdgd := _cdebg.Value, error(nil)
			if _fbdgd != nil {
				return _fbdgd
			}
			_aacgb.AlgorithmNameAttr = &_cbeaa
			continue
		}
		if _cdebg.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_cebce, _acebb := _cdebg.Value, error(nil)
			if _acebb != nil {
				return _acebb
			}
			_aacgb.HashValueAttr = &_cebce
			continue
		}
		if _cdebg.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_ffede, _bdgbf := _cdebg.Value, error(nil)
			if _bdgbf != nil {
				return _bdgbf
			}
			_aacgb.SaltValueAttr = &_ffede
			continue
		}
		if _cdebg.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_ddfddb, _ceacc := _a.ParseUint(_cdebg.Value, 10, 32)
			if _ceacc != nil {
				return _ceacc
			}
			_ecfgd := uint32(_ddfddb)
			_aacgb.SpinCountAttr = &_ecfgd
			continue
		}
	}
_bbfcd:
	for {
		_cabfg, _cdbge := d.Token()
		if _cdbge != nil {
			return _cdbge
		}
		switch _eeccd := _cabfg.(type) {
		case _gd.StartElement:
			switch _eeccd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}:
				var _gbabe string
				if _gdfea := d.DecodeElement(&_gbabe, &_eeccd); _gdfea != nil {
					return _gdfea
				}
				_aacgb.SecurityDescriptor = append(_aacgb.SecurityDescriptor, _gbabe)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _eeccd.Name)
				if _bedde := d.Skip(); _bedde != nil {
					return _bedde
				}
			}
		case _gd.EndElement:
			break _bbfcd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_OleSize() *CT_OleSize { _cefcd := &CT_OleSize{}; return _cefcd }

func (_ddfcf ST_Pane) Validate() error { return _ddfcf.ValidateWithPath("") }

func NewCT_Colors() *CT_Colors { _aaddg := &CT_Colors{}; return _aaddg }

type CT_String struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

type ExternalLink struct{ CT_ExternalLink }

// Validate validates the Headers and its children
func (_aacdde *Headers) Validate() error {
	return _aacdde.ValidateWithPath("\u0048e\u0061\u0064\u0065\u0072\u0073")
}

// Validate validates the CT_HeaderFooter and its children
func (_gebdae *CT_HeaderFooter) Validate() error {
	return _gebdae.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

func (_ebgcfc *ST_CellComments) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cbebcd, _gaeae := d.Token()
	if _gaeae != nil {
		return _gaeae
	}
	if _ddage, _acgca := _cbebcd.(_gd.EndElement); _acgca && _ddage.Name == start.Name {
		*_ebgcfc = 1
		return nil
	}
	if _egdace, _agfbg := _cbebcd.(_gd.CharData); !_agfbg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbebcd)
	} else {
		switch string(_egdace) {
		case "":
			*_ebgcfc = 0
		case "\u006e\u006f\u006e\u0065":
			*_ebgcfc = 1
		case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
			*_ebgcfc = 2
		case "\u0061\u0074\u0045n\u0064":
			*_ebgcfc = 3
		}
	}
	_cbebcd, _gaeae = d.Token()
	if _gaeae != nil {
		return _gaeae
	}
	if _bgfed, _dabeg := _cbebcd.(_gd.EndElement); _dabeg && _bgfed.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbebcd)
}

func (_eadgd *CT_WebPublishing) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eadgd.CssAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0073\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eadgd.CssAttr))})
	}
	if _eadgd.ThicketAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074h\u0069\u0063\u006b\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eadgd.ThicketAttr))})
	}
	if _eadgd.LongFileNamesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eadgd.LongFileNamesAttr))})
	}
	if _eadgd.VmlAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u006d\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eadgd.VmlAttr))})
	}
	if _eadgd.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eadgd.AllowPngAttr))})
	}
	if _eadgd.TargetScreenSizeAttr != ST_TargetScreenSizeUnset {
		_beecdf, _bbcbd := _eadgd.TargetScreenSizeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065"})
		if _bbcbd != nil {
			return _bbcbd
		}
		start.Attr = append(start.Attr, _beecdf)
	}
	if _eadgd.DpiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0070\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_eadgd.DpiAttr)})
	}
	if _eadgd.CodePageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_eadgd.CodePageAttr)})
	}
	if _eadgd.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eadgd.CharacterSetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CfRule and its children, prefixing error messages with path
func (_ecbd *CT_CfRule) ValidateWithPath(path string) error {
	if _febc := _ecbd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _febc != nil {
		return _febc
	}
	if _fdb := _ecbd.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _fdb != nil {
		return _fdb
	}
	if _deda := _ecbd.TimePeriodAttr.ValidateWithPath(path + "\u002fT\u0069m\u0065\u0050\u0065\u0072\u0069\u006f\u0064\u0041\u0074\u0074\u0072"); _deda != nil {
		return _deda
	}
	if _ecbd.ColorScale != nil {
		if _baabbf := _ecbd.ColorScale.ValidateWithPath(path + "/\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"); _baabbf != nil {
			return _baabbf
		}
	}
	if _ecbd.DataBar != nil {
		if _ecda := _ecbd.DataBar.ValidateWithPath(path + "\u002f\u0044\u0061\u0074\u0061\u0042\u0061\u0072"); _ecda != nil {
			return _ecda
		}
	}
	if _ecbd.IconSet != nil {
		if _abeedf := _ecbd.IconSet.ValidateWithPath(path + "\u002f\u0049\u0063\u006f\u006e\u0053\u0065\u0074"); _abeedf != nil {
			return _abeedf
		}
	}
	if _ecbd.ExtLst != nil {
		if _acgg := _ecbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acgg != nil {
			return _acgg
		}
	}
	return nil
}

func (_cgdcgd ST_DateTimeGrouping) ValidateWithPath(path string) error {
	switch _cgdcgd {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgdcgd))
	}
	return nil
}

// Validate validates the CT_MeasureGroup and its children
func (_cfbb *CT_MeasureGroup) Validate() error {
	return _cfbb.ValidateWithPath("\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070")
}

const (
	ST_GroupByUnset    ST_GroupBy = 0
	ST_GroupByRange    ST_GroupBy = 1
	ST_GroupBySeconds  ST_GroupBy = 2
	ST_GroupByMinutes  ST_GroupBy = 3
	ST_GroupByHours    ST_GroupBy = 4
	ST_GroupByDays     ST_GroupBy = 5
	ST_GroupByMonths   ST_GroupBy = 6
	ST_GroupByQuarters ST_GroupBy = 7
	ST_GroupByYears    ST_GroupBy = 8
)

func (_accb *CT_GradientStop) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _accb.PositionAttr)})
	e.EncodeToken(start)
	_ebbeb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_accb.Color, _ebbeb)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fgfdbf ST_GradientType) String() string {
	switch _fgfdbf {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065\u0061\u0072"
	case 2:
		return "\u0070\u0061\u0074\u0068"
	}
	return ""
}

func (_bgfa *CT_DataBinding) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gbae := range start.Attr {
		if _gbae.Name.Local == "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_fafaa, _fgfcf := _gbae.Value, error(nil)
			if _fgfcf != nil {
				return _fgfcf
			}
			_bgfa.DataBindingNameAttr = &_fafaa
			continue
		}
		if _gbae.Name.Local == "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067" {
			_daea, _cbagg := _a.ParseBool(_gbae.Value)
			if _cbagg != nil {
				return _cbagg
			}
			_bgfa.FileBindingAttr = &_daea
			continue
		}
		if _gbae.Name.Local == "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044" {
			_ebdd, _bcdcc := _a.ParseUint(_gbae.Value, 10, 32)
			if _bcdcc != nil {
				return _bcdcc
			}
			_fcgd := uint32(_ebdd)
			_bgfa.ConnectionIDAttr = &_fcgd
			continue
		}
		if _gbae.Name.Local == "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_adbb, _dbaef := _gbae.Value, error(nil)
			if _dbaef != nil {
				return _dbaef
			}
			_bgfa.FileBindingNameAttr = &_adbb
			continue
		}
		if _gbae.Name.Local == "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065" {
			_bagcb, _fcdac := _a.ParseUint(_gbae.Value, 10, 32)
			if _fcdac != nil {
				return _fcdac
			}
			_bgfa.DataBindingLoadModeAttr = uint32(_bagcb)
			continue
		}
	}
_fbgf:
	for {
		_gaedc, _agdad := d.Token()
		if _agdad != nil {
			return _agdad
		}
		switch _bgdab := _gaedc.(type) {
		case _gd.StartElement:
			switch _bgdab.Name {
			default:
				if _ededf, _abeba := _e.CreateElement(_bgdab); _abeba != nil {
					return _abeba
				} else {
					if _geaec := d.DecodeElement(_ededf, &_bgdab); _geaec != nil {
						return _geaec
					}
					_bgfa.Any = _ededf
				}
			}
		case _gd.EndElement:
			break _fbgf
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_WebPublishItem() *CT_WebPublishItem {
	_dfadeb := &CT_WebPublishItem{}
	_dfadeb.SourceTypeAttr = ST_WebSourceType(1)
	return _dfadeb
}

// Validate validates the CT_SheetView and its children
func (_fafce *CT_SheetView) Validate() error {
	return _fafce.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

type CT_RevisionHeader struct {

	// GUID
	GuidAttr string

	// Date Time
	DateTimeAttr _db.Time

	// Last Sheet Id
	MaxSheetIdAttr uint32

	// User Name
	UserNameAttr string
	IdAttr       string

	// Minimum Revision Id
	MinRIdAttr *uint32

	// Max Revision Id
	MaxRIdAttr *uint32

	// Sheet Id Map
	SheetIdMap *CT_SheetIdMap

	// Reviewed List
	ReviewedList *CT_ReviewedRevisions
	ExtLst       *CT_ExtensionList
}

func NewCT_SingleXmlCells() *CT_SingleXmlCells { _cffca := &CT_SingleXmlCells{}; return _cffca }

// ValidateWithPath validates the CT_ConditionalFormat and its children, prefixing error messages with path
func (_aggb *CT_ConditionalFormat) ValidateWithPath(path string) error {
	if _edad := _aggb.ScopeAttr.ValidateWithPath(path + "\u002f\u0053\u0063\u006f\u0070\u0065\u0041\u0074\u0074\u0072"); _edad != nil {
		return _edad
	}
	if _cdgbc := _aggb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cdgbc != nil {
		return _cdgbc
	}
	if _fcac := _aggb.PivotAreas.ValidateWithPath(path + "/\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"); _fcac != nil {
		return _fcac
	}
	if _aggb.ExtLst != nil {
		if _fcde := _aggb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fcde != nil {
			return _fcde
		}
	}
	return nil
}

type CT_FutureMetadata struct {

	// Metadata Type Name
	NameAttr string

	// Future Metadata Block Count
	CountAttr *uint32

	// Future Metadata Block
	Bk []*CT_FutureMetadataBlock

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ddgfe *CT_Location) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _ddgfe.RefAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", _ddgfe.FirstHeaderRowAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", _ddgfe.FirstDataRowAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0076", _ddgfe.FirstDataColAttr)})
	if _ddgfe.RowPageCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ddgfe.RowPageCountAttr)})
	}
	if _ddgfe.ColPageCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ddgfe.ColPageCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fgd *CT_ChartsheetProtection) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fgd.PasswordAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fgd.PasswordAttr)})
	}
	if _fgd.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_fgd.AlgorithmNameAttr)})
	}
	if _fgd.HashValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_fgd.HashValueAttr)})
	}
	if _fgd.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_fgd.SaltValueAttr)})
	}
	if _fgd.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _b.Sprintf("\u0025\u0076", *_fgd.SpinCountAttr)})
	}
	if _fgd.ContentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006e\u0074\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgd.ContentAttr))})
	}
	if _fgd.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgd.ObjectsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bfabfe *ST_BorderStyle) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bfabfe = 0
	case "\u006e\u006f\u006e\u0065":
		*_bfabfe = 1
	case "\u0074\u0068\u0069\u006e":
		*_bfabfe = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d":
		*_bfabfe = 3
	case "\u0064\u0061\u0073\u0068\u0065\u0064":
		*_bfabfe = 4
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_bfabfe = 5
	case "\u0074\u0068\u0069c\u006b":
		*_bfabfe = 6
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_bfabfe = 7
	case "\u0068\u0061\u0069\u0072":
		*_bfabfe = 8
	case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
		*_bfabfe = 9
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_bfabfe = 10
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_bfabfe = 11
	case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_bfabfe = 12
	case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_bfabfe = 13
	case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_bfabfe = 14
	}
	return nil
}

func NewCT_Cell() *CT_Cell { _ffb := &CT_Cell{}; return _ffb }

func NewCT_ExternalCell() *CT_ExternalCell { _cfaaf := &CT_ExternalCell{}; return _cfaaf }

func (_eedg *CT_HeaderFooter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aaedb := range start.Attr {
		if _aaedb.Name.Local == "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e" {
			_daeeg, _ebdca := _a.ParseBool(_aaedb.Value)
			if _ebdca != nil {
				return _ebdca
			}
			_eedg.DifferentOddEvenAttr = &_daeeg
			continue
		}
		if _aaedb.Name.Local == "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074" {
			_bdcg, _fcebc := _a.ParseBool(_aaedb.Value)
			if _fcebc != nil {
				return _fcebc
			}
			_eedg.DifferentFirstAttr = &_bdcg
			continue
		}
		if _aaedb.Name.Local == "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063" {
			_fdade, _fgbef := _a.ParseBool(_aaedb.Value)
			if _fgbef != nil {
				return _fgbef
			}
			_eedg.ScaleWithDocAttr = &_fdade
			continue
		}
		if _aaedb.Name.Local == "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073" {
			_efbaf, _efca := _a.ParseBool(_aaedb.Value)
			if _efca != nil {
				return _efca
			}
			_eedg.AlignWithMarginsAttr = &_efbaf
			continue
		}
	}
_fdeag:
	for {
		_ddfdf, _efadgb := d.Token()
		if _efadgb != nil {
			return _efadgb
		}
		switch _dbabgb := _ddfdf.(type) {
		case _gd.StartElement:
			switch _dbabgb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}:
				_eedg.OddHeader = new(string)
				if _acffgb := d.DecodeElement(_eedg.OddHeader, &_dbabgb); _acffgb != nil {
					return _acffgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}:
				_eedg.OddFooter = new(string)
				if _abfge := d.DecodeElement(_eedg.OddFooter, &_dbabgb); _abfge != nil {
					return _abfge
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_eedg.EvenHeader = new(string)
				if _eagdg := d.DecodeElement(_eedg.EvenHeader, &_dbabgb); _eagdg != nil {
					return _eagdg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_eedg.EvenFooter = new(string)
				if _cfac := d.DecodeElement(_eedg.EvenFooter, &_dbabgb); _cfac != nil {
					return _cfac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_eedg.FirstHeader = new(string)
				if _gbebe := d.DecodeElement(_eedg.FirstHeader, &_dbabgb); _gbebe != nil {
					return _gbebe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_eedg.FirstFooter = new(string)
				if _fcbed := d.DecodeElement(_eedg.FirstFooter, &_dbabgb); _fcbed != nil {
					return _fcbed
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _dbabgb.Name)
				if _faaea := d.Skip(); _faaea != nil {
					return _faaea
				}
			}
		case _gd.EndElement:
			break _fdeag
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotCacheRecords and its children, prefixing error messages with path
func (_bfca *CT_PivotCacheRecords) ValidateWithPath(path string) error {
	for _beccb, _adeafa := range _bfca.R {
		if _aagaf := _adeafa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _beccb)); _aagaf != nil {
			return _aagaf
		}
	}
	if _bfca.ExtLst != nil {
		if _gdeeg := _bfca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdeeg != nil {
			return _gdeeg
		}
	}
	return nil
}

func (_begba *PivotCacheRecords) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_begba.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	for _, _bgdag := range start.Attr {
		if _bgdag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccfdbc, _begbb := _a.ParseUint(_bgdag.Value, 10, 32)
			if _begbb != nil {
				return _begbb
			}
			_agdge := uint32(_ccfdbc)
			_begba.CountAttr = &_agdge
			continue
		}
	}
_adgbf:
	for {
		_dcdfc, _dfaef := d.Token()
		if _dfaef != nil {
			return _dfaef
		}
		switch _becag := _dcdfc.(type) {
		case _gd.StartElement:
			switch _becag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_dgcbgf := NewCT_Record()
				if _dffeec := d.DecodeElement(_dgcbgf, &_becag); _dffeec != nil {
					return _dffeec
				}
				_begba.R = append(_begba.R, _dgcbgf)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_begba.ExtLst = NewCT_ExtensionList()
				if _agccff := d.DecodeElement(_begba.ExtLst, &_becag); _agccff != nil {
					return _agccff
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _becag.Name)
				if _bbcca := d.Skip(); _bbcca != nil {
					return _bbcca
				}
			}
		case _gd.EndElement:
			break _adgbf
		case _gd.CharData:
		}
	}
	return nil
}

type ST_DataValidationType byte

func NewCT_RgbColor() *CT_RgbColor { _gffcg := &CT_RgbColor{}; return _gffcg }

func (_aadbag ST_PrintError) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cbdeg := _gd.Attr{}
	_cbdeg.Name = name
	switch _aadbag {
	case ST_PrintErrorUnset:
		_cbdeg.Value = ""
	case ST_PrintErrorDisplayed:
		_cbdeg.Value = "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case ST_PrintErrorBlank:
		_cbdeg.Value = "\u0062\u006c\u0061n\u006b"
	case ST_PrintErrorDash:
		_cbdeg.Value = "\u0064\u0061\u0073\u0068"
	case ST_PrintErrorNA:
		_cbdeg.Value = "\u004e\u0041"
	}
	return _cbdeg, nil
}

func NewCT_RPrElt() *CT_RPrElt { _bbdab := &CT_RPrElt{}; return _bbdab }

const (
	ST_TargetScreenSizeUnset     ST_TargetScreenSize = 0
	ST_TargetScreenSize544x376   ST_TargetScreenSize = 1
	ST_TargetScreenSize640x480   ST_TargetScreenSize = 2
	ST_TargetScreenSize720x512   ST_TargetScreenSize = 3
	ST_TargetScreenSize800x600   ST_TargetScreenSize = 4
	ST_TargetScreenSize1024x768  ST_TargetScreenSize = 5
	ST_TargetScreenSize1152x882  ST_TargetScreenSize = 6
	ST_TargetScreenSize1152x900  ST_TargetScreenSize = 7
	ST_TargetScreenSize1280x1024 ST_TargetScreenSize = 8
	ST_TargetScreenSize1600x1200 ST_TargetScreenSize = 9
	ST_TargetScreenSize1800x1440 ST_TargetScreenSize = 10
	ST_TargetScreenSize1920x1200 ST_TargetScreenSize = 11
)

// ValidateWithPath validates the CT_Record and its children, prefixing error messages with path
func (_deebg *CT_Record) ValidateWithPath(path string) error {
	for _eecabd, _feefae := range _deebg.M {
		if _gbebb := _feefae.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _eecabd)); _gbebb != nil {
			return _gbebb
		}
	}
	for _ebfac, _gcadf := range _deebg.N {
		if _fegbea := _gcadf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _ebfac)); _fegbea != nil {
			return _fegbea
		}
	}
	for _ccbce, _ffffa := range _deebg.B {
		if _dffae := _ffffa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _ccbce)); _dffae != nil {
			return _dffae
		}
	}
	for _dgaff, _geaeg := range _deebg.E {
		if _ededb := _geaeg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _dgaff)); _ededb != nil {
			return _ededb
		}
	}
	for _fbcfe, _dgfbe := range _deebg.S {
		if _caccf := _dgfbe.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _fbcfe)); _caccf != nil {
			return _caccf
		}
	}
	for _facbg, _baecd := range _deebg.D {
		if _geff := _baecd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _facbg)); _geff != nil {
			return _geff
		}
	}
	for _bcaca, _deagg := range _deebg.X {
		if _aabca := _deagg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bcaca)); _aabca != nil {
			return _aabca
		}
	}
	return nil
}

type CT_ConditionalFormats struct {

	// Conditional Format Count
	CountAttr *uint32

	// Conditional Formatting
	ConditionalFormat []*CT_ConditionalFormat
}

func (_cbaba ST_VolDepType) String() string {
	switch _cbaba {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case 2:
		return "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return ""
}

type CT_Extension struct {

	// URI
	UriAttr *string
	Any     _e.Any
}

func (_agfcg *CT_RevisionAutoFormatting) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dbdfgf := range start.Attr {
		if _dbdfgf.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_edccfd, _eaaca := _a.ParseUint(_dbdfgf.Value, 10, 32)
			if _eaaca != nil {
				return _eaaca
			}
			_agfcg.SheetIdAttr = uint32(_edccfd)
			continue
		}
		if _dbdfgf.Name.Local == "\u0072\u0065\u0066" {
			_dbcag, _dccaf := _dbdfgf.Value, error(nil)
			if _dccaf != nil {
				return _dccaf
			}
			_agfcg.RefAttr = _dbcag
			continue
		}
		if _dbdfgf.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_efbe, _bgfff := _a.ParseUint(_dbdfgf.Value, 10, 32)
			if _bgfff != nil {
				return _bgfff
			}
			_addfa := uint32(_efbe)
			_agfcg.AutoFormatIdAttr = &_addfa
			continue
		}
		if _dbdfgf.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_gfgdf, _ecfcc := _a.ParseBool(_dbdfgf.Value)
			if _ecfcc != nil {
				return _ecfcc
			}
			_agfcg.ApplyNumberFormatsAttr = &_gfgdf
			continue
		}
		if _dbdfgf.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_abgdgg, _fgfec := _a.ParseBool(_dbdfgf.Value)
			if _fgfec != nil {
				return _fgfec
			}
			_agfcg.ApplyBorderFormatsAttr = &_abgdgg
			continue
		}
		if _dbdfgf.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ababfd, _cbeef := _a.ParseBool(_dbdfgf.Value)
			if _cbeef != nil {
				return _cbeef
			}
			_agfcg.ApplyFontFormatsAttr = &_ababfd
			continue
		}
		if _dbdfgf.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gdafg, _abefc := _a.ParseBool(_dbdfgf.Value)
			if _abefc != nil {
				return _abefc
			}
			_agfcg.ApplyPatternFormatsAttr = &_gdafg
			continue
		}
		if _dbdfgf.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eecbfc, _bcdag := _a.ParseBool(_dbdfgf.Value)
			if _bcdag != nil {
				return _bcdag
			}
			_agfcg.ApplyAlignmentFormatsAttr = &_eecbfc
			continue
		}
		if _dbdfgf.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fdfgg, _eaace := _a.ParseBool(_dbdfgf.Value)
			if _eaace != nil {
				return _eaace
			}
			_agfcg.ApplyWidthHeightFormatsAttr = &_fdfgg
			continue
		}
	}
	for {
		_adfbd, _fgfabg := d.Token()
		if _fgfabg != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eA\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006eg\u003a\u0020\u0025\u0073", _fgfabg)
		}
		if _edeae, _dcfaf := _adfbd.(_gd.EndElement); _dcfaf && _edeae.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfedd *CT_ConditionalFormats) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egdb := range start.Attr {
		if _egdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gcade, _acgdc := _a.ParseUint(_egdb.Value, 10, 32)
			if _acgdc != nil {
				return _acgdc
			}
			_gfdga := uint32(_gcade)
			_dfedd.CountAttr = &_gfdga
			continue
		}
	}
_gbcg:
	for {
		_fdccc, _bgffc := d.Token()
		if _bgffc != nil {
			return _bgffc
		}
		switch _eaag := _fdccc.(type) {
		case _gd.StartElement:
			switch _eaag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}:
				_daed := NewCT_ConditionalFormat()
				if _fegee := d.DecodeElement(_daed, &_eaag); _fegee != nil {
					return _fegee
				}
				_dfedd.ConditionalFormat = append(_dfedd.ConditionalFormat, _daed)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _eaag.Name)
				if _fbbd := d.Skip(); _fbbd != nil {
					return _fbbd
				}
			}
		case _gd.EndElement:
			break _gbcg
		case _gd.CharData:
		}
	}
	return nil
}

type ST_DataConsolidateFunction byte

func (_bagfe *CT_Connections) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_gdfce:
	for {
		_beae, _fddf := d.Token()
		if _fddf != nil {
			return _fddf
		}
		switch _aecf := _beae.(type) {
		case _gd.StartElement:
			switch _aecf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dcdae := NewCT_Connection()
				if _cgge := d.DecodeElement(_dcdae, &_aecf); _cgge != nil {
					return _cgge
				}
				_bagfe.Connection = append(_bagfe.Connection, _dcdae)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074i\u006fn\u0073\u0020\u0025\u0076", _aecf.Name)
				if _dbad := d.Skip(); _dbad != nil {
					return _dbad
				}
			}
		case _gd.EndElement:
			break _gdfce
		case _gd.CharData:
		}
	}
	return nil
}

func (_bade *CT_PivotCache) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bade.CacheIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bade.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewWorkbook() *Workbook {
	_bfaefd := &Workbook{}
	_bfaefd.CT_Workbook = *NewCT_Workbook()
	return _bfaefd
}

func (_babg *CT_CustomProperty) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cfffc := range start.Attr {
		if _cfffc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfffc.Name.Local == "\u0069\u0064" || _cfffc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cfffc.Name.Local == "\u0069\u0064" {
			_gcgd, _gcgb := _cfffc.Value, error(nil)
			if _gcgb != nil {
				return _gcgb
			}
			_babg.IdAttr = _gcgd
			continue
		}
		if _cfffc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcagf, _cege := _cfffc.Value, error(nil)
			if _cege != nil {
				return _cege
			}
			_babg.NameAttr = _dcagf
			continue
		}
	}
	for {
		_gdgea, _feefa := d.Token()
		if _feefa != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _feefa)
		}
		if _ecdbb, _bfga := _gdgea.(_gd.EndElement); _bfga && _ecdbb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ffccbc *ST_FormulaExpression) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gbcgg, _bagbdcc := d.Token()
	if _bagbdcc != nil {
		return _bagbdcc
	}
	if _eebdf, _cfagb := _gbcgg.(_gd.EndElement); _cfagb && _eebdf.Name == start.Name {
		*_ffccbc = 1
		return nil
	}
	if _dgeefg, _gabffd := _gbcgg.(_gd.CharData); !_gabffd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbcgg)
	} else {
		switch string(_dgeefg) {
		case "":
			*_ffccbc = 0
		case "\u0072\u0065\u0066":
			*_ffccbc = 1
		case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
			*_ffccbc = 2
		case "\u0061\u0072\u0065\u0061":
			*_ffccbc = 3
		case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
			*_ffccbc = 4
		case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
			*_ffccbc = 5
		}
	}
	_gbcgg, _bagbdcc = d.Token()
	if _bagbdcc != nil {
		return _bagbdcc
	}
	if _faggd, _bcbcbg := _gbcgg.(_gd.EndElement); _bcbcbg && _faggd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbcgg)
}

func (_gebab *CT_WorkbookProtection) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cecdf := range start.Attr {
		if _cecdf.Name.Local == "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065" {
			_cfdab, _edfdc := _cecdf.Value, error(nil)
			if _edfdc != nil {
				return _edfdc
			}
			_gebab.RevisionsAlgorithmNameAttr = &_cfdab
			continue
		}
		if _cecdf.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065" {
			_egfgc, _ddefbf := _cecdf.Value, error(nil)
			if _ddefbf != nil {
				return _ddefbf
			}
			_gebab.RevisionsHashValueAttr = &_egfgc
			continue
		}
		if _cecdf.Name.Local == "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074" {
			_babec, _ddfbd := _cecdf.Value, error(nil)
			if _ddfbd != nil {
				return _ddfbd
			}
			_gebab.WorkbookPasswordCharacterSetAttr = &_babec
			continue
		}
		if _cecdf.Name.Local == "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074" {
			_egeefe, _deebe := _cecdf.Value, error(nil)
			if _deebe != nil {
				return _deebe
			}
			_gebab.RevisionsPasswordCharacterSetAttr = &_egeefe
			continue
		}
		if _cecdf.Name.Local == "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065" {
			_fabcd, _fcgfc := _a.ParseBool(_cecdf.Value)
			if _fcgfc != nil {
				return _fcgfc
			}
			_gebab.LockStructureAttr = &_fabcd
			continue
		}
		if _cecdf.Name.Local == "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073" {
			_fagaf, _edcca := _a.ParseBool(_cecdf.Value)
			if _edcca != nil {
				return _edcca
			}
			_gebab.LockWindowsAttr = &_fagaf
			continue
		}
		if _cecdf.Name.Local == "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e" {
			_dggeag, _debge := _a.ParseBool(_cecdf.Value)
			if _debge != nil {
				return _debge
			}
			_gebab.LockRevisionAttr = &_dggeag
			continue
		}
		if _cecdf.Name.Local == "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_ddgda, _aafaa := _cecdf.Value, error(nil)
			if _aafaa != nil {
				return _aafaa
			}
			_gebab.WorkbookPasswordAttr = &_ddgda
			continue
		}
		if _cecdf.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064" {
			_cfaac, _ecebgf := _cecdf.Value, error(nil)
			if _ecebgf != nil {
				return _ecebgf
			}
			_gebab.RevisionsPasswordAttr = &_cfaac
			continue
		}
		if _cecdf.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065" {
			_ddcab, _ddgad := _cecdf.Value, error(nil)
			if _ddgad != nil {
				return _ddgad
			}
			_gebab.RevisionsSaltValueAttr = &_ddcab
			continue
		}
		if _cecdf.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074" {
			_egbbb, _caeb := _a.ParseUint(_cecdf.Value, 10, 32)
			if _caeb != nil {
				return _caeb
			}
			_edfdee := uint32(_egbbb)
			_gebab.RevisionsSpinCountAttr = &_edfdee
			continue
		}
		if _cecdf.Name.Local == "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065" {
			_abadbc, _acbac := _cecdf.Value, error(nil)
			if _acbac != nil {
				return _acbac
			}
			_gebab.WorkbookAlgorithmNameAttr = &_abadbc
			continue
		}
		if _cecdf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065" {
			_fbfbf, _fgggb := _cecdf.Value, error(nil)
			if _fgggb != nil {
				return _fgggb
			}
			_gebab.WorkbookHashValueAttr = &_fbfbf
			continue
		}
		if _cecdf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065" {
			_bggbc, _gbgdd := _cecdf.Value, error(nil)
			if _gbgdd != nil {
				return _gbgdd
			}
			_gebab.WorkbookSaltValueAttr = &_bggbc
			continue
		}
		if _cecdf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074" {
			_fagge, _ddcddd := _a.ParseUint(_cecdf.Value, 10, 32)
			if _ddcddd != nil {
				return _ddcddd
			}
			_adgdb := uint32(_fagge)
			_gebab.WorkbookSpinCountAttr = &_adgdb
			continue
		}
	}
	for {
		_bbdfa, _gafcge := d.Token()
		if _gafcge != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _gafcge)
		}
		if _dbedd, _abage := _bbdfa.(_gd.EndElement); _abage && _dbedd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_SheetView() *CT_SheetView { _dfgga := &CT_SheetView{}; return _dfgga }

// ValidateWithPath validates the CT_Index and its children, prefixing error messages with path
func (_gagga *CT_Index) ValidateWithPath(path string) error { return nil }

func (_bccga ST_PivotAreaType) String() string {
	switch _bccga {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 3:
		return "\u0064\u0061\u0074\u0061"
	case 4:
		return "\u0061\u006c\u006c"
	case 5:
		return "\u006f\u0072\u0069\u0067\u0069\u006e"
	case 6:
		return "\u0062\u0075\u0074\u0074\u006f\u006e"
	case 7:
		return "\u0074\u006f\u0070\u0045\u006e\u0064"
	case 8:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return ""
}

func (_cffeb ST_FormulaExpression) String() string {
	switch _cffeb {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0066"
	case 2:
		return "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case 3:
		return "\u0061\u0072\u0065\u0061"
	case 4:
		return "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case 5:
		return "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return ""
}

func (_ecfcg *CT_CsPageSetup) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ecfcg.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.PaperSizeAttr)})
	}
	if _ecfcg.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.PaperHeightAttr)})
	}
	if _ecfcg.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.PaperWidthAttr)})
	}
	if _ecfcg.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.FirstPageNumberAttr)})
	}
	if _ecfcg.OrientationAttr != ST_OrientationUnset {
		_cdfb, _dbgbb := _ecfcg.OrientationAttr.MarshalXMLAttr(_gd.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _dbgbb != nil {
			return _dbgbb
		}
		start.Attr = append(start.Attr, _cdfb)
	}
	if _ecfcg.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ecfcg.UsePrinterDefaultsAttr))})
	}
	if _ecfcg.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ecfcg.BlackAndWhiteAttr))})
	}
	if _ecfcg.DraftAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ecfcg.DraftAttr))})
	}
	if _ecfcg.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ecfcg.UseFirstPageNumberAttr))})
	}
	if _ecfcg.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.HorizontalDpiAttr)})
	}
	if _ecfcg.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.VerticalDpiAttr)})
	}
	if _ecfcg.CopiesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.CopiesAttr)})
	}
	if _ecfcg.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecfcg.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_egb *CT_Border) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dcbd := range start.Attr {
		if _dcbd.Name.Local == "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070" {
			_ebf, _baf := _a.ParseBool(_dcbd.Value)
			if _baf != nil {
				return _baf
			}
			_egb.DiagonalUpAttr = &_ebf
			continue
		}
		if _dcbd.Name.Local == "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e" {
			_bbfbc, _cafd := _a.ParseBool(_dcbd.Value)
			if _cafd != nil {
				return _cafd
			}
			_egb.DiagonalDownAttr = &_bbfbc
			continue
		}
		if _dcbd.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_afgf, _dga := _a.ParseBool(_dcbd.Value)
			if _dga != nil {
				return _dga
			}
			_egb.OutlineAttr = &_afgf
			continue
		}
	}
_dcc:
	for {
		_dedc, _ff := d.Token()
		if _ff != nil {
			return _ff
		}
		switch _ace := _dedc.(type) {
		case _gd.StartElement:
			switch _ace.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}:
				_egb.Start = NewCT_BorderPr()
				if _gfec := d.DecodeElement(_egb.Start, &_ace); _gfec != nil {
					return _gfec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				_egb.End = NewCT_BorderPr()
				if _dggc := d.DecodeElement(_egb.End, &_ace); _dggc != nil {
					return _dggc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_egb.Left = NewCT_BorderPr()
				if _cagd := d.DecodeElement(_egb.Left, &_ace); _cagd != nil {
					return _cagd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_egb.Right = NewCT_BorderPr()
				if _eaae := d.DecodeElement(_egb.Right, &_ace); _eaae != nil {
					return _eaae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_egb.Top = NewCT_BorderPr()
				if _gbf := d.DecodeElement(_egb.Top, &_ace); _gbf != nil {
					return _gbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_egb.Bottom = NewCT_BorderPr()
				if _faaf := d.DecodeElement(_egb.Bottom, &_ace); _faaf != nil {
					return _faaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}:
				_egb.Diagonal = NewCT_BorderPr()
				if _cfcf := d.DecodeElement(_egb.Diagonal, &_ace); _cfcf != nil {
					return _cfcf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}:
				_egb.Vertical = NewCT_BorderPr()
				if _eaee := d.DecodeElement(_egb.Vertical, &_ace); _eaee != nil {
					return _eaee
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}:
				_egb.Horizontal = NewCT_BorderPr()
				if _dbc := d.DecodeElement(_egb.Horizontal, &_ace); _dbc != nil {
					return _dbc
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0042\u006f\u0072d\u0065\u0072 \u0025\u0076", _ace.Name)
				if _dfa := d.Skip(); _dfa != nil {
					return _dfa
				}
			}
		case _gd.EndElement:
			break _dcc
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Drawing struct{ IdAttr string }

type CT_PageField struct {

	// Field
	FldAttr int32

	// Item Index
	ItemAttr *uint32

	// OLAP Hierarchy Index
	HierAttr *int32

	// Hierarchy Unique Name
	NameAttr *string

	// Hierarchy Display Name
	CapAttr *string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_MapInfo and its children
func (_afge *CT_MapInfo) Validate() error {
	return _afge.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f")
}

// Validate validates the CT_CellStyles and its children
func (_dcbg *CT_CellStyles) Validate() error {
	return _dcbg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073")
}

func NewCT_CustomFilters() *CT_CustomFilters { _fge := &CT_CustomFilters{}; return _fge }

func (_aggcb ST_FileType) Validate() error { return _aggcb.ValidateWithPath("") }

func (_ceda ST_GroupBy) Validate() error { return _ceda.ValidateWithPath("") }

// Validate validates the CT_AutoSortScope and its children
func (_bge *CT_AutoSortScope) Validate() error {
	return _bge.ValidateWithPath("\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065")
}

type ST_Axis byte

// Validate validates the CT_CacheHierarchies and its children
func (_ebb *CT_CacheHierarchies) Validate() error {
	return _ebb.ValidateWithPath("\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

func (_fdedb *CT_Rst) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _fdedb.T != nil {
		_abggf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074"}}
		_e.AddPreserveSpaceAttr(&_abggf, *_fdedb.T)
		e.EncodeElement(_fdedb.T, _abggf)
	}
	if _fdedb.R != nil {
		_gbcdd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _fbaea := range _fdedb.R {
			e.EncodeElement(_fbaea, _gbcdd)
		}
	}
	if _fdedb.RPh != nil {
		_cfcbf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0068"}}
		for _, _fdgddb := range _fdedb.RPh {
			e.EncodeElement(_fdgddb, _cfcbf)
		}
	}
	if _fdedb.PhoneticPr != nil {
		_bcbcdc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_fdedb.PhoneticPr, _bcbcdc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Index struct {

	// Shared Items Index
	VAttr uint32
}

func NewCT_MetadataBlock() *CT_MetadataBlock { _eddea := &CT_MetadataBlock{}; return _eddea }

func (_bebfe *ST_FormulaExpression) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bebfe = 0
	case "\u0072\u0065\u0066":
		*_bebfe = 1
	case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
		*_bebfe = 2
	case "\u0061\u0072\u0065\u0061":
		*_bebfe = 3
	case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
		*_bebfe = 4
	case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
		*_bebfe = 5
	}
	return nil
}

// Validate validates the CT_ExternalLink and its children
func (_cdbe *CT_ExternalLink) Validate() error {
	return _cdbe.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}

func (_cedeg *CT_Number) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", _cedeg.VAttr)})
	if _cedeg.UAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cedeg.UAttr))})
	}
	if _cedeg.FAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cedeg.FAttr))})
	}
	if _cedeg.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cedeg.CAttr)})
	}
	if _cedeg.CpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_cedeg.CpAttr)})
	}
	if _cedeg.InAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cedeg.InAttr)})
	}
	if _cedeg.BcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cedeg.BcAttr)})
	}
	if _cedeg.FcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cedeg.FcAttr)})
	}
	if _cedeg.IAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cedeg.IAttr))})
	}
	if _cedeg.UnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cedeg.UnAttr))})
	}
	if _cedeg.StAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cedeg.StAttr))})
	}
	if _cedeg.BAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cedeg.BAttr))})
	}
	e.EncodeToken(start)
	if _cedeg.Tpls != nil {
		_eefad := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _ebcbff := range _cedeg.Tpls {
			e.EncodeElement(_ebcbff, _eefad)
		}
	}
	if _cedeg.X != nil {
		_bdcac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _cegeg := range _cedeg.X {
			e.EncodeElement(_cegeg, _bdcac)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_ExternalDefinedNames() *CT_ExternalDefinedNames {
	_cecec := &CT_ExternalDefinedNames{}
	return _cecec
}

func (_efaea *CT_SmartTags) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_dbdfc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
	for _, _bedgeb := range _efaea.CellSmartTags {
		e.EncodeElement(_bedgeb, _dbdfc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewVolTypes() *VolTypes {
	_edgeg := &VolTypes{}
	_edgeg.CT_VolTypes = *NewCT_VolTypes()
	return _edgeg
}

func (_dgafgc *CT_PivotHierarchy) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dgafgc.OutlineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.OutlineAttr))})
	}
	if _dgafgc.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.MultipleItemSelectionAllowedAttr))})
	}
	if _dgafgc.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.SubtotalTopAttr))})
	}
	if _dgafgc.ShowInFieldListAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.ShowInFieldListAttr))})
	}
	if _dgafgc.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.DragToRowAttr))})
	}
	if _dgafgc.DragToColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.DragToColAttr))})
	}
	if _dgafgc.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.DragToPageAttr))})
	}
	if _dgafgc.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.DragToDataAttr))})
	}
	if _dgafgc.DragOffAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.DragOffAttr))})
	}
	if _dgafgc.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgafgc.IncludeNewItemsInFilterAttr))})
	}
	if _dgafgc.CaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_dgafgc.CaptionAttr)})
	}
	e.EncodeToken(start)
	if _dgafgc.Mps != nil {
		_aacddaa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u0073"}}
		e.EncodeElement(_dgafgc.Mps, _aacddaa)
	}
	if _dgafgc.Members != nil {
		_gaefc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u006d\u0062\u0065\u0072\u0073"}}
		for _, _dfaacc := range _dgafgc.Members {
			e.EncodeElement(_dfaacc, _gaefc)
		}
	}
	if _dgafgc.ExtLst != nil {
		_cafac := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgafgc.ExtLst, _cafac)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_afbf *CT_Cfvo) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	_ecgdg, _cbbg := _afbf.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _cbbg != nil {
		return _cbbg
	}
	start.Attr = append(start.Attr, _ecgdg)
	if _afbf.ValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_afbf.ValAttr)})
	}
	if _afbf.GteAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_afbf.GteAttr))})
	}
	e.EncodeToken(start)
	if _afbf.ExtLst != nil {
		_afbb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afbf.ExtLst, _afbb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableStyleInfo and its children, prefixing error messages with path
func (_gcgce *CT_TableStyleInfo) ValidateWithPath(path string) error { return nil }

// Validate validates the QueryTable and its children
func (_bdfcca *QueryTable) Validate() error {
	return _bdfcca.ValidateWithPath("\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

func (_bcced *CT_PhoneticPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fffbde := range start.Attr {
		if _fffbde.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_bcdga, _bebcd := _a.ParseUint(_fffbde.Value, 10, 32)
			if _bebcd != nil {
				return _bebcd
			}
			_bcced.FontIdAttr = uint32(_bcdga)
			continue
		}
		if _fffbde.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bcced.TypeAttr.UnmarshalXMLAttr(_fffbde)
			continue
		}
		if _fffbde.Name.Local == "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et" {
			_bcced.AlignmentAttr.UnmarshalXMLAttr(_fffbde)
			continue
		}
	}
	for {
		_gafbe, _ddbfa := d.Token()
		if _ddbfa != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050h\u006fn\u0065t\u0069\u0063\u0050\u0072\u003a\u0020\u0025s", _ddbfa)
		}
		if _adaae, _cefgf := _gafbe.(_gd.EndElement); _cefgf && _adaae.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ExternalDefinedName() *CT_ExternalDefinedName {
	_gecf := &CT_ExternalDefinedName{}
	return _gecf
}

func (_bacffg *StyleSheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bacffg.CT_Stylesheet = *NewCT_Stylesheet()
_cdecg:
	for {
		_dfdega, _gbgdb := d.Token()
		if _gbgdb != nil {
			return _gbgdb
		}
		switch _geagd := _dfdega.(type) {
		case _gd.StartElement:
			switch _geagd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_bacffg.NumFmts = NewCT_NumFmts()
				if _bgdcbb := d.DecodeElement(_bacffg.NumFmts, &_geagd); _bgdcbb != nil {
					return _bgdcbb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_bacffg.Fonts = NewCT_Fonts()
				if _aegcb := d.DecodeElement(_bacffg.Fonts, &_geagd); _aegcb != nil {
					return _aegcb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_bacffg.Fills = NewCT_Fills()
				if _bfddg := d.DecodeElement(_bacffg.Fills, &_geagd); _bfddg != nil {
					return _bfddg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_bacffg.Borders = NewCT_Borders()
				if _aggea := d.DecodeElement(_bacffg.Borders, &_geagd); _aggea != nil {
					return _aggea
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_bacffg.CellStyleXfs = NewCT_CellStyleXfs()
				if _beff := d.DecodeElement(_bacffg.CellStyleXfs, &_geagd); _beff != nil {
					return _beff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_bacffg.CellXfs = NewCT_CellXfs()
				if _fefde := d.DecodeElement(_bacffg.CellXfs, &_geagd); _fefde != nil {
					return _fefde
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_bacffg.CellStyles = NewCT_CellStyles()
				if _aagfa := d.DecodeElement(_bacffg.CellStyles, &_geagd); _aagfa != nil {
					return _aagfa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_bacffg.Dxfs = NewCT_Dxfs()
				if _fecbb := d.DecodeElement(_bacffg.Dxfs, &_geagd); _fecbb != nil {
					return _fecbb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_bacffg.TableStyles = NewCT_TableStyles()
				if _abcgb := d.DecodeElement(_bacffg.TableStyles, &_geagd); _abcgb != nil {
					return _abcgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_bacffg.Colors = NewCT_Colors()
				if _daadfd := d.DecodeElement(_bacffg.Colors, &_geagd); _daadfd != nil {
					return _daadfd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bacffg.ExtLst = NewCT_ExtensionList()
				if _agedec := d.DecodeElement(_bacffg.ExtLst, &_geagd); _agedec != nil {
					return _agedec
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0074\u0079l\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _geagd.Name)
				if _ceefbd := d.Skip(); _ceefbd != nil {
					return _ceefbd
				}
			}
		case _gd.EndElement:
			break _cdecg
		case _gd.CharData:
		}
	}
	return nil
}

func (_ecbe *CT_GradientStop) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ecbe.Color = NewCT_Color()
	for _, _dbecc := range start.Attr {
		if _dbecc.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_eegab, _cfaf := _a.ParseFloat(_dbecc.Value, 64)
			if _cfaf != nil {
				return _cfaf
			}
			_ecbe.PositionAttr = _eegab
			continue
		}
	}
_egea:
	for {
		_affcf, _aabb := d.Token()
		if _aabb != nil {
			return _aabb
		}
		switch _aaed := _affcf.(type) {
		case _gd.StartElement:
			switch _aaed.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _aeefe := d.DecodeElement(_ecbe.Color, &_aaed); _aeefe != nil {
					return _aeefe
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _aaed.Name)
				if _gaeee := d.Skip(); _gaeee != nil {
					return _gaeee
				}
			}
		case _gd.EndElement:
			break _egea
		case _gd.CharData:
		}
	}
	return nil
}

func (_cbegd *ST_DataValidationOperator) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_afcad, _bbgbc := d.Token()
	if _bbgbc != nil {
		return _bbgbc
	}
	if _adaebd, _efaac := _afcad.(_gd.EndElement); _efaac && _adaebd.Name == start.Name {
		*_cbegd = 1
		return nil
	}
	if _fbcgd, _bfeega := _afcad.(_gd.CharData); !_bfeega {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _afcad)
	} else {
		switch string(_fbcgd) {
		case "":
			*_cbegd = 0
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_cbegd = 1
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_cbegd = 2
		case "\u0065\u0071\u0075a\u006c":
			*_cbegd = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_cbegd = 4
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_cbegd = 5
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_cbegd = 6
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_cbegd = 7
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_cbegd = 8
		}
	}
	_afcad, _bbgbc = d.Token()
	if _bbgbc != nil {
		return _bbgbc
	}
	if _afefa, _gacddcd := _afcad.(_gd.EndElement); _gacddcd && _afefa.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _afcad)
}

func (_fafca ST_CellFormulaType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_fffcbe := _gd.Attr{}
	_fffcbe.Name = name
	switch _fafca {
	case ST_CellFormulaTypeUnset:
		_fffcbe.Value = ""
	case ST_CellFormulaTypeNormal:
		_fffcbe.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_CellFormulaTypeArray:
		_fffcbe.Value = "\u0061\u0072\u0072a\u0079"
	case ST_CellFormulaTypeDataTable:
		_fffcbe.Value = "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case ST_CellFormulaTypeShared:
		_fffcbe.Value = "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return _fffcbe, nil
}

type CT_DefinedName struct {
	NameAttr              string
	CommentAttr           *string
	CustomMenuAttr        *string
	DescriptionAttr       *string
	HelpAttr              *string
	StatusBarAttr         *string
	LocalSheetIdAttr      *uint32
	HiddenAttr            *bool
	FunctionAttr          *bool
	VbProcedureAttr       *bool
	XlmAttr               *bool
	FunctionGroupIdAttr   *uint32
	ShortcutKeyAttr       *string
	PublishToServerAttr   *bool
	WorkbookParameterAttr *bool
	Content               string
}

func (_ebfab ST_DataValidationErrorStyle) Validate() error { return _ebfab.ValidateWithPath("") }

// ValidateWithPath validates the CT_DiscretePr and its children, prefixing error messages with path
func (_gdccb *CT_DiscretePr) ValidateWithPath(path string) error {
	for _gfeb, _fgaf := range _gdccb.X {
		if _afdgg := _fgaf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gfeb)); _afdgg != nil {
			return _afdgg
		}
	}
	return nil
}

func (_ceccf *CT_PivotHierarchies) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ceccf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ceccf.CountAttr)})
	}
	e.EncodeToken(start)
	_fcebcg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
	for _, _dcef := range _ceccf.PivotHierarchy {
		e.EncodeElement(_dcef, _fcebcg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_afgbbc ST_IconSetType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_afgbbc.String(), start)
}

func (_ccgab *CT_MetadataTypes) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ccgab.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ccgab.CountAttr)})
	}
	e.EncodeToken(start)
	_dfega := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}}
	for _, _becda := range _ccgab.MetadataType {
		e.EncodeElement(_becda, _dfega)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fgdc *CT_CustomWorkbookView) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _fgdc.NameAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fgdc.GuidAttr)})
	if _fgdc.AutoUpdateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.AutoUpdateAttr))})
	}
	if _fgdc.MergeIntervalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fgdc.MergeIntervalAttr)})
	}
	if _fgdc.ChangesSavedWinAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.ChangesSavedWinAttr))})
	}
	if _fgdc.OnlySyncAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.OnlySyncAttr))})
	}
	if _fgdc.PersonalViewAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.PersonalViewAttr))})
	}
	if _fgdc.IncludePrintSettingsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.IncludePrintSettingsAttr))})
	}
	if _fgdc.IncludeHiddenRowColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.IncludeHiddenRowColAttr))})
	}
	if _fgdc.MaximizedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.MaximizedAttr))})
	}
	if _fgdc.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.MinimizedAttr))})
	}
	if _fgdc.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.ShowHorizontalScrollAttr))})
	}
	if _fgdc.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.ShowVerticalScrollAttr))})
	}
	if _fgdc.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.ShowSheetTabsAttr))})
	}
	if _fgdc.XWindowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_fgdc.XWindowAttr)})
	}
	if _fgdc.YWindowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_fgdc.YWindowAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", _fgdc.WindowWidthAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", _fgdc.WindowHeightAttr)})
	if _fgdc.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_fgdc.TabRatioAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fgdc.ActiveSheetIdAttr)})
	if _fgdc.ShowFormulaBarAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.ShowFormulaBarAttr))})
	}
	if _fgdc.ShowStatusbarAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgdc.ShowStatusbarAttr))})
	}
	if _fgdc.ShowCommentsAttr != ST_CommentsUnset {
		_dccd, _gbbda := _fgdc.ShowCommentsAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _gbbda != nil {
			return _gbbda
		}
		start.Attr = append(start.Attr, _dccd)
	}
	if _fgdc.ShowObjectsAttr != ST_ObjectsUnset {
		_gafbc, _aeed := _fgdc.ShowObjectsAttr.MarshalXMLAttr(_gd.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _aeed != nil {
			return _aeed
		}
		start.Attr = append(start.Attr, _gafbc)
	}
	e.EncodeToken(start)
	if _fgdc.ExtLst != nil {
		_eaab := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fgdc.ExtLst, _eaab)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_edcee ST_Sqref) String() string { return _d.Join(_edcee, "\u0020") }

func (_bfced *CT_IgnoredError) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _b.Sprintf("\u0025\u0076", _bfced.SqrefAttr)})
	if _bfced.EvalErrorAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.EvalErrorAttr))})
	}
	if _bfced.TwoDigitTextYearAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.TwoDigitTextYearAttr))})
	}
	if _bfced.NumberStoredAsTextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.NumberStoredAsTextAttr))})
	}
	if _bfced.FormulaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.FormulaAttr))})
	}
	if _bfced.FormulaRangeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.FormulaRangeAttr))})
	}
	if _bfced.UnlockedFormulaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.UnlockedFormulaAttr))})
	}
	if _bfced.EmptyCellReferenceAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.EmptyCellReferenceAttr))})
	}
	if _bfced.ListDataValidationAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.ListDataValidationAttr))})
	}
	if _bfced.CalculatedColumnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bfced.CalculatedColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_DeletedField struct {

	// Deleted Fields Name
	NameAttr string
}

func (_eccdf *CT_VolTopicRef) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", _eccdf.RAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0076", _eccdf.SAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Fonts and its children
func (_cbfag *CT_Fonts) Validate() error {
	return _cbfag.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073")
}

func (_bbefc ST_IconSetType) ValidateWithPath(path string) error {
	switch _bbefc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbefc))
	}
	return nil
}

type CT_ConditionalFormat struct {

	// Conditional Formatting Scope
	ScopeAttr ST_Scope

	// Conditional Formatting Rule Type
	TypeAttr ST_Type

	// Priority
	PriorityAttr uint32

	// Pivot Areas
	PivotAreas *CT_PivotAreas
	ExtLst     *CT_ExtensionList
}

func NewCT_ChartsheetViews() *CT_ChartsheetViews { _dddea := &CT_ChartsheetViews{}; return _dddea }

func (_gcb *CT_Authors) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_ddb:
	for {
		_cae, _de := d.Token()
		if _de != nil {
			return _de
		}
		switch _ac := _cae.(type) {
		case _gd.StartElement:
			switch _ac.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}:
				var _dce string
				if _cg := d.DecodeElement(&_dce, &_ac); _cg != nil {
					return _cg
				}
				_gcb.Author = append(_gcb.Author, _dce)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0074\u0068\u006f\u0072\u0073\u0020\u0025\u0076", _ac.Name)
				if _eb := d.Skip(); _eb != nil {
					return _eb
				}
			}
		case _gd.EndElement:
			break _ddb
		case _gd.CharData:
		}
	}
	return nil
}

func (_cddaea ST_DataConsolidateFunction) ValidateWithPath(path string) error {
	switch _cddaea {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cddaea))
	}
	return nil
}

// Validate validates the CT_MemberProperties and its children
func (_bcefa *CT_MemberProperties) Validate() error {
	return _bcefa.ValidateWithPath("\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_ggdaf *CT_XmlColumnPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dbabf := range start.Attr {
		if _dbabf.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_daaegg, _bbfggd := _a.ParseUint(_dbabf.Value, 10, 32)
			if _bbfggd != nil {
				return _bbfggd
			}
			_ggdaf.MapIdAttr = uint32(_daaegg)
			continue
		}
		if _dbabf.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_daece, _aeaec := _dbabf.Value, error(nil)
			if _aeaec != nil {
				return _aeaec
			}
			_ggdaf.XpathAttr = _daece
			continue
		}
		if _dbabf.Name.Local == "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064" {
			_ggffa, _fagfc := _a.ParseBool(_dbabf.Value)
			if _fagfc != nil {
				return _fagfc
			}
			_ggdaf.DenormalizedAttr = &_ggffa
			continue
		}
		if _dbabf.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_gbgcg, _aggbga := _dbabf.Value, error(nil)
			if _aggbga != nil {
				return _aggbga
			}
			_ggdaf.XmlDataTypeAttr = _gbgcg
			continue
		}
	}
_egfgd:
	for {
		_fdaafcf, _begec := d.Token()
		if _begec != nil {
			return _begec
		}
		switch _baedf := _fdaafcf.(type) {
		case _gd.StartElement:
			switch _baedf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggdaf.ExtLst = NewCT_ExtensionList()
				if _fbddd := d.DecodeElement(_ggdaf.ExtLst, &_baedf); _fbddd != nil {
					return _fbddd
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006c\u0075m\u006eP\u0072\u0020\u0025\u0076", _baedf.Name)
				if _bebeg := d.Skip(); _bebeg != nil {
					return _bebeg
				}
			}
		case _gd.EndElement:
			break _egfgd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_ColorFilter() *CT_ColorFilter { _fdbd := &CT_ColorFilter{}; return _fdbd }

type QueryTable struct{ CT_QueryTable }

func (_egfac *CT_SheetBackgroundPicture) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _adefa := range start.Attr {
		if _adefa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _adefa.Name.Local == "\u0069\u0064" || _adefa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _adefa.Name.Local == "\u0069\u0064" {
			_ggcfg, _abffd := _adefa.Value, error(nil)
			if _abffd != nil {
				return _abffd
			}
			_egfac.IdAttr = _ggcfg
			continue
		}
	}
	for {
		_ecdgc, _gfbee := d.Token()
		if _gfbee != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0042\u0061\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0069\u0063\u0074\u0075\u0072e\u003a\u0020\u0025\u0073", _gfbee)
		}
		if _gaaae, _cfcdea := _ecdgc.(_gd.EndElement); _cfcdea && _gaaae.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_RowFields() *CT_RowFields { _dcbge := &CT_RowFields{}; return _dcbge }

func (_ceacb *ST_CellFormulaType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fgeeg, _bdbfc := d.Token()
	if _bdbfc != nil {
		return _bdbfc
	}
	if _dfdad, _bbcgba := _fgeeg.(_gd.EndElement); _bbcgba && _dfdad.Name == start.Name {
		*_ceacb = 1
		return nil
	}
	if _fffgaa, _aafdcd := _fgeeg.(_gd.CharData); !_aafdcd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgeeg)
	} else {
		switch string(_fffgaa) {
		case "":
			*_ceacb = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_ceacb = 1
		case "\u0061\u0072\u0072a\u0079":
			*_ceacb = 2
		case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
			*_ceacb = 3
		case "\u0073\u0068\u0061\u0072\u0065\u0064":
			*_ceacb = 4
		}
	}
	_fgeeg, _bdbfc = d.Token()
	if _bdbfc != nil {
		return _bdbfc
	}
	if _acacfb, _fbedg := _fgeeg.(_gd.EndElement); _fbedg && _acacfb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgeeg)
}

// Validate validates the Revisions and its children
func (_ggbdb *Revisions) Validate() error {
	return _ggbdb.ValidateWithPath("\u0052e\u0076\u0069\u0073\u0069\u006f\u006es")
}

func (_ecbgac *CT_XmlPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ecbgac.MapIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _b.Sprintf("\u0025\u0076", _ecbgac.XpathAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ecbgac.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _ecbgac.ExtLst != nil {
		_gcebe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ecbgac.ExtLst, _gcebe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Format and its children
func (_bbdbd *CT_Format) Validate() error {
	return _bbdbd.ValidateWithPath("\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t")
}

func (_cde *CT_CellStyleXfs) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cde.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cde.CountAttr)})
	}
	e.EncodeToken(start)
	_eagb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _cecb := range _cde.Xf {
		e.EncodeElement(_cecb, _eagb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dcdeab ST_FormulaExpression) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dcfge := _gd.Attr{}
	_dcfge.Name = name
	switch _dcdeab {
	case ST_FormulaExpressionUnset:
		_dcfge.Value = ""
	case ST_FormulaExpressionRef:
		_dcfge.Value = "\u0072\u0065\u0066"
	case ST_FormulaExpressionRefError:
		_dcfge.Value = "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case ST_FormulaExpressionArea:
		_dcfge.Value = "\u0061\u0072\u0065\u0061"
	case ST_FormulaExpressionAreaError:
		_dcfge.Value = "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case ST_FormulaExpressionComputedArea:
		_dcfge.Value = "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return _dcfge, nil
}

func (_dedf *CT_Metadata) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _dedf.MetadataTypes != nil {
		_abbee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_dedf.MetadataTypes, _abbee)
	}
	if _dedf.MetadataStrings != nil {
		_febde := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073"}}
		e.EncodeElement(_dedf.MetadataStrings, _febde)
	}
	if _dedf.MdxMetadata != nil {
		_edafa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_dedf.MdxMetadata, _edafa)
	}
	if _dedf.FutureMetadata != nil {
		_fecad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		for _, _ebca := range _dedf.FutureMetadata {
			e.EncodeElement(_ebca, _fecad)
		}
	}
	if _dedf.CellMetadata != nil {
		_gfgab := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_dedf.CellMetadata, _gfgab)
	}
	if _dedf.ValueMetadata != nil {
		_fbadf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0076\u0061\u006cu\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_dedf.ValueMetadata, _fbadf)
	}
	if _dedf.ExtLst != nil {
		_ddda := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dedf.ExtLst, _ddda)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_Pane byte

// Validate validates the CT_Controls and its children
func (_adfe *CT_Controls) Validate() error {
	return _adfe.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073")
}

func (_aecdee ST_GradientType) Validate() error { return _aecdee.ValidateWithPath("") }

func (_effaf ST_TextVAlign) String() string {
	switch _effaf {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

func (_badag *CT_FontFamily) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _badag.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ccag *CT_ChartsheetProtection) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bgcd := range start.Attr {
		if _bgcd.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_gfcg, _cafdf := _bgcd.Value, error(nil)
			if _cafdf != nil {
				return _cafdf
			}
			_ccag.PasswordAttr = &_gfcg
			continue
		}
		if _bgcd.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_gefcg, _cdae := _bgcd.Value, error(nil)
			if _cdae != nil {
				return _cdae
			}
			_ccag.AlgorithmNameAttr = &_gefcg
			continue
		}
		if _bgcd.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_febg, _efccd := _bgcd.Value, error(nil)
			if _efccd != nil {
				return _efccd
			}
			_ccag.HashValueAttr = &_febg
			continue
		}
		if _bgcd.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_gggb, _afedc := _bgcd.Value, error(nil)
			if _afedc != nil {
				return _afedc
			}
			_ccag.SaltValueAttr = &_gggb
			continue
		}
		if _bgcd.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_ccaaf, _cgdd := _a.ParseUint(_bgcd.Value, 10, 32)
			if _cgdd != nil {
				return _cgdd
			}
			_eecd := uint32(_ccaaf)
			_ccag.SpinCountAttr = &_eecd
			continue
		}
		if _bgcd.Name.Local == "\u0063o\u006e\u0074\u0065\u006e\u0074" {
			_bbag, _cbaa := _a.ParseBool(_bgcd.Value)
			if _cbaa != nil {
				return _cbaa
			}
			_ccag.ContentAttr = &_bbag
			continue
		}
		if _bgcd.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_bbfbb, _bebe := _a.ParseBool(_bgcd.Value)
			if _bebe != nil {
				return _bebe
			}
			_ccag.ObjectsAttr = &_bbfbb
			continue
		}
	}
	for {
		_dfcc, _aaef := d.Token()
		if _aaef != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _aaef)
		}
		if _abfc, _bffa := _dfcc.(_gd.EndElement); _bffa && _abfc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfgafd ST_WebSourceType) ValidateWithPath(path string) error {
	switch _dfgafd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfgafd))
	}
	return nil
}

// ValidateWithPath validates the CT_CellSmartTags and its children, prefixing error messages with path
func (_bdbb *CT_CellSmartTags) ValidateWithPath(path string) error {
	for _cbcf, _agac := range _bdbb.CellSmartTag {
		if _bbb := _agac.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043el\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _cbcf)); _bbb != nil {
			return _bbb
		}
	}
	return nil
}

func (_ccggeg ST_DynamicFilterType) Validate() error { return _ccggeg.ValidateWithPath("") }

func (_cfcaga *CT_SortState) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bffcbc := range start.Attr {
		if _bffcbc.Name.Local == "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074" {
			_cfbcf, _gbbec := _a.ParseBool(_bffcbc.Value)
			if _gbbec != nil {
				return _gbbec
			}
			_cfcaga.ColumnSortAttr = &_cfbcf
			continue
		}
		if _bffcbc.Name.Local == "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065" {
			_addegb, _dgac := _a.ParseBool(_bffcbc.Value)
			if _dgac != nil {
				return _dgac
			}
			_cfcaga.CaseSensitiveAttr = &_addegb
			continue
		}
		if _bffcbc.Name.Local == "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064" {
			_cfcaga.SortMethodAttr.UnmarshalXMLAttr(_bffcbc)
			continue
		}
		if _bffcbc.Name.Local == "\u0072\u0065\u0066" {
			_fefeg, _ddbfaf := _bffcbc.Value, error(nil)
			if _ddbfaf != nil {
				return _ddbfaf
			}
			_cfcaga.RefAttr = _fefeg
			continue
		}
	}
_ddgdg:
	for {
		_fedde, _fegcb := d.Token()
		if _fegcb != nil {
			return _fegcb
		}
		switch _eaaed := _fedde.(type) {
		case _gd.StartElement:
			switch _eaaed.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}:
				_eeadb := NewCT_SortCondition()
				if _abcga := d.DecodeElement(_eeadb, &_eaaed); _abcga != nil {
					return _abcga
				}
				_cfcaga.SortCondition = append(_cfcaga.SortCondition, _eeadb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfcaga.ExtLst = NewCT_ExtensionList()
				if _fbfbg := d.DecodeElement(_cfcaga.ExtLst, &_eaaed); _fbfbg != nil {
					return _fbfbg
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006f\u0072t\u0053\u0074\u0061\u0074\u0065\u0020\u0025\u0076", _eaaed.Name)
				if _bcbbdf := d.Skip(); _bcbbdf != nil {
					return _bcbbdf
				}
			}
		case _gd.EndElement:
			break _ddgdg
		case _gd.CharData:
		}
	}
	return nil
}

func (_cdfbf ST_GroupBy) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_cdfbf.String(), start)
}

func (_ccecfab *ST_PivotAreaType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_ccecfab = 0
	case "\u006e\u006f\u006e\u0065":
		*_ccecfab = 1
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_ccecfab = 2
	case "\u0064\u0061\u0074\u0061":
		*_ccecfab = 3
	case "\u0061\u006c\u006c":
		*_ccecfab = 4
	case "\u006f\u0072\u0069\u0067\u0069\u006e":
		*_ccecfab = 5
	case "\u0062\u0075\u0074\u0074\u006f\u006e":
		*_ccecfab = 6
	case "\u0074\u006f\u0070\u0045\u006e\u0064":
		*_ccecfab = 7
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_ccecfab = 8
	}
	return nil
}

func (_cdgga *CT_TableFormula) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cgagd := range start.Attr {
		if _cgagd.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_bcdcb, _ccaba := _a.ParseBool(_cgagd.Value)
			if _ccaba != nil {
				return _ccaba
			}
			_cdgga.ArrayAttr = _bcdcb
			continue
		}
	}
	for {
		_gcgeg, _cbaca := d.Token()
		if _cbaca != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0046o\u0072\u006d\u0075l\u0061:\u0020\u0025\u0073", _cbaca)
		}
		if _aagabb, _gfaeb := _gcgeg.(_gd.CharData); _gfaeb {
			_cdgga.Content = string(_aagabb)
		}
		if _faagcc, _egafg := _gcgeg.(_gd.EndElement); _egafg && _faagcc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WorkbookProtection and its children, prefixing error messages with path
func (_gabed *CT_WorkbookProtection) ValidateWithPath(path string) error { return nil }

func (_dgaccg *ST_Comments) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dgaccg = 0
	case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
		*_dgaccg = 1
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_dgaccg = 2
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
		*_dgaccg = 3
	}
	return nil
}

func (_dacfg *CT_DdeLink) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065"}, Value: _b.Sprintf("\u0025\u0076", _dacfg.DdeServiceAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063"}, Value: _b.Sprintf("\u0025\u0076", _dacfg.DdeTopicAttr)})
	e.EncodeToken(start)
	if _dacfg.DdeItems != nil {
		_becac := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_dacfg.DdeItems, _becac)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Schema struct {

	// Schema ID
	IDAttr string

	// Schema Reference
	SchemaRefAttr *string

	// Schema Root Namespace
	NamespaceAttr *string

	// Schema Language
	SchemaLanguageAttr *string
	Any                _e.Any
}

func NewCT_Record() *CT_Record { _dccfd := &CT_Record{}; return _dccfd }

func (_dcccb *ST_CredMethod) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gfcgg, _ccgfe := d.Token()
	if _ccgfe != nil {
		return _ccgfe
	}
	if _eafee, _gfeecb := _gfcgg.(_gd.EndElement); _gfeecb && _eafee.Name == start.Name {
		*_dcccb = 1
		return nil
	}
	if _abggbf, _bacecd := _gfcgg.(_gd.CharData); !_bacecd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfcgg)
	} else {
		switch string(_abggbf) {
		case "":
			*_dcccb = 0
		case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
			*_dcccb = 1
		case "\u006e\u006f\u006e\u0065":
			*_dcccb = 2
		case "\u0073\u0074\u006f\u0072\u0065\u0064":
			*_dcccb = 3
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_dcccb = 4
		}
	}
	_gfcgg, _ccgfe = d.Token()
	if _ccgfe != nil {
		return _ccgfe
	}
	if _efbbgb, _gfddd := _gfcgg.(_gd.EndElement); _gfddd && _efbbgb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfcgg)
}

func (_cgccae *CT_PCDSCPage) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cgccae.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cgccae.CountAttr)})
	}
	e.EncodeToken(start)
	if _cgccae.PageItem != nil {
		_aggcd := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}}
		for _, _cbgde := range _cgccae.PageItem {
			e.EncodeElement(_cbgde, _aggcd)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cddbf ST_PhoneticType) Validate() error { return _cddbf.ValidateWithPath("") }

func (_gfaefa *CT_TableStyleInfo) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gaaabf := range start.Attr {
		if _gaaabf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gabgd, _ggddb := _gaaabf.Value, error(nil)
			if _ggddb != nil {
				return _ggddb
			}
			_gfaefa.NameAttr = &_gabgd
			continue
		}
		if _gaaabf.Name.Local == "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e" {
			_dadb, _dafdgf := _a.ParseBool(_gaaabf.Value)
			if _dafdgf != nil {
				return _dafdgf
			}
			_gfaefa.ShowFirstColumnAttr = &_dadb
			continue
		}
		if _gaaabf.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_bafcf, _acbab := _a.ParseBool(_gaaabf.Value)
			if _acbab != nil {
				return _acbab
			}
			_gfaefa.ShowLastColumnAttr = &_bafcf
			continue
		}
		if _gaaabf.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_ebebac, _gffge := _a.ParseBool(_gaaabf.Value)
			if _gffge != nil {
				return _gffge
			}
			_gfaefa.ShowRowStripesAttr = &_ebebac
			continue
		}
		if _gaaabf.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_befegb, _ffcgff := _a.ParseBool(_gaaabf.Value)
			if _ffcgff != nil {
				return _ffcgff
			}
			_gfaefa.ShowColumnStripesAttr = &_befegb
			continue
		}
	}
	for {
		_dggea, _ebebdf := d.Token()
		if _ebebdf != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f: \u0025\u0073", _ebebdf)
		}
		if _ffbff, _fcbdga := _dggea.(_gd.EndElement); _fcbdga && _ffbff.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_X() *CT_X { _cdaeb := &CT_X{}; return _cdaeb }

// ValidateWithPath validates the CT_XStringElement and its children, prefixing error messages with path
func (_aabab *CT_XStringElement) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PivotFilter and its children
func (_gaff *CT_PivotFilter) Validate() error {
	return _gaff.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072")
}

func (_ecgdb ST_FileType) ValidateWithPath(path string) error {
	switch _ecgdb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecgdb))
	}
	return nil
}

func (_ebgb *CT_DataConsolidate) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _baada := range start.Attr {
		if _baada.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_ebgb.FunctionAttr.UnmarshalXMLAttr(_baada)
			continue
		}
		if _baada.Name.Local == "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_fgfeb, _dabbd := _a.ParseBool(_baada.Value)
			if _dabbd != nil {
				return _dabbd
			}
			_ebgb.StartLabelsAttr = &_fgfeb
			continue
		}
		if _baada.Name.Local == "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_accgf, _gfgff := _a.ParseBool(_baada.Value)
			if _gfgff != nil {
				return _gfgff
			}
			_ebgb.LeftLabelsAttr = &_accgf
			continue
		}
		if _baada.Name.Local == "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs" {
			_bcea, _dbbc := _a.ParseBool(_baada.Value)
			if _dbbc != nil {
				return _dbbc
			}
			_ebgb.TopLabelsAttr = &_bcea
			continue
		}
		if _baada.Name.Local == "\u006c\u0069\u006e\u006b" {
			_fbfcb, _baaf := _a.ParseBool(_baada.Value)
			if _baaf != nil {
				return _baaf
			}
			_ebgb.LinkAttr = &_fbfcb
			continue
		}
	}
_fgge:
	for {
		_gaaf, _ebgg := d.Token()
		if _ebgg != nil {
			return _ebgg
		}
		switch _ceed := _gaaf.(type) {
		case _gd.StartElement:
			switch _ceed.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}:
				_ebgb.DataRefs = NewCT_DataRefs()
				if _dbecf := d.DecodeElement(_ebgb.DataRefs, &_ceed); _dbecf != nil {
					return _dbecf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0043\u006fn\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065\u0020\u0025\u0076", _ceed.Name)
				if _fegbe := d.Skip(); _fegbe != nil {
					return _fegbe
				}
			}
		case _gd.EndElement:
			break _fgge
		case _gd.CharData:
		}
	}
	return nil
}

func (_dgaabd *CT_OleItem) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _acffef := range start.Attr {
		if _acffef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efece, _aedae := _acffef.Value, error(nil)
			if _aedae != nil {
				return _aedae
			}
			_dgaabd.NameAttr = _efece
			continue
		}
		if _acffef.Name.Local == "\u0069\u0063\u006f\u006e" {
			_dadge, _befcag := _a.ParseBool(_acffef.Value)
			if _befcag != nil {
				return _befcag
			}
			_dgaabd.IconAttr = &_dadge
			continue
		}
		if _acffef.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_gaccb, _gbgab := _a.ParseBool(_acffef.Value)
			if _gbgab != nil {
				return _gbgab
			}
			_dgaabd.AdviseAttr = &_gaccb
			continue
		}
		if _acffef.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_fgbedd, _befbe := _a.ParseBool(_acffef.Value)
			if _befbe != nil {
				return _befbe
			}
			_dgaabd.PreferPicAttr = &_fgbedd
			continue
		}
	}
	for {
		_aafga, _ccdcaa := d.Token()
		if _ccdcaa != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u003a\u0020%\u0073", _ccdcaa)
		}
		if _ffaab, _badggc := _aafga.(_gd.EndElement); _badggc && _ffaab.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_FieldGroup() *CT_FieldGroup { _efde := &CT_FieldGroup{}; return _efde }

func (_gcdd *CT_CellAlignment) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gcdd.HorizontalAttr != ST_HorizontalAlignmentUnset {
		_ggbf, _egge := _gcdd.HorizontalAttr.MarshalXMLAttr(_gd.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"})
		if _egge != nil {
			return _egge
		}
		start.Attr = append(start.Attr, _ggbf)
	}
	if _gcdd.VerticalAttr != ST_VerticalAlignmentUnset {
		_abgb, _acab := _gcdd.VerticalAttr.MarshalXMLAttr(_gd.Name{Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"})
		if _acab != nil {
			return _acab
		}
		start.Attr = append(start.Attr, _abgb)
	}
	if _gcdd.TextRotationAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_gcdd.TextRotationAttr)})
	}
	if _gcdd.WrapTextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gcdd.WrapTextAttr))})
	}
	if _gcdd.IndentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gcdd.IndentAttr)})
	}
	if _gcdd.RelativeIndentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gcdd.RelativeIndentAttr)})
	}
	if _gcdd.JustifyLastLineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gcdd.JustifyLastLineAttr))})
	}
	if _gcdd.ShrinkToFitAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gcdd.ShrinkToFitAttr))})
	}
	if _gcdd.ReadingOrderAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_gcdd.ReadingOrderAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SourceTypeUnset         ST_SourceType = 0
	ST_SourceTypeWorksheet     ST_SourceType = 1
	ST_SourceTypeExternal      ST_SourceType = 2
	ST_SourceTypeConsolidation ST_SourceType = 3
	ST_SourceTypeScenario      ST_SourceType = 4
)

func NewCT_Cfvo() *CT_Cfvo { _bgaf := &CT_Cfvo{}; _bgaf.TypeAttr = ST_CfvoType(1); return _bgaf }

type CT_CustomSheetViews struct {

	// Custom Sheet View
	CustomSheetView []*CT_CustomSheetView
}

func (_fcbef ST_FormatAction) String() string {
	switch _fcbef {
	case 0:
		return ""
	case 1:
		return "\u0062\u006c\u0061n\u006b"
	case 2:
		return "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case 3:
		return "\u0064\u0072\u0069l\u006c"
	case 4:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return ""
}

type ST_FileType byte

// Validate validates the CT_Location and its children
func (_egac *CT_Location) Validate() error {
	return _egac.ValidateWithPath("C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e")
}

type CT_Parameters struct {

	// Parameter Count
	CountAttr *uint32

	// Parameter Properties
	Parameter []*CT_Parameter
}

func (_fgfg *CT_CellFormula) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cadeg := range start.Attr {
		if _cadeg.Name.Local == "\u0074" {
			_fgfg.TAttr.UnmarshalXMLAttr(_cadeg)
			continue
		}
		if _cadeg.Name.Local == "\u0061\u0063\u0061" {
			_cgba, _faaff := _a.ParseBool(_cadeg.Value)
			if _faaff != nil {
				return _faaff
			}
			_fgfg.AcaAttr = &_cgba
			continue
		}
		if _cadeg.Name.Local == "\u0072\u0065\u0066" {
			_ffe, _bcba := _cadeg.Value, error(nil)
			if _bcba != nil {
				return _bcba
			}
			_fgfg.RefAttr = &_ffe
			continue
		}
		if _cadeg.Name.Local == "\u0064\u0074\u0032\u0044" {
			_gcaaa, _ecefd := _a.ParseBool(_cadeg.Value)
			if _ecefd != nil {
				return _ecefd
			}
			_fgfg.Dt2DAttr = &_gcaaa
			continue
		}
		if _cadeg.Name.Local == "\u0064\u0074\u0072" {
			_bccd, _bgfda := _a.ParseBool(_cadeg.Value)
			if _bgfda != nil {
				return _bgfda
			}
			_fgfg.DtrAttr = &_bccd
			continue
		}
		if _cadeg.Name.Local == "\u0064\u0065\u006c\u0031" {
			_abgf, _dbfa := _a.ParseBool(_cadeg.Value)
			if _dbfa != nil {
				return _dbfa
			}
			_fgfg.Del1Attr = &_abgf
			continue
		}
		if _cadeg.Name.Local == "\u0064\u0065\u006c\u0032" {
			_abee, _cgbfa := _a.ParseBool(_cadeg.Value)
			if _cgbfa != nil {
				return _cgbfa
			}
			_fgfg.Del2Attr = &_abee
			continue
		}
		if _cadeg.Name.Local == "\u0072\u0031" {
			_edda, _fgcf := _cadeg.Value, error(nil)
			if _fgcf != nil {
				return _fgcf
			}
			_fgfg.R1Attr = &_edda
			continue
		}
		if _cadeg.Name.Local == "\u0072\u0032" {
			_dgefe, _bdd := _cadeg.Value, error(nil)
			if _bdd != nil {
				return _bdd
			}
			_fgfg.R2Attr = &_dgefe
			continue
		}
		if _cadeg.Name.Local == "\u0063\u0061" {
			_eccg, _cfgfc := _a.ParseBool(_cadeg.Value)
			if _cfgfc != nil {
				return _cfgfc
			}
			_fgfg.CaAttr = &_eccg
			continue
		}
		if _cadeg.Name.Local == "\u0073\u0069" {
			_fccfb, _ggc := _a.ParseUint(_cadeg.Value, 10, 32)
			if _ggc != nil {
				return _ggc
			}
			_ddef := uint32(_fccfb)
			_fgfg.SiAttr = &_ddef
			continue
		}
		if _cadeg.Name.Local == "\u0062\u0078" {
			_dbef, _ddd := _a.ParseBool(_cadeg.Value)
			if _ddd != nil {
				return _ddd
			}
			_fgfg.BxAttr = &_dbef
			continue
		}
	}
	for {
		_dgaaa, _gcba := d.Token()
		if _gcba != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0046\u006f\u0072\u006d\u0075\u006c\u0061:\u0020\u0025\u0073", _gcba)
		}
		if _afec, _fffd := _dgaaa.(_gd.CharData); _fffd {
			_fgfg.Content = string(_afec)
		}
		if _befc, _egff := _dgaaa.(_gd.EndElement); _egff && _befc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gfgdgg *CT_Sst) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bggd := range start.Attr {
		if _bggd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cebag, _aaeaa := _a.ParseUint(_bggd.Value, 10, 32)
			if _aaeaa != nil {
				return _aaeaa
			}
			_geaca := uint32(_cebag)
			_gfgdgg.CountAttr = &_geaca
			continue
		}
		if _bggd.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_ecdfe, _geadf := _a.ParseUint(_bggd.Value, 10, 32)
			if _geadf != nil {
				return _geadf
			}
			_bbdce := uint32(_ecdfe)
			_gfgdgg.UniqueCountAttr = &_bbdce
			continue
		}
	}
_cfbcc:
	for {
		_aefgg, _fddge := d.Token()
		if _fddge != nil {
			return _fddge
		}
		switch _ecadb := _aefgg.(type) {
		case _gd.StartElement:
			switch _ecadb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_ggabg := NewCT_Rst()
				if _fbgag := d.DecodeElement(_ggabg, &_ecadb); _fbgag != nil {
					return _fbgag
				}
				_gfgdgg.Si = append(_gfgdgg.Si, _ggabg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfgdgg.ExtLst = NewCT_ExtensionList()
				if _fgggc := d.DecodeElement(_gfgdgg.ExtLst, &_ecadb); _fgggc != nil {
					return _fgggc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0073\u0074\u0020\u0025\u0076", _ecadb.Name)
				if _gbafe := d.Skip(); _gbafe != nil {
					return _gbafe
				}
			}
		case _gd.EndElement:
			break _cfbcc
		case _gd.CharData:
		}
	}
	return nil
}

func (_bgf *CT_Authors) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _bgf.Author != nil {
		_fcb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0061\u0075\u0074\u0068\u006fr"}}
		for _, _ab := range _bgf.Author {
			e.EncodeElement(_ab, _fcb)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PCDKPI and its children, prefixing error messages with path
func (_cfaba *CT_PCDKPI) ValidateWithPath(path string) error { return nil }

func NewCT_MeasureGroup() *CT_MeasureGroup { _cfbefe := &CT_MeasureGroup{}; return _cfbefe }

const (
	ST_TotalsRowFunctionUnset     ST_TotalsRowFunction = 0
	ST_TotalsRowFunctionNone      ST_TotalsRowFunction = 1
	ST_TotalsRowFunctionSum       ST_TotalsRowFunction = 2
	ST_TotalsRowFunctionMin       ST_TotalsRowFunction = 3
	ST_TotalsRowFunctionMax       ST_TotalsRowFunction = 4
	ST_TotalsRowFunctionAverage   ST_TotalsRowFunction = 5
	ST_TotalsRowFunctionCount     ST_TotalsRowFunction = 6
	ST_TotalsRowFunctionCountNums ST_TotalsRowFunction = 7
	ST_TotalsRowFunctionStdDev    ST_TotalsRowFunction = 8
	ST_TotalsRowFunctionVar       ST_TotalsRowFunction = 9
	ST_TotalsRowFunctionCustom    ST_TotalsRowFunction = 10
)

func (_fbafg ST_CalcMode) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_edfcba := _gd.Attr{}
	_edfcba.Name = name
	switch _fbafg {
	case ST_CalcModeUnset:
		_edfcba.Value = ""
	case ST_CalcModeManual:
		_edfcba.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_CalcModeAuto:
		_edfcba.Value = "\u0061\u0075\u0074\u006f"
	case ST_CalcModeAutoNoTable:
		_edfcba.Value = "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return _edfcba, nil
}

func (_bdccb *CT_RevisionMove) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bdccb.SheetIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bdccb.SourceAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", _bdccb.DestinationAttr)})
	if _bdccb.SourceSheetIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bdccb.SourceSheetIdAttr)})
	}
	if _bdccb.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bdccb.RIdAttr)})
	}
	if _bdccb.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdccb.UaAttr))})
	}
	if _bdccb.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdccb.RaAttr))})
	}
	e.EncodeToken(start)
	if _bdccb.Undo != nil {
		_adceg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _gecbg := range _bdccb.Undo {
			e.EncodeElement(_gecbg, _adceg)
		}
	}
	if _bdccb.Rcc != nil {
		_baabcf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _agabb := range _bdccb.Rcc {
			e.EncodeElement(_agabb, _baabcf)
		}
	}
	if _bdccb.Rfmt != nil {
		_agcce := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _ddagb := range _bdccb.Rfmt {
			e.EncodeElement(_ddagb, _agcce)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_beaed *ST_FilterOperator) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_beaed = 0
	case "\u0065\u0071\u0075a\u006c":
		*_beaed = 1
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_beaed = 2
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_beaed = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_beaed = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_beaed = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_beaed = 6
	}
	return nil
}

const (
	ST_SmartTagShowUnset       ST_SmartTagShow = 0
	ST_SmartTagShowAll         ST_SmartTagShow = 1
	ST_SmartTagShowNone        ST_SmartTagShow = 2
	ST_SmartTagShowNoIndicator ST_SmartTagShow = 3
)

func (_egaaf *CT_Item) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _acdeb := range start.Attr {
		if _acdeb.Name.Local == "\u006e" {
			_eeeea, _ageed := _acdeb.Value, error(nil)
			if _ageed != nil {
				return _ageed
			}
			_egaaf.NAttr = &_eeeea
			continue
		}
		if _acdeb.Name.Local == "\u0074" {
			_egaaf.TAttr.UnmarshalXMLAttr(_acdeb)
			continue
		}
		if _acdeb.Name.Local == "\u0068" {
			_eaaafe, _cffcdd := _a.ParseBool(_acdeb.Value)
			if _cffcdd != nil {
				return _cffcdd
			}
			_egaaf.HAttr = &_eaaafe
			continue
		}
		if _acdeb.Name.Local == "\u0073" {
			_gbaba, _bggb := _a.ParseBool(_acdeb.Value)
			if _bggb != nil {
				return _bggb
			}
			_egaaf.SAttr = &_gbaba
			continue
		}
		if _acdeb.Name.Local == "\u0073\u0064" {
			_dbegf, _dfcfe := _a.ParseBool(_acdeb.Value)
			if _dfcfe != nil {
				return _dfcfe
			}
			_egaaf.SdAttr = &_dbegf
			continue
		}
		if _acdeb.Name.Local == "\u0066" {
			_cbfdf, _aedcaf := _a.ParseBool(_acdeb.Value)
			if _aedcaf != nil {
				return _aedcaf
			}
			_egaaf.FAttr = &_cbfdf
			continue
		}
		if _acdeb.Name.Local == "\u006d" {
			_bcegda, _debgd := _a.ParseBool(_acdeb.Value)
			if _debgd != nil {
				return _debgd
			}
			_egaaf.MAttr = &_bcegda
			continue
		}
		if _acdeb.Name.Local == "\u0063" {
			_bfbead, _eabbe := _a.ParseBool(_acdeb.Value)
			if _eabbe != nil {
				return _eabbe
			}
			_egaaf.CAttr = &_bfbead
			continue
		}
		if _acdeb.Name.Local == "\u0078" {
			_ddgcc, _fadb := _a.ParseUint(_acdeb.Value, 10, 32)
			if _fadb != nil {
				return _fadb
			}
			_ggbaa := uint32(_ddgcc)
			_egaaf.XAttr = &_ggbaa
			continue
		}
		if _acdeb.Name.Local == "\u0064" {
			_ecddf, _eefd := _a.ParseBool(_acdeb.Value)
			if _eefd != nil {
				return _eefd
			}
			_egaaf.DAttr = &_ecddf
			continue
		}
		if _acdeb.Name.Local == "\u0065" {
			_eedb, _fecbf := _a.ParseBool(_acdeb.Value)
			if _fecbf != nil {
				return _fecbf
			}
			_egaaf.EAttr = &_eedb
			continue
		}
	}
	for {
		_bacbd, _fggdc := d.Token()
		if _fggdc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _fggdc)
		}
		if _baef, _fegfb := _bacbd.(_gd.EndElement); _fegfb && _baef.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Formats() *CT_Formats { _cffbda := &CT_Formats{}; return _cffbda }

func NewCT_PivotCaches() *CT_PivotCaches { _bffbd := &CT_PivotCaches{}; return _bffbd }

func (_aecdga *Chartsheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074"
	return _aecdga.CT_Chartsheet.MarshalXML(e, start)
}

type CT_Connection struct {

	// Connection Id
	IdAttr uint32

	// Source Database File
	SourceFileAttr *string

	// Connection File
	OdcFileAttr *string

	// Keep Connection Open
	KeepAliveAttr *bool

	// Automatic Refresh Interval
	IntervalAttr *uint32

	// Connection Name
	NameAttr *string

	// Connection Description
	DescriptionAttr *string

	// Database Source Type
	TypeAttr *uint32

	// Reconnection Method
	ReconnectionMethodAttr *uint32

	// Last Refresh Version
	RefreshedVersionAttr uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// Save Password
	SavePasswordAttr *bool

	// New Connection
	NewAttr *bool

	// Deleted Connection
	DeletedAttr *bool

	// Only Use Connection File
	OnlyUseConnectionFileAttr *bool

	// Background Refresh
	BackgroundAttr *bool

	// Refresh on Open
	RefreshOnLoadAttr *bool

	// Save Data
	SaveDataAttr *bool

	// Reconnection Method
	CredentialsAttr ST_CredMethod

	// SSO Id
	SingleSignOnIdAttr *string

	// Database Properties
	DbPr *CT_DbPr

	// OLAP Properties
	OlapPr *CT_OlapPr

	// Web Query Properties
	WebPr *CT_WebPr

	// Text Import Settings
	TextPr *CT_TextPr

	// Query Parameters
	Parameters *CT_Parameters

	// Future Feature Data Storage
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Items and its children
func (_ecgbb *CT_Items) Validate() error {
	return _ecgbb.ValidateWithPath("\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073")
}

type CT_RevisionHeaders struct {

	// Last Revision GUID
	GuidAttr string

	// Last GUID
	LastGuidAttr *string

	// Shared Workbook
	SharedAttr *bool

	// Disk Revisions
	DiskRevisionsAttr *bool

	// History
	HistoryAttr *bool

	// Track Revisions
	TrackRevisionsAttr *bool

	// Exclusive Mode
	ExclusiveAttr *bool

	// Revision Id
	RevisionIdAttr *uint32

	// Version
	VersionAttr *int32

	// Keep Change History
	KeepChangeHistoryAttr *bool

	// Protected
	ProtectedAttr *bool

	// Preserve History
	PreserveHistoryAttr *uint32

	// Header
	Header []*CT_RevisionHeader
}

func NewCT_CellWatches() *CT_CellWatches { _gaec := &CT_CellWatches{}; return _gaec }

func (_fcaa *CT_CacheFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cead := range start.Attr {
		if _cead.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggec, _fgbb := _a.ParseUint(_cead.Value, 10, 32)
			if _fgbb != nil {
				return _fgbb
			}
			_beaf := uint32(_ggec)
			_fcaa.CountAttr = &_beaf
			continue
		}
	}
_becde:
	for {
		_gce, _ddcf := d.Token()
		if _ddcf != nil {
			return _ddcf
		}
		switch _fffb := _gce.(type) {
		case _gd.StartElement:
			switch _fffb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_dag := NewCT_CacheField()
				if _cfb := d.DecodeElement(_dag, &_fffb); _cfb != nil {
					return _cfb
				}
				_fcaa.CacheField = append(_fcaa.CacheField, _dag)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _fffb.Name)
				if _fggc := d.Skip(); _fggc != nil {
					return _fggc
				}
			}
		case _gd.EndElement:
			break _becde
		case _gd.CharData:
		}
	}
	return nil
}

func (_eebea ST_Scope) String() string {
	switch _eebea {
	case 0:
		return ""
	case 1:
		return "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case 2:
		return "\u0064\u0061\u0074\u0061"
	case 3:
		return "\u0066\u0069\u0065l\u0064"
	}
	return ""
}

func (_ebcee *CT_PageSetUpPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cefg := range start.Attr {
		if _cefg.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_aeefd, _cegd := _a.ParseBool(_cefg.Value)
			if _cegd != nil {
				return _cegd
			}
			_ebcee.AutoPageBreaksAttr = &_aeefd
			continue
		}
		if _cefg.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_gbcbd, _cbcfa := _a.ParseBool(_cefg.Value)
			if _cbcfa != nil {
				return _cbcfa
			}
			_ebcee.FitToPageAttr = &_gbcbd
			continue
		}
	}
	for {
		_dddga, _fdace := d.Token()
		if _fdace != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072:\u0020\u0025\u0073", _fdace)
		}
		if _fbcfa, _acacc := _dddga.(_gd.EndElement); _acacc && _fbcfa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PageMargins and its children, prefixing error messages with path
func (_dbcgff *CT_PageMargins) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_SheetView and its children, prefixing error messages with path
func (_efdef *CT_SheetView) ValidateWithPath(path string) error {
	if _dcbadc := _efdef.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _dcbadc != nil {
		return _dcbadc
	}
	if _efdef.Pane != nil {
		if _bggbfg := _efdef.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _bggbfg != nil {
			return _bggbfg
		}
	}
	for _dfcebf, _cdfee := range _efdef.Selection {
		if _ffcbc := _cdfee.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0053\u0065\u006ce\u0063\u0074\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _dfcebf)); _ffcbc != nil {
			return _ffcbc
		}
	}
	for _ggaag, _dgdabd := range _efdef.PivotSelection {
		if _fdagf := _dgdabd.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074S\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _ggaag)); _fdagf != nil {
			return _fdagf
		}
	}
	if _efdef.ExtLst != nil {
		if _gbbbb := _efdef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbbbb != nil {
			return _gbbbb
		}
	}
	return nil
}

// Validate validates the AG_RevData and its children
func (_gaf *AG_RevData) Validate() error {
	return _gaf.ValidateWithPath("\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061")
}

func (_fcbfg ST_PatternType) ValidateWithPath(path string) error {
	switch _fcbfg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcbfg))
	}
	return nil
}

// ValidateWithPath validates the CT_CustomProperties and its children, prefixing error messages with path
func (_cgce *CT_CustomProperties) ValidateWithPath(path string) error {
	for _acgbf, _defda := range _cgce.CustomPr {
		if _cgeae := _defda.ValidateWithPath(_b.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u005b\u0025\u0064\u005d", path, _acgbf)); _cgeae != nil {
			return _cgeae
		}
	}
	return nil
}

// Validate validates the Connections and its children
func (_caadb *Connections) Validate() error {
	return _caadb.ValidateWithPath("C\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073")
}

func (_cffcae *CT_UnderlineProperty) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cffcae.ValAttr != ST_UnderlineValuesUnset {
		_befee, _bbfdd := _cffcae.ValAttr.MarshalXMLAttr(_gd.Name{Local: "\u0076\u0061\u006c"})
		if _bbfdd != nil {
			return _bbfdd
		}
		start.Attr = append(start.Attr, _befee)
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Tuples and its children
func (_dgffbd *CT_Tuples) Validate() error {
	return _dgffbd.ValidateWithPath("\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s")
}

func NewCT_Parameters() *CT_Parameters { _aacfe := &CT_Parameters{}; return _aacfe }

type CT_SheetData struct {

	// Row
	Row []*CT_Row
}

type CT_MergeCells struct {

	// Count
	CountAttr *uint32

	// Merged Cell
	MergeCell []*CT_MergeCell
}

// ValidateWithPath validates the CT_VolTopicRef and its children, prefixing error messages with path
func (_dfcedc *CT_VolTopicRef) ValidateWithPath(path string) error { return nil }

type CT_DataRefs struct {

	// Data Consolidation Reference Count
	CountAttr *uint32

	// Data Consolidation Reference
	DataRef []*CT_DataRef
}

type CT_SmartTags struct {

	// Cell Smart Tags
	CellSmartTags []*CT_CellSmartTags
}

func (_dcdcb *CT_colItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dcgadd := range start.Attr {
		if _dcgadd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aeeaa, _egedag := _a.ParseUint(_dcgadd.Value, 10, 32)
			if _egedag != nil {
				return _egedag
			}
			_fagae := uint32(_aeeaa)
			_dcdcb.CountAttr = &_fagae
			continue
		}
	}
_fgafe:
	for {
		_eaadc, _fecca := d.Token()
		if _fecca != nil {
			return _fecca
		}
		switch _ceddg := _eaadc.(type) {
		case _gd.StartElement:
			switch _ceddg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_bccce := NewCT_I()
				if _ggefd := d.DecodeElement(_bccce, &_ceddg); _ggefd != nil {
					return _ggefd
				}
				_dcdcb.I = append(_dcdcb.I, _bccce)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _ceddg.Name)
				if _gccgf := d.Skip(); _gccgf != nil {
					return _gccgf
				}
			}
		case _gd.EndElement:
			break _fgafe
		case _gd.CharData:
		}
	}
	return nil
}

func (_fdcfa *ST_Axis) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fgcbfa, _cdgab := d.Token()
	if _cdgab != nil {
		return _cdgab
	}
	if _bgdaeg, _cfebg := _fgcbfa.(_gd.EndElement); _cfebg && _bgdaeg.Name == start.Name {
		*_fdcfa = 1
		return nil
	}
	if _cfcfg, _geabcf := _fgcbfa.(_gd.CharData); !_geabcf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgcbfa)
	} else {
		switch string(_cfcfg) {
		case "":
			*_fdcfa = 0
		case "\u0061x\u0069\u0073\u0052\u006f\u0077":
			*_fdcfa = 1
		case "\u0061x\u0069\u0073\u0043\u006f\u006c":
			*_fdcfa = 2
		case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
			*_fdcfa = 3
		case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
			*_fdcfa = 4
		}
	}
	_fgcbfa, _cdgab = d.Token()
	if _cdgab != nil {
		return _cdgab
	}
	if _fafae, _aebdea := _fgcbfa.(_gd.EndElement); _aebdea && _fafae.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgcbfa)
}

// Validate validates the CT_RevisionHeaders and its children
func (_dcgdc *CT_RevisionHeaders) Validate() error {
	return _dcgdc.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073")
}

func (_gcagg ST_UpdateLinks) String() string {
	switch _gcagg {
	case 0:
		return ""
	case 1:
		return "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case 2:
		return "\u006e\u0065\u0076e\u0072"
	case 3:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}

func (_gbebba *ST_TextHAlign) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dgccda, _bbfdfa := d.Token()
	if _bbfdfa != nil {
		return _bbfdfa
	}
	if _effff, _gggdac := _dgccda.(_gd.EndElement); _gggdac && _effff.Name == start.Name {
		*_gbebba = 1
		return nil
	}
	if _ffcge, _adaagg := _dgccda.(_gd.CharData); !_adaagg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgccda)
	} else {
		switch string(_ffcge) {
		case "":
			*_gbebba = 0
		case "\u006c\u0065\u0066\u0074":
			*_gbebba = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_gbebba = 2
		case "\u0072\u0069\u0067h\u0074":
			*_gbebba = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_gbebba = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_gbebba = 5
		}
	}
	_dgccda, _bbfdfa = d.Token()
	if _bbfdfa != nil {
		return _bbfdfa
	}
	if _cfdbc, _caefe := _dgccda.(_gd.EndElement); _caefe && _cfdbc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgccda)
}

func (_caddf ST_Objects) Validate() error { return _caddf.ValidateWithPath("") }

// Validate validates the CT_CellStyle and its children
func (_dddf *CT_CellStyle) Validate() error {
	return _dddf.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_XmlCellPr and its children, prefixing error messages with path
func (_cbfcc *CT_XmlCellPr) ValidateWithPath(path string) error {
	if _facafa := _cbfcc.XmlPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0050\u0072"); _facafa != nil {
		return _facafa
	}
	if _cbfcc.ExtLst != nil {
		if _edgac := _cbfcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edgac != nil {
			return _edgac
		}
	}
	return nil
}

func NewCT_CalculatedItems() *CT_CalculatedItems { _bace := &CT_CalculatedItems{}; return _bace }

func (_aaac *CT_ControlPr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aaac.Anchor = NewCT_ObjectAnchor()
	for _, _afeea := range start.Attr {
		if _afeea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _afeea.Name.Local == "\u0069\u0064" || _afeea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _afeea.Name.Local == "\u0069\u0064" {
			_badfb, _fgff := _afeea.Value, error(nil)
			if _fgff != nil {
				return _fgff
			}
			_aaac.IdAttr = &_badfb
			continue
		}
		if _afeea.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_aagdb, _eccc := _a.ParseBool(_afeea.Value)
			if _eccc != nil {
				return _eccc
			}
			_aaac.AutoPictAttr = &_aagdb
			continue
		}
		if _afeea.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_deea, _ggbff := _afeea.Value, error(nil)
			if _ggbff != nil {
				return _ggbff
			}
			_aaac.MacroAttr = &_deea
			continue
		}
		if _afeea.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_fdge, _fcaca := _a.ParseBool(_afeea.Value)
			if _fcaca != nil {
				return _fcaca
			}
			_aaac.PrintAttr = &_fdge
			continue
		}
		if _afeea.Name.Local == "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073" {
			_fdbb, _cebe := _a.ParseBool(_afeea.Value)
			if _cebe != nil {
				return _cebe
			}
			_aaac.RecalcAlwaysAttr = &_fdbb
			continue
		}
		if _afeea.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_gcfe, _bbed := _a.ParseBool(_afeea.Value)
			if _bbed != nil {
				return _bbed
			}
			_aaac.UiObjectAttr = &_gcfe
			continue
		}
		if _afeea.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_eccf, _gabf := _a.ParseBool(_afeea.Value)
			if _gabf != nil {
				return _gabf
			}
			_aaac.AutoFillAttr = &_eccf
			continue
		}
		if _afeea.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_gaad, _abdb := _a.ParseBool(_afeea.Value)
			if _abdb != nil {
				return _abdb
			}
			_aaac.AutoLineAttr = &_gaad
			continue
		}
		if _afeea.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_cecgd, _ddgd := _a.ParseBool(_afeea.Value)
			if _ddgd != nil {
				return _ddgd
			}
			_aaac.LockedAttr = &_cecgd
			continue
		}
		if _afeea.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_dbgaa, _gccg := _a.ParseBool(_afeea.Value)
			if _gccg != nil {
				return _gccg
			}
			_aaac.DisabledAttr = &_dbgaa
			continue
		}
		if _afeea.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_aac, _afeb := _afeea.Value, error(nil)
			if _afeb != nil {
				return _afeb
			}
			_aaac.AltTextAttr = &_aac
			continue
		}
		if _afeea.Name.Local == "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c" {
			_edgef, _cfec := _afeea.Value, error(nil)
			if _cfec != nil {
				return _cfec
			}
			_aaac.LinkedCellAttr = &_edgef
			continue
		}
		if _afeea.Name.Local == "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065" {
			_dfbdb, _afbaa := _afeea.Value, error(nil)
			if _afbaa != nil {
				return _afbaa
			}
			_aaac.ListFillRangeAttr = &_dfbdb
			continue
		}
		if _afeea.Name.Local == "\u0063\u0066" {
			_badc, _debeaa := _afeea.Value, error(nil)
			if _debeaa != nil {
				return _debeaa
			}
			_aaac.CfAttr = &_badc
			continue
		}
		if _afeea.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_fcfc, _dcbga := _a.ParseBool(_afeea.Value)
			if _dcbga != nil {
				return _dcbga
			}
			_aaac.DefaultSizeAttr = &_fcfc
			continue
		}
	}
_gacd:
	for {
		_aecfc, _cffa := d.Token()
		if _cffa != nil {
			return _cffa
		}
		switch _cafeg := _aecfc.(type) {
		case _gd.StartElement:
			switch _cafeg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _gda := d.DecodeElement(_aaac.Anchor, &_cafeg); _gda != nil {
					return _gda
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006et\u0072\u006f\u006c\u0050\u0072\u0020\u0025\u0076", _cafeg.Name)
				if _bffff := d.Skip(); _bffff != nil {
					return _bffff
				}
			}
		case _gd.EndElement:
			break _gacd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_OlapPr() *CT_OlapPr { _aabba := &CT_OlapPr{}; return _aabba }

// ValidateWithPath validates the CT_ExternalLink and its children, prefixing error messages with path
func (_dfbce *CT_ExternalLink) ValidateWithPath(path string) error {
	if _dfbce.Choice != nil {
		if _ccda := _dfbce.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _ccda != nil {
			return _ccda
		}
	}
	if _dfbce.ExtLst != nil {
		if _afdda := _dfbce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afdda != nil {
			return _afdda
		}
	}
	return nil
}

func (_bdfae ST_PhoneticAlignment) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bdfae.String(), start)
}

func (_gece *CT_CommentPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gece.LockedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.LockedAttr))})
	}
	if _gece.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.DefaultSizeAttr))})
	}
	if _gece.PrintAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.PrintAttr))})
	}
	if _gece.DisabledAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.DisabledAttr))})
	}
	if _gece.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.AutoFillAttr))})
	}
	if _gece.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.AutoLineAttr))})
	}
	if _gece.AltTextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gece.AltTextAttr)})
	}
	if _gece.TextHAlignAttr != ST_TextHAlignUnset {
		_abfcc, _babb := _gece.TextHAlignAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e"})
		if _babb != nil {
			return _babb
		}
		start.Attr = append(start.Attr, _abfcc)
	}
	if _gece.TextVAlignAttr != ST_TextVAlignUnset {
		_eagfg, _dgaab := _gece.TextVAlignAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e"})
		if _dgaab != nil {
			return _dgaab
		}
		start.Attr = append(start.Attr, _eagfg)
	}
	if _gece.LockTextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.LockTextAttr))})
	}
	if _gece.JustLastXAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.JustLastXAttr))})
	}
	if _gece.AutoScaleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gece.AutoScaleAttr))})
	}
	e.EncodeToken(start)
	_ddeg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_gece.Anchor, _ddeg)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_agebc ST_DataValidationErrorStyle) ValidateWithPath(path string) error {
	switch _agebc {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agebc))
	}
	return nil
}

type CT_DataBar struct {

	// Minimum Length
	MinLengthAttr *uint32

	// Maximum Length
	MaxLengthAttr *uint32

	// Show Values
	ShowValueAttr *bool

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Data Bar Color
	Color *CT_Color
}

// Validate validates the CT_MetadataBlock and its children
func (_ebada *CT_MetadataBlock) Validate() error {
	return _ebada.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b")
}

func NewCT_XmlColumnPr() *CT_XmlColumnPr { _gcadd := &CT_XmlColumnPr{}; return _gcadd }

// Validate validates the StyleSheet and its children
func (_gbdag *StyleSheet) Validate() error {
	return _gbdag.ValidateWithPath("\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_TableFormula and its children, prefixing error messages with path
func (_agfea *CT_TableFormula) ValidateWithPath(path string) error { return nil }

type CT_CalcCell struct {

	// Cell Reference
	RAttr   *string
	RefAttr *string

	// Sheet Id
	IAttr *int32

	// Child Chain
	SAttr *bool

	// New Dependency Level
	LAttr *bool

	// New Thread
	TAttr *bool

	// Array
	AAttr *bool
}

func (_cbgebe *ST_PivotAreaType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_eccec, _bbgebf := d.Token()
	if _bbgebf != nil {
		return _bbgebf
	}
	if _caggbc, _aecbd := _eccec.(_gd.EndElement); _aecbd && _caggbc.Name == start.Name {
		*_cbgebe = 1
		return nil
	}
	if _efeadf, _gfbaeg := _eccec.(_gd.CharData); !_gfbaeg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eccec)
	} else {
		switch string(_efeadf) {
		case "":
			*_cbgebe = 0
		case "\u006e\u006f\u006e\u0065":
			*_cbgebe = 1
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_cbgebe = 2
		case "\u0064\u0061\u0074\u0061":
			*_cbgebe = 3
		case "\u0061\u006c\u006c":
			*_cbgebe = 4
		case "\u006f\u0072\u0069\u0067\u0069\u006e":
			*_cbgebe = 5
		case "\u0062\u0075\u0074\u0074\u006f\u006e":
			*_cbgebe = 6
		case "\u0074\u006f\u0070\u0045\u006e\u0064":
			*_cbgebe = 7
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_cbgebe = 8
		}
	}
	_eccec, _bbgebf = d.Token()
	if _bbgebf != nil {
		return _bbgebf
	}
	if _dbfeb, _gbaca := _eccec.(_gd.EndElement); _gbaca && _dbfeb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eccec)
}

func (_ceddc *ST_PaneState) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_befac, _caaagg := d.Token()
	if _caaagg != nil {
		return _caaagg
	}
	if _aegbac, _gddae := _befac.(_gd.EndElement); _gddae && _aegbac.Name == start.Name {
		*_ceddc = 1
		return nil
	}
	if _fcfgf, _ccgcbe := _befac.(_gd.CharData); !_ccgcbe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _befac)
	} else {
		switch string(_fcfgf) {
		case "":
			*_ceddc = 0
		case "\u0073\u0070\u006ci\u0074":
			*_ceddc = 1
		case "\u0066\u0072\u006f\u007a\u0065\u006e":
			*_ceddc = 2
		case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
			*_ceddc = 3
		}
	}
	_befac, _caaagg = d.Token()
	if _caaagg != nil {
		return _caaagg
	}
	if _eagcfa, _geafg := _befac.(_gd.EndElement); _geafg && _eagcfa.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _befac)
}

func (_gfeed *ST_PivotFilterType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_aceae, _acfdbc := d.Token()
	if _acfdbc != nil {
		return _acfdbc
	}
	if _ddded, _geece := _aceae.(_gd.EndElement); _geece && _ddded.Name == start.Name {
		*_gfeed = 1
		return nil
	}
	if _geddb, _bgbce := _aceae.(_gd.CharData); !_bgbce {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aceae)
	} else {
		switch string(_geddb) {
		case "":
			*_gfeed = 0
		case "\u0075n\u006b\u006e\u006f\u0077\u006e":
			*_gfeed = 1
		case "\u0063\u006f\u0075n\u0074":
			*_gfeed = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_gfeed = 3
		case "\u0073\u0075\u006d":
			*_gfeed = 4
		case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
			*_gfeed = 5
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gfeed = 6
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
			*_gfeed = 7
		case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
			*_gfeed = 8
		case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_gfeed = 9
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
			*_gfeed = 10
		case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_gfeed = 11
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
			*_gfeed = 12
		case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
			*_gfeed = 13
		case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
			*_gfeed = 14
		case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_gfeed = 15
		case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
			*_gfeed = 16
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_gfeed = 17
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_gfeed = 18
		case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
			*_gfeed = 19
		case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gfeed = 20
		case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_gfeed = 21
		case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_gfeed = 22
		case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_gfeed = 23
		case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_gfeed = 24
		case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_gfeed = 25
		case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_gfeed = 26
		case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
			*_gfeed = 27
		case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gfeed = 28
		case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
			*_gfeed = 29
		case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_gfeed = 30
		case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
			*_gfeed = 31
		case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_gfeed = 32
		case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_gfeed = 33
		case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_gfeed = 34
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_gfeed = 35
		case "\u0074\u006f\u0064a\u0079":
			*_gfeed = 36
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_gfeed = 37
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_gfeed = 38
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_gfeed = 39
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_gfeed = 40
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_gfeed = 41
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_gfeed = 42
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_gfeed = 43
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_gfeed = 44
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_gfeed = 45
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_gfeed = 46
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_gfeed = 47
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_gfeed = 48
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_gfeed = 49
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_gfeed = 50
		case "\u0051\u0031":
			*_gfeed = 51
		case "\u0051\u0032":
			*_gfeed = 52
		case "\u0051\u0033":
			*_gfeed = 53
		case "\u0051\u0034":
			*_gfeed = 54
		case "\u004d\u0031":
			*_gfeed = 55
		case "\u004d\u0032":
			*_gfeed = 56
		case "\u004d\u0033":
			*_gfeed = 57
		case "\u004d\u0034":
			*_gfeed = 58
		case "\u004d\u0035":
			*_gfeed = 59
		case "\u004d\u0036":
			*_gfeed = 60
		case "\u004d\u0037":
			*_gfeed = 61
		case "\u004d\u0038":
			*_gfeed = 62
		case "\u004d\u0039":
			*_gfeed = 63
		case "\u004d\u0031\u0030":
			*_gfeed = 64
		case "\u004d\u0031\u0031":
			*_gfeed = 65
		case "\u004d\u0031\u0032":
			*_gfeed = 66
		}
	}
	_aceae, _acfdbc = d.Token()
	if _acfdbc != nil {
		return _acfdbc
	}
	if _ddadgg, _bbgafb := _aceae.(_gd.EndElement); _bbgafb && _ddadgg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aceae)
}

func (_eacfbb ST_TimePeriod) String() string {
	switch _eacfbb {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0064a\u0079"
	case 2:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 3:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 4:
		return "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case 5:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 6:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 7:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return ""
}

func (_gcgeca *ST_Orientation) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gcgeca = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_gcgeca = 1
	case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
		*_gcgeca = 2
	case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
		*_gcgeca = 3
	}
	return nil
}

func (_dgedb *CT_MemberProperty) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dabcg := range start.Attr {
		if _dabcg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_effc, _cbfac := _dabcg.Value, error(nil)
			if _cbfac != nil {
				return _cbfac
			}
			_dgedb.NameAttr = &_effc
			continue
		}
		if _dabcg.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c" {
			_egdff, _agbec := _a.ParseBool(_dabcg.Value)
			if _agbec != nil {
				return _agbec
			}
			_dgedb.ShowCellAttr = &_egdff
			continue
		}
		if _dabcg.Name.Local == "\u0073h\u006f\u0077\u0054\u0069\u0070" {
			_egcad, _fbbge := _a.ParseBool(_dabcg.Value)
			if _fbbge != nil {
				return _fbbge
			}
			_dgedb.ShowTipAttr = &_egcad
			continue
		}
		if _dabcg.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_gfcfg, _bccfag := _a.ParseBool(_dabcg.Value)
			if _bccfag != nil {
				return _bccfag
			}
			_dgedb.ShowAsCaptionAttr = &_gfcfg
			continue
		}
		if _dabcg.Name.Local == "\u006ea\u006d\u0065\u004c\u0065\u006e" {
			_becff, _acccf := _a.ParseUint(_dabcg.Value, 10, 32)
			if _acccf != nil {
				return _acccf
			}
			_bggg := uint32(_becff)
			_dgedb.NameLenAttr = &_bggg
			continue
		}
		if _dabcg.Name.Local == "\u0070\u0050\u006f\u0073" {
			_dbbbd, _cbeeg := _a.ParseUint(_dabcg.Value, 10, 32)
			if _cbeeg != nil {
				return _cbeeg
			}
			_gdec := uint32(_dbbbd)
			_dgedb.PPosAttr = &_gdec
			continue
		}
		if _dabcg.Name.Local == "\u0070\u004c\u0065\u006e" {
			_gfbacg, _bdbaa := _a.ParseUint(_dabcg.Value, 10, 32)
			if _bdbaa != nil {
				return _bdbaa
			}
			_ebcbf := uint32(_gfbacg)
			_dgedb.PLenAttr = &_ebcbf
			continue
		}
		if _dabcg.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_debeef, _cadbd := _a.ParseUint(_dabcg.Value, 10, 32)
			if _cadbd != nil {
				return _cadbd
			}
			_eefbb := uint32(_debeef)
			_dgedb.LevelAttr = &_eefbb
			continue
		}
		if _dabcg.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_cbcfg, _fgacdf := _a.ParseUint(_dabcg.Value, 10, 32)
			if _fgacdf != nil {
				return _fgacdf
			}
			_dgedb.FieldAttr = uint32(_cbcfg)
			continue
		}
	}
	for {
		_efdf, _ggbbaf := d.Token()
		if _ggbbaf != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _ggbbaf)
		}
		if _bacaaf, _aeegf := _efdf.(_gd.EndElement); _aeegf && _bacaaf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DrawingHF and its children
func (_afda *CT_DrawingHF) Validate() error {
	return _afda.ValidateWithPath("\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046")
}

func (_fdgcf ST_FormatAction) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_acaae := _gd.Attr{}
	_acaae.Name = name
	switch _fdgcf {
	case ST_FormatActionUnset:
		_acaae.Value = ""
	case ST_FormatActionBlank:
		_acaae.Value = "\u0062\u006c\u0061n\u006b"
	case ST_FormatActionFormatting:
		_acaae.Value = "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case ST_FormatActionDrill:
		_acaae.Value = "\u0064\u0072\u0069l\u006c"
	case ST_FormatActionFormula:
		_acaae.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return _acaae, nil
}

func NewCT_SmartTags() *CT_SmartTags { _bfabf := &CT_SmartTags{}; return _bfabf }

func (_dbaa ST_ItemType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_abfgb := _gd.Attr{}
	_abfgb.Name = name
	switch _dbaa {
	case ST_ItemTypeUnset:
		_abfgb.Value = ""
	case ST_ItemTypeData:
		_abfgb.Value = "\u0064\u0061\u0074\u0061"
	case ST_ItemTypeDefault:
		_abfgb.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_ItemTypeSum:
		_abfgb.Value = "\u0073\u0075\u006d"
	case ST_ItemTypeCountA:
		_abfgb.Value = "\u0063\u006f\u0075\u006e\u0074\u0041"
	case ST_ItemTypeAvg:
		_abfgb.Value = "\u0061\u0076\u0067"
	case ST_ItemTypeMax:
		_abfgb.Value = "\u006d\u0061\u0078"
	case ST_ItemTypeMin:
		_abfgb.Value = "\u006d\u0069\u006e"
	case ST_ItemTypeProduct:
		_abfgb.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_ItemTypeCount:
		_abfgb.Value = "\u0063\u006f\u0075n\u0074"
	case ST_ItemTypeStdDev:
		_abfgb.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_ItemTypeStdDevP:
		_abfgb.Value = "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case ST_ItemTypeVar:
		_abfgb.Value = "\u0076\u0061\u0072"
	case ST_ItemTypeVarP:
		_abfgb.Value = "\u0076\u0061\u0072\u0050"
	case ST_ItemTypeGrand:
		_abfgb.Value = "\u0067\u0072\u0061n\u0064"
	case ST_ItemTypeBlank:
		_abfgb.Value = "\u0062\u006c\u0061n\u006b"
	}
	return _abfgb, nil
}

type ST_DynamicFilterType byte

type SingleXmlCells struct{ CT_SingleXmlCells }

// Validate validates the CT_PageItem and its children
func (_aacebf *CT_PageItem) Validate() error {
	return _aacebf.ValidateWithPath("C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_FunctionGroup and its children
func (_afbea *CT_FunctionGroup) Validate() error {
	return _afbea.ValidateWithPath("\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070")
}

// ValidateWithPath validates the CT_RowFields and its children, prefixing error messages with path
func (_agfba *CT_RowFields) ValidateWithPath(path string) error {
	for _begd, _afbeg := range _agfba.Field {
		if _ageaf := _afbeg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _begd)); _ageaf != nil {
			return _ageaf
		}
	}
	return nil
}

func (_abcca *CT_RevisionFormatting) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _abcca.SheetIdAttr)})
	if _abcca.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_abcca.XfDxfAttr))})
	}
	if _abcca.SAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_abcca.SAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _b.Sprintf("\u0025\u0076", _abcca.SqrefAttr)})
	if _abcca.StartAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_abcca.StartAttr)})
	}
	if _abcca.LengthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0065\u006e\u0067\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_abcca.LengthAttr)})
	}
	e.EncodeToken(start)
	if _abcca.Dxf != nil {
		_dfcfd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		e.EncodeElement(_abcca.Dxf, _dfcfd)
	}
	if _abcca.ExtLst != nil {
		_gaebd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_abcca.ExtLst, _gaebd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cbfc *CT_FieldGroup) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cbfc.ParAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_cbfc.ParAttr)})
	}
	if _cbfc.BaseAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0061\u0073\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cbfc.BaseAttr)})
	}
	e.EncodeToken(start)
	if _cbfc.RangePr != nil {
		_caba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0050\u0072"}}
		e.EncodeElement(_cbfc.RangePr, _caba)
	}
	if _cbfc.DiscretePr != nil {
		_ccfee := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}}
		e.EncodeElement(_cbfc.DiscretePr, _ccfee)
	}
	if _cbfc.GroupItems != nil {
		_gagdc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cbfc.GroupItems, _gagdc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cffcd *CT_Controls) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_fdbeb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c"}}
	for _, _efccf := range _cffcd.Control {
		e.EncodeElement(_efccf, _fdbeb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_aedbf *CT_rowItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dgebac := range start.Attr {
		if _dgebac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fegfbd, _aggggc := _a.ParseUint(_dgebac.Value, 10, 32)
			if _aggggc != nil {
				return _aggggc
			}
			_bcfbag := uint32(_fegfbd)
			_aedbf.CountAttr = &_bcfbag
			continue
		}
	}
_fbaca:
	for {
		_ddcbf, _gdaeb := d.Token()
		if _gdaeb != nil {
			return _gdaeb
		}
		switch _efdag := _ddcbf.(type) {
		case _gd.StartElement:
			switch _efdag.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_bbffe := NewCT_I()
				if _cdbbf := d.DecodeElement(_bbffe, &_efdag); _cdbbf != nil {
					return _cdbbf
				}
				_aedbf.I = append(_aedbf.I, _bbffe)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _efdag.Name)
				if _gcggfb := d.Skip(); _gcggfb != nil {
					return _gcggfb
				}
			}
		case _gd.EndElement:
			break _fbaca
		case _gd.CharData:
		}
	}
	return nil
}

func (_adbbd *ST_DataValidationErrorStyle) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_adbbd = 0
	case "\u0073\u0074\u006f\u0070":
		*_adbbd = 1
	case "\u0077a\u0072\u006e\u0069\u006e\u0067":
		*_adbbd = 2
	case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_adbbd = 3
	}
	return nil
}

func NewCT_DataBar() *CT_DataBar {
	_cbgae := &CT_DataBar{}
	_cbgae.Color = NewCT_Color()
	return _cbgae
}

func NewCT_FontSize() *CT_FontSize { _debdbc := &CT_FontSize{}; return _debdbc }

func (_ffbaaf ST_Comments) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ffbaaf.String(), start)
}

func (_bgfac ST_DdeValueType) Validate() error { return _bgfac.ValidateWithPath("") }

func (_aeeeb *CT_MetadataStringIndex) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078"}, Value: _b.Sprintf("\u0025\u0076", _aeeeb.XAttr)})
	if _aeeeb.SAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aeeeb.SAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_ColorScale() *CT_ColorScale { _aagd := &CT_ColorScale{}; return _aagd }

func NewCT_TableMissing() *CT_TableMissing { _feecg := &CT_TableMissing{}; return _feecg }

type CT_Formats struct {

	// Formats Count
	CountAttr *uint32

	// PivotTable Format
	Format []*CT_Format
}

func (_eagcc *CT_GradientFill) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cfbdb := range start.Attr {
		if _cfbdb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_eagcc.TypeAttr.UnmarshalXMLAttr(_cfbdb)
			continue
		}
		if _cfbdb.Name.Local == "\u0064\u0065\u0067\u0072\u0065\u0065" {
			_cgbef, _gdbg := _a.ParseFloat(_cfbdb.Value, 64)
			if _gdbg != nil {
				return _gdbg
			}
			_eagcc.DegreeAttr = &_cgbef
			continue
		}
		if _cfbdb.Name.Local == "\u006c\u0065\u0066\u0074" {
			_egfb, _cadgec := _a.ParseFloat(_cfbdb.Value, 64)
			if _cadgec != nil {
				return _cadgec
			}
			_eagcc.LeftAttr = &_egfb
			continue
		}
		if _cfbdb.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_dafeec, _bcage := _a.ParseFloat(_cfbdb.Value, 64)
			if _bcage != nil {
				return _bcage
			}
			_eagcc.RightAttr = &_dafeec
			continue
		}
		if _cfbdb.Name.Local == "\u0074\u006f\u0070" {
			_acbda, _dgefg := _a.ParseFloat(_cfbdb.Value, 64)
			if _dgefg != nil {
				return _dgefg
			}
			_eagcc.TopAttr = &_acbda
			continue
		}
		if _cfbdb.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_afag, _fbege := _a.ParseFloat(_cfbdb.Value, 64)
			if _fbege != nil {
				return _fbege
			}
			_eagcc.BottomAttr = &_afag
			continue
		}
	}
_eaabc:
	for {
		_fbfdf, _gbecc := d.Token()
		if _gbecc != nil {
			return _gbecc
		}
		switch _fdfed := _fbfdf.(type) {
		case _gd.StartElement:
			switch _fdfed.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}:
				_acfc := NewCT_GradientStop()
				if _gadgc := d.DecodeElement(_acfc, &_fdfed); _gadgc != nil {
					return _gadgc
				}
				_eagcc.Stop = append(_eagcc.Stop, _acfc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _fdfed.Name)
				if _aacac := d.Skip(); _aacac != nil {
					return _aacac
				}
			}
		case _gd.EndElement:
			break _eaabc
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MetadataRecord and its children
func (_adffc *CT_MetadataRecord) Validate() error {
	return _adffc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064")
}

// ValidateWithPath validates the CT_PatternFill and its children, prefixing error messages with path
func (_dgbeb *CT_PatternFill) ValidateWithPath(path string) error {
	if _aegabc := _dgbeb.PatternTypeAttr.ValidateWithPath(path + "\u002f\u0050a\u0074\u0074\u0065r\u006e\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _aegabc != nil {
		return _aegabc
	}
	if _dgbeb.FgColor != nil {
		if _edbc := _dgbeb.FgColor.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006f\u006c\u006f\u0072"); _edbc != nil {
			return _edbc
		}
	}
	if _dgbeb.BgColor != nil {
		if _acfffe := _dgbeb.BgColor.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006f\u006c\u006f\u0072"); _acfffe != nil {
			return _acfffe
		}
	}
	return nil
}

func NewCT_WorksheetSource() *CT_WorksheetSource { _egdeea := &CT_WorksheetSource{}; return _egdeea }

// Validate validates the CT_Cfvo and its children
func (_gbce *CT_Cfvo) Validate() error {
	return _gbce.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0076\u006f")
}

func (_aedfb *CT_PivotCaches) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_aabfg:
	for {
		_gegc, _ffggd := d.Token()
		if _ffggd != nil {
			return _ffggd
		}
		switch _eafgd := _gegc.(type) {
		case _gd.StartElement:
			switch _eafgd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}:
				_ddcff := NewCT_PivotCache()
				if _aabdb := d.DecodeElement(_ddcff, &_eafgd); _aabdb != nil {
					return _aabdb
				}
				_aedfb.PivotCache = append(_aedfb.PivotCache, _ddcff)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061c\u0068e\u0073\u0020\u0025\u0076", _eafgd.Name)
				if _gebb := d.Skip(); _gebb != nil {
					return _gebb
				}
			}
		case _gd.EndElement:
			break _aabfg
		case _gd.CharData:
		}
	}
	return nil
}

func (_fgace *CT_ControlPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fgace.LockedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.LockedAttr))})
	}
	if _fgace.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.DefaultSizeAttr))})
	}
	if _fgace.PrintAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.PrintAttr))})
	}
	if _fgace.DisabledAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.DisabledAttr))})
	}
	if _fgace.RecalcAlwaysAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.RecalcAlwaysAttr))})
	}
	if _fgace.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.UiObjectAttr))})
	}
	if _fgace.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.AutoFillAttr))})
	}
	if _fgace.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.AutoLineAttr))})
	}
	if _fgace.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fgace.AutoPictAttr))})
	}
	if _fgace.MacroAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_fgace.MacroAttr)})
	}
	if _fgace.AltTextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fgace.AltTextAttr)})
	}
	if _fgace.LinkedCellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fgace.LinkedCellAttr)})
	}
	if _fgace.ListFillRangeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_fgace.ListFillRangeAttr)})
	}
	if _fgace.CfAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_fgace.CfAttr)})
	}
	if _fgace.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fgace.IdAttr)})
	}
	e.EncodeToken(start)
	_gdca := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_fgace.Anchor, _gdca)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ChartsheetViews and its children, prefixing error messages with path
func (_bgda *CT_ChartsheetViews) ValidateWithPath(path string) error {
	for _bafe, _aecee := range _bgda.SheetView {
		if _gfgf := _aecee.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _bafe)); _gfgf != nil {
			return _gfgf
		}
	}
	if _bgda.ExtLst != nil {
		if _bedce := _bgda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bedce != nil {
			return _bedce
		}
	}
	return nil
}

func (_cegaa ST_ShowDataAs) String() string {
	switch _cegaa {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case 5:
		return "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case 6:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case 7:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case 8:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case 9:
		return "\u0069\u006e\u0064e\u0078"
	}
	return ""
}

func (_dfefb *CT_XStringElement) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ffdcd := range start.Attr {
		if _ffdcd.Name.Local == "\u0076" {
			_edacad, _dfaaac := _ffdcd.Value, error(nil)
			if _dfaaac != nil {
				return _dfaaac
			}
			_dfefb.VAttr = _edacad
			continue
		}
	}
	for {
		_caafdb, _ebefd := d.Token()
		if _ebefd != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006c\u0065\u006d\u0065\u006e\u0074: \u0025\u0073", _ebefd)
		}
		if _feeea, _bdgfc := _caafdb.(_gd.EndElement); _bdgfc && _feeea.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionCustomView and its children, prefixing error messages with path
func (_gcffc *CT_RevisionCustomView) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_gcffc.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _gcffc.GuidAttr)
	}
	if _gcffc.ActionAttr == ST_RevisionActionUnset {
		return _b.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _edgfa := _gcffc.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _edgfa != nil {
		return _edgfa
	}
	return nil
}

type CT_ObjectAnchor struct {

	// Move With Cells
	MoveWithCellsAttr *bool

	// Size With Cells
	SizeWithCellsAttr *bool
	From              *_c.From
	To                *_c.To
}

// ValidateWithPath validates the CT_MetadataType and its children, prefixing error messages with path
func (_daeabd *CT_MetadataType) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_DataValidations and its children
func (_eebed *CT_DataValidations) Validate() error {
	return _eebed.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073")
}

func (_gbace *CT_PageMargins) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aceeba := range start.Attr {
		if _aceeba.Name.Local == "\u006c\u0065\u0066\u0074" {
			_eccfc, _fdgge := _a.ParseFloat(_aceeba.Value, 64)
			if _fdgge != nil {
				return _fdgge
			}
			_gbace.LeftAttr = _eccfc
			continue
		}
		if _aceeba.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_fbeeb, _cccbf := _a.ParseFloat(_aceeba.Value, 64)
			if _cccbf != nil {
				return _cccbf
			}
			_gbace.RightAttr = _fbeeb
			continue
		}
		if _aceeba.Name.Local == "\u0074\u006f\u0070" {
			_cecgde, _gcaef := _a.ParseFloat(_aceeba.Value, 64)
			if _gcaef != nil {
				return _gcaef
			}
			_gbace.TopAttr = _cecgde
			continue
		}
		if _aceeba.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_bggbg, _dgffbc := _a.ParseFloat(_aceeba.Value, 64)
			if _dgffbc != nil {
				return _dgffbc
			}
			_gbace.BottomAttr = _bggbg
			continue
		}
		if _aceeba.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072" {
			_fbcfd, _gddcgc := _a.ParseFloat(_aceeba.Value, 64)
			if _gddcgc != nil {
				return _gddcgc
			}
			_gbace.HeaderAttr = _fbcfd
			continue
		}
		if _aceeba.Name.Local == "\u0066\u006f\u006f\u0074\u0065\u0072" {
			_fcfbda, _bcbec := _a.ParseFloat(_aceeba.Value, 64)
			if _bcbec != nil {
				return _bcbec
			}
			_gbace.FooterAttr = _fcfbda
			continue
		}
	}
	for {
		_gceac, _dcdfe := d.Token()
		if _dcdfe != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073:\u0020\u0025\u0073", _dcdfe)
		}
		if _bacg, _fcgbg := _gceac.(_gd.EndElement); _fcgbg && _bacg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_PivotField and its children
func (_faccb *CT_PivotField) Validate() error {
	return _faccb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064")
}

// Validate validates the CT_Cols and its children
func (_ebec *CT_Cols) Validate() error {
	return _ebec.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u0073")
}

// Validate validates the CT_FontName and its children
func (_aeafg *CT_FontName) Validate() error {
	return _aeafg.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065")
}

func NewCT_Filter() *CT_Filter { _cdefcf := &CT_Filter{}; return _cdefcf }

type ST_Qualifier byte

func (_eagdfd *ST_HtmlFmt) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_eagdfd = 0
	case "\u006e\u006f\u006e\u0065":
		*_eagdfd = 1
	case "\u0072\u0074\u0066":
		*_eagdfd = 2
	case "\u0061\u006c\u006c":
		*_eagdfd = 3
	}
	return nil
}

func NewCT_Comments() *CT_Comments {
	_beagd := &CT_Comments{}
	_beagd.Authors = NewCT_Authors()
	_beagd.CommentList = NewCT_CommentList()
	return _beagd
}

type CT_ChartFormats struct {

	// Format Count
	CountAttr *uint32

	// PivotChart Format
	ChartFormat []*CT_ChartFormat
}

// ValidateWithPath validates the CT_DeletedField and its children, prefixing error messages with path
func (_befeb *CT_DeletedField) ValidateWithPath(path string) error { return nil }

type ST_TableType byte

const (
	ST_PageOrderUnset        ST_PageOrder = 0
	ST_PageOrderDownThenOver ST_PageOrder = 1
	ST_PageOrderOverThenDown ST_PageOrder = 2
)

// Validate validates the CT_CustomWorkbookView and its children
func (_cabca *CT_CustomWorkbookView) Validate() error {
	return _cabca.ValidateWithPath("C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077")
}

func NewCT_SmartTagPr() *CT_SmartTagPr { _bfbegf := &CT_SmartTagPr{}; return _bfbegf }

func (_ccbaea *ST_TableStyleType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_ccbaea = 0
	case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
		*_ccbaea = 1
	case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
		*_ccbaea = 2
	case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_ccbaea = 3
	case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_ccbaea = 4
	case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_ccbaea = 5
	case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
		*_ccbaea = 6
	case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
		*_ccbaea = 7
	case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
		*_ccbaea = 8
	case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
		*_ccbaea = 9
	case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
		*_ccbaea = 10
	case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
		*_ccbaea = 11
	case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
		*_ccbaea = 12
	case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
		*_ccbaea = 13
	case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_ccbaea = 14
	case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
		*_ccbaea = 15
	case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_ccbaea = 16
	case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_ccbaea = 17
	case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
		*_ccbaea = 18
	case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_ccbaea = 19
	case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
		*_ccbaea = 20
	case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_ccbaea = 21
	case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
		*_ccbaea = 22
	case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_ccbaea = 23
	case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_ccbaea = 24
	case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
		*_ccbaea = 25
	case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_ccbaea = 26
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
		*_ccbaea = 27
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
		*_ccbaea = 28
	}
	return nil
}

// ValidateWithPath validates the CT_ChartsheetView and its children, prefixing error messages with path
func (_dcacf *CT_ChartsheetView) ValidateWithPath(path string) error {
	if _dcacf.ExtLst != nil {
		if _bafg := _dcacf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bafg != nil {
			return _bafg
		}
	}
	return nil
}

type CT_Number struct {

	// Value
	VAttr float64

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// OLAP Members
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

const (
	ST_ExternalConnectionTypeUnset   ST_ExternalConnectionType = 0
	ST_ExternalConnectionTypeGeneral ST_ExternalConnectionType = 1
	ST_ExternalConnectionTypeText    ST_ExternalConnectionType = 2
	ST_ExternalConnectionTypeMDY     ST_ExternalConnectionType = 3
	ST_ExternalConnectionTypeDMY     ST_ExternalConnectionType = 4
	ST_ExternalConnectionTypeYMD     ST_ExternalConnectionType = 5
	ST_ExternalConnectionTypeMYD     ST_ExternalConnectionType = 6
	ST_ExternalConnectionTypeDYM     ST_ExternalConnectionType = 7
	ST_ExternalConnectionTypeYDM     ST_ExternalConnectionType = 8
	ST_ExternalConnectionTypeSkip    ST_ExternalConnectionType = 9
	ST_ExternalConnectionTypeEMD     ST_ExternalConnectionType = 10
)

func (_fgad *CT_DdeItem) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cafa := range start.Attr {
		if _cafa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edce, _agdbcf := _cafa.Value, error(nil)
			if _agdbcf != nil {
				return _agdbcf
			}
			_fgad.NameAttr = &_edce
			continue
		}
		if _cafa.Name.Local == "\u006f\u006c\u0065" {
			_dcdb, _bbfbgb := _a.ParseBool(_cafa.Value)
			if _bbfbgb != nil {
				return _bbfbgb
			}
			_fgad.OleAttr = &_dcdb
			continue
		}
		if _cafa.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_cbae, _faebb := _a.ParseBool(_cafa.Value)
			if _faebb != nil {
				return _faebb
			}
			_fgad.AdviseAttr = &_cbae
			continue
		}
		if _cafa.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_cgeab, _bbdad := _a.ParseBool(_cafa.Value)
			if _bbdad != nil {
				return _bbdad
			}
			_fgad.PreferPicAttr = &_cgeab
			continue
		}
	}
_gcfbf:
	for {
		_effaa, _gedc := d.Token()
		if _gedc != nil {
			return _gedc
		}
		switch _ccded := _effaa.(type) {
		case _gd.StartElement:
			switch _ccded.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}:
				_fgad.Values = NewCT_DdeValues()
				if _cfeea := d.DecodeElement(_fgad.Values, &_ccded); _cfeea != nil {
					return _cfeea
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _ccded.Name)
				if _bcfd := d.Skip(); _bcfd != nil {
					return _bcfd
				}
			}
		case _gd.EndElement:
			break _gcfbf
		case _gd.CharData:
		}
	}
	return nil
}

type ST_PhoneticType byte

// Validate validates the CT_WebPr and its children
func (_aaeed *CT_WebPr) Validate() error {
	return _aaeed.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072")
}

// ValidateWithPath validates the CT_NumFmts and its children, prefixing error messages with path
func (_ecgag *CT_NumFmts) ValidateWithPath(path string) error {
	for _deaff, _bgadb := range _ecgag.NumFmt {
		if _cadcf := _bgadb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u005b\u0025\u0064\u005d", path, _deaff)); _cadcf != nil {
			return _cadcf
		}
	}
	return nil
}

func (_fdefe *CT_Groups) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fedgd := range start.Attr {
		if _fedgd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebbfe, _bcffa := _a.ParseUint(_fedgd.Value, 10, 32)
			if _bcffa != nil {
				return _bcffa
			}
			_bdcc := uint32(_ebbfe)
			_fdefe.CountAttr = &_bdcc
			continue
		}
	}
_gfefd:
	for {
		_fgfdac, _ccfd := d.Token()
		if _ccfd != nil {
			return _ccfd
		}
		switch _cgfda := _fgfdac.(type) {
		case _gd.StartElement:
			switch _cgfda.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}:
				_afdfac := NewCT_LevelGroup()
				if _afgb := d.DecodeElement(_afdfac, &_cgfda); _afgb != nil {
					return _afgb
				}
				_fdefe.Group = append(_fdefe.Group, _afdfac)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u0073 \u0025\u0076", _cgfda.Name)
				if _ceefb := d.Skip(); _ceefb != nil {
					return _ceefb
				}
			}
		case _gd.EndElement:
			break _gfefd
		case _gd.CharData:
		}
	}
	return nil
}

type CT_MdxMemeberProp struct {

	// Member Unique Name Index
	NAttr uint32

	// Property Name Index
	NpAttr uint32
}

func (_adccc ST_Orientation) String() string {
	switch _adccc {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case 3:
		return "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return ""
}

func (_daeee *CT_CfRule) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _egfe := range start.Attr {
		if _egfe.Name.Local == "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064" {
			_daeee.TimePeriodAttr.UnmarshalXMLAttr(_egfe)
			continue
		}
		if _egfe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_daeee.TypeAttr.UnmarshalXMLAttr(_egfe)
			continue
		}
		if _egfe.Name.Local == "\u0072\u0061\u006e\u006b" {
			_fdff, _ffge := _a.ParseUint(_egfe.Value, 10, 32)
			if _ffge != nil {
				return _ffge
			}
			_befg := uint32(_fdff)
			_daeee.RankAttr = &_befg
			continue
		}
		if _egfe.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_ggce, _ffbd := _a.ParseInt(_egfe.Value, 10, 32)
			if _ffbd != nil {
				return _ffbd
			}
			_daeee.PriorityAttr = int32(_ggce)
			continue
		}
		if _egfe.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076" {
			_bfbd, _bfac := _a.ParseInt(_egfe.Value, 10, 32)
			if _bfac != nil {
				return _bfac
			}
			_afdb := int32(_bfbd)
			_daeee.StdDevAttr = &_afdb
			continue
		}
		if _egfe.Name.Local == "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_facc, _gede := _a.ParseBool(_egfe.Value)
			if _gede != nil {
				return _gede
			}
			_daeee.AboveAverageAttr = &_facc
			continue
		}
		if _egfe.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_bfbdb, _gdgdg := _a.ParseBool(_egfe.Value)
			if _gdgdg != nil {
				return _gdgdg
			}
			_daeee.BottomAttr = &_bfbdb
			continue
		}
		if _egfe.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_daeee.OperatorAttr.UnmarshalXMLAttr(_egfe)
			continue
		}
		if _egfe.Name.Local == "\u0074\u0065\u0078\u0074" {
			_aaaf, _dac := _egfe.Value, error(nil)
			if _dac != nil {
				return _dac
			}
			_daeee.TextAttr = &_aaaf
			continue
		}
		if _egfe.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_cdgddd, _beggg := _a.ParseUint(_egfe.Value, 10, 32)
			if _beggg != nil {
				return _beggg
			}
			_gcgf := uint32(_cdgddd)
			_daeee.DxfIdAttr = &_gcgf
			continue
		}
		if _egfe.Name.Local == "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065" {
			_dfcf, _defad := _a.ParseBool(_egfe.Value)
			if _defad != nil {
				return _defad
			}
			_daeee.StopIfTrueAttr = &_dfcf
			continue
		}
		if _egfe.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_fddb, _ecbgf := _a.ParseBool(_egfe.Value)
			if _ecbgf != nil {
				return _ecbgf
			}
			_daeee.PercentAttr = &_fddb
			continue
		}
		if _egfe.Name.Local == "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_afdg, _dfaf := _a.ParseBool(_egfe.Value)
			if _dfaf != nil {
				return _dfaf
			}
			_daeee.EqualAverageAttr = &_afdg
			continue
		}
	}
_bgaa:
	for {
		_abcd, _fbgcc := d.Token()
		if _fbgcc != nil {
			return _fbgcc
		}
		switch _ageg := _abcd.(type) {
		case _gd.StartElement:
			switch _ageg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				var _dcba string
				if _gcge := d.DecodeElement(&_dcba, &_ageg); _gcge != nil {
					return _gcge
				}
				_daeee.Formula = append(_daeee.Formula, _dcba)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}:
				_daeee.ColorScale = NewCT_ColorScale()
				if _egbe := d.DecodeElement(_daeee.ColorScale, &_ageg); _egbe != nil {
					return _egbe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}:
				_daeee.DataBar = NewCT_DataBar()
				if _aeef := d.DecodeElement(_daeee.DataBar, &_ageg); _aeef != nil {
					return _aeef
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}:
				_daeee.IconSet = NewCT_IconSet()
				if _fad := d.DecodeElement(_daeee.IconSet, &_ageg); _fad != nil {
					return _fad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daeee.ExtLst = NewCT_ExtensionList()
				if _daff := d.DecodeElement(_daeee.ExtLst, &_ageg); _daff != nil {
					return _daff
				}
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0066\u0052u\u006c\u0065 \u0025\u0076", _ageg.Name)
				if _ecgad := d.Skip(); _ecgad != nil {
					return _ecgad
				}
			}
		case _gd.EndElement:
			break _bgaa
		case _gd.CharData:
		}
	}
	return nil
}

func (_dgbad *CT_IconSet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dgbad.IconSetAttr != ST_IconSetTypeUnset {
		_gfdad, _faafa := _dgbad.IconSetAttr.MarshalXMLAttr(_gd.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _faafa != nil {
			return _faafa
		}
		start.Attr = append(start.Attr, _gfdad)
	}
	if _dgbad.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgbad.ShowValueAttr))})
	}
	if _dgbad.PercentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgbad.PercentAttr))})
	}
	if _dgbad.ReverseAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072e\u0076\u0065\u0072\u0073\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgbad.ReverseAttr))})
	}
	e.EncodeToken(start)
	_ffadfe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _bbgfb := range _dgbad.Cfvo {
		e.EncodeElement(_bbgfb, _ffadfe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bdgca *CT_RangePr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bdgca.AutoStartAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdgca.AutoStartAttr))})
	}
	if _bdgca.AutoEndAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061u\u0074\u006f\u0045\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdgca.AutoEndAttr))})
	}
	if _bdgca.GroupByAttr != ST_GroupByUnset {
		_faefd, _gbcff := _bdgca.GroupByAttr.MarshalXMLAttr(_gd.Name{Local: "\u0067r\u006f\u0075\u0070\u0042\u0079"})
		if _gbcff != nil {
			return _gbcff
		}
		start.Attr = append(start.Attr, _faefd)
	}
	if _bdgca.StartNumAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_bdgca.StartNumAttr)})
	}
	if _bdgca.EndNumAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u006e\u0064\u004e\u0075\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_bdgca.EndNumAttr)})
	}
	if _bdgca.StartDateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e"}, Value: _b.Sprintf("\u0025\u0076", *_bdgca.StartDateAttr)})
	}
	if _bdgca.EndDateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065n\u0064\u0044\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdgca.EndDateAttr)})
	}
	if _bdgca.GroupIntervalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_bdgca.GroupIntervalAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_DataValidation() *CT_DataValidation { _edgeff := &CT_DataValidation{}; return _edgeff }

func (_dgcbc ST_CfvoType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dgcbc.String(), start)
}

func (_daaga *CT_Member) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _daaga.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SingleXmlCell and its children
func (_debce *CT_SingleXmlCell) Validate() error {
	return _debce.ValidateWithPath("\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c")
}

type CT_Sheet struct {

	// Sheet Name
	NameAttr string

	// Sheet Tab Id
	SheetIdAttr uint32

	// Visible State
	StateAttr ST_SheetState
	IdAttr    string
}

// Validate validates the CT_Authors and its children
func (_aa *CT_Authors) Validate() error {
	return _aa.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073")
}

func (_dacef ST_SheetState) String() string {
	switch _dacef {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

func NewCT_Mdx() *CT_Mdx { _ecafe := &CT_Mdx{}; _ecafe.FAttr = ST_MdxFunctionType(1); return _ecafe }

// Validate validates the CT_HierarchyUsage and its children
func (_cgac *CT_HierarchyUsage) Validate() error {
	return _cgac.ValidateWithPath("\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065")
}

type ST_WebSourceType byte

// Validate validates the CT_RevisionConflict and its children
func (_adaff *CT_RevisionConflict) Validate() error {
	return _adaff.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074")
}

func (_bce *CT_Borders) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebaf := range start.Attr {
		if _ebaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfcd, _eeda := _a.ParseUint(_ebaf.Value, 10, 32)
			if _eeda != nil {
				return _eeda
			}
			_gca := uint32(_gfcd)
			_bce.CountAttr = &_gca
			continue
		}
	}
_eeff:
	for {
		_aaa, _dee := d.Token()
		if _dee != nil {
			return _dee
		}
		switch _abb := _aaa.(type) {
		case _gd.StartElement:
			switch _abb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_dbb := NewCT_Border()
				if _fcad := d.DecodeElement(_dbb, &_abb); _fcad != nil {
					return _fcad
				}
				_bce.Border = append(_bce.Border, _dbb)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _abb.Name)
				if _cge := d.Skip(); _cge != nil {
					return _cge
				}
			}
		case _gd.EndElement:
			break _eeff
		case _gd.CharData:
		}
	}
	return nil
}

type CT_SheetPr struct {

	// Synch Horizontal
	SyncHorizontalAttr *bool

	// Synch Vertical
	SyncVerticalAttr *bool

	// Synch Reference
	SyncRefAttr *string

	// Transition Formula Evaluation
	TransitionEvaluationAttr *bool

	// Transition Formula Entry
	TransitionEntryAttr *bool

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string

	// Filter Mode
	FilterModeAttr *bool

	// Enable Conditional Formatting Calculations
	EnableFormatConditionsCalculationAttr *bool

	// Sheet Tab Color
	TabColor *CT_Color

	// Outline Properties
	OutlinePr *CT_OutlinePr

	// Page Setup Properties
	PageSetUpPr *CT_PageSetUpPr
}

func NewCT_SheetFormatPr() *CT_SheetFormatPr { _bbbcb := &CT_SheetFormatPr{}; return _bbbcb }

func (_bdcdg *ST_FileType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bdcdg = 0
	case "\u006d\u0061\u0063":
		*_bdcdg = 1
	case "\u0077\u0069\u006e":
		*_bdcdg = 2
	case "\u0064\u006f\u0073":
		*_bdcdg = 3
	case "\u006c\u0069\u006e":
		*_bdcdg = 4
	case "\u006f\u0074\u0068e\u0072":
		*_bdcdg = 5
	}
	return nil
}

func (_cccdb ST_DataValidationType) Validate() error { return _cccdb.ValidateWithPath("") }

func (_fdag *CT_Fill) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bbfbgf:
	for {
		_ffdge, _eagg := d.Token()
		if _eagg != nil {
			return _eagg
		}
		switch _dfeec := _ffdge.(type) {
		case _gd.StartElement:
			switch _dfeec.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}:
				_fdag.PatternFill = NewCT_PatternFill()
				if _ebgc := d.DecodeElement(_fdag.PatternFill, &_dfeec); _ebgc != nil {
					return _ebgc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}:
				_fdag.GradientFill = NewCT_GradientFill()
				if _fdaf := d.DecodeElement(_fdag.GradientFill, &_dfeec); _fdaf != nil {
					return _fdaf
				}
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _dfeec.Name)
				if _eggg := d.Skip(); _eggg != nil {
					return _eggg
				}
			}
		case _gd.EndElement:
			break _bbfbgf
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataBlock and its children, prefixing error messages with path
func (_cccd *CT_MetadataBlock) ValidateWithPath(path string) error {
	for _cfbfg, _egecd := range _cccd.Rc {
		if _bgcgf := _egecd.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0052\u0063\u005b\u0025\u0064]", path, _cfbfg)); _bgcgf != nil {
			return _bgcgf
		}
	}
	return nil
}

// Validate validates the CT_DdeItems and its children
func (_aagbb *CT_DdeItems) Validate() error {
	return _aagbb.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073")
}

// Validate validates the Chartsheet and its children
func (_bafbc *Chartsheet) Validate() error {
	return _bafbc.ValidateWithPath("\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_MeasureDimensionMaps and its children, prefixing error messages with path
func (_fddga *CT_MeasureDimensionMaps) ValidateWithPath(path string) error {
	for _defbg, _cdabd := range _fddga.Map {
		if _fedaf := _cdabd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _defbg)); _fedaf != nil {
			return _fedaf
		}
	}
	return nil
}

func (_bfacd *CT_MdxKPI) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e"}, Value: _b.Sprintf("\u0025\u0076", _bfacd.NAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0070"}, Value: _b.Sprintf("\u0025\u0076", _bfacd.NpAttr)})
	_fgaac, _bfeee := _bfacd.PAttr.MarshalXMLAttr(_gd.Name{Local: "\u0070"})
	if _bfeee != nil {
		return _bfeee
	}
	start.Attr = append(start.Attr, _fgaac)
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FileSharing and its children
func (_egdbc *CT_FileSharing) Validate() error {
	return _egdbc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067")
}

const (
	ST_VolDepTypeUnset         ST_VolDepType = 0
	ST_VolDepTypeRealTimeData  ST_VolDepType = 1
	ST_VolDepTypeOlapFunctions ST_VolDepType = 2
)

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_afeed *CT_Hyperlink) ValidateWithPath(path string) error { return nil }

func NewCT_DdeItem() *CT_DdeItem { _cfabb := &CT_DdeItem{}; return _cfabb }

const (
	ST_ConditionalFormattingOperatorUnset              ST_ConditionalFormattingOperator = 0
	ST_ConditionalFormattingOperatorLessThan           ST_ConditionalFormattingOperator = 1
	ST_ConditionalFormattingOperatorLessThanOrEqual    ST_ConditionalFormattingOperator = 2
	ST_ConditionalFormattingOperatorEqual              ST_ConditionalFormattingOperator = 3
	ST_ConditionalFormattingOperatorNotEqual           ST_ConditionalFormattingOperator = 4
	ST_ConditionalFormattingOperatorGreaterThanOrEqual ST_ConditionalFormattingOperator = 5
	ST_ConditionalFormattingOperatorGreaterThan        ST_ConditionalFormattingOperator = 6
	ST_ConditionalFormattingOperatorBetween            ST_ConditionalFormattingOperator = 7
	ST_ConditionalFormattingOperatorNotBetween         ST_ConditionalFormattingOperator = 8
	ST_ConditionalFormattingOperatorContainsText       ST_ConditionalFormattingOperator = 9
	ST_ConditionalFormattingOperatorNotContains        ST_ConditionalFormattingOperator = 10
	ST_ConditionalFormattingOperatorBeginsWith         ST_ConditionalFormattingOperator = 11
	ST_ConditionalFormattingOperatorEndsWith           ST_ConditionalFormattingOperator = 12
)

func (_abcf *CT_Fills) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _abcf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_abcf.CountAttr)})
	}
	e.EncodeToken(start)
	if _abcf.Fill != nil {
		_daacf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		for _, _ccea := range _abcf.Fill {
			e.EncodeElement(_ccea, _daacf)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ddccg *CT_Tuples) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ddccg.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_ddccg.CAttr)})
	}
	e.EncodeToken(start)
	_ebdcc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0070\u006c"}}
	for _, _dcafc := range _ddccg.Tpl {
		e.EncodeElement(_dcafc, _ebdcc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_edgcb ST_TotalsRowFunction) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_edgcb.String(), start)
}

func (_gcdba *ST_Type) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gcdba = 0
	case "\u006e\u006f\u006e\u0065":
		*_gcdba = 1
	case "\u0061\u006c\u006c":
		*_gcdba = 2
	case "\u0072\u006f\u0077":
		*_gcdba = 3
	case "\u0063\u006f\u006c\u0075\u006d\u006e":
		*_gcdba = 4
	}
	return nil
}

func (_dgagff ST_SheetViewType) String() string {
	switch _dgagff {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case 3:
		return "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}

func (_aggga ST_CellType) Validate() error { return _aggga.ValidateWithPath("") }

// Validate validates the CT_Sets and its children
func (_acfae *CT_Sets) Validate() error {
	return _acfae.ValidateWithPath("\u0043T\u005f\u0053\u0065\u0074\u0073")
}

func (_cbgdg ST_TextVAlign) Validate() error { return _cbgdg.ValidateWithPath("") }

// ValidateWithPath validates the CT_Reviewed and its children, prefixing error messages with path
func (_geacb *CT_Reviewed) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_FileRecoveryPr and its children, prefixing error messages with path
func (_agdga *CT_FileRecoveryPr) ValidateWithPath(path string) error { return nil }

func (_gcfeg *CT_SmartTagTypes) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _gcfeg.SmartTagType != nil {
		_fddfgd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}}
		for _, _dgegd := range _gcfeg.SmartTagType {
			e.EncodeElement(_dgegd, _fddfgd)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dddb *CT_RevisionInsertSheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cffeg := range start.Attr {
		if _cffeg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_bfdbc, _efdaae := _a.ParseUint(_cffeg.Value, 10, 32)
			if _efdaae != nil {
				return _efdaae
			}
			_dddb.SheetIdAttr = uint32(_bfdbc)
			continue
		}
		if _cffeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eddbd, _cdgcf := _cffeg.Value, error(nil)
			if _cdgcf != nil {
				return _cdgcf
			}
			_dddb.NameAttr = _eddbd
			continue
		}
		if _cffeg.Name.Local == "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_dbacb, _afafac := _a.ParseUint(_cffeg.Value, 10, 32)
			if _afafac != nil {
				return _afafac
			}
			_dddb.SheetPositionAttr = uint32(_dbacb)
			continue
		}
		if _cffeg.Name.Local == "\u0072\u0049\u0064" {
			_ecgae, _defgf := _a.ParseUint(_cffeg.Value, 10, 32)
			if _defgf != nil {
				return _defgf
			}
			_aaebf := uint32(_ecgae)
			_dddb.RIdAttr = &_aaebf
			continue
		}
		if _cffeg.Name.Local == "\u0075\u0061" {
			_aaeag, _edbaa := _a.ParseBool(_cffeg.Value)
			if _edbaa != nil {
				return _edbaa
			}
			_dddb.UaAttr = &_aaeag
			continue
		}
		if _cffeg.Name.Local == "\u0072\u0061" {
			_eceae, _ffaca := _a.ParseBool(_cffeg.Value)
			if _ffaca != nil {
				return _ffaca
			}
			_dddb.RaAttr = &_eceae
			continue
		}
	}
	for {
		_fgcaf, _aadgc := d.Token()
		if _aadgc != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073i\u006fn\u0049n\u0073\u0065\u0072\u0074\u0053\u0068\u0065\u0065\u0074\u003a\u0020\u0025\u0073", _aadgc)
		}
		if _dfbag, _dggacd := _fgcaf.(_gd.EndElement); _dggacd && _dfbag.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbfbe *CT_WebPublishItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ffcee := range start.Attr {
		if _ffcee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aadec, _dagfc := _a.ParseUint(_ffcee.Value, 10, 32)
			if _dagfc != nil {
				return _dagfc
			}
			_gaffc := uint32(_aadec)
			_gbfbe.CountAttr = &_gaffc
			continue
		}
	}
_egbec:
	for {
		_dcega, _egdgdc := d.Token()
		if _egdgdc != nil {
			return _egdgdc
		}
		switch _dedaba := _dcega.(type) {
		case _gd.StartElement:
			switch _dedaba.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}:
				_cbced := NewCT_WebPublishItem()
				if _geeega := d.DecodeElement(_cbced, &_dedaba); _geeega != nil {
					return _geeega
				}
				_gbfbe.WebPublishItem = append(_gbfbe.WebPublishItem, _cbced)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _dedaba.Name)
				if _daccad := d.Skip(); _daccad != nil {
					return _daccad
				}
			}
		case _gd.EndElement:
			break _egbec
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_IgnoredErrors() *CT_IgnoredErrors { _ebfdf := &CT_IgnoredErrors{}; return _ebfdf }

func (_gbddba ST_MdxKPIProperty) Validate() error { return _gbddba.ValidateWithPath("") }

func (_fadd *CT_ColHierarchiesUsage) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fadd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fadd.CountAttr)})
	}
	e.EncodeToken(start)
	_efad := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _ggef := range _fadd.ColHierarchyUsage {
		e.EncodeElement(_ggef, _efad)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewEG_ExtensionList() *EG_ExtensionList { _acabg := &EG_ExtensionList{}; return _acabg }

func (_acgcf *CT_PivotAreaReference) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _acgcf.FieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_acgcf.FieldAttr)})
	}
	if _acgcf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_acgcf.CountAttr)})
	}
	if _acgcf.SelectedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.SelectedAttr))})
	}
	if _acgcf.ByPositionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.ByPositionAttr))})
	}
	if _acgcf.RelativeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.RelativeAttr))})
	}
	if _acgcf.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.DefaultSubtotalAttr))})
	}
	if _acgcf.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.SumSubtotalAttr))})
	}
	if _acgcf.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.CountASubtotalAttr))})
	}
	if _acgcf.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.AvgSubtotalAttr))})
	}
	if _acgcf.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.MaxSubtotalAttr))})
	}
	if _acgcf.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.MinSubtotalAttr))})
	}
	if _acgcf.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.ProductSubtotalAttr))})
	}
	if _acgcf.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.CountSubtotalAttr))})
	}
	if _acgcf.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.StdDevSubtotalAttr))})
	}
	if _acgcf.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.StdDevPSubtotalAttr))})
	}
	if _acgcf.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.VarSubtotalAttr))})
	}
	if _acgcf.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_acgcf.VarPSubtotalAttr))})
	}
	e.EncodeToken(start)
	if _acgcf.X != nil {
		_dgdga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _abddd := range _acgcf.X {
			e.EncodeElement(_abddd, _dgdga)
		}
	}
	if _acgcf.ExtLst != nil {
		_geda := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_acgcf.ExtLst, _geda)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableStyle and its children
func (_fgegc *CT_TableStyle) Validate() error {
	return _fgegc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_Parameter and its children
func (_ebccb *CT_Parameter) Validate() error {
	return _ebccb.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072")
}

func (_adbef *CT_TableColumns) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _adbef.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_adbef.CountAttr)})
	}
	e.EncodeToken(start)
	_bdccf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e"}}
	for _, _ggccg := range _adbef.TableColumn {
		e.EncodeElement(_ggccg, _bdccf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_IconFilter and its children
func (_edadc *CT_IconFilter) Validate() error {
	return _edadc.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072")
}

func (_bddacf ST_FieldSortType) Validate() error { return _bddacf.ValidateWithPath("") }

func (_cfgbb *CT_MergeCells) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cfgbb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cfgbb.CountAttr)})
	}
	e.EncodeToken(start)
	_cacbd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003am\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c"}}
	for _, _cbadd := range _cfgbb.MergeCell {
		e.EncodeElement(_cbadd, _cacbd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DbPr and its children, prefixing error messages with path
func (_egdee *CT_DbPr) ValidateWithPath(path string) error { return nil }

func (_bafca ST_DvAspect) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bafca.String(), start)
}

// ValidateWithPath validates the CT_PivotCacheDefinition and its children, prefixing error messages with path
func (_eggaa *CT_PivotCacheDefinition) ValidateWithPath(path string) error {
	if _eaeeg := _eggaa.CacheSource.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"); _eaeeg != nil {
		return _eaeeg
	}
	if _faggg := _eggaa.CacheFields.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _faggg != nil {
		return _faggg
	}
	if _eggaa.CacheHierarchies != nil {
		if _bafcg := _eggaa.CacheHierarchies.ValidateWithPath(path + "\u002f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _bafcg != nil {
			return _bafcg
		}
	}
	if _eggaa.Kpis != nil {
		if _gdaba := _eggaa.Kpis.ValidateWithPath(path + "\u002f\u004b\u0070i\u0073"); _gdaba != nil {
			return _gdaba
		}
	}
	if _eggaa.TupleCache != nil {
		if _abade := _eggaa.TupleCache.ValidateWithPath(path + "/\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"); _abade != nil {
			return _abade
		}
	}
	if _eggaa.CalculatedItems != nil {
		if _aagbf := _eggaa.CalculatedItems.ValidateWithPath(path + "\u002f\u0043a\u006c\u0063\u0075l\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _aagbf != nil {
			return _aagbf
		}
	}
	if _eggaa.CalculatedMembers != nil {
		if _bgcgac := _eggaa.CalculatedMembers.ValidateWithPath(path + "\u002fC\u0061l\u0063\u0075\u006c\u0061\u0074e\u0064\u004de\u006d\u0062\u0065\u0072\u0073"); _bgcgac != nil {
			return _bgcgac
		}
	}
	if _eggaa.Dimensions != nil {
		if _fgacdc := _eggaa.Dimensions.ValidateWithPath(path + "/\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"); _fgacdc != nil {
			return _fgacdc
		}
	}
	if _eggaa.MeasureGroups != nil {
		if _dddfe := _eggaa.MeasureGroups.ValidateWithPath(path + "\u002f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047r\u006f\u0075\u0070\u0073"); _dddfe != nil {
			return _dddfe
		}
	}
	if _eggaa.Maps != nil {
		if _eeacb := _eggaa.Maps.ValidateWithPath(path + "\u002f\u004d\u0061p\u0073"); _eeacb != nil {
			return _eeacb
		}
	}
	if _eggaa.ExtLst != nil {
		if _efbfd := _eggaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efbfd != nil {
			return _efbfd
		}
	}
	return nil
}

type CT_Boolean struct {

	// Value
	VAttr bool

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Indexes
	X []*CT_X
}

func (_bfdg *CT_CalculatedItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bfdg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bfdg.CountAttr)})
	}
	e.EncodeToken(start)
	_ffcg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}}
	for _, _aecb := range _bfdg.CalculatedItem {
		e.EncodeElement(_aecb, _ffcg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_CustomSheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Color Id
	ColorIdAttr *uint32

	// Show Page Breaks
	ShowPageBreaksAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColAttr *bool

	// Show Outline Symbols
	OutlineSymbolsAttr *bool

	// Show Zero Values
	ZeroValuesAttr *bool

	// Fit To Page
	FitToPageAttr *bool

	// Print Area Defined
	PrintAreaAttr *bool

	// Filtered List
	FilterAttr *bool

	// Show AutoFitler Drop Down Controls
	ShowAutoFilterAttr *bool

	// Hidden Rows
	HiddenRowsAttr *bool

	// Hidden Columns
	HiddenColumnsAttr *bool

	// Visible State
	StateAttr ST_SheetState

	// Filter
	FilterUniqueAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Show Ruler
	ShowRulerAttr *bool

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Pane Split Information
	Pane *CT_Pane

	// Selection
	Selection *CT_Selection

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Page Margins
	PageMargins *CT_PageMargins

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// AutoFilter Settings
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

func NewCT_MetadataTypes() *CT_MetadataTypes { _cggcf := &CT_MetadataTypes{}; return _cggcf }

type CT_MeasureDimensionMap struct {

	// Measure Group Id
	MeasureGroupAttr *uint32

	// Dimension Id
	DimensionAttr *uint32
}

func (_gcdaa *CT_DiscretePr) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _eaeea := range start.Attr {
		if _eaeea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddafe, _febf := _a.ParseUint(_eaeea.Value, 10, 32)
			if _febf != nil {
				return _febf
			}
			_fddg := uint32(_ddafe)
			_gcdaa.CountAttr = &_fddg
			continue
		}
	}
_bcccc:
	for {
		_ebaff, _bedgdb := d.Token()
		if _bedgdb != nil {
			return _bedgdb
		}
		switch _abab := _ebaff.(type) {
		case _gd.StartElement:
			switch _abab.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_eegea := NewCT_Index()
				if _afgc := d.DecodeElement(_eegea, &_abab); _afgc != nil {
					return _afgc
				}
				_gcdaa.X = append(_gcdaa.X, _eegea)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072 \u0025\u0076", _abab.Name)
				if _bbagd := d.Skip(); _bbagd != nil {
					return _bbagd
				}
			}
		case _gd.EndElement:
			break _bcccc
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheFields and its children, prefixing error messages with path
func (_dgef *CT_CacheFields) ValidateWithPath(path string) error {
	for _bde, _fbgd := range _dgef.CacheField {
		if _eea := _fbgd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _bde)); _eea != nil {
			return _eea
		}
	}
	return nil
}

func (_cdefdc *CT_PhoneticRun) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _eeaaf := range start.Attr {
		if _eeaaf.Name.Local == "\u0073\u0062" {
			_bbfad, _deced := _a.ParseUint(_eeaaf.Value, 10, 32)
			if _deced != nil {
				return _deced
			}
			_cdefdc.SbAttr = uint32(_bbfad)
			continue
		}
		if _eeaaf.Name.Local == "\u0065\u0062" {
			_cdgfc, _accab := _a.ParseUint(_eeaaf.Value, 10, 32)
			if _accab != nil {
				return _accab
			}
			_cdefdc.EbAttr = uint32(_cdgfc)
			continue
		}
	}
_bcfacd:
	for {
		_fffcd, _fgfcb := d.Token()
		if _fgfcb != nil {
			return _fgfcb
		}
		switch _bbcb := _fffcd.(type) {
		case _gd.StartElement:
			switch _bbcb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _dagea := d.DecodeElement(&_cdefdc.T, &_bbcb); _dagea != nil {
					return _dagea
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069c\u0052u\u006e\u0020\u0025\u0076", _bbcb.Name)
				if _feafc := d.Skip(); _feafc != nil {
					return _feafc
				}
			}
		case _gd.EndElement:
			break _bcfacd
		case _gd.CharData:
		}
	}
	return nil
}

type CT_WebPublishObjects struct {

	// Count
	CountAttr *uint32

	// Web Publishing Object
	WebPublishObject []*CT_WebPublishObject
}

// Validate validates the CT_ExternalDefinedNames and its children
func (_eaea *CT_ExternalDefinedNames) Validate() error {
	return _eaea.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}

func (_babdf *Table) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065"
	return _babdf.CT_Table.MarshalXML(e, start)
}

func (_ddcdde ST_DataConsolidateFunction) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_ddcdde.String(), start)
}

func (_ggfggb *CT_PivotTableStyle) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ggfggb.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ggfggb.NameAttr)})
	}
	if _ggfggb.ShowRowHeadersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ggfggb.ShowRowHeadersAttr))})
	}
	if _ggfggb.ShowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ggfggb.ShowColHeadersAttr))})
	}
	if _ggfggb.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ggfggb.ShowRowStripesAttr))})
	}
	if _ggfggb.ShowColStripesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ggfggb.ShowColStripesAttr))})
	}
	if _ggfggb.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ggfggb.ShowLastColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ggbded *CT_FontSize) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _ggbded.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_edcgf *CT_Items) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _edcgf.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_edcgf.CountAttr)})
	}
	e.EncodeToken(start)
	_cbfcbc := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0069\u0074\u0065\u006d"}}
	for _, _cbba := range _edcgf.Item {
		e.EncodeElement(_cbba, _cbfcbc)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalRow and its children
func (_fbfa *CT_ExternalRow) Validate() error {
	return _fbfa.ValidateWithPath("\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077")
}

func (_cgecd *CT_Connection) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fcade := range start.Attr {
		if _fcade.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_dceb, _dabb := _a.ParseBool(_fcade.Value)
			if _dabb != nil {
				return _dabb
			}
			_cgecd.DeletedAttr = &_dceb
			continue
		}
		if _fcade.Name.Local == "\u0069\u0064" {
			_dbeag, _gcac := _a.ParseUint(_fcade.Value, 10, 32)
			if _gcac != nil {
				return _gcac
			}
			_cgecd.IdAttr = uint32(_dbeag)
			continue
		}
		if _fcade.Name.Local == "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065" {
			_agdd, _fgcfb := _a.ParseBool(_fcade.Value)
			if _fgcfb != nil {
				return _fgcfb
			}
			_cgecd.OnlyUseConnectionFileAttr = &_agdd
			continue
		}
		if _fcade.Name.Local == "\u006fd\u0063\u0046\u0069\u006c\u0065" {
			_gdcda, _gffd := _fcade.Value, error(nil)
			if _gffd != nil {
				return _gffd
			}
			_cgecd.OdcFileAttr = &_gdcda
			continue
		}
		if _fcade.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064" {
			_ebcdf, _bcgf := _a.ParseBool(_fcade.Value)
			if _bcgf != nil {
				return _bcgf
			}
			_cgecd.BackgroundAttr = &_ebcdf
			continue
		}
		if _fcade.Name.Local == "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_adee, _egga := _a.ParseUint(_fcade.Value, 10, 32)
			if _egga != nil {
				return _egga
			}
			_deeed := uint32(_adee)
			_cgecd.IntervalAttr = &_deeed
			continue
		}
		if _fcade.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_abbbc, _ecad := _a.ParseBool(_fcade.Value)
			if _ecad != nil {
				return _ecad
			}
			_cgecd.RefreshOnLoadAttr = &_abbbc
			continue
		}
		if _fcade.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_dbbee, _adeaa := _fcade.Value, error(nil)
			if _adeaa != nil {
				return _adeaa
			}
			_cgecd.DescriptionAttr = &_dbbee
			continue
		}
		if _fcade.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_fgdg, _gccc := _a.ParseBool(_fcade.Value)
			if _gccc != nil {
				return _gccc
			}
			_cgecd.SaveDataAttr = &_fgdg
			continue
		}
		if _fcade.Name.Local == "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064" {
			_gbbb, _adff := _a.ParseUint(_fcade.Value, 10, 32)
			if _adff != nil {
				return _adff
			}
			_fccb := uint32(_gbbb)
			_cgecd.ReconnectionMethodAttr = &_fccb
			continue
		}
		if _fcade.Name.Local == "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073" {
			_cgecd.CredentialsAttr.UnmarshalXMLAttr(_fcade)
			continue
		}
		if _fcade.Name.Local == "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e" {
			_accacb, _dacf := _a.ParseBool(_fcade.Value)
			if _dacf != nil {
				return _dacf
			}
			_cgecd.KeepAliveAttr = &_accacb
			continue
		}
		if _fcade.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_gafeb, _ecbgg := _fcade.Value, error(nil)
			if _ecbgg != nil {
				return _ecbgg
			}
			_cgecd.SourceFileAttr = &_gafeb
			continue
		}
		if _fcade.Name.Local == "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064" {
			_cegc, _dcea := _fcade.Value, error(nil)
			if _dcea != nil {
				return _dcea
			}
			_cgecd.SingleSignOnIdAttr = &_cegc
			continue
		}
		if _fcade.Name.Local == "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_ggbd, _fdbe := _a.ParseBool(_fcade.Value)
			if _fdbe != nil {
				return _fdbe
			}
			_cgecd.SavePasswordAttr = &_ggbd
			continue
		}
		if _fcade.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ageb, _dcf := _fcade.Value, error(nil)
			if _dcf != nil {
				return _dcf
			}
			_cgecd.NameAttr = &_ageb
			continue
		}
		if _fcade.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_eageb, _agae := _a.ParseUint(_fcade.Value, 10, 8)
			if _agae != nil {
				return _agae
			}
			_cgecd.RefreshedVersionAttr = uint8(_eageb)
			continue
		}
		if _fcade.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gcdgc, _gfge := _a.ParseUint(_fcade.Value, 10, 8)
			if _gfge != nil {
				return _gfge
			}
			_edbff := uint8(_gcdgc)
			_cgecd.MinRefreshableVersionAttr = &_edbff
			continue
		}
		if _fcade.Name.Local == "\u006e\u0065\u0077" {
			_becdff, _eggec := _a.ParseBool(_fcade.Value)
			if _eggec != nil {
				return _eggec
			}
			_cgecd.NewAttr = &_becdff
			continue
		}
		if _fcade.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ceeaa, _egdf := _a.ParseUint(_fcade.Value, 10, 32)
			if _egdf != nil {
				return _egdf
			}
			_gdeb := uint32(_ceeaa)
			_cgecd.TypeAttr = &_gdeb
			continue
		}
	}
_efda:
	for {
		_gfadd, _cgcc := d.Token()
		if _cgcc != nil {
			return _cgcc
		}
		switch _eagcf := _gfadd.(type) {
		case _gd.StartElement:
			switch _eagcf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}:
				_cgecd.DbPr = NewCT_DbPr()
				if _feeae := d.DecodeElement(_cgecd.DbPr, &_eagcf); _feeae != nil {
					return _feeae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}:
				_cgecd.OlapPr = NewCT_OlapPr()
				if _agef := d.DecodeElement(_cgecd.OlapPr, &_eagcf); _agef != nil {
					return _agef
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_cgecd.WebPr = NewCT_WebPr()
				if _efdgb := d.DecodeElement(_cgecd.WebPr, &_eagcf); _efdgb != nil {
					return _efdgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}:
				_cgecd.TextPr = NewCT_TextPr()
				if _efdc := d.DecodeElement(_cgecd.TextPr, &_eagcf); _efdc != nil {
					return _efdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}:
				_cgecd.Parameters = NewCT_Parameters()
				if _fdgb := d.DecodeElement(_cgecd.Parameters, &_eagcf); _fdgb != nil {
					return _fdgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgecd.ExtLst = NewCT_ExtensionList()
				if _bdeeb := d.DecodeElement(_cgecd.ExtLst, &_eagcf); _bdeeb != nil {
					return _bdeeb
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e \u0025\u0076", _eagcf.Name)
				if _gcbf := d.Skip(); _gcbf != nil {
					return _gcbf
				}
			}
		case _gd.EndElement:
			break _efda
		case _gd.CharData:
		}
	}
	return nil
}

func (_fcafe *CT_ServerFormat) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ggeabc := range start.Attr {
		if _ggeabc.Name.Local == "\u0063u\u006c\u0074\u0075\u0072\u0065" {
			_cegade, _fgdbe := _ggeabc.Value, error(nil)
			if _fgdbe != nil {
				return _fgdbe
			}
			_fcafe.CultureAttr = &_cegade
			continue
		}
		if _ggeabc.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_adeeg, _aefef := _ggeabc.Value, error(nil)
			if _aefef != nil {
				return _aefef
			}
			_fcafe.FormatAttr = &_adeeg
			continue
		}
	}
	for {
		_dbeac, _bbaagg := d.Token()
		if _bbaagg != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072F\u006f\u0072\u006da\u0074:\u0020\u0025\u0073", _bbaagg)
		}
		if _dgaga, _cbgec := _dbeac.(_gd.EndElement); _cbgec && _dgaga.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_WorkbookPr() *CT_WorkbookPr { _bfbbbf := &CT_WorkbookPr{}; return _bfbbbf }

func (_eagef *CT_TableStyles) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _eagef.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_eagef.CountAttr)})
	}
	if _eagef.DefaultTableStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_eagef.DefaultTableStyleAttr)})
	}
	if _eagef.DefaultPivotStyleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_eagef.DefaultPivotStyleAttr)})
	}
	e.EncodeToken(start)
	if _eagef.TableStyle != nil {
		_gfbec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		for _, _eadbc := range _eagef.TableStyle {
			e.EncodeElement(_eadbc, _gfbec)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OlapPr and its children
func (_cfeba *CT_OlapPr) Validate() error {
	return _cfeba.ValidateWithPath("\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r")
}

func (_afced *CT_PageFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cdbbd := range start.Attr {
		if _cdbbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cgefe, _fbdcf := _a.ParseUint(_cdbbd.Value, 10, 32)
			if _fbdcf != nil {
				return _fbdcf
			}
			_abcee := uint32(_cgefe)
			_afced.CountAttr = &_abcee
			continue
		}
	}
_acada:
	for {
		_cccg, _dbbef := d.Token()
		if _dbbef != nil {
			return _dbbef
		}
		switch _cbcbe := _cccg.(type) {
		case _gd.StartElement:
			switch _cbcbe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}:
				_gbgefc := NewCT_PageField()
				if _fdcfg := d.DecodeElement(_gbgefc, &_cbcbe); _fdcfg != nil {
					return _fdcfg
				}
				_afced.PageField = append(_afced.PageField, _gbgefc)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _cbcbe.Name)
				if _ecabd := d.Skip(); _ecabd != nil {
					return _ecabd
				}
			}
		case _gd.EndElement:
			break _acada
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_QueryTableField and its children
func (_acbcf *CT_QueryTableField) Validate() error {
	return _acbcf.ValidateWithPath("\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064")
}

func (_ebacc *CT_MapInfo) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dadfc := range start.Attr {
		if _dadfc.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_baebb, _acffb := _dadfc.Value, error(nil)
			if _acffb != nil {
				return _acffb
			}
			_ebacc.SelectionNamespacesAttr = _baebb
			continue
		}
	}
_cbaef:
	for {
		_fcca, _fcff := d.Token()
		if _fcff != nil {
			return _fcff
		}
		switch _adgce := _fcca.(type) {
		case _gd.StartElement:
			switch _adgce.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_bfcfg := NewCT_Schema()
				if _adbfe := d.DecodeElement(_bfcfg, &_adgce); _adbfe != nil {
					return _adbfe
				}
				_ebacc.Schema = append(_ebacc.Schema, _bfcfg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_ffebg := NewCT_Map()
				if _aagdg := d.DecodeElement(_ffebg, &_adgce); _aagdg != nil {
					return _aagdg
				}
				_ebacc.Map = append(_ebacc.Map, _ffebg)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0061\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _adgce.Name)
				if _cdec := d.Skip(); _cdec != nil {
					return _cdec
				}
			}
		case _gd.EndElement:
			break _cbaef
		case _gd.CharData:
		}
	}
	return nil
}

func (_eefeac ST_OleUpdate) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_eefeac.String(), start)
}

// ValidateWithPath validates the CT_FunctionGroup and its children, prefixing error messages with path
func (_febcc *CT_FunctionGroup) ValidateWithPath(path string) error { return nil }

func (_dcade *CT_CustomWorkbookView) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dcade.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _feebd := range start.Attr {
		if _feebd.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_ffeg, _gecd := _a.ParseBool(_feebd.Value)
			if _gecd != nil {
				return _gecd
			}
			_dcade.ShowVerticalScrollAttr = &_ffeg
			continue
		}
		if _feebd.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_accc, _dgfd := _a.ParseBool(_feebd.Value)
			if _dgfd != nil {
				return _dgfd
			}
			_dcade.ShowSheetTabsAttr = &_accc
			continue
		}
		if _feebd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_egae, _agee := _feebd.Value, error(nil)
			if _agee != nil {
				return _agee
			}
			_dcade.GuidAttr = _egae
			continue
		}
		if _feebd.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_beca, _bcac := _a.ParseInt(_feebd.Value, 10, 32)
			if _bcac != nil {
				return _bcac
			}
			_bcgff := int32(_beca)
			_dcade.XWindowAttr = &_bcgff
			continue
		}
		if _feebd.Name.Local == "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_fdfbbd, _eggdb := _a.ParseUint(_feebd.Value, 10, 32)
			if _eggdb != nil {
				return _eggdb
			}
			_fcee := uint32(_fdfbbd)
			_dcade.MergeIntervalAttr = &_fcee
			continue
		}
		if _feebd.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_deca, _adgad := _a.ParseInt(_feebd.Value, 10, 32)
			if _adgad != nil {
				return _adgad
			}
			_acgdcc := int32(_deca)
			_dcade.YWindowAttr = &_acgdcc
			continue
		}
		if _feebd.Name.Local == "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063" {
			_gcgg, _cbda := _a.ParseBool(_feebd.Value)
			if _cbda != nil {
				return _cbda
			}
			_dcade.OnlySyncAttr = &_gcgg
			continue
		}
		if _feebd.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_edcbg, _fdaaf := _a.ParseUint(_feebd.Value, 10, 32)
			if _fdaaf != nil {
				return _fdaaf
			}
			_dcade.WindowWidthAttr = uint32(_edcbg)
			continue
		}
		if _feebd.Name.Local == "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073" {
			_baebf, _agfaf := _a.ParseBool(_feebd.Value)
			if _agfaf != nil {
				return _agfaf
			}
			_dcade.IncludePrintSettingsAttr = &_baebf
			continue
		}
		if _feebd.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_addec, _ccbd := _a.ParseUint(_feebd.Value, 10, 32)
			if _ccbd != nil {
				return _ccbd
			}
			_dcade.WindowHeightAttr = uint32(_addec)
			continue
		}
		if _feebd.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_edada, _cgee := _a.ParseUint(_feebd.Value, 10, 32)
			if _cgee != nil {
				return _cgee
			}
			_dfgfe := uint32(_edada)
			_dcade.TabRatioAttr = &_dfgfe
			continue
		}
		if _feebd.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072" {
			_eace, _bddg := _a.ParseBool(_feebd.Value)
			if _bddg != nil {
				return _bddg
			}
			_dcade.ShowFormulaBarAttr = &_eace
			continue
		}
		if _feebd.Name.Local == "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e" {
			_cadc, _dafbg := _a.ParseBool(_feebd.Value)
			if _dafbg != nil {
				return _dafbg
			}
			_dcade.ChangesSavedWinAttr = &_cadc
			continue
		}
		if _feebd.Name.Local == "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d" {
			_bfebcb, _deccg := _a.ParseBool(_feebd.Value)
			if _deccg != nil {
				return _deccg
			}
			_dcade.MaximizedAttr = &_bfebcb
			continue
		}
		if _feebd.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_dcade.ShowCommentsAttr.UnmarshalXMLAttr(_feebd)
			continue
		}
		if _feebd.Name.Local == "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065" {
			_afcf, _daccd := _a.ParseBool(_feebd.Value)
			if _daccd != nil {
				return _daccd
			}
			_dcade.AutoUpdateAttr = &_afcf
			continue
		}
		if _feebd.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_fccc, _fcdc := _a.ParseUint(_feebd.Value, 10, 32)
			if _fcdc != nil {
				return _fcdc
			}
			_dcade.ActiveSheetIdAttr = uint32(_fccc)
			continue
		}
		if _feebd.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_affbe, _badaf := _a.ParseBool(_feebd.Value)
			if _badaf != nil {
				return _badaf
			}
			_dcade.ShowHorizontalScrollAttr = &_affbe
			continue
		}
		if _feebd.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072" {
			_dbff, _gfgdg := _a.ParseBool(_feebd.Value)
			if _gfgdg != nil {
				return _gfgdg
			}
			_dcade.ShowStatusbarAttr = &_dbff
			continue
		}
		if _feebd.Name.Local == "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077" {
			_bfbdd, _fbccg := _a.ParseBool(_feebd.Value)
			if _fbccg != nil {
				return _fbccg
			}
			_dcade.PersonalViewAttr = &_bfbdd
			continue
		}
		if _feebd.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_agacc, _aedcb := _a.ParseBool(_feebd.Value)
			if _aedcb != nil {
				return _aedcb
			}
			_dcade.MinimizedAttr = &_agacc
			continue
		}
		if _feebd.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_dcade.ShowObjectsAttr.UnmarshalXMLAttr(_feebd)
			continue
		}
		if _feebd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_daga, _fcfgc := _feebd.Value, error(nil)
			if _fcfgc != nil {
				return _fcfgc
			}
			_dcade.NameAttr = _daga
			continue
		}
		if _feebd.Name.Local == "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c" {
			_fbfcc, _cbbce := _a.ParseBool(_feebd.Value)
			if _cbbce != nil {
				return _cbbce
			}
			_dcade.IncludeHiddenRowColAttr = &_fbfcc
			continue
		}
	}
_gaaa:
	for {
		_bcca, _caff := d.Token()
		if _caff != nil {
			return _caff
		}
		switch _cecgb := _bcca.(type) {
		case _gd.StartElement:
			switch _cecgb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcade.ExtLst = NewCT_ExtensionList()
				if _edcda := d.DecodeElement(_dcade.ExtLst, &_cecgb); _edcda != nil {
					return _edcda
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _cecgb.Name)
				if _bbgab := d.Skip(); _bbgab != nil {
					return _bbgab
				}
			}
		case _gd.EndElement:
			break _gaaa
		case _gd.CharData:
		}
	}
	return nil
}

func (_caaagb *CT_XmlCellPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _caaagb.IdAttr)})
	if _caaagb.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_caaagb.UniqueNameAttr)})
	}
	e.EncodeToken(start)
	_bfaba := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0050\u0072"}}
	e.EncodeElement(_caaagb.XmlPr, _bfaba)
	if _caaagb.ExtLst != nil {
		_deffbd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_caaagb.ExtLst, _deffbd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dbggg *CT_Groups) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dbggg.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dbggg.CountAttr)})
	}
	e.EncodeToken(start)
	_aedd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070"}}
	for _, _eedda := range _dbggg.Group {
		e.EncodeElement(_eedda, _aedd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Dxfs and its children
func (_eacff *CT_Dxfs) Validate() error {
	return _eacff.ValidateWithPath("\u0043T\u005f\u0044\u0078\u0066\u0073")
}

// Validate validates the CT_ColFields and its children
func (_afee *CT_ColFields) Validate() error {
	return _afee.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073")
}

func (_geaee ST_FormulaExpression) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_geaee.String(), start)
}

func (_dbfcb ST_ExternalConnectionType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dbfcb.String(), start)
}

func (_caega ST_rwColActionType) Validate() error { return _caega.ValidateWithPath("") }

func (_dgea *CT_CalculatedMembers) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _efc := range start.Attr {
		if _efc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecbg, _cgd := _a.ParseUint(_efc.Value, 10, 32)
			if _cgd != nil {
				return _cgd
			}
			_efg := uint32(_ecbg)
			_dgea.CountAttr = &_efg
			continue
		}
	}
_fgag:
	for {
		_defg, _efac := d.Token()
		if _efac != nil {
			return _efac
		}
		switch _efcc := _defg.(type) {
		case _gd.StartElement:
			switch _efcc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_aafe := NewCT_CalculatedMember()
				if _gfeg := d.DecodeElement(_aafe, &_efcc); _gfeg != nil {
					return _gfeg
				}
				_dgea.CalculatedMember = append(_dgea.CalculatedMember, _aafe)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _efcc.Name)
				if _dcca := d.Skip(); _dcca != nil {
					return _dcca
				}
			}
		case _gd.EndElement:
			break _fgag
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_GroupMember() *CT_GroupMember { _ecdc := &CT_GroupMember{}; return _ecdc }

func NewCT_TextField() *CT_TextField { _fffedg := &CT_TextField{}; return _fffedg }

// Validate validates the CT_PageSetUpPr and its children
func (_gagb *CT_PageSetUpPr) Validate() error {
	return _gagb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072")
}

func (_afccc *CT_RowFields) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _afccc.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_afccc.CountAttr)})
	}
	e.EncodeToken(start)
	_cbcgf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _aedga := range _afccc.Field {
		e.EncodeElement(_aedga, _cbcgf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ceaef *CT_Extension) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _agcd := range start.Attr {
		if _agcd.Name.Local == "\u0075\u0072\u0069" {
			_fdedf, _degc := _agcd.Value, error(nil)
			if _degc != nil {
				return _degc
			}
			_ceaef.UriAttr = &_fdedf
			continue
		}
	}
_fagdd:
	for {
		_ggbfg, _dceea := d.Token()
		if _dceea != nil {
			return _dceea
		}
		switch _acgef := _ggbfg.(type) {
		case _gd.StartElement:
			switch _acgef.Name {
			default:
				if _bgdef, _egffab := _e.CreateElement(_acgef); _egffab != nil {
					return _egffab
				} else {
					if _effd := d.DecodeElement(_bgdef, &_acgef); _effd != nil {
						return _effd
					}
					_ceaef.Any = _bgdef
				}
			}
		case _gd.EndElement:
			break _fagdd
		case _gd.CharData:
		}
	}
	return nil
}

func (_ebfbe ST_WebSourceType) String() string {
	switch _ebfbe {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0065e\u0074"
	case 2:
		return "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case 3:
		return "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0061\u006eg\u0065"
	case 5:
		return "\u0063\u0068\u0061r\u0074"
	case 6:
		return "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case 7:
		return "\u0071\u0075\u0065r\u0079"
	case 8:
		return "\u006c\u0061\u0062e\u006c"
	}
	return ""
}

type ST_DateTimeGrouping byte

// Validate validates the CT_VolType and its children
func (_efabb *CT_VolType) Validate() error {
	return _efabb.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065")
}

func (_faeca ST_DataValidationImeMode) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cdaca := _gd.Attr{}
	_cdaca.Name = name
	switch _faeca {
	case ST_DataValidationImeModeUnset:
		_cdaca.Value = ""
	case ST_DataValidationImeModeNoControl:
		_cdaca.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_DataValidationImeModeOff:
		_cdaca.Value = "\u006f\u0066\u0066"
	case ST_DataValidationImeModeOn:
		_cdaca.Value = "\u006f\u006e"
	case ST_DataValidationImeModeDisabled:
		_cdaca.Value = "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case ST_DataValidationImeModeHiragana:
		_cdaca.Value = "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullKatakana:
		_cdaca.Value = "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeHalfKatakana:
		_cdaca.Value = "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullAlpha:
		_cdaca.Value = "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeHalfAlpha:
		_cdaca.Value = "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeFullHangul:
		_cdaca.Value = "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case ST_DataValidationImeModeHalfHangul:
		_cdaca.Value = "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return _cdaca, nil
}

type CT_PivotCache struct {

	// PivotCache Id
	CacheIdAttr uint32
	IdAttr      string
}

// ValidateWithPath validates the CT_DataRef and its children, prefixing error messages with path
func (_egaec *CT_DataRef) ValidateWithPath(path string) error { return nil }

func NewCT_DataFields() *CT_DataFields { _ecdaa := &CT_DataFields{}; return _ecdaa }

// ValidateWithPath validates the CT_RevisionRowColumn and its children, prefixing error messages with path
func (_ccfga *CT_RevisionRowColumn) ValidateWithPath(path string) error {
	if _ccfga.ActionAttr == ST_rwColActionTypeUnset {
		return _b.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eagge := _ccfga.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _eagge != nil {
		return _eagge
	}
	for _gegbb, _eggga := range _ccfga.Undo {
		if _cedbc := _eggga.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _gegbb)); _cedbc != nil {
			return _cedbc
		}
	}
	for _fgcgb, _deccf := range _ccfga.Rcc {
		if _daadcg := _deccf.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _fgcgb)); _daadcg != nil {
			return _daadcg
		}
	}
	for _dabfc, _acdecd := range _ccfga.Rfmt {
		if _dagddg := _acdecd.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _dabfc)); _dagddg != nil {
			return _dagddg
		}
	}
	return nil
}

func (_bffdf *CT_SingleXmlCell) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bffdf.IdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", _bffdf.RAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bffdf.ConnectionIdAttr)})
	e.EncodeToken(start)
	_gbfac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ax\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"}}
	e.EncodeElement(_bffdf.XmlCellPr, _gbfac)
	if _bffdf.ExtLst != nil {
		_cddab := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bffdf.ExtLst, _cddab)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_agbed *CT_SheetView) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _deeff := range start.Attr {
		if _deeff.Name.Local == "\u0076\u0069\u0065\u0077" {
			_agbed.ViewAttr.UnmarshalXMLAttr(_deeff)
			continue
		}
		if _deeff.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_bbbfa, _gaafbb := _deeff.Value, error(nil)
			if _gaafbb != nil {
				return _gaafbb
			}
			_agbed.TopLeftCellAttr = &_bbbfa
			continue
		}
		if _deeff.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_cbedec, _cbaec := _a.ParseBool(_deeff.Value)
			if _cbaec != nil {
				return _cbaec
			}
			_agbed.ShowFormulasAttr = &_cbedec
			continue
		}
		if _deeff.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_ffgeg, _gbddb := _a.ParseUint(_deeff.Value, 10, 32)
			if _gbddb != nil {
				return _gbddb
			}
			_geace := uint32(_ffgeg)
			_agbed.ColorIdAttr = &_geace
			continue
		}
		if _deeff.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_bcdfe, _dbggc := _a.ParseBool(_deeff.Value)
			if _dbggc != nil {
				return _dbggc
			}
			_agbed.ShowRowColHeadersAttr = &_bcdfe
			continue
		}
		if _deeff.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_aegef, _fdegb := _a.ParseUint(_deeff.Value, 10, 32)
			if _fdegb != nil {
				return _fdegb
			}
			_adeba := uint32(_aegef)
			_agbed.ZoomScaleAttr = &_adeba
			continue
		}
		if _deeff.Name.Local == "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074" {
			_aaded, _ffdcc := _a.ParseBool(_deeff.Value)
			if _ffdcc != nil {
				return _ffdcc
			}
			_agbed.RightToLeftAttr = &_aaded
			continue
		}
		if _deeff.Name.Local == "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c" {
			_gdba, _bbcgb := _a.ParseUint(_deeff.Value, 10, 32)
			if _bbcgb != nil {
				return _bbcgb
			}
			_gccfa := uint32(_gdba)
			_agbed.ZoomScaleNormalAttr = &_gccfa
			continue
		}
		if _deeff.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_eabed, _eeddf := _a.ParseBool(_deeff.Value)
			if _eeddf != nil {
				return _eeddf
			}
			_agbed.ShowRulerAttr = &_eabed
			continue
		}
		if _deeff.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_cdaec, _eggad := _a.ParseUint(_deeff.Value, 10, 32)
			if _eggad != nil {
				return _eggad
			}
			_cabgcd := uint32(_cdaec)
			_agbed.ZoomScaleSheetLayoutViewAttr = &_cabgcd
			continue
		}
		if _deeff.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_bcge, _cebgc := _a.ParseUint(_deeff.Value, 10, 32)
			if _cebgc != nil {
				return _cebgc
			}
			_agbed.WorkbookViewIdAttr = uint32(_bcge)
			continue
		}
		if _deeff.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_cacdbe, _bdfac := _a.ParseBool(_deeff.Value)
			if _bdfac != nil {
				return _bdfac
			}
			_agbed.TabSelectedAttr = &_cacdbe
			continue
		}
		if _deeff.Name.Local == "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_ceaedf, _egeea := _a.ParseUint(_deeff.Value, 10, 32)
			if _egeea != nil {
				return _egeea
			}
			_cefbac := uint32(_ceaedf)
			_agbed.ZoomScalePageLayoutViewAttr = &_cefbac
			continue
		}
		if _deeff.Name.Local == "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs" {
			_beabf, _aafae := _a.ParseBool(_deeff.Value)
			if _aafae != nil {
				return _aafae
			}
			_agbed.ShowZerosAttr = &_beabf
			continue
		}
		if _deeff.Name.Local == "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_adaed, _dcgee := _a.ParseBool(_deeff.Value)
			if _dcgee != nil {
				return _dcgee
			}
			_agbed.WindowProtectionAttr = &_adaed
			continue
		}
		if _deeff.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_fdgee, _eeafbf := _a.ParseBool(_deeff.Value)
			if _eeafbf != nil {
				return _eeafbf
			}
			_agbed.ShowOutlineSymbolsAttr = &_fdgee
			continue
		}
		if _deeff.Name.Local == "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065" {
			_cfccb, _cgcgdf := _a.ParseBool(_deeff.Value)
			if _cgcgdf != nil {
				return _cgcgdf
			}
			_agbed.ShowWhiteSpaceAttr = &_cfccb
			continue
		}
		if _deeff.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_ggcefa, _egbba := _a.ParseBool(_deeff.Value)
			if _egbba != nil {
				return _egbba
			}
			_agbed.ShowGridLinesAttr = &_ggcefa
			continue
		}
		if _deeff.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072" {
			_gbfecc, _dbdcbb := _a.ParseBool(_deeff.Value)
			if _dbdcbb != nil {
				return _dbdcbb
			}
			_agbed.DefaultGridColorAttr = &_gbfecc
			continue
		}
	}
_cbfcg:
	for {
		_cfegf, _cefff := d.Token()
		if _cefff != nil {
			return _cefff
		}
		switch _bacd := _cfegf.(type) {
		case _gd.StartElement:
			switch _bacd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_agbed.Pane = NewCT_Pane()
				if _dddae := d.DecodeElement(_agbed.Pane, &_bacd); _dddae != nil {
					return _dddae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_bcefb := NewCT_Selection()
				if _gcgfc := d.DecodeElement(_bcefb, &_bacd); _gcgfc != nil {
					return _gcgfc
				}
				_agbed.Selection = append(_agbed.Selection, _bcefb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}:
				_adcab := NewCT_PivotSelection()
				if _eaceb := d.DecodeElement(_adcab, &_bacd); _eaceb != nil {
					return _eaceb
				}
				_agbed.PivotSelection = append(_agbed.PivotSelection, _adcab)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agbed.ExtLst = NewCT_ExtensionList()
				if _bcdaef := d.DecodeElement(_agbed.ExtLst, &_bacd); _bcdaef != nil {
					return _bcdaef
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _bacd.Name)
				if _faeaae := d.Skip(); _faeaae != nil {
					return _faeaae
				}
			}
		case _gd.EndElement:
			break _cbfcg
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Missing and its children
func (_fcgdd *CT_Missing) Validate() error {
	return _fcgdd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}

func (_ecdgb ST_SortType) String() string {
	switch _ecdgb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case 4:
		return "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case 5:
		return "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case 6:
		return "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case 7:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return ""
}

func NewCT_Tuples() *CT_Tuples { _bcddec := &CT_Tuples{}; return _bcddec }

func NewCT_Color() *CT_Color { _gbcd := &CT_Color{}; return _gbcd }

func (_agfdb *CT_Set) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cedfg := range start.Attr {
		if _cedfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dccfc, _dgdae := _a.ParseUint(_cedfg.Value, 10, 32)
			if _dgdae != nil {
				return _dgdae
			}
			_ddcbd := uint32(_dccfc)
			_agfdb.CountAttr = &_ddcbd
			continue
		}
		if _cedfg.Name.Local == "\u006da\u0078\u0052\u0061\u006e\u006b" {
			_beadg, _fabfg := _a.ParseInt(_cedfg.Value, 10, 32)
			if _fabfg != nil {
				return _fabfg
			}
			_agfdb.MaxRankAttr = int32(_beadg)
			continue
		}
		if _cedfg.Name.Local == "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e" {
			_efgab, _bfdcgf := _cedfg.Value, error(nil)
			if _bfdcgf != nil {
				return _bfdcgf
			}
			_agfdb.SetDefinitionAttr = _efgab
			continue
		}
		if _cedfg.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_agfdb.SortTypeAttr.UnmarshalXMLAttr(_cedfg)
			continue
		}
		if _cedfg.Name.Local == "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064" {
			_efbfda, _gdffae := _a.ParseBool(_cedfg.Value)
			if _gdffae != nil {
				return _gdffae
			}
			_agfdb.QueryFailedAttr = &_efbfda
			continue
		}
	}
_bccdd:
	for {
		_cged, _dedgfd := d.Token()
		if _dedgfd != nil {
			return _dedgfd
		}
		switch _dgdabc := _cged.(type) {
		case _gd.StartElement:
			switch _dgdabc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fdgbd := NewCT_Tuples()
				if _bbaaad := d.DecodeElement(_fdgbd, &_dgdabc); _bbaaad != nil {
					return _bbaaad
				}
				_agfdb.Tpls = append(_agfdb.Tpls, _fdgbd)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}:
				_agfdb.SortByTuple = NewCT_Tuples()
				if _feeg := d.DecodeElement(_agfdb.SortByTuple, &_dgdabc); _feeg != nil {
					return _feeg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0074\u0020\u0025\u0076", _dgdabc.Name)
				if _gfebf := d.Skip(); _gfebf != nil {
					return _gfebf
				}
			}
		case _gd.EndElement:
			break _bccdd
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BookViews and its children, prefixing error messages with path
func (_cfgb *CT_BookViews) ValidateWithPath(path string) error {
	for _aba, _bda := range _cfgb.WorkbookView {
		if _efa := _bda.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0057or\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _aba)); _efa != nil {
			return _efa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomWorkbookViews and its children, prefixing error messages with path
func (_fabc *CT_CustomWorkbookViews) ValidateWithPath(path string) error {
	for _daagb, _ggfbg := range _fabc.CustomWorkbookView {
		if _dfbdee := _ggfbg.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0043\u0075\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062o\u006fk\u0056\u0069\u0065\u0077\u005b\u0025\u0064]", path, _daagb)); _dfbdee != nil {
			return _dfbdee
		}
	}
	return nil
}

func NewCT_CalcCell() *CT_CalcCell { _ebg := &CT_CalcCell{}; return _ebg }

type ST_HtmlFmt byte

func (_aacc *CT_Font) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cacg:
	for {
		_eefeg, _cfbdga := d.Token()
		if _cfbdga != nil {
			return _cfbdga
		}
		switch _afebe := _eefeg.(type) {
		case _gd.StartElement:
			switch _afebe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}:
				_dgffg := NewCT_FontName()
				if _ggcbd := d.DecodeElement(_dgffg, &_afebe); _ggcbd != nil {
					return _ggcbd
				}
				_aacc.Name = append(_aacc.Name, _dgffg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_dfae := NewCT_IntProperty()
				if _fecgb := d.DecodeElement(_dfae, &_afebe); _fecgb != nil {
					return _fecgb
				}
				_aacc.Charset = append(_aacc.Charset, _dfae)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_cfbdc := NewCT_FontFamily()
				if _fffca := d.DecodeElement(_cfbdc, &_afebe); _fffca != nil {
					return _fffca
				}
				_aacc.Family = append(_aacc.Family, _cfbdc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_afaec := NewCT_BooleanProperty()
				if _gfgaa := d.DecodeElement(_afaec, &_afebe); _gfgaa != nil {
					return _gfgaa
				}
				_aacc.B = append(_aacc.B, _afaec)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cggbb := NewCT_BooleanProperty()
				if _fcfbd := d.DecodeElement(_cggbb, &_afebe); _fcfbd != nil {
					return _fcfbd
				}
				_aacc.I = append(_aacc.I, _cggbb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_bcgce := NewCT_BooleanProperty()
				if _gfccb := d.DecodeElement(_bcgce, &_afebe); _gfccb != nil {
					return _gfccb
				}
				_aacc.Strike = append(_aacc.Strike, _bcgce)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_ebffa := NewCT_BooleanProperty()
				if _bgccc := d.DecodeElement(_ebffa, &_afebe); _bgccc != nil {
					return _bgccc
				}
				_aacc.Outline = append(_aacc.Outline, _ebffa)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_egfae := NewCT_BooleanProperty()
				if _daacff := d.DecodeElement(_egfae, &_afebe); _daacff != nil {
					return _daacff
				}
				_aacc.Shadow = append(_aacc.Shadow, _egfae)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_cgcaa := NewCT_BooleanProperty()
				if _dbcb := d.DecodeElement(_cgcaa, &_afebe); _dbcb != nil {
					return _dbcb
				}
				_aacc.Condense = append(_aacc.Condense, _cgcaa)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_ddgg := NewCT_BooleanProperty()
				if _affee := d.DecodeElement(_ddgg, &_afebe); _affee != nil {
					return _affee
				}
				_aacc.Extend = append(_aacc.Extend, _ddgg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cdfg := NewCT_Color()
				if _eaacgg := d.DecodeElement(_cdfg, &_afebe); _eaacgg != nil {
					return _eaacgg
				}
				_aacc.Color = append(_aacc.Color, _cdfg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_bbdcb := NewCT_FontSize()
				if _eafba := d.DecodeElement(_bbdcb, &_afebe); _eafba != nil {
					return _eafba
				}
				_aacc.Sz = append(_aacc.Sz, _bbdcb)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_dagg := NewCT_UnderlineProperty()
				if _adad := d.DecodeElement(_dagg, &_afebe); _adad != nil {
					return _adad
				}
				_aacc.U = append(_aacc.U, _dagg)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_ecgde := NewCT_VerticalAlignFontProperty()
				if _gcdcf := d.DecodeElement(_ecgde, &_afebe); _gcdcf != nil {
					return _gcdcf
				}
				_aacc.VertAlign = append(_aacc.VertAlign, _ecgde)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_aafd := NewCT_FontScheme()
				if _eeebc := d.DecodeElement(_aafd, &_afebe); _eeebc != nil {
					return _eeebc
				}
				_aacc.Scheme = append(_aacc.Scheme, _aafd)
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u006f\u006e\u0074\u0020\u0025\u0076", _afebe.Name)
				if _bacb := d.Skip(); _bacb != nil {
					return _bacb
				}
			}
		case _gd.EndElement:
			break _cacg
		case _gd.CharData:
		}
	}
	return nil
}

func (_bcg *CT_Cell) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cbee := range start.Attr {
		if _cbee.Name.Local == "\u0072" {
			_fecf, _eceb := _cbee.Value, error(nil)
			if _eceb != nil {
				return _eceb
			}
			_bcg.RAttr = &_fecf
			continue
		}
		if _cbee.Name.Local == "\u0073" {
			_fffa, _dgaa := _a.ParseUint(_cbee.Value, 10, 32)
			if _dgaa != nil {
				return _dgaa
			}
			_ccad := uint32(_fffa)
			_bcg.SAttr = &_ccad
			continue
		}
		if _cbee.Name.Local == "\u0074" {
			_bcg.TAttr.UnmarshalXMLAttr(_cbee)
			continue
		}
		if _cbee.Name.Local == "\u0063\u006d" {
			_fgfb, _ffdf := _a.ParseUint(_cbee.Value, 10, 32)
			if _ffdf != nil {
				return _ffdf
			}
			_efdg := uint32(_fgfb)
			_bcg.CmAttr = &_efdg
			continue
		}
		if _cbee.Name.Local == "\u0076\u006d" {
			_aee, _bgeg := _a.ParseUint(_cbee.Value, 10, 32)
			if _bgeg != nil {
				return _bgeg
			}
			_egca := uint32(_aee)
			_bcg.VmAttr = &_egca
			continue
		}
		if _cbee.Name.Local == "\u0070\u0068" {
			_aebf, _gddb := _a.ParseBool(_cbee.Value)
			if _gddb != nil {
				return _gddb
			}
			_bcg.PhAttr = &_aebf
			continue
		}
	}
_baabb:
	for {
		_gdc, _eefe := d.Token()
		if _eefe != nil {
			return _eefe
		}
		switch _eedac := _gdc.(type) {
		case _gd.StartElement:
			switch _eedac.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}:
				_bcg.F = NewCT_CellFormula()
				if _ceeec := d.DecodeElement(_bcg.F, &_eedac); _ceeec != nil {
					return _ceeec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_bcg.V = new(string)
				if _bada := d.DecodeElement(_bcg.V, &_eedac); _bada != nil {
					return _bada
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}:
				_bcg.Is = NewCT_Rst()
				if _ebad := d.DecodeElement(_bcg.Is, &_eedac); _ebad != nil {
					return _ebad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcg.ExtLst = NewCT_ExtensionList()
				if _cceg := d.DecodeElement(_bcg.ExtLst, &_eedac); _cceg != nil {
					return _cceg
				}
			default:
				_e.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _eedac.Name)
				if _bbea := d.Skip(); _bbea != nil {
					return _bbea
				}
			}
		case _gd.EndElement:
			break _baabb
		case _gd.CharData:
		}
	}
	return nil
}

type CT_DataBinding struct {

	// Unique Identifer
	DataBindingNameAttr *string

	// Binding to External File
	FileBindingAttr *bool

	// Reference to Connection ID
	ConnectionIDAttr *uint32

	// File Binding Name
	FileBindingNameAttr *string

	// XML Data Loading Behavior
	DataBindingLoadModeAttr uint32
	Any                     _e.Any
}

func (_dfgbf *CT_CellWatches) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_cfdc:
	for {
		_gadf, _dgfa := d.Token()
		if _dgfa != nil {
			return _dgfa
		}
		switch _cfae := _gadf.(type) {
		case _gd.StartElement:
			switch _cfae.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}:
				_ddf := NewCT_CellWatch()
				if _cdef := d.DecodeElement(_ddf, &_cfae); _cdef != nil {
					return _cdef
				}
				_dfgbf.CellWatch = append(_dfgbf.CellWatch, _ddf)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061\u0074c\u0068e\u0073\u0020\u0025\u0076", _cfae.Name)
				if _ffff := d.Skip(); _ffff != nil {
					return _ffff
				}
			}
		case _gd.EndElement:
			break _cfdc
		case _gd.CharData:
		}
	}
	return nil
}

func (_decge *ST_CalcMode) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cdfga, _beebf := d.Token()
	if _beebf != nil {
		return _beebf
	}
	if _ceffeb, _ebaacc := _cdfga.(_gd.EndElement); _ebaacc && _ceffeb.Name == start.Name {
		*_decge = 1
		return nil
	}
	if _afagda, _fgbeg := _cdfga.(_gd.CharData); !_fgbeg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdfga)
	} else {
		switch string(_afagda) {
		case "":
			*_decge = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_decge = 1
		case "\u0061\u0075\u0074\u006f":
			*_decge = 2
		case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
			*_decge = 3
		}
	}
	_cdfga, _beebf = d.Token()
	if _beebf != nil {
		return _beebf
	}
	if _gcfcff, _efafe := _cdfga.(_gd.EndElement); _efafe && _gcfcff.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdfga)
}

func (_agcde ST_DvAspect) ValidateWithPath(path string) error {
	switch _agcde {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agcde))
	}
	return nil
}

// ValidateWithPath validates the CT_PivotAreaReferences and its children, prefixing error messages with path
func (_dgdca *CT_PivotAreaReferences) ValidateWithPath(path string) error {
	for _ecege, _dgdad := range _dgdca.Reference {
		if _bbgca := _dgdad.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _ecege)); _bbgca != nil {
			return _bbgca
		}
	}
	return nil
}

func (_fcefg ST_CellType) ValidateWithPath(path string) error {
	switch _fcefg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcefg))
	}
	return nil
}

// Validate validates the CT_Color and its children
func (_bgcb *CT_Color) Validate() error {
	return _bgcb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

type CT_Selection struct {

	// Pane
	PaneAttr ST_Pane

	// Active Cell Location
	ActiveCellAttr *string

	// Active Cell Index
	ActiveCellIdAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref
}

func (_dcegae ST_Objects) ValidateWithPath(path string) error {
	switch _dcegae {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcegae))
	}
	return nil
}

func (_cfdfca ST_DataValidationOperator) ValidateWithPath(path string) error {
	switch _cfdfca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfdfca))
	}
	return nil
}

type CT_CellXfs struct {

	// Format Count
	CountAttr *uint32

	// Format
	Xf []*CT_Xf
}

// ValidateWithPath validates the CT_SheetProtection and its children, prefixing error messages with path
func (_efgdf *CT_SheetProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Comments and its children, prefixing error messages with path
func (_ddbf *CT_Comments) ValidateWithPath(path string) error {
	if _cbeac := _ddbf.Authors.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u0068\u006f\u0072\u0073"); _cbeac != nil {
		return _cbeac
	}
	if _cbbb := _ddbf.CommentList.ValidateWithPath(path + "\u002f\u0043\u006fm\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"); _cbbb != nil {
		return _cbbb
	}
	if _ddbf.ExtLst != nil {
		if _faed := _ddbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faed != nil {
			return _faed
		}
	}
	return nil
}

func (_gfagg *CT_Index) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", _gfagg.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_CommentList struct {

	// Comment
	Comment []*CT_Comment
}

func (_bbfc *CT_CacheHierarchy) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gefc := range start.Attr {
		if _gefc.Name.Local == "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_eac, _acdd := _gefc.Value, error(nil)
			if _acdd != nil {
				return _acdd
			}
			_bbfc.DimensionUniqueNameAttr = &_eac
			continue
		}
		if _gefc.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_fefb, _cddd := _gefc.Value, error(nil)
			if _cddd != nil {
				return _cddd
			}
			_bbfc.DisplayFolderAttr = &_fefb
			continue
		}
		if _gefc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_dec, _dcge := _gefc.Value, error(nil)
			if _dcge != nil {
				return _dcge
			}
			_bbfc.CaptionAttr = &_dec
			continue
		}
		if _gefc.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_bcaa, _gdbe := _gefc.Value, error(nil)
			if _gdbe != nil {
				return _gdbe
			}
			_bbfc.MeasureGroupAttr = &_bcaa
			continue
		}
		if _gefc.Name.Local == "\u0073\u0065\u0074" {
			_dbbb, _acb := _a.ParseBool(_gefc.Value)
			if _acb != nil {
				return _acb
			}
			_bbfc.SetAttr = &_dbbb
			continue
		}
		if _gefc.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073" {
			_ggdd, _bdb := _a.ParseBool(_gefc.Value)
			if _bdb != nil {
				return _bdb
			}
			_bbfc.MeasuresAttr = &_ggdd
			continue
		}
		if _gefc.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_fgf, _bed := _a.ParseInt(_gefc.Value, 10, 32)
			if _bed != nil {
				return _bed
			}
			_gfbf := int32(_fgf)
			_bbfc.IconSetAttr = &_gfbf
			continue
		}
		if _gefc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gcfg, _bedc := _a.ParseUint(_gefc.Value, 10, 32)
			if _bedc != nil {
				return _bedc
			}
			_bbfc.CountAttr = uint32(_gcfg)
			continue
		}
		if _gefc.Name.Local == "\u0074\u0069\u006d\u0065" {
			_fbde, _caa := _a.ParseBool(_gefc.Value)
			if _caa != nil {
				return _caa
			}
			_bbfc.TimeAttr = &_fbde
			continue
		}
		if _gefc.Name.Local == "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064" {
			_ede, _fcg := _a.ParseBool(_gefc.Value)
			if _fcg != nil {
				return _fcg
			}
			_bbfc.OneFieldAttr = &_ede
			continue
		}
		if _gefc.Name.Local == "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065" {
			_cedb, _cebd := _a.ParseUint(_gefc.Value, 10, 16)
			if _cebd != nil {
				return _cebd
			}
			_dbeg := uint16(_cedb)
			_bbfc.MemberValueDatatypeAttr = &_dbeg
			continue
		}
		if _gefc.Name.Local == "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070" {
			_fabg, _bgee := _a.ParseBool(_gefc.Value)
			if _bgee != nil {
				return _bgee
			}
			_bbfc.UnbalancedGroupAttr = &_fabg
			continue
		}
		if _gefc.Name.Local == "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t" {
			_aef, _dcgf := _a.ParseUint(_gefc.Value, 10, 32)
			if _dcgf != nil {
				return _dcgf
			}
			_beac := uint32(_aef)
			_bbfc.ParentSetAttr = &_beac
			continue
		}
		if _gefc.Name.Local == "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bedf, _def := _gefc.Value, error(nil)
			if _def != nil {
				return _def
			}
			_bbfc.DefaultMemberUniqueNameAttr = &_bedf
			continue
		}
		if _gefc.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_gfdd, _agg := _a.ParseBool(_gefc.Value)
			if _agg != nil {
				return _agg
			}
			_bbfc.MeasureAttr = &_gfdd
			continue
		}
		if _gefc.Name.Local == "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064" {
			_aed, _gec := _a.ParseBool(_gefc.Value)
			if _gec != nil {
				return _gec
			}
			_bbfc.UnbalancedAttr = &_aed
			continue
		}
		if _gefc.Name.Local == "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dfdg, _geaf := _gefc.Value, error(nil)
			if _geaf != nil {
				return _geaf
			}
			_bbfc.AllCaptionAttr = &_dfdg
			continue
		}
		if _gefc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_eaf, _aedg := _a.ParseBool(_gefc.Value)
			if _aedg != nil {
				return _aedg
			}
			_bbfc.HiddenAttr = &_eaf
			continue
		}
		if _gefc.Name.Local == "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e" {
			_acdf, _ecef := _a.ParseBool(_gefc.Value)
			if _ecef != nil {
				return _ecef
			}
			_bbfc.AttributeAttr = &_acdf
			continue
		}
		if _gefc.Name.Local == "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_fbec, _acdec := _gefc.Value, error(nil)
			if _acdec != nil {
				return _acdec
			}
			_bbfc.AllUniqueNameAttr = &_fbec
			continue
		}
		if _gefc.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cdbf, _eafe := _gefc.Value, error(nil)
			if _eafe != nil {
				return _eafe
			}
			_bbfc.UniqueNameAttr = _cdbf
			continue
		}
		if _gefc.Name.Local == "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065" {
			_gdbff, _dbgb := _a.ParseBool(_gefc.Value)
			if _dbgb != nil {
				return _dbgb
			}
			_bbfc.KeyAttributeAttr = &_gdbff
			continue
		}
	}
_ebbe:
	for {
		_fdc, _geec := d.Token()
		if _geec != nil {
			return _geec
		}
		switch _dede := _fdc.(type) {
		case _gd.StartElement:
			switch _dede.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_bbfc.FieldsUsage = NewCT_FieldsUsage()
				if _gcaa := d.DecodeElement(_bbfc.FieldsUsage, &_dede); _gcaa != nil {
					return _gcaa
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}:
				_bbfc.GroupLevels = NewCT_GroupLevels()
				if _bcc := d.DecodeElement(_bbfc.GroupLevels, &_dede); _bcc != nil {
					return _bcc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbfc.ExtLst = NewCT_ExtensionList()
				if _aeg := d.DecodeElement(_bbfc.ExtLst, &_dede); _aeg != nil {
					return _aeg
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _dede.Name)
				if _dfe := d.Skip(); _dfe != nil {
					return _dfe
				}
			}
		case _gd.EndElement:
			break _ebbe
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_ConditionalFormatting() *CT_ConditionalFormatting {
	_fcfg := &CT_ConditionalFormatting{}
	return _fcfg
}

func (_gfdcd ST_ItemType) String() string {
	switch _gfdcd {
	case 0:
		return ""
	case 1:
		return "\u0064\u0061\u0074\u0061"
	case 2:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0075\u006d"
	case 4:
		return "\u0063\u006f\u0075\u006e\u0074\u0041"
	case 5:
		return "\u0061\u0076\u0067"
	case 6:
		return "\u006d\u0061\u0078"
	case 7:
		return "\u006d\u0069\u006e"
	case 8:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 9:
		return "\u0063\u006f\u0075n\u0074"
	case 10:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 11:
		return "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case 12:
		return "\u0076\u0061\u0072"
	case 13:
		return "\u0076\u0061\u0072\u0050"
	case 14:
		return "\u0067\u0072\u0061n\u0064"
	case 15:
		return "\u0062\u006c\u0061n\u006b"
	}
	return ""
}

// Validate validates the CT_CacheField and its children
func (_acde *CT_CacheField) Validate() error {
	return _acde.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064")
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_faddag *CT_TableStyle) ValidateWithPath(path string) error {
	for _ccgaf, _beacf := range _faddag.TableStyleElement {
		if _ddfae := _beacf.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065E\u006c\u0065\u006d\u0065\u006e\u0074\u005b\u0025\u0064\u005d", path, _ccgaf)); _ddfae != nil {
			return _ddfae
		}
	}
	return nil
}

// Validate validates the CT_Sheets and its children
func (_fbefg *CT_Sheets) Validate() error {
	return _fbefg.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s")
}

const (
	ST_SortMethodUnset  ST_SortMethod = 0
	ST_SortMethodStroke ST_SortMethod = 1
	ST_SortMethodPinYin ST_SortMethod = 2
	ST_SortMethodNone   ST_SortMethod = 3
)

type CT_SmartTagType struct {

	// SmartTag Namespace URI
	NamespaceUriAttr *string

	// Name
	NameAttr *string

	// Smart Tag URL
	UrlAttr *string
}

func (_gdbd *CT_CustomSheetView) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _gdbd.GuidAttr)})
	if _gdbd.ScaleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_gdbd.ScaleAttr)})
	}
	if _gdbd.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gdbd.ColorIdAttr)})
	}
	if _gdbd.ShowPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.ShowPageBreaksAttr))})
	}
	if _gdbd.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.ShowFormulasAttr))})
	}
	if _gdbd.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.ShowGridLinesAttr))})
	}
	if _gdbd.ShowRowColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.ShowRowColAttr))})
	}
	if _gdbd.OutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.OutlineSymbolsAttr))})
	}
	if _gdbd.ZeroValuesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.ZeroValuesAttr))})
	}
	if _gdbd.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.FitToPageAttr))})
	}
	if _gdbd.PrintAreaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.PrintAreaAttr))})
	}
	if _gdbd.FilterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.FilterAttr))})
	}
	if _gdbd.ShowAutoFilterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.ShowAutoFilterAttr))})
	}
	if _gdbd.HiddenRowsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.HiddenRowsAttr))})
	}
	if _gdbd.HiddenColumnsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.HiddenColumnsAttr))})
	}
	if _gdbd.StateAttr != ST_SheetStateUnset {
		_edcde, _beacb := _gdbd.StateAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _beacb != nil {
			return _beacb
		}
		start.Attr = append(start.Attr, _edcde)
	}
	if _gdbd.FilterUniqueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.FilterUniqueAttr))})
	}
	if _gdbd.ViewAttr != ST_SheetViewTypeUnset {
		_gcbba, _dbfed := _gdbd.ViewAttr.MarshalXMLAttr(_gd.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _dbfed != nil {
			return _dbfed
		}
		start.Attr = append(start.Attr, _gcbba)
	}
	if _gdbd.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gdbd.ShowRulerAttr))})
	}
	if _gdbd.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_gdbd.TopLeftCellAttr)})
	}
	e.EncodeToken(start)
	if _gdbd.Pane != nil {
		_caee := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_gdbd.Pane, _caee)
	}
	if _gdbd.Selection != nil {
		_bceb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gdbd.Selection, _bceb)
	}
	if _gdbd.RowBreaks != nil {
		_afabe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_gdbd.RowBreaks, _afabe)
	}
	if _gdbd.ColBreaks != nil {
		_ebce := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_gdbd.ColBreaks, _ebce)
	}
	if _gdbd.PageMargins != nil {
		_dgff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_gdbd.PageMargins, _dgff)
	}
	if _gdbd.PrintOptions != nil {
		_deef := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_gdbd.PrintOptions, _deef)
	}
	if _gdbd.PageSetup != nil {
		_abed := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_gdbd.PageSetup, _abed)
	}
	if _gdbd.HeaderFooter != nil {
		_efgfg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_gdbd.HeaderFooter, _efgfg)
	}
	if _gdbd.AutoFilter != nil {
		_bbcdc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_gdbd.AutoFilter, _bbcdc)
	}
	if _gdbd.ExtLst != nil {
		_ebac := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gdbd.ExtLst, _ebac)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the QueryTable and its children, prefixing error messages with path
func (_adfce *QueryTable) ValidateWithPath(path string) error {
	if _dafdb := _adfce.CT_QueryTable.ValidateWithPath(path); _dafdb != nil {
		return _dafdb
	}
	return nil
}

func NewCT_FutureMetadataBlock() *CT_FutureMetadataBlock {
	_ffbbg := &CT_FutureMetadataBlock{}
	return _ffbbg
}

type ST_SmartTagShow byte

// ValidateWithPath validates the CT_SheetDimension and its children, prefixing error messages with path
func (_efgga *CT_SheetDimension) ValidateWithPath(path string) error { return nil }

type ST_RevisionAction byte

func (_fdfda ST_SortType) Validate() error { return _fdfda.ValidateWithPath("") }

// Validate validates the CT_RevisionInsertSheet and its children
func (_effdd *CT_RevisionInsertSheet) Validate() error {
	return _effdd.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074")
}

const (
	ST_SortByUnset     ST_SortBy = 0
	ST_SortByValue     ST_SortBy = 1
	ST_SortByCellColor ST_SortBy = 2
	ST_SortByFontColor ST_SortBy = 3
	ST_SortByIcon      ST_SortBy = 4
)

// Validate validates the CT_PatternFill and its children
func (_fggea *CT_PatternFill) Validate() error {
	return _fggea.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c")
}

func (_agafc *CT_MetadataRecord) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gbdea := range start.Attr {
		if _gbdea.Name.Local == "\u0074" {
			_gega, _dgfcc := _a.ParseUint(_gbdea.Value, 10, 32)
			if _dgfcc != nil {
				return _dgfcc
			}
			_agafc.TAttr = uint32(_gega)
			continue
		}
		if _gbdea.Name.Local == "\u0076" {
			_cbcd, _dceaf := _a.ParseUint(_gbdea.Value, 10, 32)
			if _dceaf != nil {
				return _dceaf
			}
			_agafc.VAttr = uint32(_cbcd)
			continue
		}
	}
	for {
		_dfgag, _bdbff := d.Token()
		if _bdbff != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052\u0065\u0063\u006f\u0072\u0064: \u0025\u0073", _bdbff)
		}
		if _fdefb, _gaacg := _dfgag.(_gd.EndElement); _gaacg && _fdefb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ffgd *CT_TextPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ffgd.PromptAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ffgd.PromptAttr))})
	}
	if _ffgd.FileTypeAttr != ST_FileTypeUnset {
		_fagcc, _eeadea := _ffgd.FileTypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065"})
		if _eeadea != nil {
			return _eeadea
		}
		start.Attr = append(start.Attr, _fagcc)
	}
	if _ffgd.CodePageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ffgd.CodePageAttr)})
	}
	if _ffgd.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ffgd.CharacterSetAttr)})
	}
	if _ffgd.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_ffgd.FirstRowAttr)})
	}
	if _ffgd.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ffgd.SourceFileAttr)})
	}
	if _ffgd.DelimitedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ffgd.DelimitedAttr))})
	}
	if _ffgd.DecimalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u0063\u0069\u006d\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_ffgd.DecimalAttr)})
	}
	if _ffgd.ThousandsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s"}, Value: _b.Sprintf("\u0025\u0076", *_ffgd.ThousandsAttr)})
	}
	if _ffgd.TabAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0061\u0062"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ffgd.TabAttr))})
	}
	if _ffgd.SpaceAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0070\u0061c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ffgd.SpaceAttr))})
	}
	if _ffgd.CommaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006dm\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ffgd.CommaAttr))})
	}
	if _ffgd.SemicolonAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ffgd.SemicolonAttr))})
	}
	if _ffgd.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_ffgd.ConsecutiveAttr))})
	}
	if _ffgd.QualifierAttr != ST_QualifierUnset {
		_egbaca, _begce := _ffgd.QualifierAttr.MarshalXMLAttr(_gd.Name{Local: "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r"})
		if _begce != nil {
			return _begce
		}
		start.Attr = append(start.Attr, _egbaca)
	}
	if _ffgd.DelimiterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r"}, Value: _b.Sprintf("\u0025\u0076", *_ffgd.DelimiterAttr)})
	}
	e.EncodeToken(start)
	if _ffgd.TextFields != nil {
		_egddgd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_ffgd.TextFields, _egddgd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_eefea *CT_MetadataBlocks) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bddaab := range start.Attr {
		if _bddaab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbcce, _aegae := _a.ParseUint(_bddaab.Value, 10, 32)
			if _aegae != nil {
				return _aegae
			}
			_gfdgb := uint32(_fbcce)
			_eefea.CountAttr = &_gfdgb
			continue
		}
	}
_fddbe:
	for {
		_bbdfg, _caeca := d.Token()
		if _caeca != nil {
			return _caeca
		}
		switch _bgebg := _bbdfg.(type) {
		case _gd.StartElement:
			switch _bgebg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_acbb := NewCT_MetadataBlock()
				if _adbad := d.DecodeElement(_acbb, &_bgebg); _adbad != nil {
					return _adbad
				}
				_eefea.Bk = append(_eefea.Bk, _acbb)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0073\u0020\u0025\u0076", _bgebg.Name)
				if _bcdcf := d.Skip(); _bcdcf != nil {
					return _bcdcf
				}
			}
		case _gd.EndElement:
			break _fddbe
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_Consolidation() *CT_Consolidation {
	_ggbc := &CT_Consolidation{}
	_ggbc.RangeSets = NewCT_RangeSets()
	return _ggbc
}

func (_fcbebg *CT_RevisionQueryTableField) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _dbgad := range start.Attr {
		if _dbgad.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fbgca, _afeddd := _a.ParseUint(_dbgad.Value, 10, 32)
			if _afeddd != nil {
				return _afeddd
			}
			_fcbebg.SheetIdAttr = uint32(_fbgca)
			continue
		}
		if _dbgad.Name.Local == "\u0072\u0065\u0066" {
			_fdcgf, _fbdac := _dbgad.Value, error(nil)
			if _fbdac != nil {
				return _fbdac
			}
			_fcbebg.RefAttr = _fdcgf
			continue
		}
		if _dbgad.Name.Local == "\u0066i\u0065\u006c\u0064\u0049\u0064" {
			_cgceb, _cfgcg := _a.ParseUint(_dbgad.Value, 10, 32)
			if _cfgcg != nil {
				return _cfgcg
			}
			_fcbebg.FieldIdAttr = uint32(_cgceb)
			continue
		}
	}
	for {
		_gdccc, _faffe := d.Token()
		if _faffe != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0051\u0075\u0065\u0072\u0079T\u0061\u0062\u006c\u0065\u0046i\u0065\u006cd\u003a\u0020\u0025\u0073", _faffe)
		}
		if _ffbe, _gfgdge := _gdccc.(_gd.EndElement); _gfgdge && _ffbe.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ExternalCell struct {

	// Reference
	RAttr *string

	// Type
	TAttr ST_CellType

	// Value Metadata
	VmAttr *uint32

	// Value
	V *string
}

func NewCT_TableStyle() *CT_TableStyle { _gcdcde := &CT_TableStyle{}; return _gcdcde }

func (_fcggg ST_Axis) String() string {
	switch _fcggg {
	case 0:
		return ""
	case 1:
		return "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case 2:
		return "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case 3:
		return "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case 4:
		return "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

// Validate validates the CT_ExternalLinkChoice and its children
func (_eaeg *CT_ExternalLinkChoice) Validate() error {
	return _eaeg.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u004c\u0069\u006ek\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_bfbec ST_TargetScreenSize) Validate() error { return _bfbec.ValidateWithPath("") }

// ValidateWithPath validates the CT_PivotCaches and its children, prefixing error messages with path
func (_dgeca *CT_PivotCaches) ValidateWithPath(path string) error {
	for _dedgf, _aade := range _dgeca.PivotCache {
		if _bbbdg := _aade.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u005b\u0025\u0064\u005d", path, _dedgf)); _bbbdg != nil {
			return _bbbdg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VolTopic and its children, prefixing error messages with path
func (_dggfg *CT_VolTopic) ValidateWithPath(path string) error {
	if _gcefb := _dggfg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _gcefb != nil {
		return _gcefb
	}
	for _cdeacd, _caecf := range _dggfg.Tr {
		if _cbbeg := _caecf.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _cdeacd)); _cbbeg != nil {
			return _cbbeg
		}
	}
	return nil
}

func (_dacaf *CT_Workbook) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dacaf.Sheets = NewCT_Sheets()
	for _, _acgdg := range start.Attr {
		if _acgdg.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_dacaf.ConformanceAttr.UnmarshalXMLAttr(_acgdg)
			continue
		}
	}
_cdcd:
	for {
		_dbcde, _gfgad := d.Token()
		if _gfgad != nil {
			return _gfgad
		}
		switch _feeca := _dbcde.(type) {
		case _gd.StartElement:
			switch _feeca.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_dacaf.FileVersion = NewCT_FileVersion()
				if _gbeeac := d.DecodeElement(_dacaf.FileVersion, &_feeca); _gbeeac != nil {
					return _gbeeac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_dacaf.FileSharing = NewCT_FileSharing()
				if _cegdc := d.DecodeElement(_dacaf.FileSharing, &_feeca); _cegdc != nil {
					return _cegdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_dacaf.WorkbookPr = NewCT_WorkbookPr()
				if _gffaac := d.DecodeElement(_dacaf.WorkbookPr, &_feeca); _gffaac != nil {
					return _gffaac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_dacaf.WorkbookProtection = NewCT_WorkbookProtection()
				if _cgbcac := d.DecodeElement(_dacaf.WorkbookProtection, &_feeca); _cgbcac != nil {
					return _cgbcac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_dacaf.BookViews = NewCT_BookViews()
				if _cacea := d.DecodeElement(_dacaf.BookViews, &_feeca); _cacea != nil {
					return _cacea
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _acddfg := d.DecodeElement(_dacaf.Sheets, &_feeca); _acddfg != nil {
					return _acddfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_dacaf.FunctionGroups = NewCT_FunctionGroups()
				if _dgceb := d.DecodeElement(_dacaf.FunctionGroups, &_feeca); _dgceb != nil {
					return _dgceb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_dacaf.ExternalReferences = NewCT_ExternalReferences()
				if _gcgcc := d.DecodeElement(_dacaf.ExternalReferences, &_feeca); _gcgcc != nil {
					return _gcgcc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_dacaf.DefinedNames = NewCT_DefinedNames()
				if _caccea := d.DecodeElement(_dacaf.DefinedNames, &_feeca); _caccea != nil {
					return _caccea
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_dacaf.CalcPr = NewCT_CalcPr()
				if _adfcd := d.DecodeElement(_dacaf.CalcPr, &_feeca); _adfcd != nil {
					return _adfcd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_dacaf.OleSize = NewCT_OleSize()
				if _cbgab := d.DecodeElement(_dacaf.OleSize, &_feeca); _cbgab != nil {
					return _cbgab
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_dacaf.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _bccgb := d.DecodeElement(_dacaf.CustomWorkbookViews, &_feeca); _bccgb != nil {
					return _bccgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_dacaf.PivotCaches = NewCT_PivotCaches()
				if _bcacc := d.DecodeElement(_dacaf.PivotCaches, &_feeca); _bcacc != nil {
					return _bcacc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_dacaf.SmartTagPr = NewCT_SmartTagPr()
				if _gafcg := d.DecodeElement(_dacaf.SmartTagPr, &_feeca); _gafcg != nil {
					return _gafcg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_dacaf.SmartTagTypes = NewCT_SmartTagTypes()
				if _ceegb := d.DecodeElement(_dacaf.SmartTagTypes, &_feeca); _ceegb != nil {
					return _ceegb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_dacaf.WebPublishing = NewCT_WebPublishing()
				if _dfdcg := d.DecodeElement(_dacaf.WebPublishing, &_feeca); _dfdcg != nil {
					return _dfdcg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_ccfgbc := NewCT_FileRecoveryPr()
				if _bfegcf := d.DecodeElement(_ccfgbc, &_feeca); _bfegcf != nil {
					return _bfegcf
				}
				_dacaf.FileRecoveryPr = append(_dacaf.FileRecoveryPr, _ccfgbc)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_dacaf.WebPublishObjects = NewCT_WebPublishObjects()
				if _gbagf := d.DecodeElement(_dacaf.WebPublishObjects, &_feeca); _gbagf != nil {
					return _gbagf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dacaf.ExtLst = NewCT_ExtensionList()
				if _bdgf := d.DecodeElement(_dacaf.ExtLst, &_feeca); _bdgf != nil {
					return _bdgf
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _feeca.Name)
				if _aecca := d.Skip(); _aecca != nil {
					return _aecca
				}
			}
		case _gd.EndElement:
			break _cdcd
		case _gd.CharData:
		}
	}
	return nil
}

func (_eedff ST_UnderlineValues) ValidateWithPath(path string) error {
	switch _eedff {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eedff))
	}
	return nil
}

func (_fdcfb *CT_RevisionComment) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fdcfb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _dgfea := range start.Attr {
		if _dgfea.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_cgab, _dacdf := _a.ParseUint(_dgfea.Value, 10, 32)
			if _dacdf != nil {
				return _dacdf
			}
			_fdcfb.SheetIdAttr = uint32(_cgab)
			continue
		}
		if _dgfea.Name.Local == "\u0063\u0065\u006c\u006c" {
			_gbgbfc, _eabfa := _dgfea.Value, error(nil)
			if _eabfa != nil {
				return _eabfa
			}
			_fdcfb.CellAttr = _gbgbfc
			continue
		}
		if _dgfea.Name.Local == "\u0067\u0075\u0069\u0064" {
			_ggaae, _gceea := _dgfea.Value, error(nil)
			if _gceea != nil {
				return _gceea
			}
			_fdcfb.GuidAttr = _ggaae
			continue
		}
		if _dgfea.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_fdcfb.ActionAttr.UnmarshalXMLAttr(_dgfea)
			continue
		}
		if _dgfea.Name.Local == "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077" {
			_adedc, _afgffc := _a.ParseBool(_dgfea.Value)
			if _afgffc != nil {
				return _afgffc
			}
			_fdcfb.AlwaysShowAttr = &_adedc
			continue
		}
		if _dgfea.Name.Local == "\u006f\u006c\u0064" {
			_eecef, _cbeec := _a.ParseBool(_dgfea.Value)
			if _cbeec != nil {
				return _cbeec
			}
			_fdcfb.OldAttr = &_eecef
			continue
		}
		if _dgfea.Name.Local == "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw" {
			_ecgebe, _cgcb := _a.ParseBool(_dgfea.Value)
			if _cgcb != nil {
				return _cgcb
			}
			_fdcfb.HiddenRowAttr = &_ecgebe
			continue
		}
		if _dgfea.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e" {
			_cfega, _edccb := _a.ParseBool(_dgfea.Value)
			if _edccb != nil {
				return _edccb
			}
			_fdcfb.HiddenColumnAttr = &_cfega
			continue
		}
		if _dgfea.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072" {
			_cbebd, _afgbb := _dgfea.Value, error(nil)
			if _afgbb != nil {
				return _afgbb
			}
			_fdcfb.AuthorAttr = _cbebd
			continue
		}
		if _dgfea.Name.Local == "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h" {
			_dcgbd, _beddc := _a.ParseUint(_dgfea.Value, 10, 32)
			if _beddc != nil {
				return _beddc
			}
			_gdfcea := uint32(_dcgbd)
			_fdcfb.OldLengthAttr = &_gdfcea
			continue
		}
		if _dgfea.Name.Local == "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h" {
			_dbafg, _adbgc := _a.ParseUint(_dgfea.Value, 10, 32)
			if _adbgc != nil {
				return _adbgc
			}
			_bccdg := uint32(_dbafg)
			_fdcfb.NewLengthAttr = &_bccdg
			continue
		}
	}
	for {
		_bcfgbeb, _fgcga := d.Token()
		if _fgcga != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006fn\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _fgcga)
		}
		if _agafa, _ggbab := _bcfgbeb.(_gd.EndElement); _ggbab && _agafa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the Table and its children, prefixing error messages with path
func (_ebbea *Table) ValidateWithPath(path string) error {
	if _ffgeb := _ebbea.CT_Table.ValidateWithPath(path); _ffgeb != nil {
		return _ffgeb
	}
	return nil
}

func (_dafcg ST_SheetViewType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dafcg.String(), start)
}

func NewCT_CustomSheetViews() *CT_CustomSheetViews { _ffcfbf := &CT_CustomSheetViews{}; return _ffcfbf }

func (_fffcfg *ST_UnderlineValues) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fbddf, _gbdaeg := d.Token()
	if _gbdaeg != nil {
		return _gbdaeg
	}
	if _gcgdde, _fcbgd := _fbddf.(_gd.EndElement); _fcbgd && _gcgdde.Name == start.Name {
		*_fffcfg = 1
		return nil
	}
	if _addggd, _bagdb := _fbddf.(_gd.CharData); !_bagdb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbddf)
	} else {
		switch string(_addggd) {
		case "":
			*_fffcfg = 0
		case "\u0073\u0069\u006e\u0067\u006c\u0065":
			*_fffcfg = 1
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_fffcfg = 2
		case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_fffcfg = 3
		case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_fffcfg = 4
		case "\u006e\u006f\u006e\u0065":
			*_fffcfg = 5
		}
	}
	_fbddf, _gbdaeg = d.Token()
	if _gbdaeg != nil {
		return _gbdaeg
	}
	if _fedfd, _acccfb := _fbddf.(_gd.EndElement); _acccfb && _fedfd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbddf)
}

type CT_AutoSortScope struct {

	// Auto Sort Scope
	PivotArea *CT_PivotArea
}

func (_dbaac *ST_TableType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dbaac = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_dbaac = 1
	case "\u0078\u006d\u006c":
		*_dbaac = 2
	case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
		*_dbaac = 3
	}
	return nil
}

func (_gefae ST_CfType) ValidateWithPath(path string) error {
	switch _gefae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gefae))
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishObjects and its children, prefixing error messages with path
func (_ggeaa *CT_WebPublishObjects) ValidateWithPath(path string) error {
	for _dafge, _ebgec := range _ggeaa.WebPublishObject {
		if _ebcbb := _ebgec.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fWe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _dafge)); _ebcbb != nil {
			return _ebcbb
		}
	}
	return nil
}

func (_fcded ST_CellComments) ValidateWithPath(path string) error {
	switch _fcded {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcded))
	}
	return nil
}

func (_edgad *CT_Number) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _afbcd := range start.Attr {
		if _afbcd.Name.Local == "\u0066\u0063" {
			_cgefd, _befcc := _afbcd.Value, error(nil)
			if _befcc != nil {
				return _befcc
			}
			_edgad.FcAttr = &_cgefd
			continue
		}
		if _afbcd.Name.Local == "\u0076" {
			_bacbc, _gfead := _a.ParseFloat(_afbcd.Value, 64)
			if _gfead != nil {
				return _gfead
			}
			_edgad.VAttr = _bacbc
			continue
		}
		if _afbcd.Name.Local == "\u0066" {
			_ffcef, _cbfeb := _a.ParseBool(_afbcd.Value)
			if _cbfeb != nil {
				return _cbfeb
			}
			_edgad.FAttr = &_ffcef
			continue
		}
		if _afbcd.Name.Local == "\u0063" {
			_fagadc, _efcee := _afbcd.Value, error(nil)
			if _efcee != nil {
				return _efcee
			}
			_edgad.CAttr = &_fagadc
			continue
		}
		if _afbcd.Name.Local == "\u0063\u0070" {
			_gdaab, _bfcdf := _a.ParseUint(_afbcd.Value, 10, 32)
			if _bfcdf != nil {
				return _bfcdf
			}
			_efdaag := uint32(_gdaab)
			_edgad.CpAttr = &_efdaag
			continue
		}
		if _afbcd.Name.Local == "\u0069\u006e" {
			_dfedf, _gbbc := _a.ParseUint(_afbcd.Value, 10, 32)
			if _gbbc != nil {
				return _gbbc
			}
			_fdeeg := uint32(_dfedf)
			_edgad.InAttr = &_fdeeg
			continue
		}
		if _afbcd.Name.Local == "\u0062\u0063" {
			_ccdab, _befda := _afbcd.Value, error(nil)
			if _befda != nil {
				return _befda
			}
			_edgad.BcAttr = &_ccdab
			continue
		}
		if _afbcd.Name.Local == "\u0075" {
			_abfdg, _bdgdf := _a.ParseBool(_afbcd.Value)
			if _bdgdf != nil {
				return _bdgdf
			}
			_edgad.UAttr = &_abfdg
			continue
		}
		if _afbcd.Name.Local == "\u0069" {
			_fcadc, _ddaeb := _a.ParseBool(_afbcd.Value)
			if _ddaeb != nil {
				return _ddaeb
			}
			_edgad.IAttr = &_fcadc
			continue
		}
		if _afbcd.Name.Local == "\u0075\u006e" {
			_cceaf, _ceff := _a.ParseBool(_afbcd.Value)
			if _ceff != nil {
				return _ceff
			}
			_edgad.UnAttr = &_cceaf
			continue
		}
		if _afbcd.Name.Local == "\u0073\u0074" {
			_gfbad, _beeeg := _a.ParseBool(_afbcd.Value)
			if _beeeg != nil {
				return _beeeg
			}
			_edgad.StAttr = &_gfbad
			continue
		}
		if _afbcd.Name.Local == "\u0062" {
			_cefca, _fdeec := _a.ParseBool(_afbcd.Value)
			if _fdeec != nil {
				return _fdeec
			}
			_edgad.BAttr = &_cefca
			continue
		}
	}
_bcbbd:
	for {
		_egcgb, _faffb := d.Token()
		if _faffb != nil {
			return _faffb
		}
		switch _gcfgc := _egcgb.(type) {
		case _gd.StartElement:
			switch _gcfgc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fcfff := NewCT_Tuples()
				if _gbgcaf := d.DecodeElement(_fcfff, &_gcfgc); _gbgcaf != nil {
					return _gbgcaf
				}
				_edgad.Tpls = append(_edgad.Tpls, _fcfff)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bfbde := NewCT_X()
				if _bafa := d.DecodeElement(_bfbde, &_gcfgc); _bafa != nil {
					return _bafa
				}
				_edgad.X = append(_edgad.X, _bfbde)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0075\u006db\u0065\u0072 \u0025\u0076", _gcfgc.Name)
				if _gaeb := d.Skip(); _gaeb != nil {
					return _gaeb
				}
			}
		case _gd.EndElement:
			break _bcbbd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_IconSet() *CT_IconSet { _baag := &CT_IconSet{}; return _baag }

type ST_MdxKPIProperty byte

func (_edfdce *ST_DataValidationType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_edfdce = 0
	case "\u006e\u006f\u006e\u0065":
		*_edfdce = 1
	case "\u0077\u0068\u006fl\u0065":
		*_edfdce = 2
	case "\u0064e\u0063\u0069\u006d\u0061\u006c":
		*_edfdce = 3
	case "\u006c\u0069\u0073\u0074":
		*_edfdce = 4
	case "\u0064\u0061\u0074\u0065":
		*_edfdce = 5
	case "\u0074\u0069\u006d\u0065":
		*_edfdce = 6
	case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
		*_edfdce = 7
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_edfdce = 8
	}
	return nil
}

const (
	ST_ItemTypeUnset   ST_ItemType = 0
	ST_ItemTypeData    ST_ItemType = 1
	ST_ItemTypeDefault ST_ItemType = 2
	ST_ItemTypeSum     ST_ItemType = 3
	ST_ItemTypeCountA  ST_ItemType = 4
	ST_ItemTypeAvg     ST_ItemType = 5
	ST_ItemTypeMax     ST_ItemType = 6
	ST_ItemTypeMin     ST_ItemType = 7
	ST_ItemTypeProduct ST_ItemType = 8
	ST_ItemTypeCount   ST_ItemType = 9
	ST_ItemTypeStdDev  ST_ItemType = 10
	ST_ItemTypeStdDevP ST_ItemType = 11
	ST_ItemTypeVar     ST_ItemType = 12
	ST_ItemTypeVarP    ST_ItemType = 13
	ST_ItemTypeGrand   ST_ItemType = 14
	ST_ItemTypeBlank   ST_ItemType = 15
)

func (_gdabb ST_SortBy) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_gdabb.String(), start)
}

// Validate validates the Comments and its children
func (_bcbbea *Comments) Validate() error {
	return _bcbbea.ValidateWithPath("\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}

func (_fgfdc *ST_CalcMode) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_fgfdc = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_fgfdc = 1
	case "\u0061\u0075\u0074\u006f":
		*_fgfdc = 2
	case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
		*_fgfdc = 3
	}
	return nil
}

// ValidateWithPath validates the ExternalLink and its children, prefixing error messages with path
func (_fedba *ExternalLink) ValidateWithPath(path string) error {
	if _gbfbeb := _fedba.CT_ExternalLink.ValidateWithPath(path); _gbfbeb != nil {
		return _gbfbeb
	}
	return nil
}

func (_dbcfg *ST_IconSetType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_dbcfg = 0
	case "\u0033A\u0072\u0072\u006f\u0077\u0073":
		*_dbcfg = 1
	case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_dbcfg = 2
	case "\u0033\u0046\u006c\u0061\u0067\u0073":
		*_dbcfg = 3
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
		*_dbcfg = 4
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
		*_dbcfg = 5
	case "\u0033\u0053\u0069\u0067\u006e\u0073":
		*_dbcfg = 6
	case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
		*_dbcfg = 7
	case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
		*_dbcfg = 8
	case "\u0034A\u0072\u0072\u006f\u0077\u0073":
		*_dbcfg = 9
	case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_dbcfg = 10
	case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
		*_dbcfg = 11
	case "\u0034R\u0061\u0074\u0069\u006e\u0067":
		*_dbcfg = 12
	case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
		*_dbcfg = 13
	case "\u0035A\u0072\u0072\u006f\u0077\u0073":
		*_dbcfg = 14
	case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_dbcfg = 15
	case "\u0035R\u0061\u0074\u0069\u006e\u0067":
		*_dbcfg = 16
	case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
		*_dbcfg = 17
	}
	return nil
}

// Validate validates the CT_TableColumns and its children
func (_bbgabf *CT_TableColumns) Validate() error {
	return _bbgabf.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073")
}

func (_fbac *CT_OleLink) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fbac.IdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fbac.ProgIdAttr)})
	e.EncodeToken(start)
	if _fbac.OleItems != nil {
		_bbbae := _gd.StartElement{Name: _gd.Name{Local: "m\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_fbac.OleItems, _bbbae)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cccbfg *ST_SortMethod) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cccbfg = 0
	case "\u0073\u0074\u0072\u006f\u006b\u0065":
		*_cccbfg = 1
	case "\u0070\u0069\u006e\u0059\u0069\u006e":
		*_cccbfg = 2
	case "\u006e\u006f\u006e\u0065":
		*_cccbfg = 3
	}
	return nil
}

// Validate validates the CT_ChartsheetProtection and its children
func (_ecbf *CT_ChartsheetProtection) Validate() error {
	return _ecbf.ValidateWithPath("\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_PivotCaches and its children
func (_fbbae *CT_PivotCaches) Validate() error {
	return _fbbae.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073")
}

func (_cddbb ST_FilterOperator) ValidateWithPath(path string) error {
	switch _cddbb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cddbb))
	}
	return nil
}

func (_bffaa *ST_Scope) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bffaa = 0
	case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
		*_bffaa = 1
	case "\u0064\u0061\u0074\u0061":
		*_bffaa = 2
	case "\u0066\u0069\u0065l\u0064":
		*_bffaa = 3
	}
	return nil
}

func NewCT_Cols() *CT_Cols { _afab := &CT_Cols{}; return _afab }

// ValidateWithPath validates the CT_QueryTableDeletedFields and its children, prefixing error messages with path
func (_ddaag *CT_QueryTableDeletedFields) ValidateWithPath(path string) error {
	for _edcce, _ddddfb := range _ddaag.DeletedField {
		if _deace := _ddddfb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0044el\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _edcce)); _deace != nil {
			return _deace
		}
	}
	return nil
}

func (_bdddc *CT_SheetProtection) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bdddc.PasswordAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bdddc.PasswordAttr)})
	}
	if _bdddc.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdddc.AlgorithmNameAttr)})
	}
	if _bdddc.HashValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_bdddc.HashValueAttr)})
	}
	if _bdddc.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_bdddc.SaltValueAttr)})
	}
	if _bdddc.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _b.Sprintf("\u0025\u0076", *_bdddc.SpinCountAttr)})
	}
	if _bdddc.SheetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.SheetAttr))})
	}
	if _bdddc.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.ObjectsAttr))})
	}
	if _bdddc.ScenariosAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.ScenariosAttr))})
	}
	if _bdddc.FormatCellsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.FormatCellsAttr))})
	}
	if _bdddc.FormatColumnsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.FormatColumnsAttr))})
	}
	if _bdddc.FormatRowsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.FormatRowsAttr))})
	}
	if _bdddc.InsertColumnsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.InsertColumnsAttr))})
	}
	if _bdddc.InsertRowsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.InsertRowsAttr))})
	}
	if _bdddc.InsertHyperlinksAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.InsertHyperlinksAttr))})
	}
	if _bdddc.DeleteColumnsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.DeleteColumnsAttr))})
	}
	if _bdddc.DeleteRowsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.DeleteRowsAttr))})
	}
	if _bdddc.SelectLockedCellsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.SelectLockedCellsAttr))})
	}
	if _bdddc.SortAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0072\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.SortAttr))})
	}
	if _bdddc.AutoFilterAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.AutoFilterAttr))})
	}
	if _bdddc.PivotTablesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.PivotTablesAttr))})
	}
	if _bdddc.SelectUnlockedCellsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdddc.SelectUnlockedCellsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dbe *CT_BookView) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dbe.VisibilityAttr != ST_VisibilityUnset {
		_fcc, _acc := _dbe.VisibilityAttr.MarshalXMLAttr(_gd.Name{Local: "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079"})
		if _acc != nil {
			return _acc
		}
		start.Attr = append(start.Attr, _fcc)
	}
	if _dbe.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dbe.MinimizedAttr))})
	}
	if _dbe.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dbe.ShowHorizontalScrollAttr))})
	}
	if _dbe.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dbe.ShowVerticalScrollAttr))})
	}
	if _dbe.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dbe.ShowSheetTabsAttr))})
	}
	if _dbe.XWindowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_dbe.XWindowAttr)})
	}
	if _dbe.YWindowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_dbe.YWindowAttr)})
	}
	if _dbe.WindowWidthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_dbe.WindowWidthAttr)})
	}
	if _dbe.WindowHeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dbe.WindowHeightAttr)})
	}
	if _dbe.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_dbe.TabRatioAttr)})
	}
	if _dbe.FirstSheetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dbe.FirstSheetAttr)})
	}
	if _dbe.ActiveTabAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b"}, Value: _b.Sprintf("\u0025\u0076", *_dbe.ActiveTabAttr)})
	}
	if _dbe.AutoFilterDateGroupingAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dbe.AutoFilterDateGroupingAttr))})
	}
	e.EncodeToken(start)
	if _dbe.ExtLst != nil {
		_abe := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dbe.ExtLst, _abe)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Font struct {

	// Font Name
	Name []*CT_FontName

	// Character Set
	Charset []*CT_IntProperty

	// Font Family
	Family []*CT_FontFamily

	// Bold
	B []*CT_BooleanProperty

	// Italic
	I []*CT_BooleanProperty

	// Strike Through
	Strike []*CT_BooleanProperty

	// Outline
	Outline []*CT_BooleanProperty

	// Shadow
	Shadow []*CT_BooleanProperty

	// Condense
	Condense []*CT_BooleanProperty

	// Extend
	Extend []*CT_BooleanProperty

	// Text Color
	Color []*CT_Color

	// Font Size
	Sz []*CT_FontSize

	// Underline
	U []*CT_UnderlineProperty

	// Text Vertical Alignment
	VertAlign []*CT_VerticalAlignFontProperty

	// Scheme
	Scheme []*CT_FontScheme
}

func NewCT_HeaderFooter() *CT_HeaderFooter { _eadfc := &CT_HeaderFooter{}; return _eadfc }

func (_ffebfg ST_Type) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bccea := _gd.Attr{}
	_bccea.Name = name
	switch _ffebfg {
	case ST_TypeUnset:
		_bccea.Value = ""
	case ST_TypeNone:
		_bccea.Value = "\u006e\u006f\u006e\u0065"
	case ST_TypeAll:
		_bccea.Value = "\u0061\u006c\u006c"
	case ST_TypeRow:
		_bccea.Value = "\u0072\u006f\u0077"
	case ST_TypeColumn:
		_bccea.Value = "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return _bccea, nil
}

func (_gacac *ST_MdxKPIProperty) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ffdac, _cbfagb := d.Token()
	if _cbfagb != nil {
		return _cbfagb
	}
	if _bbcage, _acfdd := _ffdac.(_gd.EndElement); _acfdd && _bbcage.Name == start.Name {
		*_gacac = 1
		return nil
	}
	if _eagff, _baecg := _ffdac.(_gd.CharData); !_baecg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffdac)
	} else {
		switch string(_eagff) {
		case "":
			*_gacac = 0
		case "\u0076":
			*_gacac = 1
		case "\u0067":
			*_gacac = 2
		case "\u0073":
			*_gacac = 3
		case "\u0074":
			*_gacac = 4
		case "\u0077":
			*_gacac = 5
		case "\u006d":
			*_gacac = 6
		}
	}
	_ffdac, _cbfagb = d.Token()
	if _cbfagb != nil {
		return _cbfagb
	}
	if _cbffcd, _dagda := _ffdac.(_gd.EndElement); _dagda && _cbffcd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffdac)
}

func (_cbdga ST_CfType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bcbeg := _gd.Attr{}
	_bcbeg.Name = name
	switch _cbdga {
	case ST_CfTypeUnset:
		_bcbeg.Value = ""
	case ST_CfTypeExpression:
		_bcbeg.Value = "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case ST_CfTypeCellIs:
		_bcbeg.Value = "\u0063\u0065\u006c\u006c\u0049\u0073"
	case ST_CfTypeColorScale:
		_bcbeg.Value = "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case ST_CfTypeDataBar:
		_bcbeg.Value = "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case ST_CfTypeIconSet:
		_bcbeg.Value = "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case ST_CfTypeTop10:
		_bcbeg.Value = "\u0074\u006f\u00701\u0030"
	case ST_CfTypeUniqueValues:
		_bcbeg.Value = "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeDuplicateValues:
		_bcbeg.Value = "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeContainsText:
		_bcbeg.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeNotContainsText:
		_bcbeg.Value = "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeBeginsWith:
		_bcbeg.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeEndsWith:
		_bcbeg.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeContainsBlanks:
		_bcbeg.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeNotContainsBlanks:
		_bcbeg.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeContainsErrors:
		_bcbeg.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeNotContainsErrors:
		_bcbeg.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeTimePeriod:
		_bcbeg.Value = "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_CfTypeAboveAverage:
		_bcbeg.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return _bcbeg, nil
}

func (_abcgca *CT_PageBreak) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bdbebf := range start.Attr {
		if _bdbebf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_caadf, _ebadfd := _a.ParseUint(_bdbebf.Value, 10, 32)
			if _ebadfd != nil {
				return _ebadfd
			}
			_ceabd := uint32(_caadf)
			_abcgca.CountAttr = &_ceabd
			continue
		}
		if _bdbebf.Name.Local == "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074" {
			_gfdba, _decbf := _a.ParseUint(_bdbebf.Value, 10, 32)
			if _decbf != nil {
				return _decbf
			}
			_bgeaf := uint32(_gfdba)
			_abcgca.ManualBreakCountAttr = &_bgeaf
			continue
		}
	}
_gcebf:
	for {
		_agggd, _acgbee := d.Token()
		if _acgbee != nil {
			return _acgbee
		}
		switch _dcedcd := _agggd.(type) {
		case _gd.StartElement:
			switch _dcedcd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}:
				_fcdgc := NewCT_Break()
				if _dffab := d.DecodeElement(_fcdgc, &_dcedcd); _dffab != nil {
					return _dffab
				}
				_abcgca.Brk = append(_abcgca.Brk, _fcdgc)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0042\u0072\u0065\u0061\u006b\u0020\u0025\u0076", _dcedcd.Name)
				if _gcgcf := d.Skip(); _gcgcf != nil {
					return _gcgcf
				}
			}
		case _gd.EndElement:
			break _gcebf
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MRUColors and its children
func (_bbdgb *CT_MRUColors) Validate() error {
	return _bbdgb.ValidateWithPath("\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073")
}

func NewCT_ChartsheetView() *CT_ChartsheetView { _bfbdf := &CT_ChartsheetView{}; return _bfbdf }

func (_dcced *CT_InputCells) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _abggb := range start.Attr {
		if _abggb.Name.Local == "\u0072" {
			_facfc, _gcffd := _abggb.Value, error(nil)
			if _gcffd != nil {
				return _gcffd
			}
			_dcced.RAttr = _facfc
			continue
		}
		if _abggb.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_deeca, _bface := _a.ParseBool(_abggb.Value)
			if _bface != nil {
				return _bface
			}
			_dcced.DeletedAttr = &_deeca
			continue
		}
		if _abggb.Name.Local == "\u0075\u006e\u0064\u006f\u006e\u0065" {
			_ffgfg, _cggeb := _a.ParseBool(_abggb.Value)
			if _cggeb != nil {
				return _cggeb
			}
			_dcced.UndoneAttr = &_ffgfg
			continue
		}
		if _abggb.Name.Local == "\u0076\u0061\u006c" {
			_cacga, _edffa := _abggb.Value, error(nil)
			if _edffa != nil {
				return _edffa
			}
			_dcced.ValAttr = _cacga
			continue
		}
		if _abggb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_gaeeb, _gefdg := _a.ParseUint(_abggb.Value, 10, 32)
			if _gefdg != nil {
				return _gefdg
			}
			_gefed := uint32(_gaeeb)
			_dcced.NumFmtIdAttr = &_gefed
			continue
		}
	}
	for {
		_eacg, _faedgd := d.Token()
		if _faedgd != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0070u\u0074C\u0065\u006c\u006c\u0073\u003a\u0020\u0025s", _faedgd)
		}
		if _dfdfd, _affg := _eacg.(_gd.EndElement); _affg && _dfdfd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CustomWorkbookViews struct {

	// Custom Workbook View
	CustomWorkbookView []*CT_CustomWorkbookView
}

func (_fega *CT_PivotSelection) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fega.PaneAttr != ST_PaneUnset {
		_fadca, _gefacb := _fega.PaneAttr.MarshalXMLAttr(_gd.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _gefacb != nil {
			return _gefacb
		}
		start.Attr = append(start.Attr, _fadca)
	}
	if _fega.ShowHeaderAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fega.ShowHeaderAttr))})
	}
	if _fega.LabelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0061\u0062e\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fega.LabelAttr))})
	}
	if _fega.DataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fega.DataAttr))})
	}
	if _fega.ExtendableAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fega.ExtendableAttr))})
	}
	if _fega.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fega.CountAttr)})
	}
	if _fega.AxisAttr != ST_AxisUnset {
		_agcgd, _eedebb := _fega.AxisAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _eedebb != nil {
			return _eedebb
		}
		start.Attr = append(start.Attr, _agcgd)
	}
	if _fega.DimensionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _b.Sprintf("\u0025\u0076", *_fega.DimensionAttr)})
	}
	if _fega.StartAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fega.StartAttr)})
	}
	if _fega.MinAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_fega.MinAttr)})
	}
	if _fega.MaxAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0078"}, Value: _b.Sprintf("\u0025\u0076", *_fega.MaxAttr)})
	}
	if _fega.ActiveRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw"}, Value: _b.Sprintf("\u0025\u0076", *_fega.ActiveRowAttr)})
	}
	if _fega.ActiveColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl"}, Value: _b.Sprintf("\u0025\u0076", *_fega.ActiveColAttr)})
	}
	if _fega.PreviousRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0076", *_fega.PreviousRowAttr)})
	}
	if _fega.PreviousColAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fega.PreviousColAttr)})
	}
	if _fega.ClickAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006c\u0069c\u006b"}, Value: _b.Sprintf("\u0025\u0076", *_fega.ClickAttr)})
	}
	if _fega.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fega.IdAttr)})
	}
	e.EncodeToken(start)
	_bbadb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_fega.PivotArea, _bbadb)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ffeff *Comments) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073"
	return _ffeff.CT_Comments.MarshalXML(e, start)
}

func (_aaeba *CT_RangeSet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _agdbe := range start.Attr {
		if _agdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agdbe.Name.Local == "\u0069\u0064" || _agdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _agdbe.Name.Local == "\u0069\u0064" {
			_cfbgg, _bdeca := _agdbe.Value, error(nil)
			if _bdeca != nil {
				return _bdeca
			}
			_aaeba.IdAttr = &_cfbgg
			continue
		}
		if _agdbe.Name.Local == "\u0069\u0031" {
			_dbgcaa, _dbadg := _a.ParseUint(_agdbe.Value, 10, 32)
			if _dbadg != nil {
				return _dbadg
			}
			_cbfce := uint32(_dbgcaa)
			_aaeba.I1Attr = &_cbfce
			continue
		}
		if _agdbe.Name.Local == "\u0069\u0033" {
			_degcd, _bbedce := _a.ParseUint(_agdbe.Value, 10, 32)
			if _bbedce != nil {
				return _bbedce
			}
			_dfbgb := uint32(_degcd)
			_aaeba.I3Attr = &_dfbgb
			continue
		}
		if _agdbe.Name.Local == "\u0069\u0034" {
			_eggdae, _abdbg := _a.ParseUint(_agdbe.Value, 10, 32)
			if _abdbg != nil {
				return _abdbg
			}
			_eagbd := uint32(_eggdae)
			_aaeba.I4Attr = &_eagbd
			continue
		}
		if _agdbe.Name.Local == "\u0072\u0065\u0066" {
			_afdbc, _facaee := _agdbe.Value, error(nil)
			if _facaee != nil {
				return _facaee
			}
			_aaeba.RefAttr = &_afdbc
			continue
		}
		if _agdbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfbgc, _fefafg := _agdbe.Value, error(nil)
			if _fefafg != nil {
				return _fefafg
			}
			_aaeba.NameAttr = &_cfbgc
			continue
		}
		if _agdbe.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_accff, _eggeae := _agdbe.Value, error(nil)
			if _eggeae != nil {
				return _eggeae
			}
			_aaeba.SheetAttr = &_accff
			continue
		}
		if _agdbe.Name.Local == "\u0069\u0032" {
			_abbcfd, _fecd := _a.ParseUint(_agdbe.Value, 10, 32)
			if _fecd != nil {
				return _fecd
			}
			_edaeg := uint32(_abbcfd)
			_aaeba.I2Attr = &_edaeg
			continue
		}
	}
	for {
		_bcfgg, _ccaac := d.Token()
		if _ccaac != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u003a\u0020\u0025\u0073", _ccaac)
		}
		if _gaebg, _gceecf := _bcfgg.(_gd.EndElement); _gceecf && _gaebg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ChartsheetView and its children
func (_acfe *CT_ChartsheetView) Validate() error {
	return _acfe.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077")
}

// ValidateWithPath validates the CT_TableColumns and its children, prefixing error messages with path
func (_ccff *CT_TableColumns) ValidateWithPath(path string) error {
	for _fgade, _cbgdef := range _ccff.TableColumn {
		if _fffge := _cbgdef.ValidateWithPath(_b.Sprintf("\u0025s\u002fT\u0061\u0062\u006c\u0065\u0043o\u006c\u0075m\u006e\u005b\u0025\u0064\u005d", path, _fgade)); _fffge != nil {
			return _fffge
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DynamicFilter and its children, prefixing error messages with path
func (_cdcfde *CT_DynamicFilter) ValidateWithPath(path string) error {
	if _cdcfde.TypeAttr == ST_DynamicFilterTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ffdaf := _cdcfde.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ffdaf != nil {
		return _ffdaf
	}
	return nil
}

func (_gbfb *CT_GroupMembers) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gbfb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_gbfb.CountAttr)})
	}
	e.EncodeToken(start)
	_gbaacb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072"}}
	for _, _efcb := range _gbfb.GroupMember {
		e.EncodeElement(_efcb, _gbaacb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_FileVersion struct {

	// Application Name
	AppNameAttr *string

	// Last Edited Version
	LastEditedAttr *string

	// Lowest Edited Version
	LowestEditedAttr *string

	// Build Version
	RupBuildAttr *string

	// Code Name
	CodeNameAttr *string
}

type Workbook struct{ CT_Workbook }

// Validate validates the CT_TupleCache and its children
func (_geeecf *CT_TupleCache) Validate() error {
	return _geeecf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065")
}

func (_adfa *CT_ExternalDefinedNames) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _adfa.DefinedName != nil {
		_ebagc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _gbcaf := range _adfa.DefinedName {
			e.EncodeElement(_gbcaf, _ebagc)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dgabdb *CT_PivotCacheRecords) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dgabdb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dgabdb.CountAttr)})
	}
	e.EncodeToken(start)
	if _dgabdb.R != nil {
		_babcbd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _bcaac := range _dgabdb.R {
			e.EncodeElement(_bcaac, _babcbd)
		}
	}
	if _dgabdb.ExtLst != nil {
		_baacaf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgabdb.ExtLst, _baacaf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_MdxFunctionType byte

type ST_FormatAction byte

func NewCT_MdxTuple() *CT_MdxTuple { _aaaad := &CT_MdxTuple{}; return _aaaad }

func (_bbggg ST_TableStyleType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_bbggg.String(), start)
}

func (_cddbaa *ST_MdxSetOrder) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_ffgac, _aagdbf := d.Token()
	if _aagdbf != nil {
		return _aagdbf
	}
	if _fdeaba, _ebgffb := _ffgac.(_gd.EndElement); _ebgffb && _fdeaba.Name == start.Name {
		*_cddbaa = 1
		return nil
	}
	if _gadcb, _geedd := _ffgac.(_gd.CharData); !_geedd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffgac)
	} else {
		switch string(_gadcb) {
		case "":
			*_cddbaa = 0
		case "\u0075":
			*_cddbaa = 1
		case "\u0061":
			*_cddbaa = 2
		case "\u0064":
			*_cddbaa = 3
		case "\u0061\u0061":
			*_cddbaa = 4
		case "\u0061\u0064":
			*_cddbaa = 5
		case "\u006e\u0061":
			*_cddbaa = 6
		case "\u006e\u0064":
			*_cddbaa = 7
		}
	}
	_ffgac, _aagdbf = d.Token()
	if _aagdbf != nil {
		return _aagdbf
	}
	if _deecaa, _dfbfb := _ffgac.(_gd.EndElement); _dfbfb && _deecaa.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffgac)
}

func (_adbg *CT_CellSmartTags) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", _adbg.RAttr)})
	e.EncodeToken(start)
	_afcb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}}
	for _, _bacf := range _adbg.CellSmartTag {
		e.EncodeElement(_bacf, _afcb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_OleLink struct {
	IdAttr string

	// Object Link Identifier
	ProgIdAttr string

	// Object Link Items
	OleItems *CT_OleItems
}

func (_cdggaf ST_BorderStyle) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dggfb := _gd.Attr{}
	_dggfb.Name = name
	switch _cdggaf {
	case ST_BorderStyleUnset:
		_dggfb.Value = ""
	case ST_BorderStyleNone:
		_dggfb.Value = "\u006e\u006f\u006e\u0065"
	case ST_BorderStyleThin:
		_dggfb.Value = "\u0074\u0068\u0069\u006e"
	case ST_BorderStyleMedium:
		_dggfb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d"
	case ST_BorderStyleDashed:
		_dggfb.Value = "\u0064\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDotted:
		_dggfb.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_BorderStyleThick:
		_dggfb.Value = "\u0074\u0068\u0069c\u006b"
	case ST_BorderStyleDouble:
		_dggfb.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_BorderStyleHair:
		_dggfb.Value = "\u0068\u0061\u0069\u0072"
	case ST_BorderStyleMediumDashed:
		_dggfb.Value = "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDashDot:
		_dggfb.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDot:
		_dggfb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleDashDotDot:
		_dggfb.Value = "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDotDot:
		_dggfb.Value = "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleSlantDashDot:
		_dggfb.Value = "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return _dggfb, nil
}

// ValidateWithPath validates the PivotTableDefinition and its children, prefixing error messages with path
func (_ggedbf *PivotTableDefinition) ValidateWithPath(path string) error {
	if _ebegd := _ggedbf.CT_pivotTableDefinition.ValidateWithPath(path); _ebegd != nil {
		return _ebegd
	}
	return nil
}

func (_bgfbc *CT_ExternalReference) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _edef := range start.Attr {
		if _edef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edef.Name.Local == "\u0069\u0064" || _edef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edef.Name.Local == "\u0069\u0064" {
			_gfcef, _fbgbf := _edef.Value, error(nil)
			if _fbgbf != nil {
				return _fbgbf
			}
			_bgfbc.IdAttr = _gfcef
			continue
		}
	}
	for {
		_gddec, _aabd := d.Token()
		if _aabd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _aabd)
		}
		if _efbf, _cgecg := _gddec.(_gd.EndElement); _cgecg && _efbf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FilterColumn and its children, prefixing error messages with path
func (_ffec *CT_FilterColumn) ValidateWithPath(path string) error {
	if _ffec.Filters != nil {
		if _deaae := _ffec.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _deaae != nil {
			return _deaae
		}
	}
	if _ffec.Top10 != nil {
		if _cedfc := _ffec.Top10.ValidateWithPath(path + "\u002f\u0054\u006f\u0070\u0031\u0030"); _cedfc != nil {
			return _cedfc
		}
	}
	if _ffec.CustomFilters != nil {
		if _ebff := _ffec.CustomFilters.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069l\u0074\u0065\u0072\u0073"); _ebff != nil {
			return _ebff
		}
	}
	if _ffec.DynamicFilter != nil {
		if _egba := _ffec.DynamicFilter.ValidateWithPath(path + "\u002f\u0044\u0079\u006e\u0061\u006d\u0069\u0063\u0046i\u006c\u0074\u0065\u0072"); _egba != nil {
			return _egba
		}
	}
	if _ffec.ColorFilter != nil {
		if _afecb := _ffec.ColorFilter.ValidateWithPath(path + "\u002f\u0043\u006fl\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"); _afecb != nil {
			return _afecb
		}
	}
	if _ffec.IconFilter != nil {
		if _bbfag := _ffec.IconFilter.ValidateWithPath(path + "/\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"); _bbfag != nil {
			return _bbfag
		}
	}
	if _ffec.ExtLst != nil {
		if _gedb := _ffec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gedb != nil {
			return _gedb
		}
	}
	return nil
}

func (_deg *CT_BooleanProperty) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _deg.ValAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_deg.ValAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type Chartsheet struct{ CT_Chartsheet }

type ST_UpdateLinks byte

func NewCT_MRUColors() *CT_MRUColors { _dbcdf := &CT_MRUColors{}; return _dbcdf }

func NewCT_PivotHierarchies() *CT_PivotHierarchies { _cgdeb := &CT_PivotHierarchies{}; return _cgdeb }

func NewCT_RangePr() *CT_RangePr { _abgc := &CT_RangePr{}; return _abgc }

func NewCT_Parameter() *CT_Parameter { _gbfab := &CT_Parameter{}; return _gbfab }

func (_egbegc ST_PivotAreaType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cabgg := _gd.Attr{}
	_cabgg.Name = name
	switch _egbegc {
	case ST_PivotAreaTypeUnset:
		_cabgg.Value = ""
	case ST_PivotAreaTypeNone:
		_cabgg.Value = "\u006e\u006f\u006e\u0065"
	case ST_PivotAreaTypeNormal:
		_cabgg.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_PivotAreaTypeData:
		_cabgg.Value = "\u0064\u0061\u0074\u0061"
	case ST_PivotAreaTypeAll:
		_cabgg.Value = "\u0061\u006c\u006c"
	case ST_PivotAreaTypeOrigin:
		_cabgg.Value = "\u006f\u0072\u0069\u0067\u0069\u006e"
	case ST_PivotAreaTypeButton:
		_cabgg.Value = "\u0062\u0075\u0074\u0074\u006f\u006e"
	case ST_PivotAreaTypeTopEnd:
		_cabgg.Value = "\u0074\u006f\u0070\u0045\u006e\u0064"
	case ST_PivotAreaTypeTopRight:
		_cabgg.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return _cabgg, nil
}

// Validate validates the CT_QueryTableRefresh and its children
func (_dgafaf *CT_QueryTableRefresh) Validate() error {
	return _dgafaf.ValidateWithPath("C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068")
}

// Validate validates the CT_MemberProperty and its children
func (_aedaf *CT_MemberProperty) Validate() error {
	return _aedaf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

// ValidateWithPath validates the CT_RevisionCellChange and its children, prefixing error messages with path
func (_fgcfg *CT_RevisionCellChange) ValidateWithPath(path string) error {
	if _fgcfg.Oc != nil {
		if _faaba := _fgcfg.Oc.ValidateWithPath(path + "\u002f\u004f\u0063"); _faaba != nil {
			return _faaba
		}
	}
	if _cafdcd := _fgcfg.Nc.ValidateWithPath(path + "\u002f\u004e\u0063"); _cafdcd != nil {
		return _cafdcd
	}
	if _fgcfg.Odxf != nil {
		if _eeeaf := _fgcfg.Odxf.ValidateWithPath(path + "\u002f\u004f\u0064x\u0066"); _eeeaf != nil {
			return _eeeaf
		}
	}
	if _fgcfg.Ndxf != nil {
		if _acaaf := _fgcfg.Ndxf.ValidateWithPath(path + "\u002f\u004e\u0064x\u0066"); _acaaf != nil {
			return _acaaf
		}
	}
	if _fgcfg.ExtLst != nil {
		if _fcacd := _fgcfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fcacd != nil {
			return _fcacd
		}
	}
	return nil
}

type ST_HorizontalAlignment byte

func (_bgefd *CT_Hyperlink) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ebgeb := range start.Attr {
		if _ebgeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebgeb.Name.Local == "\u0069\u0064" || _ebgeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ebgeb.Name.Local == "\u0069\u0064" {
			_ebgdd, _gbggb := _ebgeb.Value, error(nil)
			if _gbggb != nil {
				return _gbggb
			}
			_bgefd.IdAttr = &_ebgdd
			continue
		}
		if _ebgeb.Name.Local == "\u0072\u0065\u0066" {
			_ceaec, _ccfbf := _ebgeb.Value, error(nil)
			if _ccfbf != nil {
				return _ccfbf
			}
			_bgefd.RefAttr = _ceaec
			continue
		}
		if _ebgeb.Name.Local == "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" {
			_gacbc, _eeaff := _ebgeb.Value, error(nil)
			if _eeaff != nil {
				return _eeaff
			}
			_bgefd.LocationAttr = &_gacbc
			continue
		}
		if _ebgeb.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_cceba, _dfgccc := _ebgeb.Value, error(nil)
			if _dfgccc != nil {
				return _dfgccc
			}
			_bgefd.TooltipAttr = &_cceba
			continue
		}
		if _ebgeb.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_abbe, _bcaee := _ebgeb.Value, error(nil)
			if _bcaee != nil {
				return _bcaee
			}
			_bgefd.DisplayAttr = &_abbe
			continue
		}
	}
	for {
		_fagbd, _egbce := d.Token()
		if _egbce != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0079p\u0065\u0072\u006c\u0069\u006e\u006b\u003a\u0020\u0025\u0073", _egbce)
		}
		if _edff, _aaacf := _fagbd.(_gd.EndElement); _aaacf && _edff.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_BorderStyle byte

// ValidateWithPath validates the MapInfo and its children, prefixing error messages with path
func (_gccad *MapInfo) ValidateWithPath(path string) error {
	if _addgc := _gccad.CT_MapInfo.ValidateWithPath(path); _addgc != nil {
		return _addgc
	}
	return nil
}

func (_gfaef *CT_QueryTableField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _gfaef.IdAttr)})
	if _gfaef.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_gfaef.NameAttr)})
	}
	if _gfaef.DataBoundAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfaef.DataBoundAttr))})
	}
	if _gfaef.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfaef.RowNumbersAttr))})
	}
	if _gfaef.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfaef.FillFormulasAttr))})
	}
	if _gfaef.ClippedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063l\u0069\u0070\u0070\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_gfaef.ClippedAttr))})
	}
	if _gfaef.TableColumnIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gfaef.TableColumnIdAttr)})
	}
	e.EncodeToken(start)
	if _gfaef.ExtLst != nil {
		_ddfef := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfaef.ExtLst, _ddfef)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cfbdaf *Workbook) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b"
	return _cfbdaf.CT_Workbook.MarshalXML(e, start)
}

// Validate validates the CT_PCDKPI and its children
func (_bdccd *CT_PCDKPI) Validate() error {
	return _bdccd.ValidateWithPath("\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I")
}

func NewCT_Metadata() *CT_Metadata { _decee := &CT_Metadata{}; return _decee }

func (_ecedd *CT_PCDKPIs) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ecedd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ecedd.CountAttr)})
	}
	e.EncodeToken(start)
	if _ecedd.Kpi != nil {
		_ebeff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006b\u0070\u0069"}}
		for _, _acead := range _ecedd.Kpi {
			e.EncodeElement(_acead, _ebeff)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Worksheet() *CT_Worksheet {
	_dgace := &CT_Worksheet{}
	_dgace.SheetData = NewCT_SheetData()
	return _dgace
}

func (_fgedc ST_OleUpdate) ValidateWithPath(path string) error {
	switch _fgedc {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgedc))
	}
	return nil
}

func (_cbefeg ST_UnderlineValues) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_gdeca := _gd.Attr{}
	_gdeca.Name = name
	switch _cbefeg {
	case ST_UnderlineValuesUnset:
		_gdeca.Value = ""
	case ST_UnderlineValuesSingle:
		_gdeca.Value = "\u0073\u0069\u006e\u0067\u006c\u0065"
	case ST_UnderlineValuesDouble:
		_gdeca.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_UnderlineValuesSingleAccounting:
		_gdeca.Value = "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesDoubleAccounting:
		_gdeca.Value = "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesNone:
		_gdeca.Value = "\u006e\u006f\u006e\u0065"
	}
	return _gdeca, nil
}

func (_dcabf *CT_Hyperlinks) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_fgaaa := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ah\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b"}}
	for _, _ccec := range _dcabf.Hyperlink {
		e.EncodeElement(_ccec, _fgaaa)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupMember and its children
func (_fefcg *CT_GroupMember) Validate() error {
	return _fefcg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072")
}

func (_gbg *CT_CalculatedItem) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gbg.FieldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gbg.FieldAttr)})
	}
	if _gbg.FormulaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _b.Sprintf("\u0025\u0076", *_gbg.FormulaAttr)})
	}
	e.EncodeToken(start)
	_fac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_gbg.PivotArea, _fac)
	if _gbg.ExtLst != nil {
		_ffgb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gbg.ExtLst, _ffgb)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_CustomChartsheetViews() *CT_CustomChartsheetViews {
	_dbcf := &CT_CustomChartsheetViews{}
	return _dbcf
}

// Validate validates the CT_VolTopic and its children
func (_aaafcd *CT_VolTopic) Validate() error {
	return _aaafcd.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063")
}

func NewCT_ColHierarchiesUsage() *CT_ColHierarchiesUsage {
	_bbef := &CT_ColHierarchiesUsage{}
	return _bbef
}

func (_ddbag *CT_Parameters) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _agecb := range start.Attr {
		if _agecb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_faagc, _ecdce := _a.ParseUint(_agecb.Value, 10, 32)
			if _ecdce != nil {
				return _ecdce
			}
			_cebbg := uint32(_faagc)
			_ddbag.CountAttr = &_cebbg
			continue
		}
	}
_effee:
	for {
		_gfgbb, _aafgf := d.Token()
		if _aafgf != nil {
			return _aafgf
		}
		switch _edacaf := _gfgbb.(type) {
		case _gd.StartElement:
			switch _edacaf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}:
				_gddag := NewCT_Parameter()
				if _aedf := d.DecodeElement(_gddag, &_edacaf); _aedf != nil {
					return _aedf
				}
				_ddbag.Parameter = append(_ddbag.Parameter, _gddag)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 \u0025\u0076", _edacaf.Name)
				if _ggdbd := d.Skip(); _ggdbd != nil {
					return _ggdbd
				}
			}
		case _gd.EndElement:
			break _effee
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Sst struct {

	// String Count
	CountAttr *uint32

	// Unique String Count
	UniqueCountAttr *uint32

	// String Item
	Si     []*CT_Rst
	ExtLst *CT_ExtensionList
}

func (_gegdce *Dialogsheet) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_gegdce.CT_Dialogsheet = *NewCT_Dialogsheet()
_ddfce:
	for {
		_dedcga, _geeae := d.Token()
		if _geeae != nil {
			return _geeae
		}
		switch _bbccef := _dedcga.(type) {
		case _gd.StartElement:
			switch _bbccef.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_gegdce.SheetPr = NewCT_SheetPr()
				if _bffcc := d.DecodeElement(_gegdce.SheetPr, &_bbccef); _bffcc != nil {
					return _bffcc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gegdce.SheetViews = NewCT_SheetViews()
				if _gaagce := d.DecodeElement(_gegdce.SheetViews, &_bbccef); _gaagce != nil {
					return _gaagce
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_gegdce.SheetFormatPr = NewCT_SheetFormatPr()
				if _eefgb := d.DecodeElement(_gegdce.SheetFormatPr, &_bbccef); _eefgb != nil {
					return _eefgb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_gegdce.SheetProtection = NewCT_SheetProtection()
				if _gbefc := d.DecodeElement(_gegdce.SheetProtection, &_bbccef); _gbefc != nil {
					return _gbefc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gegdce.CustomSheetViews = NewCT_CustomSheetViews()
				if _bafed := d.DecodeElement(_gegdce.CustomSheetViews, &_bbccef); _bafed != nil {
					return _bafed
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_gegdce.PrintOptions = NewCT_PrintOptions()
				if _fadbd := d.DecodeElement(_gegdce.PrintOptions, &_bbccef); _fadbd != nil {
					return _fadbd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_gegdce.PageMargins = NewCT_PageMargins()
				if _fbdbda := d.DecodeElement(_gegdce.PageMargins, &_bbccef); _fbdbda != nil {
					return _fbdbda
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_gegdce.PageSetup = NewCT_PageSetup()
				if _agdea := d.DecodeElement(_gegdce.PageSetup, &_bbccef); _agdea != nil {
					return _agdea
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_gegdce.HeaderFooter = NewCT_HeaderFooter()
				if _dbfddf := d.DecodeElement(_gegdce.HeaderFooter, &_bbccef); _dbfddf != nil {
					return _dbfddf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_gegdce.Drawing = NewCT_Drawing()
				if _edcge := d.DecodeElement(_gegdce.Drawing, &_bbccef); _edcge != nil {
					return _edcge
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_gegdce.LegacyDrawing = NewCT_LegacyDrawing()
				if _dcaeec := d.DecodeElement(_gegdce.LegacyDrawing, &_bbccef); _dcaeec != nil {
					return _dcaeec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_gegdce.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bbefg := d.DecodeElement(_gegdce.LegacyDrawingHF, &_bbccef); _bbefg != nil {
					return _bbefg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_gegdce.DrawingHF = NewCT_DrawingHF()
				if _bgaca := d.DecodeElement(_gegdce.DrawingHF, &_bbccef); _bgaca != nil {
					return _bgaca
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_gegdce.OleObjects = NewCT_OleObjects()
				if _fcfec := d.DecodeElement(_gegdce.OleObjects, &_bbccef); _fcfec != nil {
					return _fcfec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_gegdce.Controls = NewCT_Controls()
				if _ebcbbf := d.DecodeElement(_gegdce.Controls, &_bbccef); _ebcbbf != nil {
					return _ebcbbf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gegdce.ExtLst = NewCT_ExtensionList()
				if _bgbacd := d.DecodeElement(_gegdce.ExtLst, &_bbccef); _bgbacd != nil {
					return _bgbacd
				}
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0044\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _bbccef.Name)
				if _gadgdb := d.Skip(); _gadgdb != nil {
					return _gadgdb
				}
			}
		case _gd.EndElement:
			break _ddfce
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedMembers and its children, prefixing error messages with path
func (_dfgb *CT_CalculatedMembers) ValidateWithPath(path string) error {
	for _ecfg, _dgec := range _dfgb.CalculatedMember {
		if _beefd := _dgec.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fCa\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _ecfg)); _beefd != nil {
			return _beefd
		}
	}
	return nil
}

func NewCT_Number() *CT_Number { _gbcgd := &CT_Number{}; return _gbcgd }

func NewCT_Field() *CT_Field { _dfdd := &CT_Field{}; return _dfdd }

// ValidateWithPath validates the CT_Scenario and its children, prefixing error messages with path
func (_bdbfd *CT_Scenario) ValidateWithPath(path string) error {
	for _fdgba, _dfgaa := range _bdbfd.InputCells {
		if _eagcbd := _dfgaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006cs\u005b\u0025\u0064\u005d", path, _fdgba)); _eagcbd != nil {
			return _eagcbd
		}
	}
	return nil
}

// Validate validates the CT_MergeCells and its children
func (_abgea *CT_MergeCells) Validate() error {
	return _abgea.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073")
}

// Validate validates the CT_DdeLink and its children
func (_accag *CT_DdeLink) Validate() error {
	return _accag.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b")
}

// ValidateWithPath validates the CT_Map and its children, prefixing error messages with path
func (_adbfa *CT_Map) ValidateWithPath(path string) error {
	if _adbfa.DataBinding != nil {
		if _dgcdb := _adbfa.DataBinding.ValidateWithPath(path + "\u002f\u0044\u0061t\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"); _dgcdb != nil {
			return _dgcdb
		}
	}
	return nil
}

func (_fdecg *Users) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0075\u0073\u0065\u0072\u0073"
	return _fdecg.CT_Users.MarshalXML(e, start)
}

// Validate validates the CT_DiscretePr and its children
func (_eddee *CT_DiscretePr) Validate() error {
	return _eddee.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072")
}

// ValidateWithPath validates the CT_RevisionDefinedName and its children, prefixing error messages with path
func (_dcgfd *CT_RevisionDefinedName) ValidateWithPath(path string) error {
	if _dcgfd.ExtLst != nil {
		if _ebffe := _dcgfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebffe != nil {
			return _ebffe
		}
	}
	return nil
}

type CT_CustomProperties struct {

	// Custom Property
	CustomPr []*CT_CustomProperty
}

type CT_GroupLevel struct {

	// Unique Name
	UniqueNameAttr string

	// Grouping Level Display Name
	CaptionAttr string

	// User-Defined Group Level
	UserAttr *bool

	// Custom Roll Up
	CustomRollUpAttr *bool

	// OLAP Level Groups
	Groups *CT_Groups

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_ExternalReferences and its children, prefixing error messages with path
func (_bbca *CT_ExternalReferences) ValidateWithPath(path string) error {
	for _faedg, _efgbg := range _bbca.ExternalReference {
		if _ebebd := _efgbg.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _faedg)); _ebebd != nil {
			return _ebebd
		}
	}
	return nil
}

func (_edadac *CT_TablePart) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _edadac.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fdbfd *CT_RevisionQueryTableField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fdbfd.SheetIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _fdbfd.RefAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066i\u0065\u006c\u0064\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fdbfd.FieldIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_DataValidations struct {

	// Disable Prompts
	DisablePromptsAttr *bool

	// Top Left Corner (X Coodrinate)
	XWindowAttr *uint32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *uint32

	// Data Validation Item Count
	CountAttr *uint32

	// Data Validation
	DataValidation []*CT_DataValidation
}

// Validate validates the CT_CacheFields and its children
func (_fdaa *CT_CacheFields) Validate() error {
	return _fdaa.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_PCDSCPage and its children
func (_dgfe *CT_PCDSCPage) Validate() error {
	return _dgfe.ValidateWithPath("\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065")
}

// Validate validates the CT_Extension and its children
func (_cggg *CT_Extension) Validate() error {
	return _cggg.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

// Validate validates the CT_GroupLevels and its children
func (_ebcb *CT_GroupLevels) Validate() error {
	return _ebcb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073")
}

// ValidateWithPath validates the CT_CellXfs and its children, prefixing error messages with path
func (_eded *CT_CellXfs) ValidateWithPath(path string) error {
	for _bbfa, _bcab := range _eded.Xf {
		if _fbdef := _bcab.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _bbfa)); _fbdef != nil {
			return _fbdef
		}
	}
	return nil
}

type CT_Member struct {

	// Hidden Item Name
	NameAttr string
}

// Validate validates the CT_Cell and its children
func (_cfgd *CT_Cell) Validate() error {
	return _cfgd.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c")
}

// ValidateWithPath validates the CT_PivotField and its children, prefixing error messages with path
func (_cdbaf *CT_PivotField) ValidateWithPath(path string) error {
	if _cdede := _cdbaf.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _cdede != nil {
		return _cdede
	}
	if _fdbebf := _cdbaf.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _fdbebf != nil {
		return _fdbebf
	}
	if _cdbaf.Items != nil {
		if _cfeccb := _cdbaf.Items.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u006d\u0073"); _cfeccb != nil {
			return _cfeccb
		}
	}
	if _cdbaf.AutoSortScope != nil {
		if _fcgcc := _cdbaf.AutoSortScope.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074S\u0063\u006f\u0070\u0065"); _fcgcc != nil {
			return _fcgcc
		}
	}
	if _cdbaf.ExtLst != nil {
		if _febadc := _cdbaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _febadc != nil {
			return _febadc
		}
	}
	return nil
}

func (_fgcef *ST_VerticalAlignment) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_fgcef = 0
	case "\u0074\u006f\u0070":
		*_fgcef = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_fgcef = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_fgcef = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_fgcef = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_fgcef = 5
	}
	return nil
}

func NewCT_InputCells() *CT_InputCells { _aabc := &CT_InputCells{}; return _aabc }

// ValidateWithPath validates the CT_Sheet and its children, prefixing error messages with path
func (_dcfde *CT_Sheet) ValidateWithPath(path string) error {
	if _gcce := _dcfde.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _gcce != nil {
		return _gcce
	}
	return nil
}

func (_gbeeae *CT_TableMissing) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for {
		_ggbgb, _ggggdf := d.Token()
		if _ggggdf != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u004di\u0073\u0073\u0069n\u0067:\u0020\u0025\u0073", _ggggdf)
		}
		if _ecbbd, _afbcdb := _ggbgb.(_gd.EndElement); _afbcdb && _ecbbd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fgfae *ST_CfType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_eafgfd, _baedd := d.Token()
	if _baedd != nil {
		return _baedd
	}
	if _gcacc, _eaddf := _eafgfd.(_gd.EndElement); _eaddf && _gcacc.Name == start.Name {
		*_fgfae = 1
		return nil
	}
	if _fbfgd, _dfeeg := _eafgfd.(_gd.CharData); !_dfeeg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eafgfd)
	} else {
		switch string(_fbfgd) {
		case "":
			*_fgfae = 0
		case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
			*_fgfae = 1
		case "\u0063\u0065\u006c\u006c\u0049\u0073":
			*_fgfae = 2
		case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
			*_fgfae = 3
		case "\u0064a\u0074\u0061\u0042\u0061\u0072":
			*_fgfae = 4
		case "\u0069c\u006f\u006e\u0053\u0065\u0074":
			*_fgfae = 5
		case "\u0074\u006f\u00701\u0030":
			*_fgfae = 6
		case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_fgfae = 7
		case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_fgfae = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_fgfae = 9
		case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_fgfae = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_fgfae = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_fgfae = 12
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_fgfae = 13
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_fgfae = 14
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_fgfae = 15
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_fgfae = 16
		case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgfae = 17
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_fgfae = 18
		}
	}
	_eafgfd, _baedd = d.Token()
	if _baedd != nil {
		return _baedd
	}
	if _gecgfe, _fgcfa := _eafgfd.(_gd.EndElement); _fgcfa && _gecgfe.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eafgfd)
}

// ValidateWithPath validates the CT_PivotFilters and its children, prefixing error messages with path
func (_febegb *CT_PivotFilters) ValidateWithPath(path string) error {
	for _aafcg, _ccceb := range _febegb.Filter {
		if _fefd := _ccceb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _aafcg)); _fefd != nil {
			return _fefd
		}
	}
	return nil
}

func NewCT_PageBreak() *CT_PageBreak { _gdgec := &CT_PageBreak{}; return _gdgec }

// ValidateWithPath validates the CT_IndexedColors and its children, prefixing error messages with path
func (_bdfa *CT_IndexedColors) ValidateWithPath(path string) error {
	for _ecafa, _gcggc := range _bdfa.RgbColor {
		if _agega := _gcggc.ValidateWithPath(_b.Sprintf("\u0025s\u002fR\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _ecafa)); _agega != nil {
			return _agega
		}
	}
	return nil
}

func (_affge ST_FormulaExpression) ValidateWithPath(path string) error {
	switch _affge {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_affge))
	}
	return nil
}

func (_dfegc ST_SmartTagShow) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_dfegc.String(), start)
}

// ValidateWithPath validates the CT_FileSharing and its children, prefixing error messages with path
func (_fffcc *CT_FileSharing) ValidateWithPath(path string) error { return nil }

type CT_X struct {

	// Shared Items Index
	VAttr *int32
}

const (
	ST_PaneUnset       ST_Pane = 0
	ST_PaneBottomRight ST_Pane = 1
	ST_PaneTopRight    ST_Pane = 2
	ST_PaneBottomLeft  ST_Pane = 3
	ST_PaneTopLeft     ST_Pane = 4
)

// ValidateWithPath validates the CT_Consolidation and its children, prefixing error messages with path
func (_gceg *CT_Consolidation) ValidateWithPath(path string) error {
	if _gceg.Pages != nil {
		if _cacf := _gceg.Pages.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0073"); _cacf != nil {
			return _cacf
		}
	}
	if _fdae := _gceg.RangeSets.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"); _fdae != nil {
		return _fdae
	}
	return nil
}

func NewCT_Pages() *CT_Pages { _ceacd := &CT_Pages{}; return _ceacd }

const (
	ST_GrowShrinkTypeUnset          ST_GrowShrinkType = 0
	ST_GrowShrinkTypeInsertDelete   ST_GrowShrinkType = 1
	ST_GrowShrinkTypeInsertClear    ST_GrowShrinkType = 2
	ST_GrowShrinkTypeOverwriteClear ST_GrowShrinkType = 3
)

type CT_DateTime struct {

	// Value
	VAttr _db.Time

	// Unused Item
	UAttr *bool

	// Calculated Item Value
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Index
	X []*CT_X
}

func (_caeaab *CT_IntProperty) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bgbgf := range start.Attr {
		if _bgbgf.Name.Local == "\u0076\u0061\u006c" {
			_gbag, _gafaf := _a.ParseInt(_bgbgf.Value, 10, 32)
			if _gafaf != nil {
				return _gafaf
			}
			_caeaab.ValAttr = int32(_gbag)
			continue
		}
	}
	for {
		_gdbcga, _feggae := d.Token()
		if _feggae != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079:\u0020\u0025\u0073", _feggae)
		}
		if _fgaca, _efeda := _gdbcga.(_gd.EndElement); _efeda && _fgaca.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_QueryTableField struct {

	// Field Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Data Bound Column
	DataBoundAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Fill This Formula On Refresh
	FillFormulasAttr *bool

	// Clipped Column
	ClippedAttr *bool

	// Table Column Id
	TableColumnIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type ST_CellSpans []string

type CT_ExternalReference struct{ IdAttr string }

func (_ccce *CT_PCDKPI) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ccce.UniqueNameAttr)})
	if _ccce.CaptionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.CaptionAttr)})
	}
	if _ccce.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.DisplayFolderAttr)})
	}
	if _ccce.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.MeasureGroupAttr)})
	}
	if _ccce.ParentAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.ParentAttr)})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076\u0061\u006cu\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ccce.ValueAttr)})
	if _ccce.GoalAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u006f\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.GoalAttr)})
	}
	if _ccce.StatusAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074\u0061\u0074\u0075\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.StatusAttr)})
	}
	if _ccce.TrendAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0072\u0065n\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.TrendAttr)})
	}
	if _ccce.WeightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0077\u0065\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.WeightAttr)})
	}
	if _ccce.TimeAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ccce.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dfbga ST_VolDepType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_adcabe := _gd.Attr{}
	_adcabe.Name = name
	switch _dfbga {
	case ST_VolDepTypeUnset:
		_adcabe.Value = ""
	case ST_VolDepTypeRealTimeData:
		_adcabe.Value = "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case ST_VolDepTypeOlapFunctions:
		_adcabe.Value = "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return _adcabe, nil
}

// Validate validates the CT_DataBar and its children
func (_ebdaa *CT_DataBar) Validate() error {
	return _ebdaa.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072")
}

func (_cgega *CT_Pages) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cgbdbe := range start.Attr {
		if _cgbdbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_afeda, _ddacc := _a.ParseUint(_cgbdbe.Value, 10, 32)
			if _ddacc != nil {
				return _ddacc
			}
			_befgd := uint32(_afeda)
			_cgega.CountAttr = &_befgd
			continue
		}
	}
_cedggf:
	for {
		_bgcga, _gacbcd := d.Token()
		if _gacbcd != nil {
			return _gacbcd
		}
		switch _cfceg := _bgcga.(type) {
		case _gd.StartElement:
			switch _cfceg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}:
				_cecege := NewCT_PCDSCPage()
				if _ggaf := d.DecodeElement(_cecege, &_cfceg); _ggaf != nil {
					return _ggaf
				}
				_cgega.Page = append(_cgega.Page, _cecege)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073\u0020\u0025\u0076", _cfceg.Name)
				if _fagfg := d.Skip(); _fagfg != nil {
					return _fagfg
				}
			}
		case _gd.EndElement:
			break _cedggf
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetData and its children, prefixing error messages with path
func (_adba *CT_ExternalSheetData) ValidateWithPath(path string) error {
	for _gefad, _cbef := range _adba.Row {
		if _eggcc := _cbef.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _gefad)); _eggcc != nil {
			return _eggcc
		}
	}
	return nil
}

func (_gfbgf *ExternalLink) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b"
	return _gfbgf.CT_ExternalLink.MarshalXML(e, start)
}

func (_ddfegc *CT_SheetIdMap) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aageff := range start.Attr {
		if _aageff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgbbe, _bbagb := _a.ParseUint(_aageff.Value, 10, 32)
			if _bbagb != nil {
				return _bbagb
			}
			_fafbb := uint32(_fgbbe)
			_ddfegc.CountAttr = &_fafbb
			continue
		}
	}
_cdccc:
	for {
		_eefbd, _eeade := d.Token()
		if _eeade != nil {
			return _eeade
		}
		switch _ggfgfb := _eefbd.(type) {
		case _gd.StartElement:
			switch _ggfgfb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}:
				_ggbea := NewCT_SheetId()
				if _aebdeb := d.DecodeElement(_ggbea, &_ggfgfb); _aebdeb != nil {
					return _aebdeb
				}
				_ddfegc.SheetId = append(_ddfegc.SheetId, _ggbea)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070 \u0025\u0076", _ggfgfb.Name)
				if _dfceb := d.Skip(); _dfceb != nil {
					return _dfceb
				}
			}
		case _gd.EndElement:
			break _cdccc
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RangeSet and its children, prefixing error messages with path
func (_dddaa *CT_RangeSet) ValidateWithPath(path string) error { return nil }

func (_eadga *CT_OleSize) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _eadga.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionHeader and its children, prefixing error messages with path
func (_cebeg *CT_RevisionHeader) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_cebeg.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _cebeg.GuidAttr)
	}
	if _gaedg := _cebeg.SheetIdMap.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"); _gaedg != nil {
		return _gaedg
	}
	if _cebeg.ReviewedList != nil {
		if _cdga := _cebeg.ReviewedList.ValidateWithPath(path + "\u002f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"); _cdga != nil {
			return _cdga
		}
	}
	if _cebeg.ExtLst != nil {
		if _cddba := _cebeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cddba != nil {
			return _cddba
		}
	}
	return nil
}

func (_eaedd ST_TableType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_dffbfd := _gd.Attr{}
	_dffbfd.Name = name
	switch _eaedd {
	case ST_TableTypeUnset:
		_dffbfd.Value = ""
	case ST_TableTypeWorksheet:
		_dffbfd.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_TableTypeXml:
		_dffbfd.Value = "\u0078\u006d\u006c"
	case ST_TableTypeQueryTable:
		_dffbfd.Value = "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return _dffbfd, nil
}

func (_abdgb *CT_RevisionComment) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _abdgb.SheetIdAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0076", _abdgb.CellAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _abdgb.GuidAttr)})
	if _abdgb.ActionAttr != ST_RevisionActionUnset {
		_edfdg, _fdfdc := _abdgb.ActionAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _fdfdc != nil {
			return _fdfdc
		}
		start.Attr = append(start.Attr, _edfdg)
	}
	if _abdgb.AlwaysShowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_abdgb.AlwaysShowAttr))})
	}
	if _abdgb.OldAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_abdgb.OldAttr))})
	}
	if _abdgb.HiddenRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_abdgb.HiddenRowAttr))})
	}
	if _abdgb.HiddenColumnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_abdgb.HiddenColumnAttr))})
	}
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, Value: _b.Sprintf("\u0025\u0076", _abdgb.AuthorAttr)})
	if _abdgb.OldLengthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h"}, Value: _b.Sprintf("\u0025\u0076", *_abdgb.OldLengthAttr)})
	}
	if _abdgb.NewLengthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h"}, Value: _b.Sprintf("\u0025\u0076", *_abdgb.NewLengthAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Pane struct {

	// Horizontal Split Position
	XSplitAttr *float64

	// Vertical Split Position
	YSplitAttr *float64

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Active Pane
	ActivePaneAttr ST_Pane

	// Split State
	StateAttr ST_PaneState
}

func (_eeffc *CT_ColFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ffcbd := range start.Attr {
		if _ffcbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfbg, _dbga := _a.ParseUint(_ffcbd.Value, 10, 32)
			if _dbga != nil {
				return _dbga
			}
			_ccgg := uint32(_bfbg)
			_eeffc.CountAttr = &_ccgg
			continue
		}
	}
_aeea:
	for {
		_fbdg, _daef := d.Token()
		if _daef != nil {
			return _daef
		}
		switch _gdcc := _fbdg.(type) {
		case _gd.StartElement:
			switch _gdcc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_facg := NewCT_Field()
				if _eefb := d.DecodeElement(_facg, &_gdcc); _eefb != nil {
					return _eefb
				}
				_eeffc.Field = append(_eeffc.Field, _facg)
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006cF\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _gdcc.Name)
				if _eadde := d.Skip(); _eadde != nil {
					return _eadde
				}
			}
		case _gd.EndElement:
			break _aeea
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_PrintOptions() *CT_PrintOptions { _eegae := &CT_PrintOptions{}; return _eegae }

func NewCT_ChartFormats() *CT_ChartFormats { _bfdce := &CT_ChartFormats{}; return _bfdce }

func NewCT_ChartsheetPr() *CT_ChartsheetPr { _gcbe := &CT_ChartsheetPr{}; return _gcbe }

func (_abfcf *CT_Drawing) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gbab := range start.Attr {
		if _gbab.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gbab.Name.Local == "\u0069\u0064" || _gbab.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gbab.Name.Local == "\u0069\u0064" {
			_eecba, _eedf := _gbab.Value, error(nil)
			if _eedf != nil {
				return _eedf
			}
			_abfcf.IdAttr = _eecba
			continue
		}
	}
	for {
		_ebba, _dcgfg := d.Token()
		if _dcgfg != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u003a\u0020%\u0073", _dcgfg)
		}
		if _gfab, _fbgacg := _ebba.(_gd.EndElement); _fbgacg && _gfab.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_MdxMetadata() *CT_MdxMetadata { _eacac := &CT_MdxMetadata{}; return _eacac }

func NewCT_RevisionCellChange() *CT_RevisionCellChange {
	_faaeb := &CT_RevisionCellChange{}
	_faaeb.Nc = NewCT_Cell()
	return _faaeb
}

func (_ddacca *CT_TextField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ddacca.TypeAttr != ST_ExternalConnectionTypeUnset {
		_gcbcg, _facaae := _ddacca.TypeAttr.MarshalXMLAttr(_gd.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _facaae != nil {
			return _facaae
		}
		start.Attr = append(start.Attr, _gcbcg)
	}
	if _ddacca.PositionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_ddacca.PositionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_Break struct {

	// Id
	IdAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Manual Page Break
	ManAttr *bool

	// Pivot-Created Page Break
	PtAttr *bool
}

func (_gadg *CT_ExternalLinkChoice) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _gadg.ExternalBook != nil {
		_bccgd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}}
		e.EncodeElement(_gadg.ExternalBook, _bccgd)
	}
	if _gadg.DdeLink != nil {
		_dfdc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_gadg.DdeLink, _dfdc)
	}
	if _gadg.OleLink != nil {
		_cfbeb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_gadg.OleLink, _cfbeb)
	}
	return nil
}

func (_gegbc ST_CellFormulaType) String() string {
	switch _gegbc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0061\u0072\u0072a\u0079"
	case 3:
		return "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case 4:
		return "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return ""
}

// ValidateWithPath validates the CT_Dialogsheet and its children, prefixing error messages with path
func (_cfde *CT_Dialogsheet) ValidateWithPath(path string) error {
	if _cfde.SheetPr != nil {
		if _deacg := _cfde.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _deacg != nil {
			return _deacg
		}
	}
	if _cfde.SheetViews != nil {
		if _abfbf := _cfde.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _abfbf != nil {
			return _abfbf
		}
	}
	if _cfde.SheetFormatPr != nil {
		if _acec := _cfde.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _acec != nil {
			return _acec
		}
	}
	if _cfde.SheetProtection != nil {
		if _dbggf := _cfde.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _dbggf != nil {
			return _dbggf
		}
	}
	if _cfde.CustomSheetViews != nil {
		if _afea := _cfde.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _afea != nil {
			return _afea
		}
	}
	if _cfde.PrintOptions != nil {
		if _beeb := _cfde.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _beeb != nil {
			return _beeb
		}
	}
	if _cfde.PageMargins != nil {
		if _dafdc := _cfde.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _dafdc != nil {
			return _dafdc
		}
	}
	if _cfde.PageSetup != nil {
		if _aecdg := _cfde.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _aecdg != nil {
			return _aecdg
		}
	}
	if _cfde.HeaderFooter != nil {
		if _gbcc := _cfde.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _gbcc != nil {
			return _gbcc
		}
	}
	if _cfde.Drawing != nil {
		if _dgbd := _cfde.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _dgbd != nil {
			return _dgbd
		}
	}
	if _cfde.LegacyDrawing != nil {
		if _eagbc := _cfde.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _eagbc != nil {
			return _eagbc
		}
	}
	if _cfde.LegacyDrawingHF != nil {
		if _agfbf := _cfde.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _agfbf != nil {
			return _agfbf
		}
	}
	if _cfde.DrawingHF != nil {
		if _gfcc := _cfde.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gfcc != nil {
			return _gfcc
		}
	}
	if _cfde.OleObjects != nil {
		if _cage := _cfde.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _cage != nil {
			return _cage
		}
	}
	if _cfde.Controls != nil {
		if _dabag := _cfde.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _dabag != nil {
			return _dabag
		}
	}
	if _cfde.ExtLst != nil {
		if _cfefe := _cfde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfefe != nil {
			return _cfefe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConditionalFormatting and its children, prefixing error messages with path
func (_geea *CT_ConditionalFormatting) ValidateWithPath(path string) error {
	for _aecag, _cdaa := range _geea.CfRule {
		if _eaff := _cdaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u0066\u0052\u0075\u006c\u0065\u005b\u0025\u0064\u005d", path, _aecag)); _eaff != nil {
			return _eaff
		}
	}
	if _geea.ExtLst != nil {
		if _ggfbe := _geea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggfbe != nil {
			return _ggfbe
		}
	}
	return nil
}

func (_gbdfga ST_PatternType) String() string {
	switch _gbdfga {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006f\u006ci\u0064"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case 7:
		return "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 8:
		return "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case 9:
		return "\u0064\u0061\u0072\u006b\u0055\u0070"
	case 10:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case 11:
		return "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 12:
		return "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case 13:
		return "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 14:
		return "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case 15:
		return "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case 16:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case 17:
		return "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 18:
		return "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case 19:
		return "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return ""
}

// ValidateWithPath validates the CT_PivotTableStyle and its children, prefixing error messages with path
func (_aebdga *CT_PivotTableStyle) ValidateWithPath(path string) error { return nil }

func ParseStdlibTime(s string) (_db.Time, error) { return _db.Time{}, nil }

func (_bdgcdg ST_FilterOperator) String() string {
	switch _bdgcdg {
	case 0:
		return ""
	case 1:
		return "\u0065\u0071\u0075a\u006c"
	case 2:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 3:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_CellStyles and its children, prefixing error messages with path
func (_befdg *CT_CellStyles) ValidateWithPath(path string) error {
	for _efea, _affb := range _befdg.CellStyle {
		if _gcad := _affb.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _efea)); _gcad != nil {
			return _gcad
		}
	}
	return nil
}

func (_eafffa ST_SortMethod) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_edfca := _gd.Attr{}
	_edfca.Name = name
	switch _eafffa {
	case ST_SortMethodUnset:
		_edfca.Value = ""
	case ST_SortMethodStroke:
		_edfca.Value = "\u0073\u0074\u0072\u006f\u006b\u0065"
	case ST_SortMethodPinYin:
		_edfca.Value = "\u0070\u0069\u006e\u0059\u0069\u006e"
	case ST_SortMethodNone:
		_edfca.Value = "\u006e\u006f\u006e\u0065"
	}
	return _edfca, nil
}

func (_fagadg *CT_Hyperlink) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", _fagadg.RefAttr)})
	if _fagadg.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fagadg.IdAttr)})
	}
	if _fagadg.LocationAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_fagadg.LocationAttr)})
	}
	if _fagadg.TooltipAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_fagadg.TooltipAttr)})
	}
	if _fagadg.DisplayAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_fagadg.DisplayAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_egabd ST_TotalsRowFunction) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_bfgccg := _gd.Attr{}
	_bfgccg.Name = name
	switch _egabd {
	case ST_TotalsRowFunctionUnset:
		_bfgccg.Value = ""
	case ST_TotalsRowFunctionNone:
		_bfgccg.Value = "\u006e\u006f\u006e\u0065"
	case ST_TotalsRowFunctionSum:
		_bfgccg.Value = "\u0073\u0075\u006d"
	case ST_TotalsRowFunctionMin:
		_bfgccg.Value = "\u006d\u0069\u006e"
	case ST_TotalsRowFunctionMax:
		_bfgccg.Value = "\u006d\u0061\u0078"
	case ST_TotalsRowFunctionAverage:
		_bfgccg.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_TotalsRowFunctionCount:
		_bfgccg.Value = "\u0063\u006f\u0075n\u0074"
	case ST_TotalsRowFunctionCountNums:
		_bfgccg.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_TotalsRowFunctionStdDev:
		_bfgccg.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_TotalsRowFunctionVar:
		_bfgccg.Value = "\u0076\u0061\u0072"
	case ST_TotalsRowFunctionCustom:
		_bfgccg.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _bfgccg, nil
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_aebba *CT_GradientStop) ValidateWithPath(path string) error {
	if _cagab := _aebba.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _cagab != nil {
		return _cagab
	}
	return nil
}

func (_ffdgea *CT_PhoneticRun) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0062"}, Value: _b.Sprintf("\u0025\u0076", _ffdgea.SbAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0062"}, Value: _b.Sprintf("\u0025\u0076", _ffdgea.EbAttr)})
	e.EncodeToken(start)
	_agff := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_e.AddPreserveSpaceAttr(&_agff, _ffdgea.T)
	e.EncodeElement(_ffdgea.T, _agff)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type AG_AutoFormat struct {
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func NewCT_AutoFilter() *CT_AutoFilter { _fab := &CT_AutoFilter{}; return _fab }

const (
	ST_HorizontalAlignmentUnset            ST_HorizontalAlignment = 0
	ST_HorizontalAlignmentGeneral          ST_HorizontalAlignment = 1
	ST_HorizontalAlignmentLeft             ST_HorizontalAlignment = 2
	ST_HorizontalAlignmentCenter           ST_HorizontalAlignment = 3
	ST_HorizontalAlignmentRight            ST_HorizontalAlignment = 4
	ST_HorizontalAlignmentFill             ST_HorizontalAlignment = 5
	ST_HorizontalAlignmentJustify          ST_HorizontalAlignment = 6
	ST_HorizontalAlignmentCenterContinuous ST_HorizontalAlignment = 7
	ST_HorizontalAlignmentDistributed      ST_HorizontalAlignment = 8
)

type CT_CalculatedItems struct {

	// Calculated Item Formula Count
	CountAttr *uint32

	// Calculated Item
	CalculatedItem []*CT_CalculatedItem
}

func (_eedcd *CT_RevisionCustomView) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _eedcd.GuidAttr)})
	_dgbdg, _fgdbg := _eedcd.ActionAttr.MarshalXMLAttr(_gd.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _fgdbg != nil {
		return _fgdbg
	}
	start.Attr = append(start.Attr, _dgbdg)
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotFilter and its children, prefixing error messages with path
func (_fecac *CT_PivotFilter) ValidateWithPath(path string) error {
	if _fecac.TypeAttr == ST_PivotFilterTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ffebd := _fecac.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ffebd != nil {
		return _ffebd
	}
	if _gfdadc := _fecac.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _gfdadc != nil {
		return _gfdadc
	}
	if _fecac.ExtLst != nil {
		if _bbdca := _fecac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbdca != nil {
			return _bbdca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartFormats and its children, prefixing error messages with path
func (_eaaa *CT_ChartFormats) ValidateWithPath(path string) error {
	for _ecdb, _agba := range _eaaa.ChartFormat {
		if _bcce := _agba.ValidateWithPath(_b.Sprintf("\u0025s\u002fC\u0068\u0061\u0072\u0074\u0046o\u0072\u006da\u0074\u005b\u0025\u0064\u005d", path, _ecdb)); _bcce != nil {
			return _bcce
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Items and its children, prefixing error messages with path
func (_edfd *CT_Items) ValidateWithPath(path string) error {
	for _aebdeg, _adfd := range _edfd.Item {
		if _deegb := _adfd.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _aebdeg)); _deegb != nil {
			return _deegb
		}
	}
	return nil
}

func NewDialogsheet() *Dialogsheet {
	_fdfade := &Dialogsheet{}
	_fdfade.CT_Dialogsheet = *NewCT_Dialogsheet()
	return _fdfade
}

// ValidateWithPath validates the CT_Cfvo and its children, prefixing error messages with path
func (_geded *CT_Cfvo) ValidateWithPath(path string) error {
	if _geded.TypeAttr == ST_CfvoTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gabda := _geded.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gabda != nil {
		return _gabda
	}
	if _geded.ExtLst != nil {
		if _ggeb := _geded.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggeb != nil {
			return _ggeb
		}
	}
	return nil
}

type CT_CellWatches struct {

	// Cell Watch Item
	CellWatch []*CT_CellWatch
}

// Validate validates the CT_XmlPr and its children
func (_gbade *CT_XmlPr) Validate() error {
	return _gbade.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072")
}

func NewCT_Dialogsheet() *CT_Dialogsheet { _abbcf := &CT_Dialogsheet{}; return _abbcf }

// ValidateWithPath validates the CT_Mdx and its children, prefixing error messages with path
func (_fgbddc *CT_Mdx) ValidateWithPath(path string) error {
	if _fgbddc.FAttr == ST_MdxFunctionTypeUnset {
		return _b.Errorf("\u0025\u0073/\u0046\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _fggae := _fgbddc.FAttr.ValidateWithPath(path + "\u002f\u0046\u0041\u0074\u0074\u0072"); _fggae != nil {
		return _fggae
	}
	if _fgbddc.T != nil {
		if _gbeg := _fgbddc.T.ValidateWithPath(path + "\u002f\u0054"); _gbeg != nil {
			return _gbeg
		}
	}
	if _fgbddc.Ms != nil {
		if _efebf := _fgbddc.Ms.ValidateWithPath(path + "\u002f\u004d\u0073"); _efebf != nil {
			return _efebf
		}
	}
	if _fgbddc.P != nil {
		if _bccfg := _fgbddc.P.ValidateWithPath(path + "\u002f\u0050"); _bccfg != nil {
			return _bccfg
		}
	}
	if _fgbddc.K != nil {
		if _gagcf := _fgbddc.K.ValidateWithPath(path + "\u002f\u004b"); _gagcf != nil {
			return _gagcf
		}
	}
	return nil
}

func (_ecab *CT_MeasureDimensionMaps) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ecab.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ecab.CountAttr)})
	}
	e.EncodeToken(start)
	if _ecab.Map != nil {
		_bfdaaf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d\u0061\u0070"}}
		for _, _bcafc := range _ecab.Map {
			e.EncodeElement(_bcafc, _bfdaaf)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_abeeeg ST_SortType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_cbdcg := _gd.Attr{}
	_cbdcg.Name = name
	switch _abeeeg {
	case ST_SortTypeUnset:
		_cbdcg.Value = ""
	case ST_SortTypeNone:
		_cbdcg.Value = "\u006e\u006f\u006e\u0065"
	case ST_SortTypeAscending:
		_cbdcg.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_SortTypeDescending:
		_cbdcg.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case ST_SortTypeAscendingAlpha:
		_cbdcg.Value = "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case ST_SortTypeDescendingAlpha:
		_cbdcg.Value = "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case ST_SortTypeAscendingNatural:
		_cbdcg.Value = "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case ST_SortTypeDescendingNatural:
		_cbdcg.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return _cbdcg, nil
}

// Validate validates the CT_SharedItems and its children
func (_aeadg *CT_SharedItems) Validate() error {
	return _aeadg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073")
}

func (_acgdf ST_HtmlFmt) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_ebggg := _gd.Attr{}
	_ebggg.Name = name
	switch _acgdf {
	case ST_HtmlFmtUnset:
		_ebggg.Value = ""
	case ST_HtmlFmtNone:
		_ebggg.Value = "\u006e\u006f\u006e\u0065"
	case ST_HtmlFmtRtf:
		_ebggg.Value = "\u0072\u0074\u0066"
	case ST_HtmlFmtAll:
		_ebggg.Value = "\u0061\u006c\u006c"
	}
	return _ebggg, nil
}

// ValidateWithPath validates the CT_ColFields and its children, prefixing error messages with path
func (_dfbddg *CT_ColFields) ValidateWithPath(path string) error {
	for _cfef, _gacg := range _dfbddg.Field {
		if _dagf := _gacg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _cfef)); _dagf != nil {
			return _dagf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Sets and its children, prefixing error messages with path
func (_fbefcd *CT_Sets) ValidateWithPath(path string) error {
	for _agebe, _aeccc := range _fbefcd.Set {
		if _caafg := _aeccc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _agebe)); _caafg != nil {
			return _caafg
		}
	}
	return nil
}

// Validate validates the CT_Comment and its children
func (_afcg *CT_Comment) Validate() error {
	return _afcg.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}

const (
	ST_RevisionActionUnset  ST_RevisionAction = 0
	ST_RevisionActionAdd    ST_RevisionAction = 1
	ST_RevisionActionDelete ST_RevisionAction = 2
)

// ValidateWithPath validates the CT_ExternalCell and its children, prefixing error messages with path
func (_cedfe *CT_ExternalCell) ValidateWithPath(path string) error {
	if _ceedf := _cedfe.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ceedf != nil {
		return _ceedf
	}
	return nil
}

// Validate validates the CT_PivotCache and its children
func (_bebec *CT_PivotCache) Validate() error {
	return _bebec.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065")
}

// ValidateWithPath validates the CT_GroupLevel and its children, prefixing error messages with path
func (_beebb *CT_GroupLevel) ValidateWithPath(path string) error {
	if _beebb.Groups != nil {
		if _adbdb := _beebb.Groups.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0073"); _adbdb != nil {
			return _adbdb
		}
	}
	if _beebb.ExtLst != nil {
		if _ecbed := _beebb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecbed != nil {
			return _ecbed
		}
	}
	return nil
}

type CT_PivotCacheDefinition struct {
	IdAttr *string

	// Invalid Cache
	InvalidAttr *bool

	// Save Pivot Records
	SaveDataAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Optimize Cache for Memory
	OptimizeMemoryAttr *bool

	// Enable PivotCache Refresh
	EnableRefreshAttr *bool

	// Last Refreshed By
	RefreshedByAttr *string

	// PivotCache Last Refreshed Date
	RefreshedDateAttr *float64

	// PivotCache Last Refreshed Date ISO
	RefreshedDateIsoAttr *_db.Time

	// Background Query
	BackgroundQueryAttr *bool

	// Missing Items Limit
	MissingItemsLimitAttr *uint32

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// PivotCache Last Refreshed Version
	RefreshedVersionAttr *uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// PivotCache Record Count
	RecordCountAttr *uint32

	// Upgrade PivotCache on Refresh
	UpgradeOnRefreshAttr *bool

	// Tuple Cache
	TupleCacheAttr *bool

	// Supports Subqueries
	SupportSubqueryAttr *bool

	// Supports Attribute Drilldown
	SupportAdvancedDrillAttr *bool

	// PivotCache Source Description
	CacheSource *CT_CacheSource

	// PivotCache Fields
	CacheFields *CT_CacheFields

	// PivotCache Hierarchies
	CacheHierarchies *CT_CacheHierarchies

	// OLAP KPIs
	Kpis *CT_PCDKPIs

	// Tuple Cache
	TupleCache *CT_TupleCache

	// Calculated Items
	CalculatedItems *CT_CalculatedItems

	// Calculated Members
	CalculatedMembers *CT_CalculatedMembers

	// OLAP Dimensions
	Dimensions *CT_Dimensions

	// OLAP Measure Groups
	MeasureGroups *CT_MeasureGroups

	// OLAP Measure Group
	Maps *CT_MeasureDimensionMaps

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_DateGroupItem and its children
func (_bedb *CT_DateGroupItem) Validate() error {
	return _bedb.ValidateWithPath("\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d")
}

func (_eacad *ST_MdxKPIProperty) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_eacad = 0
	case "\u0076":
		*_eacad = 1
	case "\u0067":
		*_eacad = 2
	case "\u0073":
		*_eacad = 3
	case "\u0074":
		*_eacad = 4
	case "\u0077":
		*_eacad = 5
	case "\u006d":
		*_eacad = 6
	}
	return nil
}

func (_fcefd *ST_SortType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_fcefd = 0
	case "\u006e\u006f\u006e\u0065":
		*_fcefd = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_fcefd = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_fcefd = 3
	case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
		*_fcefd = 4
	case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
		*_fcefd = 5
	case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
		*_fcefd = 6
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
		*_fcefd = 7
	}
	return nil
}

// Validate validates the CT_SmartTagTypes and its children
func (_aadcba *CT_SmartTagTypes) Validate() error {
	return _aadcba.ValidateWithPath("\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073")
}

// ValidateWithPath validates the CT_SmartTagTypes and its children, prefixing error messages with path
func (_gcgdf *CT_SmartTagTypes) ValidateWithPath(path string) error {
	for _faffbc, _ddee := range _gcgdf.SmartTagType {
		if _dbaeg := _ddee.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053ma\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _faffbc)); _dbaeg != nil {
			return _dbaeg
		}
	}
	return nil
}

type CT_SheetViews struct {

	// Worksheet View
	SheetView []*CT_SheetView

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_VolType() *CT_VolType {
	_aedeb := &CT_VolType{}
	_aedeb.TypeAttr = ST_VolDepType(1)
	return _aedeb
}

func NewCT_MetadataRecord() *CT_MetadataRecord { _cagdf := &CT_MetadataRecord{}; return _cagdf }

// Validate validates the CT_GroupLevel and its children
func (_bbcfg *CT_GroupLevel) Validate() error {
	return _bbcfg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c")
}

func (_ffcfbga ST_OleUpdate) Validate() error { return _ffcfbga.ValidateWithPath("") }

func (_dgfaf *CT_OutlinePr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dgfaf.ApplyStylesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgfaf.ApplyStylesAttr))})
	}
	if _dgfaf.SummaryBelowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgfaf.SummaryBelowAttr))})
	}
	if _dgfaf.SummaryRightAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgfaf.SummaryRightAttr))})
	}
	if _dgfaf.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_dgfaf.ShowOutlineSymbolsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_Borders() *CT_Borders { _edgg := &CT_Borders{}; return _edgg }

// ValidateWithPath validates the CT_SortState and its children, prefixing error messages with path
func (_dabce *CT_SortState) ValidateWithPath(path string) error {
	if _efaad := _dabce.SortMethodAttr.ValidateWithPath(path + "\u002fS\u006fr\u0074\u004d\u0065\u0074\u0068\u006f\u0064\u0041\u0074\u0074\u0072"); _efaad != nil {
		return _efaad
	}
	for _eaadg, _edeafa := range _dabce.SortCondition {
		if _fdggb := _edeafa.ValidateWithPath(_b.Sprintf("%\u0073/\u0053\u006f\u0072\u0074\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e[%\u0064\u005d", path, _eaadg)); _fdggb != nil {
			return _fdggb
		}
	}
	if _dabce.ExtLst != nil {
		if _fgfdd := _dabce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgfdd != nil {
			return _fgfdd
		}
	}
	return nil
}

type CT_CacheFields struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field
	CacheField []*CT_CacheField
}

// ValidateWithPath validates the CT_ExternalDefinedNames and its children, prefixing error messages with path
func (_dgbf *CT_ExternalDefinedNames) ValidateWithPath(path string) error {
	for _eecbf, _gfgae := range _dgbf.DefinedName {
		if _dfbcc := _gfgae.ValidateWithPath(_b.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _eecbf)); _dfbcc != nil {
			return _dfbcc
		}
	}
	return nil
}

func (_cedfd ST_VolDepType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_cedfd.String(), start)
}

// Validate validates the CT_Fill and its children
func (_acgga *CT_Fill) Validate() error {
	return _acgga.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u006c")
}

// ValidateWithPath validates the CT_SheetId and its children, prefixing error messages with path
func (_fcgdc *CT_SheetId) ValidateWithPath(path string) error { return nil }

type CT_IgnoredErrors struct {

	// Ignored Error
	IgnoredError []*CT_IgnoredError
	ExtLst       *CT_ExtensionList
}

func (_ggffeb ST_CredMethod) Validate() error { return _ggffeb.ValidateWithPath("") }

type CT_WebPublishItem struct {

	// Id
	IdAttr uint32

	// Destination Bookmark
	DivIdAttr string

	// Web Source Type
	SourceTypeAttr ST_WebSourceType

	// Source Id
	SourceRefAttr *string

	// Source Object Name
	SourceObjectAttr *string

	// Destination File Name
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Automatically Publish
	AutoRepublishAttr *bool
}

// ValidateWithPath validates the CT_OleLink and its children, prefixing error messages with path
func (_ccacf *CT_OleLink) ValidateWithPath(path string) error {
	if _ccacf.OleItems != nil {
		if _bafgf := _ccacf.OleItems.ValidateWithPath(path + "\u002fO\u006c\u0065\u0049\u0074\u0065\u006ds"); _bafgf != nil {
			return _bafgf
		}
	}
	return nil
}

type CT_IgnoredError struct {

	// Sequence of References
	SqrefAttr ST_Sqref

	// Evaluation Error
	EvalErrorAttr *bool

	// Two Digit Text Year
	TwoDigitTextYearAttr *bool

	// Number Stored As Text
	NumberStoredAsTextAttr *bool

	// Formula
	FormulaAttr *bool

	// Formula Range
	FormulaRangeAttr *bool

	// Unlocked Formula
	UnlockedFormulaAttr *bool

	// Empty Cell Reference
	EmptyCellReferenceAttr *bool

	// List Data Validation
	ListDataValidationAttr *bool

	// Calculated Column
	CalculatedColumnAttr *bool
}

func (_bgeba ST_Comments) Validate() error { return _bgeba.ValidateWithPath("") }

func (_ffgdb *ST_TextVAlign) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dcaeb, _bebaf := d.Token()
	if _bebaf != nil {
		return _bebaf
	}
	if _egbge, _egecgg := _dcaeb.(_gd.EndElement); _egecgg && _egbge.Name == start.Name {
		*_ffgdb = 1
		return nil
	}
	if _adafe, _fcbdf := _dcaeb.(_gd.CharData); !_fcbdf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcaeb)
	} else {
		switch string(_adafe) {
		case "":
			*_ffgdb = 0
		case "\u0074\u006f\u0070":
			*_ffgdb = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_ffgdb = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_ffgdb = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_ffgdb = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_ffgdb = 5
		}
	}
	_dcaeb, _bebaf = d.Token()
	if _bebaf != nil {
		return _bebaf
	}
	if _gffeag, _gcggg := _dcaeb.(_gd.EndElement); _gcggg && _gffeag.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcaeb)
}

func NewCT_ColFields() *CT_ColFields { _aebc := &CT_ColFields{}; return _aebc }

func (_gacff *CT_Connections) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_ecbfg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}}
	for _, _bagba := range _gacff.Connection {
		e.EncodeElement(_bagba, _ecbfg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ebbgcg ST_TargetScreenSize) ValidateWithPath(path string) error {
	switch _ebbgcg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebbgcg))
	}
	return nil
}

func (_ecagg *CT_FileVersion) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _ecagg.AppNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061p\u0070\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ecagg.AppNameAttr)})
	}
	if _ecagg.LastEditedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecagg.LastEditedAttr)})
	}
	if _ecagg.LowestEditedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecagg.LowestEditedAttr)})
	}
	if _ecagg.RupBuildAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecagg.RupBuildAttr)})
	}
	if _ecagg.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ecagg.CodeNameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_FontName() *CT_FontName { _ggedd := &CT_FontName{}; return _ggedd }

func (_fedfbd ST_TableType) Validate() error { return _fedfbd.ValidateWithPath("") }

func (_fgbead *CT_SheetData) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _fgbead.Row != nil {
		_dgdeca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _fcddd := range _fgbead.Row {
			e.EncodeElement(_fcddd, _dgdeca)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fcbgf *CT_RangeSet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fcbgf.I1Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0031"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.I1Attr)})
	}
	if _fcbgf.I2Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0032"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.I2Attr)})
	}
	if _fcbgf.I3Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0033"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.I3Attr)})
	}
	if _fcbgf.I4Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u0034"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.I4Attr)})
	}
	if _fcbgf.RefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.RefAttr)})
	}
	if _fcbgf.NameAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.NameAttr)})
	}
	if _fcbgf.SheetAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.SheetAttr)})
	}
	if _fcbgf.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fcbgf.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotAreas and its children, prefixing error messages with path
func (_ffbfa *CT_PivotAreas) ValidateWithPath(path string) error {
	for _dcgbe, _abbfe := range _ffbfa.PivotArea {
		if _bedaf := _abbfe.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0050\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u005b\u0025\u0064\u005d", path, _dcgbe)); _bedaf != nil {
			return _bedaf
		}
	}
	return nil
}

func (_dgbgc *ST_ExternalConnectionType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dafegd, _efdbb := d.Token()
	if _efdbb != nil {
		return _efdbb
	}
	if _cdgae, _gbdfe := _dafegd.(_gd.EndElement); _gbdfe && _cdgae.Name == start.Name {
		*_dgbgc = 1
		return nil
	}
	if _cabdd, _bbgfda := _dafegd.(_gd.CharData); !_bbgfda {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dafegd)
	} else {
		switch string(_cabdd) {
		case "":
			*_dgbgc = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_dgbgc = 1
		case "\u0074\u0065\u0078\u0074":
			*_dgbgc = 2
		case "\u004d\u0044\u0059":
			*_dgbgc = 3
		case "\u0044\u004d\u0059":
			*_dgbgc = 4
		case "\u0059\u004d\u0044":
			*_dgbgc = 5
		case "\u004d\u0059\u0044":
			*_dgbgc = 6
		case "\u0044\u0059\u004d":
			*_dgbgc = 7
		case "\u0059\u0044\u004d":
			*_dgbgc = 8
		case "\u0073\u006b\u0069\u0070":
			*_dgbgc = 9
		case "\u0045\u004d\u0044":
			*_dgbgc = 10
		}
	}
	_dafegd, _efdbb = d.Token()
	if _efdbb != nil {
		return _efdbb
	}
	if _gfgcg, _aecaf := _dafegd.(_gd.EndElement); _aecaf && _gfgcg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dafegd)
}

// Validate validates the CT_MeasureGroups and its children
func (_daeaf *CT_MeasureGroups) Validate() error {
	return _daeaf.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073")
}

func (_ecge *CT_DataFields) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _cgcdg := range start.Attr {
		if _cgcdg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccbcd, _gagg := _a.ParseUint(_cgcdg.Value, 10, 32)
			if _gagg != nil {
				return _gagg
			}
			_dafg := uint32(_ccbcd)
			_ecge.CountAttr = &_dafg
			continue
		}
	}
_ffged:
	for {
		_bebf, _bfebd := d.Token()
		if _bfebd != nil {
			return _bfebd
		}
		switch _bcff := _bebf.(type) {
		case _gd.StartElement:
			switch _bcff.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}:
				_gfag := NewCT_DataField()
				if _ddbb := d.DecodeElement(_gfag, &_bcff); _ddbb != nil {
					return _ddbb
				}
				_ecge.DataField = append(_ecge.DataField, _gfag)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044a\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _bcff.Name)
				if _fbef := d.Skip(); _fbef != nil {
					return _fbef
				}
			}
		case _gd.EndElement:
			break _ffged
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Workbook struct {

	// Document Conformance Class
	ConformanceAttr _af.ST_ConformanceClass

	// File Version
	FileVersion *CT_FileVersion

	// File Sharing
	FileSharing *CT_FileSharing

	// Workbook Properties
	WorkbookPr *CT_WorkbookPr

	// Workbook Protection
	WorkbookProtection *CT_WorkbookProtection

	// Workbook Views
	BookViews *CT_BookViews

	// Sheets
	Sheets *CT_Sheets

	// Function Groups
	FunctionGroups *CT_FunctionGroups

	// External References
	ExternalReferences *CT_ExternalReferences

	// Defined Names
	DefinedNames *CT_DefinedNames

	// Calculation Properties
	CalcPr *CT_CalcPr

	// Embedded Object Size
	OleSize *CT_OleSize

	// Custom Workbook Views
	CustomWorkbookViews *CT_CustomWorkbookViews

	// PivotCaches
	PivotCaches *CT_PivotCaches

	// Smart Tag Properties
	SmartTagPr *CT_SmartTagPr

	// Smart Tag Types
	SmartTagTypes *CT_SmartTagTypes

	// Web Publishing Properties
	WebPublishing *CT_WebPublishing

	// File Recovery Properties
	FileRecoveryPr []*CT_FileRecoveryPr

	// Web Publish Objects
	WebPublishObjects *CT_WebPublishObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_edbgbb *CT_SortCondition) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gdebg := range start.Attr {
		if _gdebg.Name.Local == "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067" {
			_bfcdd, _dgcfc := _a.ParseBool(_gdebg.Value)
			if _dgcfc != nil {
				return _dgcfc
			}
			_edbgbb.DescendingAttr = &_bfcdd
			continue
		}
		if _gdebg.Name.Local == "\u0073\u006f\u0072\u0074\u0042\u0079" {
			_edbgbb.SortByAttr.UnmarshalXMLAttr(_gdebg)
			continue
		}
		if _gdebg.Name.Local == "\u0072\u0065\u0066" {
			_adggc, _eddfeg := _gdebg.Value, error(nil)
			if _eddfeg != nil {
				return _eddfeg
			}
			_edbgbb.RefAttr = _adggc
			continue
		}
		if _gdebg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074" {
			_gagfb, _acbcd := _gdebg.Value, error(nil)
			if _acbcd != nil {
				return _acbcd
			}
			_edbgbb.CustomListAttr = &_gagfb
			continue
		}
		if _gdebg.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_gcggd, _gdgge := _a.ParseUint(_gdebg.Value, 10, 32)
			if _gdgge != nil {
				return _gdgge
			}
			_abded := uint32(_gcggd)
			_edbgbb.DxfIdAttr = &_abded
			continue
		}
		if _gdebg.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_edbgbb.IconSetAttr.UnmarshalXMLAttr(_gdebg)
			continue
		}
		if _gdebg.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_fgfgc, _bggabf := _a.ParseUint(_gdebg.Value, 10, 32)
			if _bggabf != nil {
				return _bggabf
			}
			_dbcbg := uint32(_fgfgc)
			_edbgbb.IconIdAttr = &_dbcbg
			continue
		}
	}
	for {
		_ggebe, _cgcae := d.Token()
		if _cgcae != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006f\u0072\u0074C\u006fn\u0064\u0069\u0074\u0069\u006f\u006e\u003a \u0025\u0073", _cgcae)
		}
		if _ccaeec, _ccecfa := _ggebe.(_gd.EndElement); _ccecfa && _ccaeec.Name == start.Name {
			break
		}
	}
	return nil
}

type CalcChain struct{ CT_CalcChain }

func NewCT_Location() *CT_Location { _gbff := &CT_Location{}; return _gbff }

func NewCT_MeasureDimensionMap() *CT_MeasureDimensionMap {
	_dfad := &CT_MeasureDimensionMap{}
	return _dfad
}

func NewCT_CustomProperties() *CT_CustomProperties { _gcec := &CT_CustomProperties{}; return _gcec }

func (_bdbca *CT_SharedItems) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bdbca.ContainsSemiMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsSemiMixedTypesAttr))})
	}
	if _bdbca.ContainsNonDateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsNonDateAttr))})
	}
	if _bdbca.ContainsDateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsDateAttr))})
	}
	if _bdbca.ContainsStringAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsStringAttr))})
	}
	if _bdbca.ContainsBlankAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsBlankAttr))})
	}
	if _bdbca.ContainsMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsMixedTypesAttr))})
	}
	if _bdbca.ContainsNumberAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsNumberAttr))})
	}
	if _bdbca.ContainsIntegerAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.ContainsIntegerAttr))})
	}
	if _bdbca.MinValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbca.MinValueAttr)})
	}
	if _bdbca.MaxValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbca.MaxValueAttr)})
	}
	if _bdbca.MinDateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006di\u006e\u0044\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbca.MinDateAttr)})
	}
	if _bdbca.MaxDateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006da\u0078\u0044\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bdbca.MaxDateAttr)})
	}
	if _bdbca.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bdbca.CountAttr)})
	}
	if _bdbca.LongTextAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bdbca.LongTextAttr))})
	}
	e.EncodeToken(start)
	if _bdbca.M != nil {
		_bbfce := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _eecac := range _bdbca.M {
			e.EncodeElement(_eecac, _bbfce)
		}
	}
	if _bdbca.N != nil {
		_afefc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _ccagae := range _bdbca.N {
			e.EncodeElement(_ccagae, _afefc)
		}
	}
	if _bdbca.B != nil {
		_baegfc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _ebece := range _bdbca.B {
			e.EncodeElement(_ebece, _baegfc)
		}
	}
	if _bdbca.E != nil {
		_gbgfaf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _ffeeg := range _bdbca.E {
			e.EncodeElement(_ffeeg, _gbgfaf)
		}
	}
	if _bdbca.S != nil {
		_eecfdg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _bfbee := range _bdbca.S {
			e.EncodeElement(_bfbee, _eecfdg)
		}
	}
	if _bdbca.D != nil {
		_aebgf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _cbfaa := range _bdbca.D {
			e.EncodeElement(_cbfaa, _aebgf)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dfedb *CT_PCDKPI) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ffgfd := range start.Attr {
		if _ffgfd.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gadgcg, _dbdcb := _ffgfd.Value, error(nil)
			if _dbdcb != nil {
				return _dbdcb
			}
			_dfedb.UniqueNameAttr = _gadgcg
			continue
		}
		if _ffgfd.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_dgbbe, _egaae := _ffgfd.Value, error(nil)
			if _egaae != nil {
				return _egaae
			}
			_dfedb.CaptionAttr = &_dgbbe
			continue
		}
		if _ffgfd.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_fabgb, _eegaf := _ffgfd.Value, error(nil)
			if _eegaf != nil {
				return _eegaf
			}
			_dfedb.DisplayFolderAttr = &_fabgb
			continue
		}
		if _ffgfd.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_gabc, _faedge := _ffgfd.Value, error(nil)
			if _faedge != nil {
				return _faedge
			}
			_dfedb.MeasureGroupAttr = &_gabc
			continue
		}
		if _ffgfd.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_fdgbc, _bgdbga := _ffgfd.Value, error(nil)
			if _bgdbga != nil {
				return _bgdbga
			}
			_dfedb.ParentAttr = &_fdgbc
			continue
		}
		if _ffgfd.Name.Local == "\u0076\u0061\u006cu\u0065" {
			_bcdfce, _eaacb := _ffgfd.Value, error(nil)
			if _eaacb != nil {
				return _eaacb
			}
			_dfedb.ValueAttr = _bcdfce
			continue
		}
		if _ffgfd.Name.Local == "\u0067\u006f\u0061\u006c" {
			_acddf, _cdfdg := _ffgfd.Value, error(nil)
			if _cdfdg != nil {
				return _cdfdg
			}
			_dfedb.GoalAttr = &_acddf
			continue
		}
		if _ffgfd.Name.Local == "\u0073\u0074\u0061\u0074\u0075\u0073" {
			_edcbe, _ffddb := _ffgfd.Value, error(nil)
			if _ffddb != nil {
				return _ffddb
			}
			_dfedb.StatusAttr = &_edcbe
			continue
		}
		if _ffgfd.Name.Local == "\u0074\u0072\u0065n\u0064" {
			_cfaec, _ccbdc := _ffgfd.Value, error(nil)
			if _ccbdc != nil {
				return _ccbdc
			}
			_dfedb.TrendAttr = &_cfaec
			continue
		}
		if _ffgfd.Name.Local == "\u0077\u0065\u0069\u0067\u0068\u0074" {
			_dfade, _fccfc := _ffgfd.Value, error(nil)
			if _fccfc != nil {
				return _fccfc
			}
			_dfedb.WeightAttr = &_dfade
			continue
		}
		if _ffgfd.Name.Local == "\u0074\u0069\u006d\u0065" {
			_afgee, _eccb := _ffgfd.Value, error(nil)
			if _eccb != nil {
				return _eccb
			}
			_dfedb.TimeAttr = &_afgee
			continue
		}
	}
	for {
		_gbbe, _fcaab := d.Token()
		if _fcaab != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0050\u0043\u0044K\u0050\u0049\u003a\u0020\u0025\u0073", _fcaab)
		}
		if _ffacg, _bgfgf := _gbbe.(_gd.EndElement); _bgfgf && _ffacg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_edggef ST_FieldSortType) ValidateWithPath(path string) error {
	switch _edggef {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edggef))
	}
	return nil
}

type CT_PageItem struct {

	// Page Item Name
	NameAttr string
}

func NewCT_TableStyleInfo() *CT_TableStyleInfo { _gebdc := &CT_TableStyleInfo{}; return _gebdc }

const (
	ST_SheetStateUnset      ST_SheetState = 0
	ST_SheetStateVisible    ST_SheetState = 1
	ST_SheetStateHidden     ST_SheetState = 2
	ST_SheetStateVeryHidden ST_SheetState = 3
)

func NewCT_TupleCache() *CT_TupleCache { _dgfbd := &CT_TupleCache{}; return _dgfbd }

func (_cebec *ST_VolValueType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_cebec = 0
	case "\u0062":
		*_cebec = 1
	case "\u006e":
		*_cebec = 2
	case "\u0065":
		*_cebec = 3
	case "\u0073":
		*_cebec = 4
	}
	return nil
}

type ST_CalcMode byte

func (_gbbfc *ST_ConditionalFormattingOperator) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_gbbfc = 0
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_gbbfc = 1
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_gbbfc = 2
	case "\u0065\u0071\u0075a\u006c":
		*_gbbfc = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_gbbfc = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_gbbfc = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_gbbfc = 6
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_gbbfc = 7
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_gbbfc = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_gbbfc = 9
	case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_gbbfc = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_gbbfc = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_gbbfc = 12
	}
	return nil
}

func (_gccde *CT_FunctionGroups) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbeab := range start.Attr {
		if _bbeab.Name.Local == "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074" {
			_acccc, _fefc := _a.ParseUint(_bbeab.Value, 10, 32)
			if _fefc != nil {
				return _fefc
			}
			_fdbc := uint32(_acccc)
			_gccde.BuiltInGroupCountAttr = &_fdbc
			continue
		}
	}
_aecde:
	for {
		_baacg, _ggbac := d.Token()
		if _ggbac != nil {
			return _ggbac
		}
		switch _gfgaee := _baacg.(type) {
		case _gd.StartElement:
			switch _gfgaee.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}:
				_decaf := NewCT_FunctionGroup()
				if _fbdfe := d.DecodeElement(_decaf, &_gfgaee); _fbdfe != nil {
					return _fbdfe
				}
				_gccde.FunctionGroup = append(_gccde.FunctionGroup, _decaf)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025\u0076", _gfgaee.Name)
				if _feggc := d.Skip(); _feggc != nil {
					return _feggc
				}
			}
		case _gd.EndElement:
			break _aecde
		case _gd.CharData:
		}
	}
	return nil
}

type CT_GroupMembers struct {

	// Group Member Count
	CountAttr *uint32

	// OLAP Group Member
	GroupMember []*CT_GroupMember
}

type CT_MemberProperties struct {

	// OLAP Member Properties Count
	CountAttr *uint32

	// OLAP Member Property
	Mp []*CT_MemberProperty
}

type CT_FutureMetadataBlock struct {

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_PageItem() *CT_PageItem { _cadce := &CT_PageItem{}; return _cadce }

func (_bbfbf *CT_CacheSource) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bbfbf.TypeAttr = ST_SourceType(1)
	for _, _ggba := range start.Attr {
		if _ggba.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bbfbf.TypeAttr.UnmarshalXMLAttr(_ggba)
			continue
		}
		if _ggba.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_adgb, _ccbe := _a.ParseUint(_ggba.Value, 10, 32)
			if _ccbe != nil {
				return _ccbe
			}
			_eaaf := uint32(_adgb)
			_bbfbf.ConnectionIdAttr = &_eaaf
			continue
		}
	}
_ccbf:
	for {
		_dgd, _adga := d.Token()
		if _adga != nil {
			return _adga
		}
		switch _fcf := _dgd.(type) {
		case _gd.StartElement:
			switch _fcf.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}:
				_bbfbf.WorksheetSource = NewCT_WorksheetSource()
				if _ccbb := d.DecodeElement(_bbfbf.WorksheetSource, &_fcf); _ccbb != nil {
					return _ccbb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}:
				_bbfbf.Consolidation = NewCT_Consolidation()
				if _ffg := d.DecodeElement(_bbfbf.Consolidation, &_fcf); _ffg != nil {
					return _ffg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbfbf.ExtLst = NewCT_ExtensionList()
				if _dbec := d.DecodeElement(_bbfbf.ExtLst, &_fcf); _dbec != nil {
					return _dbec
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053\u006fu\u0072c\u0065\u0020\u0025\u0076", _fcf.Name)
				if _abga := d.Skip(); _abga != nil {
					return _abga
				}
			}
		case _gd.EndElement:
			break _ccbf
		case _gd.CharData:
		}
	}
	return nil
}

type CT_TableStyleInfo struct {

	// Style Name
	NameAttr *string

	// Show First Column
	ShowFirstColumnAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColumnStripesAttr *bool
}

func (_eaef *CT_FontName) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ggfcf := range start.Attr {
		if _ggfcf.Name.Local == "\u0076\u0061\u006c" {
			_ccgf, _afdgf := _ggfcf.Value, error(nil)
			if _afdgf != nil {
				return _afdgf
			}
			_eaef.ValAttr = _ccgf
			continue
		}
	}
	for {
		_cbfa, _aegbf := d.Token()
		if _aegbf != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _aegbf)
		}
		if _egaecb, _aeafe := _cbfa.(_gd.EndElement); _aeafe && _egaecb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataStringIndex and its children, prefixing error messages with path
func (_edcaag *CT_MetadataStringIndex) ValidateWithPath(path string) error { return nil }

const (
	ST_PatternTypeUnset           ST_PatternType = 0
	ST_PatternTypeNone            ST_PatternType = 1
	ST_PatternTypeSolid           ST_PatternType = 2
	ST_PatternTypeMediumGray      ST_PatternType = 3
	ST_PatternTypeDarkGray        ST_PatternType = 4
	ST_PatternTypeLightGray       ST_PatternType = 5
	ST_PatternTypeDarkHorizontal  ST_PatternType = 6
	ST_PatternTypeDarkVertical    ST_PatternType = 7
	ST_PatternTypeDarkDown        ST_PatternType = 8
	ST_PatternTypeDarkUp          ST_PatternType = 9
	ST_PatternTypeDarkGrid        ST_PatternType = 10
	ST_PatternTypeDarkTrellis     ST_PatternType = 11
	ST_PatternTypeLightHorizontal ST_PatternType = 12
	ST_PatternTypeLightVertical   ST_PatternType = 13
	ST_PatternTypeLightDown       ST_PatternType = 14
	ST_PatternTypeLightUp         ST_PatternType = 15
	ST_PatternTypeLightGrid       ST_PatternType = 16
	ST_PatternTypeLightTrellis    ST_PatternType = 17
	ST_PatternTypeGray125         ST_PatternType = 18
	ST_PatternTypeGray0625        ST_PatternType = 19
)

type CT_CalculatedMember struct {

	// Calculated Member Name
	NameAttr string

	// Calculated Member MDX Formula
	MdxAttr string

	// OLAP Calculated Member Name
	MemberNameAttr *string

	// Hierarchy Name
	HierarchyAttr *string

	// Parent Name
	ParentAttr *string

	// Calculated Members Solve Order
	SolveOrderAttr *int32

	// Set
	SetAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_DataValidationTypeUnset      ST_DataValidationType = 0
	ST_DataValidationTypeNone       ST_DataValidationType = 1
	ST_DataValidationTypeWhole      ST_DataValidationType = 2
	ST_DataValidationTypeDecimal    ST_DataValidationType = 3
	ST_DataValidationTypeList       ST_DataValidationType = 4
	ST_DataValidationTypeDate       ST_DataValidationType = 5
	ST_DataValidationTypeTime       ST_DataValidationType = 6
	ST_DataValidationTypeTextLength ST_DataValidationType = 7
	ST_DataValidationTypeCustom     ST_DataValidationType = 8
)

// Validate validates the CT_Tuple and its children
func (_gageb *CT_Tuple) Validate() error {
	return _gageb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065")
}

func (_bccccg *ST_HorizontalAlignment) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_bccccg = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_bccccg = 1
	case "\u006c\u0065\u0066\u0074":
		*_bccccg = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_bccccg = 3
	case "\u0072\u0069\u0067h\u0074":
		*_bccccg = 4
	case "\u0066\u0069\u006c\u006c":
		*_bccccg = 5
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_bccccg = 6
	case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
		*_bccccg = 7
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_bccccg = 8
	}
	return nil
}

func (_geed *CT_CellProtection) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _geed.LockedAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_geed.LockedAttr))})
	}
	if _geed.HiddenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_geed.HiddenAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_dedac *CT_PageMargins) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _b.Sprintf("\u0025\u0076", _dedac.LeftAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _b.Sprintf("\u0025\u0076", _dedac.RightAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0076", _dedac.TopAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0076", _dedac.BottomAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", _dedac.HeaderAttr)})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u006f\u006f\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", _dedac.FooterAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalculatedItems and its children
func (_ffdg *CT_CalculatedItems) Validate() error {
	return _ffdg.ValidateWithPath("\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073")
}

func (_dacae *CT_TableColumn) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gdfda := range start.Attr {
		if _gdfda.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_bgfcge, _faceea := _a.ParseUint(_gdfda.Value, 10, 32)
			if _faceea != nil {
				return _faceea
			}
			_cdccge := uint32(_bgfcge)
			_dacae.TotalsRowDxfIdAttr = &_cdccge
			continue
		}
		if _gdfda.Name.Local == "\u0069\u0064" {
			_gadca, _fdefea := _a.ParseUint(_gdfda.Value, 10, 32)
			if _fdefea != nil {
				return _fdefea
			}
			_dacae.IdAttr = uint32(_gadca)
			continue
		}
		if _gdfda.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_efgddc, _dbgabg := _gdfda.Value, error(nil)
			if _dbgabg != nil {
				return _dbgabg
			}
			_dacae.HeaderRowCellStyleAttr = &_efgddc
			continue
		}
		if _gdfda.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ccdbad, _cdcbe := _gdfda.Value, error(nil)
			if _cdcbe != nil {
				return _cdcbe
			}
			_dacae.NameAttr = _ccdbad
			continue
		}
		if _gdfda.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c" {
			_gggbc, _abbfee := _gdfda.Value, error(nil)
			if _abbfee != nil {
				return _abbfee
			}
			_dacae.TotalsRowLabelAttr = &_gggbc
			continue
		}
		if _gdfda.Name.Local == "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064" {
			_cegfb, _fgfecc := _a.ParseUint(_gdfda.Value, 10, 32)
			if _fgfecc != nil {
				return _fgfecc
			}
			_gcgec := uint32(_cegfb)
			_dacae.QueryTableFieldIdAttr = &_gcgec
			continue
		}
		if _gdfda.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_cfebc, _afacg := _a.ParseUint(_gdfda.Value, 10, 32)
			if _afacg != nil {
				return _afacg
			}
			_cefgc := uint32(_cfebc)
			_dacae.HeaderRowDxfIdAttr = &_cefgc
			continue
		}
		if _gdfda.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_ecbcg, _adfaec := _a.ParseUint(_gdfda.Value, 10, 32)
			if _adfaec != nil {
				return _adfaec
			}
			_eeafbd := uint32(_ecbcg)
			_dacae.DataDxfIdAttr = &_eeafbd
			continue
		}
		if _gdfda.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bdcgdf, _agcf := _gdfda.Value, error(nil)
			if _agcf != nil {
				return _agcf
			}
			_dacae.UniqueNameAttr = &_bdcgdf
			continue
		}
		if _gdfda.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e" {
			_dacae.TotalsRowFunctionAttr.UnmarshalXMLAttr(_gdfda)
			continue
		}
		if _gdfda.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_dgceg, _egeaba := _gdfda.Value, error(nil)
			if _egeaba != nil {
				return _egeaba
			}
			_dacae.DataCellStyleAttr = &_dgceg
			continue
		}
		if _gdfda.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_bdcgc, _gecdce := _gdfda.Value, error(nil)
			if _gecdce != nil {
				return _gecdce
			}
			_dacae.TotalsRowCellStyleAttr = &_bdcgc
			continue
		}
	}
_adged:
	for {
		_efbab, _cgccc := d.Token()
		if _cgccc != nil {
			return _cgccc
		}
		switch _bddfbc := _efbab.(type) {
		case _gd.StartElement:
			switch _bddfbc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_dacae.CalculatedColumnFormula = NewCT_TableFormula()
				if _ffbfd := d.DecodeElement(_dacae.CalculatedColumnFormula, &_bddfbc); _ffbfd != nil {
					return _ffbfd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_dacae.TotalsRowFormula = NewCT_TableFormula()
				if _agfae := d.DecodeElement(_dacae.TotalsRowFormula, &_bddfbc); _agfae != nil {
					return _agfae
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}:
				_dacae.XmlColumnPr = NewCT_XmlColumnPr()
				if _cdgcg := d.DecodeElement(_dacae.XmlColumnPr, &_bddfbc); _cdgcg != nil {
					return _cdgcg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dacae.ExtLst = NewCT_ExtensionList()
				if _ccdgf := d.DecodeElement(_dacae.ExtLst, &_bddfbc); _ccdgf != nil {
					return _ccdgf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006fl\u0075m\u006e\u0020\u0025\u0076", _bddfbc.Name)
				if _afbef := d.Skip(); _afbef != nil {
					return _afbef
				}
			}
		case _gd.EndElement:
			break _adged
		case _gd.CharData:
		}
	}
	return nil
}

func (_eeee *CT_CustomChartsheetView) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _eeee.GuidAttr)})
	if _eeee.ScaleAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_eeee.ScaleAttr)})
	}
	if _eeee.StateAttr != ST_SheetStateUnset {
		_gacc, _fbge := _eeee.StateAttr.MarshalXMLAttr(_gd.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _fbge != nil {
			return _fbge
		}
		start.Attr = append(start.Attr, _gacc)
	}
	if _eeee.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_eeee.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _eeee.PageMargins != nil {
		_ddcgd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_eeee.PageMargins, _ddcgd)
	}
	if _eeee.PageSetup != nil {
		_edcc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_eeee.PageSetup, _edcc)
	}
	if _eeee.HeaderFooter != nil {
		_geeea := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_eeee.HeaderFooter, _geeea)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataRefs and its children
func (_bfbfg *CT_DataRefs) Validate() error {
	return _bfbfg.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073")
}

func (_fceee ST_WebSourceType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_fceee.String(), start)
}

func (_begbde *ST_GrowShrinkType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_begbde = 0
	case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
		*_begbde = 1
	case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
		*_begbde = 2
	case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
		*_begbde = 3
	}
	return nil
}

func (_cgadb *CT_PivotCacheDefinition) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cgadb.IdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.IdAttr)})
	}
	if _cgadb.InvalidAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069n\u0076\u0061\u006c\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.InvalidAttr))})
	}
	if _cgadb.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.SaveDataAttr))})
	}
	if _cgadb.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.RefreshOnLoadAttr))})
	}
	if _cgadb.OptimizeMemoryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.OptimizeMemoryAttr))})
	}
	if _cgadb.EnableRefreshAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.EnableRefreshAttr))})
	}
	if _cgadb.RefreshedByAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.RefreshedByAttr)})
	}
	if _cgadb.RefreshedDateAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.RefreshedDateAttr)})
	}
	if _cgadb.RefreshedDateIsoAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.RefreshedDateIsoAttr)})
	}
	if _cgadb.BackgroundQueryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.BackgroundQueryAttr))})
	}
	if _cgadb.MissingItemsLimitAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.MissingItemsLimitAttr)})
	}
	if _cgadb.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.CreatedVersionAttr)})
	}
	if _cgadb.RefreshedVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.RefreshedVersionAttr)})
	}
	if _cgadb.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.MinRefreshableVersionAttr)})
	}
	if _cgadb.RecordCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cgadb.RecordCountAttr)})
	}
	if _cgadb.UpgradeOnRefreshAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.UpgradeOnRefreshAttr))})
	}
	if _cgadb.TupleCacheAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.TupleCacheAttr))})
	}
	if _cgadb.SupportSubqueryAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.SupportSubqueryAttr))})
	}
	if _cgadb.SupportAdvancedDrillAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cgadb.SupportAdvancedDrillAttr))})
	}
	e.EncodeToken(start)
	_gccdb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065"}}
	e.EncodeElement(_cgadb.CacheSource, _gccdb)
	_dcfbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_cgadb.CacheFields, _dcfbb)
	if _cgadb.CacheHierarchies != nil {
		_fcgga := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_cgadb.CacheHierarchies, _fcgga)
	}
	if _cgadb.Kpis != nil {
		_dcaee := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006b\u0070\u0069\u0073"}}
		e.EncodeElement(_cgadb.Kpis, _dcaee)
	}
	if _cgadb.TupleCache != nil {
		_gfgabb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_cgadb.TupleCache, _gfgabb)
	}
	if _cgadb.CalculatedItems != nil {
		_beecd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cgadb.CalculatedItems, _beecd)
	}
	if _cgadb.CalculatedMembers != nil {
		_beaea := _gd.StartElement{Name: _gd.Name{Local: "m\u0061:\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073"}}
		e.EncodeElement(_cgadb.CalculatedMembers, _beaea)
	}
	if _cgadb.Dimensions != nil {
		_dfeag := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cgadb.Dimensions, _dfeag)
	}
	if _cgadb.MeasureGroups != nil {
		_cedcg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_cgadb.MeasureGroups, _cedcg)
	}
	if _cgadb.Maps != nil {
		_degcb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006d\u0061\u0070\u0073"}}
		e.EncodeElement(_cgadb.Maps, _degcb)
	}
	if _cgadb.ExtLst != nil {
		_fbfec := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgadb.ExtLst, _fbfec)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_DdeLink() *CT_DdeLink { _fbed := &CT_DdeLink{}; return _fbed }

func (_cfcacg ST_TotalsRowFunction) String() string {
	switch _cfcacg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u006d\u0069\u006e"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 6:
		return "\u0063\u006f\u0075n\u0074"
	case 7:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 8:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 9:
		return "\u0076\u0061\u0072"
	case 10:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

func (_gfcafg ST_DynamicFilterType) String() string {
	switch _gfcafg {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006c\u006c"
	case 2:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 3:
		return "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 4:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 5:
		return "\u0074\u006f\u0064a\u0079"
	case 6:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 7:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 11:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 12:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 13:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 14:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 15:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 16:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 17:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 18:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 19:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 20:
		return "\u0051\u0031"
	case 21:
		return "\u0051\u0032"
	case 22:
		return "\u0051\u0033"
	case 23:
		return "\u0051\u0034"
	case 24:
		return "\u004d\u0031"
	case 25:
		return "\u004d\u0032"
	case 26:
		return "\u004d\u0033"
	case 27:
		return "\u004d\u0034"
	case 28:
		return "\u004d\u0035"
	case 29:
		return "\u004d\u0036"
	case 30:
		return "\u004d\u0037"
	case 31:
		return "\u004d\u0038"
	case 32:
		return "\u004d\u0039"
	case 33:
		return "\u004d\u0031\u0030"
	case 34:
		return "\u004d\u0031\u0031"
	case 35:
		return "\u004d\u0031\u0032"
	}
	return ""
}

func NewCT_NumFmts() *CT_NumFmts { _bagd := &CT_NumFmts{}; return _bagd }

type CT_ChartsheetPr struct {

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string
	TabColor     *CT_Color
}

func NewCT_DefinedName() *CT_DefinedName { _abbga := &CT_DefinedName{}; return _abbga }

func NewCT_TextPr() *CT_TextPr { _ecgcd := &CT_TextPr{}; return _ecgcd }

func (_bea *CT_BookViews) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_gcg := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _ggb := range _bea.WorkbookView {
		e.EncodeElement(_ggb, _gcg)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Revisions and its children, prefixing error messages with path
func (_gbbfb *Revisions) ValidateWithPath(path string) error {
	if _cfeed := _gbbfb.CT_Revisions.ValidateWithPath(path); _cfeed != nil {
		return _cfeed
	}
	return nil
}

type ST_GrowShrinkType byte

type ST_Objects byte

type CT_QueryTableRefresh struct {

	// Preserve Sort & Filter Layout
	PreserveSortFilterLayoutAttr *bool

	// Next Field Id Wrapped
	FieldIdWrappedAttr *bool

	// Headers In Last Refresh
	HeadersInLastRefreshAttr *bool

	// Minimum Refresh Version
	MinimumVersionAttr *uint8

	// Next field id
	NextIdAttr *uint32

	// Columns Left
	UnboundColumnsLeftAttr *uint32

	// Columns Right
	UnboundColumnsRightAttr *uint32

	// Query table fields
	QueryTableFields *CT_QueryTableFields

	// Deleted Fields
	QueryTableDeletedFields *CT_QueryTableDeletedFields

	// Sort State
	SortState *CT_SortState

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_FileVersion and its children, prefixing error messages with path
func (_baeef *CT_FileVersion) ValidateWithPath(path string) error {
	if _baeef.CodeNameAttr != nil {
		if !_af.ST_GuidPatternRe.MatchString(*_baeef.CodeNameAttr) {
			return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006fd\u0065\u004e\u0061m\u0065\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, *_baeef.CodeNameAttr)
		}
	}
	return nil
}

func NewCT_OutlinePr() *CT_OutlinePr { _dfdege := &CT_OutlinePr{}; return _dfdege }

// ValidateWithPath validates the CT_Authors and its children, prefixing error messages with path
func (_ege *CT_Authors) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_SharedUser and its children, prefixing error messages with path
func (_fddde *CT_SharedUser) ValidateWithPath(path string) error {
	if !_af.ST_GuidPatternRe.MatchString(_fddde.GuidAttr) {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _af.ST_GuidPatternRe, _fddde.GuidAttr)
	}
	if _fddde.ExtLst != nil {
		if _abbcfe := _fddde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abbcfe != nil {
			return _abbcfe
		}
	}
	return nil
}

func NewCT_Schema() *CT_Schema { _fedgde := &CT_Schema{}; return _fedgde }

type CT_PivotArea struct {

	// Field Index
	FieldAttr *int32

	// Rule Type
	TypeAttr ST_PivotAreaType

	// Data Only
	DataOnlyAttr *bool

	// Labels Only
	LabelOnlyAttr *bool

	// Include Row Grand Total
	GrandRowAttr *bool

	// Include Column Grand Total
	GrandColAttr *bool

	// Cache Index
	CacheIndexAttr *bool

	// Outline
	OutlineAttr *bool

	// Offset Reference
	OffsetAttr *string

	// Collapsed Levels Are Subtotals
	CollapsedLevelsAreSubtotalsAttr *bool

	// Axis
	AxisAttr ST_Axis

	// Field Position
	FieldPositionAttr *uint32

	// References
	References *CT_PivotAreaReferences

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Location and its children, prefixing error messages with path
func (_agddg *CT_Location) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_FieldGroup and its children
func (_fafgf *CT_FieldGroup) Validate() error {
	return _fafgf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070")
}

type CT_RevisionSheetRename struct {

	// Sheet Id
	SheetIdAttr uint32

	// Old Sheet Name
	OldNameAttr string

	// New Sheet Name
	NewNameAttr string
	ExtLst      *CT_ExtensionList
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

// ValidateWithPath validates the CT_Scenarios and its children, prefixing error messages with path
func (_aecce *CT_Scenarios) ValidateWithPath(path string) error {
	for _fedbeb, _eccga := range _aecce.Scenario {
		if _caggb := _eccga.ValidateWithPath(_b.Sprintf("\u0025s\u002fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u005b\u0025\u0064\u005d", path, _fedbeb)); _caggb != nil {
			return _caggb
		}
	}
	return nil
}

// Validate validates the CT_Font and its children
func (_bfebe *CT_Font) Validate() error {
	return _bfebe.ValidateWithPath("\u0043T\u005f\u0046\u006f\u006e\u0074")
}

func (_cbdeb *Worksheet) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003aw\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074"
	return _cbdeb.CT_Worksheet.MarshalXML(e, start)
}

func (_bccg *CT_CellStyle) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _bbdb := range start.Attr {
		if _bbdb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gafcb, _dabga := _bbdb.Value, error(nil)
			if _dabga != nil {
				return _dabga
			}
			_bccg.NameAttr = &_gafcb
			continue
		}
		if _bbdb.Name.Local == "\u0078\u0066\u0049\u0064" {
			_decg, _ffag := _a.ParseUint(_bbdb.Value, 10, 32)
			if _ffag != nil {
				return _ffag
			}
			_bccg.XfIdAttr = uint32(_decg)
			continue
		}
		if _bbdb.Name.Local == "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d" {
			_bbeb, _fea := _a.ParseUint(_bbdb.Value, 10, 32)
			if _fea != nil {
				return _fea
			}
			_baed := uint32(_bbeb)
			_bccg.BuiltinIdAttr = &_baed
			continue
		}
		if _bbdb.Name.Local == "\u0069\u004c\u0065\u0076\u0065\u006c" {
			_cafg, _bbda := _a.ParseUint(_bbdb.Value, 10, 32)
			if _bbda != nil {
				return _bbda
			}
			_dfee := uint32(_cafg)
			_bccg.ILevelAttr = &_dfee
			continue
		}
		if _bbdb.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_afgg, _cef := _a.ParseBool(_bbdb.Value)
			if _cef != nil {
				return _cef
			}
			_bccg.HiddenAttr = &_afgg
			continue
		}
		if _bbdb.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e" {
			_ddde, _cfdg := _a.ParseBool(_bbdb.Value)
			if _cfdg != nil {
				return _cfdg
			}
			_bccg.CustomBuiltinAttr = &_ddde
			continue
		}
	}
_ccaa:
	for {
		_dagef, _fbfd := d.Token()
		if _fbfd != nil {
			return _fbfd
		}
		switch _eeec := _dagef.(type) {
		case _gd.StartElement:
			switch _eeec.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bccg.ExtLst = NewCT_ExtensionList()
				if _gfced := d.DecodeElement(_bccg.ExtLst, &_eeec); _gfced != nil {
					return _gfced
				}
			default:
				_e.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _eeec.Name)
				if _gcfgg := d.Skip(); _gcfgg != nil {
					return _gcfgg
				}
			}
		case _gd.EndElement:
			break _ccaa
		case _gd.CharData:
		}
	}
	return nil
}

func (_abbbf ST_CellType) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_aedceb := _gd.Attr{}
	_aedceb.Name = name
	switch _abbbf {
	case ST_CellTypeUnset:
		_aedceb.Value = ""
	case ST_CellTypeB:
		_aedceb.Value = "\u0062"
	case ST_CellTypeN:
		_aedceb.Value = "\u006e"
	case ST_CellTypeE:
		_aedceb.Value = "\u0065"
	case ST_CellTypeS:
		_aedceb.Value = "\u0073"
	case ST_CellTypeStr:
		_aedceb.Value = "\u0073\u0074\u0072"
	case ST_CellTypeInlineStr:
		_aedceb.Value = "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return _aedceb, nil
}

func (_fabdce *ST_PivotFilterType) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_fabdce = 0
	case "\u0075n\u006b\u006e\u006f\u0077\u006e":
		*_fabdce = 1
	case "\u0063\u006f\u0075n\u0074":
		*_fabdce = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_fabdce = 3
	case "\u0073\u0075\u006d":
		*_fabdce = 4
	case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
		*_fabdce = 5
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_fabdce = 6
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
		*_fabdce = 7
	case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
		*_fabdce = 8
	case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_fabdce = 9
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
		*_fabdce = 10
	case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_fabdce = 11
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
		*_fabdce = 12
	case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
		*_fabdce = 13
	case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
		*_fabdce = 14
	case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_fabdce = 15
	case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
		*_fabdce = 16
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_fabdce = 17
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_fabdce = 18
	case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
		*_fabdce = 19
	case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_fabdce = 20
	case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_fabdce = 21
	case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_fabdce = 22
	case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_fabdce = 23
	case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_fabdce = 24
	case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_fabdce = 25
	case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_fabdce = 26
	case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
		*_fabdce = 27
	case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_fabdce = 28
	case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
		*_fabdce = 29
	case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_fabdce = 30
	case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
		*_fabdce = 31
	case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_fabdce = 32
	case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_fabdce = 33
	case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_fabdce = 34
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_fabdce = 35
	case "\u0074\u006f\u0064a\u0079":
		*_fabdce = 36
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_fabdce = 37
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_fabdce = 38
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_fabdce = 39
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_fabdce = 40
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_fabdce = 41
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_fabdce = 42
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_fabdce = 43
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_fabdce = 44
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_fabdce = 45
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_fabdce = 46
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_fabdce = 47
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_fabdce = 48
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_fabdce = 49
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_fabdce = 50
	case "\u0051\u0031":
		*_fabdce = 51
	case "\u0051\u0032":
		*_fabdce = 52
	case "\u0051\u0033":
		*_fabdce = 53
	case "\u0051\u0034":
		*_fabdce = 54
	case "\u004d\u0031":
		*_fabdce = 55
	case "\u004d\u0032":
		*_fabdce = 56
	case "\u004d\u0033":
		*_fabdce = 57
	case "\u004d\u0034":
		*_fabdce = 58
	case "\u004d\u0035":
		*_fabdce = 59
	case "\u004d\u0036":
		*_fabdce = 60
	case "\u004d\u0037":
		*_fabdce = 61
	case "\u004d\u0038":
		*_fabdce = 62
	case "\u004d\u0039":
		*_fabdce = 63
	case "\u004d\u0031\u0030":
		*_fabdce = 64
	case "\u004d\u0031\u0031":
		*_fabdce = 65
	case "\u004d\u0031\u0032":
		*_fabdce = 66
	}
	return nil
}

func (_ddggg *ST_RefMode) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_ddggg = 0
	case "\u0041\u0031":
		*_ddggg = 1
	case "\u0052\u0031\u0043\u0031":
		*_ddggg = 2
	}
	return nil
}

// Validate validates the CT_TableParts and its children
func (_eeagfc *CT_TableParts) Validate() error {
	return _eeagfc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073")
}

func (_fagacd *CT_Members) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fagacd.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fagacd.CountAttr)})
	}
	if _fagacd.LevelAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fagacd.LevelAttr)})
	}
	e.EncodeToken(start)
	_fbcdf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u006d\u0065\u006d\u0062\u0065r"}}
	for _, _bddca := range _fagacd.Member {
		e.EncodeElement(_bddca, _fbcdf)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PageItem and its children, prefixing error messages with path
func (_ggbbd *CT_PageItem) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_PCDSCPage and its children, prefixing error messages with path
func (_abfeed *CT_PCDSCPage) ValidateWithPath(path string) error {
	for _fcgbf, _fcgec := range _abfeed.PageItem {
		if _edggd := _fcgec.ValidateWithPath(_b.Sprintf("\u0025s\u002fP\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _fcgbf)); _edggd != nil {
			return _edggd
		}
	}
	return nil
}

func (_ccdfg *CT_RevisionSheetRename) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _aeefed := range start.Attr {
		if _aeefed.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_eaccg, _fffdca := _a.ParseUint(_aeefed.Value, 10, 32)
			if _fffdca != nil {
				return _fffdca
			}
			_ccdfg.SheetIdAttr = uint32(_eaccg)
			continue
		}
		if _aeefed.Name.Local == "\u006fl\u0064\u004e\u0061\u006d\u0065" {
			_dgcfg, _gaabd := _aeefed.Value, error(nil)
			if _gaabd != nil {
				return _gaabd
			}
			_ccdfg.OldNameAttr = _dgcfg
			continue
		}
		if _aeefed.Name.Local == "\u006ee\u0077\u004e\u0061\u006d\u0065" {
			_cgcfa, _dgeacd := _aeefed.Value, error(nil)
			if _dgeacd != nil {
				return _dgeacd
			}
			_ccdfg.NewNameAttr = _cgcfa
			continue
		}
		if _aeefed.Name.Local == "\u0072\u0049\u0064" {
			_bgeab, _egcafd := _a.ParseUint(_aeefed.Value, 10, 32)
			if _egcafd != nil {
				return _egcafd
			}
			_cggd := uint32(_bgeab)
			_ccdfg.RIdAttr = &_cggd
			continue
		}
		if _aeefed.Name.Local == "\u0075\u0061" {
			_aaafcc, _adade := _a.ParseBool(_aeefed.Value)
			if _adade != nil {
				return _adade
			}
			_ccdfg.UaAttr = &_aaafcc
			continue
		}
		if _aeefed.Name.Local == "\u0072\u0061" {
			_aagaab, _gbadff := _a.ParseBool(_aeefed.Value)
			if _gbadff != nil {
				return _gbadff
			}
			_ccdfg.RaAttr = &_aagaab
			continue
		}
	}
_adddgd:
	for {
		_aedag, _dgddg := d.Token()
		if _dgddg != nil {
			return _dgddg
		}
		switch _egggg := _aedag.(type) {
		case _gd.StartElement:
			switch _egggg.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccdfg.ExtLst = NewCT_ExtensionList()
				if _aefba := d.DecodeElement(_ccdfg.ExtLst, &_egggg); _aefba != nil {
					return _aefba
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061\u006d\u0065\u0020\u0025\u0076", _egggg.Name)
				if _eaaeae := d.Skip(); _eaaeae != nil {
					return _eaaeae
				}
			}
		case _gd.EndElement:
			break _adddgd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_TextFields() *CT_TextFields { _gdccbd := &CT_TextFields{}; return _gdccbd }

type CT_InputCells struct {

	// Reference
	RAttr string

	// Deleted
	DeletedAttr *bool

	// Undone
	UndoneAttr *bool

	// Value
	ValAttr string

	// Number Format Id
	NumFmtIdAttr *uint32
}

// ValidateWithPath validates the CT_DataFields and its children, prefixing error messages with path
func (_dgdb *CT_DataFields) ValidateWithPath(path string) error {
	for _ecefb, _fcbg := range _dgdb.DataField {
		if _fdfc := _fcbg.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0044\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _ecefb)); _fdfc != nil {
			return _fdfc
		}
	}
	return nil
}

func (_eedfgc ST_ExternalConnectionType) ValidateWithPath(path string) error {
	switch _eedfgc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eedfgc))
	}
	return nil
}

type CT_IconSet struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Show Value
	ShowValueAttr *bool

	// Percent
	PercentAttr *bool

	// Reverse Icons
	ReverseAttr *bool

	// Conditional Formatting Object
	Cfvo []*CT_Cfvo
}

type CT_HierarchyUsage struct {

	// Hierarchy Usage
	HierarchyUsageAttr int32
}

func (_cede *CT_GroupLevels) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cede.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cede.CountAttr)})
	}
	e.EncodeToken(start)
	_accad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}}
	for _, _eeeff := range _cede.GroupLevel {
		e.EncodeElement(_eeeff, _accad)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type CT_ColFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Field
	Field []*CT_Field
}

// Validate validates the CT_MdxTuple and its children
func (_efcff *CT_MdxTuple) Validate() error {
	return _efcff.ValidateWithPath("C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065")
}

func (_egacf *Comments) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_egacf.CT_Comments = *NewCT_Comments()
_decacd:
	for {
		_eggac, _bggga := d.Token()
		if _bggga != nil {
			return _bggga
		}
		switch _dgbgb := _eggac.(type) {
		case _gd.StartElement:
			switch _dgbgb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _bgfcgg := d.DecodeElement(_egacf.Authors, &_dgbgb); _bgfcgg != nil {
					return _bgfcgg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _ecdbe := d.DecodeElement(_egacf.CommentList, &_dgbgb); _ecdbe != nil {
					return _ecdbe
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egacf.ExtLst = NewCT_ExtensionList()
				if _ffbfg := d.DecodeElement(_egacf.ExtLst, &_dgbgb); _ffbfg != nil {
					return _ffbfg
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _dgbgb.Name)
				if _faceg := d.Skip(); _faceg != nil {
					return _faceg
				}
			}
		case _gd.EndElement:
			break _decacd
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_IntProperty() *CT_IntProperty { _fdbda := &CT_IntProperty{}; return _fdbda }

// ValidateWithPath validates the CT_Xf and its children, prefixing error messages with path
func (_cfddgb *CT_Xf) ValidateWithPath(path string) error {
	if _cfddgb.Alignment != nil {
		if _ffffd := _cfddgb.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _ffffd != nil {
			return _ffffd
		}
	}
	if _cfddgb.Protection != nil {
		if _baddg := _cfddgb.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _baddg != nil {
			return _baddg
		}
	}
	if _cfddgb.ExtLst != nil {
		if _ceebc := _cfddgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceebc != nil {
			return _ceebc
		}
	}
	return nil
}

// ValidateWithPath validates the Workbook and its children, prefixing error messages with path
func (_gdcec *Workbook) ValidateWithPath(path string) error {
	if _fgdfe := _gdcec.CT_Workbook.ValidateWithPath(path); _fgdfe != nil {
		return _fgdfe
	}
	return nil
}

func (_fbda *CT_Error) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", _fbda.VAttr)})
	if _fbda.UAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbda.UAttr))})
	}
	if _fbda.FAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbda.FAttr))})
	}
	if _fbda.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_fbda.CAttr)})
	}
	if _fbda.CpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_fbda.CpAttr)})
	}
	if _fbda.InAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069\u006e"}, Value: _b.Sprintf("\u0025\u0076", *_fbda.InAttr)})
	}
	if _fbda.BcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_fbda.BcAttr)})
	}
	if _fbda.FcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_fbda.FcAttr)})
	}
	if _fbda.IAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbda.IAttr))})
	}
	if _fbda.UnAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbda.UnAttr))})
	}
	if _fbda.StAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbda.StAttr))})
	}
	if _fbda.BAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbda.BAttr))})
	}
	e.EncodeToken(start)
	if _fbda.Tpls != nil {
		_egcdb := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_fbda.Tpls, _egcdb)
	}
	if _fbda.X != nil {
		_bedbe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _bebce := range _fbda.X {
			e.EncodeElement(_bebce, _bedbe)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetProtection and its children
func (_gdbeeg *CT_SheetProtection) Validate() error {
	return _gdbeeg.ValidateWithPath("\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e")
}

func (_daeeb *ST_DataConsolidateFunction) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fgdef, _gfadbe := d.Token()
	if _gfadbe != nil {
		return _gfadbe
	}
	if _aabda, _geacac := _fgdef.(_gd.EndElement); _geacac && _aabda.Name == start.Name {
		*_daeeb = 1
		return nil
	}
	if _ceddfa, _fdbcf := _fgdef.(_gd.CharData); !_fdbcf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgdef)
	} else {
		switch string(_ceddfa) {
		case "":
			*_daeeb = 0
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_daeeb = 1
		case "\u0063\u006f\u0075n\u0074":
			*_daeeb = 2
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_daeeb = 3
		case "\u006d\u0061\u0078":
			*_daeeb = 4
		case "\u006d\u0069\u006e":
			*_daeeb = 5
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_daeeb = 6
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_daeeb = 7
		case "\u0073t\u0064\u0044\u0065\u0076\u0070":
			*_daeeb = 8
		case "\u0073\u0075\u006d":
			*_daeeb = 9
		case "\u0076\u0061\u0072":
			*_daeeb = 10
		case "\u0076\u0061\u0072\u0070":
			*_daeeb = 11
		}
	}
	_fgdef, _gfadbe = d.Token()
	if _gfadbe != nil {
		return _gfadbe
	}
	if _fbfbb, _acccff := _fgdef.(_gd.EndElement); _acccff && _fbfbb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgdef)
}

func (_fdefc *CT_CustomProperties) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bedfa:
	for {
		_cbbe, _ecfgf := d.Token()
		if _ecfgf != nil {
			return _ecfgf
		}
		switch _dbece := _cbbe.(type) {
		case _gd.StartElement:
			switch _dbece.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}:
				_febbd := NewCT_CustomProperty()
				if _gcae := d.DecodeElement(_febbd, &_dbece); _gcae != nil {
					return _gcae
				}
				_fdefc.CustomPr = append(_fdefc.CustomPr, _febbd)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dbece.Name)
				if _gbgca := d.Skip(); _gbgca != nil {
					return _gbgca
				}
			}
		case _gd.EndElement:
			break _bedfa
		case _gd.CharData:
		}
	}
	return nil
}

func (_agacbc ST_RevisionAction) Validate() error { return _agacbc.ValidateWithPath("") }

func (_dfce *CT_LegacyDrawing) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _dfce.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_fbdba ST_MdxSetOrder) String() string {
	switch _fbdba {
	case 0:
		return ""
	case 1:
		return "\u0075"
	case 2:
		return "\u0061"
	case 3:
		return "\u0064"
	case 4:
		return "\u0061\u0061"
	case 5:
		return "\u0061\u0064"
	case 6:
		return "\u006e\u0061"
	case 7:
		return "\u006e\u0064"
	}
	return ""
}

func (_ggfggbb ST_CredMethod) String() string {
	switch _ggfggbb {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "\u0073\u0074\u006f\u0072\u0065\u0064"
	case 4:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return ""
}

func (_gcdbad ST_PrintError) Validate() error { return _gcdbad.ValidateWithPath("") }

// ValidateWithPath validates the CT_BooleanProperty and its children, prefixing error messages with path
func (_fbg *CT_BooleanProperty) ValidateWithPath(path string) error { return nil }

func (_gecdf ST_RefMode) ValidateWithPath(path string) error {
	switch _gecdf {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gecdf))
	}
	return nil
}

// Validate validates the CT_CustomChartsheetViews and its children
func (_adfeg *CT_CustomChartsheetViews) Validate() error {
	return _adfeg.ValidateWithPath("\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

// Validate validates the CT_Table and its children
func (_becbb *CT_Table) Validate() error {
	return _becbb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

type CT_Authors struct {

	// Author
	Author []string
}

func (_abede *ST_ShowDataAs) UnmarshalXMLAttr(attr _gd.Attr) error {
	switch attr.Value {
	case "":
		*_abede = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_abede = 1
	case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
		*_abede = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_abede = 3
	case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
		*_abede = 4
	case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
		*_abede = 5
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
		*_abede = 6
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
		*_abede = 7
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
		*_abede = 8
	case "\u0069\u006e\u0064e\u0078":
		*_abede = 9
	}
	return nil
}

// Validate validates the CT_PageSetup and its children
func (_gfccef *CT_PageSetup) Validate() error {
	return _gfccef.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070")
}

func (_bgddfa *CT_ExtensionList) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_edgba:
	for {
		_bgec, _cbbde := d.Token()
		if _cbbde != nil {
			return _cbbde
		}
		switch _fgbe := _bgec.(type) {
		case _gd.StartElement:
			switch _fgbe.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_edadg := NewCT_Extension()
				if _bfcb := d.DecodeElement(_edadg, &_fgbe); _bfcb != nil {
					return _bfcb
				}
				_bgddfa.Ext = append(_bgddfa.Ext, _edadg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _fgbe.Name)
				if _aaegd := d.Skip(); _aaegd != nil {
					return _aaegd
				}
			}
		case _gd.EndElement:
			break _edgba
		case _gd.CharData:
		}
	}
	return nil
}

func (_ebbgf *ST_SourceType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_effea, _dbbeg := d.Token()
	if _dbbeg != nil {
		return _dbbeg
	}
	if _acdaac, _eedceef := _effea.(_gd.EndElement); _eedceef && _acdaac.Name == start.Name {
		*_ebbgf = 1
		return nil
	}
	if _cfbff, _ggfe := _effea.(_gd.CharData); !_ggfe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _effea)
	} else {
		switch string(_cfbff) {
		case "":
			*_ebbgf = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_ebbgf = 1
		case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
			*_ebbgf = 2
		case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
			*_ebbgf = 3
		case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
			*_ebbgf = 4
		}
	}
	_effea, _dbbeg = d.Token()
	if _dbbeg != nil {
		return _dbbeg
	}
	if _dfedg, _ggfcaf := _effea.(_gd.EndElement); _ggfcaf && _dfedg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _effea)
}

func (_cccec *CT_TableStyleElement) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cccec.TypeAttr = ST_TableStyleType(1)
	for _, _agedd := range start.Attr {
		if _agedd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cccec.TypeAttr.UnmarshalXMLAttr(_agedd)
			continue
		}
		if _agedd.Name.Local == "\u0073\u0069\u007a\u0065" {
			_agacb, _eefcgf := _a.ParseUint(_agedd.Value, 10, 32)
			if _eefcgf != nil {
				return _eefcgf
			}
			_afffdg := uint32(_agacb)
			_cccec.SizeAttr = &_afffdg
			continue
		}
		if _agedd.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_adfdc, _ffbafb := _a.ParseUint(_agedd.Value, 10, 32)
			if _ffbafb != nil {
				return _ffbafb
			}
			_dabfcc := uint32(_adfdc)
			_cccec.DxfIdAttr = &_dabfcc
			continue
		}
	}
	for {
		_ffebf, _dfbfd := d.Token()
		if _dfbfd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006ce\u0053t\u0079\u006c\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _dfbfd)
		}
		if _adgdd, _gfceg := _ffebf.(_gd.EndElement); _gfceg && _adgdd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheSource and its children, prefixing error messages with path
func (_cafe *CT_CacheSource) ValidateWithPath(path string) error {
	if _cafe.TypeAttr == ST_SourceTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gaea := _cafe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gaea != nil {
		return _gaea
	}
	if _cafe.WorksheetSource != nil {
		if _gbea := _cafe.WorksheetSource.ValidateWithPath(path + "\u002f\u0057o\u0072\u006b\u0073h\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"); _gbea != nil {
			return _gbea
		}
	}
	if _cafe.Consolidation != nil {
		if _fafd := _cafe.Consolidation.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"); _fafd != nil {
			return _fafd
		}
	}
	if _cafe.ExtLst != nil {
		if _daee := _cafe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daee != nil {
			return _daee
		}
	}
	return nil
}

func NewCT_Missing() *CT_Missing { _gcaadd := &CT_Missing{}; return _gcaadd }

func (_agcgg ST_rwColActionType) String() string {
	switch _agcgg {
	case 0:
		return ""
	case 1:
		return "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case 2:
		return "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case 3:
		return "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case 4:
		return "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return ""
}

func NewCT_RevisionConflict() *CT_RevisionConflict { _adecff := &CT_RevisionConflict{}; return _adecff }

// Validate validates the CT_String and its children
func (_dbdbd *CT_String) Validate() error {
	return _dbdbd.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}

func (_feabg *CT_WebPr) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _feabg.XmlAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006d\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.XmlAttr))})
	}
	if _feabg.SourceDataAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.SourceDataAttr))})
	}
	if _feabg.ParsePreAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.ParsePreAttr))})
	}
	if _feabg.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.ConsecutiveAttr))})
	}
	if _feabg.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.FirstRowAttr))})
	}
	if _feabg.Xl97Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006c\u0039\u0037"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.Xl97Attr))})
	}
	if _feabg.TextDatesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.TextDatesAttr))})
	}
	if _feabg.Xl2000Attr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0078\u006c\u0032\u0030\u0030\u0030"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.Xl2000Attr))})
	}
	if _feabg.UrlAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0072\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_feabg.UrlAttr)})
	}
	if _feabg.PostAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0070\u006f\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_feabg.PostAttr)})
	}
	if _feabg.HtmlTablesAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_feabg.HtmlTablesAttr))})
	}
	if _feabg.HtmlFormatAttr != ST_HtmlFmtUnset {
		_efaade, _fcgfff := _feabg.HtmlFormatAttr.MarshalXMLAttr(_gd.Name{Local: "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074"})
		if _fcgfff != nil {
			return _fcgfff
		}
		start.Attr = append(start.Attr, _efaade)
	}
	if _feabg.EditPageAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_feabg.EditPageAttr)})
	}
	e.EncodeToken(start)
	if _feabg.Tables != nil {
		_fgfcfd := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0074\u0061\u0062\u006c\u0065s"}}
		e.EncodeElement(_feabg.Tables, _fgfcfd)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_affeb *ST_SortType) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_dgeabd, _ceaaa := d.Token()
	if _ceaaa != nil {
		return _ceaaa
	}
	if _dgecad, _cecge := _dgeabd.(_gd.EndElement); _cecge && _dgecad.Name == start.Name {
		*_affeb = 1
		return nil
	}
	if _ececa, _aggef := _dgeabd.(_gd.CharData); !_aggef {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgeabd)
	} else {
		switch string(_ececa) {
		case "":
			*_affeb = 0
		case "\u006e\u006f\u006e\u0065":
			*_affeb = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_affeb = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_affeb = 3
		case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
			*_affeb = 4
		case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
			*_affeb = 5
		case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
			*_affeb = 6
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
			*_affeb = 7
		}
	}
	_dgeabd, _ceaaa = d.Token()
	if _ceaaa != nil {
		return _ceaaa
	}
	if _ebccf, _fbbgfd := _dgeabd.(_gd.EndElement); _fbbgfd && _ebccf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgeabd)
}

func (_dgafaa ST_DataValidationOperator) String() string {
	switch _dgafaa {
	case 0:
		return ""
	case 1:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 2:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 6:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 8:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return ""
}

const (
	ST_PrintErrorUnset     ST_PrintError = 0
	ST_PrintErrorDisplayed ST_PrintError = 1
	ST_PrintErrorBlank     ST_PrintError = 2
	ST_PrintErrorDash      ST_PrintError = 3
	ST_PrintErrorNA        ST_PrintError = 4
)

type ST_TargetScreenSize byte

func (_bcaeb *CT_PivotAreas) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bcaeb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bcaeb.CountAttr)})
	}
	e.EncodeToken(start)
	if _bcaeb.PivotArea != nil {
		_bfbac := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
		for _, _ffedd := range _bcaeb.PivotArea {
			e.EncodeElement(_ffedd, _bfbac)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_bgfgb ST_CredMethod) MarshalXMLAttr(name _gd.Name) (_gd.Attr, error) {
	_gcddec := _gd.Attr{}
	_gcddec.Name = name
	switch _bgfgb {
	case ST_CredMethodUnset:
		_gcddec.Value = ""
	case ST_CredMethodIntegrated:
		_gcddec.Value = "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case ST_CredMethodNone:
		_gcddec.Value = "\u006e\u006f\u006e\u0065"
	case ST_CredMethodStored:
		_gcddec.Value = "\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_CredMethodPrompt:
		_gcddec.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return _gcddec, nil
}

// Validate validates the CT_AutoFilter and its children
func (_afa *CT_AutoFilter) Validate() error {
	return _afa.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072")
}

func (_affceg ST_FormatAction) ValidateWithPath(path string) error {
	switch _affceg {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_affceg))
	}
	return nil
}

func (_cffec *CT_RevisionHeaders) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_cffec.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _acdfg := range start.Attr {
		if _acdfg.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_fcccfb, _cbeddd := _a.ParseBool(_acdfg.Value)
			if _cbeddd != nil {
				return _cbeddd
			}
			_cffec.ExclusiveAttr = &_fcccfb
			continue
		}
		if _acdfg.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_afeca, _ceba := _acdfg.Value, error(nil)
			if _ceba != nil {
				return _ceba
			}
			_cffec.LastGuidAttr = &_afeca
			continue
		}
		if _acdfg.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_baeff, _ddbee := _a.ParseBool(_acdfg.Value)
			if _ddbee != nil {
				return _ddbee
			}
			_cffec.SharedAttr = &_baeff
			continue
		}
		if _acdfg.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_adgag, _bfffcdc := _a.ParseBool(_acdfg.Value)
			if _bfffcdc != nil {
				return _bfffcdc
			}
			_cffec.DiskRevisionsAttr = &_adgag
			continue
		}
		if _acdfg.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_egafd, _fgbgb := _a.ParseBool(_acdfg.Value)
			if _fgbgb != nil {
				return _fgbgb
			}
			_cffec.HistoryAttr = &_egafd
			continue
		}
		if _acdfg.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_fbdag, _debdcc := _a.ParseBool(_acdfg.Value)
			if _debdcc != nil {
				return _debdcc
			}
			_cffec.TrackRevisionsAttr = &_fbdag
			continue
		}
		if _acdfg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_bgbbd, _edded := _acdfg.Value, error(nil)
			if _edded != nil {
				return _edded
			}
			_cffec.GuidAttr = _bgbbd
			continue
		}
		if _acdfg.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_ggdcf, _fadbg := _a.ParseUint(_acdfg.Value, 10, 32)
			if _fadbg != nil {
				return _fadbg
			}
			_eedfd := uint32(_ggdcf)
			_cffec.RevisionIdAttr = &_eedfd
			continue
		}
		if _acdfg.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_ecbbe, _gdadd := _a.ParseInt(_acdfg.Value, 10, 32)
			if _gdadd != nil {
				return _gdadd
			}
			_bebgae := int32(_ecbbe)
			_cffec.VersionAttr = &_bebgae
			continue
		}
		if _acdfg.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_ecgcc, _gdeba := _a.ParseBool(_acdfg.Value)
			if _gdeba != nil {
				return _gdeba
			}
			_cffec.KeepChangeHistoryAttr = &_ecgcc
			continue
		}
		if _acdfg.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_abadc, _cfbeba := _a.ParseBool(_acdfg.Value)
			if _cfbeba != nil {
				return _cfbeba
			}
			_cffec.ProtectedAttr = &_abadc
			continue
		}
		if _acdfg.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_fcbcb, _dfeef := _a.ParseUint(_acdfg.Value, 10, 32)
			if _dfeef != nil {
				return _dfeef
			}
			_adbff := uint32(_fcbcb)
			_cffec.PreserveHistoryAttr = &_adbff
			continue
		}
	}
_cafdg:
	for {
		_cgafa, _ffefe := d.Token()
		if _ffefe != nil {
			return _ffefe
		}
		switch _gddbdc := _cgafa.(type) {
		case _gd.StartElement:
			switch _gddbdc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_dbbag := NewCT_RevisionHeader()
				if _cfcg := d.DecodeElement(_dbbag, &_gddbdc); _cfcg != nil {
					return _cfcg
				}
				_cffec.Header = append(_cffec.Header, _dbbag)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _gddbdc.Name)
				if _edfb := d.Skip(); _edfb != nil {
					return _edfb
				}
			}
		case _gd.EndElement:
			break _cafdg
		case _gd.CharData:
		}
	}
	return nil
}

type CT_Color struct {

	// Automatic
	AutoAttr *bool

	// Index
	IndexedAttr *uint32

	// Alpha Red Green Blue Color Value
	RgbAttr *string

	// Theme Color
	ThemeAttr *uint32

	// Tint
	TintAttr *float64
}

func NewCT_NumFmt() *CT_NumFmt { _aggdg := &CT_NumFmt{}; return _aggdg }

type CT_ExternalDefinedNames struct {

	// Defined Name
	DefinedName []*CT_ExternalDefinedName
}

func (_gacec *CT_DeletedField) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _gacec.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_ddaef *CT_Index) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _ccdaff := range start.Attr {
		if _ccdaff.Name.Local == "\u0076" {
			_gfdaf, _egade := _a.ParseUint(_ccdaff.Value, 10, 32)
			if _egade != nil {
				return _egade
			}
			_ddaef.VAttr = uint32(_gfdaf)
			continue
		}
	}
	for {
		_bgdae, _dgfb := d.Token()
		if _dgfb != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0064\u0065\u0078: \u0025\u0073", _dgfb)
		}
		if _ggfcb, _faggb := _bgdae.(_gd.EndElement); _faggb && _ggfcb.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_VisibilityUnset      ST_Visibility = 0
	ST_VisibilityVisible    ST_Visibility = 1
	ST_VisibilityHidden     ST_Visibility = 2
	ST_VisibilityVeryHidden ST_Visibility = 3
)

func (_febbe *CT_DataBar) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _febbe.MinLengthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h"}, Value: _b.Sprintf("\u0025\u0076", *_febbe.MinLengthAttr)})
	}
	if _febbe.MaxLengthAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h"}, Value: _b.Sprintf("\u0025\u0076", *_febbe.MaxLengthAttr)})
	}
	if _febbe.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_febbe.ShowValueAttr))})
	}
	e.EncodeToken(start)
	_bcebf := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _ccfb := range _febbe.Cfvo {
		e.EncodeElement(_ccfb, _bcebf)
	}
	_bafec := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_febbe.Color, _bafec)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewQueryTable() *QueryTable {
	_dgegdg := &QueryTable{}
	_dgegdg.CT_QueryTable = *NewCT_QueryTable()
	return _dgegdg
}

// ValidateWithPath validates the CT_GroupMembers and its children, prefixing error messages with path
func (_agced *CT_GroupMembers) ValidateWithPath(path string) error {
	for _gabg, _bafda := range _agced.GroupMember {
		if _gacda := _bafda.ValidateWithPath(_b.Sprintf("\u0025s\u002fG\u0072\u006f\u0075\u0070\u004de\u006d\u0062e\u0072\u005b\u0025\u0064\u005d", path, _gabg)); _gacda != nil {
			return _gacda
		}
	}
	return nil
}

func (_cbgcd *CT_Query) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gdefbg := range start.Attr {
		if _gdefbg.Name.Local == "\u006d\u0064\u0078" {
			_cecgdee, _bgfad := _gdefbg.Value, error(nil)
			if _bgfad != nil {
				return _bgfad
			}
			_cbgcd.MdxAttr = _cecgdee
			continue
		}
	}
_aegfg:
	for {
		_ccbbgb, _dcdd := d.Token()
		if _dcdd != nil {
			return _dcdd
		}
		switch _cdgfa := _ccbbgb.(type) {
		case _gd.StartElement:
			switch _cdgfa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_cbgcd.Tpls = NewCT_Tuples()
				if _bffddc := d.DecodeElement(_cbgcd.Tpls, &_cdgfa); _bffddc != nil {
					return _bffddc
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0020\u0025\u0076", _cdgfa.Name)
				if _gedfc := d.Skip(); _gedfc != nil {
					return _gedfc
				}
			}
		case _gd.EndElement:
			break _aegfg
		case _gd.CharData:
		}
	}
	return nil
}

func (_afdef ST_PhoneticAlignment) String() string {
	switch _afdef {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

func (_bg *AG_RevData) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bg.RIdAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bg.RIdAttr)})
	}
	if _bg.UaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bg.UaAttr))})
	}
	if _bg.RaAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_bg.RaAttr))})
	}
	return nil
}

type CT_CalculatedItem struct {

	// Field Index
	FieldAttr *uint32

	// Calculated Item Formula
	FormulaAttr *string

	// Calculated Item Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type CT_SharedItems struct {

	// Contains Semi Mixed Data Types
	ContainsSemiMixedTypesAttr *bool

	// Contains Non Date
	ContainsNonDateAttr *bool

	// Contains Date
	ContainsDateAttr *bool

	// Contains String
	ContainsStringAttr *bool

	// Contains Blank
	ContainsBlankAttr *bool

	// Contains Mixed Data Types
	ContainsMixedTypesAttr *bool

	// Contains Numbers
	ContainsNumberAttr *bool

	// Contains Integer
	ContainsIntegerAttr *bool

	// Minimum Numeric Value
	MinValueAttr *float64

	// Maximum Numeric Value
	MaxValueAttr *float64

	// Minimum Date Time
	MinDateAttr *_db.Time

	// Maximum Date Time Value
	MaxDateAttr *_db.Time

	// Shared Items Count
	CountAttr *uint32

	// Long Text
	LongTextAttr *bool

	// No Value
	M []*CT_Missing

	// Numeric
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

func (_egbga *CT_Parameter) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _afbad := range start.Attr {
		if _afbad.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fdbaed, _afadd := _afbad.Value, error(nil)
			if _afadd != nil {
				return _afadd
			}
			_egbga.NameAttr = &_fdbaed
			continue
		}
		if _afbad.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_cbbfa, _bdebe := _a.ParseInt(_afbad.Value, 10, 32)
			if _bdebe != nil {
				return _bdebe
			}
			_cgcea := int32(_cbbfa)
			_egbga.SqlTypeAttr = &_cgcea
			continue
		}
		if _afbad.Name.Local == "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065" {
			_egbga.ParameterTypeAttr.UnmarshalXMLAttr(_afbad)
			continue
		}
		if _afbad.Name.Local == "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065" {
			_eabcd, _daceb := _a.ParseBool(_afbad.Value)
			if _daceb != nil {
				return _daceb
			}
			_egbga.RefreshOnChangeAttr = &_eabcd
			continue
		}
		if _afbad.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_bddab, _aebdd := _afbad.Value, error(nil)
			if _aebdd != nil {
				return _aebdd
			}
			_egbga.PromptAttr = &_bddab
			continue
		}
		if _afbad.Name.Local == "\u0062o\u006f\u006c\u0065\u0061\u006e" {
			_eafed, _ceeg := _a.ParseBool(_afbad.Value)
			if _ceeg != nil {
				return _ceeg
			}
			_egbga.BooleanAttr = &_eafed
			continue
		}
		if _afbad.Name.Local == "\u0064\u006f\u0075\u0062\u006c\u0065" {
			_bagdc, _bgcge := _a.ParseFloat(_afbad.Value, 64)
			if _bgcge != nil {
				return _bgcge
			}
			_egbga.DoubleAttr = &_bagdc
			continue
		}
		if _afbad.Name.Local == "\u0069n\u0074\u0065\u0067\u0065\u0072" {
			_dfcfec, _adbfec := _a.ParseInt(_afbad.Value, 10, 32)
			if _adbfec != nil {
				return _adbfec
			}
			_cegg := int32(_dfcfec)
			_egbga.IntegerAttr = &_cegg
			continue
		}
		if _afbad.Name.Local == "\u0073\u0074\u0072\u0069\u006e\u0067" {
			_egeab, _daaff := _afbad.Value, error(nil)
			if _daaff != nil {
				return _daaff
			}
			_egbga.StringAttr = &_egeab
			continue
		}
		if _afbad.Name.Local == "\u0063\u0065\u006c\u006c" {
			_edffc, _dfbbc := _afbad.Value, error(nil)
			if _dfbbc != nil {
				return _dfbbc
			}
			_egbga.CellAttr = &_edffc
			continue
		}
	}
	for {
		_ecbcf, _bccb := d.Token()
		if _bccb != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061r\u0061\u006d\u0065\u0074\u0065\u0072\u003a\u0020\u0025\u0073", _bccb)
		}
		if _fbcbab, _dabaf := _ecbcf.(_gd.EndElement); _dabaf && _fbcbab.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bdgcfb *PivotTableDefinition) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_bdgcfb.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	for _, _babbd := range start.Attr {
		if _babbd.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_cbdag, _dbede := _a.ParseUint(_babbd.Value, 10, 8)
			if _dbede != nil {
				return _dbede
			}
			_dcegef := uint8(_cbdag)
			_bdgcfb.CreatedVersionAttr = &_dcegef
			continue
		}
		if _babbd.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_eefgf, _ceaffg := _a.ParseUint(_babbd.Value, 10, 32)
			if _ceaffg != nil {
				return _ceaffg
			}
			_bddac := uint32(_eefgf)
			_bdgcfb.IndentAttr = &_bddac
			continue
		}
		if _babbd.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_cdgaaf, _bebb := _babbd.Value, error(nil)
			if _bebb != nil {
				return _bebb
			}
			_bdgcfb.PivotTableStyleAttr = &_cdgaaf
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_aebac, _afeac := _a.ParseBool(_babbd.Value)
			if _afeac != nil {
				return _afeac
			}
			_bdgcfb.ShowEmptyRowAttr = &_aebac
			continue
		}
		if _babbd.Name.Local == "\u0074\u0061\u0067" {
			_gcdde, _gfcfe := _babbd.Value, error(nil)
			if _gfcfe != nil {
				return _gfcfe
			}
			_bdgcfb.TagAttr = &_gcdde
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_bffec, _deaag := _a.ParseBool(_babbd.Value)
			if _deaag != nil {
				return _deaag
			}
			_bdgcfb.ShowEmptyColAttr = &_bffec
			continue
		}
		if _babbd.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cbdada, _afgfcb := _a.ParseUint(_babbd.Value, 10, 8)
			if _afgfcb != nil {
				return _afgfcb
			}
			_fcbgg := uint8(_cbdada)
			_bdgcfb.MinRefreshableVersionAttr = &_fcbgg
			continue
		}
		if _babbd.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_cbafg, _geddcf := _a.ParseBool(_babbd.Value)
			if _geddcf != nil {
				return _geddcf
			}
			_bdgcfb.ShowHeadersAttr = &_cbafg
			continue
		}
		if _babbd.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_dfeddg, _bebcg := _a.ParseBool(_babbd.Value)
			if _bebcg != nil {
				return _bebcg
			}
			_bdgcfb.AsteriskTotalsAttr = &_dfeddg
			continue
		}
		if _babbd.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_cbcef, _cfcaa := _a.ParseBool(_babbd.Value)
			if _cfcaa != nil {
				return _cfcaa
			}
			_bdgcfb.CompactAttr = &_cbcef
			continue
		}
		if _babbd.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_ceggg, _ccdga := _a.ParseBool(_babbd.Value)
			if _ccdga != nil {
				return _ccdga
			}
			_bdgcfb.EditDataAttr = &_ceggg
			continue
		}
		if _babbd.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_ggcfga, _cfdgf := _a.ParseBool(_babbd.Value)
			if _cfdgf != nil {
				return _cfdgf
			}
			_bdgcfb.OutlineAttr = &_ggcfga
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_feedg, _aacab := _a.ParseBool(_babbd.Value)
			if _aacab != nil {
				return _aacab
			}
			_bdgcfb.ShowCalcMbrsAttr = &_feedg
			continue
		}
		if _babbd.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_fbaae, _gbabee := _a.ParseBool(_babbd.Value)
			if _gbabee != nil {
				return _gbabee
			}
			_bdgcfb.OutlineDataAttr = &_fbaae
			continue
		}
		if _babbd.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_ggggbe, _ecceb := _a.ParseBool(_babbd.Value)
			if _ecceb != nil {
				return _ecceb
			}
			_bdgcfb.GridDropZonesAttr = &_ggggbe
			continue
		}
		if _babbd.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_dbcfd, _addfb := _a.ParseBool(_babbd.Value)
			if _addfb != nil {
				return _addfb
			}
			_bdgcfb.CustomListSortAttr = &_dbcfd
			continue
		}
		if _babbd.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_dfcad, _efgbf := _a.ParseBool(_babbd.Value)
			if _efgbf != nil {
				return _efgbf
			}
			_bdgcfb.RowGrandTotalsAttr = &_dfcad
			continue
		}
		if _babbd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gdcde, _agfga := _a.ParseBool(_babbd.Value)
			if _agfga != nil {
				return _agfga
			}
			_bdgcfb.ApplyWidthHeightFormatsAttr = &_gdcde
			continue
		}
		if _babbd.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_facdaa, _eeede := _a.ParseBool(_babbd.Value)
			if _eeede != nil {
				return _eeede
			}
			_bdgcfb.UseAutoFormattingAttr = &_facdaa
			continue
		}
		if _babbd.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_egfgdd, _aadcf := _babbd.Value, error(nil)
			if _aadcf != nil {
				return _aadcf
			}
			_bdgcfb.RowHeaderCaptionAttr = &_egfgdd
			continue
		}
		if _babbd.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_fbbeab, _ffbdg := _a.ParseBool(_babbd.Value)
			if _ffbdg != nil {
				return _ffbdg
			}
			_bdgcfb.ShowDrillAttr = &_fbbeab
			continue
		}
		if _babbd.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_bgdbd, _debbec := _a.ParseBool(_babbd.Value)
			if _debbec != nil {
				return _debbec
			}
			_bdgcfb.MergeItemAttr = &_bgdbd
			continue
		}
		if _babbd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ffbaa, _dacddd := _a.ParseBool(_babbd.Value)
			if _dacddd != nil {
				return _dacddd
			}
			_bdgcfb.ApplyBorderFormatsAttr = &_ffbaa
			continue
		}
		if _babbd.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_fffafb, _gcgdda := _a.ParseBool(_babbd.Value)
			if _gcgdda != nil {
				return _gcgdda
			}
			_bdgcfb.VisualTotalsAttr = &_fffafb
			continue
		}
		if _babbd.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_agegab, _fcdee := _a.ParseBool(_babbd.Value)
			if _fcdee != nil {
				return _fcdee
			}
			_bdgcfb.CompactDataAttr = &_agegab
			continue
		}
		if _babbd.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_gacedf, _aeebd := _a.ParseUint(_babbd.Value, 10, 32)
			if _aeebd != nil {
				return _aeebd
			}
			_eeccdd := uint32(_gacedf)
			_bdgcfb.DataPositionAttr = &_eeccdd
			continue
		}
		if _babbd.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_ddgfc, _gadcd := _a.ParseBool(_babbd.Value)
			if _gadcd != nil {
				return _gadcd
			}
			_bdgcfb.MultipleFieldFiltersAttr = &_ddgfc
			continue
		}
		if _babbd.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_agbbcd, _dcagcd := _a.ParseBool(_babbd.Value)
			if _dcagcd != nil {
				return _dcagcd
			}
			_bdgcfb.PageOverThenDownAttr = &_agbbcd
			continue
		}
		if _babbd.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_aaddf, _bddcd := _a.ParseBool(_babbd.Value)
			if _bddcd != nil {
				return _bddcd
			}
			_bdgcfb.FieldListSortAscendingAttr = &_aaddf
			continue
		}
		if _babbd.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_fefee, _eeage := _a.ParseBool(_babbd.Value)
			if _eeage != nil {
				return _eeage
			}
			_bdgcfb.ShowMissingAttr = &_fefee
			continue
		}
		if _babbd.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_badfce, _ddgbb := _a.ParseBool(_babbd.Value)
			if _ddgbb != nil {
				return _ddgbb
			}
			_bdgcfb.FieldPrintTitlesAttr = &_badfce
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_ecabad, _gdcfe := _a.ParseBool(_babbd.Value)
			if _gdcfe != nil {
				return _gdcfe
			}
			_bdgcfb.ShowMemberPropertyTipsAttr = &_ecabad
			continue
		}
		if _babbd.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_fabegb, _cabcg := _babbd.Value, error(nil)
			if _cabcg != nil {
				return _cabcg
			}
			_bdgcfb.PageStyleAttr = &_fabegb
			continue
		}
		if _babbd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_abbaf, _abacf := _a.ParseUint(_babbd.Value, 10, 32)
			if _abacf != nil {
				return _abacf
			}
			_aagabc := uint32(_abbaf)
			_bdgcfb.AutoFormatIdAttr = &_aagabc
			continue
		}
		if _babbd.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_deccbe, _acbbb := _a.ParseBool(_babbd.Value)
			if _acbbb != nil {
				return _acbbb
			}
			_bdgcfb.ShowItemsAttr = &_deccbe
			continue
		}
		if _babbd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_abfca, _babag := _a.ParseBool(_babbd.Value)
			if _babag != nil {
				return _babag
			}
			_bdgcfb.ApplyPatternFormatsAttr = &_abfca
			continue
		}
		if _babbd.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_fdfgce, _eabeg := _a.ParseBool(_babbd.Value)
			if _eabeg != nil {
				return _eabeg
			}
			_bdgcfb.EnableFieldPropertiesAttr = &_fdfgce
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_cdbfb, _cgdfcc := _a.ParseBool(_babbd.Value)
			if _cgdfcc != nil {
				return _cgdfcc
			}
			_bdgcfb.ShowMultipleLabelAttr = &_cdbfb
			continue
		}
		if _babbd.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_bbaef, _dgbbade := _a.ParseBool(_babbd.Value)
			if _dgbbade != nil {
				return _dgbbade
			}
			_bdgcfb.PreserveFormattingAttr = &_bbaef
			continue
		}
		if _babbd.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_efeebf, _aagbe := _a.ParseBool(_babbd.Value)
			if _aagbe != nil {
				return _aagbe
			}
			_bdgcfb.PublishedAttr = &_efeebf
			continue
		}
		if _babbd.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_bdabd, _edaga := _babbd.Value, error(nil)
			if _edaga != nil {
				return _edaga
			}
			_bdgcfb.MissingCaptionAttr = &_bdabd
			continue
		}
		if _babbd.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_afecd, _bgfcce := _a.ParseBool(_babbd.Value)
			if _bgfcce != nil {
				return _bgfcce
			}
			_bdgcfb.ImmersiveAttr = &_afecd
			continue
		}
		if _babbd.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_gcafgda, _dedce := _a.ParseUint(_babbd.Value, 10, 32)
			if _dedce != nil {
				return _dedce
			}
			_facdea := uint32(_gcafgda)
			_bdgcfb.PageWrapAttr = &_facdea
			continue
		}
		if _babbd.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_adabfb, _bggbff := _a.ParseUint(_babbd.Value, 10, 32)
			if _bggbff != nil {
				return _bggbff
			}
			_eeabf := uint32(_adabfb)
			_bdgcfb.ChartFormatAttr = &_eeabf
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_fbceda, _ddgfbg := _a.ParseBool(_babbd.Value)
			if _ddgfbg != nil {
				return _ddgfbg
			}
			_bdgcfb.ShowDataDropDownAttr = &_fbceda
			continue
		}
		if _babbd.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bdfaf, _bgacfc := _babbd.Value, error(nil)
			if _bgacfc != nil {
				return _bgacfc
			}
			_bdgcfb.ColHeaderCaptionAttr = &_bdfaf
			continue
		}
		if _babbd.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_gagcb, _efaab := _a.ParseBool(_babbd.Value)
			if _efaab != nil {
				return _efaab
			}
			_bdgcfb.SubtotalHiddenItemsAttr = &_gagcb
			continue
		}
		if _babbd.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_gdbgg, _cagdeb := _a.ParseBool(_babbd.Value)
			if _cagdeb != nil {
				return _cagdeb
			}
			_bdgcfb.MdxSubqueriesAttr = &_gdbgg
			continue
		}
		if _babbd.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dbdcg, _cecba := _babbd.Value, error(nil)
			if _cecba != nil {
				return _cecba
			}
			_bdgcfb.ErrorCaptionAttr = &_dbdcg
			continue
		}
		if _babbd.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_feadg, _cccfd := _a.ParseBool(_babbd.Value)
			if _cccfd != nil {
				return _cccfd
			}
			_bdgcfb.ColGrandTotalsAttr = &_feadg
			continue
		}
		if _babbd.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_gafag, _fdgca := _a.ParseBool(_babbd.Value)
			if _fdgca != nil {
				return _fdgca
			}
			_bdgcfb.PrintDrillAttr = &_gafag
			continue
		}
		if _babbd.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_cbgabd, _aedcae := _a.ParseBool(_babbd.Value)
			if _aedcae != nil {
				return _aedcae
			}
			_bdgcfb.ItemPrintTitlesAttr = &_cbgabd
			continue
		}
		if _babbd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdffd, _efeafg := _babbd.Value, error(nil)
			if _efeafg != nil {
				return _efeafg
			}
			_bdgcfb.NameAttr = _bdffd
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_bcacd, _gcbcdb := _a.ParseBool(_babbd.Value)
			if _gcbcdb != nil {
				return _gcbcdb
			}
			_bdgcfb.ShowDropZonesAttr = &_bcacd
			continue
		}
		if _babbd.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_dbddf, _cbebde := _a.ParseBool(_babbd.Value)
			if _cbebde != nil {
				return _cbebde
			}
			_bdgcfb.ShowDataTipsAttr = &_dbddf
			continue
		}
		if _babbd.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_fbbebb, _acgcg := _babbd.Value, error(nil)
			if _acgcg != nil {
				return _acgcg
			}
			_bdgcfb.VacatedStyleAttr = &_fbbebb
			continue
		}
		if _babbd.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_dagbe, _bcgdgb := _babbd.Value, error(nil)
			if _bcgdgb != nil {
				return _bcgdgb
			}
			_bdgcfb.GrandTotalCaptionAttr = &_dagbe
			continue
		}
		if _babbd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_cgbdgbg, _aedfbb := _a.ParseBool(_babbd.Value)
			if _aedfbb != nil {
				return _aedfbb
			}
			_bdgcfb.ApplyNumberFormatsAttr = &_cgbdgbg
			continue
		}
		if _babbd.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_eeaab, _egede := _a.ParseBool(_babbd.Value)
			if _egede != nil {
				return _egede
			}
			_bdgcfb.EnableDrillAttr = &_eeaab
			continue
		}
		if _babbd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gdgeae, _gcddcf := _a.ParseBool(_babbd.Value)
			if _gcddcf != nil {
				return _gcddcf
			}
			_bdgcfb.ApplyFontFormatsAttr = &_gdgeae
			continue
		}
		if _babbd.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_begeb, _dgafad := _a.ParseBool(_babbd.Value)
			if _dgafad != nil {
				return _dgafad
			}
			_bdgcfb.DisableFieldListAttr = &_begeb
			continue
		}
		if _babbd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ageagg, _cgcgg := _a.ParseBool(_babbd.Value)
			if _cgcgg != nil {
				return _cgcgg
			}
			_bdgcfb.ApplyAlignmentFormatsAttr = &_ageagg
			continue
		}
		if _babbd.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_bggdd, _aeceee := _a.ParseBool(_babbd.Value)
			if _aeceee != nil {
				return _aeceee
			}
			_bdgcfb.DataOnRowsAttr = &_bggdd
			continue
		}
		if _babbd.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_gabdde, _bfgaa := _babbd.Value, error(nil)
			if _bfgaa != nil {
				return _bfgaa
			}
			_bdgcfb.DataCaptionAttr = _gabdde
			continue
		}
		if _babbd.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_beggf, _fgafc := _a.ParseBool(_babbd.Value)
			if _fgafc != nil {
				return _fgafc
			}
			_bdgcfb.ShowErrorAttr = &_beggf
			continue
		}
		if _babbd.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_adcecc, _gccee := _a.ParseUint(_babbd.Value, 10, 32)
			if _gccee != nil {
				return _gccee
			}
			_bdgcfb.CacheIdAttr = uint32(_adcecc)
			continue
		}
		if _babbd.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_daccdfa, _dedfc := _a.ParseBool(_babbd.Value)
			if _dedfc != nil {
				return _dedfc
			}
			_bdgcfb.EnableWizardAttr = &_daccdfa
			continue
		}
		if _babbd.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_cebeba, _geaae := _a.ParseUint(_babbd.Value, 10, 8)
			if _geaae != nil {
				return _geaae
			}
			_ddgcgg := uint8(_cebeba)
			_bdgcfb.UpdatedVersionAttr = &_ddgcgg
			continue
		}
	}
_aebcb:
	for {
		_ffbgga, _cefbad := d.Token()
		if _cefbad != nil {
			return _cefbad
		}
		switch _gefdc := _ffbgga.(type) {
		case _gd.StartElement:
			switch _gefdc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _bafadf := d.DecodeElement(_bdgcfb.Location, &_gefdc); _bafadf != nil {
					return _bafadf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_bdgcfb.PivotFields = NewCT_PivotFields()
				if _egceb := d.DecodeElement(_bdgcfb.PivotFields, &_gefdc); _egceb != nil {
					return _egceb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_bdgcfb.RowFields = NewCT_RowFields()
				if _bgeeaf := d.DecodeElement(_bdgcfb.RowFields, &_gefdc); _bgeeaf != nil {
					return _bgeeaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_bdgcfb.RowItems = NewCT_rowItems()
				if _cegge := d.DecodeElement(_bdgcfb.RowItems, &_gefdc); _cegge != nil {
					return _cegge
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_bdgcfb.ColFields = NewCT_ColFields()
				if _fabcc := d.DecodeElement(_bdgcfb.ColFields, &_gefdc); _fabcc != nil {
					return _fabcc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_bdgcfb.ColItems = NewCT_colItems()
				if _dafegf := d.DecodeElement(_bdgcfb.ColItems, &_gefdc); _dafegf != nil {
					return _dafegf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_bdgcfb.PageFields = NewCT_PageFields()
				if _babcag := d.DecodeElement(_bdgcfb.PageFields, &_gefdc); _babcag != nil {
					return _babcag
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_bdgcfb.DataFields = NewCT_DataFields()
				if _dcbdg := d.DecodeElement(_bdgcfb.DataFields, &_gefdc); _dcbdg != nil {
					return _dcbdg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_bdgcfb.Formats = NewCT_Formats()
				if _eadea := d.DecodeElement(_bdgcfb.Formats, &_gefdc); _eadea != nil {
					return _eadea
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_bdgcfb.ConditionalFormats = NewCT_ConditionalFormats()
				if _eacdc := d.DecodeElement(_bdgcfb.ConditionalFormats, &_gefdc); _eacdc != nil {
					return _eacdc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_bdgcfb.ChartFormats = NewCT_ChartFormats()
				if _aacebc := d.DecodeElement(_bdgcfb.ChartFormats, &_gefdc); _aacebc != nil {
					return _aacebc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_bdgcfb.PivotHierarchies = NewCT_PivotHierarchies()
				if _gecbfb := d.DecodeElement(_bdgcfb.PivotHierarchies, &_gefdc); _gecbfb != nil {
					return _gecbfb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_bdgcfb.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _adabff := d.DecodeElement(_bdgcfb.PivotTableStyleInfo, &_gefdc); _adabff != nil {
					return _adabff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_bdgcfb.Filters = NewCT_PivotFilters()
				if _adfad := d.DecodeElement(_bdgcfb.Filters, &_gefdc); _adfad != nil {
					return _adfad
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_bdgcfb.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _ebcfd := d.DecodeElement(_bdgcfb.RowHierarchiesUsage, &_gefdc); _ebcfd != nil {
					return _ebcfd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_bdgcfb.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _abefbg := d.DecodeElement(_bdgcfb.ColHierarchiesUsage, &_gefdc); _abefbg != nil {
					return _abefbg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdgcfb.ExtLst = NewCT_ExtensionList()
				if _gegdf := d.DecodeElement(_bdgcfb.ExtLst, &_gefdc); _gegdf != nil {
					return _gegdf
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gefdc.Name)
				if _aedbd := d.Skip(); _aedbd != nil {
					return _aedbd
				}
			}
		case _gd.EndElement:
			break _aebcb
		case _gd.CharData:
		}
	}
	return nil
}

func NewCT_PageMargins() *CT_PageMargins { _dffaf := &CT_PageMargins{}; return _dffaf }

// Validate validates the CT_DeletedField and its children
func (_cggb *CT_DeletedField) Validate() error {
	return _cggb.ValidateWithPath("\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064")
}

const (
	ST_CellCommentsUnset       ST_CellComments = 0
	ST_CellCommentsNone        ST_CellComments = 1
	ST_CellCommentsAsDisplayed ST_CellComments = 2
	ST_CellCommentsAtEnd       ST_CellComments = 3
)

type CT_DdeLink struct {

	// Service name
	DdeServiceAttr string

	// Topic for DDE server
	DdeTopicAttr string

	// DDE Items Collection
	DdeItems *CT_DdeItems
}

func NewCT_DiscretePr() *CT_DiscretePr { _ccaag := &CT_DiscretePr{}; return _ccaag }

func (_gadb *CT_MdxMetadata) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _fbced := range start.Attr {
		if _fbced.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aceba, _dgfdf := _a.ParseUint(_fbced.Value, 10, 32)
			if _dgfdf != nil {
				return _dgfdf
			}
			_dfbge := uint32(_aceba)
			_gadb.CountAttr = &_dfbge
			continue
		}
	}
_acfgd:
	for {
		_egaac, _ggfbb := d.Token()
		if _ggfbb != nil {
			return _ggfbb
		}
		switch _fdadc := _egaac.(type) {
		case _gd.StartElement:
			switch _fdadc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}:
				_gfbcg := NewCT_Mdx()
				if _acggg := d.DecodeElement(_gfbcg, &_fdadc); _acggg != nil {
					return _acggg
				}
				_gadb.Mdx = append(_gadb.Mdx, _gfbcg)
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074\u0061d\u0061t\u0061\u0020\u0025\u0076", _fdadc.Name)
				if _gbgef := d.Skip(); _gbgef != nil {
					return _gbgef
				}
			}
		case _gd.EndElement:
			break _acfgd
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_XmlCellPr and its children
func (_dgbcc *CT_XmlCellPr) Validate() error {
	return _dgbcc.ValidateWithPath("\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072")
}

// Validate validates the CT_DataValidation and its children
func (_dcgga *CT_DataValidation) Validate() error {
	return _dcgga.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_ExtensionList and its children
func (_ffdc *CT_ExtensionList) Validate() error {
	return _ffdc.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

type CT_CacheHierarchy struct {

	// Hierarchy Unique Name
	UniqueNameAttr string

	// Hierarchy Display Name
	CaptionAttr *string

	// Measure Hierarchy
	MeasureAttr *bool

	// Set
	SetAttr *bool

	// Parent Set
	ParentSetAttr *uint32

	// KPI Icon Set
	IconSetAttr *int32

	// Attribute Hierarchy
	AttributeAttr *bool

	// Time
	TimeAttr *bool

	// Key Attribute Hierarchy
	KeyAttributeAttr *bool

	// Default Member Unique Name
	DefaultMemberUniqueNameAttr *string

	// Unique Name of 'All'
	AllUniqueNameAttr *string

	// Display Name of 'All'
	AllCaptionAttr *string

	// Dimension Unique Name
	DimensionUniqueNameAttr *string

	// Display Folder
	DisplayFolderAttr *string

	// Measure Group Name
	MeasureGroupAttr *string

	// Measures
	MeasuresAttr *bool

	// Levels Count
	CountAttr uint32

	// One Field
	OneFieldAttr *bool

	// Member Value Data Type
	MemberValueDatatypeAttr *uint16

	// Unbalanced
	UnbalancedAttr *bool

	// Unbalanced Group
	UnbalancedGroupAttr *bool

	// Hidden
	HiddenAttr *bool

	// Fields Usage
	FieldsUsage *CT_FieldsUsage

	// OLAP Grouping Levels
	GroupLevels *CT_GroupLevels

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_FieldSortTypeUnset      ST_FieldSortType = 0
	ST_FieldSortTypeManual     ST_FieldSortType = 1
	ST_FieldSortTypeAscending  ST_FieldSortType = 2
	ST_FieldSortTypeDescending ST_FieldSortType = 3
)

func (_abbbe *CT_UndoInfo) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_abbbe.ExpAttr = ST_FormulaExpression(1)
	for _, _egcee := range start.Attr {
		if _egcee.Name.Local == "\u0069\u006e\u0064e\u0078" {
			_abbbd, _bbbfec := _a.ParseUint(_egcee.Value, 10, 32)
			if _bbbfec != nil {
				return _bbbfec
			}
			_abbbe.IndexAttr = uint32(_abbbd)
			continue
		}
		if _egcee.Name.Local == "\u0065\u0078\u0070" {
			_abbbe.ExpAttr.UnmarshalXMLAttr(_egcee)
			continue
		}
		if _egcee.Name.Local == "\u0072\u0065\u00663\u0044" {
			_gcebc, _eaagf := _a.ParseBool(_egcee.Value)
			if _eaagf != nil {
				return _eaagf
			}
			_abbbe.Ref3DAttr = &_gcebc
			continue
		}
		if _egcee.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_ccebaf, _cdfgda := _a.ParseBool(_egcee.Value)
			if _cdfgda != nil {
				return _cdfgda
			}
			_abbbe.ArrayAttr = &_ccebaf
			continue
		}
		if _egcee.Name.Local == "\u0076" {
			_acege, _faagdd := _a.ParseBool(_egcee.Value)
			if _faagdd != nil {
				return _faagdd
			}
			_abbbe.VAttr = &_acege
			continue
		}
		if _egcee.Name.Local == "\u006e\u0066" {
			_gfbeg, _geffed := _a.ParseBool(_egcee.Value)
			if _geffed != nil {
				return _geffed
			}
			_abbbe.NfAttr = &_gfbeg
			continue
		}
		if _egcee.Name.Local == "\u0063\u0073" {
			_abcfg, _cdffg := _a.ParseBool(_egcee.Value)
			if _cdffg != nil {
				return _cdffg
			}
			_abbbe.CsAttr = &_abcfg
			continue
		}
		if _egcee.Name.Local == "\u0064\u0072" {
			_bcddd, _cbefd := _egcee.Value, error(nil)
			if _cbefd != nil {
				return _cbefd
			}
			_abbbe.DrAttr = _bcddd
			continue
		}
		if _egcee.Name.Local == "\u0064\u006e" {
			_geadbf, _faabd := _egcee.Value, error(nil)
			if _faabd != nil {
				return _faabd
			}
			_abbbe.DnAttr = &_geadbf
			continue
		}
		if _egcee.Name.Local == "\u0072" {
			_eegdc, _adegg := _egcee.Value, error(nil)
			if _adegg != nil {
				return _adegg
			}
			_abbbe.RAttr = &_eegdc
			continue
		}
		if _egcee.Name.Local == "\u0073\u0049\u0064" {
			_accbc, _eedge := _a.ParseUint(_egcee.Value, 10, 32)
			if _eedge != nil {
				return _eedge
			}
			_agecf := uint32(_accbc)
			_abbbe.SIdAttr = &_agecf
			continue
		}
	}
	for {
		_dgdebc, _afbga := d.Token()
		if _afbga != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0073", _afbga)
		}
		if _fdfgb, _gdeec := _dgdebc.(_gd.EndElement); _gdeec && _fdfgb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Control() *CT_Control { _acdee := &CT_Control{}; return _acdee }

const (
	ST_GradientTypeUnset  ST_GradientType = 0
	ST_GradientTypeLinear ST_GradientType = 1
	ST_GradientTypePath   ST_GradientType = 2
)

type CT_ColorFilter struct {

	// Differential Format Record Id
	DxfIdAttr *uint32

	// Filter By Cell Color
	CellColorAttr *bool
}

type CT_Dxfs struct {

	// Format Count
	CountAttr *uint32

	// Formatting
	Dxf []*CT_Dxf
}

func (_fdaafg ST_SourceType) ValidateWithPath(path string) error {
	switch _fdaafg {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdaafg))
	}
	return nil
}

type CT_Mdx struct {

	// Connection Name Index
	NAttr uint32

	// Cube Function Tag
	FAttr ST_MdxFunctionType

	// Tuple MDX Metadata
	T *CT_MdxTuple

	// Set MDX Metadata
	Ms *CT_MdxSet

	// Member Property MDX Metadata
	P *CT_MdxMemeberProp

	// KPI MDX Metadata
	K *CT_MdxKPI
}

type CT_Borders struct {

	// Border Count
	CountAttr *uint32

	// Border
	Border []*CT_Border
}

func (_fbegf *CT_DateTime) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0076"}, Value: _b.Sprintf("\u0025\u0076", _fbegf.VAttr)})
	if _fbegf.UAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbegf.UAttr))})
	}
	if _fbegf.FAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_fbegf.FAttr))})
	}
	if _fbegf.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_fbegf.CAttr)})
	}
	if _fbegf.CpAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0070"}, Value: _b.Sprintf("\u0025\u0076", *_fbegf.CpAttr)})
	}
	e.EncodeToken(start)
	if _fbegf.X != nil {
		_ggcef := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _ddfdd := range _fbegf.X {
			e.EncodeElement(_ddfdd, _ggcef)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellWatch and its children, prefixing error messages with path
func (_bdbd *CT_CellWatch) ValidateWithPath(path string) error { return nil }

func (_gagba ST_rwColActionType) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_gagba.String(), start)
}

func (_aebbb *CT_OleSize) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _gcbcf := range start.Attr {
		if _gcbcf.Name.Local == "\u0072\u0065\u0066" {
			_dgae, _dcfda := _gcbcf.Value, error(nil)
			if _dcfda != nil {
				return _dcfda
			}
			_aebbb.RefAttr = _dgae
			continue
		}
	}
	for {
		_aadbe, _edgd := d.Token()
		if _edgd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065\u003a\u0020%\u0073", _edgd)
		}
		if _dafafd, _dcagc := _aadbe.(_gd.EndElement); _dcagc && _dafafd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Connections and its children
func (_cffe *CT_Connections) Validate() error {
	return _cffe.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073")
}

func (_daedbf ST_Objects) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	return e.EncodeElement(_daedbf.String(), start)
}

func (_bcbeb *CT_PivotAreaReferences) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _bcbeb.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bcbeb.CountAttr)})
	}
	e.EncodeToken(start)
	_fcbeab := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ar\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065"}}
	for _, _cfcab := range _bcbeb.Reference {
		e.EncodeElement(_cfcab, _fcbeab)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_aagaca ST_ExternalConnectionType) Validate() error { return _aagaca.ValidateWithPath("") }

func NewCT_PivotSelection() *CT_PivotSelection {
	_fffae := &CT_PivotSelection{}
	_fffae.PivotArea = NewCT_PivotArea()
	return _fffae
}

func NewCT_I() *CT_I { _cada := &CT_I{}; return _cada }

func NewCT_FilterColumn() *CT_FilterColumn { _faacc := &CT_FilterColumn{}; return _faacc }

// Validate validates the CT_DdeItem and its children
func (_dgeagb *CT_DdeItem) Validate() error {
	return _dgeagb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d")
}

func (_cfce *CT_HeaderFooter) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cfce.DifferentOddEvenAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfce.DifferentOddEvenAttr))})
	}
	if _cfce.DifferentFirstAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfce.DifferentFirstAttr))})
	}
	if _cfce.ScaleWithDocAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfce.ScaleWithDocAttr))})
	}
	if _cfce.AlignWithMarginsAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cfce.AlignWithMarginsAttr))})
	}
	e.EncodeToken(start)
	if _cfce.OddHeader != nil {
		_efdgbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_e.AddPreserveSpaceAttr(&_efdgbb, *_cfce.OddHeader)
		e.EncodeElement(_cfce.OddHeader, _efdgbb)
	}
	if _cfce.OddFooter != nil {
		_bbffbf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_e.AddPreserveSpaceAttr(&_bbffbf, *_cfce.OddFooter)
		e.EncodeElement(_cfce.OddFooter, _bbffbf)
	}
	if _cfce.EvenHeader != nil {
		_agbbf := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_e.AddPreserveSpaceAttr(&_agbbf, *_cfce.EvenHeader)
		e.EncodeElement(_cfce.EvenHeader, _agbbf)
	}
	if _cfce.EvenFooter != nil {
		_ffdaad := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_e.AddPreserveSpaceAttr(&_ffdaad, *_cfce.EvenFooter)
		e.EncodeElement(_cfce.EvenFooter, _ffdaad)
	}
	if _cfce.FirstHeader != nil {
		_dgcd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0048e\u0061\u0064\u0065\u0072"}}
		_e.AddPreserveSpaceAttr(&_dgcd, *_cfce.FirstHeader)
		e.EncodeElement(_cfce.FirstHeader, _dgcd)
	}
	if _cfce.FirstFooter != nil {
		_fafde := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0046o\u006f\u0074\u0065\u0072"}}
		_e.AddPreserveSpaceAttr(&_fafde, *_cfce.FirstFooter)
		e.EncodeElement(_cfce.FirstFooter, _fafde)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Borders and its children, prefixing error messages with path
func (_feb *CT_Borders) ValidateWithPath(path string) error {
	for _ggd, _ecb := range _feb.Border {
		if _fgg := _ecb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _ggd)); _fgg != nil {
			return _fgg
		}
	}
	return nil
}

type CT_WorkbookProtection struct {

	// Legacy Workbook Password
	WorkbookPasswordAttr *string

	// Workbook Password Character Set
	WorkbookPasswordCharacterSetAttr *string

	// Legacy Revisions Password
	RevisionsPasswordAttr *string

	// Revisions Password Character Set
	RevisionsPasswordCharacterSetAttr *string

	// Lock Structure
	LockStructureAttr *bool

	// Lock Windows
	LockWindowsAttr *bool

	// Lock Revisions
	LockRevisionAttr *bool

	// Cryptographic Algorithm Name
	RevisionsAlgorithmNameAttr *string

	// Password Hash Value
	RevisionsHashValueAttr *string

	// Salt Value for Password Verifier
	RevisionsSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	RevisionsSpinCountAttr *uint32

	// Cryptographic Algorithm Name
	WorkbookAlgorithmNameAttr *string

	// Password Hash Value
	WorkbookHashValueAttr *string

	// Salt Value for Password Verifier
	WorkbookSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	WorkbookSpinCountAttr *uint32
}

func NewCT_RevisionHeader() *CT_RevisionHeader {
	_fdega := &CT_RevisionHeader{}
	_fdega.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_fdega.SheetIdMap = NewCT_SheetIdMap()
	return _fdega
}

// ValidateWithPath validates the CT_DefinedName and its children, prefixing error messages with path
func (_ebafa *CT_DefinedName) ValidateWithPath(path string) error { return nil }

func (_gcacf *CT_CustomSheetViews) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	_fded := _gd.StartElement{Name: _gd.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
	for _, _cgcdd := range _gcacf.CustomSheetView {
		e.EncodeElement(_cgcdd, _fded)
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_daddg *Workbook) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_daddg.CT_Workbook = *NewCT_Workbook()
	for _, _adaeda := range start.Attr {
		if _adaeda.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_daddg.ConformanceAttr.UnmarshalXMLAttr(_adaeda)
			continue
		}
	}
_gaccd:
	for {
		_bfgeg, _cfdaba := d.Token()
		if _cfdaba != nil {
			return _cfdaba
		}
		switch _dfegbd := _bfgeg.(type) {
		case _gd.StartElement:
			switch _dfegbd.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_daddg.FileVersion = NewCT_FileVersion()
				if _aadgg := d.DecodeElement(_daddg.FileVersion, &_dfegbd); _aadgg != nil {
					return _aadgg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_daddg.FileSharing = NewCT_FileSharing()
				if _gbefg := d.DecodeElement(_daddg.FileSharing, &_dfegbd); _gbefg != nil {
					return _gbefg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_daddg.WorkbookPr = NewCT_WorkbookPr()
				if _fbfcfg := d.DecodeElement(_daddg.WorkbookPr, &_dfegbd); _fbfcfg != nil {
					return _fbfcfg
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_daddg.WorkbookProtection = NewCT_WorkbookProtection()
				if _aeeba := d.DecodeElement(_daddg.WorkbookProtection, &_dfegbd); _aeeba != nil {
					return _aeeba
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_daddg.BookViews = NewCT_BookViews()
				if _fdagb := d.DecodeElement(_daddg.BookViews, &_dfegbd); _fdagb != nil {
					return _fdagb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _addcb := d.DecodeElement(_daddg.Sheets, &_dfegbd); _addcb != nil {
					return _addcb
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_daddg.FunctionGroups = NewCT_FunctionGroups()
				if _bedacbd := d.DecodeElement(_daddg.FunctionGroups, &_dfegbd); _bedacbd != nil {
					return _bedacbd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_daddg.ExternalReferences = NewCT_ExternalReferences()
				if _cbbfd := d.DecodeElement(_daddg.ExternalReferences, &_dfegbd); _cbbfd != nil {
					return _cbbfd
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_daddg.DefinedNames = NewCT_DefinedNames()
				if _ceggba := d.DecodeElement(_daddg.DefinedNames, &_dfegbd); _ceggba != nil {
					return _ceggba
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_daddg.CalcPr = NewCT_CalcPr()
				if _eafcaf := d.DecodeElement(_daddg.CalcPr, &_dfegbd); _eafcaf != nil {
					return _eafcaf
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_daddg.OleSize = NewCT_OleSize()
				if _bccec := d.DecodeElement(_daddg.OleSize, &_dfegbd); _bccec != nil {
					return _bccec
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_daddg.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _abfeba := d.DecodeElement(_daddg.CustomWorkbookViews, &_dfegbd); _abfeba != nil {
					return _abfeba
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_daddg.PivotCaches = NewCT_PivotCaches()
				if _acaac := d.DecodeElement(_daddg.PivotCaches, &_dfegbd); _acaac != nil {
					return _acaac
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_daddg.SmartTagPr = NewCT_SmartTagPr()
				if _ggcccc := d.DecodeElement(_daddg.SmartTagPr, &_dfegbd); _ggcccc != nil {
					return _ggcccc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_daddg.SmartTagTypes = NewCT_SmartTagTypes()
				if _eabace := d.DecodeElement(_daddg.SmartTagTypes, &_dfegbd); _eabace != nil {
					return _eabace
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_daddg.WebPublishing = NewCT_WebPublishing()
				if _ffccff := d.DecodeElement(_daddg.WebPublishing, &_dfegbd); _ffccff != nil {
					return _ffccff
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_fdafe := NewCT_FileRecoveryPr()
				if _febdc := d.DecodeElement(_fdafe, &_dfegbd); _febdc != nil {
					return _febdc
				}
				_daddg.FileRecoveryPr = append(_daddg.FileRecoveryPr, _fdafe)
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_daddg.WebPublishObjects = NewCT_WebPublishObjects()
				if _gdfdbc := d.DecodeElement(_daddg.WebPublishObjects, &_dfegbd); _gdfdbc != nil {
					return _gdfdbc
				}
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daddg.ExtLst = NewCT_ExtensionList()
				if _egaafe := d.DecodeElement(_daddg.ExtLst, &_dfegbd); _egaafe != nil {
					return _egaafe
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _dfegbd.Name)
				if _gdgbg := d.Skip(); _gdgbg != nil {
					return _gdgbg
				}
			}
		case _gd.EndElement:
			break _gaccd
		case _gd.CharData:
		}
	}
	return nil
}

func (_aadb *CT_CalcCell) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _aadb.RAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_aadb.RAttr)})
	}
	if _aadb.RefAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0072\u0065\u0066"}, Value: _b.Sprintf("\u0025\u0076", *_aadb.RefAttr)})
	}
	if _aadb.IAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_aadb.IAttr)})
	}
	if _aadb.SAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aadb.SAttr))})
	}
	if _aadb.LAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u006c"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aadb.LAttr))})
	}
	if _aadb.TAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aadb.TAttr))})
	}
	if _aadb.AAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0061"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_aadb.AAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func NewCT_PivotTableStyle() *CT_PivotTableStyle { _befbb := &CT_PivotTableStyle{}; return _befbb }

func NewCT_ExternalSheetNames() *CT_ExternalSheetNames {
	_ggggd := &CT_ExternalSheetNames{}
	return _ggggd
}

type ST_SourceType byte

type CT_WebPublishObject struct {

	// Id
	IdAttr uint32

	// Div Id
	DivIdAttr string

	// Source Object
	SourceObjectAttr *string

	// Destination File
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Auto Republish
	AutoRepublishAttr *bool
}

type ST_TotalsRowFunction byte

func (_dgfcg *CT_FunctionGroups) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _dgfcg.BuiltInGroupCountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_dgfcg.BuiltInGroupCountAttr)})
	}
	e.EncodeToken(start)
	if _dgfcg.FunctionGroup != nil {
		_dabbdc := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061:\u0066\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}}
		for _, _deeda := range _dgfcg.FunctionGroup {
			e.EncodeElement(_deeda, _dabbdc)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_edeeg ST_RefMode) String() string {
	switch _edeeg {
	case 0:
		return ""
	case 1:
		return "\u0041\u0031"
	case 2:
		return "\u0052\u0031\u0043\u0031"
	}
	return ""
}

func (_ebcaf ST_PhoneticType) String() string {
	switch _ebcaf {
	case 0:
		return ""
	case 1:
		return "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 2:
		return "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 3:
		return "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 4:
		return "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return ""
}

// Validate validates the CT_MetadataStrings and its children
func (_agddf *CT_MetadataStrings) Validate() error {
	return _agddf.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073")
}

type CT_OutlinePr struct {

	// Apply Styles in Outline
	ApplyStylesAttr *bool

	// Summary Below
	SummaryBelowAttr *bool

	// Summary Right
	SummaryRightAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool
}

func (_fbbea *CT_Tables) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _fbbea.CountAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_fbbea.CountAttr)})
	}
	e.EncodeToken(start)
	if _fbbea.M != nil {
		_gagfbb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _fccbbf := range _fbbea.M {
			e.EncodeElement(_fccbbf, _gagfbb)
		}
	}
	if _fbbea.S != nil {
		_cgadbg := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _adgbbe := range _fbbea.S {
			e.EncodeElement(_adgbbe, _cgadbg)
		}
	}
	if _fbbea.X != nil {
		_fafbd := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _aebce := range _fbbea.X {
			e.EncodeElement(_aebce, _fafbd)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func (_cdafb *CT_MdxTuple) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	if _cdafb.CAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cdafb.CAttr)})
	}
	if _cdafb.CtAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cdafb.CtAttr)})
	}
	if _cdafb.SiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_cdafb.SiAttr)})
	}
	if _cdafb.FiAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0069"}, Value: _b.Sprintf("\u0025\u0076", *_cdafb.FiAttr)})
	}
	if _cdafb.BcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cdafb.BcAttr)})
	}
	if _cdafb.FcAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0066\u0063"}, Value: _b.Sprintf("\u0025\u0076", *_cdafb.FcAttr)})
	}
	if _cdafb.IAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0069"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdafb.IAttr))})
	}
	if _cdafb.UAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0075"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdafb.UAttr))})
	}
	if _cdafb.StAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdafb.StAttr))})
	}
	if _cdafb.BAttr != nil {
		start.Attr = append(start.Attr, _gd.Attr{Name: _gd.Name{Local: "\u0062"}, Value: _b.Sprintf("\u0025\u0064", _dadgc(*_cdafb.BAttr))})
	}
	e.EncodeToken(start)
	if _cdafb.N != nil {
		_edaca := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _gaacc := range _cdafb.N {
			e.EncodeElement(_gaacc, _edaca)
		}
	}
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

type ST_SortType byte

func (_aebegg *CT_NumFmts) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	for _, _acdac := range start.Attr {
		if _acdac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebbdg, _ffabd := _a.ParseUint(_acdac.Value, 10, 32)
			if _ffabd != nil {
				return _ffabd
			}
			_edefa := uint32(_ebbdg)
			_aebegg.CountAttr = &_edefa
			continue
		}
	}
_dffc:
	for {
		_gacaf, _gbfae := d.Token()
		if _gbfae != nil {
			return _gbfae
		}
		switch _agdddc := _gacaf.(type) {
		case _gd.StartElement:
			switch _agdddc.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_gaef := NewCT_NumFmt()
				if _ebadd := d.DecodeElement(_gaef, &_agdddc); _ebadd != nil {
					return _ebadd
				}
				_aebegg.NumFmt = append(_aebegg.NumFmt, _gaef)
			default:
				_e.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fN\u0075\u006d\u0046\u006d\u0074\u0073\u0020\u0025\u0076", _agdddc.Name)
				if _agegb := d.Skip(); _agegb != nil {
					return _agegb
				}
			}
		case _gd.EndElement:
			break _dffc
		case _gd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MdxKPI and its children, prefixing error messages with path
func (_fgebb *CT_MdxKPI) ValidateWithPath(path string) error {
	if _fgebb.PAttr == ST_MdxKPIPropertyUnset {
		return _b.Errorf("\u0025\u0073/\u0050\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _aadcbe := _fgebb.PAttr.ValidateWithPath(path + "\u002f\u0050\u0041\u0074\u0074\u0072"); _aadcbe != nil {
		return _aadcbe
	}
	return nil
}

type CT_RangeSets struct {

	// Reference and Page Item Count
	CountAttr *uint32

	// Range Set
	RangeSet []*CT_RangeSet
}

// ValidateWithPath validates the StyleSheet and its children, prefixing error messages with path
func (_gaaga *StyleSheet) ValidateWithPath(path string) error {
	if _ddaebg := _gaaga.CT_Stylesheet.ValidateWithPath(path); _ddaebg != nil {
		return _ddaebg
	}
	return nil
}

func (_fccg *CT_SharedUser) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
	_fccg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _beba := range start.Attr {
		if _beba.Name.Local == "\u0067\u0075\u0069\u0064" {
			_ebdfg, _dgegc := _beba.Value, error(nil)
			if _dgegc != nil {
				return _dgegc
			}
			_fccg.GuidAttr = _ebdfg
			continue
		}
		if _beba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cecbcb, _cfcec := _beba.Value, error(nil)
			if _cfcec != nil {
				return _cfcec
			}
			_fccg.NameAttr = _cecbcb
			continue
		}
		if _beba.Name.Local == "\u0069\u0064" {
			_cdgea, _dedea := _a.ParseInt(_beba.Value, 10, 32)
			if _dedea != nil {
				return _dedea
			}
			_fccg.IdAttr = int32(_cdgea)
			continue
		}
		if _beba.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_fbceac, _bcbbf := ParseStdlibTime(_beba.Value)
			if _bcbbf != nil {
				return _bcbbf
			}
			_fccg.DateTimeAttr = _fbceac
			continue
		}
	}
_ddcaab:
	for {
		_ggbce, _afbacb := d.Token()
		if _afbacb != nil {
			return _afbacb
		}
		switch _edggb := _ggbce.(type) {
		case _gd.StartElement:
			switch _edggb.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fccg.ExtLst = NewCT_ExtensionList()
				if _ebbee := d.DecodeElement(_fccg.ExtLst, &_edggb); _ebbee != nil {
					return _ebbee
				}
			default:
				_e.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072 \u0025\u0076", _edggb.Name)
				if _dabfb := d.Skip(); _dabfb != nil {
					return _dabfb
				}
			}
		case _gd.EndElement:
			break _ddcaab
		case _gd.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetDimension and its children
func (_bdcgg *CT_SheetDimension) Validate() error {
	return _bdcgg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

func (_gdae *CT_OleItems) UnmarshalXML(d *_gd.Decoder, start _gd.StartElement) error {
_bgdca:
	for {
		_bdgbe, _cgbfab := d.Token()
		if _cgbfab != nil {
			return _cgbfab
		}
		switch _eacfa := _bdgbe.(type) {
		case _gd.StartElement:
			switch _eacfa.Name {
			case _gd.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}, _gd.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}:
				_ccdefd := NewCT_OleItem()
				if _agbbd := d.DecodeElement(_ccdefd, &_eacfa); _agbbd != nil {
					return _agbbd
				}
				_gdae.OleItem = append(_gdae.OleItem, _ccdefd)
			default:
				_e.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _eacfa.Name)
				if _fdffb := d.Skip(); _fdffb != nil {
					return _fdffb
				}
			}
		case _gd.EndElement:
			break _bgdca
		case _gd.CharData:
		}
	}
	return nil
}

func (_efgbc ST_DynamicFilterType) ValidateWithPath(path string) error {
	switch _efgbc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efgbc))
	}
	return nil
}

func (_eeeeff *CT_RElt) MarshalXML(e *_gd.Encoder, start _gd.StartElement) error {
	e.EncodeToken(start)
	if _eeeeff.RPr != nil {
		_ddcfe := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0072"}}
		e.EncodeElement(_eeeeff.RPr, _ddcfe)
	}
	_bbdafb := _gd.StartElement{Name: _gd.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_e.AddPreserveSpaceAttr(&_bbdafb, _eeeeff.T)
	e.EncodeElement(_eeeeff.T, _bbdafb)
	e.EncodeToken(_gd.EndElement{Name: start.Name})
	return nil
}

func init() {
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_AutoFilter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e", NewCT_FilterColumn)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_Filters)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r", NewCT_Filter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_CustomFilters)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_CustomFilter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030", NewCT_Top10)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072", NewCT_ColorFilter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_IconFilter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_DynamicFilter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065", NewCT_SortState)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e", NewCT_SortCondition)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d", NewCT_DateGroupItem)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074", NewCT_XStringElement)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_ObjectAnchor)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e", NewCT_CalcChain)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c", NewCT_CalcCell)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewCT_Comments)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073", NewCT_Authors)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072", NewCT_CommentPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f", NewCT_MapInfo)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0063\u0068\u0065\u006da", NewCT_Schema)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070", NewCT_Map)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067", NewCT_DataBinding)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073", NewCT_Connections)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0062\u0050\u0072", NewCT_DbPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r", NewCT_OlapPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072", NewCT_WebPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073", NewCT_Parameters)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072", NewCT_Parameter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s", NewCT_Tables)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_TableMissing)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r", NewCT_TextPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_TextFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_PivotCacheDefinition)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073", NewCT_CacheFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_CacheField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065", NewCT_CacheSource)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065", NewCT_WorksheetSource)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e", NewCT_Consolidation)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073", NewCT_Pages)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065", NewCT_PCDSCPage)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d", NewCT_PageItem)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073", NewCT_RangeSets)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074", NewCT_RangeSet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073", NewCT_SharedItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_Missing)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r", NewCT_Number)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072", NewCT_Error)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065", NewCT_DateTime)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070", NewCT_FieldGroup)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072", NewCT_RangePr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072", NewCT_DiscretePr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073", NewCT_GroupItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073", NewCT_PivotCacheRecords)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d", NewCT_Record)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073", NewCT_PCDKPIs)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I", NewCT_PCDKPI)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_CacheHierarchies)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_CacheHierarchy)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065", NewCT_FieldsUsage)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065", NewCT_FieldUsage)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073", NewCT_GroupLevels)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c", NewCT_GroupLevel)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s", NewCT_Groups)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070", NewCT_LevelGroup)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_GroupMembers)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072", NewCT_GroupMember)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065", NewCT_TupleCache)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074", NewCT_ServerFormat)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ServerFormats)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073", NewCT_PCDSDTCEntries)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s", NewCT_Tuples)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065", NewCT_Tuple)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0065\u0074\u0073", NewCT_Sets)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0065\u0074", NewCT_Set)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065", NewCT_QueryCache)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079", NewCT_Query)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073", NewCT_CalculatedItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d", NewCT_CalculatedItem)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073", NewCT_CalculatedMembers)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072", NewCT_CalculatedMember)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_pivotTableDefinition)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e", NewCT_Location)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073", NewCT_PivotFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_PivotField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065", NewCT_AutoSortScope)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073", NewCT_Items)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u0074\u0065\u006d", NewCT_Item)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_PageFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_PageField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_DataFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064", NewCT_DataField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073", NewCT_rowItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073", NewCT_colItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049", NewCT_I)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058", NewCT_X)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_RowFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_ColFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064", NewCT_Field)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_Formats)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t", NewCT_Format)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ConditionalFormats)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074", NewCT_ConditionalFormat)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073", NewCT_PivotAreas)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ChartFormats)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074", NewCT_ChartFormat)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_PivotHierarchies)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_PivotHierarchy)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_RowHierarchiesUsage)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_ColHierarchiesUsage)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065", NewCT_HierarchyUsage)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_MemberProperties)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_MemberProperty)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_Members)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r", NewCT_Member)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073", NewCT_Dimensions)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_PivotDimension)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073", NewCT_MeasureGroups)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073", NewCT_MeasureDimensionMaps)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070", NewCT_MeasureGroup)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070", NewCT_MeasureDimensionMap)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065", NewCT_PivotTableStyle)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_PivotFilters)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072", NewCT_PivotFilter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061", NewCT_PivotArea)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073", NewCT_PivotAreaReferences)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_PivotAreaReference)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078", NewCT_Index)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewCT_QueryTable)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068", NewCT_QueryTableRefresh)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073", NewCT_QueryTableDeletedFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064", NewCT_DeletedField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_QueryTableFields)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064", NewCT_QueryTableField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0073\u0074", NewCT_Sst)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e", NewCT_PhoneticRun)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0045\u006c\u0074", NewCT_RElt)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct", NewCT_RPrElt)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0073\u0074", NewCT_Rst)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072", NewCT_PhoneticPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073", NewCT_RevisionHeaders)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073", NewCT_Revisions)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072", NewCT_RevisionHeader)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070", NewCT_SheetIdMap)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064", NewCT_SheetId)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073", NewCT_ReviewedRevisions)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064", NewCT_Reviewed)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f", NewCT_UndoInfo)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e", NewCT_RevisionRowColumn)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065", NewCT_RevisionMove)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077", NewCT_RevisionCustomView)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065", NewCT_RevisionSheetRename)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074", NewCT_RevisionInsertSheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065", NewCT_RevisionCellChange)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_RevisionFormatting)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg", NewCT_RevisionAutoFormatting)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074", NewCT_RevisionComment)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_RevisionDefinedName)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074", NewCT_RevisionConflict)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064", NewCT_RevisionQueryTableField)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073", NewCT_Users)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072", NewCT_SharedUser)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074", NewCT_Macrosheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074", NewCT_Dialogsheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074", NewCT_Worksheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061", NewCT_SheetData)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072", NewCT_SheetCalcPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072", NewCT_SheetFormatPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u0073", NewCT_Cols)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c", NewCT_Col)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u006f\u0077", NewCT_Row)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c", NewCT_Cell)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_SheetPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_SheetDimension)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_SheetViews)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_SheetView)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u006e\u0065", NewCT_Pane)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_PivotSelection)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Selection)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_PageBreak)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b", NewCT_Break)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072", NewCT_OutlinePr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072", NewCT_PageSetUpPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065", NewCT_DataConsolidate)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073", NewCT_DataRefs)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066", NewCT_DataRef)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073", NewCT_MergeCells)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c", NewCT_MergeCell)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_CellSmartTags)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067", NewCT_CellSmartTag)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072", NewCT_CellSmartTagPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_LegacyDrawing)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046", NewCT_DrawingHF)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomSheetViews)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077", NewCT_CustomSheetView)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073", NewCT_DataValidations)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e", NewCT_DataValidation)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_ConditionalFormatting)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce", NewCT_CfRule)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073", NewCT_Hyperlinks)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061", NewCT_CellFormula)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065", NewCT_ColorScale)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072", NewCT_DataBar)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074", NewCT_IconSet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0076\u006f", NewCT_Cfvo)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073", NewCT_PageMargins)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073", NewCT_PrintOptions)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070", NewCT_PageSetup)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073", NewCT_Scenarios)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e", NewCT_SheetProtection)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073", NewCT_ProtectedRanges)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065", NewCT_ProtectedRange)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f", NewCT_Scenario)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073", NewCT_InputCells)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073", NewCT_CellWatches)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068", NewCT_CellWatch)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewCT_Chartsheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_ChartsheetPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073", NewCT_ChartsheetViews)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077", NewCT_ChartsheetView)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_ChartsheetProtection)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070", NewCT_CsPageSetup)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomChartsheetViews)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_CustomChartsheetView)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CustomProperties)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_CustomProperty)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073", NewCT_OleObjects)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072", NewCT_ObjectPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073", NewCT_WebPublishItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d", NewCT_WebPublishItem)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073", NewCT_Controls)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072", NewCT_ControlPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073", NewCT_IgnoredErrors)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072", NewCT_IgnoredError)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073", NewCT_TableParts)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074", NewCT_TablePart)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewCT_Metadata)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073", NewCT_MetadataTypes)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065", NewCT_MetadataType)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073", NewCT_MetadataBlocks)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b", NewCT_MetadataBlock)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064", NewCT_MetadataRecord)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_FutureMetadata)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b", NewCT_FutureMetadataBlock)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_MdxMetadata)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078", NewCT_Mdx)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065", NewCT_MdxTuple)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t", NewCT_MdxSet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070", NewCT_MdxMemeberProp)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I", NewCT_MdxKPI)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078", NewCT_MetadataStringIndex)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073", NewCT_MetadataStrings)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewCT_SingleXmlCells)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c", NewCT_SingleXmlCell)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072", NewCT_XmlCellPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072", NewCT_XmlPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074", NewCT_Stylesheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074", NewCT_CellAlignment)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073", NewCT_Borders)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r", NewCT_Border)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072", NewCT_BorderPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e", NewCT_CellProtection)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073", NewCT_Fonts)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073", NewCT_Fills)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u006c", NewCT_Fill)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c", NewCT_PatternFill)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c", NewCT_GradientFill)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073", NewCT_NumFmts)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt", NewCT_NumFmt)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073", NewCT_CellStyleXfs)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073", NewCT_CellXfs)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u0066", NewCT_Xf)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_CellStyles)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065", NewCT_CellStyle)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0078\u0066\u0073", NewCT_Dxfs)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0078\u0066", NewCT_Dxf)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s", NewCT_Colors)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_IndexedColors)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_MRUColors)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_RgbColor)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073", NewCT_TableStyles)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074", NewCT_TableStyleElement)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079", NewCT_BooleanProperty)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065", NewCT_FontSize)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_IntProperty)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065", NewCT_FontName)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079", NewCT_VerticalAlignFontProperty)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079", NewCT_UnderlineProperty)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u006e\u0074", NewCT_Font)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079", NewCT_FontFamily)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewCT_ExternalLink)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b", NewCT_ExternalBook)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalSheetNames)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065", NewCT_ExternalSheetName)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalDefinedNames)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_ExternalDefinedName)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074", NewCT_ExternalSheetDataSet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061", NewCT_ExternalSheetData)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077", NewCT_ExternalRow)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c", NewCT_ExternalCell)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b", NewCT_DdeLink)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_DdeItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d", NewCT_DdeItem)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073", NewCT_DdeValues)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_DdeValue)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b", NewCT_OleLink)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_OleItems)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d", NewCT_OleItem)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f", NewCT_TableStyleInfo)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073", NewCT_TableColumns)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e", NewCT_TableColumn)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061", NewCT_TableFormula)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072", NewCT_XmlColumnPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewCT_VolTypes)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065", NewCT_VolType)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e", NewCT_VolMain)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063", NewCT_VolTopic)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066", NewCT_VolTopicRef)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewCT_Workbook)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e", NewCT_FileVersion)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073", NewCT_BookViews)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_BookView)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073", NewCT_CustomWorkbookViews)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_CustomWorkbookView)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s", NewCT_Sheets)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074", NewCT_Sheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072", NewCT_WorkbookPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072", NewCT_SmartTagPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073", NewCT_SmartTagTypes)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065", NewCT_SmartTagType)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072", NewCT_FileRecoveryPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r", NewCT_CalcPr)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_DefinedNames)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065", NewCT_DefinedName)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073", NewCT_ExternalReferences)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065", NewCT_ExternalReference)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e", NewCT_SheetBackgroundPicture)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073", NewCT_PivotCaches)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065", NewCT_PivotCache)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067", NewCT_FileSharing)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065", NewCT_OleSize)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_WorkbookProtection)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067", NewCT_WebPublishing)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073", NewCT_FunctionGroups)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070", NewCT_FunctionGroup)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073", NewCT_WebPublishObjects)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_WebPublishObject)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063a\u006c\u0063\u0043\u0068\u0061\u0069n", NewCalcChain)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewComments)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u004da\u0070\u0049\u006e\u0066\u006f", NewMapInfo)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "c\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073", NewConnections)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotCacheDefinition)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073", NewPivotCacheRecords)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotTableDefinition)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewQueryTable)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0073\u0074", NewSst)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0068e\u0061\u0064\u0065\u0072\u0073", NewHeaders)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0072e\u0076\u0069\u0073\u0069\u006f\u006es", NewRevisions)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0075\u0073\u0065r\u0073", NewUsers)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t", NewWorksheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewChartsheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "d\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074", NewDialogsheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewMetadata)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewSingleXmlCells)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewStyleSheet)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewExternalLink)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0061\u0062l\u0065", NewTable)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewVolTypes)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewWorkbook)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061", NewAG_RevData)
	_e.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074", NewAG_AutoFormat)
}

// ValidateWithPath validates the CT_CsPageSetup and its children, prefixing error messages with path
func (_edfag *CT_CsPageSetup) ValidateWithPath(path string) error {
	if _edfag.PaperHeightAttr != nil {
		if !_af.ST_PositiveUniversalMeasurePatternRe.MatchString(*_edfag.PaperHeightAttr) {
			return _b.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_PositiveUniversalMeasurePatternRe, *_edfag.PaperHeightAttr)
		}
	}
	if _edfag.PaperHeightAttr != nil {
		if !_af.ST_UniversalMeasurePatternRe.MatchString(*_edfag.PaperHeightAttr) {
			return _b.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_UniversalMeasurePatternRe, *_edfag.PaperHeightAttr)
		}
	}
	if _edfag.PaperWidthAttr != nil {
		if !_af.ST_PositiveUniversalMeasurePatternRe.MatchString(*_edfag.PaperWidthAttr) {
			return _b.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_PositiveUniversalMeasurePatternRe, *_edfag.PaperWidthAttr)
		}
	}
	if _edfag.PaperWidthAttr != nil {
		if !_af.ST_UniversalMeasurePatternRe.MatchString(*_edfag.PaperWidthAttr) {
			return _b.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _af.ST_UniversalMeasurePatternRe, *_edfag.PaperWidthAttr)
		}
	}
	if _afbae := _edfag.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _afbae != nil {
		return _afbae
	}
	return nil
}

type CT_TableStyle struct {

	// Table Style Name
	NameAttr string

	// Pivot Style
	PivotAttr *bool

	// Table
	TableAttr *bool

	// Table Style Count
	CountAttr *uint32

	// Table Style
	TableStyleElement []*CT_TableStyleElement
}
