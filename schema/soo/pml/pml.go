//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package pml

import (
	_b "encoding/xml"
	_fd "fmt"
	_g "github.com/unidoc/unioffice"
	_bc "github.com/unidoc/unioffice/schema/soo/dml"
	_e "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes"
	_f "strconv"
	_d "time"
)

func (_ecag *CT_OutlineViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_beag := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_ecag.CViewPr, _beag)
	if _ecag.SldLst != nil {
		_bgbe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ecag.SldLst, _bgbe)
	}
	if _ecag.ExtLst != nil {
		_gebe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecag.ExtLst, _gebe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Comment() *CT_Comment { _fdc := &CT_Comment{}; _fdc.Pos = _bc.NewCT_Point2D(); return _fdc }

func (_cccd *CT_SmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cccd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideRelationshipList and its children, prefixing error messages with path
func (_eeff *CT_SlideRelationshipList) ValidateWithPath(path string) error {
	for _adcbe, _ccfgd := range _eeff.Sld {
		if _afaab := _ccfgd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _adcbe)); _afaab != nil {
			return _afaab
		}
	}
	return nil
}

// Validate validates the CT_BuildList and its children
func (_dfea *CT_BuildList) Validate() error {
	return _dfea.ValidateWithPath("\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_SlideSyncProperties and its children
func (_dfge *CT_SlideSyncProperties) Validate() error {
	return _dfge.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func (_cfaag *CT_TLSetBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bggc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_cfaag.CBhvr, _bggc)
	if _cfaag.To != nil {
		_bbade := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_cfaag.To, _bbade)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_egfd *CT_CommentAuthor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdg := range start.Attr {
		if _gdg.Name.Local == "\u0069\u0064" {
			_ged, _ccf := _f.ParseUint(_gdg.Value, 10, 32)
			if _ccf != nil {
				return _ccf
			}
			_egfd.IdAttr = uint32(_ged)
			continue
		}
		if _gdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ece, _cagg := _gdg.Value, error(nil)
			if _cagg != nil {
				return _cagg
			}
			_egfd.NameAttr = _ece
			continue
		}
		if _gdg.Name.Local == "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073" {
			_acce, _cgd := _gdg.Value, error(nil)
			if _cgd != nil {
				return _cgd
			}
			_egfd.InitialsAttr = _acce
			continue
		}
		if _gdg.Name.Local == "\u006ca\u0073\u0074\u0049\u0064\u0078" {
			_cfdg, _eed := _f.ParseUint(_gdg.Value, 10, 32)
			if _eed != nil {
				return _eed
			}
			_egfd.LastIdxAttr = uint32(_cfdg)
			continue
		}
		if _gdg.Name.Local == "\u0063\u006c\u0072\u0049\u0064\u0078" {
			_cfda, _fbc := _f.ParseUint(_gdg.Value, 10, 32)
			if _fbc != nil {
				return _fbc
			}
			_egfd.ClrIdxAttr = uint32(_cfda)
			continue
		}
	}
_bdgc:
	for {
		_aec, _adeg := d.Token()
		if _adeg != nil {
			return _adeg
		}
		switch _eadb := _aec.(type) {
		case _b.StartElement:
			switch _eadb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egfd.ExtLst = NewCT_ExtensionList()
				if _gbea := d.DecodeElement(_egfd.ExtLst, &_eadb); _gbea != nil {
					return _gbea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u0020\u0025v", _eadb.Name)
				if _eabb := d.Skip(); _eabb != nil {
					return _eabb
				}
			}
		case _b.EndElement:
			break _bdgc
		case _b.CharData:
		}
	}
	return nil
}

func (_dgcfdc ST_PrintWhat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dgcfdc.String(), start)
}

func NewCT_PrintProperties() *CT_PrintProperties { _gbdf := &CT_PrintProperties{}; return _gbdf }

func (_accdbg *ST_TLAnimateBehaviorCalcMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cecae, _cgacag := d.Token()
	if _cgacag != nil {
		return _cgacag
	}
	if _acgc, _aefbf := _cecae.(_b.EndElement); _aefbf && _acgc.Name == start.Name {
		*_accdbg = 1
		return nil
	}
	if _gagee, _acgggd := _cecae.(_b.CharData); !_acgggd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cecae)
	} else {
		switch string(_gagee) {
		case "":
			*_accdbg = 0
		case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
			*_accdbg = 1
		case "\u006c\u0069\u006e":
			*_accdbg = 2
		case "\u0066\u006d\u006c\u0061":
			*_accdbg = 3
		}
	}
	_cecae, _cgacag = d.Token()
	if _cgacag != nil {
		return _cgacag
	}
	if _acecad, _defdg := _cecae.(_b.EndElement); _defdg && _acecad.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cecae)
}

func (_adde ST_TLAnimateBehaviorValueType) String() string {
	switch _adde {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072"
	case 2:
		return "\u006e\u0075\u006d"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

func (_fad *CT_BuildList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cagc:
	for {
		_bgg, _gbdbb := d.Token()
		if _gbdbb != nil {
			return _gbdbb
		}
		switch _acdg := _bgg.(type) {
		case _b.StartElement:
			switch _acdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}:
				_ebc := NewCT_TLBuildParagraph()
				if _efc := d.DecodeElement(_ebc, &_acdg); _efc != nil {
					return _efc
				}
				_fad.BldP = append(_fad.BldP, _ebc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_gac := NewCT_TLBuildDiagram()
				if _eeg := d.DecodeElement(_gac, &_acdg); _eeg != nil {
					return _eeg
				}
				_fad.BldDgm = append(_fad.BldDgm, _gac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}:
				_acadc := NewCT_TLOleBuildChart()
				if _gecg := d.DecodeElement(_acadc, &_acdg); _gecg != nil {
					return _gecg
				}
				_fad.BldOleChart = append(_fad.BldOleChart, _acadc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}:
				_ded := NewCT_TLGraphicalObjectBuild()
				if _gfec := d.DecodeElement(_ded, &_acdg); _gfec != nil {
					return _gfec
				}
				_fad.BldGraphic = append(_fad.BldGraphic, _ded)
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u0075\u0069l\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _acdg.Name)
				if _gace := d.Skip(); _gace != nil {
					return _gace
				}
			}
		case _b.EndElement:
			break _cagc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLBuildParagraph and its children
func (_defd *CT_TLBuildParagraph) Validate() error {
	return _defd.ValidateWithPath("\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}

func (_dbge *ST_TLTimeNodeRestartType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffcb, _bdccc := d.Token()
	if _bdccc != nil {
		return _bdccc
	}
	if _bbdfa, _bcdgd := _ffcb.(_b.EndElement); _bcdgd && _bbdfa.Name == start.Name {
		*_dbge = 1
		return nil
	}
	if _fffce, _begegc := _ffcb.(_b.CharData); !_begegc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffcb)
	} else {
		switch string(_fffce) {
		case "":
			*_dbge = 0
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_dbge = 1
		case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
			*_dbge = 2
		case "\u006e\u0065\u0076e\u0072":
			*_dbge = 3
		}
	}
	_ffcb, _bdccc = d.Token()
	if _bdccc != nil {
		return _bdccc
	}
	if _bfgaf, _ffaff := _ffcb.(_b.EndElement); _ffaff && _bfgaf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffcb)
}

// ValidateWithPath validates the CT_TLTriggerTimeNodeID and its children, prefixing error messages with path
func (_cfbeg *CT_TLTriggerTimeNodeID) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_BackgroundProperties and its children, prefixing error messages with path
func (_bcd *CT_BackgroundProperties) ValidateWithPath(path string) error {
	if _bcd.NoFill != nil {
		if _ab := _bcd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ab != nil {
			return _ab
		}
	}
	if _bcd.SolidFill != nil {
		if _ddg := _bcd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ddg != nil {
			return _ddg
		}
	}
	if _bcd.GradFill != nil {
		if _daa := _bcd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _daa != nil {
			return _daa
		}
	}
	if _bcd.BlipFill != nil {
		if _ccgf := _bcd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ccgf != nil {
			return _ccgf
		}
	}
	if _bcd.PattFill != nil {
		if _gg := _bcd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gg != nil {
			return _gg
		}
	}
	if _bcd.GrpFill != nil {
		if _cbfg := _bcd.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cbfg != nil {
			return _cbfg
		}
	}
	if _bcd.EffectLst != nil {
		if _acd := _bcd.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _acd != nil {
			return _acd
		}
	}
	if _bcd.EffectDag != nil {
		if _fcd := _bcd.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _fcd != nil {
			return _fcd
		}
	}
	if _bcd.ExtLst != nil {
		if _bda := _bcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bda != nil {
			return _bda
		}
	}
	return nil
}

type CT_WebProperties struct {

	// Show animation in HTML output
	ShowAnimationAttr *bool

	// Resize graphics in HTML output
	ResizeGraphicsAttr *bool

	// Allow PNG in HTML output
	AllowPngAttr *bool

	// Rely on VML for HTML output
	RelyOnVmlAttr *bool

	// Organize HTML output in folders
	OrganizeInFoldersAttr *bool

	// Use long file names in HTML output
	UseLongFilenamesAttr *bool

	// Image size for HTML output
	ImgSzAttr ST_WebScreenSize

	// Encoding for HTML output
	EncodingAttr *string

	// Slide Navigation Colors for HTML output
	ClrAttr ST_WebColorType
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_BackgroundProperties and its children
func (_ecf *CT_BackgroundProperties) Validate() error {
	return _ecf.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_SplitTransition and its children, prefixing error messages with path
func (_adbda *CT_SplitTransition) ValidateWithPath(path string) error {
	if _efade := _adbda.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _efade != nil {
		return _efade
	}
	if _dbag := _adbda.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _dbag != nil {
		return _dbag
	}
	return nil
}

func (_eaaac *SldLayout) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eaaac.CT_SlideLayout = *NewCT_SlideLayout()
	for _, _ddffcd := range start.Attr {
		if _ddffcd.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_ecff, _edeg := _ddffcd.Value, error(nil)
			if _edeg != nil {
				return _edeg
			}
			_eaaac.MatchingNameAttr = &_ecff
			continue
		}
		if _ddffcd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_eaaac.TypeAttr.UnmarshalXMLAttr(_ddffcd)
			continue
		}
		if _ddffcd.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_ecddd, _gcgcd := _f.ParseBool(_ddffcd.Value)
			if _gcgcd != nil {
				return _gcgcd
			}
			_eaaac.PreserveAttr = &_ecddd
			continue
		}
		if _ddffcd.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_ccgac, _dafbf := _f.ParseBool(_ddffcd.Value)
			if _dafbf != nil {
				return _dafbf
			}
			_eaaac.UserDrawnAttr = &_ccgac
			continue
		}
		if _ddffcd.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_dbcfe, _fffag := _f.ParseBool(_ddffcd.Value)
			if _fffag != nil {
				return _fffag
			}
			_eaaac.ShowMasterSpAttr = &_dbcfe
			continue
		}
		if _ddffcd.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_bfce, _dgac := _f.ParseBool(_ddffcd.Value)
			if _dgac != nil {
				return _dgac
			}
			_eaaac.ShowMasterPhAnimAttr = &_bfce
			continue
		}
	}
_ecaef:
	for {
		_aeba, _aeefd := d.Token()
		if _aeefd != nil {
			return _aeefd
		}
		switch _egdb := _aeba.(type) {
		case _b.StartElement:
			switch _egdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _gbeee := d.DecodeElement(_eaaac.CSld, &_egdb); _gbeee != nil {
					return _gbeee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_eaaac.ClrMapOvr = _bc.NewCT_ColorMappingOverride()
				if _beebd := d.DecodeElement(_eaaac.ClrMapOvr, &_egdb); _beebd != nil {
					return _beebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_eaaac.Transition = NewCT_SlideTransition()
				if _eaada := d.DecodeElement(_eaaac.Transition, &_egdb); _eaada != nil {
					return _eaada
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_eaaac.Timing = NewCT_SlideTiming()
				if _fddb := d.DecodeElement(_eaaac.Timing, &_egdb); _fddb != nil {
					return _fddb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_eaaac.Hf = NewCT_HeaderFooter()
				if _bggeg := d.DecodeElement(_eaaac.Hf, &_egdb); _bggeg != nil {
					return _bggeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaaac.ExtLst = NewCT_ExtensionListModify()
				if _cgafg := d.DecodeElement(_eaaac.ExtLst, &_egdb); _cgafg != nil {
					return _cgafg
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004c\u0061\u0079o\u0075\u0074 \u0025\u0076", _egdb.Name)
				if _dbabe := d.Skip(); _dbabe != nil {
					return _dbabe
				}
			}
		case _b.EndElement:
			break _ecaef
		case _b.CharData:
		}
	}
	return nil
}

func (_beecg *CT_TLBuildParagraph) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _beecg.BuildAttr != ST_TLParaBuildTypeUnset {
		_abfag, _cgeeb := _beecg.BuildAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0075\u0069l\u0064"})
		if _cgeeb != nil {
			return _cgeeb
		}
		start.Attr = append(start.Attr, _abfag)
	}
	if _beecg.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_beecg.BldLvlAttr)})
	}
	if _beecg.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_beecg.AnimBgAttr))})
	}
	if _beecg.AutoUpdateAnimBgAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_beecg.AutoUpdateAnimBgAttr))})
	}
	if _beecg.RevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_beecg.RevAttr))})
	}
	if _beecg.AdvAutoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061d\u0076\u0041\u0075\u0074\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_beecg.AdvAutoAttr)})
	}
	if _beecg.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_beecg.SpidAttr)})
	}
	if _beecg.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_beecg.GrpIdAttr)})
	}
	if _beecg.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_beecg.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _beecg.TmplLst != nil {
		_bbdae := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006d\u0070\u006c\u004c\u0073t"}}
		e.EncodeElement(_beecg.TmplLst, _bbdae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideMasterIdListEntry and its children
func (_cddd *CT_SlideMasterIdListEntry) Validate() error {
	return _cddd.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

func (_acfaf *CT_SlideSyncProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _acfaf.ServerSldIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _acfaf.ServerSldModifiedTimeAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _acfaf.ClientInsertedTimeAttr)})
	e.EncodeToken(start)
	if _acfaf.ExtLst != nil {
		_fdgdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acfaf.ExtLst, _fdgdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_HandoutMasterIdList struct {

	// Handout Master ID
	HandoutMasterId *CT_HandoutMasterIdListEntry
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_dcb *CT_Control) ValidateWithPath(path string) error {
	if _dcb.ExtLst != nil {
		if _aag := _dcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aag != nil {
			return _aag
		}
	}
	if _dcb.Pic != nil {
		if _ccbg := _dcb.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _ccbg != nil {
			return _ccbg
		}
	}
	if _dcb.ImgWAttr != nil {
		if *_dcb.ImgWAttr < 0 {
			return _fd.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dcb.ImgWAttr)
		}
	}
	if _dcb.ImgHAttr != nil {
		if *_dcb.ImgHAttr < 0 {
			return _fd.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dcb.ImgHAttr)
		}
	}
	return nil
}

func (_dgegf ST_TLAnimateColorDirection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dgegf.String(), start)
}

func (_aefa ST_TLCommandType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aefa.String(), start)
}

func (_agaeg ST_TLNextActionType) String() string {
	switch _agaeg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0065\u0065\u006b"
	}
	return ""
}

// ValidateWithPath validates the CT_TLIterateIntervalTime and its children, prefixing error messages with path
func (_ccffd *CT_TLIterateIntervalTime) ValidateWithPath(path string) error {
	if _agebg := _ccffd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _agebg != nil {
		return _agebg
	}
	return nil
}

type CT_PrintProperties struct {

	// Print Output
	PrnWhatAttr ST_PrintWhat

	// Print Color Mode
	ClrModeAttr ST_PrintColorMode

	// Print Hidden Slides
	HiddenSlidesAttr *bool

	// Scale to Fit Paper when printing
	ScaleToFitPaperAttr *bool

	// Frame slides when printing
	FrameSlidesAttr *bool
	ExtLst          *CT_ExtensionList
}

func (_cebb *CT_NotesViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fcba := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_cebb.CSldViewPr, _fcba)
	if _cebb.ExtLst != nil {
		_gdgga := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cebb.ExtLst, _gdgga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_ModifyVerifier() *CT_ModifyVerifier { _dcbb := &CT_ModifyVerifier{}; return _dcbb }

func NewCT_OrientationTransition() *CT_OrientationTransition {
	_adaf := &CT_OrientationTransition{}
	return _adaf
}

const (
	ST_TLAnimateColorDirectionUnset ST_TLAnimateColorDirection = 0
	ST_TLAnimateColorDirectionCw    ST_TLAnimateColorDirection = 1
	ST_TLAnimateColorDirectionCcw   ST_TLAnimateColorDirection = 2
)

func (_gdbc *CT_Picture) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bbee := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_gdbc.NvPicPr, _bbee)
	_cddec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_gdbc.BlipFill, _cddec)
	_cgdg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_gdbc.SpPr, _cgdg)
	if _gdbc.Style != nil {
		_ggfd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_gdbc.Style, _ggfd)
	}
	if _gdbc.ExtLst != nil {
		_bceg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdbc.ExtLst, _bceg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_feggd *ST_WebScreenSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbgaf, _bead := d.Token()
	if _bead != nil {
		return _bead
	}
	if _cddc, _ecdde := _dbgaf.(_b.EndElement); _ecdde && _cddc.Name == start.Name {
		*_feggd = 1
		return nil
	}
	if _ddca, _gaaab := _dbgaf.(_b.CharData); !_gaaab {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbgaf)
	} else {
		switch string(_ddca) {
		case "":
			*_feggd = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_feggd = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_feggd = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_feggd = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_feggd = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_feggd = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_feggd = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_feggd = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_feggd = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_feggd = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
			*_feggd = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_feggd = 11
		}
	}
	_dbgaf, _bead = d.Token()
	if _bead != nil {
		return _bead
	}
	if _dgbeb, _ffdbf := _dbgaf.(_b.EndElement); _ffdbf && _dgbeb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbgaf)
}

func (_dffab *CT_TLCommonTimeNodeData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dffab.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.IdAttr)})
	}
	if _dffab.PresetIDAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.PresetIDAttr)})
	}
	if _dffab.PresetClassAttr != ST_TLTimeNodePresetClassTypeUnset {
		_egde, _gagae := _dffab.PresetClassAttr.MarshalXMLAttr(_b.Name{Local: "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073"})
		if _gagae != nil {
			return _gagae
		}
		start.Attr = append(start.Attr, _egde)
	}
	if _dffab.PresetSubtypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.PresetSubtypeAttr)})
	}
	if _dffab.DurAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0075\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.DurAttr)})
	}
	if _dffab.RepeatCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.RepeatCountAttr)})
	}
	if _dffab.RepeatDurAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.RepeatDurAttr)})
	}
	if _dffab.SpdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.SpdAttr)})
	}
	if _dffab.AccelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0063e\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.AccelAttr)})
	}
	if _dffab.DecelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0063e\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.DecelAttr)})
	}
	if _dffab.AutoRevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0052\u0065\u0076"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_dffab.AutoRevAttr))})
	}
	if _dffab.RestartAttr != ST_TLTimeNodeRestartTypeUnset {
		_gdefb, _gdcfd := _dffab.RestartAttr.MarshalXMLAttr(_b.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"})
		if _gdcfd != nil {
			return _gdcfd
		}
		start.Attr = append(start.Attr, _gdefb)
	}
	if _dffab.FillAttr != ST_TLTimeNodeFillTypeUnset {
		_ffab, _bcefa := _dffab.FillAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _bcefa != nil {
			return _bcefa
		}
		start.Attr = append(start.Attr, _ffab)
	}
	if _dffab.SyncBehaviorAttr != ST_TLTimeNodeSyncTypeUnset {
		_aded, _cggbc := _dffab.SyncBehaviorAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072"})
		if _cggbc != nil {
			return _cggbc
		}
		start.Attr = append(start.Attr, _aded)
	}
	if _dffab.TmFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.TmFilterAttr)})
	}
	if _dffab.EvtFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.EvtFilterAttr)})
	}
	if _dffab.DisplayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_dffab.DisplayAttr))})
	}
	if _dffab.MasterRelAttr != ST_TLTimeNodeMasterRelationUnset {
		_ccebg, _abed := _dffab.MasterRelAttr.MarshalXMLAttr(_b.Name{Local: "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l"})
		if _abed != nil {
			return _abed
		}
		start.Attr = append(start.Attr, _ccebg)
	}
	if _dffab.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.BldLvlAttr)})
	}
	if _dffab.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dffab.GrpIdAttr)})
	}
	if _dffab.AfterEffectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_dffab.AfterEffectAttr))})
	}
	if _dffab.NodeTypeAttr != ST_TLTimeNodeTypeUnset {
		_fdgeg, _edbf := _dffab.NodeTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065"})
		if _edbf != nil {
			return _edbf
		}
		start.Attr = append(start.Attr, _fdgeg)
	}
	if _dffab.NodePhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0064\u0065\u0050\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_dffab.NodePhAttr))})
	}
	e.EncodeToken(start)
	if _dffab.StCondLst != nil {
		_bdcg := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0073\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_dffab.StCondLst, _bdcg)
	}
	if _dffab.EndCondLst != nil {
		_befefd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065n\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_dffab.EndCondLst, _befefd)
	}
	if _dffab.EndSync != nil {
		_gfff := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0065\u006e\u0064\u0053\u0079\u006ec"}}
		e.EncodeElement(_dffab.EndSync, _gfff)
	}
	if _dffab.Iterate != nil {
		_ggcacd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0069\u0074\u0065\u0072\u0061\u0074e"}}
		e.EncodeElement(_dffab.Iterate, _ggcacd)
	}
	if _dffab.ChildTnLst != nil {
		_bfdbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063h\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_dffab.ChildTnLst, _bfdbc)
	}
	if _dffab.SubTnLst != nil {
		_bcead := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_dffab.SubTnLst, _bcead)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_InOutTransition() *CT_InOutTransition { _ebea := &CT_InOutTransition{}; return _ebea }

func NewCT_Connector() *CT_Connector {
	_fdb := &CT_Connector{}
	_fdb.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_fdb.SpPr = _bc.NewCT_ShapeProperties()
	return _fdb
}

// Validate validates the CT_Kinsoku and its children
func (_fcgd *CT_Kinsoku) Validate() error {
	return _fcgd.ValidateWithPath("\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075")
}

func (_efgbd *CT_SlideTiming) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _efgbd.TnLst != nil {
		_gagg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_efgbd.TnLst, _gagg)
	}
	if _efgbd.BldLst != nil {
		_bcgc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_efgbd.BldLst, _bcgc)
	}
	if _efgbd.ExtLst != nil {
		_gabfe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efgbd.ExtLst, _gabfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideMaster and its children, prefixing error messages with path
func (_cebf *CT_SlideMaster) ValidateWithPath(path string) error {
	if _egbf := _cebf.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _egbf != nil {
		return _egbf
	}
	if _aaff := _cebf.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _aaff != nil {
		return _aaff
	}
	if _cebf.SldLayoutIdLst != nil {
		if _abbb := _cebf.SldLayoutIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"); _abbb != nil {
			return _abbb
		}
	}
	if _cebf.Transition != nil {
		if _afadf := _cebf.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _afadf != nil {
			return _afadf
		}
	}
	if _cebf.Timing != nil {
		if _feeg := _cebf.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _feeg != nil {
			return _feeg
		}
	}
	if _cebf.Hf != nil {
		if _gecb := _cebf.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _gecb != nil {
			return _gecb
		}
	}
	if _cebf.TxStyles != nil {
		if _cafef := _cebf.TxStyles.ValidateWithPath(path + "\u002fT\u0078\u0053\u0074\u0079\u006c\u0065s"); _cafef != nil {
			return _cafef
		}
	}
	if _cebf.ExtLst != nil {
		if _geec := _cebf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _geec != nil {
			return _geec
		}
	}
	return nil
}

type CT_TLTriggerTimeNodeID struct {

	// Value
	ValAttr uint32
}

func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _ccba := &CT_GroupShapeChoice{}; return _ccba }

// ValidateWithPath validates the EG_Background and its children, prefixing error messages with path
func (_eeece *EG_Background) ValidateWithPath(path string) error {
	if _eeece.BgPr != nil {
		if _cgbfeb := _eeece.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _cgbfeb != nil {
			return _cgbfeb
		}
	}
	if _eeece.BgRef != nil {
		if _caba := _eeece.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _caba != nil {
			return _caba
		}
	}
	return nil
}

func (_cfed *CT_NotesTextViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fgcad := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_cfed.CViewPr, _fgcad)
	if _cfed.ExtLst != nil {
		_cbfe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfed.ExtLst, _cbfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ffbdg ST_TransitionEightDirectionType) String() string {
	if _ffbdg.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		return _ffbdg.ST_TransitionSideDirectionType.String()
	}
	if _ffbdg.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		return _ffbdg.ST_TransitionCornerDirectionType.String()
	}
	return ""
}

func NewCT_TransitionStartSoundAction() *CT_TransitionStartSoundAction {
	_aecfc := &CT_TransitionStartSoundAction{}
	_aecfc.Snd = _bc.NewCT_EmbeddedWAVAudioFile()
	return _aecfc
}

func NewCT_TLOleBuildChart() *CT_TLOleBuildChart { _eedge := &CT_TLOleBuildChart{}; return _eedge }

const (
	ST_PlaceholderSizeUnset   ST_PlaceholderSize = 0
	ST_PlaceholderSizeFull    ST_PlaceholderSize = 1
	ST_PlaceholderSizeHalf    ST_PlaceholderSize = 2
	ST_PlaceholderSizeQuarter ST_PlaceholderSize = 3
)

func (_fbbeg *TagLst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbbeg.CT_TagList = *NewCT_TagList()
_ddegf:
	for {
		_gccffc, _fabcf := d.Token()
		if _fabcf != nil {
			return _fabcf
		}
		switch _afadfa := _gccffc.(type) {
		case _b.StartElement:
			switch _afadfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_ddggcg := NewCT_StringTag()
				if _dggab := d.DecodeElement(_ddggcg, &_afadfa); _dggab != nil {
					return _dggab
				}
				_fbbeg.Tag = append(_fbbeg.Tag, _ddggcg)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0061\u0067\u004c\u0073\u0074\u0020\u0025\u0076", _afadfa.Name)
				if _aeeg := d.Skip(); _aeeg != nil {
					return _aeeg
				}
			}
		case _b.EndElement:
			break _ddegf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_EmbeddedFontList() *CT_EmbeddedFontList { _fgae := &CT_EmbeddedFontList{}; return _fgae }

type CT_OptionalBlackTransition struct {

	// Transition Through Black
	ThruBlkAttr *bool
}

func (_bcaed ST_TLBehaviorOverrideType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gadb := _b.Attr{}
	_gadb.Name = name
	switch _bcaed {
	case ST_TLBehaviorOverrideTypeUnset:
		_gadb.Value = ""
	case ST_TLBehaviorOverrideTypeNormal:
		_gadb.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_TLBehaviorOverrideTypeChildStyle:
		_gadb.Value = "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return _gadb, nil
}

func NewCT_Presentation() *CT_Presentation {
	_dccf := &CT_Presentation{}
	_dccf.NotesSz = _bc.NewCT_PositiveSize2D()
	return _dccf
}

// Validate validates the CT_OleObjectEmbed and its children
func (_deafd *CT_OleObjectEmbed) Validate() error {
	return _deafd.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064")
}

type CT_ShowInfoKiosk struct {

	// Restart Show
	RestartAttr *uint32
}

func (_eecef *ST_TLParaBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eecef = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_eecef = 1
	case "\u0070":
		*_eecef = 2
	case "\u0063\u0075\u0073\u0074":
		*_eecef = 3
	case "\u0077\u0068\u006fl\u0065":
		*_eecef = 4
	}
	return nil
}

func ParseStdlibTime(s string) (_d.Time, error) { return _bc.ParseStdlibTime(s) }

func (_gdcfa *CT_SlideMasterTextStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfdab:
	for {
		_fbbbg, _gbbdb := d.Token()
		if _gbbdb != nil {
			return _gbbdb
		}
		switch _aace := _fbbbg.(type) {
		case _b.StartElement:
			switch _aace.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gdcfa.TitleStyle = _bc.NewCT_TextListStyle()
				if _dcdb := d.DecodeElement(_gdcfa.TitleStyle, &_aace); _dcdb != nil {
					return _dcdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}:
				_gdcfa.BodyStyle = _bc.NewCT_TextListStyle()
				if _fgbgc := d.DecodeElement(_gdcfa.BodyStyle, &_aace); _fgbgc != nil {
					return _fgbgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}:
				_gdcfa.OtherStyle = _bc.NewCT_TextListStyle()
				if _bcbc := d.DecodeElement(_gdcfa.OtherStyle, &_aace); _bcbc != nil {
					return _bcbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdcfa.ExtLst = NewCT_ExtensionList()
				if _begec := d.DecodeElement(_gdcfa.ExtLst, &_aace); _begec != nil {
					return _begec
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0054\u0065\u0078\u0074\u0053t\u0079\u006c\u0065\u0073\u0020%\u0076", _aace.Name)
				if _gdcb := d.Skip(); _gdcb != nil {
					return _gdcb
				}
			}
		case _b.EndElement:
			break _bfdab
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesSlide and its children, prefixing error messages with path
func (_fdcdc *CT_NotesSlide) ValidateWithPath(path string) error {
	if _dfgb := _fdcdc.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _dfgb != nil {
		return _dfgb
	}
	if _fdcdc.ClrMapOvr != nil {
		if _dgfa := _fdcdc.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _dgfa != nil {
			return _dgfa
		}
	}
	if _fdcdc.ExtLst != nil {
		if _agcb := _fdcdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agcb != nil {
			return _agcb
		}
	}
	return nil
}

func (_gba *AG_TLBuild) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gba.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gba.SpidAttr)})
	}
	if _gba.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gba.GrpIdAttr)})
	}
	if _gba.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gba.UiExpandAttr))})
	}
	return nil
}

func (_fcgeg *CT_TLTemplateList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fcgeg.Tmpl != nil {
		_ecagf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006d\u0070\u006c"}}
		for _, _edffb := range _fcgeg.Tmpl {
			e.EncodeElement(_edffb, _ecagf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_OutlineViewProperties() *CT_OutlineViewProperties {
	_dagbg := &CT_OutlineViewProperties{}
	_dagbg.CViewPr = NewCT_CommonViewProperties()
	return _dagbg
}

func (_ggdbd ST_TransitionCornerDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ggdbd.String(), start)
}

// ValidateWithPath validates the CT_TLAnimateRotationBehavior and its children, prefixing error messages with path
func (_edbdb *CT_TLAnimateRotationBehavior) ValidateWithPath(path string) error {
	if _adfgd := _edbdb.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _adfgd != nil {
		return _adfgd
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewProperties and its children, prefixing error messages with path
func (_ccae *CT_OutlineViewProperties) ValidateWithPath(path string) error {
	if _eebc := _ccae.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _eebc != nil {
		return _eebc
	}
	if _ccae.SldLst != nil {
		if _bcdfb := _ccae.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _bcdfb != nil {
			return _bcdfb
		}
	}
	if _ccae.ExtLst != nil {
		if _fggg := _ccae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fggg != nil {
			return _fggg
		}
	}
	return nil
}

type CT_TLBuildParagraph struct {

	// Build Types
	BuildAttr ST_TLParaBuildType

	// Build Level
	BldLvlAttr *uint32

	// Animate Background
	AnimBgAttr *bool

	// Auto Update Animation Background
	AutoUpdateAnimBgAttr *bool

	// Reverse
	RevAttr *bool

	// Auto Advance Time
	AdvAutoAttr *ST_TLTime

	// Template effects
	TmplLst      *CT_TLTemplateList
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

const (
	ST_SlideSizeTypeUnset       ST_SlideSizeType = 0
	ST_SlideSizeTypeScreen4x3   ST_SlideSizeType = 1
	ST_SlideSizeTypeLetter      ST_SlideSizeType = 2
	ST_SlideSizeTypeA4          ST_SlideSizeType = 3
	ST_SlideSizeType35mm        ST_SlideSizeType = 4
	ST_SlideSizeTypeOverhead    ST_SlideSizeType = 5
	ST_SlideSizeTypeBanner      ST_SlideSizeType = 6
	ST_SlideSizeTypeCustom      ST_SlideSizeType = 7
	ST_SlideSizeTypeLedger      ST_SlideSizeType = 8
	ST_SlideSizeTypeA3          ST_SlideSizeType = 9
	ST_SlideSizeTypeB4ISO       ST_SlideSizeType = 10
	ST_SlideSizeTypeB5ISO       ST_SlideSizeType = 11
	ST_SlideSizeTypeB4JIS       ST_SlideSizeType = 12
	ST_SlideSizeTypeB5JIS       ST_SlideSizeType = 13
	ST_SlideSizeTypeHagakiCard  ST_SlideSizeType = 14
	ST_SlideSizeTypeScreen16x9  ST_SlideSizeType = 15
	ST_SlideSizeTypeScreen16x10 ST_SlideSizeType = 16
)

func NewCT_OleObjectLink() *CT_OleObjectLink { _ggg := &CT_OleObjectLink{}; return _ggg }

func (_edged ST_TLAnimateColorSpace) String() string {
	switch _edged {
	case 0:
		return ""
	case 1:
		return "\u0072\u0067\u0062"
	case 2:
		return "\u0068\u0073\u006c"
	}
	return ""
}

const (
	ST_TLAnimateBehaviorCalcModeUnset    ST_TLAnimateBehaviorCalcMode = 0
	ST_TLAnimateBehaviorCalcModeDiscrete ST_TLAnimateBehaviorCalcMode = 1
	ST_TLAnimateBehaviorCalcModeLin      ST_TLAnimateBehaviorCalcMode = 2
	ST_TLAnimateBehaviorCalcModeFmla     ST_TLAnimateBehaviorCalcMode = 3
)

func (_deaeb *ST_TLPreviousActionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbefd, _dedda := d.Token()
	if _dedda != nil {
		return _dedda
	}
	if _dcfee, _cdbb := _bbefd.(_b.EndElement); _cdbb && _dcfee.Name == start.Name {
		*_deaeb = 1
		return nil
	}
	if _edebb, _bceb := _bbefd.(_b.CharData); !_bceb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbefd)
	} else {
		switch string(_edebb) {
		case "":
			*_deaeb = 0
		case "\u006e\u006f\u006e\u0065":
			*_deaeb = 1
		case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
			*_deaeb = 2
		}
	}
	_bbefd, _dedda = d.Token()
	if _dedda != nil {
		return _dedda
	}
	if _cccc, _dcfag := _bbefd.(_b.EndElement); _dcfag && _cccc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbefd)
}

func NewCT_TLGraphicalObjectBuild() *CT_TLGraphicalObjectBuild {
	_cecgc := &CT_TLGraphicalObjectBuild{}
	return _cecgc
}

type CT_TLAnimateColorBehavior struct {

	// Color Space
	ClrSpcAttr ST_TLAnimateColorSpace

	// Direction
	DirAttr ST_TLAnimateColorDirection
	CBhvr   *CT_TLCommonBehaviorData

	// By
	By *CT_TLByAnimateColorTransform

	// From
	From *_bc.CT_Color

	// To
	To *_bc.CT_Color
}

func (_fdcdec ST_TLTimeIndefinite) ValidateWithPath(path string) error {
	switch _fdcdec {
	case 0, 1:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdcdec))
	}
	return nil
}

func (_dcde *Presentation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcde.CT_Presentation = *NewCT_Presentation()
	for _, _badcb := range start.Attr {
		if _badcb.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_ccagf, _eedgb := _f.ParseInt(_badcb.Value, 10, 32)
			if _eedgb != nil {
				return _eedgb
			}
			_cfcfd := int32(_ccagf)
			_dcde.FirstSlideNumAttr = &_cfcfd
			continue
		}
		if _badcb.Name.Local == "\u0072\u0074\u006c" {
			_baedg, _gabae := _f.ParseBool(_badcb.Value)
			if _gabae != nil {
				return _gabae
			}
			_dcde.RtlAttr = &_baedg
			continue
		}
		if _badcb.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_aggg, _dcef := _f.ParseBool(_badcb.Value)
			if _dcef != nil {
				return _dcef
			}
			_dcde.CompatModeAttr = &_aggg
			continue
		}
		if _badcb.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_aacgc, _fbcge := _f.ParseBool(_badcb.Value)
			if _fbcge != nil {
				return _fbcge
			}
			_dcde.EmbedTrueTypeFontsAttr = &_aacgc
			continue
		}
		if _badcb.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_ccedb, _cffdf := _f.ParseBool(_badcb.Value)
			if _cffdf != nil {
				return _cffdf
			}
			_dcde.AutoCompressPicturesAttr = &_ccedb
			continue
		}
		if _badcb.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_eecad, _aaacc := _f.ParseBool(_badcb.Value)
			if _aaacc != nil {
				return _aaacc
			}
			_dcde.ShowSpecialPlsOnTitleSldAttr = &_eecad
			continue
		}
		if _badcb.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_dgebf, _aefcf := ParseUnionST_Percentage(_badcb.Value)
			if _aefcf != nil {
				return _aefcf
			}
			_dcde.ServerZoomAttr = &_dgebf
			continue
		}
		if _badcb.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_dcde.ConformanceAttr.UnmarshalXMLAttr(_badcb)
			continue
		}
		if _badcb.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_adeee, _ccbcc := _f.ParseBool(_badcb.Value)
			if _ccbcc != nil {
				return _ccbcc
			}
			_dcde.RemovePersonalInfoOnSaveAttr = &_adeee
			continue
		}
		if _badcb.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_edbda, _bdecc := _f.ParseBool(_badcb.Value)
			if _bdecc != nil {
				return _bdecc
			}
			_dcde.SaveSubsetFontsAttr = &_edbda
			continue
		}
		if _badcb.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_dbaac, _fcadd := _f.ParseUint(_badcb.Value, 10, 32)
			if _fcadd != nil {
				return _fcadd
			}
			_eead := uint32(_dbaac)
			_dcde.BookmarkIdSeedAttr = &_eead
			continue
		}
		if _badcb.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_eceac, _cfgb := _f.ParseBool(_badcb.Value)
			if _cfgb != nil {
				return _cfgb
			}
			_dcde.StrictFirstAndLastCharsAttr = &_eceac
			continue
		}
	}
_faagc:
	for {
		_ecdb, _ddbcff := d.Token()
		if _ddbcff != nil {
			return _ddbcff
		}
		switch _feab := _ecdb.(type) {
		case _b.StartElement:
			switch _feab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_dcde.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _fbdbf := d.DecodeElement(_dcde.SldMasterIdLst, &_feab); _fbdbf != nil {
					return _fbdbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_dcde.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _cdfc := d.DecodeElement(_dcde.NotesMasterIdLst, &_feab); _cdfc != nil {
					return _cdfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_dcde.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _cfebcd := d.DecodeElement(_dcde.HandoutMasterIdLst, &_feab); _cfebcd != nil {
					return _cfebcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_dcde.SldIdLst = NewCT_SlideIdList()
				if _cgacb := d.DecodeElement(_dcde.SldIdLst, &_feab); _cgacb != nil {
					return _cgacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_dcde.SldSz = NewCT_SlideSize()
				if _ceagb := d.DecodeElement(_dcde.SldSz, &_feab); _ceagb != nil {
					return _ceagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _dcgec := d.DecodeElement(_dcde.NotesSz, &_feab); _dcgec != nil {
					return _dcgec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_dcde.SmartTags = NewCT_SmartTags()
				if _gfbdg := d.DecodeElement(_dcde.SmartTags, &_feab); _gfbdg != nil {
					return _gfbdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_dcde.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _eaage := d.DecodeElement(_dcde.EmbeddedFontLst, &_feab); _eaage != nil {
					return _eaage
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_dcde.CustShowLst = NewCT_CustomShowList()
				if _gcgga := d.DecodeElement(_dcde.CustShowLst, &_feab); _gcgga != nil {
					return _gcgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_dcde.PhotoAlbum = NewCT_PhotoAlbum()
				if _bdeae := d.DecodeElement(_dcde.PhotoAlbum, &_feab); _bdeae != nil {
					return _bdeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_dcde.CustDataLst = NewCT_CustomerDataList()
				if _gaaead := d.DecodeElement(_dcde.CustDataLst, &_feab); _gaaead != nil {
					return _gaaead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_dcde.Kinsoku = NewCT_Kinsoku()
				if _bggge := d.DecodeElement(_dcde.Kinsoku, &_feab); _bggge != nil {
					return _bggge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_dcde.DefaultTextStyle = _bc.NewCT_TextListStyle()
				if _face := d.DecodeElement(_dcde.DefaultTextStyle, &_feab); _face != nil {
					return _face
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_dcde.ModifyVerifier = NewCT_ModifyVerifier()
				if _fgbc := d.DecodeElement(_dcde.ModifyVerifier, &_feab); _fgbc != nil {
					return _fgbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcde.ExtLst = NewCT_ExtensionList()
				if _gaccb := d.DecodeElement(_dcde.ExtLst, &_feab); _gaccb != nil {
					return _gaccb
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0072es\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _feab.Name)
				if _effa := d.Skip(); _effa != nil {
					return _effa
				}
			}
		case _b.EndElement:
			break _faagc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideIdListEntry and its children
func (_bdga *CT_SlideIdListEntry) Validate() error {
	return _bdga.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

func (_bbag *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ddcbe := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_bbag.CNvPr, _ddcbe)
	_aecg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_bbag.CNvGraphicFramePr, _aecg)
	_bccdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_bbag.NvPr, _bccdc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cfab *CT_EightDirectionTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bacae := range start.Attr {
		if _bacae.Name.Local == "\u0064\u0069\u0072" {
			_bccc, _gfacd := ParseUnionST_TransitionEightDirectionType(_bacae.Value)
			if _gfacd != nil {
				return _gfacd
			}
			_cfab.DirAttr = &_bccc
			continue
		}
	}
	for {
		_cde, _fabc := d.Token()
		if _fabc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0069g\u0068\u0074\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _fabc)
		}
		if _bef, _gfef := _cde.(_b.EndElement); _gfef && _bef.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bgaeg *CT_SlideIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bgaeg.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bgaeg.RIdAttr)})
	e.EncodeToken(start)
	if _bgaeg.ExtLst != nil {
		_dcgga := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgaeg.ExtLst, _dcgga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLTimeConditionList and its children, prefixing error messages with path
func (_becac *CT_TLTimeConditionList) ValidateWithPath(path string) error {
	for _fgbde, _abbab := range _becac.Cond {
		if _cgdfe := _abbab.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u006f\u006e\u0064\u005b\u0025\u0064\u005d", path, _fgbde)); _cgdfe != nil {
			return _cgdfe
		}
	}
	return nil
}

type CT_TLTimeAnimateValue struct {

	// Time
	TmAttr *ST_TLTimeAnimateValueTime

	// Formula
	FmlaAttr *string

	// Value
	Val *CT_TLAnimVariant
}

func (_dceca *CT_ShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dceca.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_dceca.CNvSpPr = _bc.NewCT_NonVisualDrawingShapeProps()
	_dceca.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_ddeb:
	for {
		_aebge, _eega := d.Token()
		if _eega != nil {
			return _eega
		}
		switch _fffe := _aebge.(type) {
		case _b.StartElement:
			switch _fffe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gafc := d.DecodeElement(_dceca.CNvPr, &_fffe); _gafc != nil {
					return _gafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _cced := d.DecodeElement(_dceca.CNvSpPr, &_fffe); _cced != nil {
					return _cced
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _fcaf := d.DecodeElement(_dceca.NvPr, &_fffe); _fcaf != nil {
					return _fcaf
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _fffe.Name)
				if _fcdg := d.Skip(); _fcdg != nil {
					return _fcdg
				}
			}
		case _b.EndElement:
			break _ddeb
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLIterateIntervalTime struct {

	// Time
	ValAttr ST_TLTime
}

type ST_TLTimeNodeFillType byte

type ST_Direction byte

type CT_CommentAuthorList struct {

	// Comment Author
	CmAuthor []*CT_CommentAuthor
}

func (_adaec *CT_TLOleBuildChart) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdfda := range start.Attr {
		if _bdfda.Name.Local == "\u0062\u006c\u0064" {
			_adaec.BldAttr.UnmarshalXMLAttr(_bdfda)
			continue
		}
		if _bdfda.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_degbd, _gbga := _f.ParseBool(_bdfda.Value)
			if _gbga != nil {
				return _gbga
			}
			_adaec.AnimBgAttr = &_degbd
			continue
		}
		if _bdfda.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bafd, _gaaff := _f.ParseUint(_bdfda.Value, 10, 32)
			if _gaaff != nil {
				return _gaaff
			}
			_eegca := uint32(_bafd)
			_adaec.SpidAttr = &_eegca
			continue
		}
		if _bdfda.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_aefgd, _daeaf := _f.ParseUint(_bdfda.Value, 10, 32)
			if _daeaf != nil {
				return _daeaf
			}
			_bgde := uint32(_aefgd)
			_adaec.GrpIdAttr = &_bgde
			continue
		}
		if _bdfda.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cabf, _ggdgc := _f.ParseBool(_bdfda.Value)
			if _ggdgc != nil {
				return _ggdgc
			}
			_adaec.UiExpandAttr = &_cabf
			continue
		}
	}
	for {
		_dagcd, _ccec := d.Token()
		if _ccec != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u004c\u004f\u006c\u0065\u0042\u0075i\u006c\u0064\u0043\u0068\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _ccec)
		}
		if _egae, _agfdb := _dagcd.(_b.EndElement); _agfdb && _egae.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SplitTransition and its children
func (_dfac *CT_SplitTransition) Validate() error {
	return _dfac.ValidateWithPath("\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_TLTimeAnimateValueList and its children, prefixing error messages with path
func (_eddfb *CT_TLTimeAnimateValueList) ValidateWithPath(path string) error {
	for _cdef, _gaebe := range _eddfb.Tav {
		if _bfgcc := _gaebe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0076\u005b\u0025\u0064\u005d", path, _cdef)); _bfgcc != nil {
			return _bfgcc
		}
	}
	return nil
}

func (_bcab *CT_OleObjectEmbed) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeec := range start.Attr {
		if _aeec.Name.Local == "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065" {
			_bcab.FollowColorSchemeAttr.UnmarshalXMLAttr(_aeec)
			continue
		}
	}
_efdf:
	for {
		_efce, _adcg := d.Token()
		if _adcg != nil {
			return _adcg
		}
		switch _ccbaf := _efce.(type) {
		case _b.StartElement:
			switch _ccbaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcab.ExtLst = NewCT_ExtensionList()
				if _ffdcd := d.DecodeElement(_bcab.ExtLst, &_ccbaf); _ffdcd != nil {
					return _ffdcd
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0045\u006d\u0062\u0065\u0064\u0020\u0025\u0076", _ccbaf.Name)
				if _dbdg := d.Skip(); _dbdg != nil {
					return _dbdg
				}
			}
		case _b.EndElement:
			break _efdf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TLCommandBehavior() *CT_TLCommandBehavior {
	_ebae := &CT_TLCommandBehavior{}
	_ebae.CBhvr = NewCT_TLCommonBehaviorData()
	return _ebae
}

func NewCT_SlideLayoutIdListEntry() *CT_SlideLayoutIdListEntry {
	_gabac := &CT_SlideLayoutIdListEntry{}
	return _gabac
}

func (_edfgf *ST_TLTimeNodeSyncType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edfgf = 0
	case "\u0063a\u006e\u0053\u006c\u0069\u0070":
		*_edfgf = 1
	case "\u006c\u006f\u0063\u006b\u0065\u0064":
		*_edfgf = 2
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjectLink and its children, prefixing error messages with path
func (_ccad *CT_OleObjectLink) ValidateWithPath(path string) error {
	if _ccad.ExtLst != nil {
		if _gdfac := _ccad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdfac != nil {
			return _gdfac
		}
	}
	return nil
}

// Validate validates the CT_WheelTransition and its children
func (_abcd *CT_WheelTransition) Validate() error {
	return _abcd.ValidateWithPath("\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

func (_gcgfg ST_TLCommandType) String() string {
	switch _gcgfg {
	case 0:
		return ""
	case 1:
		return "\u0065\u0076\u0074"
	case 2:
		return "\u0063\u0061\u006c\u006c"
	case 3:
		return "\u0076\u0065\u0072\u0062"
	}
	return ""
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_gcd *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _egcb, _bcdf := range _gcd.Sp {
		if _aabb := _bcdf.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _egcb)); _aabb != nil {
			return _aabb
		}
	}
	for _gebc, _dbgc := range _gcd.GrpSp {
		if _fcab := _dbgc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _gebc)); _fcab != nil {
			return _fcab
		}
	}
	for _fbdc, _gcae := range _gcd.GraphicFrame {
		if _ecga := _gcae.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _fbdc)); _ecga != nil {
			return _ecga
		}
	}
	for _bcfa, _ddcd := range _gcd.CxnSp {
		if _cafe := _ddcd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _bcfa)); _cafe != nil {
			return _cafe
		}
	}
	for _fgaag, _daec := range _gcd.Pic {
		if _afb := _daec.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _fgaag)); _afb != nil {
			return _afb
		}
	}
	for _daaa, _efec := range _gcd.ContentPart {
		if _dgbe := _efec.ValidateWithPath(_fd.Sprintf("\u0025s\u002fC\u006f\u006e\u0074\u0065\u006et\u0050\u0061r\u0074\u005b\u0025\u0064\u005d", path, _daaa)); _dgbe != nil {
			return _dgbe
		}
	}
	return nil
}

type CT_Picture struct {

	// Non-Visual Properties for a Picture
	NvPicPr *CT_PictureNonVisual

	// Picture Fill
	BlipFill *_bc.CT_BlipFillProperties
	SpPr     *_bc.CT_ShapeProperties
	Style    *_bc.CT_ShapeStyle
	ExtLst   *CT_ExtensionListModify
}

type CT_ViewProperties struct {

	// Last View
	LastViewAttr ST_ViewType

	// Show Comments
	ShowCommentsAttr *bool

	// Normal View Properties
	NormalViewPr *CT_NormalViewProperties

	// Slide View Properties
	SlideViewPr *CT_SlideViewProperties

	// Outline View Properties
	OutlineViewPr *CT_OutlineViewProperties

	// Notes Text View Properties
	NotesTextViewPr *CT_NotesTextViewProperties

	// Slide Sorter View Properties
	SorterViewPr *CT_SlideSorterViewProperties

	// Notes View Properties
	NotesViewPr *CT_NotesViewProperties

	// Grid Spacing
	GridSpacing *_bc.CT_PositiveSize2D
	ExtLst      *CT_ExtensionList
}

type CT_SlideLayout struct {

	// Matching Name
	MatchingNameAttr *string

	// Slide Layout Type
	TypeAttr ST_SlideLayoutType

	// Preserve Slide Layout
	PreserveAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Common slide data for slide layouts
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_bc.CT_ColorMappingOverride

	// Slide Transition for a Slide Layout
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide Layout
	Timing *CT_SlideTiming

	// Header/Footer information for a slide layout
	Hf                   *CT_HeaderFooter
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

type CT_Extension struct {

	// Uniform Resource Identifier
	UriAttr string
	Any     []_g.Any
}

// ValidateWithPath validates the CT_HandoutMaster and its children, prefixing error messages with path
func (_ecfae *CT_HandoutMaster) ValidateWithPath(path string) error {
	if _fbfac := _ecfae.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _fbfac != nil {
		return _fbfac
	}
	if _dbfe := _ecfae.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _dbfe != nil {
		return _dbfe
	}
	if _ecfae.Hf != nil {
		if _bfff := _ecfae.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _bfff != nil {
			return _bfff
		}
	}
	if _ecfae.ExtLst != nil {
		if _adea := _ecfae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adea != nil {
			return _adea
		}
	}
	return nil
}

func (_fgeaf ST_TLTriggerEvent) Validate() error { return _fgeaf.ValidateWithPath("") }

// ValidateWithPath validates the CT_SlideTiming and its children, prefixing error messages with path
func (_gcafc *CT_SlideTiming) ValidateWithPath(path string) error {
	if _gcafc.TnLst != nil {
		if _aeee := _gcafc.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _aeee != nil {
			return _aeee
		}
	}
	if _gcafc.BldLst != nil {
		if _bbbc := _gcafc.BldLst.ValidateWithPath(path + "\u002fB\u006c\u0064\u004c\u0073\u0074"); _bbbc != nil {
			return _bbbc
		}
	}
	if _gcafc.ExtLst != nil {
		if _bddbd := _gcafc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bddbd != nil {
			return _bddbd
		}
	}
	return nil
}

func (_ccfad ST_TLOleChartBuildType) String() string {
	switch _ccfad {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 5:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

// ValidateWithPath validates the TagLst and its children, prefixing error messages with path
func (_gbfgc *TagLst) ValidateWithPath(path string) error {
	if _bffgaf := _gbfgc.CT_TagList.ValidateWithPath(path); _bffgaf != nil {
		return _bffgaf
	}
	return nil
}

// Validate validates the CT_TLCommandBehavior and its children
func (_bdagd *CT_TLCommandBehavior) Validate() error {
	return _bdagd.ValidateWithPath("C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072")
}

func (_bbda *CT_GroupShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bfae := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_bbda.CNvPr, _bfae)
	_dcad := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_bbda.CNvGrpSpPr, _dcad)
	_aaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_bbda.NvPr, _aaf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SideDirectionTransition and its children
func (_ccfcb *CT_SideDirectionTransition) Validate() error {
	return _ccfcb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}

func (_ac *AG_Ole) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aca := range start.Attr {
		if _aca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _aca.Name.Local == "\u0069\u0064" {
			_gec, _cg := _aca.Value, error(nil)
			if _cg != nil {
				return _cg
			}
			_ac.IdAttr = &_gec
			continue
		}
		if _aca.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fa, _gb := _aca.Value, error(nil)
			if _gb != nil {
				return _gb
			}
			_ac.SpidAttr = &_fa
			continue
		}
		if _aca.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fag, _eg := _aca.Value, error(nil)
			if _eg != nil {
				return _eg
			}
			_ac.NameAttr = &_fag
			continue
		}
		if _aca.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_acad, _fc := _f.ParseBool(_aca.Value)
			if _fc != nil {
				return _fc
			}
			_ac.ShowAsIconAttr = &_acad
			continue
		}
		if _aca.Name.Local == "\u0069\u006d\u0067\u0057" {
			_gaea, _gbe := _f.ParseInt(_aca.Value, 10, 32)
			if _gbe != nil {
				return _gbe
			}
			_bf := int32(_gaea)
			_ac.ImgWAttr = &_bf
			continue
		}
		if _aca.Name.Local == "\u0069\u006d\u0067\u0048" {
			_geg, _cfg := _f.ParseInt(_aca.Value, 10, 32)
			if _cfg != nil {
				return _cfg
			}
			_dd := int32(_geg)
			_ac.ImgHAttr = &_dd
			continue
		}
	}
	for {
		_df, _ce := d.Token()
		if _ce != nil {
			return _fd.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041G\u005f\u004fl\u0065\u003a\u0020\u0025\u0073", _ce)
		}
		if _cgc, _db := _df.(_b.EndElement); _db && _cgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_baedc ST_Direction) ValidateWithPath(path string) error {
	switch _baedc {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baedc))
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantIntegerVal and its children, prefixing error messages with path
func (_cfgdg *CT_TLAnimVariantIntegerVal) ValidateWithPath(path string) error { return nil }

func (_c *AG_ChildSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _c.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_c.ShowMasterSpAttr))})
	}
	if _c.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_c.ShowMasterPhAnimAttr))})
	}
	return nil
}

type CT_TLIterateData struct {

	// Iterate Type
	TypeAttr ST_IterateType

	// Backwards
	BackwardsAttr *bool

	// Time Absolute
	TmAbs *CT_TLIterateIntervalTime

	// Time Percentage
	TmPct *CT_TLIterateIntervalPercentage
}

func NewNotes() *Notes { _ddffg := &Notes{}; _ddffg.CT_NotesSlide = *NewCT_NotesSlide(); return _ddffg }

func NewCT_TLPoint() *CT_TLPoint { _gabda := &CT_TLPoint{}; return _gabda }

func (_bce *CT_ApplicationNonVisualDrawingProps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bce.IsPhotoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069s\u0050\u0068\u006f\u0074\u006f"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bce.IsPhotoAttr))})
	}
	if _bce.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bce.UserDrawnAttr))})
	}
	e.EncodeToken(start)
	if _bce.Ph != nil {
		_ccb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0068"}}
		e.EncodeElement(_bce.Ph, _ccb)
	}
	if _bce.AudioCd != nil {
		_ccg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_bce.AudioCd, _ccg)
	}
	if _bce.WavAudioFile != nil {
		_gaeac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bce.WavAudioFile, _gaeac)
	}
	if _bce.AudioFile != nil {
		_dg := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bce.AudioFile, _dg)
	}
	if _bce.VideoFile != nil {
		_gbde := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bce.VideoFile, _gbde)
	}
	if _bce.QuickTimeFile != nil {
		_fgf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bce.QuickTimeFile, _fgf)
	}
	if _bce.CustDataLst != nil {
		_gfc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_bce.CustDataLst, _gfc)
	}
	if _bce.ExtLst != nil {
		_deb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bce.ExtLst, _deb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ShowProperties struct {

	// Loop Slide Show
	LoopAttr *bool

	// Show Narration in Slide Show
	ShowNarrationAttr *bool

	// Show Animation in Slide Show
	ShowAnimationAttr *bool

	// Use Timings in Slide Show
	UseTimingsAttr *bool

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId

	// Pen Color for Slide Show
	PenClr *_bc.CT_Color
	ExtLst *CT_ExtensionList
}

func (_adddb *CT_TransitionSoundAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _adddb.StSnd != nil {
		_fdec := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0053\u006e\u0064"}}
		e.EncodeElement(_adddb.StSnd, _fdec)
	}
	if _adddb.EndSnd != nil {
		_edcgb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u006e\u0064\u0053\u006e\u0064"}}
		e.EncodeElement(_adddb.EndSnd, _edcgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the AG_Ole and its children, prefixing error messages with path
func (_gc *AG_Ole) ValidateWithPath(path string) error {
	if _gc.ImgWAttr != nil {
		if *_gc.ImgWAttr < 0 {
			return _fd.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gc.ImgWAttr)
		}
	}
	if _gc.ImgHAttr != nil {
		if *_gc.ImgHAttr < 0 {
			return _fd.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gc.ImgHAttr)
		}
	}
	return nil
}

type ST_TLTriggerRuntimeNode byte

func (_gcdf *ST_TLTimeNodeSyncType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afagg, _acgeg := d.Token()
	if _acgeg != nil {
		return _acgeg
	}
	if _cefed, _gbeded := _afagg.(_b.EndElement); _gbeded && _cefed.Name == start.Name {
		*_gcdf = 1
		return nil
	}
	if _dgccff, _gefee := _afagg.(_b.CharData); !_gefee {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _afagg)
	} else {
		switch string(_dgccff) {
		case "":
			*_gcdf = 0
		case "\u0063a\u006e\u0053\u006c\u0069\u0070":
			*_gcdf = 1
		case "\u006c\u006f\u0063\u006b\u0065\u0064":
			*_gcdf = 2
		}
	}
	_afagg, _acgeg = d.Token()
	if _acgeg != nil {
		return _acgeg
	}
	if _bdbf, _agefa := _afagg.(_b.EndElement); _agefa && _bdbf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _afagg)
}

func NewCT_TLTimeCondition() *CT_TLTimeCondition { _aacda := &CT_TLTimeCondition{}; return _aacda }

// Validate validates the AG_ChildSlide and its children
func (_ffb *AG_ChildSlide) Validate() error {
	return _ffb.ValidateWithPath("\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

func (_beffg *ST_TLTriggerEvent) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fecda, _dfaec := d.Token()
	if _dfaec != nil {
		return _dfaec
	}
	if _gagb, _aeedf := _fecda.(_b.EndElement); _aeedf && _gagb.Name == start.Name {
		*_beffg = 1
		return nil
	}
	if _ffdca, _bcggd := _fecda.(_b.CharData); !_bcggd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fecda)
	} else {
		switch string(_ffdca) {
		case "":
			*_beffg = 0
		case "\u006fn\u0042\u0065\u0067\u0069\u006e":
			*_beffg = 1
		case "\u006f\u006e\u0045n\u0064":
			*_beffg = 2
		case "\u0062\u0065\u0067i\u006e":
			*_beffg = 3
		case "\u0065\u006e\u0064":
			*_beffg = 4
		case "\u006fn\u0043\u006c\u0069\u0063\u006b":
			*_beffg = 5
		case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
			*_beffg = 6
		case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
			*_beffg = 7
		case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
			*_beffg = 8
		case "\u006f\u006e\u004e\u0065\u0078\u0074":
			*_beffg = 9
		case "\u006f\u006e\u0050\u0072\u0065\u0076":
			*_beffg = 10
		case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
			*_beffg = 11
		}
	}
	_fecda, _dfaec = d.Token()
	if _dfaec != nil {
		return _dfaec
	}
	if _cage, _adbcf := _fecda.(_b.EndElement); _adbcf && _cage.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fecda)
}

type CT_TLBehaviorAttributeNameList struct {

	// Attribute Name
	AttrName []string
}

type CT_SlideLayoutIdListEntry struct {

	// ID Tag
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

// ValidateWithPath validates the CT_StringTag and its children, prefixing error messages with path
func (_agdg *CT_StringTag) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Slide and its children
func (_ffgdd *CT_Slide) Validate() error {
	return _ffgdd.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065")
}

// ValidateWithPath validates the CT_OleObjectChoice and its children, prefixing error messages with path
func (_aggea *CT_OleObjectChoice) ValidateWithPath(path string) error {
	if _aggea.Embed != nil {
		if _aaba := _aggea.Embed.ValidateWithPath(path + "\u002f\u0045\u006d\u0062\u0065\u0064"); _aaba != nil {
			return _aaba
		}
	}
	if _aggea.Link != nil {
		if _deea := _aggea.Link.ValidateWithPath(path + "\u002f\u004c\u0069n\u006b"); _deea != nil {
			return _deea
		}
	}
	return nil
}

func (_bbce ST_TransitionCornerDirectionType) Validate() error { return _bbce.ValidateWithPath("") }

func NewCT_TimeNodeList() *CT_TimeNodeList { _agce := &CT_TimeNodeList{}; return _agce }

// Validate validates the CT_TLShapeTargetElement and its children
func (_agbgb *CT_TLShapeTargetElement) Validate() error {
	return _agbgb.ValidateWithPath("\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

func (_bgcef *ST_TransitionInOutDirectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_defcb, _edacb := d.Token()
	if _edacb != nil {
		return _edacb
	}
	if _cgdea, _cfedd := _defcb.(_b.EndElement); _cfedd && _cgdea.Name == start.Name {
		*_bgcef = 1
		return nil
	}
	if _fcecg, _gefbef := _defcb.(_b.CharData); !_gefbef {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _defcb)
	} else {
		switch string(_fcecg) {
		case "":
			*_bgcef = 0
		case "\u006f\u0075\u0074":
			*_bgcef = 1
		case "\u0069\u006e":
			*_bgcef = 2
		}
	}
	_defcb, _edacb = d.Token()
	if _edacb != nil {
		return _edacb
	}
	if _fgcgg, _fgdea := _defcb.(_b.EndElement); _fgdea && _fgcgg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _defcb)
}

func (_gagc ST_ViewType) Validate() error { return _gagc.ValidateWithPath("") }

type ST_TLTriggerEvent byte

// ValidateWithPath validates the CT_TLTimeAnimateValue and its children, prefixing error messages with path
func (_dcddfa *CT_TLTimeAnimateValue) ValidateWithPath(path string) error {
	if _dcddfa.TmAttr != nil {
		if _dffg := _dcddfa.TmAttr.ValidateWithPath(path + "\u002fT\u006d\u0041\u0074\u0074\u0072"); _dffg != nil {
			return _dffg
		}
	}
	if _dcddfa.Val != nil {
		if _afdb := _dcddfa.Val.ValidateWithPath(path + "\u002f\u0056\u0061\u006c"); _afdb != nil {
			return _afdb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_ageaf *CT_Rel) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PresentationProperties and its children
func (_afcge *CT_PresentationProperties) Validate() error {
	return _afcge.ValidateWithPath("\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

func (_cafgd *CT_TLByRgbColorTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdde := range start.Attr {
		if _bdde.Name.Local == "\u0072" {
			_gagdd, _dfcda := ParseUnionST_FixedPercentage(_bdde.Value)
			if _dfcda != nil {
				return _dfcda
			}
			_cafgd.RAttr = _gagdd
			continue
		}
		if _bdde.Name.Local == "\u0067" {
			_decd, _cfdbb := ParseUnionST_FixedPercentage(_bdde.Value)
			if _cfdbb != nil {
				return _cfdbb
			}
			_cafgd.GAttr = _decd
			continue
		}
		if _bdde.Name.Local == "\u0062" {
			_ggdfa, _bfdad := ParseUnionST_FixedPercentage(_bdde.Value)
			if _bfdad != nil {
				return _bfdad
			}
			_cafgd.BAttr = _ggdfa
			continue
		}
	}
	for {
		_gddeg, _feda := d.Token()
		if _feda != nil {
			return _fd.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0052gb\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _feda)
		}
		if _cgeda, _aaaee := _gddeg.(_b.EndElement); _aaaee && _cgeda.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ebfd ST_TLBehaviorAdditiveType) ValidateWithPath(path string) error {
	switch _ebfd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebfd))
	}
	return nil
}

// ValidateWithPath validates the CT_TagList and its children, prefixing error messages with path
func (_dbcgg *CT_TagList) ValidateWithPath(path string) error {
	for _gaaee, _cdeff := range _dbcgg.Tag {
		if _gcff := _cdeff.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _gaaee)); _gcff != nil {
			return _gcff
		}
	}
	return nil
}

func (_ececg *CT_PresentationProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gacf:
	for {
		_abdc, _faeab := d.Token()
		if _faeab != nil {
			return _faeab
		}
		switch _fdbgg := _abdc.(type) {
		case _b.StartElement:
			switch _fdbgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_ececg.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _dgdc := d.DecodeElement(_ececg.HtmlPubPr, &_fdbgg); _dgdc != nil {
					return _dgdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_ececg.WebPr = NewCT_WebProperties()
				if _fcad := d.DecodeElement(_ececg.WebPr, &_fdbgg); _fcad != nil {
					return _fcad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_ececg.PrnPr = NewCT_PrintProperties()
				if _gfdgg := d.DecodeElement(_ececg.PrnPr, &_fdbgg); _gfdgg != nil {
					return _gfdgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_ececg.ShowPr = NewCT_ShowProperties()
				if _degb := d.DecodeElement(_ececg.ShowPr, &_fdbgg); _degb != nil {
					return _degb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_ececg.ClrMru = _bc.NewCT_ColorMRU()
				if _eddc := d.DecodeElement(_ececg.ClrMru, &_fdbgg); _eddc != nil {
					return _eddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ececg.ExtLst = NewCT_ExtensionList()
				if _efgbf := d.DecodeElement(_ececg.ExtLst, &_fdbgg); _efgbf != nil {
					return _efgbf
				}
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061t\u0069o\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _fdbgg.Name)
				if _cccfa := d.Skip(); _cccfa != nil {
					return _cccfa
				}
			}
		case _b.EndElement:
			break _gacf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_CornerDirectionTransition() *CT_CornerDirectionTransition {
	_cbee := &CT_CornerDirectionTransition{}
	return _cbee
}

type CT_CommentList struct {

	// Comment
	Cm []*CT_Comment
}

func NewCT_SlideMasterIdList() *CT_SlideMasterIdList { _fage := &CT_SlideMasterIdList{}; return _fage }

// Validate validates the CT_TLIterateIntervalPercentage and its children
func (_afaac *CT_TLIterateIntervalPercentage) Validate() error {
	return _afaac.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_EmbeddedFontList and its children, prefixing error messages with path
func (_ccbe *CT_EmbeddedFontList) ValidateWithPath(path string) error {
	for _adfg, _gdgg := range _ccbe.EmbeddedFont {
		if _fdcg := _gdgg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _adfg)); _fdcg != nil {
			return _fdcg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_InOutTransition and its children, prefixing error messages with path
func (_cfba *CT_InOutTransition) ValidateWithPath(path string) error {
	if _dagc := _cfba.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _dagc != nil {
		return _dagc
	}
	return nil
}

// Validate validates the CT_NormalViewProperties and its children
func (_dbcaf *CT_NormalViewProperties) Validate() error {
	return _dbcaf.ValidateWithPath("\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_Presentation and its children
func (_eadd *CT_Presentation) Validate() error {
	return _eadd.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}

func (_dedeb *HandoutMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dedeb.CT_HandoutMaster = *NewCT_HandoutMaster()
_bacd:
	for {
		_facac, _eacd := d.Token()
		if _eacd != nil {
			return _eacd
		}
		switch _eggadd := _facac.(type) {
		case _b.StartElement:
			switch _eggadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _gcedd := d.DecodeElement(_dedeb.CSld, &_eggadd); _gcedd != nil {
					return _gcedd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _dgbcg := d.DecodeElement(_dedeb.ClrMap, &_eggadd); _dgbcg != nil {
					return _dgbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_dedeb.Hf = NewCT_HeaderFooter()
				if _bcgge := d.DecodeElement(_dedeb.Hf, &_eggadd); _bcgge != nil {
					return _bcgge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dedeb.ExtLst = NewCT_ExtensionListModify()
				if _bacab := d.DecodeElement(_dedeb.ExtLst, &_eggadd); _bacab != nil {
					return _bacab
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072 \u0025\u0076", _eggadd.Name)
				if _daaac := d.Skip(); _daaac != nil {
					return _daaac
				}
			}
		case _b.EndElement:
			break _bacd
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TLByHslColorTransform() *CT_TLByHslColorTransform {
	_ccgbd := &CT_TLByHslColorTransform{}
	return _ccgbd
}

// ValidateWithPath validates the CT_OutlineViewSlideEntry and its children, prefixing error messages with path
func (_dcea *CT_OutlineViewSlideEntry) ValidateWithPath(path string) error { return nil }

func (_begg *CT_TLAnimVariantIntegerVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fedca := range start.Attr {
		if _fedca.Name.Local == "\u0076\u0061\u006c" {
			_ceebe, _bebag := _f.ParseInt(_fedca.Value, 10, 32)
			if _bebag != nil {
				return _bebag
			}
			_begg.ValAttr = int32(_ceebe)
			continue
		}
	}
	for {
		_faefg, _egcf := d.Token()
		if _egcf != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074I\u006e\u0074\u0065\u0067\u0065r\u0056\u0061l\u003a\u0020\u0025\u0073", _egcf)
		}
		if _fcgca, _ceaad := _faefg.(_b.EndElement); _ceaad && _fcgca.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_NotesViewProperties and its children
func (_bgcb *CT_NotesViewProperties) Validate() error {
	return _bgcb.ValidateWithPath("\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

type EG_ShowType struct {

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk
}

func (_dbbg *CT_NotesMasterIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _addgc := range start.Attr {
		if _addgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _addgc.Name.Local == "\u0069\u0064" || _addgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _addgc.Name.Local == "\u0069\u0064" {
			_dbgcff, _fbed := _addgc.Value, error(nil)
			if _fbed != nil {
				return _fbed
			}
			_dbbg.IdAttr = _dbgcff
			continue
		}
	}
_bedf:
	for {
		_agcga, _fbbbf := d.Token()
		if _fbbbf != nil {
			return _fbbbf
		}
		switch _dfabg := _agcga.(type) {
		case _b.StartElement:
			switch _dfabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbbg.ExtLst = NewCT_ExtensionList()
				if _bbdf := d.DecodeElement(_dbbg.ExtLst, &_dfabg); _bbdf != nil {
					return _bbdf
				}
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _dfabg.Name)
				if _ffbcf := d.Skip(); _ffbcf != nil {
					return _ffbcf
				}
			}
		case _b.EndElement:
			break _bedf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateScaleBehavior and its children, prefixing error messages with path
func (_fecc *CT_TLAnimateScaleBehavior) ValidateWithPath(path string) error {
	if _dddg := _fecc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _dddg != nil {
		return _dddg
	}
	if _fecc.By != nil {
		if _bfbd := _fecc.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _bfbd != nil {
			return _bfbd
		}
	}
	if _fecc.From != nil {
		if _bafcg := _fecc.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _bafcg != nil {
			return _bafcg
		}
	}
	if _fecc.To != nil {
		if _ddbgg := _fecc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _ddbgg != nil {
			return _ddbgg
		}
	}
	return nil
}

type ST_TLAnimateBehaviorValueType byte

func (_afebg ST_SplitterBarState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_afebg.String(), start)
}

type ST_TLParaBuildType byte

func (_eggagf ST_TLOleChartBuildType) Validate() error { return _eggagf.ValidateWithPath("") }

func NewCT_CommentAuthorList() *CT_CommentAuthorList { _ba := &CT_CommentAuthorList{}; return _ba }

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_cddf *CT_HeaderFooter) ValidateWithPath(path string) error {
	if _cddf.ExtLst != nil {
		if _ffcf := _cddf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffcf != nil {
			return _ffcf
		}
	}
	return nil
}

func NewCT_Slide() *CT_Slide {
	_fcdb := &CT_Slide{}
	_fcdb.CSld = NewCT_CommonSlideData()
	return _fcdb
}

func (_ddfcg *ST_TLDiagramBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ddfcg = 0
	case "\u0077\u0068\u006fl\u0065":
		*_ddfcg = 1
	case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_ddfcg = 2
	case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
		*_ddfcg = 3
	case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_ddfcg = 4
	case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
		*_ddfcg = 5
	case "\u0063\u0077":
		*_ddfcg = 6
	case "\u0063\u0077\u0049\u006e":
		*_ddfcg = 7
	case "\u0063\u0077\u004fu\u0074":
		*_ddfcg = 8
	case "\u0063\u0063\u0077":
		*_ddfcg = 9
	case "\u0063\u0063\u0077I\u006e":
		*_ddfcg = 10
	case "\u0063\u0063\u0077\u004f\u0075\u0074":
		*_ddfcg = 11
	case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
		*_ddfcg = 12
	case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
		*_ddfcg = 13
	case "\u0075\u0070":
		*_ddfcg = 14
	case "\u0064\u006f\u0077\u006e":
		*_ddfcg = 15
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_ddfcg = 16
	case "\u0063\u0075\u0073\u0074":
		*_ddfcg = 17
	}
	return nil
}

type ST_SlideSizeType byte

func (_bacada ST_TransitionInOutDirectionType) Validate() error { return _bacada.ValidateWithPath("") }

type CT_TLTriggerRuntimeNode struct {

	// Value
	ValAttr ST_TLTriggerRuntimeNode
}

func (_bbg *CT_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bbg.Ext != nil {
		_fbdg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _fdcde := range _bbg.Ext {
			e.EncodeElement(_fdcde, _fbdg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PrintProperties and its children
func (_ggdd *CT_PrintProperties) Validate() error {
	return _ggdd.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

func (_fbgca *ST_TransitionSideDirectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cffgc, _bdcba := d.Token()
	if _bdcba != nil {
		return _bdcba
	}
	if _dgbee, _efafc := _cffgc.(_b.EndElement); _efafc && _dgbee.Name == start.Name {
		*_fbgca = 1
		return nil
	}
	if _dggac, _aggabg := _cffgc.(_b.CharData); !_aggabg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cffgc)
	} else {
		switch string(_dggac) {
		case "":
			*_fbgca = 0
		case "\u006c":
			*_fbgca = 1
		case "\u0075":
			*_fbgca = 2
		case "\u0072":
			*_fbgca = 3
		case "\u0064":
			*_fbgca = 4
		}
	}
	_cffgc, _bdcba = d.Token()
	if _bdcba != nil {
		return _bdcba
	}
	if _cecgf, _gdad := _cffgc.(_b.EndElement); _gdad && _cecgf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cffgc)
}

func (_cacgf *CT_NotesMasterIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edcb:
	for {
		_ceea, _aeeb := d.Token()
		if _aeeb != nil {
			return _aeeb
		}
		switch _bbeg := _ceea.(type) {
		case _b.StartElement:
			switch _bbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_cacgf.NotesMasterId = NewCT_NotesMasterIdListEntry()
				if _bdfgc := d.DecodeElement(_cacgf.NotesMasterId, &_bbeg); _bdfgc != nil {
					return _bdfgc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bbeg.Name)
				if _fbcb := d.Skip(); _fbcb != nil {
					return _fbcb
				}
			}
		case _b.EndElement:
			break _edcb
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TLAnimateMotionPathEditModeUnset    ST_TLAnimateMotionPathEditMode = 0
	ST_TLAnimateMotionPathEditModeRelative ST_TLAnimateMotionPathEditMode = 1
	ST_TLAnimateMotionPathEditModeFixed    ST_TLAnimateMotionPathEditMode = 2
)

// ValidateWithPath validates the SldMaster and its children, prefixing error messages with path
func (_decf *SldMaster) ValidateWithPath(path string) error {
	if _aggbe := _decf.CT_SlideMaster.ValidateWithPath(path); _aggbe != nil {
		return _aggbe
	}
	return nil
}

func NewCT_TLCommonMediaNodeData() *CT_TLCommonMediaNodeData {
	_fcgef := &CT_TLCommonMediaNodeData{}
	_fcgef.CTn = NewCT_TLCommonTimeNodeData()
	_fcgef.TgtEl = NewCT_TLTimeTargetElement()
	return _fcgef
}

// Validate validates the CT_TLIterateData and its children
func (_acdc *CT_TLIterateData) Validate() error {
	return _acdc.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061")
}

func (_faec *CT_GroupShapeChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _faec.Sp != nil {
		_effb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070"}}
		for _, _afaad := range _faec.Sp {
			e.EncodeElement(_afaad, _effb)
		}
	}
	if _faec.GrpSp != nil {
		_bdf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _afcae := range _faec.GrpSp {
			e.EncodeElement(_afcae, _bdf)
		}
	}
	if _faec.GraphicFrame != nil {
		_efcd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _bggb := range _faec.GraphicFrame {
			e.EncodeElement(_bggb, _efcd)
		}
	}
	if _faec.CxnSp != nil {
		_faab := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _fgg := range _faec.CxnSp {
			e.EncodeElement(_fgg, _faab)
		}
	}
	if _faec.Pic != nil {
		_eadgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		for _, _ccd := range _faec.Pic {
			e.EncodeElement(_ccd, _eadgd)
		}
	}
	if _faec.ContentPart != nil {
		_fcgc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		for _, _ceab := range _faec.ContentPart {
			e.EncodeElement(_ceab, _fcgc)
		}
	}
	return nil
}

func (_afd *CT_NotesSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afd.CSld = NewCT_CommonSlideData()
	for _, _caefe := range start.Attr {
		if _caefe.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_cffg, _bfbc := _f.ParseBool(_caefe.Value)
			if _bfbc != nil {
				return _bfbc
			}
			_afd.ShowMasterSpAttr = &_cffg
			continue
		}
		if _caefe.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_caed, _ggaa := _f.ParseBool(_caefe.Value)
			if _ggaa != nil {
				return _ggaa
			}
			_afd.ShowMasterPhAnimAttr = &_caed
			continue
		}
	}
_fgdg:
	for {
		_dfdg, _acfa := d.Token()
		if _acfa != nil {
			return _acfa
		}
		switch _bdadg := _dfdg.(type) {
		case _b.StartElement:
			switch _bdadg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cfde := d.DecodeElement(_afd.CSld, &_bdadg); _cfde != nil {
					return _cfde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_afd.ClrMapOvr = _bc.NewCT_ColorMappingOverride()
				if _afaba := d.DecodeElement(_afd.ClrMapOvr, &_bdadg); _afaba != nil {
					return _afaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afd.ExtLst = NewCT_ExtensionListModify()
				if _dcfb := d.DecodeElement(_afd.ExtLst, &_bdadg); _dcfb != nil {
					return _dcfb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004eo\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _bdadg.Name)
				if _edfg := d.Skip(); _edfg != nil {
					return _edfg
				}
			}
		case _b.EndElement:
			break _fgdg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTemplate and its children, prefixing error messages with path
func (_dafd *CT_TLTemplate) ValidateWithPath(path string) error {
	if _ggef := _dafd.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _ggef != nil {
		return _ggef
	}
	return nil
}

// ValidateWithPath validates the CT_ApplicationNonVisualDrawingProps and its children, prefixing error messages with path
func (_efg *CT_ApplicationNonVisualDrawingProps) ValidateWithPath(path string) error {
	if _efg.Ph != nil {
		if _gbdb := _efg.Ph.ValidateWithPath(path + "\u002f\u0050\u0068"); _gbdb != nil {
			return _gbdb
		}
	}
	if _efg.AudioCd != nil {
		if _gfa := _efg.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _gfa != nil {
			return _gfa
		}
	}
	if _efg.WavAudioFile != nil {
		if _ee := _efg.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _ee != nil {
			return _ee
		}
	}
	if _efg.AudioFile != nil {
		if _afc := _efg.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _afc != nil {
			return _afc
		}
	}
	if _efg.VideoFile != nil {
		if _ecdg := _efg.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _ecdg != nil {
			return _ecdg
		}
	}
	if _efg.QuickTimeFile != nil {
		if _efb := _efg.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _efb != nil {
			return _efb
		}
	}
	if _efg.CustDataLst != nil {
		if _gegb := _efg.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _gegb != nil {
			return _gegb
		}
	}
	if _efg.ExtLst != nil {
		if _gfab := _efg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfab != nil {
			return _gfab
		}
	}
	return nil
}

func (_ceabb *CT_TLBehaviorAttributeNameList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_begddc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}}
	for _, _defgd := range _ceabb.AttrName {
		e.EncodeElement(_defgd, _begddc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TransitionSoundAction struct {

	// Start Sound Action
	StSnd *CT_TransitionStartSoundAction

	// Stop Sound Action
	EndSnd *CT_Empty
}

func (_gcba *ST_PrintWhat) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcba = 0
	case "\u0073\u006c\u0069\u0064\u0065\u0073":
		*_gcba = 1
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
		*_gcba = 2
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
		*_gcba = 3
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
		*_gcba = 4
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
		*_gcba = 5
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
		*_gcba = 6
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
		*_gcba = 7
	case "\u006e\u006f\u0074e\u0073":
		*_gcba = 8
	case "\u006fu\u0074\u006c\u0069\u006e\u0065":
		*_gcba = 9
	}
	return nil
}

type Sld struct{ CT_Slide }

// Validate validates the SldSyncPr and its children
func (_eacce *SldSyncPr) Validate() error {
	return _eacce.ValidateWithPath("\u0053l\u0064\u0053\u0079\u006e\u0063\u0050r")
}

func (_cagbg *CT_TagsData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cagbg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PhotoAlbum and its children, prefixing error messages with path
func (_adbf *CT_PhotoAlbum) ValidateWithPath(path string) error {
	if _dfdgg := _adbf.LayoutAttr.ValidateWithPath(path + "/\u004c\u0061\u0079\u006f\u0075\u0074\u0041\u0074\u0074\u0072"); _dfdgg != nil {
		return _dfdgg
	}
	if _cgceb := _adbf.FrameAttr.ValidateWithPath(path + "\u002f\u0046\u0072\u0061\u006d\u0065\u0041\u0074\u0074\u0072"); _cgceb != nil {
		return _cgceb
	}
	if _adbf.ExtLst != nil {
		if _dade := _adbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dade != nil {
			return _dade
		}
	}
	return nil
}

// Validate validates the CT_TLGraphicalObjectBuild and its children
func (_fcdf *CT_TLGraphicalObjectBuild) Validate() error {
	return _fcdf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd")
}

func NewCT_HandoutMaster() *CT_HandoutMaster {
	_caad := &CT_HandoutMaster{}
	_caad.CSld = NewCT_CommonSlideData()
	_caad.ClrMap = _bc.NewCT_ColorMapping()
	return _caad
}

func (_ceefc ST_TLAnimateMotionPathEditMode) Validate() error { return _ceefc.ValidateWithPath("") }

// ValidateWithPath validates the CT_NotesMasterIdListEntry and its children, prefixing error messages with path
func (_fcbbe *CT_NotesMasterIdListEntry) ValidateWithPath(path string) error {
	if _fcbbe.ExtLst != nil {
		if _dfad := _fcbbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfad != nil {
			return _dfad
		}
	}
	return nil
}

func (_gfda ST_PlaceholderType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cagdg := _b.Attr{}
	_cagdg.Name = name
	switch _gfda {
	case ST_PlaceholderTypeUnset:
		_cagdg.Value = ""
	case ST_PlaceholderTypeTitle:
		_cagdg.Value = "\u0074\u0069\u0074l\u0065"
	case ST_PlaceholderTypeBody:
		_cagdg.Value = "\u0062\u006f\u0064\u0079"
	case ST_PlaceholderTypeCtrTitle:
		_cagdg.Value = "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeSubTitle:
		_cagdg.Value = "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeDt:
		_cagdg.Value = "\u0064\u0074"
	case ST_PlaceholderTypeSldNum:
		_cagdg.Value = "\u0073\u006c\u0064\u004e\u0075\u006d"
	case ST_PlaceholderTypeFtr:
		_cagdg.Value = "\u0066\u0074\u0072"
	case ST_PlaceholderTypeHdr:
		_cagdg.Value = "\u0068\u0064\u0072"
	case ST_PlaceholderTypeObj:
		_cagdg.Value = "\u006f\u0062\u006a"
	case ST_PlaceholderTypeChart:
		_cagdg.Value = "\u0063\u0068\u0061r\u0074"
	case ST_PlaceholderTypeTbl:
		_cagdg.Value = "\u0074\u0062\u006c"
	case ST_PlaceholderTypeClipArt:
		_cagdg.Value = "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case ST_PlaceholderTypeDgm:
		_cagdg.Value = "\u0064\u0067\u006d"
	case ST_PlaceholderTypeMedia:
		_cagdg.Value = "\u006d\u0065\u0064i\u0061"
	case ST_PlaceholderTypeSldImg:
		_cagdg.Value = "\u0073\u006c\u0064\u0049\u006d\u0067"
	case ST_PlaceholderTypePic:
		_cagdg.Value = "\u0070\u0069\u0063"
	}
	return _cagdg, nil
}

type ST_WebScreenSize byte

// Validate validates the CT_Extension and its children
func (_fefc *CT_Extension) Validate() error {
	return _fefc.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

func (_agec *CT_OleObjectLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agec.UpdateAutomaticAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_agec.UpdateAutomaticAttr))})
	}
	e.EncodeToken(start)
	if _agec.ExtLst != nil {
		_abbce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agec.ExtLst, _abbce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_NotesSlide struct {

	// Common slide data for notes slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr            *_bc.CT_ColorMappingOverride
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_aaegg ST_TLBehaviorAccumulateType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aaegg.String(), start)
}

// Validate validates the CT_PictureNonVisual and its children
func (_acea *CT_PictureNonVisual) Validate() error {
	return _acea.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_dbaad ST_TransitionSideDirectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bgcdg := _b.Attr{}
	_bgcdg.Name = name
	switch _dbaad {
	case ST_TransitionSideDirectionTypeUnset:
		_bgcdg.Value = ""
	case ST_TransitionSideDirectionTypeL:
		_bgcdg.Value = "\u006c"
	case ST_TransitionSideDirectionTypeU:
		_bgcdg.Value = "\u0075"
	case ST_TransitionSideDirectionTypeR:
		_bgcdg.Value = "\u0072"
	case ST_TransitionSideDirectionTypeD:
		_bgcdg.Value = "\u0064"
	}
	return _bgcdg, nil
}

// ValidateWithPath validates the CT_TLOleBuildChart and its children, prefixing error messages with path
func (_fcbad *CT_TLOleBuildChart) ValidateWithPath(path string) error {
	if _dbfc := _fcbad.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _dbfc != nil {
		return _dbfc
	}
	return nil
}

func (_bccfc *CT_HtmlPublishProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bccfc.ShowSpeakerNotesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bccfc.ShowSpeakerNotesAttr))})
	}
	if _bccfc.TargetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0072\u0067\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bccfc.TargetAttr)})
	}
	if _bccfc.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bccfc.TitleAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bccfc.IdAttr)})
	e.EncodeToken(start)
	if _bccfc.SldAll != nil {
		_eefae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_bccfc.SldAll, _eefae)
	}
	if _bccfc.SldRg != nil {
		_bgae := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_bccfc.SldRg, _bgae)
	}
	if _bccfc.CustShow != nil {
		_gffbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_bccfc.CustShow, _gffbc)
	}
	if _bccfc.ExtLst != nil {
		_cbcd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bccfc.ExtLst, _cbcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_adga *CT_OptionalBlackTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adga.ThruBlkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u0072\u0075\u0042\u006c\u006b"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_adga.ThruBlkAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewViewPr() *ViewPr {
	_fbag := &ViewPr{}
	_fbag.CT_ViewProperties = *NewCT_ViewProperties()
	return _fbag
}

func (_bcdac *CT_Rel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bcdac.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dggfb *CT_TLAnimVariantFloatVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _dggfb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_EmbeddedFontDataId() *CT_EmbeddedFontDataId { _faf := &CT_EmbeddedFontDataId{}; return _faf }

// Validate validates the CT_TLAnimVariantFloatVal and its children
func (_gdfd *CT_TLAnimVariantFloatVal) Validate() error {
	return _gdfd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c")
}

func (_ebda *CT_TLAnimateScaleBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebda.ZoomContentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ebda.ZoomContentsAttr))})
	}
	e.EncodeToken(start)
	_cebdc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ebda.CBhvr, _cebdc)
	if _ebda.By != nil {
		_efcea := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_ebda.By, _efcea)
	}
	if _ebda.From != nil {
		_ebcbe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_ebda.From, _ebcbe)
	}
	if _ebda.To != nil {
		_ebgc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_ebda.To, _ebgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gaff ST_PlaceholderType) String() string {
	switch _gaff {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0062\u006f\u0064\u0079"
	case 3:
		return "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case 4:
		return "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case 5:
		return "\u0064\u0074"
	case 6:
		return "\u0073\u006c\u0064\u004e\u0075\u006d"
	case 7:
		return "\u0066\u0074\u0072"
	case 8:
		return "\u0068\u0064\u0072"
	case 9:
		return "\u006f\u0062\u006a"
	case 10:
		return "\u0063\u0068\u0061r\u0074"
	case 11:
		return "\u0074\u0062\u006c"
	case 12:
		return "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case 13:
		return "\u0064\u0067\u006d"
	case 14:
		return "\u006d\u0065\u0064i\u0061"
	case 15:
		return "\u0073\u006c\u0064\u0049\u006d\u0067"
	case 16:
		return "\u0070\u0069\u0063"
	}
	return ""
}

func (_fegb ST_TLTimeNodeRestartType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fegb.String(), start)
}

func (_bba *CT_CommentList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bba.Cm != nil {
		_dee := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006d"}}
		for _, _bbb := range _bba.Cm {
			e.EncodeElement(_bbb, _dee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ggddf *CmLst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggddf.CT_CommentList = *NewCT_CommentList()
_gbabc:
	for {
		_cddg, _ebac := d.Token()
		if _ebac != nil {
			return _ebac
		}
		switch _gfefg := _cddg.(type) {
		case _b.StartElement:
			switch _gfefg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_gbded := NewCT_Comment()
				if _bbcga := d.DecodeElement(_gbded, &_gfefg); _bbcga != nil {
					return _bbcga
				}
				_ggddf.Cm = append(_ggddf.Cm, _gbded)
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u006d\u004cs\u0074 \u0025\u0076", _gfefg.Name)
				if _ebbd := d.Skip(); _ebbd != nil {
					return _ebbd
				}
			}
		case _b.EndElement:
			break _gbabc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayout and its children, prefixing error messages with path
func (_fgee *CT_SlideLayout) ValidateWithPath(path string) error {
	if _abfcb := _fgee.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _abfcb != nil {
		return _abfcb
	}
	if _bffga := _fgee.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _bffga != nil {
		return _bffga
	}
	if _fgee.ClrMapOvr != nil {
		if _egbg := _fgee.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _egbg != nil {
			return _egbg
		}
	}
	if _fgee.Transition != nil {
		if _bffdb := _fgee.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _bffdb != nil {
			return _bffdb
		}
	}
	if _fgee.Timing != nil {
		if _ebdf := _fgee.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _ebdf != nil {
			return _ebdf
		}
	}
	if _fgee.Hf != nil {
		if _bbcaf := _fgee.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _bbcaf != nil {
			return _bbcaf
		}
	}
	if _fgee.ExtLst != nil {
		if _fgde := _fgee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgde != nil {
			return _fgde
		}
	}
	return nil
}

func NewCT_TLAnimVariantBooleanVal() *CT_TLAnimVariantBooleanVal {
	_afea := &CT_TLAnimVariantBooleanVal{}
	return _afea
}

func (_aegg *CT_ControlList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fegc:
	for {
		_aba, _fadd := d.Token()
		if _fadd != nil {
			return _fadd
		}
		switch _gbcc := _aba.(type) {
		case _b.StartElement:
			switch _gbcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_fgcg := NewCT_Control()
				if _addg := d.DecodeElement(_fgcg, &_gbcc); _addg != nil {
					return _addg
				}
				_aegg.Control = append(_aegg.Control, _fgcg)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006cL\u0069s\u0074\u0020\u0025\u0076", _gbcc.Name)
				if _dcg := d.Skip(); _dcg != nil {
					return _dcg
				}
			}
		case _b.EndElement:
			break _fegc
		case _b.CharData:
		}
	}
	return nil
}

func _fecgg(_agba bool) uint8 {
	if _agba {
		return 1
	}
	return 0
}

func (_edddg *CT_TLPoint) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgfa := range start.Attr {
		if _cgfa.Name.Local == "\u0078" {
			_ceffg, _gdcfdb := ParseUnionST_Percentage(_cgfa.Value)
			if _gdcfdb != nil {
				return _gdcfdb
			}
			_edddg.XAttr = _ceffg
			continue
		}
		if _cgfa.Name.Local == "\u0079" {
			_feggf, _bfdaaa := ParseUnionST_Percentage(_cgfa.Value)
			if _bfdaaa != nil {
				return _bfdaaa
			}
			_edddg.YAttr = _feggf
			continue
		}
	}
	for {
		_bebb, _eedc := d.Token()
		if _eedc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074\u003a\u0020%\u0073", _eedc)
		}
		if _dbaba, _efbad := _bebb.(_b.EndElement); _efbad && _dbaba.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cggb *CT_SlideTransitionChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cggb.Blinds != nil {
		_fccdg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u006e\u0064\u0073"}}
		e.EncodeElement(_cggb.Blinds, _fccdg)
	}
	if _cggb.Checker != nil {
		_ceee := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0068\u0065\u0063\u006b\u0065r"}}
		e.EncodeElement(_cggb.Checker, _ceee)
	}
	if _cggb.Circle != nil {
		_dbdbf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0069\u0072\u0063\u006c\u0065"}}
		e.EncodeElement(_cggb.Circle, _dbdbf)
	}
	if _cggb.Dissolve != nil {
		_bggfg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}}
		e.EncodeElement(_cggb.Dissolve, _bggfg)
	}
	if _cggb.Comb != nil {
		_ddbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006d\u0062"}}
		e.EncodeElement(_cggb.Comb, _ddbg)
	}
	if _cggb.Cover != nil {
		_gaeag := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_cggb.Cover, _gaeag)
	}
	if _cggb.Cut != nil {
		_fgdbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063u\u0074"}}
		e.EncodeElement(_cggb.Cut, _fgdbg)
	}
	if _cggb.Diamond != nil {
		_adef := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0064\u0069\u0061\u006d\u006f\u006ed"}}
		e.EncodeElement(_cggb.Diamond, _adef)
	}
	if _cggb.Fade != nil {
		_ffagg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0061\u0064\u0065"}}
		e.EncodeElement(_cggb.Fade, _ffagg)
	}
	if _cggb.Newsflash != nil {
		_aedd := _b.StartElement{Name: _b.Name{Local: "p\u003a\u006e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"}}
		e.EncodeElement(_cggb.Newsflash, _aedd)
	}
	if _cggb.Plus != nil {
		_abecg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u006c\u0075\u0073"}}
		e.EncodeElement(_cggb.Plus, _abecg)
	}
	if _cggb.Pull != nil {
		_faee := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0075\u006c\u006c"}}
		e.EncodeElement(_cggb.Pull, _faee)
	}
	if _cggb.Push != nil {
		_aadf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0075\u0073\u0068"}}
		e.EncodeElement(_cggb.Push, _aadf)
	}
	if _cggb.Random != nil {
		_gbbce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0061\u006e\u0064\u006f\u006d"}}
		e.EncodeElement(_cggb.Random, _gbbce)
	}
	if _cggb.RandomBar != nil {
		_fcdac := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0072\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"}}
		e.EncodeElement(_cggb.RandomBar, _fcdac)
	}
	if _cggb.Split != nil {
		_accb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0070\u006c\u0069\u0074"}}
		e.EncodeElement(_cggb.Split, _accb)
	}
	if _cggb.Strips != nil {
		_ddbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0069\u0070\u0073"}}
		e.EncodeElement(_cggb.Strips, _ddbd)
	}
	if _cggb.Wedge != nil {
		_acfg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0077\u0065\u0064\u0067\u0065"}}
		e.EncodeElement(_cggb.Wedge, _acfg)
	}
	if _cggb.Wheel != nil {
		_gbcf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0077\u0068\u0065\u0065\u006c"}}
		e.EncodeElement(_cggb.Wheel, _gbcf)
	}
	if _cggb.Wipe != nil {
		_ddebca := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0077\u0069\u0070\u0065"}}
		e.EncodeElement(_cggb.Wipe, _ddebca)
	}
	if _cggb.Zoom != nil {
		_bgff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u007a\u006f\u006f\u006d"}}
		e.EncodeElement(_cggb.Zoom, _bgff)
	}
	return nil
}

const (
	ST_SlideLayoutTypeUnset                   ST_SlideLayoutType = 0
	ST_SlideLayoutTypeTitle                   ST_SlideLayoutType = 1
	ST_SlideLayoutTypeTx                      ST_SlideLayoutType = 2
	ST_SlideLayoutTypeTwoColTx                ST_SlideLayoutType = 3
	ST_SlideLayoutTypeTbl                     ST_SlideLayoutType = 4
	ST_SlideLayoutTypeTxAndChart              ST_SlideLayoutType = 5
	ST_SlideLayoutTypeChartAndTx              ST_SlideLayoutType = 6
	ST_SlideLayoutTypeDgm                     ST_SlideLayoutType = 7
	ST_SlideLayoutTypeChart                   ST_SlideLayoutType = 8
	ST_SlideLayoutTypeTxAndClipArt            ST_SlideLayoutType = 9
	ST_SlideLayoutTypeClipArtAndTx            ST_SlideLayoutType = 10
	ST_SlideLayoutTypeTitleOnly               ST_SlideLayoutType = 11
	ST_SlideLayoutTypeBlank                   ST_SlideLayoutType = 12
	ST_SlideLayoutTypeTxAndObj                ST_SlideLayoutType = 13
	ST_SlideLayoutTypeObjAndTx                ST_SlideLayoutType = 14
	ST_SlideLayoutTypeObjOnly                 ST_SlideLayoutType = 15
	ST_SlideLayoutTypeObj                     ST_SlideLayoutType = 16
	ST_SlideLayoutTypeTxAndMedia              ST_SlideLayoutType = 17
	ST_SlideLayoutTypeMediaAndTx              ST_SlideLayoutType = 18
	ST_SlideLayoutTypeObjOverTx               ST_SlideLayoutType = 19
	ST_SlideLayoutTypeTxOverObj               ST_SlideLayoutType = 20
	ST_SlideLayoutTypeTxAndTwoObj             ST_SlideLayoutType = 21
	ST_SlideLayoutTypeTwoObjAndTx             ST_SlideLayoutType = 22
	ST_SlideLayoutTypeTwoObjOverTx            ST_SlideLayoutType = 23
	ST_SlideLayoutTypeFourObj                 ST_SlideLayoutType = 24
	ST_SlideLayoutTypeVertTx                  ST_SlideLayoutType = 25
	ST_SlideLayoutTypeClipArtAndVertTx        ST_SlideLayoutType = 26
	ST_SlideLayoutTypeVertTitleAndTx          ST_SlideLayoutType = 27
	ST_SlideLayoutTypeVertTitleAndTxOverChart ST_SlideLayoutType = 28
	ST_SlideLayoutTypeTwoObj                  ST_SlideLayoutType = 29
	ST_SlideLayoutTypeObjAndTwoObj            ST_SlideLayoutType = 30
	ST_SlideLayoutTypeTwoObjAndObj            ST_SlideLayoutType = 31
	ST_SlideLayoutTypeCust                    ST_SlideLayoutType = 32
	ST_SlideLayoutTypeSecHead                 ST_SlideLayoutType = 33
	ST_SlideLayoutTypeTwoTxTwoObj             ST_SlideLayoutType = 34
	ST_SlideLayoutTypeObjTx                   ST_SlideLayoutType = 35
	ST_SlideLayoutTypePicTx                   ST_SlideLayoutType = 36
)

// Validate validates the CT_TLTriggerRuntimeNode and its children
func (_efbbc *CT_TLTriggerRuntimeNode) Validate() error {
	return _efbbc.ValidateWithPath("\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065")
}

// Validate validates the CT_PhotoAlbum and its children
func (_ccfbb *CT_PhotoAlbum) Validate() error {
	return _ccfbb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d")
}

func (_ebddd *CT_ShowProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebddd.LoopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ebddd.LoopAttr))})
	}
	if _ebddd.ShowNarrationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ebddd.ShowNarrationAttr))})
	}
	if _ebddd.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ebddd.ShowAnimationAttr))})
	}
	if _ebddd.UseTimingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ebddd.UseTimingsAttr))})
	}
	e.EncodeToken(start)
	if _ebddd.Present != nil {
		_ffgb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_ebddd.Present, _ffgb)
	}
	if _ebddd.Browse != nil {
		_dbcg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_ebddd.Browse, _dbcg)
	}
	if _ebddd.Kiosk != nil {
		_ceffa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_ebddd.Kiosk, _ceffa)
	}
	if _ebddd.SldAll != nil {
		_bcga := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_ebddd.SldAll, _bcga)
	}
	if _ebddd.SldRg != nil {
		_fdcca := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_ebddd.SldRg, _fdcca)
	}
	if _ebddd.CustShow != nil {
		_bcdag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_ebddd.CustShow, _bcdag)
	}
	if _ebddd.PenClr != nil {
		_egeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0065\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_ebddd.PenClr, _egeg)
	}
	if _ebddd.ExtLst != nil {
		_gbgb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebddd.ExtLst, _gbgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fgddd *ST_Direction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fgddd = 0
	case "\u0068\u006f\u0072\u007a":
		*_fgddd = 1
	case "\u0076\u0065\u0072\u0074":
		*_fgddd = 2
	}
	return nil
}

func NewCT_CustomerDataList() *CT_CustomerDataList { _eca := &CT_CustomerDataList{}; return _eca }

// Validate validates the HandoutMaster and its children
func (_adbb *HandoutMaster) Validate() error {
	return _adbb.ValidateWithPath("\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}

func (_bdadf *ST_SlideSizeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdadf = 0
	case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
		*_bdadf = 1
	case "\u006c\u0065\u0074\u0074\u0065\u0072":
		*_bdadf = 2
	case "\u0041\u0034":
		*_bdadf = 3
	case "\u0033\u0035\u006d\u006d":
		*_bdadf = 4
	case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
		*_bdadf = 5
	case "\u0062\u0061\u006e\u006e\u0065\u0072":
		*_bdadf = 6
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_bdadf = 7
	case "\u006c\u0065\u0064\u0067\u0065\u0072":
		*_bdadf = 8
	case "\u0041\u0033":
		*_bdadf = 9
	case "\u0042\u0034\u0049S\u004f":
		*_bdadf = 10
	case "\u0042\u0035\u0049S\u004f":
		*_bdadf = 11
	case "\u0042\u0034\u004aI\u0053":
		*_bdadf = 12
	case "\u0042\u0035\u004aI\u0053":
		*_bdadf = 13
	case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
		*_bdadf = 14
	case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
		*_bdadf = 15
	case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
		*_bdadf = 16
	}
	return nil
}

type CT_TLByAnimateColorTransform struct {

	// RGB
	Rgb *CT_TLByRgbColorTransform

	// HSL
	Hsl *CT_TLByHslColorTransform
}

func (_fcfgd *CT_SlideIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcfgd.IdAttr = 256
	for _, _deafe := range start.Attr {
		if _deafe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _deafe.Name.Local == "\u0069\u0064" || _deafe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _deafe.Name.Local == "\u0069\u0064" {
			_gbed, _abae := _deafe.Value, error(nil)
			if _abae != nil {
				return _abae
			}
			_fcfgd.RIdAttr = _gbed
			continue
		}
		if _deafe.Name.Local == "\u0069\u0064" {
			_aeff, _acdb := _f.ParseUint(_deafe.Value, 10, 32)
			if _acdb != nil {
				return _acdb
			}
			_fcfgd.IdAttr = uint32(_aeff)
			continue
		}
	}
_agaad:
	for {
		_fgfe, _aabef := d.Token()
		if _aabef != nil {
			return _aabef
		}
		switch _febae := _fgfe.(type) {
		case _b.StartElement:
			switch _febae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcfgd.ExtLst = NewCT_ExtensionList()
				if _eebcdf := d.DecodeElement(_fcfgd.ExtLst, &_febae); _eebcdf != nil {
					return _eebcdf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064Li\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _febae.Name)
				if _cfaa := d.Skip(); _cfaa != nil {
					return _cfaa
				}
			}
		case _b.EndElement:
			break _agaad
		case _b.CharData:
		}
	}
	return nil
}

func (_fegca *CT_OleObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fegca.Choice = NewCT_OleObjectChoice()
	for _, _fbffc := range start.Attr {
		if _fbffc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbffc.Name.Local == "\u0069\u0064" {
			_eefd, _eeecd := _fbffc.Value, error(nil)
			if _eeecd != nil {
				return _eeecd
			}
			_fegca.IdAttr = &_eefd
			continue
		}
		if _fbffc.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fbbg, _dafg := _fbffc.Value, error(nil)
			if _dafg != nil {
				return _dafg
			}
			_fegca.SpidAttr = &_fbbg
			continue
		}
		if _fbffc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_addc, _afaf := _fbffc.Value, error(nil)
			if _afaf != nil {
				return _afaf
			}
			_fegca.NameAttr = &_addc
			continue
		}
		if _fbffc.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_efab, _baba := _f.ParseBool(_fbffc.Value)
			if _baba != nil {
				return _baba
			}
			_fegca.ShowAsIconAttr = &_efab
			continue
		}
		if _fbffc.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_cfbec, _deecf := _fbffc.Value, error(nil)
			if _deecf != nil {
				return _deecf
			}
			_fegca.ProgIdAttr = &_cfbec
			continue
		}
		if _fbffc.Name.Local == "\u0069\u006d\u0067\u0057" {
			_gbeg, _gdbg := _f.ParseInt(_fbffc.Value, 10, 32)
			if _gdbg != nil {
				return _gdbg
			}
			_dffe := int32(_gbeg)
			_fegca.ImgWAttr = &_dffe
			continue
		}
		if _fbffc.Name.Local == "\u0069\u006d\u0067\u0048" {
			_baab, _bdfge := _f.ParseInt(_fbffc.Value, 10, 32)
			if _bdfge != nil {
				return _bdfge
			}
			_fdbbge := int32(_baab)
			_fegca.ImgHAttr = &_fdbbge
			continue
		}
	}
_bbfb:
	for {
		_fggc, _bdfb := d.Token()
		if _bdfb != nil {
			return _bdfb
		}
		switch _efaa := _fggc.(type) {
		case _b.StartElement:
			switch _efaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_fegca.Choice = NewCT_OleObjectChoice()
				if _eagb := d.DecodeElement(&_fegca.Choice.Embed, &_efaa); _eagb != nil {
					return _eagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_fegca.Choice = NewCT_OleObjectChoice()
				if _dbbf := d.DecodeElement(&_fegca.Choice.Link, &_efaa); _dbbf != nil {
					return _dbbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fegca.Pic = NewCT_Picture()
				if _decc := d.DecodeElement(_fegca.Pic, &_efaa); _decc != nil {
					return _decc
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _efaa.Name)
				if _adg := d.Skip(); _adg != nil {
					return _adg
				}
			}
		case _b.EndElement:
			break _bbfb
		case _b.CharData:
		}
	}
	return nil
}

func (_efgcc ST_TLBehaviorOverrideType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_efgcc.String(), start)
}

func (_fcaea *ST_TLAnimateMotionPathEditMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fcaea = 0
	case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
		*_fcaea = 1
	case "\u0066\u0069\u0078e\u0064":
		*_fcaea = 2
	}
	return nil
}

const (
	ST_TLBehaviorTransformTypeUnset ST_TLBehaviorTransformType = 0
	ST_TLBehaviorTransformTypePt    ST_TLBehaviorTransformType = 1
	ST_TLBehaviorTransformTypeImg   ST_TLBehaviorTransformType = 2
)

func (_dedba ST_Direction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fcceg := _b.Attr{}
	_fcceg.Name = name
	switch _dedba {
	case ST_DirectionUnset:
		_fcceg.Value = ""
	case ST_DirectionHorz:
		_fcceg.Value = "\u0068\u006f\u0072\u007a"
	case ST_DirectionVert:
		_fcceg.Value = "\u0076\u0065\u0072\u0074"
	}
	return _fcceg, nil
}

// ValidateWithPath validates the CT_SlideMasterIdListEntry and its children, prefixing error messages with path
func (_egdaf *CT_SlideMasterIdListEntry) ValidateWithPath(path string) error {
	if _egdaf.IdAttr != nil {
		if *_egdaf.IdAttr < 2147483648 {
			return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_egdaf.IdAttr)
		}
	}
	if _egdaf.ExtLst != nil {
		if _bafgd := _egdaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bafgd != nil {
			return _bafgd
		}
	}
	return nil
}

type CT_TLAnimateMotionBehavior struct {

	// Origin
	OriginAttr ST_TLAnimateMotionBehaviorOrigin

	// Path
	PathAttr *string

	// Path Edit Mode
	PathEditModeAttr ST_TLAnimateMotionPathEditMode

	// Relative Angle
	RAngAttr *int32

	// Points Types
	PtsTypesAttr *string
	CBhvr        *CT_TLCommonBehaviorData
	By           *CT_TLPoint

	// From
	From *CT_TLPoint
	To   *CT_TLPoint

	// Rotation Center
	RCtr *CT_TLPoint
}

func (_geba ST_TLPreviousActionType) ValidateWithPath(path string) error {
	switch _geba {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_geba))
	}
	return nil
}

func NewCT_Rel() *CT_Rel { _egfc := &CT_Rel{}; return _egfc }

type CT_SlideMaster struct {

	// Preserve Slide Master
	PreserveAttr *bool

	// Common slide data for slide masters
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_bc.CT_ColorMapping

	// List of Slide Layouts
	SldLayoutIdLst *CT_SlideLayoutIdList

	// Slide Transition for a Slide Master
	Transition *CT_SlideTransition

	// Slide Timing Information for Slide Masters
	Timing *CT_SlideTiming

	// Header/Footer information for a slide master
	Hf *CT_HeaderFooter

	// Slide Master Text Styles
	TxStyles *CT_SlideMasterTextStyles
	ExtLst   *CT_ExtensionListModify
}

func (_gbgeb *CT_WebProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eedea := range start.Attr {
		if _eedea.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_adgbc, _cceff := _f.ParseBool(_eedea.Value)
			if _cceff != nil {
				return _cceff
			}
			_gbgeb.ShowAnimationAttr = &_adgbc
			continue
		}
		if _eedea.Name.Local == "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073" {
			_cafcd, _afcce := _f.ParseBool(_eedea.Value)
			if _afcce != nil {
				return _afcce
			}
			_gbgeb.ResizeGraphicsAttr = &_cafcd
			continue
		}
		if _eedea.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_ggabe, _agabb := _f.ParseBool(_eedea.Value)
			if _agabb != nil {
				return _agabb
			}
			_gbgeb.AllowPngAttr = &_ggabe
			continue
		}
		if _eedea.Name.Local == "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl" {
			_fgggb, _dgbdd := _f.ParseBool(_eedea.Value)
			if _dgbdd != nil {
				return _dgbdd
			}
			_gbgeb.RelyOnVmlAttr = &_fgggb
			continue
		}
		if _eedea.Name.Local == "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073" {
			_dbfcc, _fdfg := _f.ParseBool(_eedea.Value)
			if _fdfg != nil {
				return _fdfg
			}
			_gbgeb.OrganizeInFoldersAttr = &_dbfcc
			continue
		}
		if _eedea.Name.Local == "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073" {
			_ddeed, _dfebe := _f.ParseBool(_eedea.Value)
			if _dfebe != nil {
				return _dfebe
			}
			_gbgeb.UseLongFilenamesAttr = &_ddeed
			continue
		}
		if _eedea.Name.Local == "\u0069\u006d\u0067S\u007a" {
			_gbgeb.ImgSzAttr.UnmarshalXMLAttr(_eedea)
			continue
		}
		if _eedea.Name.Local == "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067" {
			_efedfc, _fgagb := _eedea.Value, error(nil)
			if _fgagb != nil {
				return _fgagb
			}
			_gbgeb.EncodingAttr = &_efedfc
			continue
		}
		if _eedea.Name.Local == "\u0063\u006c\u0072" {
			_gbgeb.ClrAttr.UnmarshalXMLAttr(_eedea)
			continue
		}
	}
_cafce:
	for {
		_eggcd, _agcae := d.Token()
		if _agcae != nil {
			return _agcae
		}
		switch _acfdb := _eggcd.(type) {
		case _b.StartElement:
			switch _acfdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbgeb.ExtLst = NewCT_ExtensionList()
				if _dfbe := d.DecodeElement(_gbgeb.ExtLst, &_acfdb); _dfbe != nil {
					return _dfbe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025v", _acfdb.Name)
				if _dddfgc := d.Skip(); _dddfgc != nil {
					return _dddfgc
				}
			}
		case _b.EndElement:
			break _cafce
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewSlideList and its children, prefixing error messages with path
func (_agdf *CT_OutlineViewSlideList) ValidateWithPath(path string) error {
	for _cbaac, _bdaf := range _agdf.Sld {
		if _bfggc := _bdaf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _cbaac)); _bfggc != nil {
			return _bfggc
		}
	}
	return nil
}

func (_adceb *CT_OleObjectChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adceb.Embed != nil {
		_effc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0065\u006d\u0062\u0065\u0064"}}
		e.EncodeElement(_adceb.Embed, _effc)
	}
	if _adceb.Link != nil {
		_abcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006c\u0069\u006e\u006b"}}
		e.EncodeElement(_adceb.Link, _abcc)
	}
	return nil
}

// ValidateWithPath validates the CT_SideDirectionTransition and its children, prefixing error messages with path
func (_fedb *CT_SideDirectionTransition) ValidateWithPath(path string) error {
	if _edeb := _fedb.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _edeb != nil {
		return _edeb
	}
	return nil
}

func (_gdaf *CT_Connector) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdaf.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_gdaf.SpPr = _bc.NewCT_ShapeProperties()
_dcdg:
	for {
		_bbd, _dfa := d.Token()
		if _dfa != nil {
			return _dfa
		}
		switch _adbd := _bbd.(type) {
		case _b.StartElement:
			switch _adbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _eacb := d.DecodeElement(_gdaf.NvCxnSpPr, &_adbd); _eacb != nil {
					return _eacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _cbff := d.DecodeElement(_gdaf.SpPr, &_adbd); _cbff != nil {
					return _cbff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_gdaf.Style = _bc.NewCT_ShapeStyle()
				if _gabb := d.DecodeElement(_gdaf.Style, &_adbd); _gabb != nil {
					return _gabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdaf.ExtLst = NewCT_ExtensionListModify()
				if _baca := d.DecodeElement(_gdaf.ExtLst, &_adbd); _baca != nil {
					return _baca
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _adbd.Name)
				if _cdad := d.Skip(); _cdad != nil {
					return _cdad
				}
			}
		case _b.EndElement:
			break _dcdg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TLTextTargetElement() *CT_TLTextTargetElement {
	_bcaccf := &CT_TLTextTargetElement{}
	return _bcaccf
}

// ValidateWithPath validates the CT_Presentation and its children, prefixing error messages with path
func (_bfe *CT_Presentation) ValidateWithPath(path string) error {
	if _bfe.ServerZoomAttr != nil {
		if _deaea := _bfe.ServerZoomAttr.ValidateWithPath(path + "\u002fS\u0065r\u0076\u0065\u0072\u005a\u006f\u006f\u006d\u0041\u0074\u0074\u0072"); _deaea != nil {
			return _deaea
		}
	}
	if _bfe.BookmarkIdSeedAttr != nil {
		if *_bfe.BookmarkIdSeedAttr < 1 {
			return _fd.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064\u0053\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfe.BookmarkIdSeedAttr)
		}
		if *_bfe.BookmarkIdSeedAttr >= 2147483648 {
			return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064S\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u003648\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfe.BookmarkIdSeedAttr)
		}
	}
	if _gccgf := _bfe.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _gccgf != nil {
		return _gccgf
	}
	if _bfe.SldMasterIdLst != nil {
		if _eeea := _bfe.SldMasterIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _eeea != nil {
			return _eeea
		}
	}
	if _bfe.NotesMasterIdLst != nil {
		if _bebg := _bfe.NotesMasterIdLst.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"); _bebg != nil {
			return _bebg
		}
	}
	if _bfe.HandoutMasterIdLst != nil {
		if _gaeeg := _bfe.HandoutMasterIdLst.ValidateWithPath(path + "\u002f\u0048\u0061\u006edo\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _gaeeg != nil {
			return _gaeeg
		}
	}
	if _bfe.SldIdLst != nil {
		if _abee := _bfe.SldIdLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u0049\u0064\u004c\u0073t"); _abee != nil {
			return _abee
		}
	}
	if _bfe.SldSz != nil {
		if _eeaa := _bfe.SldSz.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0053\u007a"); _eeaa != nil {
			return _eeaa
		}
	}
	if _dacgf := _bfe.NotesSz.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u0053\u007a"); _dacgf != nil {
		return _dacgf
	}
	if _bfe.SmartTags != nil {
		if _feeae := _bfe.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _feeae != nil {
			return _feeae
		}
	}
	if _bfe.EmbeddedFontLst != nil {
		if _ecfbdc := _bfe.EmbeddedFontLst.ValidateWithPath(path + "\u002f\u0045m\u0062\u0065\u0064d\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"); _ecfbdc != nil {
			return _ecfbdc
		}
	}
	if _bfe.CustShowLst != nil {
		if _dbdc := _bfe.CustShowLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"); _dbdc != nil {
			return _dbdc
		}
	}
	if _bfe.PhotoAlbum != nil {
		if _egbd := _bfe.PhotoAlbum.ValidateWithPath(path + "/\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"); _egbd != nil {
			return _egbd
		}
	}
	if _bfe.CustDataLst != nil {
		if _dfgbb := _bfe.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _dfgbb != nil {
			return _dfgbb
		}
	}
	if _bfe.Kinsoku != nil {
		if _ecea := _bfe.Kinsoku.ValidateWithPath(path + "\u002f\u004b\u0069\u006e\u0073\u006f\u006b\u0075"); _ecea != nil {
			return _ecea
		}
	}
	if _bfe.DefaultTextStyle != nil {
		if _dfgf := _bfe.DefaultTextStyle.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0065\u0078\u0074S\u0074\u0079\u006c\u0065"); _dfgf != nil {
			return _dfgf
		}
	}
	if _bfe.ModifyVerifier != nil {
		if _aafd := _bfe.ModifyVerifier.ValidateWithPath(path + "\u002fM\u006fd\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"); _aafd != nil {
			return _aafd
		}
	}
	if _bfe.ExtLst != nil {
		if _efcfb := _bfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efcfb != nil {
			return _efcfb
		}
	}
	return nil
}

func NewEG_SlideListChoice() *EG_SlideListChoice { _ccfeg := &EG_SlideListChoice{}; return _ccfeg }

// ValidateWithPath validates the CT_NormalViewPortion and its children, prefixing error messages with path
func (_fdbbg *CT_NormalViewPortion) ValidateWithPath(path string) error {
	if _cedb := _fdbbg.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _cedb != nil {
		return _cedb
	}
	return nil
}

const (
	ST_TLTimeNodeRestartTypeUnset         ST_TLTimeNodeRestartType = 0
	ST_TLTimeNodeRestartTypeAlways        ST_TLTimeNodeRestartType = 1
	ST_TLTimeNodeRestartTypeWhenNotActive ST_TLTimeNodeRestartType = 2
	ST_TLTimeNodeRestartTypeNever         ST_TLTimeNodeRestartType = 3
)

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_add *CT_Comment) ValidateWithPath(path string) error {
	if _gaae := _add.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _gaae != nil {
		return _gaae
	}
	if _add.ExtLst != nil {
		if _gaef := _add.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gaef != nil {
			return _gaef
		}
	}
	return nil
}

func (_edcc ST_SlideLayoutType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edcc.String(), start)
}

type EG_TopLevelSlide struct {

	// Color Scheme Map
	ClrMap *_bc.CT_ColorMapping
}

func (_ggd *CT_HandoutMasterIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgdfd := range start.Attr {
		if _cgdfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cgdfd.Name.Local == "\u0069\u0064" || _cgdfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cgdfd.Name.Local == "\u0069\u0064" {
			_cbc, _ggeg := _cgdfd.Value, error(nil)
			if _ggeg != nil {
				return _ggeg
			}
			_ggd.IdAttr = _cbc
			continue
		}
	}
_dbgcf:
	for {
		_bfbbg, _gagd := d.Token()
		if _gagd != nil {
			return _gagd
		}
		switch _fefg := _bfbbg.(type) {
		case _b.StartElement:
			switch _fefg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggd.ExtLst = NewCT_ExtensionList()
				if _degf := d.DecodeElement(_ggd.ExtLst, &_fefg); _degf != nil {
					return _degf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _fefg.Name)
				if _eea := d.Skip(); _eea != nil {
					return _eea
				}
			}
		case _b.EndElement:
			break _dbgcf
		case _b.CharData:
		}
	}
	return nil
}

type CT_SplitTransition struct {

	// Orientation
	OrientAttr ST_Direction

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func (_fegec ST_TLTimeNodePresetClassType) String() string {
	switch _fegec {
	case 0:
		return ""
	case 1:
		return "\u0065\u006e\u0074\u0072"
	case 2:
		return "\u0065\u0078\u0069\u0074"
	case 3:
		return "\u0065\u006d\u0070\u0068"
	case 4:
		return "\u0070\u0061\u0074\u0068"
	case 5:
		return "\u0076\u0065\u0072\u0062"
	case 6:
		return "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return ""
}

// ValidateWithPath validates the CT_PrintProperties and its children, prefixing error messages with path
func (_eaeb *CT_PrintProperties) ValidateWithPath(path string) error {
	if _gage := _eaeb.PrnWhatAttr.ValidateWithPath(path + "\u002f\u0050\u0072n\u0057\u0068\u0061\u0074\u0041\u0074\u0074\u0072"); _gage != nil {
		return _gage
	}
	if _fegf := _eaeb.ClrModeAttr.ValidateWithPath(path + "\u002f\u0043\u006cr\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fegf != nil {
		return _fegf
	}
	if _eaeb.ExtLst != nil {
		if _abfd := _eaeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abfd != nil {
			return _abfd
		}
	}
	return nil
}

func (_gfgff *CT_ViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcbbc := range start.Attr {
		if _bcbbc.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_gfgff.LastViewAttr.UnmarshalXMLAttr(_bcbbc)
			continue
		}
		if _bcbbc.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_efabb, _facbe := _f.ParseBool(_bcbbc.Value)
			if _facbe != nil {
				return _facbe
			}
			_gfgff.ShowCommentsAttr = &_efabb
			continue
		}
	}
_fbdbg:
	for {
		_babffg, _adfbda := d.Token()
		if _adfbda != nil {
			return _adfbda
		}
		switch _ddded := _babffg.(type) {
		case _b.StartElement:
			switch _ddded.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_gfgff.NormalViewPr = NewCT_NormalViewProperties()
				if _dfbc := d.DecodeElement(_gfgff.NormalViewPr, &_ddded); _dfbc != nil {
					return _dfbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_gfgff.SlideViewPr = NewCT_SlideViewProperties()
				if _agae := d.DecodeElement(_gfgff.SlideViewPr, &_ddded); _agae != nil {
					return _agae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_gfgff.OutlineViewPr = NewCT_OutlineViewProperties()
				if _bfafc := d.DecodeElement(_gfgff.OutlineViewPr, &_ddded); _bfafc != nil {
					return _bfafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_gfgff.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _egedd := d.DecodeElement(_gfgff.NotesTextViewPr, &_ddded); _egedd != nil {
					return _egedd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_gfgff.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _cacgc := d.DecodeElement(_gfgff.SorterViewPr, &_ddded); _cacgc != nil {
					return _cacgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_gfgff.NotesViewPr = NewCT_NotesViewProperties()
				if _cdgce := d.DecodeElement(_gfgff.NotesViewPr, &_ddded); _cdgce != nil {
					return _cdgce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_gfgff.GridSpacing = _bc.NewCT_PositiveSize2D()
				if _bdfbb := d.DecodeElement(_gfgff.GridSpacing, &_ddded); _bdfbb != nil {
					return _bdfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfgff.ExtLst = NewCT_ExtensionList()
				if _edddc := d.DecodeElement(_gfgff.ExtLst, &_ddded); _edddc != nil {
					return _edddc
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ddded.Name)
				if _ffdaa := d.Skip(); _ffdaa != nil {
					return _ffdaa
				}
			}
		case _b.EndElement:
			break _fbdbg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_NotesTextViewProperties() *CT_NotesTextViewProperties {
	_bbgd := &CT_NotesTextViewProperties{}
	_bbgd.CViewPr = NewCT_CommonViewProperties()
	return _bbgd
}

func (_gaabb ST_TransitionInOutDirectionType) ValidateWithPath(path string) error {
	switch _gaabb {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaabb))
	}
	return nil
}

func NewCT_CustomShow() *CT_CustomShow {
	_dbgd := &CT_CustomShow{}
	_dbgd.SldLst = NewCT_SlideRelationshipList()
	return _dbgd
}

// Validate validates the EG_ShowType and its children
func (_bafgf *EG_ShowType) Validate() error {
	return _bafgf.ValidateWithPath("E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065")
}

func NewCT_BackgroundProperties() *CT_BackgroundProperties {
	_dgd := &CT_BackgroundProperties{}
	return _dgd
}

func (_dfegc ST_PrintWhat) Validate() error { return _dfegc.ValidateWithPath("") }

// Validate validates the CT_SlideTiming and its children
func (_daaee *CT_SlideTiming) Validate() error {
	return _daaee.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067")
}

func NewCT_TLIterateIntervalTime() *CT_TLIterateIntervalTime {
	_cbdd := &CT_TLIterateIntervalTime{}
	return _cbdd
}

type CT_ShowInfoBrowse struct {

	// Show Scroll Bar in Window
	ShowScrollbarAttr *bool
}

func (_fgdb *CT_SlideLayout) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgdb.CSld = NewCT_CommonSlideData()
	for _, _gbfea := range start.Attr {
		if _gbfea.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_beaa, _beec := _gbfea.Value, error(nil)
			if _beec != nil {
				return _beec
			}
			_fgdb.MatchingNameAttr = &_beaa
			continue
		}
		if _gbfea.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fgdb.TypeAttr.UnmarshalXMLAttr(_gbfea)
			continue
		}
		if _gbfea.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_bage, _ddba := _f.ParseBool(_gbfea.Value)
			if _ddba != nil {
				return _ddba
			}
			_fgdb.PreserveAttr = &_bage
			continue
		}
		if _gbfea.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_gcde, _cdba := _f.ParseBool(_gbfea.Value)
			if _cdba != nil {
				return _cdba
			}
			_fgdb.UserDrawnAttr = &_gcde
			continue
		}
		if _gbfea.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_bdae, _agbf := _f.ParseBool(_gbfea.Value)
			if _agbf != nil {
				return _agbf
			}
			_fgdb.ShowMasterSpAttr = &_bdae
			continue
		}
		if _gbfea.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_eebfa, _adfc := _f.ParseBool(_gbfea.Value)
			if _adfc != nil {
				return _adfc
			}
			_fgdb.ShowMasterPhAnimAttr = &_eebfa
			continue
		}
	}
_cgac:
	for {
		_gbfeg, _aaggb := d.Token()
		if _aaggb != nil {
			return _aaggb
		}
		switch _gcaa := _gbfeg.(type) {
		case _b.StartElement:
			switch _gcaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _eeag := d.DecodeElement(_fgdb.CSld, &_gcaa); _eeag != nil {
					return _eeag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_fgdb.ClrMapOvr = _bc.NewCT_ColorMappingOverride()
				if _edfb := d.DecodeElement(_fgdb.ClrMapOvr, &_gcaa); _edfb != nil {
					return _edfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_fgdb.Transition = NewCT_SlideTransition()
				if _aefgg := d.DecodeElement(_fgdb.Transition, &_gcaa); _aefgg != nil {
					return _aefgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_fgdb.Timing = NewCT_SlideTiming()
				if _faca := d.DecodeElement(_fgdb.Timing, &_gcaa); _faca != nil {
					return _faca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fgdb.Hf = NewCT_HeaderFooter()
				if _dedbd := d.DecodeElement(_fgdb.Hf, &_gcaa); _dedbd != nil {
					return _dedbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgdb.ExtLst = NewCT_ExtensionListModify()
				if _geab := d.DecodeElement(_fgdb.ExtLst, &_gcaa); _geab != nil {
					return _geab
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061y\u006fu\u0074\u0020\u0025\u0076", _gcaa.Name)
				if _abcg := d.Skip(); _abcg != nil {
					return _abcg
				}
			}
		case _b.EndElement:
			break _cgac
		case _b.CharData:
		}
	}
	return nil
}

func (_cbdde *Sld) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0073l\u0064"
	return _cbdde.CT_Slide.MarshalXML(e, start)
}

func (_fgcbf ST_SlideLayoutType) String() string {
	switch _fgcbf {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0074\u0078"
	case 3:
		return "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case 4:
		return "\u0074\u0062\u006c"
	case 5:
		return "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case 6:
		return "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 7:
		return "\u0064\u0067\u006d"
	case 8:
		return "\u0063\u0068\u0061r\u0074"
	case 9:
		return "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case 10:
		return "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 11:
		return "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case 12:
		return "\u0062\u006c\u0061n\u006b"
	case 13:
		return "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case 14:
		return "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 15:
		return "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case 16:
		return "\u006f\u0062\u006a"
	case 17:
		return "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case 18:
		return "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case 19:
		return "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case 20:
		return "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case 21:
		return "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 22:
		return "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 23:
		return "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case 24:
		return "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case 25:
		return "\u0076\u0065\u0072\u0074\u0054\u0078"
	case 26:
		return "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case 27:
		return "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case 28:
		return "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case 29:
		return "\u0074\u0077\u006f\u004f\u0062\u006a"
	case 30:
		return "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 31:
		return "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case 32:
		return "\u0063\u0075\u0073\u0074"
	case 33:
		return "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case 34:
		return "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case 35:
		return "\u006f\u0062\u006aT\u0078"
	case 36:
		return "\u0070\u0069\u0063T\u0078"
	}
	return ""
}

func (_efeb *CT_Shape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efeb.NvSpPr = NewCT_ShapeNonVisual()
	_efeb.SpPr = _bc.NewCT_ShapeProperties()
	for _, _cgagde := range start.Attr {
		if _cgagde.Name.Local == "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl" {
			_ceaa, _ebab := _f.ParseBool(_cgagde.Value)
			if _ebab != nil {
				return _ebab
			}
			_efeb.UseBgFillAttr = &_ceaa
			continue
		}
	}
_abag:
	for {
		_gcgg, _cfdb := d.Token()
		if _cfdb != nil {
			return _cfdb
		}
		switch _aeaa := _gcgg.(type) {
		case _b.StartElement:
			switch _aeaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _ccdd := d.DecodeElement(_efeb.NvSpPr, &_aeaa); _ccdd != nil {
					return _ccdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _caefa := d.DecodeElement(_efeb.SpPr, &_aeaa); _caefa != nil {
					return _caefa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_efeb.Style = _bc.NewCT_ShapeStyle()
				if _dcbf := d.DecodeElement(_efeb.Style, &_aeaa); _dcbf != nil {
					return _dcbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_efeb.TxBody = _bc.NewCT_TextBody()
				if _edb := d.DecodeElement(_efeb.TxBody, &_aeaa); _edb != nil {
					return _edb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efeb.ExtLst = NewCT_ExtensionListModify()
				if _egecd := d.DecodeElement(_efeb.ExtLst, &_aeaa); _egecd != nil {
					return _egecd
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _aeaa.Name)
				if _aeaae := d.Skip(); _aeaae != nil {
					return _aeaae
				}
			}
		case _b.EndElement:
			break _abag
		case _b.CharData:
		}
	}
	return nil
}

func (_baebc ST_TLBehaviorAdditiveType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_baebc.String(), start)
}

type CT_SideDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionSideDirectionType
}

func (_cfe *CT_BackgroundProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfe.ShadeToTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_cfe.ShadeToTitleAttr))})
	}
	e.EncodeToken(start)
	if _cfe.NoFill != nil {
		_be := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfe.NoFill, _be)
	}
	if _cfe.SolidFill != nil {
		_feb := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfe.SolidFill, _feb)
	}
	if _cfe.GradFill != nil {
		_bge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfe.GradFill, _bge)
	}
	if _cfe.BlipFill != nil {
		_eda := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfe.BlipFill, _eda)
	}
	if _cfe.PattFill != nil {
		_fab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfe.PattFill, _fab)
	}
	if _cfe.GrpFill != nil {
		_fbf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_cfe.GrpFill, _fbf)
	}
	if _cfe.EffectLst != nil {
		_dbf := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfe.EffectLst, _dbf)
	}
	if _cfe.EffectDag != nil {
		_eba := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_cfe.EffectDag, _eba)
	}
	if _cfe.ExtLst != nil {
		_gaeaa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfe.ExtLst, _gaeaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLByRgbColorTransform and its children, prefixing error messages with path
func (_fccf *CT_TLByRgbColorTransform) ValidateWithPath(path string) error {
	if _aagab := _fccf.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _aagab != nil {
		return _aagab
	}
	if _dbffg := _fccf.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _dbffg != nil {
		return _dbffg
	}
	if _dafb := _fccf.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _dafb != nil {
		return _dafb
	}
	return nil
}

// ValidateWithPath validates the CT_ModifyVerifier and its children, prefixing error messages with path
func (_aacf *CT_ModifyVerifier) ValidateWithPath(path string) error {
	if _ecce := _aacf.CryptProviderTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072\u0079pt\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0054\u0079\u0070\u0065\u0041\u0074t\u0072"); _ecce != nil {
		return _ecce
	}
	if _dcdcad := _aacf.CryptAlgorithmClassAttr.ValidateWithPath(path + "\u002fC\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _dcdcad != nil {
		return _dcdcad
	}
	if _fefa := _aacf.CryptAlgorithmTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072yp\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _fefa != nil {
		return _fefa
	}
	return nil
}

type EG_Background struct {

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_bc.CT_StyleMatrixReference
}

func NewCT_TLAnimVariantStringVal() *CT_TLAnimVariantStringVal {
	_fgdf := &CT_TLAnimVariantStringVal{}
	return _fgdf
}

func (_ddgad ST_TLPreviousActionType) String() string {
	switch _ddgad {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return ""
}

// Validate validates the CT_TLTimeNodeExclusive and its children
func (_cbga *CT_TLTimeNodeExclusive) Validate() error {
	return _cbga.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065")
}

func (_fdged *CT_TLTimeNodeExclusive) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bbffc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_fdged.CTn, _bbffc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bgcgg ST_ViewType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgcgg.String(), start)
}

func (_fccge *CT_NotesMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fccge.CSld = NewCT_CommonSlideData()
	_fccge.ClrMap = _bc.NewCT_ColorMapping()
_egfdg:
	for {
		_fbea, _efgbb := d.Token()
		if _efgbb != nil {
			return _efgbb
		}
		switch _ebad := _fbea.(type) {
		case _b.StartElement:
			switch _ebad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _befdc := d.DecodeElement(_fccge.CSld, &_ebad); _befdc != nil {
					return _befdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _edee := d.DecodeElement(_fccge.ClrMap, &_ebad); _edee != nil {
					return _edee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fccge.Hf = NewCT_HeaderFooter()
				if _gaab := d.DecodeElement(_fccge.Hf, &_ebad); _gaab != nil {
					return _gaab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_fccge.NotesStyle = _bc.NewCT_TextListStyle()
				if _ggfg := d.DecodeElement(_fccge.NotesStyle, &_ebad); _ggfg != nil {
					return _ggfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fccge.ExtLst = NewCT_ExtensionListModify()
				if _baafa := d.DecodeElement(_fccge.ExtLst, &_ebad); _baafa != nil {
					return _baafa
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _ebad.Name)
				if _bdab := d.Skip(); _bdab != nil {
					return _bdab
				}
			}
		case _b.EndElement:
			break _egfdg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_NotesMasterIdListEntry() *CT_NotesMasterIdListEntry {
	_cdgb := &CT_NotesMasterIdListEntry{}
	return _cdgb
}

func (_gcgad *CT_TLShapeTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febea := range start.Attr {
		if _febea.Name.Local == "\u0073\u0070\u0069\u0064" {
			_aegad, _eacef := _f.ParseUint(_febea.Value, 10, 32)
			if _eacef != nil {
				return _eacef
			}
			_gcgad.SpidAttr = uint32(_aegad)
			continue
		}
	}
_bbeca:
	for {
		_afff, _eafbf := d.Token()
		if _eafbf != nil {
			return _eafbf
		}
		switch _ddcbeg := _afff.(type) {
		case _b.StartElement:
			switch _ddcbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_gcgad.Bg = NewCT_Empty()
				if _fedg := d.DecodeElement(_gcgad.Bg, &_ddcbeg); _fedg != nil {
					return _fedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}:
				_gcgad.SubSp = NewCT_TLSubShapeId()
				if _ffdd := d.DecodeElement(_gcgad.SubSp, &_ddcbeg); _ffdd != nil {
					return _ffdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}:
				_gcgad.OleChartEl = NewCT_TLOleChartTargetElement()
				if _fbcfb := d.DecodeElement(_gcgad.OleChartEl, &_ddcbeg); _fbcfb != nil {
					return _fbcfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}:
				_gcgad.TxEl = NewCT_TLTextTargetElement()
				if _egbfd := d.DecodeElement(_gcgad.TxEl, &_ddcbeg); _egbfd != nil {
					return _egbfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}:
				_gcgad.GraphicEl = _bc.NewCT_AnimationElementChoice()
				if _dgdbf := d.DecodeElement(_gcgad.GraphicEl, &_ddcbeg); _dgdbf != nil {
					return _dgdbf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061r\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074 \u0025\u0076", _ddcbeg.Name)
				if _babgg := d.Skip(); _babgg != nil {
					return _babgg
				}
			}
		case _b.EndElement:
			break _bbeca
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLIterateIntervalPercentage and its children, prefixing error messages with path
func (_aagag *CT_TLIterateIntervalPercentage) ValidateWithPath(path string) error {
	if _ggce := _aagag.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ggce != nil {
		return _ggce
	}
	return nil
}

func NewCT_TLIterateIntervalPercentage() *CT_TLIterateIntervalPercentage {
	_fedf := &CT_TLIterateIntervalPercentage{}
	return _fedf
}

type CT_TLCommonMediaNodeData struct {

	// Volume
	VolAttr *_bc.ST_PositiveFixedPercentage

	// Mute
	MuteAttr *bool

	// Number of Slides
	NumSldAttr *uint32

	// Show When Stopped
	ShowWhenStoppedAttr *bool

	// Common Time Node Properties
	CTn   *CT_TLCommonTimeNodeData
	TgtEl *CT_TLTimeTargetElement
}

func (_gbadd ST_TLBehaviorAccumulateType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ddaec := _b.Attr{}
	_ddaec.Name = name
	switch _gbadd {
	case ST_TLBehaviorAccumulateTypeUnset:
		_ddaec.Value = ""
	case ST_TLBehaviorAccumulateTypeNone:
		_ddaec.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLBehaviorAccumulateTypeAlways:
		_ddaec.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _ddaec, nil
}

func (_gbcdf ST_TLTimeNodeSyncType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbcdf.String(), start)
}

func (_fdgd *CT_Extension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u0069"}, Value: _fd.Sprintf("\u0025\u0076", _fdgd.UriAttr)})
	e.EncodeToken(start)
	if _fdgd.Any != nil {
		for _, _gcac := range _fdgd.Any {
			_gcac.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLByAnimateColorTransform and its children, prefixing error messages with path
func (_cgedb *CT_TLByAnimateColorTransform) ValidateWithPath(path string) error {
	if _cgedb.Rgb != nil {
		if _dabd := _cgedb.Rgb.ValidateWithPath(path + "\u002f\u0052\u0067\u0062"); _dabd != nil {
			return _dabd
		}
	}
	if _cgedb.Hsl != nil {
		if _edffc := _cgedb.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _edffc != nil {
			return _edffc
		}
	}
	return nil
}

// Validate validates the CT_GraphicalObjectFrame and its children
func (_fbg *CT_GraphicalObjectFrame) Validate() error {
	return _fbg.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}

func (_ebffd *CT_SlideMasterIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebffd.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ebffd.IdAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ebffd.RIdAttr)})
	e.EncodeToken(start)
	if _ebffd.ExtLst != nil {
		_dgeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebffd.ExtLst, _dgeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfgfd *CT_TLIterateIntervalPercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _bfgfd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideRelationshipListEntry and its children
func (_acbe *CT_SlideRelationshipListEntry) Validate() error {
	return _acbe.ValidateWithPath("\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079")
}

func NewCT_NotesViewProperties() *CT_NotesViewProperties {
	_eaab := &CT_NotesViewProperties{}
	_eaab.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _eaab
}

// Validate validates the CT_TLOleBuildChart and its children
func (_bcfgc *CT_TLOleBuildChart) Validate() error {
	return _bcfgc.ValidateWithPath("\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074")
}

func (_gefdb ST_TLTimeNodeType) Validate() error { return _gefdb.ValidateWithPath("") }

// ValidateWithPath validates the CT_TransitionSoundAction and its children, prefixing error messages with path
func (_fgeg *CT_TransitionSoundAction) ValidateWithPath(path string) error {
	if _fgeg.StSnd != nil {
		if _faace := _fgeg.StSnd.ValidateWithPath(path + "\u002f\u0053\u0074\u0053\u006e\u0064"); _faace != nil {
			return _faace
		}
	}
	if _fgeg.EndSnd != nil {
		if _gaegf := _fgeg.EndSnd.ValidateWithPath(path + "\u002fE\u006e\u0064\u0053\u006e\u0064"); _gaegf != nil {
			return _gaegf
		}
	}
	return nil
}

func (_gccff *CT_TLByHslColorTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _fd.Sprintf("\u0025\u0076", _gccff.HAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0076", _gccff.SAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _gccff.LAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cdac *PresentationPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdac.CT_PresentationProperties = *NewCT_PresentationProperties()
_dbbc:
	for {
		_effcf, _ecagd := d.Token()
		if _ecagd != nil {
			return _ecagd
		}
		switch _afeff := _effcf.(type) {
		case _b.StartElement:
			switch _afeff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_cdac.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _ebdda := d.DecodeElement(_cdac.HtmlPubPr, &_afeff); _ebdda != nil {
					return _ebdda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_cdac.WebPr = NewCT_WebProperties()
				if _cfaagd := d.DecodeElement(_cdac.WebPr, &_afeff); _cfaagd != nil {
					return _cfaagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_cdac.PrnPr = NewCT_PrintProperties()
				if _bacee := d.DecodeElement(_cdac.PrnPr, &_afeff); _bacee != nil {
					return _bacee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_cdac.ShowPr = NewCT_ShowProperties()
				if _edbea := d.DecodeElement(_cdac.ShowPr, &_afeff); _edbea != nil {
					return _edbea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_cdac.ClrMru = _bc.NewCT_ColorMRU()
				if _befbg := d.DecodeElement(_cdac.ClrMru, &_afeff); _befbg != nil {
					return _befbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdac.ExtLst = NewCT_ExtensionList()
				if _gdabgb := d.DecodeElement(_cdac.ExtLst, &_afeff); _gdabgb != nil {
					return _gdabgb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006eP\u0072\u0020\u0025\u0076", _afeff.Name)
				if _agbge := d.Skip(); _agbge != nil {
					return _agbge
				}
			}
		case _b.EndElement:
			break _dbbc
		case _b.CharData:
		}
	}
	return nil
}

func (_fcaaa *CmAuthorLst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074"
	return _fcaaa.CT_CommentAuthorList.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_fcabf *CT_Shape) ValidateWithPath(path string) error {
	if _bdge := _fcabf.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _bdge != nil {
		return _bdge
	}
	if _edba := _fcabf.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _edba != nil {
		return _edba
	}
	if _fcabf.Style != nil {
		if _aedeb := _fcabf.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _aedeb != nil {
			return _aedeb
		}
	}
	if _fcabf.TxBody != nil {
		if _acca := _fcabf.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _acca != nil {
			return _acca
		}
	}
	if _fcabf.ExtLst != nil {
		if _bcfeg := _fcabf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcfeg != nil {
			return _bcfeg
		}
	}
	return nil
}

func (_ddgeg ST_TLTriggerEvent) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ddgeg.String(), start)
}

func (_egebd ST_TLAnimateMotionBehaviorOrigin) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbgfd := _b.Attr{}
	_cbgfd.Name = name
	switch _egebd {
	case ST_TLAnimateMotionBehaviorOriginUnset:
		_cbgfd.Value = ""
	case ST_TLAnimateMotionBehaviorOriginParent:
		_cbgfd.Value = "\u0070\u0061\u0072\u0065\u006e\u0074"
	case ST_TLAnimateMotionBehaviorOriginLayout:
		_cbgfd.Value = "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return _cbgfd, nil
}

func (_aagc *ST_TLTimeNodePresetClassType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffgeg, _ecgbc := d.Token()
	if _ecgbc != nil {
		return _ecgbc
	}
	if _bfbcaa, _bdcbdd := _ffgeg.(_b.EndElement); _bdcbdd && _bfbcaa.Name == start.Name {
		*_aagc = 1
		return nil
	}
	if _cade, _cddgc := _ffgeg.(_b.CharData); !_cddgc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffgeg)
	} else {
		switch string(_cade) {
		case "":
			*_aagc = 0
		case "\u0065\u006e\u0074\u0072":
			*_aagc = 1
		case "\u0065\u0078\u0069\u0074":
			*_aagc = 2
		case "\u0065\u006d\u0070\u0068":
			*_aagc = 3
		case "\u0070\u0061\u0074\u0068":
			*_aagc = 4
		case "\u0076\u0065\u0072\u0062":
			*_aagc = 5
		case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
			*_aagc = 6
		}
	}
	_ffgeg, _ecgbc = d.Token()
	if _ecgbc != nil {
		return _ecgbc
	}
	if _fbbcd, _ggbd := _ffgeg.(_b.EndElement); _ggbd && _fbbcd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffgeg)
}

func (_ccdbe ST_OleObjectFollowColorScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ccdbe.String(), start)
}

type CT_CustomShow struct {

	// Custom Show Name
	NameAttr string

	// Custom Show ID
	IdAttr uint32

	// List of Presentation Slides
	SldLst *CT_SlideRelationshipList
	ExtLst *CT_ExtensionList
}

func NewCT_Background() *CT_Background { _ebf := &CT_Background{}; return _ebf }

type CT_TLMediaNodeVideo struct {

	// Full Screen
	FullScrnAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_agag := &CT_GroupShapeNonVisual{}
	_agag.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_agag.CNvGrpSpPr = _bc.NewCT_NonVisualGroupDrawingShapeProps()
	_agag.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _agag
}

func (_fabd *NotesMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072"
	return _fabd.CT_NotesMaster.MarshalXML(e, start)
}

func (_affdb *ST_TLTriggerRuntimeNode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_affdb = 0
	case "\u0066\u0069\u0072s\u0074":
		*_affdb = 1
	case "\u006c\u0061\u0073\u0074":
		*_affdb = 2
	case "\u0061\u006c\u006c":
		*_affdb = 3
	}
	return nil
}

type CT_CommentAuthor struct {

	// Comment Author ID
	IdAttr uint32

	// Comment Author Name
	NameAttr string

	// Comment Author Initials
	InitialsAttr string

	// Index of Comment Author's last comment
	LastIdxAttr uint32

	// Comment Author Color Index
	ClrIdxAttr uint32
	ExtLst     *CT_ExtensionList
}

// Validate validates the CT_TLByRgbColorTransform and its children
func (_fabf *CT_TLByRgbColorTransform) Validate() error {
	return _fabf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

type ST_TLChartSubelementType byte

// ValidateWithPath validates the CT_HandoutMasterIdList and its children, prefixing error messages with path
func (_fdbbb *CT_HandoutMasterIdList) ValidateWithPath(path string) error {
	if _fdbbb.HandoutMasterId != nil {
		if _ede := _fdbbb.HandoutMasterId.ValidateWithPath(path + "\u002f\u0048a\u006e\u0064\u006fu\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"); _ede != nil {
			return _ede
		}
	}
	return nil
}

func (_dcfc *CT_TLAnimVariantBooleanVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agaf := range start.Attr {
		if _agaf.Name.Local == "\u0076\u0061\u006c" {
			_agbdf, _cebeb := _f.ParseBool(_agaf.Value)
			if _cebeb != nil {
				return _cebeb
			}
			_dcfc.ValAttr = _agbdf
			continue
		}
	}
	for {
		_abdcg, _aafge := d.Token()
		if _aafge != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074B\u006f\u006f\u006c\u0065\u0061n\u0056\u0061l\u003a\u0020\u0025\u0073", _aafge)
		}
		if _ecef, _bdcc := _abdcg.(_b.EndElement); _bdcc && _ecef.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfda *CT_HandoutMasterIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ggab:
	for {
		_egce, _bcaf := d.Token()
		if _bcaf != nil {
			return _bcaf
		}
		switch _aeca := _egce.(type) {
		case _b.StartElement:
			switch _aeca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_dfda.HandoutMasterId = NewCT_HandoutMasterIdListEntry()
				if _fgdc := d.DecodeElement(_dfda.HandoutMasterId, &_aeca); _fgdc != nil {
					return _fgdc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aeca.Name)
				if _gdfg := d.Skip(); _gdfg != nil {
					return _gdfg
				}
			}
		case _b.EndElement:
			break _ggab
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLOleChartTargetElement and its children
func (_bgag *CT_TLOleChartTargetElement) Validate() error {
	return _bgag.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074")
}

func NewCT_HandoutMasterIdListEntry() *CT_HandoutMasterIdListEntry {
	_ecde := &CT_HandoutMasterIdListEntry{}
	return _ecde
}

type CT_CustomerData struct{ IdAttr string }

func NewCT_PhotoAlbum() *CT_PhotoAlbum { _cfebc := &CT_PhotoAlbum{}; return _cfebc }

type CT_ApplicationNonVisualDrawingProps struct {

	// Is a Photo Album
	IsPhotoAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Placeholder Shape
	Ph            *CT_Placeholder
	AudioCd       *_bc.CT_AudioCD
	WavAudioFile  *_bc.CT_EmbeddedWAVAudioFile
	AudioFile     *_bc.CT_AudioFile
	VideoFile     *_bc.CT_VideoFile
	QuickTimeFile *_bc.CT_QuickTimeFile

	// Customer Data List
	CustDataLst *CT_CustomerDataList
	ExtLst      *CT_ExtensionList
}

// Validate validates the EG_ChildSlide and its children
func (_cafac *EG_ChildSlide) Validate() error {
	return _cafac.ValidateWithPath("\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

func (_aea *CT_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_befd:
	for {
		_aede, _gccc := d.Token()
		if _gccc != nil {
			return _gccc
		}
		switch _dcgg := _aede.(type) {
		case _b.StartElement:
			switch _dcgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_cbaa := NewCT_Extension()
				if _afcg := d.DecodeElement(_cbaa, &_dcgg); _afcg != nil {
					return _afcg
				}
				_aea.Ext = append(_aea.Ext, _cbaa)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _dcgg.Name)
				if _bfgc := d.Skip(); _bfgc != nil {
					return _bfgc
				}
			}
		case _b.EndElement:
			break _befd
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_SideDirectionTransition() *CT_SideDirectionTransition {
	_cgff := &CT_SideDirectionTransition{}
	return _cgff
}

func (_gfgc *CT_ShowProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbed := range start.Attr {
		if _dbed.Name.Local == "\u006c\u006f\u006f\u0070" {
			_eace, _feca := _f.ParseBool(_dbed.Value)
			if _feca != nil {
				return _feca
			}
			_gfgc.LoopAttr = &_eace
			continue
		}
		if _dbed.Name.Local == "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_cbgf, _aefg := _f.ParseBool(_dbed.Value)
			if _aefg != nil {
				return _aefg
			}
			_gfgc.ShowNarrationAttr = &_cbgf
			continue
		}
		if _dbed.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_ffce, _aacdf := _f.ParseBool(_dbed.Value)
			if _aacdf != nil {
				return _aacdf
			}
			_gfgc.ShowAnimationAttr = &_ffce
			continue
		}
		if _dbed.Name.Local == "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073" {
			_bgf, _bfffg := _f.ParseBool(_dbed.Value)
			if _bfffg != nil {
				return _bfffg
			}
			_gfgc.UseTimingsAttr = &_bgf
			continue
		}
	}
_afcb:
	for {
		_fagdf, _egfeg := d.Token()
		if _egfeg != nil {
			return _egfeg
		}
		switch _dfdge := _fagdf.(type) {
		case _b.StartElement:
			switch _dfdge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_gfgc.Present = NewCT_Empty()
				if _egcc := d.DecodeElement(_gfgc.Present, &_dfdge); _egcc != nil {
					return _egcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_gfgc.Browse = NewCT_ShowInfoBrowse()
				if _abga := d.DecodeElement(_gfgc.Browse, &_dfdge); _abga != nil {
					return _abga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_gfgc.Kiosk = NewCT_ShowInfoKiosk()
				if _bgabd := d.DecodeElement(_gfgc.Kiosk, &_dfdge); _bgabd != nil {
					return _bgabd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_gfgc.SldAll = NewCT_Empty()
				if _afed := d.DecodeElement(_gfgc.SldAll, &_dfdge); _afed != nil {
					return _afed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_gfgc.SldRg = NewCT_IndexRange()
				if _cggg := d.DecodeElement(_gfgc.SldRg, &_dfdge); _cggg != nil {
					return _cggg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gfgc.CustShow = NewCT_CustomShowId()
				if _cdag := d.DecodeElement(_gfgc.CustShow, &_dfdge); _cdag != nil {
					return _cdag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}:
				_gfgc.PenClr = _bc.NewCT_Color()
				if _eecc := d.DecodeElement(_gfgc.PenClr, &_dfdge); _eecc != nil {
					return _eecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfgc.ExtLst = NewCT_ExtensionList()
				if _bbad := d.DecodeElement(_gfgc.ExtLst, &_dfdge); _bbad != nil {
					return _bbad
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dfdge.Name)
				if _dfcg := d.Skip(); _dfcg != nil {
					return _dfcg
				}
			}
		case _b.EndElement:
			break _afcb
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TLShapeTargetElement() *CT_TLShapeTargetElement {
	_adgb := &CT_TLShapeTargetElement{}
	return _adgb
}

func (_edad *ST_TLTriggerRuntimeNode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffeef, _afccb := d.Token()
	if _afccb != nil {
		return _afccb
	}
	if _dbgbe, _dbacf := _ffeef.(_b.EndElement); _dbacf && _dbgbe.Name == start.Name {
		*_edad = 1
		return nil
	}
	if _gaaeab, _ebdad := _ffeef.(_b.CharData); !_ebdad {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffeef)
	} else {
		switch string(_gaaeab) {
		case "":
			*_edad = 0
		case "\u0066\u0069\u0072s\u0074":
			*_edad = 1
		case "\u006c\u0061\u0073\u0074":
			*_edad = 2
		case "\u0061\u006c\u006c":
			*_edad = 3
		}
	}
	_ffeef, _afccb = d.Token()
	if _afccb != nil {
		return _afccb
	}
	if _ggac, _efgada := _ffeef.(_b.EndElement); _efgada && _ggac.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffeef)
}

func (_gaecd *CT_SlideViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cbffd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_gaecd.CSldViewPr, _cbffd)
	if _gaecd.ExtLst != nil {
		_eacbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gaecd.ExtLst, _eacbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ViewProperties and its children, prefixing error messages with path
func (_bbbgg *CT_ViewProperties) ValidateWithPath(path string) error {
	if _cebdg := _bbbgg.LastViewAttr.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0056\u0069\u0065\u0077\u0041\u0074\u0074\u0072"); _cebdg != nil {
		return _cebdg
	}
	if _bbbgg.NormalViewPr != nil {
		if _acded := _bbbgg.NormalViewPr.ValidateWithPath(path + "\u002f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"); _acded != nil {
			return _acded
		}
	}
	if _bbbgg.SlideViewPr != nil {
		if _ddcbd := _bbbgg.SlideViewPr.ValidateWithPath(path + "\u002f\u0053\u006ci\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"); _ddcbd != nil {
			return _ddcbd
		}
	}
	if _bbbgg.OutlineViewPr != nil {
		if _cgfe := _bbbgg.OutlineViewPr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056i\u0065\u0077\u0050\u0072"); _cgfe != nil {
			return _cgfe
		}
	}
	if _bbbgg.NotesTextViewPr != nil {
		if _eeab := _bbbgg.NotesTextViewPr.ValidateWithPath(path + "\u002f\u004eo\u0074\u0065\u0073T\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"); _eeab != nil {
			return _eeab
		}
	}
	if _bbbgg.SorterViewPr != nil {
		if _dbfcb := _bbbgg.SorterViewPr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"); _dbfcb != nil {
			return _dbfcb
		}
	}
	if _bbbgg.NotesViewPr != nil {
		if _daaae := _bbbgg.NotesViewPr.ValidateWithPath(path + "\u002f\u004e\u006ft\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"); _daaae != nil {
			return _daaae
		}
	}
	if _bbbgg.GridSpacing != nil {
		if _baebg := _bbbgg.GridSpacing.ValidateWithPath(path + "\u002f\u0047\u0072i\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"); _baebg != nil {
			return _baebg
		}
	}
	if _bbbgg.ExtLst != nil {
		if _abeag := _bbbgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abeag != nil {
			return _abeag
		}
	}
	return nil
}

type CT_Slide struct {

	// Show Slide in Slide Show
	ShowAttr *bool

	// Common slide data for slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_bc.CT_ColorMappingOverride

	// Slide Transition
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide
	Timing               *CT_SlideTiming
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func NewCT_TLIterateData() *CT_TLIterateData { _febba := &CT_TLIterateData{}; return _febba }

type ViewPr struct{ CT_ViewProperties }

func (_badegf *TagLst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0074\u0061\u0067\u004c\u0073\u0074"
	return _badegf.CT_TagList.MarshalXML(e, start)
}

func (_fcfd ST_TLAnimateBehaviorCalcMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fcfd.String(), start)
}

// ValidateWithPath validates the ViewPr and its children, prefixing error messages with path
func (_ccgg *ViewPr) ValidateWithPath(path string) error {
	if _gaeaaa := _ccgg.CT_ViewProperties.ValidateWithPath(path); _gaeaaa != nil {
		return _gaeaaa
	}
	return nil
}

const (
	ST_TLNextActionTypeUnset ST_TLNextActionType = 0
	ST_TLNextActionTypeNone  ST_TLNextActionType = 1
	ST_TLNextActionTypeSeek  ST_TLNextActionType = 2
)

func NewCT_NormalViewPortion() *CT_NormalViewPortion { _acf := &CT_NormalViewPortion{}; return _acf }

func NewCT_TLTemplate() *CT_TLTemplate {
	_ccaf := &CT_TLTemplate{}
	_ccaf.TnLst = NewCT_TimeNodeList()
	return _ccaf
}

type CT_TLTemplate struct {

	// Level
	LvlAttr *uint32

	// Time Node List
	TnLst *CT_TimeNodeList
}

func (_aefca *CT_NotesViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aefca.CSldViewPr = NewCT_CommonSlideViewProperties()
_fcgde:
	for {
		_bedg, _gebg := d.Token()
		if _gebg != nil {
			return _gebg
		}
		switch _abbc := _bedg.(type) {
		case _b.StartElement:
			switch _abbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _eaaa := d.DecodeElement(_aefca.CSldViewPr, &_abbc); _eaaa != nil {
					return _eaaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aefca.ExtLst = NewCT_ExtensionList()
				if _ggbe := d.DecodeElement(_aefca.ExtLst, &_abbc); _ggbe != nil {
					return _ggbe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u006f\u0074\u0065s\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _abbc.Name)
				if _daca := d.Skip(); _daca != nil {
					return _daca
				}
			}
		case _b.EndElement:
			break _fcgde
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TLTimeNodeSyncTypeUnset   ST_TLTimeNodeSyncType = 0
	ST_TLTimeNodeSyncTypeCanSlip ST_TLTimeNodeSyncType = 1
	ST_TLTimeNodeSyncTypeLocked  ST_TLTimeNodeSyncType = 2
)

// Validate validates the CT_Empty and its children
func (_cdeg *CT_Empty) Validate() error {
	return _cdeg.ValidateWithPath("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079")
}

func (_abdcc *CT_TLAnimVariantStringVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _abdcc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gece ST_TransitionSpeed) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gece.String(), start)
}

func (_ecbgd ST_PlaceholderSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ecbgd.String(), start)
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_gaefd *CT_Extension) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLAnimateEffectBehavior and its children
func (_ecggf *CT_TLAnimateEffectBehavior) Validate() error {
	return _ecggf.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}

// Validate validates the CT_EightDirectionTransition and its children
func (_daea *CT_EightDirectionTransition) Validate() error {
	return _daea.ValidateWithPath("C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_SlideIdListEntry and its children, prefixing error messages with path
func (_acab *CT_SlideIdListEntry) ValidateWithPath(path string) error {
	if _acab.IdAttr < 256 {
		return _fd.Errorf("\u0025\u0073/m\u002e\u0049\u0064A\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0032\u00356 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _acab.IdAttr)
	}
	if _acab.IdAttr >= 2147483648 {
		return _fd.Errorf("\u0025\u0073\u002fm\u002e\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _acab.IdAttr)
	}
	if _acab.ExtLst != nil {
		if _fede := _acab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fede != nil {
			return _fede
		}
	}
	return nil
}

func NewCT_SplitTransition() *CT_SplitTransition { _bdedb := &CT_SplitTransition{}; return _bdedb }

func (_fefgd ST_TLDiagramBuildType) String() string {
	switch _fefgd {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006fl\u0065"
	case 2:
		return "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 3:
		return "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case 4:
		return "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 5:
		return "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case 6:
		return "\u0063\u0077"
	case 7:
		return "\u0063\u0077\u0049\u006e"
	case 8:
		return "\u0063\u0077\u004fu\u0074"
	case 9:
		return "\u0063\u0063\u0077"
	case 10:
		return "\u0063\u0063\u0077I\u006e"
	case 11:
		return "\u0063\u0063\u0077\u004f\u0075\u0074"
	case 12:
		return "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case 13:
		return "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case 14:
		return "\u0075\u0070"
	case 15:
		return "\u0064\u006f\u0077\u006e"
	case 16:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 17:
		return "\u0063\u0075\u0073\u0074"
	}
	return ""
}

func (_cebga *CT_TLTimeTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cebga.SldTgt != nil {
		_dbbeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_cebga.SldTgt, _dbbeg)
	}
	if _cebga.SndTgt != nil {
		_dfeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006e\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_cebga.SndTgt, _dfeb)
	}
	if _cebga.SpTgt != nil {
		_cffeg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0070\u0054\u0067\u0074"}}
		e.EncodeElement(_cebga.SpTgt, _cffeg)
	}
	if _cebga.InkTgt != nil {
		_bbffac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0069\u006e\u006b\u0054\u0067\u0074"}}
		e.EncodeElement(_cebga.InkTgt, _bbffac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fdag *CT_GroupShapeChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adaa:
	for {
		_cagb, _fadc := d.Token()
		if _fadc != nil {
			return _fadc
		}
		switch _gdfa := _cagb.(type) {
		case _b.StartElement:
			switch _gdfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_ebcb := NewCT_Shape()
				if _ecc := d.DecodeElement(_ebcb, &_gdfa); _ecc != nil {
					return _ecc
				}
				_fdag.Sp = append(_fdag.Sp, _ebcb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_fgff := NewCT_GroupShape()
				if _gade := d.DecodeElement(_fgff, &_gdfa); _gade != nil {
					return _gade
				}
				_fdag.GrpSp = append(_fdag.GrpSp, _fgff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gdce := NewCT_GraphicalObjectFrame()
				if _gcfc := d.DecodeElement(_gdce, &_gdfa); _gcfc != nil {
					return _gcfc
				}
				_fdag.GraphicFrame = append(_fdag.GraphicFrame, _gdce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_afgc := NewCT_Connector()
				if _ecfb := d.DecodeElement(_afgc, &_gdfa); _ecfb != nil {
					return _ecfb
				}
				_fdag.CxnSp = append(_fdag.CxnSp, _afgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_bffa := NewCT_Picture()
				if _eegd := d.DecodeElement(_bffa, &_gdfa); _eegd != nil {
					return _eegd
				}
				_fdag.Pic = append(_fdag.Pic, _bffa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_dcdd := NewCT_Rel()
				if _bbe := d.DecodeElement(_dcdd, &_gdfa); _bbe != nil {
					return _bbe
				}
				_fdag.ContentPart = append(_fdag.ContentPart, _dcdd)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gdfa.Name)
				if _deda := d.Skip(); _deda != nil {
					return _deda
				}
			}
		case _b.EndElement:
			break _adaa
		case _b.CharData:
		}
	}
	return nil
}

func (_fefd *CT_TLAnimateBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fefd.ByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_fefd.ByAttr)})
	}
	if _fefd.FromAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_fefd.FromAttr)})
	}
	if _fefd.ToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_fefd.ToAttr)})
	}
	if _fefd.CalcmodeAttr != ST_TLAnimateBehaviorCalcModeUnset {
		_fffeb, _acda := _fefd.CalcmodeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065"})
		if _acda != nil {
			return _acda
		}
		start.Attr = append(start.Attr, _fffeb)
	}
	if _fefd.ValueTypeAttr != ST_TLAnimateBehaviorValueTypeUnset {
		_dbccf, _cfdf := _fefd.ValueTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e"})
		if _cfdf != nil {
			return _cfdf
		}
		start.Attr = append(start.Attr, _dbccf)
	}
	e.EncodeToken(start)
	_gegbb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fefd.CBhvr, _gegbb)
	if _fefd.TavLst != nil {
		_gdec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_fefd.TavLst, _gdec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_TLBehaviorAttributeNameList() *CT_TLBehaviorAttributeNameList {
	_agdc := &CT_TLBehaviorAttributeNameList{}
	return _agdc
}

// ValidateWithPath validates the CT_SlideTransitionChoice and its children, prefixing error messages with path
func (_gadd *CT_SlideTransitionChoice) ValidateWithPath(path string) error {
	if _gadd.Blinds != nil {
		if _ccbc := _gadd.Blinds.ValidateWithPath(path + "\u002fB\u006c\u0069\u006e\u0064\u0073"); _ccbc != nil {
			return _ccbc
		}
	}
	if _gadd.Checker != nil {
		if _eecae := _gadd.Checker.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0072"); _eecae != nil {
			return _eecae
		}
	}
	if _gadd.Circle != nil {
		if _fgdgb := _gadd.Circle.ValidateWithPath(path + "\u002fC\u0069\u0072\u0063\u006c\u0065"); _fgdgb != nil {
			return _fgdgb
		}
	}
	if _gadd.Dissolve != nil {
		if _gcfecc := _gadd.Dissolve.ValidateWithPath(path + "\u002fD\u0069\u0073\u0073\u006f\u006c\u0076e"); _gcfecc != nil {
			return _gcfecc
		}
	}
	if _gadd.Comb != nil {
		if _efgad := _gadd.Comb.ValidateWithPath(path + "\u002f\u0043\u006fm\u0062"); _efgad != nil {
			return _efgad
		}
	}
	if _gadd.Cover != nil {
		if _cffb := _gadd.Cover.ValidateWithPath(path + "\u002f\u0043\u006f\u0076\u0065\u0072"); _cffb != nil {
			return _cffb
		}
	}
	if _gadd.Cut != nil {
		if _dcbbf := _gadd.Cut.ValidateWithPath(path + "\u002f\u0043\u0075\u0074"); _dcbbf != nil {
			return _dcbbf
		}
	}
	if _gadd.Diamond != nil {
		if _aegaa := _gadd.Diamond.ValidateWithPath(path + "\u002f\u0044\u0069\u0061\u006d\u006f\u006e\u0064"); _aegaa != nil {
			return _aegaa
		}
	}
	if _gadd.Fade != nil {
		if _bdef := _gadd.Fade.ValidateWithPath(path + "\u002f\u0046\u0061d\u0065"); _bdef != nil {
			return _bdef
		}
	}
	if _gadd.Newsflash != nil {
		if _dgfe := _gadd.Newsflash.ValidateWithPath(path + "\u002f\u004e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"); _dgfe != nil {
			return _dgfe
		}
	}
	if _gadd.Plus != nil {
		if _ccbdb := _gadd.Plus.ValidateWithPath(path + "\u002f\u0050\u006cu\u0073"); _ccbdb != nil {
			return _ccbdb
		}
	}
	if _gadd.Pull != nil {
		if _baeeb := _gadd.Pull.ValidateWithPath(path + "\u002f\u0050\u0075l\u006c"); _baeeb != nil {
			return _baeeb
		}
	}
	if _gadd.Push != nil {
		if _geebc := _gadd.Push.ValidateWithPath(path + "\u002f\u0050\u0075s\u0068"); _geebc != nil {
			return _geebc
		}
	}
	if _gadd.Random != nil {
		if _bffbe := _gadd.Random.ValidateWithPath(path + "\u002fR\u0061\u006e\u0064\u006f\u006d"); _bffbe != nil {
			return _bffbe
		}
	}
	if _gadd.RandomBar != nil {
		if _aceac := _gadd.RandomBar.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"); _aceac != nil {
			return _aceac
		}
	}
	if _gadd.Split != nil {
		if _befef := _gadd.Split.ValidateWithPath(path + "\u002f\u0053\u0070\u006c\u0069\u0074"); _befef != nil {
			return _befef
		}
	}
	if _gadd.Strips != nil {
		if _faaca := _gadd.Strips.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u0070\u0073"); _faaca != nil {
			return _faaca
		}
	}
	if _gadd.Wedge != nil {
		if _gebf := _gadd.Wedge.ValidateWithPath(path + "\u002f\u0057\u0065\u0064\u0067\u0065"); _gebf != nil {
			return _gebf
		}
	}
	if _gadd.Wheel != nil {
		if _ggabb := _gadd.Wheel.ValidateWithPath(path + "\u002f\u0057\u0068\u0065\u0065\u006c"); _ggabb != nil {
			return _ggabb
		}
	}
	if _gadd.Wipe != nil {
		if _cgdcf := _gadd.Wipe.ValidateWithPath(path + "\u002f\u0057\u0069p\u0065"); _cgdcf != nil {
			return _cgdcf
		}
	}
	if _gadd.Zoom != nil {
		if _dbeee := _gadd.Zoom.ValidateWithPath(path + "\u002f\u005a\u006fo\u006d"); _dbeee != nil {
			return _dbeee
		}
	}
	return nil
}

func (_gdff *CT_SlideTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdff.SpdAttr != ST_TransitionSpeedUnset {
		_cbgc, _cdega := _gdff.SpdAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0070\u0064"})
		if _cdega != nil {
			return _cdega
		}
		start.Attr = append(start.Attr, _cbgc)
	}
	if _gdff.AdvClickAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gdff.AdvClickAttr))})
	}
	if _gdff.AdvTmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076T\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_gdff.AdvTmAttr)})
	}
	e.EncodeToken(start)
	if _gdff.Choice != nil {
		_gdff.Choice.MarshalXML(e, _b.StartElement{})
	}
	if _gdff.SndAc != nil {
		_dbcf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006e\u0064\u0041\u0063"}}
		e.EncodeElement(_gdff.SndAc, _dbcf)
	}
	if _gdff.ExtLst != nil {
		_cbgca := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdff.ExtLst, _cbgca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_TLBuildParagraph() *CT_TLBuildParagraph { _aaffc := &CT_TLBuildParagraph{}; return _aaffc }

func (_bgcdd ST_TLTimeNodeType) ValidateWithPath(path string) error {
	switch _bgcdd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgcdd))
	}
	return nil
}

func (_egcea ST_TLChartSubelementType) ValidateWithPath(path string) error {
	switch _egcea {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egcea))
	}
	return nil
}

// Validate validates the CT_SlideSize and its children
func (_gbdee *CT_SlideSize) Validate() error {
	return _gbdee.ValidateWithPath("\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065")
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_bbdg *CT_ConnectorNonVisual) Validate() error {
	return _bbdg.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_bbca *CT_SlideIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fecg:
	for {
		_ffecb, _eefda := d.Token()
		if _eefda != nil {
			return _eefda
		}
		switch _babad := _ffecb.(type) {
		case _b.StartElement:
			switch _babad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}:
				_bccgc := NewCT_SlideIdListEntry()
				if _befe := d.DecodeElement(_bccgc, &_babad); _befe != nil {
					return _befe
				}
				_bbca.SldId = append(_bbca.SldId, _bccgc)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064L\u0069s\u0074\u0020\u0025\u0076", _babad.Name)
				if _dbabg := d.Skip(); _dbabg != nil {
					return _dbabg
				}
			}
		case _b.EndElement:
			break _fecg
		case _b.CharData:
		}
	}
	return nil
}

func (_abe *CT_CustomShowList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fbbbe:
	for {
		_ccgc, _bdb := d.Token()
		if _bdb != nil {
			return _bdb
		}
		switch _agf := _ccgc.(type) {
		case _b.StartElement:
			switch _agf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_bgd := NewCT_CustomShow()
				if _bgc := d.DecodeElement(_bgd, &_agf); _bgc != nil {
					return _bgc
				}
				_abe.CustShow = append(_abe.CustShow, _bgd)
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _agf.Name)
				if _baa := d.Skip(); _baa != nil {
					return _baa
				}
			}
		case _b.EndElement:
			break _fbbbe
		case _b.CharData:
		}
	}
	return nil
}

type CT_Placeholder struct {

	// Placeholder Type
	TypeAttr ST_PlaceholderType

	// Placeholder Orientation
	OrientAttr ST_Direction

	// Placeholder Size
	SzAttr ST_PlaceholderSize

	// Placeholder Index
	IdxAttr *uint32

	// Placeholder has custom prompt
	HasCustomPromptAttr *bool
	ExtLst              *CT_ExtensionListModify
}

func (_cecc *CT_TLTimeAnimateValueList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cecc.Tav != nil {
		_faede := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074a\u0076"}}
		for _, _bcdab := range _cecc.Tav {
			e.EncodeElement(_bcdab, _faede)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bgccd ST_TLAnimateBehaviorValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgccd.String(), start)
}

func (_cccag ST_TLTimeNodeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cccag.String(), start)
}

type CT_ControlList struct {

	// Embedded Control
	Control []*CT_Control
}

type CT_TLTemplateList struct {

	// Template Effects
	Tmpl []*CT_TLTemplate
}

func (_ececf ST_Direction) String() string {
	switch _ececf {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	}
	return ""
}

func (_aacef ST_TLAnimateColorSpace) ValidateWithPath(path string) error {
	switch _aacef {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aacef))
	}
	return nil
}

type ST_TLTimeNodeRestartType byte

func (_acbdd *CT_SlideRelationshipList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfed:
	for {
		_egfag, _debg := d.Token()
		if _debg != nil {
			return _debg
		}
		switch _geeag := _egfag.(type) {
		case _b.StartElement:
			switch _geeag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_gdeb := NewCT_SlideRelationshipListEntry()
				if _acaac := d.DecodeElement(_gdeb, &_geeag); _acaac != nil {
					return _acaac
				}
				_acbdd.Sld = append(_acbdd.Sld, _gdeb)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069p\u004c\u0069\u0073\u0074\u0020%\u0076", _geeag.Name)
				if _ceaea := d.Skip(); _ceaea != nil {
					return _ceaea
				}
			}
		case _b.EndElement:
			break _bfed
		case _b.CharData:
		}
	}
	return nil
}

func (_deedaa *CT_TLByHslColorTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fabee := range start.Attr {
		if _fabee.Name.Local == "\u0068" {
			_aebed, _bedbb := _f.ParseInt(_fabee.Value, 10, 32)
			if _bedbb != nil {
				return _bedbb
			}
			_deedaa.HAttr = int32(_aebed)
			continue
		}
		if _fabee.Name.Local == "\u0073" {
			_dggb, _cdgc := ParseUnionST_FixedPercentage(_fabee.Value)
			if _cdgc != nil {
				return _cdgc
			}
			_deedaa.SAttr = _dggb
			continue
		}
		if _fabee.Name.Local == "\u006c" {
			_affc, _deede := ParseUnionST_FixedPercentage(_fabee.Value)
			if _deede != nil {
				return _deede
			}
			_deedaa.LAttr = _affc
			continue
		}
	}
	for {
		_eccd, _fgdde := d.Token()
		if _fgdde != nil {
			return _fd.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0048sl\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _fgdde)
		}
		if _cggbe, _fdegd := _eccd.(_b.EndElement); _fdegd && _cggbe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cebeg *CT_TLCommonTimeNodeData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efbaf := range start.Attr {
		if _efbaf.Name.Local == "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072" {
			_gbee, _babe := _efbaf.Value, error(nil)
			if _babe != nil {
				return _babe
			}
			_cebeg.TmFilterAttr = &_gbee
			continue
		}
		if _efbaf.Name.Local == "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r" {
			_aggcc, _cgdac := _efbaf.Value, error(nil)
			if _cgdac != nil {
				return _cgdac
			}
			_cebeg.EvtFilterAttr = &_aggcc
			continue
		}
		if _efbaf.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044" {
			_dfbbd, _bbcd := _f.ParseInt(_efbaf.Value, 10, 32)
			if _bbcd != nil {
				return _bbcd
			}
			_fagde := int32(_dfbbd)
			_cebeg.PresetIDAttr = &_fagde
			continue
		}
		if _efbaf.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_edebe, _ebgcb := _f.ParseBool(_efbaf.Value)
			if _ebgcb != nil {
				return _ebgcb
			}
			_cebeg.DisplayAttr = &_edebe
			continue
		}
		if _efbaf.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065" {
			_afcac, _cfdgf := _f.ParseInt(_efbaf.Value, 10, 32)
			if _cfdgf != nil {
				return _cfdgf
			}
			_aeaeb := int32(_afcac)
			_cebeg.PresetSubtypeAttr = &_aeaeb
			continue
		}
		if _efbaf.Name.Local == "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l" {
			_cebeg.MasterRelAttr.UnmarshalXMLAttr(_efbaf)
			continue
		}
		if _efbaf.Name.Local == "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074" {
			_efgdd, _gdafg := ParseUnionST_TLTime(_efbaf.Value)
			if _gdafg != nil {
				return _gdafg
			}
			_cebeg.RepeatCountAttr = &_efgdd
			continue
		}
		if _efbaf.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_dgcb, _ffbf := _f.ParseInt(_efbaf.Value, 10, 32)
			if _ffbf != nil {
				return _ffbf
			}
			_ggea := int32(_dgcb)
			_cebeg.BldLvlAttr = &_ggea
			continue
		}
		if _efbaf.Name.Local == "\u0073\u0070\u0064" {
			_fadeg, _cdgba := ParseUnionST_Percentage(_efbaf.Value)
			if _cdgba != nil {
				return _cdgba
			}
			_cebeg.SpdAttr = &_fadeg
			continue
		}
		if _efbaf.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_beef, _ccdaa := _f.ParseUint(_efbaf.Value, 10, 32)
			if _ccdaa != nil {
				return _ccdaa
			}
			_gdag := uint32(_beef)
			_cebeg.GrpIdAttr = &_gdag
			continue
		}
		if _efbaf.Name.Local == "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074" {
			_aebbc, _febaa := _f.ParseBool(_efbaf.Value)
			if _febaa != nil {
				return _febaa
			}
			_cebeg.AfterEffectAttr = &_aebbc
			continue
		}
		if _efbaf.Name.Local == "\u0069\u0064" {
			_dbce, _babg := _f.ParseUint(_efbaf.Value, 10, 32)
			if _babg != nil {
				return _babg
			}
			_ffac := uint32(_dbce)
			_cebeg.IdAttr = &_ffac
			continue
		}
		if _efbaf.Name.Local == "\u006e\u006f\u0064\u0065\u0050\u0068" {
			_adda, _fabea := _f.ParseBool(_efbaf.Value)
			if _fabea != nil {
				return _fabea
			}
			_cebeg.NodePhAttr = &_adda
			continue
		}
		if _efbaf.Name.Local == "\u0061\u0063\u0063e\u006c" {
			_cgaca, _aeade := ParseUnionST_PositiveFixedPercentage(_efbaf.Value)
			if _aeade != nil {
				return _aeade
			}
			_cebeg.AccelAttr = &_cgaca
			continue
		}
		if _efbaf.Name.Local == "\u0064\u0065\u0063e\u006c" {
			_eebb, _bgce := ParseUnionST_PositiveFixedPercentage(_efbaf.Value)
			if _bgce != nil {
				return _bgce
			}
			_cebeg.DecelAttr = &_eebb
			continue
		}
		if _efbaf.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_cebeg.RestartAttr.UnmarshalXMLAttr(_efbaf)
			continue
		}
		if _efbaf.Name.Local == "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065" {
			_cebeg.NodeTypeAttr.UnmarshalXMLAttr(_efbaf)
			continue
		}
		if _efbaf.Name.Local == "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073" {
			_cebeg.PresetClassAttr.UnmarshalXMLAttr(_efbaf)
			continue
		}
		if _efbaf.Name.Local == "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r" {
			_abba, _bdfff := ParseUnionST_TLTime(_efbaf.Value)
			if _bdfff != nil {
				return _bdfff
			}
			_cebeg.RepeatDurAttr = &_abba
			continue
		}
		if _efbaf.Name.Local == "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072" {
			_cebeg.SyncBehaviorAttr.UnmarshalXMLAttr(_efbaf)
			continue
		}
		if _efbaf.Name.Local == "\u0061u\u0074\u006f\u0052\u0065\u0076" {
			_gbdcd, _gcec := _f.ParseBool(_efbaf.Value)
			if _gcec != nil {
				return _gcec
			}
			_cebeg.AutoRevAttr = &_gbdcd
			continue
		}
		if _efbaf.Name.Local == "\u0066\u0069\u006c\u006c" {
			_cebeg.FillAttr.UnmarshalXMLAttr(_efbaf)
			continue
		}
		if _efbaf.Name.Local == "\u0064\u0075\u0072" {
			_dgdeb, _ffba := ParseUnionST_TLTime(_efbaf.Value)
			if _ffba != nil {
				return _ffba
			}
			_cebeg.DurAttr = &_dgdeb
			continue
		}
	}
_feeb:
	for {
		_fabae, _aafdb := d.Token()
		if _aafdb != nil {
			return _aafdb
		}
		switch _aebcb := _fabae.(type) {
		case _b.StartElement:
			switch _aebcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}:
				_cebeg.StCondLst = NewCT_TLTimeConditionList()
				if _ccbeg := d.DecodeElement(_cebeg.StCondLst, &_aebcb); _ccbeg != nil {
					return _ccbeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_cebeg.EndCondLst = NewCT_TLTimeConditionList()
				if _dfcdg := d.DecodeElement(_cebeg.EndCondLst, &_aebcb); _dfcdg != nil {
					return _dfcdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}:
				_cebeg.EndSync = NewCT_TLTimeCondition()
				if _gddb := d.DecodeElement(_cebeg.EndSync, &_aebcb); _gddb != nil {
					return _gddb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}:
				_cebeg.Iterate = NewCT_TLIterateData()
				if _afgf := d.DecodeElement(_cebeg.Iterate, &_aebcb); _afgf != nil {
					return _afgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}:
				_cebeg.ChildTnLst = NewCT_TimeNodeList()
				if _aabc := d.DecodeElement(_cebeg.ChildTnLst, &_aebcb); _aabc != nil {
					return _aabc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}:
				_cebeg.SubTnLst = NewCT_TimeNodeList()
				if _gdagb := d.DecodeElement(_cebeg.SubTnLst, &_aebcb); _gdagb != nil {
					return _gdagb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0054i\u006d\u0065\u004e\u006f\u0064\u0065D\u0061\u0074\u0061 \u0025\u0076", _aebcb.Name)
				if _fggfe := d.Skip(); _fggfe != nil {
					return _fggfe
				}
			}
		case _b.EndElement:
			break _feeb
		case _b.CharData:
		}
	}
	return nil
}

type CT_Control struct {
	ExtLst         *CT_ExtensionList
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

// Validate validates the Notes and its children
func (_dgfb *Notes) Validate() error { return _dgfb.ValidateWithPath("\u004e\u006f\u0074e\u0073") }

func (_eadga ST_TLTimeNodeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abdcf := _b.Attr{}
	_abdcf.Name = name
	switch _eadga {
	case ST_TLTimeNodeTypeUnset:
		_abdcf.Value = ""
	case ST_TLTimeNodeTypeClickEffect:
		_abdcf.Value = "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeWithEffect:
		_abdcf.Value = "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeAfterEffect:
		_abdcf.Value = "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeMainSeq:
		_abdcf.Value = "\u006da\u0069\u006e\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeInteractiveSeq:
		_abdcf.Value = "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeClickPar:
		_abdcf.Value = "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case ST_TLTimeNodeTypeWithGroup:
		_abdcf.Value = "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case ST_TLTimeNodeTypeAfterGroup:
		_abdcf.Value = "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case ST_TLTimeNodeTypeTmRoot:
		_abdcf.Value = "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return _abdcf, nil
}

func (_edbfb *ST_SlideLayoutType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edbfb = 0
	case "\u0074\u0069\u0074l\u0065":
		*_edbfb = 1
	case "\u0074\u0078":
		*_edbfb = 2
	case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
		*_edbfb = 3
	case "\u0074\u0062\u006c":
		*_edbfb = 4
	case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
		*_edbfb = 5
	case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_edbfb = 6
	case "\u0064\u0067\u006d":
		*_edbfb = 7
	case "\u0063\u0068\u0061r\u0074":
		*_edbfb = 8
	case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
		*_edbfb = 9
	case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_edbfb = 10
	case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
		*_edbfb = 11
	case "\u0062\u006c\u0061n\u006b":
		*_edbfb = 12
	case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
		*_edbfb = 13
	case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_edbfb = 14
	case "\u006fb\u006a\u004f\u006e\u006c\u0079":
		*_edbfb = 15
	case "\u006f\u0062\u006a":
		*_edbfb = 16
	case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
		*_edbfb = 17
	case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
		*_edbfb = 18
	case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
		*_edbfb = 19
	case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
		*_edbfb = 20
	case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_edbfb = 21
	case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_edbfb = 22
	case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
		*_edbfb = 23
	case "\u0066o\u0075\u0072\u004f\u0062\u006a":
		*_edbfb = 24
	case "\u0076\u0065\u0072\u0074\u0054\u0078":
		*_edbfb = 25
	case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
		*_edbfb = 26
	case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
		*_edbfb = 27
	case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
		*_edbfb = 28
	case "\u0074\u0077\u006f\u004f\u0062\u006a":
		*_edbfb = 29
	case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_edbfb = 30
	case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
		*_edbfb = 31
	case "\u0063\u0075\u0073\u0074":
		*_edbfb = 32
	case "\u0073e\u0063\u0048\u0065\u0061\u0064":
		*_edbfb = 33
	case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
		*_edbfb = 34
	case "\u006f\u0062\u006aT\u0078":
		*_edbfb = 35
	case "\u0070\u0069\u0063T\u0078":
		*_edbfb = 36
	}
	return nil
}

func (_efddg *SldSyncPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u0053\u0079\u006e\u0063\u0050\u0072"
	return _efddg.CT_SlideSyncProperties.MarshalXML(e, start)
}

type CT_HtmlPublishProperties struct {

	// Show Speaker Notes
	ShowSpeakerNotesAttr *bool

	// Target Output Profile
	TargetAttr *string

	// HTML Output Title
	TitleAttr *string
	IdAttr    string

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
	ExtLst   *CT_ExtensionList
}

func (_fafb *ST_TLTimeNodePresetClassType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fafb = 0
	case "\u0065\u006e\u0074\u0072":
		*_fafb = 1
	case "\u0065\u0078\u0069\u0074":
		*_fafb = 2
	case "\u0065\u006d\u0070\u0068":
		*_fafb = 3
	case "\u0070\u0061\u0074\u0068":
		*_fafb = 4
	case "\u0076\u0065\u0072\u0062":
		*_fafb = 5
	case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
		*_fafb = 6
	}
	return nil
}

func (_adaaf ST_TLDiagramBuildType) Validate() error { return _adaaf.ValidateWithPath("") }

func NewCT_CommentList() *CT_CommentList { _gda := &CT_CommentList{}; return _gda }

func (_fbef *CT_TLCommonBehaviorData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbef.CTn = NewCT_TLCommonTimeNodeData()
	_fbef.TgtEl = NewCT_TLTimeTargetElement()
	for _, _edbag := range start.Attr {
		if _edbag.Name.Local == "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065" {
			_fbef.AdditiveAttr.UnmarshalXMLAttr(_edbag)
			continue
		}
		if _edbag.Name.Local == "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065" {
			_fbef.AccumulateAttr.UnmarshalXMLAttr(_edbag)
			continue
		}
		if _edbag.Name.Local == "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065" {
			_fbef.XfrmTypeAttr.UnmarshalXMLAttr(_edbag)
			continue
		}
		if _edbag.Name.Local == "\u0066\u0072\u006f\u006d" {
			_cgdeg, _eedd := _edbag.Value, error(nil)
			if _eedd != nil {
				return _eedd
			}
			_fbef.FromAttr = &_cgdeg
			continue
		}
		if _edbag.Name.Local == "\u0074\u006f" {
			_ccgfa, _ffdfc := _edbag.Value, error(nil)
			if _ffdfc != nil {
				return _ffdfc
			}
			_fbef.ToAttr = &_ccgfa
			continue
		}
		if _edbag.Name.Local == "\u0062\u0079" {
			_abab, _ggafa := _edbag.Value, error(nil)
			if _ggafa != nil {
				return _ggafa
			}
			_fbef.ByAttr = &_abab
			continue
		}
		if _edbag.Name.Local == "\u0072\u0063\u0074\u0078" {
			_efacd, _bbfd := _edbag.Value, error(nil)
			if _bbfd != nil {
				return _bbfd
			}
			_fbef.RctxAttr = &_efacd
			continue
		}
		if _edbag.Name.Local == "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065" {
			_fbef.OverrideAttr.UnmarshalXMLAttr(_edbag)
			continue
		}
	}
_gcbcd:
	for {
		_gccdc, _aadba := d.Token()
		if _aadba != nil {
			return _aadba
		}
		switch _cfbff := _gccdc.(type) {
		case _b.StartElement:
			switch _cfbff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _gdba := d.DecodeElement(_fbef.CTn, &_cfbff); _gdba != nil {
					return _gdba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _gdbcc := d.DecodeElement(_fbef.TgtEl, &_cfbff); _gdbcc != nil {
					return _gdbcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}:
				_fbef.AttrNameLst = NewCT_TLBehaviorAttributeNameList()
				if _cfbdfa := d.DecodeElement(_fbef.AttrNameLst, &_cfbff); _cfbdfa != nil {
					return _cfbdfa
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0042e\u0068\u0061\u0076\u0069\u006f\u0072D\u0061\u0074\u0061 \u0025\u0076", _cfbff.Name)
				if _debc := d.Skip(); _debc != nil {
					return _debc
				}
			}
		case _b.EndElement:
			break _gcbcd
		case _b.CharData:
		}
	}
	return nil
}

func (_abacg ST_TLTimeNodeRestartType) String() string {
	switch _abacg {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	case 2:
		return "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case 3:
		return "\u006e\u0065\u0076e\u0072"
	}
	return ""
}

func (_abg *CT_CommonViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abg.Scale = _bc.NewCT_Scale2D()
	_abg.Origin = _bc.NewCT_Point2D()
	for _, _eaf := range start.Attr {
		if _eaf.Name.Local == "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065" {
			_cdc, _bfgg := _f.ParseBool(_eaf.Value)
			if _bfgg != nil {
				return _bfgg
			}
			_abg.VarScaleAttr = &_cdc
			continue
		}
	}
_cgb:
	for {
		_dce, _dacf := d.Token()
		if _dacf != nil {
			return _dacf
		}
		switch _gefa := _dce.(type) {
		case _b.StartElement:
			switch _gefa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}:
				if _edde := d.DecodeElement(_abg.Scale, &_gefa); _edde != nil {
					return _edde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}:
				if _fbbb := d.DecodeElement(_abg.Origin, &_gefa); _fbbb != nil {
					return _fbbb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _gefa.Name)
				if _ggb := d.Skip(); _ggb != nil {
					return _ggb
				}
			}
		case _b.EndElement:
			break _cgb
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLAnimateScaleBehavior struct {

	// Zoom Content
	ZoomContentsAttr *bool
	CBhvr            *CT_TLCommonBehaviorData

	// By
	By   *CT_TLPoint
	From *CT_TLPoint

	// To
	To *CT_TLPoint
}

type AG_ChildSlide struct {
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

type CT_SlideTiming struct {
	TnLst *CT_TimeNodeList

	// Build List
	BldLst *CT_BuildList
	ExtLst *CT_ExtensionListModify
}

// Validate validates the CT_GroupShape and its children
func (_fbfaf *CT_GroupShape) Validate() error {
	return _fbfaf.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}

func (_caegc *ST_PlaceholderType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgad, _edfdfe := d.Token()
	if _edfdfe != nil {
		return _edfdfe
	}
	if _fgccc, _aaab := _fgad.(_b.EndElement); _aaab && _fgccc.Name == start.Name {
		*_caegc = 1
		return nil
	}
	if _bbcgaf, _ebcfb := _fgad.(_b.CharData); !_ebcfb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgad)
	} else {
		switch string(_bbcgaf) {
		case "":
			*_caegc = 0
		case "\u0074\u0069\u0074l\u0065":
			*_caegc = 1
		case "\u0062\u006f\u0064\u0079":
			*_caegc = 2
		case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
			*_caegc = 3
		case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
			*_caegc = 4
		case "\u0064\u0074":
			*_caegc = 5
		case "\u0073\u006c\u0064\u004e\u0075\u006d":
			*_caegc = 6
		case "\u0066\u0074\u0072":
			*_caegc = 7
		case "\u0068\u0064\u0072":
			*_caegc = 8
		case "\u006f\u0062\u006a":
			*_caegc = 9
		case "\u0063\u0068\u0061r\u0074":
			*_caegc = 10
		case "\u0074\u0062\u006c":
			*_caegc = 11
		case "\u0063l\u0069\u0070\u0041\u0072\u0074":
			*_caegc = 12
		case "\u0064\u0067\u006d":
			*_caegc = 13
		case "\u006d\u0065\u0064i\u0061":
			*_caegc = 14
		case "\u0073\u006c\u0064\u0049\u006d\u0067":
			*_caegc = 15
		case "\u0070\u0069\u0063":
			*_caegc = 16
		}
	}
	_fgad, _edfdfe = d.Token()
	if _edfdfe != nil {
		return _edfdfe
	}
	if _aeede, _bfeed := _fgad.(_b.EndElement); _bfeed && _aeede.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgad)
}

type CT_ConnectorNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_bc.CT_NonVisualDrawingProps

	// Non-Visual Connector Shape Drawing Properties
	CNvCxnSpPr *_bc.CT_NonVisualConnectorProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_eaec *CT_TLByRgbColorTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _eaec.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067"}, Value: _fd.Sprintf("\u0025\u0076", _eaec.GAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _fd.Sprintf("\u0025\u0076", _eaec.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SlideRelationshipList struct {

	// Presentation Slide
	Sld []*CT_SlideRelationshipListEntry
}

func (_baga *CT_PictureNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ffaf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_baga.CNvPr, _ffaf)
	_adeae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_baga.CNvPicPr, _adeae)
	_cead := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_baga.NvPr, _cead)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NormalViewPortion and its children
func (_caefb *CT_NormalViewPortion) Validate() error {
	return _caefb.ValidateWithPath("C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e")
}

// ValidateWithPath validates the CT_TransitionStartSoundAction and its children, prefixing error messages with path
func (_bfgccf *CT_TransitionStartSoundAction) ValidateWithPath(path string) error {
	if _bcabe := _bfgccf.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _bcabe != nil {
		return _bcabe
	}
	return nil
}

func (_ggebb *OleObj) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006f\u006c\u0065\u004f\u0062\u006a"
	return _ggebb.CT_OleObject.MarshalXML(e, start)
}

func (_bebea ST_TLTimeIndefinite) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bebea.String(), start)
}

func (_gbef *ST_TLTimeNodeFillType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gbef = 0
	case "\u0072\u0065\u006d\u006f\u0076\u0065":
		*_gbef = 1
	case "\u0066\u0072\u0065\u0065\u007a\u0065":
		*_gbef = 2
	case "\u0068\u006f\u006c\u0064":
		*_gbef = 3
	case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
		*_gbef = 4
	}
	return nil
}

// Validate validates the CT_CustomShowList and its children
func (_dfaa *CT_CustomShowList) Validate() error {
	return _dfaa.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074")
}

func (_beeb *CT_TLTimeAnimateValueList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfcbf:
	for {
		_cagafd, _fggb := d.Token()
		if _fggb != nil {
			return _fggb
		}
		switch _ggdga := _cagafd.(type) {
		case _b.StartElement:
			switch _ggdga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076"}:
				_ecegg := NewCT_TLTimeAnimateValue()
				if _eecac := d.DecodeElement(_ecegg, &_ggdga); _eecac != nil {
					return _eecac
				}
				_beeb.Tav = append(_beeb.Tav, _ecegg)
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006ei\u006da\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u004ci\u0073t\u0020\u0025v", _ggdga.Name)
				if _facdf := d.Skip(); _facdf != nil {
					return _facdf
				}
			}
		case _b.EndElement:
			break _gfcbf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_bdd *CT_GroupShapeNonVisual) Validate() error {
	return _bdd.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

func (_bcaa *CT_CustomShow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcaa.SldLst = NewCT_SlideRelationshipList()
	for _, _agga := range start.Attr {
		if _agga.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fcaa, _fbe := _agga.Value, error(nil)
			if _fbe != nil {
				return _fbe
			}
			_bcaa.NameAttr = _fcaa
			continue
		}
		if _agga.Name.Local == "\u0069\u0064" {
			_bfaa, _gaba := _f.ParseUint(_agga.Value, 10, 32)
			if _gaba != nil {
				return _gaba
			}
			_bcaa.IdAttr = uint32(_bfaa)
			continue
		}
	}
_cfc:
	for {
		_dcdca, _fef := d.Token()
		if _fef != nil {
			return _fef
		}
		switch _cdd := _dcdca.(type) {
		case _b.StartElement:
			switch _cdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				if _deaf := d.DecodeElement(_bcaa.SldLst, &_cdd); _deaf != nil {
					return _deaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcaa.ExtLst = NewCT_ExtensionList()
				if _bcda := d.DecodeElement(_bcaa.ExtLst, &_cdd); _bcda != nil {
					return _bcda
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043u\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077 \u0025\u0076", _cdd.Name)
				if _deec := d.Skip(); _deec != nil {
					return _deec
				}
			}
		case _b.EndElement:
			break _cfc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_feag *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _egb := _feag.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _egb != nil {
		return _egb
	}
	if _cbab := _feag.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _cbab != nil {
		return _cbab
	}
	if _eaea := _feag.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _eaea != nil {
		return _eaea
	}
	return nil
}

type CT_GroupShape struct {

	// Non-Visual Properties for a Group Shape
	NvGrpSpPr *CT_GroupShapeNonVisual

	// Group Shape Properties
	GrpSpPr *_bc.CT_GroupShapeProperties
	Choice  []*CT_GroupShapeChoice
	ExtLst  *CT_ExtensionListModify
}

func (_cbbed *ST_TLNextActionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbbed = 0
	case "\u006e\u006f\u006e\u0065":
		*_cbbed = 1
	case "\u0073\u0065\u0065\u006b":
		*_cbbed = 2
	}
	return nil
}

func (_fegbd ST_TLTimeNodeSyncType) Validate() error { return _fegbd.ValidateWithPath("") }

func (_gabfc ST_TLAnimateMotionBehaviorOrigin) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gabfc.String(), start)
}

func (_bceec *CT_TLTimeNodeExclusive) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bceec.CTn = NewCT_TLCommonTimeNodeData()
_egbb:
	for {
		_fbba, _febff := d.Token()
		if _febff != nil {
			return _febff
		}
		switch _acfb := _fbba.(type) {
		case _b.StartElement:
			switch _acfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _fgebe := d.DecodeElement(_bceec.CTn, &_acfb); _fgebe != nil {
					return _fgebe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069\u0076\u0065\u0020\u0025\u0076", _acfb.Name)
				if _ecdge := d.Skip(); _ecdge != nil {
					return _ecdge
				}
			}
		case _b.EndElement:
			break _egbb
		case _b.CharData:
		}
	}
	return nil
}

func (_dgdeag *ST_PlaceholderSize) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgdeag = 0
	case "\u0066\u0075\u006c\u006c":
		*_dgdeag = 1
	case "\u0068\u0061\u006c\u0066":
		*_dgdeag = 2
	case "\u0071u\u0061\u0072\u0074\u0065\u0072":
		*_dgdeag = 3
	}
	return nil
}

func (_eedg *CT_TLBuildParagraph) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adgfa := range start.Attr {
		if _adgfa.Name.Local == "\u0062\u0075\u0069l\u0064" {
			_eedg.BuildAttr.UnmarshalXMLAttr(_adgfa)
			continue
		}
		if _adgfa.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_gdfgg, _fafca := _f.ParseUint(_adgfa.Value, 10, 32)
			if _fafca != nil {
				return _fafca
			}
			_gfgb := uint32(_gdfgg)
			_eedg.BldLvlAttr = &_gfgb
			continue
		}
		if _adgfa.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_dfca, _cfaeg := _f.ParseBool(_adgfa.Value)
			if _cfaeg != nil {
				return _cfaeg
			}
			_eedg.AnimBgAttr = &_dfca
			continue
		}
		if _adgfa.Name.Local == "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067" {
			_aecab, _egeb := _f.ParseBool(_adgfa.Value)
			if _egeb != nil {
				return _egeb
			}
			_eedg.AutoUpdateAnimBgAttr = &_aecab
			continue
		}
		if _adgfa.Name.Local == "\u0072\u0065\u0076" {
			_deeda, _dbdeg := _f.ParseBool(_adgfa.Value)
			if _dbdeg != nil {
				return _dbdeg
			}
			_eedg.RevAttr = &_deeda
			continue
		}
		if _adgfa.Name.Local == "\u0061d\u0076\u0041\u0075\u0074\u006f" {
			_ecced, _adff := ParseUnionST_TLTime(_adgfa.Value)
			if _adff != nil {
				return _adff
			}
			_eedg.AdvAutoAttr = &_ecced
			continue
		}
		if _adgfa.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bcdceb, _dcafe := _f.ParseUint(_adgfa.Value, 10, 32)
			if _dcafe != nil {
				return _dcafe
			}
			_cgae := uint32(_bcdceb)
			_eedg.SpidAttr = &_cgae
			continue
		}
		if _adgfa.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_dffbd, _aaeeg := _f.ParseUint(_adgfa.Value, 10, 32)
			if _aaeeg != nil {
				return _aaeeg
			}
			_eegb := uint32(_dffbd)
			_eedg.GrpIdAttr = &_eegb
			continue
		}
		if _adgfa.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_fadea, _ggfab := _f.ParseBool(_adgfa.Value)
			if _ggfab != nil {
				return _ggfab
			}
			_eedg.UiExpandAttr = &_fadea
			continue
		}
	}
_cfbf:
	for {
		_debe, _dfedd := d.Token()
		if _dfedd != nil {
			return _dfedd
		}
		switch _cebed := _debe.(type) {
		case _b.StartElement:
			switch _cebed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}:
				_eedg.TmplLst = NewCT_TLTemplateList()
				if _gbfg := d.DecodeElement(_eedg.TmplLst, &_cebed); _gbfg != nil {
					return _gbfg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064Pa\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025\u0076", _cebed.Name)
				if _daegc := d.Skip(); _daegc != nil {
					return _daegc
				}
			}
		case _b.EndElement:
			break _cfbf
		case _b.CharData:
		}
	}
	return nil
}

func (_ecgg *CT_SplitTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecgg.OrientAttr != ST_DirectionUnset {
		_dcaee, _gabbg := _ecgg.OrientAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _gabbg != nil {
			return _gabbg
		}
		start.Attr = append(start.Attr, _dcaee)
	}
	if _ecgg.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_dcbd, _fgefe := _ecgg.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _fgefe != nil {
			return _fgefe
		}
		start.Attr = append(start.Attr, _dcbd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bcdcg ST_TLAnimateEffectTransition) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_agbff := _b.Attr{}
	_agbff.Name = name
	switch _bcdcg {
	case ST_TLAnimateEffectTransitionUnset:
		_agbff.Value = ""
	case ST_TLAnimateEffectTransitionIn:
		_agbff.Value = "\u0069\u006e"
	case ST_TLAnimateEffectTransitionOut:
		_agbff.Value = "\u006f\u0075\u0074"
	case ST_TLAnimateEffectTransitionNone:
		_agbff.Value = "\u006e\u006f\u006e\u0065"
	}
	return _agbff, nil
}

// ValidateWithPath validates the CT_CustomerData and its children, prefixing error messages with path
func (_acba *CT_CustomerData) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLTimeCondition and its children
func (_daag *CT_TLTimeCondition) Validate() error {
	return _daag.ValidateWithPath("\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e")
}

func NewEG_ChildSlide() *EG_ChildSlide { _gafa := &EG_ChildSlide{}; return _gafa }

func (_bcgdc *CT_Rel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _befc := range start.Attr {
		if _befc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _befc.Name.Local == "\u0069\u0064" || _befc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _befc.Name.Local == "\u0069\u0064" {
			_abcce, _adaed := _befc.Value, error(nil)
			if _adaed != nil {
				return _adaed
			}
			_bcgdc.IdAttr = _abcce
			continue
		}
	}
	for {
		_aaee, _efgc := d.Token()
		if _efgc != nil {
			return _fd.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _efgc)
		}
		if _ceadg, _ddee := _aaee.(_b.EndElement); _ddee && _ceadg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gdggf *ST_TLCommandType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gdggf = 0
	case "\u0065\u0076\u0074":
		*_gdggf = 1
	case "\u0063\u0061\u006c\u006c":
		*_gdggf = 2
	case "\u0076\u0065\u0072\u0062":
		*_gdggf = 3
	}
	return nil
}

// Validate validates the CT_StringTag and its children
func (_efgae *CT_StringTag) Validate() error {
	return _efgae.ValidateWithPath("\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067")
}

type CT_CustomShowId struct {

	// Custom Show Identifier
	IdAttr uint32
}

func (_bceed *CT_Empty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_gce *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _def := _gce.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _def != nil {
		return _def
	}
	if _eegg := _gce.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _eegg != nil {
		return _eegg
	}
	if _abc := _gce.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _abc != nil {
		return _abc
	}
	return nil
}

func (_ccff *CT_ConnectorNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ccfb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_ccff.CNvPr, _ccfb)
	_gefbe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ccff.CNvCxnSpPr, _gefbe)
	_abbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_ccff.NvPr, _abbd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SlideSyncProperties struct {

	// Server's Slide File ID
	ServerSldIdAttr string

	// Server's Slide File's modification date/time
	ServerSldModifiedTimeAttr _d.Time

	// Client Slide Insertion date/time
	ClientInsertedTimeAttr _d.Time
	ExtLst                 *CT_ExtensionList
}

type CT_TLSetBehavior struct {

	// Common Behavior
	CBhvr *CT_TLCommonBehaviorData

	// To
	To *CT_TLAnimVariant
}

// ValidateWithPath validates the CT_WheelTransition and its children, prefixing error messages with path
func (_ceccf *CT_WheelTransition) ValidateWithPath(path string) error { return nil }

func (_acg *AG_TLBuild) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ea := range start.Attr {
		if _ea.Name.Local == "\u0073\u0070\u0069\u0064" {
			_acc, _cc := _f.ParseUint(_ea.Value, 10, 32)
			if _cc != nil {
				return _cc
			}
			_gab := uint32(_acc)
			_acg.SpidAttr = &_gab
			continue
		}
		if _ea.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_af, _bg := _f.ParseUint(_ea.Value, 10, 32)
			if _bg != nil {
				return _bg
			}
			_gca := uint32(_af)
			_acg.GrpIdAttr = &_gca
			continue
		}
		if _ea.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cd, _gf := _f.ParseBool(_ea.Value)
			if _gf != nil {
				return _gf
			}
			_acg.UiExpandAttr = &_cd
			continue
		}
	}
	for {
		_gbd, _da := d.Token()
		if _da != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u003a\u0020%\u0073", _da)
		}
		if _ag, _cga := _gbd.(_b.EndElement); _cga && _ag.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterTextStyles and its children, prefixing error messages with path
func (_edga *CT_SlideMasterTextStyles) ValidateWithPath(path string) error {
	if _edga.TitleStyle != nil {
		if _beca := _edga.TitleStyle.ValidateWithPath(path + "/\u0054\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _beca != nil {
			return _beca
		}
	}
	if _edga.BodyStyle != nil {
		if _bfaef := _edga.BodyStyle.ValidateWithPath(path + "\u002f\u0042\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"); _bfaef != nil {
			return _bfaef
		}
	}
	if _edga.OtherStyle != nil {
		if _badf := _edga.OtherStyle.ValidateWithPath(path + "/\u004f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"); _badf != nil {
			return _badf
		}
	}
	if _edga.ExtLst != nil {
		if _gcee := _edga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcee != nil {
			return _gcee
		}
	}
	return nil
}

func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_cada := &CT_GraphicalObjectFrameNonVisual{}
	_cada.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_cada.CNvGraphicFramePr = _bc.NewCT_NonVisualGraphicFrameProperties()
	_cada.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _cada
}

// Validate validates the CT_OptionalBlackTransition and its children
func (_fcfg *CT_OptionalBlackTransition) Validate() error {
	return _fcfg.ValidateWithPath("\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_SlideViewProperties and its children, prefixing error messages with path
func (_edae *CT_SlideViewProperties) ValidateWithPath(path string) error {
	if _febb := _edae.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _febb != nil {
		return _febb
	}
	if _edae.ExtLst != nil {
		if _dcaeg := _edae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcaeg != nil {
			return _dcaeg
		}
	}
	return nil
}

type CmAuthorLst struct{ CT_CommentAuthorList }

func (_gdffc *CT_TLGraphicalObjectBuild) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdffc.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gdffc.SpidAttr)})
	}
	if _gdffc.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gdffc.GrpIdAttr)})
	}
	if _gdffc.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gdffc.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _gdffc.BldAsOne != nil {
		_bddeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}}
		e.EncodeElement(_gdffc.BldAsOne, _bddeb)
	}
	if _gdffc.BldSub != nil {
		_fgcdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0053\u0075\u0062"}}
		e.EncodeElement(_gdffc.BldSub, _fgcdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_TLCommonTimeNodeData() *CT_TLCommonTimeNodeData {
	_aacg := &CT_TLCommonTimeNodeData{}
	return _aacg
}

type SldMaster struct{ CT_SlideMaster }

func NewCT_TLAnimateRotationBehavior() *CT_TLAnimateRotationBehavior {
	_bcbg := &CT_TLAnimateRotationBehavior{}
	_bcbg.CBhvr = NewCT_TLCommonBehaviorData()
	return _bcbg
}

func (_cagfa *CT_OleObjectChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cabc:
	for {
		_dffd, _agbd := d.Token()
		if _agbd != nil {
			return _agbd
		}
		switch _cfag := _dffd.(type) {
		case _b.StartElement:
			switch _cfag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_cagfa.Embed = NewCT_OleObjectEmbed()
				if _ebcf := d.DecodeElement(_cagfa.Embed, &_cfag); _ebcf != nil {
					return _ebcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_cagfa.Link = NewCT_OleObjectLink()
				if _gfcg := d.DecodeElement(_cagfa.Link, &_cfag); _gfcg != nil {
					return _gfcg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _cfag.Name)
				if _bade := d.Skip(); _bade != nil {
					return _bade
				}
			}
		case _b.EndElement:
			break _cabc
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_IterateTypeUnset ST_IterateType = 0
	ST_IterateTypeEl    ST_IterateType = 1
	ST_IterateTypeWd    ST_IterateType = 2
	ST_IterateTypeLt    ST_IterateType = 3
)

type CT_CustomerDataList struct {

	// Customer Data
	CustData []*CT_CustomerData

	// Customer Data Tags
	Tags *CT_TagsData
}

type CT_SlideSorterViewProperties struct {

	// Show Formatting
	ShowFormattingAttr *bool

	// Base properties for Slide Sorter View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

func (_dddc ST_TransitionSpeed) ValidateWithPath(path string) error {
	switch _dddc {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dddc))
	}
	return nil
}

func (_gbdcg *CT_ShowInfoBrowse) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfdb := range start.Attr {
		if _bfdb.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072" {
			_bfaaag, _feba := _f.ParseBool(_bfdb.Value)
			if _feba != nil {
				return _feba
			}
			_gbdcg.ShowScrollbarAttr = &_bfaaag
			continue
		}
	}
	for {
		_fbdf, _abfg := d.Token()
		if _abfg != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042\u0072\u006f\u0077\u0073\u0065: \u0025\u0073", _abfg)
		}
		if _daee, _ddecg := _fbdf.(_b.EndElement); _ddecg && _daee.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gggga *CT_TLAnimateMotionBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gggga.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _ggcbb := range start.Attr {
		if _ggcbb.Name.Local == "\u006f\u0072\u0069\u0067\u0069\u006e" {
			_gggga.OriginAttr.UnmarshalXMLAttr(_ggcbb)
			continue
		}
		if _ggcbb.Name.Local == "\u0070\u0061\u0074\u0068" {
			_ebfg, _cdgae := _ggcbb.Value, error(nil)
			if _cdgae != nil {
				return _cdgae
			}
			_gggga.PathAttr = &_ebfg
			continue
		}
		if _ggcbb.Name.Local == "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065" {
			_gggga.PathEditModeAttr.UnmarshalXMLAttr(_ggcbb)
			continue
		}
		if _ggcbb.Name.Local == "\u0072\u0041\u006e\u0067" {
			_fbcgd, _ffbba := _f.ParseInt(_ggcbb.Value, 10, 32)
			if _ffbba != nil {
				return _ffbba
			}
			_aefec := int32(_fbcgd)
			_gggga.RAngAttr = &_aefec
			continue
		}
		if _ggcbb.Name.Local == "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073" {
			_bfdc, _adddf := _ggcbb.Value, error(nil)
			if _adddf != nil {
				return _adddf
			}
			_gggga.PtsTypesAttr = &_bfdc
			continue
		}
	}
_cacc:
	for {
		_fcbbd, _bfgeb := d.Token()
		if _bfgeb != nil {
			return _bfgeb
		}
		switch _fdgad := _fcbbd.(type) {
		case _b.StartElement:
			switch _fdgad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _afbeb := d.DecodeElement(_gggga.CBhvr, &_fdgad); _afbeb != nil {
					return _afbeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_gggga.By = NewCT_TLPoint()
				if _fabe := d.DecodeElement(_gggga.By, &_fdgad); _fabe != nil {
					return _fabe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_gggga.From = NewCT_TLPoint()
				if _faeb := d.DecodeElement(_gggga.From, &_fdgad); _faeb != nil {
					return _faeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_gggga.To = NewCT_TLPoint()
				if _fdgfa := d.DecodeElement(_gggga.To, &_fdgad); _fdgfa != nil {
					return _fdgfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}:
				_gggga.RCtr = NewCT_TLPoint()
				if _cgggg := d.DecodeElement(_gggga.RCtr, &_fdgad); _cgggg != nil {
					return _cgggg
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _fdgad.Name)
				if _abffc := d.Skip(); _abffc != nil {
					return _abffc
				}
			}
		case _b.EndElement:
			break _cacc
		case _b.CharData:
		}
	}
	return nil
}

func (_agefg ST_TLTimeNodePresetClassType) Validate() error { return _agefg.ValidateWithPath("") }

func (_dgbg *CT_SlideSorterViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgbg.ShowFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_dgbg.ShowFormattingAttr))})
	}
	e.EncodeToken(start)
	_gbec := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_dgbg.CViewPr, _gbec)
	if _dgbg.ExtLst != nil {
		_gfafd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgbg.ExtLst, _gfafd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantFloatVal and its children, prefixing error messages with path
func (_fddg *CT_TLAnimVariantFloatVal) ValidateWithPath(path string) error { return nil }

func (_gddegf ST_TLAnimateEffectTransition) String() string {
	switch _gddegf {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e"
	case 2:
		return "\u006f\u0075\u0074"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func (_ebgf *CT_CustomerData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _accc := range start.Attr {
		if _accc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _accc.Name.Local == "\u0069\u0064" || _accc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _accc.Name.Local == "\u0069\u0064" {
			_fadf, _cfdgd := _accc.Value, error(nil)
			if _cfdgd != nil {
				return _cfdgd
			}
			_ebgf.IdAttr = _fadf
			continue
		}
	}
	for {
		_abgd, _abfb := d.Token()
		if _abfb != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006de\u0072\u0044\u0061t\u0061:\u0020\u0025\u0073", _abfb)
		}
		if _fccg, _bad := _abgd.(_b.EndElement); _bad && _fccg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ShowInfoBrowse() *CT_ShowInfoBrowse { _bebdc := &CT_ShowInfoBrowse{}; return _bebdc }

type CT_CommonSlideData struct {

	// Name
	NameAttr *string

	// Slide Background
	Bg *CT_Background

	// Shape Tree
	SpTree *CT_GroupShape

	// Customer Data List
	CustDataLst *CT_CustomerDataList

	// List of controls
	Controls *CT_ControlList
	ExtLst   *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLAnimateMotionBehavior and its children, prefixing error messages with path
func (_gagde *CT_TLAnimateMotionBehavior) ValidateWithPath(path string) error {
	if _bfaae := _gagde.OriginAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0067\u0069\u006e\u0041\u0074\u0074\u0072"); _bfaae != nil {
		return _bfaae
	}
	if _cfee := _gagde.PathEditModeAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u0045\u0064\u0069\u0074\u004d\u006f\u0064e\u0041\u0074\u0074\u0072"); _cfee != nil {
		return _cfee
	}
	if _adgc := _gagde.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _adgc != nil {
		return _adgc
	}
	if _gagde.By != nil {
		if _gfdgc := _gagde.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _gfdgc != nil {
			return _gfdgc
		}
	}
	if _gagde.From != nil {
		if _dgaba := _gagde.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _dgaba != nil {
			return _dgaba
		}
	}
	if _gagde.To != nil {
		if _beee := _gagde.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _beee != nil {
			return _beee
		}
	}
	if _gagde.RCtr != nil {
		if _bfbf := _gagde.RCtr.ValidateWithPath(path + "\u002f\u0052\u0043t\u0072"); _bfbf != nil {
			return _bfbf
		}
	}
	return nil
}

func (_cecff ST_TLTimeNodeRestartType) ValidateWithPath(path string) error {
	switch _cecff {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cecff))
	}
	return nil
}

func (_ddebc *CT_SlideRelationshipListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edcd := range start.Attr {
		if _edcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edcd.Name.Local == "\u0069\u0064" || _edcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edcd.Name.Local == "\u0069\u0064" {
			_badfd, _bfcb := _edcd.Value, error(nil)
			if _bfcb != nil {
				return _bfcb
			}
			_ddebc.IdAttr = _badfd
			continue
		}
	}
	for {
		_eebcg, _gbcef := d.Token()
		if _gbcef != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u003a\u0020\u0025\u0073", _gbcef)
		}
		if _agfbb, _gdcbb := _eebcg.(_b.EndElement); _gdcbb && _agfbb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eebcga *ST_TLAnimateColorSpace) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eebcga = 0
	case "\u0072\u0067\u0062":
		*_eebcga = 1
	case "\u0068\u0073\u006c":
		*_eebcga = 2
	}
	return nil
}

func (_egf *CT_Comment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _egf.AuthorIdAttr)})
	if _egf.DtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_egf.DtAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _egf.IdxAttr)})
	e.EncodeToken(start)
	_dbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070o\u0073"}}
	e.EncodeElement(_egf.Pos, _dbc)
	_agac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0065\u0078\u0074"}}
	_g.AddPreserveSpaceAttr(&_agac, _egf.Text)
	e.EncodeElement(_egf.Text, _agac)
	if _egf.ExtLst != nil {
		_gegbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egf.ExtLst, _gegbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_TagList() *CT_TagList { _ccgab := &CT_TagList{}; return _ccgab }

// ValidateWithPath validates the HandoutMaster and its children, prefixing error messages with path
func (_gdegc *HandoutMaster) ValidateWithPath(path string) error {
	if _efgbg := _gdegc.CT_HandoutMaster.ValidateWithPath(path); _efgbg != nil {
		return _efgbg
	}
	return nil
}

func (_aedg *CT_PhotoAlbum) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aedg.BwAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aedg.BwAttr))})
	}
	if _aedg.ShowCaptionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aedg.ShowCaptionsAttr))})
	}
	if _aedg.LayoutAttr != ST_PhotoAlbumLayoutUnset {
		_cffcf, _edca := _aedg.LayoutAttr.MarshalXMLAttr(_b.Name{Local: "\u006c\u0061\u0079\u006f\u0075\u0074"})
		if _edca != nil {
			return _edca
		}
		start.Attr = append(start.Attr, _cffcf)
	}
	if _aedg.FrameAttr != ST_PhotoAlbumFrameShapeUnset {
		_gefaa, _effee := _aedg.FrameAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0072\u0061m\u0065"})
		if _effee != nil {
			return _effee
		}
		start.Attr = append(start.Attr, _gefaa)
	}
	e.EncodeToken(start)
	if _aedg.ExtLst != nil {
		_eggcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aedg.ExtLst, _eggcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fgcab *CT_TLIterateData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgcab.TypeAttr != ST_IterateTypeUnset {
		_geebf, _acbag := _fgcab.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _acbag != nil {
			return _acbag
		}
		start.Attr = append(start.Attr, _geebf)
	}
	if _fgcab.BackwardsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_fgcab.BackwardsAttr))})
	}
	e.EncodeToken(start)
	if _fgcab.TmAbs != nil {
		_dagf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006d\u0041\u0062\u0073"}}
		e.EncodeElement(_fgcab.TmAbs, _dagf)
	}
	if _fgcab.TmPct != nil {
		_fagg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006d\u0050\u0063\u0074"}}
		e.EncodeElement(_fgcab.TmPct, _fagg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func ParseUnionST_PositivePercentage(s string) (_bc.ST_PositivePercentage, error) {
	return _bc.ParseUnionST_PositivePercentage(s)
}

func (_fddca ST_SlideSizeType) ValidateWithPath(path string) error {
	switch _fddca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fddca))
	}
	return nil
}

func NewCT_TLAnimateColorBehavior() *CT_TLAnimateColorBehavior {
	_fceca := &CT_TLAnimateColorBehavior{}
	_fceca.CBhvr = NewCT_TLCommonBehaviorData()
	return _fceca
}

type CT_TLCommonBehaviorData struct {

	// Additive
	AdditiveAttr ST_TLBehaviorAdditiveType

	// Accumulate
	AccumulateAttr ST_TLBehaviorAccumulateType

	// Transform Type
	XfrmTypeAttr ST_TLBehaviorTransformType

	// From
	FromAttr *string

	// To
	ToAttr *string

	// By
	ByAttr *string

	// Runtime Context
	RctxAttr *string

	// Override
	OverrideAttr ST_TLBehaviorOverrideType
	CTn          *CT_TLCommonTimeNodeData

	// Target Element
	TgtEl *CT_TLTimeTargetElement

	// Attribute Name List
	AttrNameLst *CT_TLBehaviorAttributeNameList
}

func (_bgffa ST_TLDiagramBuildType) ValidateWithPath(path string) error {
	switch _bgffa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgffa))
	}
	return nil
}

type CT_TLAnimVariantFloatVal struct {

	// Value
	ValAttr float32
}

func (_cebfc *EG_ChildSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cebfc.ClrMapOvr != nil {
		_gbdg := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_cebfc.ClrMapOvr, _gbdg)
	}
	return nil
}

func (_dffdc ST_WebScreenSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dffdc.String(), start)
}

func (_efecb *CT_TLTriggerTimeNodeID) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _efecb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SlideTransitionChoice struct {
	Blinds    *CT_OrientationTransition
	Checker   *CT_OrientationTransition
	Circle    *CT_Empty
	Dissolve  *CT_Empty
	Comb      *CT_OrientationTransition
	Cover     *CT_EightDirectionTransition
	Cut       *CT_OptionalBlackTransition
	Diamond   *CT_Empty
	Fade      *CT_OptionalBlackTransition
	Newsflash *CT_Empty
	Plus      *CT_Empty
	Pull      *CT_EightDirectionTransition
	Push      *CT_SideDirectionTransition
	Random    *CT_Empty
	RandomBar *CT_OrientationTransition
	Split     *CT_SplitTransition
	Strips    *CT_CornerDirectionTransition
	Wedge     *CT_Empty
	Wheel     *CT_WheelTransition
	Wipe      *CT_SideDirectionTransition
	Zoom      *CT_InOutTransition
}

type ST_SlideLayoutType byte

func (_ecdbf ST_TLAnimateMotionBehaviorOrigin) ValidateWithPath(path string) error {
	switch _ecdbf {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecdbf))
	}
	return nil
}

// Validate validates the CT_CustomShowId and its children
func (_dgf *CT_CustomShowId) Validate() error {
	return _dgf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064")
}

type CT_TLAnimateBehavior struct {

	// By
	ByAttr *string

	// From
	FromAttr *string

	// To
	ToAttr *string

	// Calculation Mode
	CalcmodeAttr ST_TLAnimateBehaviorCalcMode

	// Value Type
	ValueTypeAttr ST_TLAnimateBehaviorValueType
	CBhvr         *CT_TLCommonBehaviorData

	// Time Animated Value List
	TavLst *CT_TLTimeAnimateValueList
}

func (_gbdce *CT_Placeholder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbdce.TypeAttr != ST_PlaceholderTypeUnset {
		_bddb, _ffag := _gbdce.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ffag != nil {
			return _ffag
		}
		start.Attr = append(start.Attr, _bddb)
	}
	if _gbdce.OrientAttr != ST_DirectionUnset {
		_bdbc, _cebe := _gbdce.OrientAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _cebe != nil {
			return _cebe
		}
		start.Attr = append(start.Attr, _bdbc)
	}
	if _gbdce.SzAttr != ST_PlaceholderSizeUnset {
		_fdfc, _aadb := _gbdce.SzAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u007a"})
		if _aadb != nil {
			return _aadb
		}
		start.Attr = append(start.Attr, _fdfc)
	}
	if _gbdce.IdxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064\u0078"}, Value: _fd.Sprintf("\u0025\u0076", *_gbdce.IdxAttr)})
	}
	if _gbdce.HasCustomPromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gbdce.HasCustomPromptAttr))})
	}
	e.EncodeToken(start)
	if _gbdce.ExtLst != nil {
		_bdac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbdce.ExtLst, _bdac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_SlideTransition() *CT_SlideTransition { _abbgf := &CT_SlideTransition{}; return _abbgf }

const (
	ST_TLTimeNodePresetClassTypeUnset     ST_TLTimeNodePresetClassType = 0
	ST_TLTimeNodePresetClassTypeEntr      ST_TLTimeNodePresetClassType = 1
	ST_TLTimeNodePresetClassTypeExit      ST_TLTimeNodePresetClassType = 2
	ST_TLTimeNodePresetClassTypeEmph      ST_TLTimeNodePresetClassType = 3
	ST_TLTimeNodePresetClassTypePath      ST_TLTimeNodePresetClassType = 4
	ST_TLTimeNodePresetClassTypeVerb      ST_TLTimeNodePresetClassType = 5
	ST_TLTimeNodePresetClassTypeMediacall ST_TLTimeNodePresetClassType = 6
)

func (_cfaec *CT_TLByAnimateColorTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cfaec.Rgb != nil {
		_aafa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072g\u0062"}}
		e.EncodeElement(_cfaec.Rgb, _aafa)
	}
	if _cfaec.Hsl != nil {
		_bbbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068s\u006c"}}
		e.EncodeElement(_cfaec.Hsl, _bbbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gbegb ST_TLTimeNodeSyncType) String() string {
	switch _gbegb {
	case 0:
		return ""
	case 1:
		return "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case 2:
		return "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return ""
}

func NewCT_NormalViewProperties() *CT_NormalViewProperties {
	_ggfc := &CT_NormalViewProperties{}
	_ggfc.RestoredLeft = NewCT_NormalViewPortion()
	_ggfc.RestoredTop = NewCT_NormalViewPortion()
	return _ggfc
}

func (_badfg ST_TransitionSpeed) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gcffd := _b.Attr{}
	_gcffd.Name = name
	switch _badfg {
	case ST_TransitionSpeedUnset:
		_gcffd.Value = ""
	case ST_TransitionSpeedSlow:
		_gcffd.Value = "\u0073\u006c\u006f\u0077"
	case ST_TransitionSpeedMed:
		_gcffd.Value = "\u006d\u0065\u0064"
	case ST_TransitionSpeedFast:
		_gcffd.Value = "\u0066\u0061\u0073\u0074"
	}
	return _gcffd, nil
}

func (_ebd *CT_EightDirectionTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebd.DirAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_ebd.DirAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type SldSyncPr struct{ CT_SlideSyncProperties }

// ValidateWithPath validates the CT_CommonViewProperties and its children, prefixing error messages with path
func (_cae *CT_CommonViewProperties) ValidateWithPath(path string) error {
	if _fcac := _cae.Scale.ValidateWithPath(path + "\u002f\u0053\u0063\u0061\u006c\u0065"); _fcac != nil {
		return _fcac
	}
	if _ffe := _cae.Origin.ValidateWithPath(path + "\u002fO\u0072\u0069\u0067\u0069\u006e"); _ffe != nil {
		return _ffe
	}
	return nil
}

func (_bdfa *CT_HtmlPublishProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdbga := range start.Attr {
		if _fdbga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fdbga.Name.Local == "\u0069\u0064" || _fdbga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fdbga.Name.Local == "\u0069\u0064" {
			_fdeg, _ddbe := _fdbga.Value, error(nil)
			if _ddbe != nil {
				return _ddbe
			}
			_bdfa.IdAttr = _fdeg
			continue
		}
		if _fdbga.Name.Local == "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073" {
			_accef, _beba := _f.ParseBool(_fdbga.Value)
			if _beba != nil {
				return _beba
			}
			_bdfa.ShowSpeakerNotesAttr = &_accef
			continue
		}
		if _fdbga.Name.Local == "\u0074\u0061\u0072\u0067\u0065\u0074" {
			_dacgb, _abde := _fdbga.Value, error(nil)
			if _abde != nil {
				return _abde
			}
			_bdfa.TargetAttr = &_dacgb
			continue
		}
		if _fdbga.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_bcad, _acbd := _fdbga.Value, error(nil)
			if _acbd != nil {
				return _acbd
			}
			_bdfa.TitleAttr = &_bcad
			continue
		}
	}
_agab:
	for {
		_fcgcc, _eedf := d.Token()
		if _eedf != nil {
			return _eedf
		}
		switch _dfcf := _fcgcc.(type) {
		case _b.StartElement:
			switch _dfcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_bdfa.SldAll = NewCT_Empty()
				if _baaa := d.DecodeElement(_bdfa.SldAll, &_dfcf); _baaa != nil {
					return _baaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_bdfa.SldRg = NewCT_IndexRange()
				if _bgbb := d.DecodeElement(_bdfa.SldRg, &_dfcf); _bgbb != nil {
					return _bgbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_bdfa.CustShow = NewCT_CustomShowId()
				if _bccb := d.DecodeElement(_bdfa.CustShow, &_dfcf); _bccb != nil {
					return _bccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdfa.ExtLst = NewCT_ExtensionList()
				if _gedac := d.DecodeElement(_bdfa.ExtLst, &_dfcf); _gedac != nil {
					return _gedac
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _dfcf.Name)
				if _aacb := d.Skip(); _aacb != nil {
					return _aacb
				}
			}
		case _b.EndElement:
			break _agab
		case _b.CharData:
		}
	}
	return nil
}

func NewTagLst() *TagLst { _cege := &TagLst{}; _cege.CT_TagList = *NewCT_TagList(); return _cege }

// ValidateWithPath validates the CT_SlideSyncProperties and its children, prefixing error messages with path
func (_fddd *CT_SlideSyncProperties) ValidateWithPath(path string) error {
	if _fddd.ExtLst != nil {
		if _dbeed := _fddd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbeed != nil {
			return _dbeed
		}
	}
	return nil
}

func (_dged ST_TLAnimateColorDirection) ValidateWithPath(path string) error {
	switch _dged {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dged))
	}
	return nil
}

func (_bdaee *Notes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdaee.CT_NotesSlide = *NewCT_NotesSlide()
	for _, _fgagc := range start.Attr {
		if _fgagc.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_fbca, _bgcee := _f.ParseBool(_fgagc.Value)
			if _bgcee != nil {
				return _bgcee
			}
			_bdaee.ShowMasterSpAttr = &_fbca
			continue
		}
		if _fgagc.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_fddgf, _aafgd := _f.ParseBool(_fgagc.Value)
			if _aafgd != nil {
				return _aafgd
			}
			_bdaee.ShowMasterPhAnimAttr = &_fddgf
			continue
		}
	}
_cagfdg:
	for {
		_faag, _aagfae := d.Token()
		if _aagfae != nil {
			return _aagfae
		}
		switch _fgbbf := _faag.(type) {
		case _b.StartElement:
			switch _fgbbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _abdfd := d.DecodeElement(_bdaee.CSld, &_fgbbf); _abdfd != nil {
					return _abdfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_bdaee.ClrMapOvr = _bc.NewCT_ColorMappingOverride()
				if _bffff := d.DecodeElement(_bdaee.ClrMapOvr, &_fgbbf); _bffff != nil {
					return _bffff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdaee.ExtLst = NewCT_ExtensionListModify()
				if _cdfgc := d.DecodeElement(_bdaee.ExtLst, &_fgbbf); _cdfgc != nil {
					return _cdfgc
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004e\u006f\u0074e\u0073 \u0025\u0076", _fgbbf.Name)
				if _egbdc := d.Skip(); _egbdc != nil {
					return _egbdc
				}
			}
		case _b.EndElement:
			break _cagfdg
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLMediaNodeAudio struct {

	// Is Narration
	IsNarrationAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

func (_cfccg ST_TransitionCornerDirectionType) ValidateWithPath(path string) error {
	switch _cfccg {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfccg))
	}
	return nil
}

func NewCT_NotesSlide() *CT_NotesSlide {
	_fbda := &CT_NotesSlide{}
	_fbda.CSld = NewCT_CommonSlideData()
	return _fbda
}

type CT_TLAnimateEffectBehavior struct {

	// Transition
	TransitionAttr ST_TLAnimateEffectTransition

	// Filter
	FilterAttr *string

	// Property List
	PrLstAttr *string
	CBhvr     *CT_TLCommonBehaviorData

	// Progress
	Progress *CT_TLAnimVariant
}

func (_bgcce *CT_TLAnimateRotationBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgcce.ByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_bgcce.ByAttr)})
	}
	if _bgcce.FromAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_bgcce.FromAttr)})
	}
	if _bgcce.ToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_bgcce.ToAttr)})
	}
	e.EncodeToken(start)
	_dgbd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_bgcce.CBhvr, _dgbd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomerData and its children
func (_cee *CT_CustomerData) Validate() error {
	return _cee.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061")
}

// Validate validates the CT_ShowInfoKiosk and its children
func (_aggb *CT_ShowInfoKiosk) Validate() error {
	return _aggb.ValidateWithPath("\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b")
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_gbcb *CT_Connector) ValidateWithPath(path string) error {
	if _aeg := _gbcb.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _aeg != nil {
		return _aeg
	}
	if _agd := _gbcb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _agd != nil {
		return _agd
	}
	if _gbcb.Style != nil {
		if _gfbe := _gbcb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _gfbe != nil {
			return _gfbe
		}
	}
	if _gbcb.ExtLst != nil {
		if _aac := _gbcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aac != nil {
			return _aac
		}
	}
	return nil
}

func (_dfebec *ST_TLAnimateColorDirection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgeac, _adefbg := d.Token()
	if _adefbg != nil {
		return _adefbg
	}
	if _bfcfd, _gdfgd := _cgeac.(_b.EndElement); _gdfgd && _bfcfd.Name == start.Name {
		*_dfebec = 1
		return nil
	}
	if _cbgab, _cabge := _cgeac.(_b.CharData); !_cabge {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgeac)
	} else {
		switch string(_cbgab) {
		case "":
			*_dfebec = 0
		case "\u0063\u0077":
			*_dfebec = 1
		case "\u0063\u0063\u0077":
			*_dfebec = 2
		}
	}
	_cgeac, _adefbg = d.Token()
	if _adefbg != nil {
		return _adefbg
	}
	if _beacf, _eacfgb := _cgeac.(_b.EndElement); _eacfgb && _beacf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgeac)
}

func (_agfd *CT_HandoutMasterIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _agfd.HandoutMasterId != nil {
		_effef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_agfd.HandoutMasterId, _effef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_agbc ST_OleObjectFollowColorScheme) Validate() error { return _agbc.ValidateWithPath("") }

func (_ggdce ST_TLAnimateBehaviorCalcMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fdecg := _b.Attr{}
	_fdecg.Name = name
	switch _ggdce {
	case ST_TLAnimateBehaviorCalcModeUnset:
		_fdecg.Value = ""
	case ST_TLAnimateBehaviorCalcModeDiscrete:
		_fdecg.Value = "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case ST_TLAnimateBehaviorCalcModeLin:
		_fdecg.Value = "\u006c\u0069\u006e"
	case ST_TLAnimateBehaviorCalcModeFmla:
		_fdecg.Value = "\u0066\u006d\u006c\u0061"
	}
	return _fdecg, nil
}

func (_gfd *CT_CommonSlideData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfd.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gfd.NameAttr)})
	}
	e.EncodeToken(start)
	if _gfd.Bg != nil {
		_acbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_gfd.Bg, _acbg)
	}
	_gaac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0054\u0072\u0065\u0065"}}
	e.EncodeElement(_gfd.SpTree, _gaac)
	if _gfd.CustDataLst != nil {
		_faa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_gfd.CustDataLst, _faa)
	}
	if _gfd.Controls != nil {
		_ddgfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_gfd.Controls, _ddgfa)
	}
	if _gfd.ExtLst != nil {
		_agb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfd.ExtLst, _agb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cfbb *CT_PrintProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aaaaf := range start.Attr {
		if _aaaaf.Name.Local == "\u0070r\u006e\u0057\u0068\u0061\u0074" {
			_cfbb.PrnWhatAttr.UnmarshalXMLAttr(_aaaaf)
			continue
		}
		if _aaaaf.Name.Local == "\u0063l\u0072\u004d\u006f\u0064\u0065" {
			_cfbb.ClrModeAttr.UnmarshalXMLAttr(_aaaaf)
			continue
		}
		if _aaaaf.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073" {
			_cgead, _faga := _f.ParseBool(_aaaaf.Value)
			if _faga != nil {
				return _faga
			}
			_cfbb.HiddenSlidesAttr = &_cgead
			continue
		}
		if _aaaaf.Name.Local == "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072" {
			_adee, _gdaa := _f.ParseBool(_aaaaf.Value)
			if _gdaa != nil {
				return _gdaa
			}
			_cfbb.ScaleToFitPaperAttr = &_adee
			continue
		}
		if _aaaaf.Name.Local == "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073" {
			_fdda, _gdcf := _f.ParseBool(_aaaaf.Value)
			if _gdcf != nil {
				return _gdcf
			}
			_cfbb.FrameSlidesAttr = &_fdda
			continue
		}
	}
_fdee:
	for {
		_eddd, _eced := d.Token()
		if _eced != nil {
			return _eced
		}
		switch _gfga := _eddd.(type) {
		case _b.StartElement:
			switch _gfga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfbb.ExtLst = NewCT_ExtensionList()
				if _dceb := d.DecodeElement(_cfbb.ExtLst, &_gfga); _dceb != nil {
					return _dceb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gfga.Name)
				if _ccef := d.Skip(); _ccef != nil {
					return _ccef
				}
			}
		case _b.EndElement:
			break _fdee
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideTransition and its children, prefixing error messages with path
func (_fcec *CT_SlideTransition) ValidateWithPath(path string) error {
	if _geaef := _fcec.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _geaef != nil {
		return _geaef
	}
	if _fcec.Choice != nil {
		if _ddea := _fcec.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _ddea != nil {
			return _ddea
		}
	}
	if _fcec.SndAc != nil {
		if _acdge := _fcec.SndAc.ValidateWithPath(path + "\u002f\u0053\u006e\u0064\u0041\u0063"); _acdge != nil {
			return _acdge
		}
	}
	if _fcec.ExtLst != nil {
		if _gbag := _fcec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbag != nil {
			return _gbag
		}
	}
	return nil
}

type ST_TLTimeNodeType byte

// Validate validates the CT_TLAnimVariantStringVal and its children
func (_bdbdf *CT_TLAnimVariantStringVal) Validate() error {
	return _bdbdf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l")
}

func (_gbc *CT_ApplicationNonVisualDrawingProps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cag := range start.Attr {
		if _cag.Name.Local == "\u0069s\u0050\u0068\u006f\u0074\u006f" {
			_acgg, _cfb := _f.ParseBool(_cag.Value)
			if _cfb != nil {
				return _cfb
			}
			_gbc.IsPhotoAttr = &_acgg
			continue
		}
		if _cag.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_gfe, _ec := _f.ParseBool(_cag.Value)
			if _ec != nil {
				return _ec
			}
			_gbc.UserDrawnAttr = &_gfe
			continue
		}
	}
_dag:
	for {
		_dec, _ecd := d.Token()
		if _ecd != nil {
			return _ecd
		}
		switch _cdg := _dec.(type) {
		case _b.StartElement:
			switch _cdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068"}:
				_gbc.Ph = NewCT_Placeholder()
				if _fca := d.DecodeElement(_gbc.Ph, &_cdg); _fca != nil {
					return _fca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_gbc.AudioCd = _bc.NewCT_AudioCD()
				if _fe := d.DecodeElement(_gbc.AudioCd, &_cdg); _fe != nil {
					return _fe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_gbc.WavAudioFile = _bc.NewCT_EmbeddedWAVAudioFile()
				if _gaf := d.DecodeElement(_gbc.WavAudioFile, &_cdg); _gaf != nil {
					return _gaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_gbc.AudioFile = _bc.NewCT_AudioFile()
				if _eac := d.DecodeElement(_gbc.AudioFile, &_cdg); _eac != nil {
					return _eac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_gbc.VideoFile = _bc.NewCT_VideoFile()
				if _cgf := d.DecodeElement(_gbc.VideoFile, &_cdg); _cgf != nil {
					return _cgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_gbc.QuickTimeFile = _bc.NewCT_QuickTimeFile()
				if _gef := d.DecodeElement(_gbc.QuickTimeFile, &_cdg); _gef != nil {
					return _gef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_gbc.CustDataLst = NewCT_CustomerDataList()
				if _gbeb := d.DecodeElement(_gbc.CustDataLst, &_cdg); _gbeb != nil {
					return _gbeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbc.ExtLst = NewCT_ExtensionList()
				if _dbe := d.DecodeElement(_gbc.ExtLst, &_cdg); _dbe != nil {
					return _dbe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041p\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006eg\u0050\u0072\u006f\u0070\u0073 \u0025\u0076", _cdg.Name)
				if _bfa := d.Skip(); _bfa != nil {
					return _bfa
				}
			}
		case _b.EndElement:
			break _dag
		case _b.CharData:
		}
	}
	return nil
}

type CT_NotesViewProperties struct {

	// Common Slide View Properties
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

// ValidateWithPath validates the CT_HtmlPublishProperties and its children, prefixing error messages with path
func (_ggbc *CT_HtmlPublishProperties) ValidateWithPath(path string) error {
	if _ggbc.SldAll != nil {
		if _gccf := _ggbc.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _gccf != nil {
			return _gccf
		}
	}
	if _ggbc.SldRg != nil {
		if _aabg := _ggbc.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _aabg != nil {
			return _aabg
		}
	}
	if _ggbc.CustShow != nil {
		if _aefe := _ggbc.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _aefe != nil {
			return _aefe
		}
	}
	if _ggbc.ExtLst != nil {
		if _bgab := _ggbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgab != nil {
			return _bgab
		}
	}
	return nil
}

func NewCT_CommonSlideViewProperties() *CT_CommonSlideViewProperties {
	_ddfd := &CT_CommonSlideViewProperties{}
	_ddfd.CViewPr = NewCT_CommonViewProperties()
	return _ddfd
}

func (_bbdeg ST_PrintColorMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbdeg.String(), start)
}

type CT_OrientationTransition struct {

	// Transition Direction
	DirAttr ST_Direction
}

func (_bddg *CT_TLTimeConditionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_acdfa:
	for {
		_ddeg, _dabcd := d.Token()
		if _dabcd != nil {
			return _dabcd
		}
		switch _deecff := _ddeg.(type) {
		case _b.StartElement:
			switch _deecff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}:
				_cbeae := NewCT_TLTimeCondition()
				if _adfdf := d.DecodeElement(_cbeae, &_deecff); _adfdf != nil {
					return _adfdf
				}
				_bddg.Cond = append(_bddg.Cond, _cbeae)
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _deecff.Name)
				if _ecaee := d.Skip(); _ecaee != nil {
					return _ecaee
				}
			}
		case _b.EndElement:
			break _acdfa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TagsData and its children, prefixing error messages with path
func (_dgda *CT_TagsData) ValidateWithPath(path string) error { return nil }

func (_bdfeg ST_SlideLayoutType) Validate() error { return _bdfeg.ValidateWithPath("") }

type CT_NormalViewPortion struct {

	// Normal View Dimension Size
	SzAttr _bc.ST_PositiveFixedPercentage

	// Auto Adjust Normal View
	AutoAdjustAttr *bool
}

const (
	ST_ViewTypeUnset            ST_ViewType = 0
	ST_ViewTypeSldView          ST_ViewType = 1
	ST_ViewTypeSldMasterView    ST_ViewType = 2
	ST_ViewTypeNotesView        ST_ViewType = 3
	ST_ViewTypeHandoutView      ST_ViewType = 4
	ST_ViewTypeNotesMasterView  ST_ViewType = 5
	ST_ViewTypeOutlineView      ST_ViewType = 6
	ST_ViewTypeSldSorterView    ST_ViewType = 7
	ST_ViewTypeSldThumbnailView ST_ViewType = 8
)

func (_aaaac *ST_TLBehaviorAccumulateType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aaaac = 0
	case "\u006e\u006f\u006e\u0065":
		*_aaaac = 1
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_aaaac = 2
	}
	return nil
}

func (_beffa ST_TLBehaviorOverrideType) String() string {
	switch _beffa {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return ""
}

type CT_TLByRgbColorTransform struct {

	// Red
	RAttr _bc.ST_FixedPercentage

	// Green
	GAttr _bc.ST_FixedPercentage

	// Blue
	BAttr _bc.ST_FixedPercentage
}

type CT_GraphicalObjectFrame struct {
	BwModeAttr _bc.ST_BlackWhiteMode

	// Non-Visual Properties for a Graphic Frame
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual

	// 2D Transform for Graphic Frame
	Xfrm    *_bc.CT_Transform2D
	Graphic *_bc.Graphic

	// Extension List with Modification Flag
	ExtLst *CT_ExtensionListModify
}

func NewCT_TLAnimateBehavior() *CT_TLAnimateBehavior {
	_ggddgb := &CT_TLAnimateBehavior{}
	_ggddgb.CBhvr = NewCT_TLCommonBehaviorData()
	return _ggddgb
}

func NewCT_SlideRelationshipList() *CT_SlideRelationshipList {
	_addd := &CT_SlideRelationshipList{}
	return _addd
}

func (_bb *CT_Background) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bca := range start.Attr {
		if _bca.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_bb.BwModeAttr.UnmarshalXMLAttr(_bca)
			continue
		}
	}
_cac:
	for {
		_gde, _bfg := d.Token()
		if _bfg != nil {
			return _bfg
		}
		switch _bga := _gde.(type) {
		case _b.StartElement:
			switch _bga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_bb.BgPr = NewCT_BackgroundProperties()
				if _cbb := d.DecodeElement(_bb.BgPr, &_bga); _cbb != nil {
					return _cbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_bb.BgRef = _bc.NewCT_StyleMatrixReference()
				if _eeb := d.DecodeElement(_bb.BgRef, &_bga); _eeb != nil {
					return _eeb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _bga.Name)
				if _gff := d.Skip(); _gff != nil {
					return _gff
				}
			}
		case _b.EndElement:
			break _cac
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomShowId and its children, prefixing error messages with path
func (_baf *CT_CustomShowId) ValidateWithPath(path string) error { return nil }

func NewCT_CommonSlideData() *CT_CommonSlideData {
	_edc := &CT_CommonSlideData{}
	_edc.SpTree = NewCT_GroupShape()
	return _edc
}

func (_gcece *EG_ChildSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebfb:
	for {
		_ffcff, _ffbe := d.Token()
		if _ffbe != nil {
			return _ffbe
		}
		switch _dgbdg := _ffcff.(type) {
		case _b.StartElement:
			switch _dgbdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_gcece.ClrMapOvr = _bc.NewCT_ColorMappingOverride()
				if _cgcf := d.DecodeElement(_gcece.ClrMapOvr, &_dgbdg); _cgcf != nil {
					return _cgcf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043h\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _dgbdg.Name)
				if _aeebe := d.Skip(); _aeebe != nil {
					return _aeebe
				}
			}
		case _b.EndElement:
			break _ebfb
		case _b.CharData:
		}
	}
	return nil
}

func (_ffda *CT_TLTimeNodeSequence) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffda.ConcurrentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ffda.ConcurrentAttr))})
	}
	if _ffda.PrevAcAttr != ST_TLPreviousActionTypeUnset {
		_aece, _facaa := _ffda.PrevAcAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0065\u0076\u0041\u0063"})
		if _facaa != nil {
			return _facaa
		}
		start.Attr = append(start.Attr, _aece)
	}
	if _ffda.NextAcAttr != ST_TLNextActionTypeUnset {
		_gacc, _bgbeb := _ffda.NextAcAttr.MarshalXMLAttr(_b.Name{Local: "\u006e\u0065\u0078\u0074\u0041\u0063"})
		if _bgbeb != nil {
			return _bgbeb
		}
		start.Attr = append(start.Attr, _gacc)
	}
	e.EncodeToken(start)
	_fcbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_ffda.CTn, _fcbd)
	if _ffda.PrevCondLst != nil {
		_cfcb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ffda.PrevCondLst, _cfcb)
	}
	if _ffda.NextCondLst != nil {
		_geddg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ffda.NextCondLst, _geddg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_affg *CT_Shape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _affg.UseBgFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_affg.UseBgFillAttr))})
	}
	e.EncodeToken(start)
	_bbde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_affg.NvSpPr, _bbde)
	_gafb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_affg.SpPr, _gafb)
	if _affg.Style != nil {
		_bggdg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_affg.Style, _bggdg)
	}
	if _affg.TxBody != nil {
		_dddfc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_affg.TxBody, _dddfc)
	}
	if _affg.ExtLst != nil {
		_deegg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_affg.ExtLst, _deegg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_eafdc ST_IterateType) ValidateWithPath(path string) error {
	switch _eafdc {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eafdc))
	}
	return nil
}

func (_fcaee *EG_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcaee.Ext != nil {
		_defce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _gbeab := range _fcaee.Ext {
			e.EncodeElement(_gbeab, _defce)
		}
	}
	return nil
}

type CT_CommonSlideViewProperties struct {

	// Snap Objects to Grid
	SnapToGridAttr *bool

	// Snap Objects to Objects
	SnapToObjectsAttr *bool

	// Show Guides in View
	ShowGuidesAttr *bool

	// Base properties for Slide View
	CViewPr *CT_CommonViewProperties

	// List of Guides
	GuideLst *CT_GuideList
}

// Validate validates the CT_CustomShow and its children
func (_cdga *CT_CustomShow) Validate() error {
	return _cdga.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077")
}

const (
	ST_TLAnimateEffectTransitionUnset ST_TLAnimateEffectTransition = 0
	ST_TLAnimateEffectTransitionIn    ST_TLAnimateEffectTransition = 1
	ST_TLAnimateEffectTransitionOut   ST_TLAnimateEffectTransition = 2
	ST_TLAnimateEffectTransitionNone  ST_TLAnimateEffectTransition = 3
)

func (_dfbaa ST_PrintColorMode) ValidateWithPath(path string) error {
	switch _dfbaa {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfbaa))
	}
	return nil
}

func (_degcg ST_TLNextActionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_degcg.String(), start)
}

func ParseUnionST_TLTimeAnimateValueTime(s string) (ST_TLTimeAnimateValueTime, error) {
	return ST_TLTimeAnimateValueTime{}, nil
}

type ST_OleObjectFollowColorScheme byte

func (_adbec ST_TLTriggerEvent) ValidateWithPath(path string) error {
	switch _adbec {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adbec))
	}
	return nil
}

type ST_TLTimeNodePresetClassType byte

// ValidateWithPath validates the NotesMaster and its children, prefixing error messages with path
func (_bbffcb *NotesMaster) ValidateWithPath(path string) error {
	if _gccce := _bbffcb.CT_NotesMaster.ValidateWithPath(path); _gccce != nil {
		return _gccce
	}
	return nil
}

type CmLst struct{ CT_CommentList }

func NewCmAuthorLst() *CmAuthorLst {
	_ddffc := &CmAuthorLst{}
	_ddffc.CT_CommentAuthorList = *NewCT_CommentAuthorList()
	return _ddffc
}

func (_accdf *CT_TLAnimVariantFloatVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcbaa := range start.Attr {
		if _dcbaa.Name.Local == "\u0076\u0061\u006c" {
			_aeadc, _ecca := _f.ParseFloat(_dcbaa.Value, 64)
			if _ecca != nil {
				return _ecca
			}
			_accdf.ValAttr = float32(_aeadc)
			continue
		}
	}
	for {
		_bedb, _acfc := d.Token()
		if _acfc != nil {
			return _fd.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LAn\u0069mV\u0061\u0072\u0069\u0061\u006e\u0074\u0046lo\u0061\u0074\u0056\u0061\u006c\u003a\u0020%\u0073", _acfc)
		}
		if _beaff, _ageaa := _bedb.(_b.EndElement); _ageaa && _beaff.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_TLTriggerEventUnset       ST_TLTriggerEvent = 0
	ST_TLTriggerEventOnBegin     ST_TLTriggerEvent = 1
	ST_TLTriggerEventOnEnd       ST_TLTriggerEvent = 2
	ST_TLTriggerEventBegin       ST_TLTriggerEvent = 3
	ST_TLTriggerEventEnd         ST_TLTriggerEvent = 4
	ST_TLTriggerEventOnClick     ST_TLTriggerEvent = 5
	ST_TLTriggerEventOnDblClick  ST_TLTriggerEvent = 6
	ST_TLTriggerEventOnMouseOver ST_TLTriggerEvent = 7
	ST_TLTriggerEventOnMouseOut  ST_TLTriggerEvent = 8
	ST_TLTriggerEventOnNext      ST_TLTriggerEvent = 9
	ST_TLTriggerEventOnPrev      ST_TLTriggerEvent = 10
	ST_TLTriggerEventOnStopAudio ST_TLTriggerEvent = 11
)

func (_facaf ST_PhotoAlbumLayout) String() string {
	switch _facaf {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case 2:
		return "\u0031\u0070\u0069\u0063"
	case 3:
		return "\u0032\u0070\u0069\u0063"
	case 4:
		return "\u0034\u0070\u0069\u0063"
	case 5:
		return "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 6:
		return "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 7:
		return "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return ""
}

type CT_Comment struct {

	// Comment Author ID
	AuthorIdAttr uint32

	// Comment Date/Time
	DtAttr *_d.Time

	// Comment Index
	IdxAttr uint32

	// Comment Position
	Pos *_bc.CT_Point2D

	// Comment's Text Content
	Text   string
	ExtLst *CT_ExtensionListModify
}

func (_agfdd ST_TLTimeNodeFillType) ValidateWithPath(path string) error {
	switch _agfdd {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agfdd))
	}
	return nil
}

// ValidateWithPath validates the CT_TLMediaNodeVideo and its children, prefixing error messages with path
func (_bgbbag *CT_TLMediaNodeVideo) ValidateWithPath(path string) error {
	if _defa := _bgbbag.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _defa != nil {
		return _defa
	}
	return nil
}

type ST_PhotoAlbumFrameShape byte

func (_defgg *CT_TLIterateData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eeccf := range start.Attr {
		if _eeccf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_defgg.TypeAttr.UnmarshalXMLAttr(_eeccf)
			continue
		}
		if _eeccf.Name.Local == "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s" {
			_fgea, _ggagb := _f.ParseBool(_eeccf.Value)
			if _ggagb != nil {
				return _ggagb
			}
			_defgg.BackwardsAttr = &_fgea
			continue
		}
	}
_eccfa:
	for {
		_dadde, _caccg := d.Token()
		if _caccg != nil {
			return _caccg
		}
		switch _fegag := _dadde.(type) {
		case _b.StartElement:
			switch _fegag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}:
				_defgg.TmAbs = NewCT_TLIterateIntervalTime()
				if _fgdef := d.DecodeElement(_defgg.TmAbs, &_fegag); _fgdef != nil {
					return _fgdef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}:
				_defgg.TmPct = NewCT_TLIterateIntervalPercentage()
				if _ecfg := d.DecodeElement(_defgg.TmPct, &_fegag); _ecfg != nil {
					return _ecfg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0020\u0025v", _fegag.Name)
				if _bbfbf := d.Skip(); _bbfbf != nil {
					return _bbfbf
				}
			}
		case _b.EndElement:
			break _eccfa
		case _b.CharData:
		}
	}
	return nil
}

func (_dcaf *CT_TLBuildDiagram) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebgg := range start.Attr {
		if _ebgg.Name.Local == "\u0062\u006c\u0064" {
			_dcaf.BldAttr.UnmarshalXMLAttr(_ebgg)
			continue
		}
		if _ebgg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bfba, _fcgf := _f.ParseUint(_ebgg.Value, 10, 32)
			if _fcgf != nil {
				return _fcgf
			}
			_fbbd := uint32(_bfba)
			_dcaf.SpidAttr = &_fbbd
			continue
		}
		if _ebgg.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_adfa, _fagbd := _f.ParseUint(_ebgg.Value, 10, 32)
			if _fagbd != nil {
				return _fagbd
			}
			_daegee := uint32(_adfa)
			_dcaf.GrpIdAttr = &_daegee
			continue
		}
		if _ebgg.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_ecb, _ebdfd := _f.ParseBool(_ebgg.Value)
			if _ebdfd != nil {
				return _ebdfd
			}
			_dcaf.UiExpandAttr = &_ecb
			continue
		}
	}
	for {
		_cecd, _bagg := d.Token()
		if _bagg != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069\u0061\u0067\u0072\u0061\u006d: \u0025\u0073", _bagg)
		}
		if _daba, _gefabe := _cecd.(_b.EndElement); _gefabe && _daba.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SmartTags struct{ IdAttr string }

func NewCT_BuildList() *CT_BuildList { _ddgf := &CT_BuildList{}; return _ddgf }

func (_bcce *ST_TransitionCornerDirectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccbba, _dada := d.Token()
	if _dada != nil {
		return _dada
	}
	if _dcaeea, _febaae := _ccbba.(_b.EndElement); _febaae && _dcaeea.Name == start.Name {
		*_bcce = 1
		return nil
	}
	if _efceg, _afgbd := _ccbba.(_b.CharData); !_afgbd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccbba)
	} else {
		switch string(_efceg) {
		case "":
			*_bcce = 0
		case "\u006c\u0075":
			*_bcce = 1
		case "\u0072\u0075":
			*_bcce = 2
		case "\u006c\u0064":
			*_bcce = 3
		case "\u0072\u0064":
			*_bcce = 4
		}
	}
	_ccbba, _dada = d.Token()
	if _dada != nil {
		return _dada
	}
	if _ecfed, _cbabb := _ccbba.(_b.EndElement); _cbabb && _ecfed.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccbba)
}

type CT_Rel struct{ IdAttr string }

func (_ddgc *ST_TLPreviousActionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ddgc = 0
	case "\u006e\u006f\u006e\u0065":
		*_ddgc = 1
	case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
		*_ddgc = 2
	}
	return nil
}

func (_cbfee ST_TLChartSubelementType) String() string {
	switch _cbfee {
	case 0:
		return ""
	case 1:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return ""
}

func (_dcade ST_TLBehaviorTransformType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eaba := _b.Attr{}
	_eaba.Name = name
	switch _dcade {
	case ST_TLBehaviorTransformTypeUnset:
		_eaba.Value = ""
	case ST_TLBehaviorTransformTypePt:
		_eaba.Value = "\u0070\u0074"
	case ST_TLBehaviorTransformTypeImg:
		_eaba.Value = "\u0069\u006d\u0067"
	}
	return _eaba, nil
}

func (_gbdeed ST_TransitionSpeed) Validate() error { return _gbdeed.ValidateWithPath("") }

// ValidateWithPath validates the CT_CommentAuthorList and its children, prefixing error messages with path
func (_dca *CT_CommentAuthorList) ValidateWithPath(path string) error {
	for _gcbg, _ffg := range _dca.CmAuthor {
		if _gefb := _ffg.ValidateWithPath(_fd.Sprintf("\u0025s\u002fC\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _gcbg)); _gefb != nil {
			return _gefb
		}
	}
	return nil
}

func (_dbga *EG_ShowType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbga.Present != nil {
		_fegfg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_dbga.Present, _fegfg)
	}
	if _dbga.Browse != nil {
		_aagd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_dbga.Browse, _aagd)
	}
	if _dbga.Kiosk != nil {
		_gbdfaa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_dbga.Kiosk, _gbdfaa)
	}
	return nil
}

const (
	ST_TLTriggerRuntimeNodeUnset ST_TLTriggerRuntimeNode = 0
	ST_TLTriggerRuntimeNodeFirst ST_TLTriggerRuntimeNode = 1
	ST_TLTriggerRuntimeNodeLast  ST_TLTriggerRuntimeNode = 2
	ST_TLTriggerRuntimeNodeAll   ST_TLTriggerRuntimeNode = 3
)

// Validate validates the TagLst and its children
func (_dgaea *TagLst) Validate() error {
	return _dgaea.ValidateWithPath("\u0054\u0061\u0067\u004c\u0073\u0074")
}

func (_acggf *CT_SlideSorterViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_acggf.CViewPr = NewCT_CommonViewProperties()
	for _, _eefedg := range start.Attr {
		if _eefedg.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_bddff, _begeg := _f.ParseBool(_eefedg.Value)
			if _begeg != nil {
				return _begeg
			}
			_acggf.ShowFormattingAttr = &_bddff
			continue
		}
	}
_cecf:
	for {
		_bgbba, _febga := d.Token()
		if _febga != nil {
			return _febga
		}
		switch _ffdf := _bgbba.(type) {
		case _b.StartElement:
			switch _ffdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _gbcd := d.DecodeElement(_acggf.CViewPr, &_ffdf); _gbcd != nil {
					return _gbcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acggf.ExtLst = NewCT_ExtensionList()
				if _fdfb := d.DecodeElement(_acggf.ExtLst, &_ffdf); _fdfb != nil {
					return _fdfb
				}
			default:
				_g.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _ffdf.Name)
				if _fbbfc := d.Skip(); _fbbfc != nil {
					return _fbbfc
				}
			}
		case _b.EndElement:
			break _cecf
		case _b.CharData:
		}
	}
	return nil
}

func (_cagae *ST_WebScreenSize) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cagae = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_cagae = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_cagae = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_cagae = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_cagae = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_cagae = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_cagae = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_cagae = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_cagae = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_cagae = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
		*_cagae = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_cagae = 11
	}
	return nil
}

func NewCT_TLAnimateScaleBehavior() *CT_TLAnimateScaleBehavior {
	_gcga := &CT_TLAnimateScaleBehavior{}
	_gcga.CBhvr = NewCT_TLCommonBehaviorData()
	return _gcga
}

// ValidateWithPath validates the SldSyncPr and its children, prefixing error messages with path
func (_fddef *SldSyncPr) ValidateWithPath(path string) error {
	if _dgbdgg := _fddef.CT_SlideSyncProperties.ValidateWithPath(path); _dgbdgg != nil {
		return _dgbdgg
	}
	return nil
}

// ValidateWithPath validates the EG_SlideListChoice and its children, prefixing error messages with path
func (_cdfga *EG_SlideListChoice) ValidateWithPath(path string) error {
	if _cdfga.SldAll != nil {
		if _cbafe := _cdfga.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _cbafe != nil {
			return _cbafe
		}
	}
	if _cdfga.SldRg != nil {
		if _gdaba := _cdfga.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _gdaba != nil {
			return _gdaba
		}
	}
	if _cdfga.CustShow != nil {
		if _bgedg := _cdfga.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _bgedg != nil {
			return _bgedg
		}
	}
	return nil
}

func (_efafcd ST_SplitterBarState) ValidateWithPath(path string) error {
	switch _efafcd {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efafcd))
	}
	return nil
}

func (_feaa *CT_TimeNodeList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _feaa.Par != nil {
		_bfbcf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070a\u0072"}}
		for _, _gded := range _feaa.Par {
			e.EncodeElement(_gded, _bfbcf)
		}
	}
	if _feaa.Seq != nil {
		_ddggc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073e\u0071"}}
		for _, _aaec := range _feaa.Seq {
			e.EncodeElement(_aaec, _ddggc)
		}
	}
	if _feaa.Excl != nil {
		_edbae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0063\u006c"}}
		for _, _ecdca := range _feaa.Excl {
			e.EncodeElement(_ecdca, _edbae)
		}
	}
	if _feaa.Anim != nil {
		_eadbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061\u006e\u0069\u006d"}}
		for _, _efedaa := range _feaa.Anim {
			e.EncodeElement(_efedaa, _eadbg)
		}
	}
	if _feaa.AnimClr != nil {
		_aceda := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0043\u006cr"}}
		for _, _babge := range _feaa.AnimClr {
			e.EncodeElement(_babge, _aceda)
		}
	}
	if _feaa.AnimEffect != nil {
		_edgb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}}
		for _, _ceda := range _feaa.AnimEffect {
			e.EncodeElement(_ceda, _edgb)
		}
	}
	if _feaa.AnimMotion != nil {
		_eafee := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}}
		for _, _eeccc := range _feaa.AnimMotion {
			e.EncodeElement(_eeccc, _eafee)
		}
	}
	if _feaa.AnimRot != nil {
		_bcadcd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0052\u006ft"}}
		for _, _eacfa := range _feaa.AnimRot {
			e.EncodeElement(_eacfa, _bcadcd)
		}
	}
	if _feaa.AnimScale != nil {
		_geebe := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0061\u006e\u0069\u006d\u0053\u0063\u0061\u006c\u0065"}}
		for _, _cegd := range _feaa.AnimScale {
			e.EncodeElement(_cegd, _geebe)
		}
	}
	if _feaa.Cmd != nil {
		_ffee := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063m\u0064"}}
		for _, _fgbef := range _feaa.Cmd {
			e.EncodeElement(_fgbef, _ffee)
		}
	}
	if _feaa.Set != nil {
		_gdffb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073e\u0074"}}
		for _, _abaeb := range _feaa.Set {
			e.EncodeElement(_abaeb, _gdffb)
		}
	}
	if _feaa.Audio != nil {
		_adab := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f"}}
		for _, _cafca := range _feaa.Audio {
			e.EncodeElement(_cafca, _adab)
		}
	}
	if _feaa.Video != nil {
		_bdcbd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0076\u0069\u0064\u0065\u006f"}}
		for _, _gaccg := range _feaa.Video {
			e.EncodeElement(_gaccg, _bdcbd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_SlideRelationshipListEntry() *CT_SlideRelationshipListEntry {
	_fedde := &CT_SlideRelationshipListEntry{}
	return _fedde
}

// Validate validates the EG_Background and its children
func (_baaca *EG_Background) Validate() error {
	return _baaca.ValidateWithPath("\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

func (_geff *CT_Control) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geff.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_geff.SpidAttr)})
	}
	if _geff.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_geff.NameAttr)})
	}
	if _geff.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_geff.ShowAsIconAttr))})
	}
	if _geff.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_geff.IdAttr)})
	}
	if _geff.ImgWAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _fd.Sprintf("\u0025\u0076", *_geff.ImgWAttr)})
	}
	if _geff.ImgHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _fd.Sprintf("\u0025\u0076", *_geff.ImgHAttr)})
	}
	e.EncodeToken(start)
	if _geff.ExtLst != nil {
		_dcec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_geff.ExtLst, _dcec)
	}
	if _geff.Pic != nil {
		_dfgg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_geff.Pic, _dfgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_gbdba := &CT_ConnectorNonVisual{}
	_gbdba.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_gbdba.CNvCxnSpPr = _bc.NewCT_NonVisualConnectorProperties()
	_gbdba.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _gbdba
}

type CT_PhotoAlbum struct {

	// Black and White
	BwAttr *bool

	// Show/Hide Captions
	ShowCaptionsAttr *bool

	// Photo Album Layout
	LayoutAttr ST_PhotoAlbumLayout

	// Frame Type
	FrameAttr ST_PhotoAlbumFrameShape
	ExtLst    *CT_ExtensionList
}

type ST_TransitionInOutDirectionType byte

func (_egc *CT_CustomerData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _egc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bdafc *CT_SlideMasterIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbgd := range start.Attr {
		if _fbgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbgd.Name.Local == "\u0069\u0064" || _fbgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fbgd.Name.Local == "\u0069\u0064" {
			_bcdg, _bdgee := _fbgd.Value, error(nil)
			if _bdgee != nil {
				return _bdgee
			}
			_bdafc.RIdAttr = _bcdg
			continue
		}
		if _fbgd.Name.Local == "\u0069\u0064" {
			_dbee, _aaaf := _f.ParseUint(_fbgd.Value, 10, 32)
			if _aaaf != nil {
				return _aaaf
			}
			_effbe := uint32(_dbee)
			_bdafc.IdAttr = &_effbe
			continue
		}
	}
_ceba:
	for {
		_bbcg, _abac := d.Token()
		if _abac != nil {
			return _abac
		}
		switch _ffef := _bbcg.(type) {
		case _b.StartElement:
			switch _ffef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdafc.ExtLst = NewCT_ExtensionList()
				if _gdbfe := d.DecodeElement(_bdafc.ExtLst, &_ffef); _gdbfe != nil {
					return _gdbfe
				}
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _ffef.Name)
				if _fefec := d.Skip(); _fefec != nil {
					return _fefec
				}
			}
		case _b.EndElement:
			break _ceba
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the Sld and its children
func (_ddeaf *Sld) Validate() error { return _ddeaf.ValidateWithPath("\u0053\u006c\u0064") }

func (_fedc *CT_SlideSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fedc.CxAttr = 914400
	_fedc.CyAttr = 914400
	for _, _gbafb := range start.Attr {
		if _gbafb.Name.Local == "\u0063\u0078" {
			_gacec, _caec := _f.ParseInt(_gbafb.Value, 10, 32)
			if _caec != nil {
				return _caec
			}
			_fedc.CxAttr = int32(_gacec)
			continue
		}
		if _gbafb.Name.Local == "\u0063\u0079" {
			_ggaga, _ggbcf := _f.ParseInt(_gbafb.Value, 10, 32)
			if _ggbcf != nil {
				return _ggbcf
			}
			_fedc.CyAttr = int32(_ggaga)
			continue
		}
		if _gbafb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fedc.TypeAttr.UnmarshalXMLAttr(_gbafb)
			continue
		}
	}
	for {
		_aefd, _dbbgc := d.Token()
		if _dbbgc != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006ci\u0064\u0065\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _dbbgc)
		}
		if _ecdcg, _dbcca := _aefd.(_b.EndElement); _dbcca && _ecdcg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_adgaa *CT_TLOleChartTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_gacad, _bfafd := _adgaa.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _bfafd != nil {
		return _bfafd
	}
	start.Attr = append(start.Attr, _gacad)
	if _adgaa.LvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0076\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_adgaa.LvlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfgag *ST_SlideSizeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffbbab, _becgac := d.Token()
	if _becgac != nil {
		return _becgac
	}
	if _gdee, _dfgbg := _ffbbab.(_b.EndElement); _dfgbg && _gdee.Name == start.Name {
		*_bfgag = 1
		return nil
	}
	if _ffddf, _bffee := _ffbbab.(_b.CharData); !_bffee {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffbbab)
	} else {
		switch string(_ffddf) {
		case "":
			*_bfgag = 0
		case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
			*_bfgag = 1
		case "\u006c\u0065\u0074\u0074\u0065\u0072":
			*_bfgag = 2
		case "\u0041\u0034":
			*_bfgag = 3
		case "\u0033\u0035\u006d\u006d":
			*_bfgag = 4
		case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
			*_bfgag = 5
		case "\u0062\u0061\u006e\u006e\u0065\u0072":
			*_bfgag = 6
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_bfgag = 7
		case "\u006c\u0065\u0064\u0067\u0065\u0072":
			*_bfgag = 8
		case "\u0041\u0033":
			*_bfgag = 9
		case "\u0042\u0034\u0049S\u004f":
			*_bfgag = 10
		case "\u0042\u0035\u0049S\u004f":
			*_bfgag = 11
		case "\u0042\u0034\u004aI\u0053":
			*_bfgag = 12
		case "\u0042\u0035\u004aI\u0053":
			*_bfgag = 13
		case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
			*_bfgag = 14
		case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
			*_bfgag = 15
		case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
			*_bfgag = 16
		}
	}
	_ffbbab, _becgac = d.Token()
	if _becgac != nil {
		return _becgac
	}
	if _edeab, _cbad := _ffbbab.(_b.EndElement); _cbad && _edeab.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffbbab)
}

func NewCT_HandoutMasterIdList() *CT_HandoutMasterIdList {
	_cfeb := &CT_HandoutMasterIdList{}
	return _cfeb
}

func (_cbbcc ST_TLTriggerRuntimeNode) Validate() error { return _cbbcc.ValidateWithPath("") }

func (_fagge *ST_TLChartSubelementType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fagge = 0
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_fagge = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_fagge = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fagge = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_fagge = 4
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fagge = 5
	}
	return nil
}

func NewCT_Control() *CT_Control { _fabg := &CT_Control{}; return _fabg }

type ST_TransitionSpeed byte

func (_cccbg ST_WebColorType) Validate() error { return _cccbg.ValidateWithPath("") }

func (_dbec *CT_CornerDirectionTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbec.DirAttr != ST_TransitionCornerDirectionTypeUnset {
		_afab, _cfea := _dbec.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _cfea != nil {
			return _cfea
		}
		start.Attr = append(start.Attr, _afab)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_SlideListChoice and its children
func (_ggcef *EG_SlideListChoice) Validate() error {
	return _ggcef.ValidateWithPath("\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_TLTimeNodeExclusive and its children, prefixing error messages with path
func (_cace *CT_TLTimeNodeExclusive) ValidateWithPath(path string) error {
	if _aegb := _cace.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _aegb != nil {
		return _aegb
	}
	return nil
}

func NewCT_TLByAnimateColorTransform() *CT_TLByAnimateColorTransform {
	_dgfg := &CT_TLByAnimateColorTransform{}
	return _dgfg
}

func (_geaeg *NotesMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_geaeg.CT_NotesMaster = *NewCT_NotesMaster()
_fabbd:
	for {
		_fgdbd, _efcdb := d.Token()
		if _efcdb != nil {
			return _efcdb
		}
		switch _cedgg := _fgdbd.(type) {
		case _b.StartElement:
			switch _cedgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _eaaee := d.DecodeElement(_geaeg.CSld, &_cedgg); _eaaee != nil {
					return _eaaee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _defeb := d.DecodeElement(_geaeg.ClrMap, &_cedgg); _defeb != nil {
					return _defeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_geaeg.Hf = NewCT_HeaderFooter()
				if _fgbdd := d.DecodeElement(_geaeg.Hf, &_cedgg); _fgbdd != nil {
					return _fgbdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_geaeg.NotesStyle = _bc.NewCT_TextListStyle()
				if _gdgdg := d.DecodeElement(_geaeg.NotesStyle, &_cedgg); _gdgdg != nil {
					return _gdgdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geaeg.ExtLst = NewCT_ExtensionListModify()
				if _bada := d.DecodeElement(_geaeg.ExtLst, &_cedgg); _bada != nil {
					return _bada
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025\u0076", _cedgg.Name)
				if _afag := d.Skip(); _afag != nil {
					return _afag
				}
			}
		case _b.EndElement:
			break _fabbd
		case _b.CharData:
		}
	}
	return nil
}

func NewEG_ShowType() *EG_ShowType { _addgbe := &EG_ShowType{}; return _addgbe }

// Validate validates the CT_SlideMasterTextStyles and its children
func (_ggdg *CT_SlideMasterTextStyles) Validate() error {
	return _ggdg.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073")
}

// Validate validates the CT_TLTriggerTimeNodeID and its children
func (_cggaag *CT_TLTriggerTimeNodeID) Validate() error {
	return _cggaag.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044")
}

type CT_Kinsoku struct {

	// Language
	LangAttr *string

	// Invalid Kinsoku Start Characters
	InvalStCharsAttr string

	// Invalid Kinsoku End Characters
	InvalEndCharsAttr string
}

func (_abbaa *ST_TLTimeIndefinite) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abbaa = 0
	case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
		*_abbaa = 1
	}
	return nil
}

func (_gfed ST_PhotoAlbumFrameShape) String() string {
	switch _gfed {
	case 0:
		return ""
	case 1:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case 2:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case 3:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case 4:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case 5:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case 6:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case 7:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return ""
}

func (_gcfg *CT_TLTimeNodeParallel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcfg.CTn = NewCT_TLCommonTimeNodeData()
_ebabe:
	for {
		_eabeb, _defea := d.Token()
		if _defea != nil {
			return _defea
		}
		switch _dacegg := _eabeb.(type) {
		case _b.StartElement:
			switch _dacegg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _bddga := d.DecodeElement(_gcfg.CTn, &_dacegg); _bddga != nil {
					return _bddga
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0050\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u0020\u0025\u0076", _dacegg.Name)
				if _ggggac := d.Skip(); _ggggac != nil {
					return _ggggac
				}
			}
		case _b.EndElement:
			break _ebabe
		case _b.CharData:
		}
	}
	return nil
}

func (_gefga ST_IterateType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gefga.String(), start)
}

func (_aafff *CT_WebProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aafff.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aafff.ShowAnimationAttr))})
	}
	if _aafff.ResizeGraphicsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aafff.ResizeGraphicsAttr))})
	}
	if _aafff.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aafff.AllowPngAttr))})
	}
	if _aafff.RelyOnVmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aafff.RelyOnVmlAttr))})
	}
	if _aafff.OrganizeInFoldersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aafff.OrganizeInFoldersAttr))})
	}
	if _aafff.UseLongFilenamesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_aafff.UseLongFilenamesAttr))})
	}
	if _aafff.ImgSzAttr != ST_WebScreenSizeUnset {
		_cdbab, _befba := _aafff.ImgSzAttr.MarshalXMLAttr(_b.Name{Local: "\u0069\u006d\u0067S\u007a"})
		if _befba != nil {
			return _befba
		}
		start.Attr = append(start.Attr, _cdbab)
	}
	if _aafff.EncodingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0076", *_aafff.EncodingAttr)})
	}
	if _aafff.ClrAttr != ST_WebColorTypeUnset {
		_geecb, _gfdda := _aafff.ClrAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u006c\u0072"})
		if _gfdda != nil {
			return _gfdda
		}
		start.Attr = append(start.Attr, _geecb)
	}
	e.EncodeToken(start)
	if _aafff.ExtLst != nil {
		_ebbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aafff.ExtLst, _ebbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLTimeNodeParallel and its children, prefixing error messages with path
func (_cfabb *CT_TLTimeNodeParallel) ValidateWithPath(path string) error {
	if _dcgea := _cfabb.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _dcgea != nil {
		return _dcgea
	}
	return nil
}

func (_bdgf *ST_TLBehaviorTransformType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcbac, _ebcba := d.Token()
	if _ebcba != nil {
		return _ebcba
	}
	if _fbgb, _daad := _dcbac.(_b.EndElement); _daad && _fbgb.Name == start.Name {
		*_bdgf = 1
		return nil
	}
	if _edfdf, _eggfb := _dcbac.(_b.CharData); !_eggfb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcbac)
	} else {
		switch string(_edfdf) {
		case "":
			*_bdgf = 0
		case "\u0070\u0074":
			*_bdgf = 1
		case "\u0069\u006d\u0067":
			*_bdgf = 2
		}
	}
	_dcbac, _ebcba = d.Token()
	if _ebcba != nil {
		return _ebcba
	}
	if _bddebd, _eeccd := _dcbac.(_b.EndElement); _eeccd && _bddebd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcbac)
}

// Validate validates the CT_OutlineViewSlideEntry and its children
func (_ggge *CT_OutlineViewSlideEntry) Validate() error {
	return _ggge.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079")
}

func (_ceaec *CT_Slide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceaec.ShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ceaec.ShowAttr))})
	}
	if _ceaec.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ceaec.ShowMasterSpAttr))})
	}
	if _ceaec.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ceaec.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_daab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_ceaec.CSld, _daab)
	if _ceaec.ClrMapOvr != nil {
		_fefe := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_ceaec.ClrMapOvr, _fefe)
	}
	if _ceaec.Transition != nil {
		_fded := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ceaec.Transition, _fded)
	}
	if _ceaec.Timing != nil {
		_ecdgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_ceaec.Timing, _ecdgd)
	}
	if _ceaec.ExtLst != nil {
		_bbcfd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ceaec.ExtLst, _bbcfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Control and its children
func (_gaee *CT_Control) Validate() error {
	return _gaee.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

// Validate validates the SldMaster and its children
func (_baccf *SldMaster) Validate() error {
	return _baccf.ValidateWithPath("\u0053l\u0064\u004d\u0061\u0073\u0074\u0065r")
}

func (_gced *CT_TagList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebabeb:
	for {
		_fgaf, _ffbg := d.Token()
		if _ffbg != nil {
			return _ffbg
		}
		switch _ccfba := _fgaf.(type) {
		case _b.StartElement:
			switch _ccfba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_cegf := NewCT_StringTag()
				if _beeae := d.DecodeElement(_cegf, &_ccfba); _beeae != nil {
					return _beeae
				}
				_gced.Tag = append(_gced.Tag, _cegf)
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fT\u0061\u0067\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ccfba.Name)
				if _gdafb := d.Skip(); _gdafb != nil {
					return _gdafb
				}
			}
		case _b.EndElement:
			break _ebabeb
		case _b.CharData:
		}
	}
	return nil
}

func (_cbafeb *ST_TLAnimateBehaviorValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cccab, _ccbccc := d.Token()
	if _ccbccc != nil {
		return _ccbccc
	}
	if _fdagb, _cgdba := _cccab.(_b.EndElement); _cgdba && _fdagb.Name == start.Name {
		*_cbafeb = 1
		return nil
	}
	if _ebba, _daaf := _cccab.(_b.CharData); !_daaf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cccab)
	} else {
		switch string(_ebba) {
		case "":
			*_cbafeb = 0
		case "\u0073\u0074\u0072":
			*_cbafeb = 1
		case "\u006e\u0075\u006d":
			*_cbafeb = 2
		case "\u0063\u006c\u0072":
			*_cbafeb = 3
		}
	}
	_cccab, _ccbccc = d.Token()
	if _ccbccc != nil {
		return _ccbccc
	}
	if _cabdg, _bfddg := _cccab.(_b.EndElement); _bfddg && _cabdg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cccab)
}

func (_daecg ST_ViewType) String() string {
	switch _daecg {
	case 0:
		return ""
	case 1:
		return "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case 2:
		return "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 3:
		return "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case 4:
		return "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case 5:
		return "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 6:
		return "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case 7:
		return "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 8:
		return "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return ""
}

// Validate validates the CT_ViewProperties and its children
func (_bbbf *CT_ViewProperties) Validate() error {
	return _bbbf.ValidateWithPath("\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func (_eeec *CT_Empty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_ggbf, _gfege := d.Token()
		if _gfege != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073", _gfege)
		}
		if _bccf, _dage := _ggbf.(_b.EndElement); _dage && _bccf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_agceg ST_TLAnimateMotionPathEditMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_agceg.String(), start)
}

type CT_TLShapeTargetElement struct {

	// Shape ID
	SpidAttr uint32

	// Background
	Bg *CT_Empty

	// Subshape
	SubSp *CT_TLSubShapeId

	// Embedded Chart Element
	OleChartEl *CT_TLOleChartTargetElement

	// Text Element
	TxEl *CT_TLTextTargetElement

	// Graphic Element
	GraphicEl *_bc.CT_AnimationElementChoice
}

// Validate validates the CT_SlideLayoutIdListEntry and its children
func (_cdbf *CT_SlideLayoutIdListEntry) Validate() error {
	return _cdbf.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

func (_ddgb *CT_InOutTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddgb.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_bfbe, _gdfae := _ddgb.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _gdfae != nil {
			return _gdfae
		}
		start.Attr = append(start.Attr, _bfbe)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_TLMediaNodeVideo() *CT_TLMediaNodeVideo {
	_bbef := &CT_TLMediaNodeVideo{}
	_bbef.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _bbef
}

func (_dcf *CT_CommonSlideData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcf.SpTree = NewCT_GroupShape()
	for _, _gfad := range start.Attr {
		if _gfad.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gfac, _abbg := _gfad.Value, error(nil)
			if _abbg != nil {
				return _abbg
			}
			_dcf.NameAttr = &_gfac
			continue
		}
	}
_ebag:
	for {
		_aae, _bdad := d.Token()
		if _bdad != nil {
			return _bdad
		}
		switch _dgca := _aae.(type) {
		case _b.StartElement:
			switch _dgca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_dcf.Bg = NewCT_Background()
				if _dcdc := d.DecodeElement(_dcf.Bg, &_dgca); _dcdc != nil {
					return _dcdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}:
				if _dga := d.DecodeElement(_dcf.SpTree, &_dgca); _dga != nil {
					return _dga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_dcf.CustDataLst = NewCT_CustomerDataList()
				if _fagd := d.DecodeElement(_dcf.CustDataLst, &_dgca); _fagd != nil {
					return _fagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_dcf.Controls = NewCT_ControlList()
				if _ddga := d.DecodeElement(_dcf.Controls, &_dgca); _ddga != nil {
					return _ddga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcf.ExtLst = NewCT_ExtensionList()
				if _eff := d.DecodeElement(_dcf.ExtLst, &_dgca); _eff != nil {
					return _eff
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006eS\u006c\u0069\u0064\u0065\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _dgca.Name)
				if _ecg := d.Skip(); _ecg != nil {
					return _ecg
				}
			}
		case _b.EndElement:
			break _ebag
		case _b.CharData:
		}
	}
	return nil
}

func ParseUnionST_Percentage(s string) (_bc.ST_Percentage, error) {
	return _bc.ParseUnionST_Percentage(s)
}

// Validate validates the CT_ShapeNonVisual and its children
func (_gefd *CT_ShapeNonVisual) Validate() error {
	return _gefd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}

// Validate validates the CT_SlideSorterViewProperties and its children
func (_gffg *CT_SlideSorterViewProperties) Validate() error {
	return _gffg.ValidateWithPath("\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}

func (_bac *CT_CommentAuthorList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ddf:
	for {
		_ccfc, _dgdb := d.Token()
		if _dgdb != nil {
			return _dgdb
		}
		switch _bccd := _ccfc.(type) {
		case _b.StartElement:
			switch _bccd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_fcbf := NewCT_CommentAuthor()
				if _cgdf := d.DecodeElement(_fcbf, &_bccd); _cgdf != nil {
					return _cgdf
				}
				_bac.CmAuthor = append(_bac.CmAuthor, _fcbf)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bccd.Name)
				if _cgdc := d.Skip(); _cgdc != nil {
					return _cgdc
				}
			}
		case _b.EndElement:
			break _ddf
		case _b.CharData:
		}
	}
	return nil
}

func (_defg *CT_NotesTextViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_defg.CViewPr = NewCT_CommonViewProperties()
_dcabg:
	for {
		_fdcga, _eabbb := d.Token()
		if _eabbb != nil {
			return _eabbb
		}
		switch _afda := _fdcga.(type) {
		case _b.StartElement:
			switch _afda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _eeggd := d.DecodeElement(_defg.CViewPr, &_afda); _eeggd != nil {
					return _eeggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_defg.ExtLst = NewCT_ExtensionList()
				if _dabg := d.DecodeElement(_defg.ExtLst, &_afda); _dabg != nil {
					return _dabg
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u004e\u006ft\u0065\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _afda.Name)
				if _adae := d.Skip(); _adae != nil {
					return _adae
				}
			}
		case _b.EndElement:
			break _dcabg
		case _b.CharData:
		}
	}
	return nil
}

func (_fddeg ST_TransitionInOutDirectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aeea := _b.Attr{}
	_aeea.Name = name
	switch _fddeg {
	case ST_TransitionInOutDirectionTypeUnset:
		_aeea.Value = ""
	case ST_TransitionInOutDirectionTypeOut:
		_aeea.Value = "\u006f\u0075\u0074"
	case ST_TransitionInOutDirectionTypeIn:
		_aeea.Value = "\u0069\u006e"
	}
	return _aeea, nil
}

type CT_BuildList struct {

	// Build Paragraph
	BldP []*CT_TLBuildParagraph

	// Build Diagram
	BldDgm []*CT_TLBuildDiagram

	// Build Embedded Chart
	BldOleChart []*CT_TLOleBuildChart

	// Build Graphics
	BldGraphic []*CT_TLGraphicalObjectBuild
}

func NewCT_OutlineViewSlideList() *CT_OutlineViewSlideList {
	_cbbge := &CT_OutlineViewSlideList{}
	return _cbbge
}

type CT_TLAnimVariant struct {

	// Boolean Variant
	BoolVal *CT_TLAnimVariantBooleanVal

	// Integer
	IntVal *CT_TLAnimVariantIntegerVal

	// Float Value
	FltVal *CT_TLAnimVariantFloatVal

	// String Value
	StrVal *CT_TLAnimVariantStringVal

	// Color Value
	ClrVal *_bc.CT_Color
}

func (_bfbb *CT_CommentAuthor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bfbb.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _bfbb.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0076", _bfbb.InitialsAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0073\u0074\u0049\u0064\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _bfbb.LastIdxAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0072\u0049\u0064\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _bfbb.ClrIdxAttr)})
	e.EncodeToken(start)
	if _bfbb.ExtLst != nil {
		_gcaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfbb.ExtLst, _gcaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cfbd *CT_SlideMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfbd.CSld = NewCT_CommonSlideData()
	_cfbd.ClrMap = _bc.NewCT_ColorMapping()
	for _, _bddcb := range start.Attr {
		if _bddcb.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_ccbd, _bcdce := _f.ParseBool(_bddcb.Value)
			if _bcdce != nil {
				return _bcdce
			}
			_cfbd.PreserveAttr = &_ccbd
			continue
		}
	}
_bffe:
	for {
		_dgge, _dcbbc := d.Token()
		if _dcbbc != nil {
			return _dcbbc
		}
		switch _aebeb := _dgge.(type) {
		case _b.StartElement:
			switch _aebeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cbfffa := d.DecodeElement(_cfbd.CSld, &_aebeb); _cbfffa != nil {
					return _cbfffa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _cgfga := d.DecodeElement(_cfbd.ClrMap, &_aebeb); _cgfga != nil {
					return _cgfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_cfbd.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _febac := d.DecodeElement(_cfbd.SldLayoutIdLst, &_aebeb); _febac != nil {
					return _febac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_cfbd.Transition = NewCT_SlideTransition()
				if _cgfb := d.DecodeElement(_cfbd.Transition, &_aebeb); _cgfb != nil {
					return _cgfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_cfbd.Timing = NewCT_SlideTiming()
				if _ccca := d.DecodeElement(_cfbd.Timing, &_aebeb); _ccca != nil {
					return _ccca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_cfbd.Hf = NewCT_HeaderFooter()
				if _eefed := d.DecodeElement(_cfbd.Hf, &_aebeb); _eefed != nil {
					return _eefed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_cfbd.TxStyles = NewCT_SlideMasterTextStyles()
				if _bcacc := d.DecodeElement(_cfbd.TxStyles, &_aebeb); _bcacc != nil {
					return _bcacc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfbd.ExtLst = NewCT_ExtensionListModify()
				if _efca := d.DecodeElement(_cfbd.ExtLst, &_aebeb); _efca != nil {
					return _efca
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _aebeb.Name)
				if _abdeea := d.Skip(); _abdeea != nil {
					return _abdeea
				}
			}
		case _b.EndElement:
			break _bffe
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLCommonBehaviorData and its children
func (_dbbe *CT_TLCommonBehaviorData) Validate() error {
	return _dbbe.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061")
}

func (_cabce ST_TLNextActionType) ValidateWithPath(path string) error {
	switch _cabce {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cabce))
	}
	return nil
}

func (_eacac ST_PlaceholderSize) ValidateWithPath(path string) error {
	switch _eacac {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eacac))
	}
	return nil
}

func (_fcag *CT_ExtensionListModify) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcag.ModAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_fcag.ModAttr))})
	}
	e.EncodeToken(start)
	if _fcag.Ext != nil {
		_aegge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _cec := range _fcag.Ext {
			e.EncodeElement(_cec, _aegge)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cegg *CT_TLBehaviorAttributeNameList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dfdcf:
	for {
		_gafeb, _bfbcb := d.Token()
		if _bfbcb != nil {
			return _bfbcb
		}
		switch _ccdaf := _gafeb.(type) {
		case _b.StartElement:
			switch _ccdaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}:
				var _dgdbd string
				if _fgfc := d.DecodeElement(&_dgdbd, &_ccdaf); _fgfc != nil {
					return _fgfc
				}
				_cegg.AttrName = append(_cegg.AttrName, _dgdbd)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0041\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u004e\u0061\u006d\u0065L\u0069\u0073\u0074\u0020\u0025\u0076", _ccdaf.Name)
				if _bgfc := d.Skip(); _bgfc != nil {
					return _bgfc
				}
			}
		case _b.EndElement:
			break _dfdcf
		case _b.CharData:
		}
	}
	return nil
}

type SldLayout struct{ CT_SlideLayout }

func (_abeg *CT_TLTimeConditionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bdgad := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0064"}}
	for _, _dcadd := range _abeg.Cond {
		e.EncodeElement(_dcadd, _bdgad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLAnimateMotionBehaviorOriginUnset  ST_TLAnimateMotionBehaviorOrigin = 0
	ST_TLAnimateMotionBehaviorOriginParent ST_TLAnimateMotionBehaviorOrigin = 1
	ST_TLAnimateMotionBehaviorOriginLayout ST_TLAnimateMotionBehaviorOrigin = 2
)

func (_gcdef ST_PrintColorMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bgdad := _b.Attr{}
	_bgdad.Name = name
	switch _gcdef {
	case ST_PrintColorModeUnset:
		_bgdad.Value = ""
	case ST_PrintColorModeBw:
		_bgdad.Value = "\u0062\u0077"
	case ST_PrintColorModeGray:
		_bgdad.Value = "\u0067\u0072\u0061\u0079"
	case ST_PrintColorModeClr:
		_bgdad.Value = "\u0063\u006c\u0072"
	}
	return _bgdad, nil
}

// ValidateWithPath validates the CT_SlideSize and its children, prefixing error messages with path
func (_eece *CT_SlideSize) ValidateWithPath(path string) error {
	if _eece.CxAttr < 914400 {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _eece.CxAttr)
	}
	if _eece.CxAttr > 51206400 {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eece.CxAttr)
	}
	if _eece.CxAttr < 0 {
		return _fd.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eece.CxAttr)
	}
	if _eece.CyAttr < 914400 {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _eece.CyAttr)
	}
	if _eece.CyAttr > 51206400 {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eece.CyAttr)
	}
	if _eece.CyAttr < 0 {
		return _fd.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eece.CyAttr)
	}
	if _afcfc := _eece.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _afcfc != nil {
		return _afcfc
	}
	return nil
}

// ValidateWithPath validates the AG_ChildSlide and its children, prefixing error messages with path
func (_ed *AG_ChildSlide) ValidateWithPath(path string) error { return nil }

const (
	ST_TransitionSpeedUnset ST_TransitionSpeed = 0
	ST_TransitionSpeedSlow  ST_TransitionSpeed = 1
	ST_TransitionSpeedMed   ST_TransitionSpeed = 2
	ST_TransitionSpeedFast  ST_TransitionSpeed = 3
)

func (_fbdce *ST_TLAnimateBehaviorValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fbdce = 0
	case "\u0073\u0074\u0072":
		*_fbdce = 1
	case "\u006e\u0075\u006d":
		*_fbdce = 2
	case "\u0063\u006c\u0072":
		*_fbdce = 3
	}
	return nil
}

func NewAG_Ole() *AG_Ole { _dc := &AG_Ole{}; return _dc }

func (_cfac *CT_CustomShowId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cfac.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ShapeNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_bc.CT_NonVisualDrawingProps

	// Non-Visual Drawing Properties for a Shape
	CNvSpPr *_bc.CT_NonVisualDrawingShapeProps

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

type CT_SlideMasterIdListEntry struct {

	// Slide Master Identifier
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

func (_gfcaa *ST_PhotoAlbumFrameShape) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfcaa = 0
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
		*_gfcaa = 1
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
		*_gfcaa = 2
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
		*_gfcaa = 3
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
		*_gfcaa = 4
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
		*_gfcaa = 5
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
		*_gfcaa = 6
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
		*_gfcaa = 7
	}
	return nil
}

func (_egfac ST_TLAnimateEffectTransition) Validate() error { return _egfac.ValidateWithPath("") }

// Validate validates the AG_TLBuild and its children
func (_cfd *AG_TLBuild) Validate() error {
	return _cfd.ValidateWithPath("\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064")
}

// ValidateWithPath validates the AG_TLBuild and its children, prefixing error messages with path
func (_fagb *AG_TLBuild) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ShowProperties and its children, prefixing error messages with path
func (_eagbc *CT_ShowProperties) ValidateWithPath(path string) error {
	if _eagbc.Present != nil {
		if _efde := _eagbc.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _efde != nil {
			return _efde
		}
	}
	if _eagbc.Browse != nil {
		if _dbgcfc := _eagbc.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _dbgcfc != nil {
			return _dbgcfc
		}
	}
	if _eagbc.Kiosk != nil {
		if _deeff := _eagbc.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _deeff != nil {
			return _deeff
		}
	}
	if _eagbc.SldAll != nil {
		if _dcff := _eagbc.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _dcff != nil {
			return _dcff
		}
	}
	if _eagbc.SldRg != nil {
		if _dfbb := _eagbc.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _dfbb != nil {
			return _dfbb
		}
	}
	if _eagbc.CustShow != nil {
		if _feeca := _eagbc.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _feeca != nil {
			return _feeca
		}
	}
	if _eagbc.PenClr != nil {
		if _ecaga := _eagbc.PenClr.ValidateWithPath(path + "\u002fP\u0065\u006e\u0043\u006c\u0072"); _ecaga != nil {
			return _ecaga
		}
	}
	if _eagbc.ExtLst != nil {
		if _fffd := _eagbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fffd != nil {
			return _fffd
		}
	}
	return nil
}

func NewCT_SmartTags() *CT_SmartTags { _gdab := &CT_SmartTags{}; return _gdab }

// ValidateWithPath validates the CT_OleObjectEmbed and its children, prefixing error messages with path
func (_befdd *CT_OleObjectEmbed) ValidateWithPath(path string) error {
	if _dfae := _befdd.FollowColorSchemeAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006clo\u0077\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u0074t\u0072"); _dfae != nil {
		return _dfae
	}
	if _befdd.ExtLst != nil {
		if _cagfaa := _befdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cagfaa != nil {
			return _cagfaa
		}
	}
	return nil
}

func (_fegea ST_TLBehaviorTransformType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fegea.String(), start)
}

func (_cgfd ST_TLChartSubelementType) Validate() error { return _cgfd.ValidateWithPath("") }

func (_agecb *CT_TLAnimVariantStringVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbaga := range start.Attr {
		if _gbaga.Name.Local == "\u0076\u0061\u006c" {
			_fdgg, _dcggg := _gbaga.Value, error(nil)
			if _dcggg != nil {
				return _dcggg
			}
			_agecb.ValAttr = _fdgg
			continue
		}
	}
	for {
		_fcgb, _dcge := d.Token()
		if _dcge != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0053\u0074\u0072\u0069\u006e\u0067\u0056\u0061l\u003a\u0020\u0025\u0073", _dcge)
		}
		if _bfged, _cbgb := _fcgb.(_b.EndElement); _cbgb && _bfged.Name == start.Name {
			break
		}
	}
	return nil
}

func (_efff *CT_OutlineViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efff.CViewPr = NewCT_CommonViewProperties()
_eagc:
	for {
		_efcc, _edaa := d.Token()
		if _edaa != nil {
			return _edaa
		}
		switch _gddf := _efcc.(type) {
		case _b.StartElement:
			switch _gddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _dcdac := d.DecodeElement(_efff.CViewPr, &_gddf); _dcdac != nil {
					return _dcdac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				_efff.SldLst = NewCT_OutlineViewSlideList()
				if _ceg := d.DecodeElement(_efff.SldLst, &_gddf); _ceg != nil {
					return _ceg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efff.ExtLst = NewCT_ExtensionList()
				if _faff := d.DecodeElement(_efff.ExtLst, &_gddf); _faff != nil {
					return _faff
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _gddf.Name)
				if _bfbge := d.Skip(); _bfbge != nil {
					return _bfbge
				}
			}
		case _b.EndElement:
			break _eagc
		case _b.CharData:
		}
	}
	return nil
}

type PresentationPr struct{ CT_PresentationProperties }

type CT_StringTag struct {

	// Name
	NameAttr string

	// Value
	ValAttr string
}

type ST_IterateType byte

type CT_PictureNonVisual struct {
	CNvPr *_bc.CT_NonVisualDrawingProps

	// Non-Visual Picture Drawing Properties
	CNvPicPr *_bc.CT_NonVisualPictureProperties
	NvPr     *CT_ApplicationNonVisualDrawingProps
}

func (_cbgcb *CT_TLAnimateEffectBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbgcb.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _gfgad := range start.Attr {
		if _gfgad.Name.Local == "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e" {
			_cbgcb.TransitionAttr.UnmarshalXMLAttr(_gfgad)
			continue
		}
		if _gfgad.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_gdde, _gdfc := _gfgad.Value, error(nil)
			if _gdfc != nil {
				return _gdfc
			}
			_cbgcb.FilterAttr = &_gdde
			continue
		}
		if _gfgad.Name.Local == "\u0070\u0072\u004cs\u0074" {
			_fggf, _cbcg := _gfgad.Value, error(nil)
			if _cbcg != nil {
				return _cbcg
			}
			_cbgcb.PrLstAttr = &_fggf
			continue
		}
	}
_dfdde:
	for {
		_edaea, _fgaeb := d.Token()
		if _fgaeb != nil {
			return _fgaeb
		}
		switch _fafa := _edaea.(type) {
		case _b.StartElement:
			switch _fafa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _dgeb := d.DecodeElement(_cbgcb.CBhvr, &_fafa); _dgeb != nil {
					return _dgeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}:
				_cbgcb.Progress = NewCT_TLAnimVariant()
				if _bbab := d.DecodeElement(_cbgcb.Progress, &_fafa); _bbab != nil {
					return _bbab
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _fafa.Name)
				if _agbe := d.Skip(); _agbe != nil {
					return _agbe
				}
			}
		case _b.EndElement:
			break _dfdde
		case _b.CharData:
		}
	}
	return nil
}

func (_edfd *ViewPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0076\u0069\u0065\u0077\u0050\u0072"
	return _edfd.CT_ViewProperties.MarshalXML(e, start)
}

func (_bfec *CT_StringTag) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _bfec.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _bfec.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gecc *ST_TLTimeNodeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbadg, _fffdc := d.Token()
	if _fffdc != nil {
		return _fffdc
	}
	if _geece, _edbbg := _bbadg.(_b.EndElement); _edbbg && _geece.Name == start.Name {
		*_gecc = 1
		return nil
	}
	if _fbbaa, _fbbbec := _bbadg.(_b.CharData); !_fbbbec {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbadg)
	} else {
		switch string(_fbbaa) {
		case "":
			*_gecc = 0
		case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
			*_gecc = 1
		case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
			*_gecc = 2
		case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
			*_gecc = 3
		case "\u006da\u0069\u006e\u0053\u0065\u0071":
			*_gecc = 4
		case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
			*_gecc = 5
		case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
			*_gecc = 6
		case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
			*_gecc = 7
		case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_gecc = 8
		case "\u0074\u006d\u0052\u006f\u006f\u0074":
			*_gecc = 9
		}
	}
	_bbadg, _fffdc = d.Token()
	if _fffdc != nil {
		return _fffdc
	}
	if _gcggg, _fgdba := _bbadg.(_b.EndElement); _fgdba && _gcggg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbadg)
}

func NewCT_WheelTransition() *CT_WheelTransition { _afbd := &CT_WheelTransition{}; return _afbd }

func (_caafb ST_TLAnimateBehaviorValueType) Validate() error { return _caafb.ValidateWithPath("") }

func (_adgce *CT_TransitionStartSoundAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adgce.LoopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_adgce.LoopAttr))})
	}
	e.EncodeToken(start)
	_eaaec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073n\u0064"}}
	e.EncodeElement(_adgce.Snd, _eaaec)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_caff *CT_SlideViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_caff.CSldViewPr = NewCT_CommonSlideViewProperties()
_bdfgeb:
	for {
		_efdd, _cbfbe := d.Token()
		if _cbfbe != nil {
			return _cbfbe
		}
		switch _bgda := _efdd.(type) {
		case _b.StartElement:
			switch _bgda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _egdfc := d.DecodeElement(_caff.CSldViewPr, &_bgda); _egdfc != nil {
					return _egdfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caff.ExtLst = NewCT_ExtensionList()
				if _fgbe := d.DecodeElement(_caff.ExtLst, &_bgda); _fgbe != nil {
					return _fgbe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bgda.Name)
				if _ggbed := d.Skip(); _ggbed != nil {
					return _ggbed
				}
			}
		case _b.EndElement:
			break _bdfgeb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Sld and its children, prefixing error messages with path
func (_bfaec *Sld) ValidateWithPath(path string) error {
	if _dagbe := _bfaec.CT_Slide.ValidateWithPath(path); _dagbe != nil {
		return _dagbe
	}
	return nil
}

func (_dgcdf *CT_TLPoint) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _dgcdf.XAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079"}, Value: _fd.Sprintf("\u0025\u0076", _dgcdf.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewSldSyncPr() *SldSyncPr {
	_cbgd := &SldSyncPr{}
	_cbgd.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	return _cbgd
}

func (_gbgf ST_TLAnimateColorDirection) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dedege := _b.Attr{}
	_dedege.Name = name
	switch _gbgf {
	case ST_TLAnimateColorDirectionUnset:
		_dedege.Value = ""
	case ST_TLAnimateColorDirectionCw:
		_dedege.Value = "\u0063\u0077"
	case ST_TLAnimateColorDirectionCcw:
		_dedege.Value = "\u0063\u0063\u0077"
	}
	return _dedege, nil
}

func (_ddde *CT_OptionalBlackTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _deed := range start.Attr {
		if _deed.Name.Local == "\u0074h\u0072\u0075\u0042\u006c\u006b" {
			_acggg, _febf := _f.ParseBool(_deed.Value)
			if _febf != nil {
				return _febf
			}
			_ddde.ThruBlkAttr = &_acggg
			continue
		}
	}
	for {
		_aage, _caga := d.Token()
		if _caga != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006c\u0042\u006c\u0061\u0063\u006bT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _caga)
		}
		if _gabbc, _cdff := _aage.(_b.EndElement); _cdff && _gabbc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TagList and its children
func (_addaa *CT_TagList) Validate() error {
	return _addaa.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074")
}

func (_ddcg *CT_CustomerDataList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ddcg.CustData != nil {
		_bacc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}}
		for _, _cefc := range _ddcg.CustData {
			e.EncodeElement(_cefc, _bacc)
		}
	}
	if _ddcg.Tags != nil {
		_fgaa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0061\u0067\u0073"}}
		e.EncodeElement(_ddcg.Tags, _fgaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLGraphicalObjectBuild struct {

	// Build As One
	BldAsOne *CT_Empty

	// Build Sub Elements
	BldSub       *_bc.CT_AnimationGraphicalObjectBuildProperties
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

// ValidateWithPath validates the CT_CommonSlideViewProperties and its children, prefixing error messages with path
func (_edf *CT_CommonSlideViewProperties) ValidateWithPath(path string) error {
	if _eege := _edf.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _eege != nil {
		return _eege
	}
	if _edf.GuideLst != nil {
		if _ceb := _edf.GuideLst.ValidateWithPath(path + "\u002fG\u0075\u0069\u0064\u0065\u004c\u0073t"); _ceb != nil {
			return _ceb
		}
	}
	return nil
}

func (_bfbbd *CT_PrintProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfbbd.PrnWhatAttr != ST_PrintWhatUnset {
		_eabg, _egdf := _bfbbd.PrnWhatAttr.MarshalXMLAttr(_b.Name{Local: "\u0070r\u006e\u0057\u0068\u0061\u0074"})
		if _egdf != nil {
			return _egdf
		}
		start.Attr = append(start.Attr, _eabg)
	}
	if _bfbbd.ClrModeAttr != ST_PrintColorModeUnset {
		_ebef, _dedc := _bfbbd.ClrModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063l\u0072\u004d\u006f\u0064\u0065"})
		if _dedc != nil {
			return _dedc
		}
		start.Attr = append(start.Attr, _ebef)
	}
	if _bfbbd.HiddenSlidesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bfbbd.HiddenSlidesAttr))})
	}
	if _bfbbd.ScaleToFitPaperAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bfbbd.ScaleToFitPaperAttr))})
	}
	if _bfbbd.FrameSlidesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bfbbd.FrameSlidesAttr))})
	}
	e.EncodeToken(start)
	if _bfbbd.ExtLst != nil {
		_dgab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfbbd.ExtLst, _dgab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCmLst() *CmLst {
	_degbc := &CmLst{}
	_degbc.CT_CommentList = *NewCT_CommentList()
	return _degbc
}

// Validate validates the CT_TLAnimateScaleBehavior and its children
func (_dceba *CT_TLAnimateScaleBehavior) Validate() error {
	return _dceba.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}

// Validate validates the Presentation and its children
func (_ggegbg *Presentation) Validate() error {
	return _ggegbg.ValidateWithPath("\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}

func (_bcac *CT_NormalViewPortion) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u007a"}, Value: _fd.Sprintf("\u0025\u0076", _bcac.SzAttr)})
	if _bcac.AutoAdjustAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bcac.AutoAdjustAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TLAnimateEffectTransition byte

func (_debfg ST_TLTimeNodeSyncType) ValidateWithPath(path string) error {
	switch _debfg {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_debfg))
	}
	return nil
}

func (_ggcbbf *CT_TLMediaNodeAudio) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggcbbf.IsNarrationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ggcbbf.IsNarrationAttr))})
	}
	e.EncodeToken(start)
	_acgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_ggcbbf.CMediaNode, _acgd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HandoutMaster and its children
func (_cdgf *CT_HandoutMaster) Validate() error {
	return _cdgf.ValidateWithPath("\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}

func (_eefbd *ST_TLBehaviorAccumulateType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgefc, _aadae := d.Token()
	if _aadae != nil {
		return _aadae
	}
	if _cccaa, _cccdbb := _cgefc.(_b.EndElement); _cccdbb && _cccaa.Name == start.Name {
		*_eefbd = 1
		return nil
	}
	if _efgbeg, _bdafcf := _cgefc.(_b.CharData); !_bdafcf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgefc)
	} else {
		switch string(_efgbeg) {
		case "":
			*_eefbd = 0
		case "\u006e\u006f\u006e\u0065":
			*_eefbd = 1
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_eefbd = 2
		}
	}
	_cgefc, _aadae = d.Token()
	if _aadae != nil {
		return _aadae
	}
	if _febacf, _ccdc := _cgefc.(_b.EndElement); _ccdc && _febacf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgefc)
}

func NewCT_Shape() *CT_Shape {
	_cffe := &CT_Shape{}
	_cffe.NvSpPr = NewCT_ShapeNonVisual()
	_cffe.SpPr = _bc.NewCT_ShapeProperties()
	return _cffe
}

func (_ggba *CT_EmbeddedFontDataId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cadd := range start.Attr {
		if _cadd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cadd.Name.Local == "\u0069\u0064" || _cadd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cadd.Name.Local == "\u0069\u0064" {
			_aabe, _fcbb := _cadd.Value, error(nil)
			if _fcbb != nil {
				return _fcbb
			}
			_ggba.IdAttr = _aabe
			continue
		}
	}
	for {
		_fgca, _deae := d.Token()
		if _deae != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046o\u006e\u0074\u0044\u0061\u0074\u0061\u0049d\u003a\u0020\u0025\u0073", _deae)
		}
		if _aaed, _decg := _fgca.(_b.EndElement); _decg && _aaed.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cbcdb ST_TLBehaviorAdditiveType) String() string {
	switch _cbcdb {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0073\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u0072\u0065\u0070\u006c"
	case 4:
		return "\u006d\u0075\u006c\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func (_baag *CT_GroupShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cgbe := _b.StartElement{Name: _b.Name{Local: "p\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_baag.NvGrpSpPr, _cgbe)
	_gacb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_baag.GrpSpPr, _gacb)
	if _baag.Choice != nil {
		for _, _gcfb := range _baag.Choice {
			_gcfb.MarshalXML(e, _b.StartElement{})
		}
	}
	if _baag.ExtLst != nil {
		_dgdee := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_baag.ExtLst, _dgdee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PhotoAlbumLayoutUnset      ST_PhotoAlbumLayout = 0
	ST_PhotoAlbumLayoutFitToSlide ST_PhotoAlbumLayout = 1
	ST_PhotoAlbumLayout1pic       ST_PhotoAlbumLayout = 2
	ST_PhotoAlbumLayout2pic       ST_PhotoAlbumLayout = 3
	ST_PhotoAlbumLayout4pic       ST_PhotoAlbumLayout = 4
	ST_PhotoAlbumLayout1picTitle  ST_PhotoAlbumLayout = 5
	ST_PhotoAlbumLayout2picTitle  ST_PhotoAlbumLayout = 6
	ST_PhotoAlbumLayout4picTitle  ST_PhotoAlbumLayout = 7
)

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

// Validate validates the CT_TLCommonMediaNodeData and its children
func (_ccac *CT_TLCommonMediaNodeData) Validate() error {
	return _ccac.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}

func NewCT_SlideSorterViewProperties() *CT_SlideSorterViewProperties {
	_fcee := &CT_SlideSorterViewProperties{}
	_fcee.CViewPr = NewCT_CommonViewProperties()
	return _fcee
}

func (_aafgg *CT_TLShapeTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _aafgg.SpidAttr)})
	e.EncodeToken(start)
	if _aafgg.Bg != nil {
		_efeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_aafgg.Bg, _efeg)
	}
	if _aafgg.SubSp != nil {
		_aaea := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0075\u0062\u0053\u0070"}}
		e.EncodeElement(_aafgg.SubSp, _aaea)
	}
	if _aafgg.OleChartEl != nil {
		_eaadc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006fl\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}}
		e.EncodeElement(_aafgg.OleChartEl, _eaadc)
	}
	if _aafgg.TxEl != nil {
		_gaagd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0078\u0045\u006c"}}
		e.EncodeElement(_aafgg.TxEl, _gaagd)
	}
	if _aafgg.GraphicEl != nil {
		_baacg := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"}}
		e.EncodeElement(_aafgg.GraphicEl, _baacg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cdbbc ST_SlideSizeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdbbc.String(), start)
}

// Validate validates the CT_SlideTransition and its children
func (_gdcea *CT_SlideTransition) Validate() error {
	return _gdcea.ValidateWithPath("\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

const (
	ST_SplitterBarStateUnset     ST_SplitterBarState = 0
	ST_SplitterBarStateMinimized ST_SplitterBarState = 1
	ST_SplitterBarStateRestored  ST_SplitterBarState = 2
	ST_SplitterBarStateMaximized ST_SplitterBarState = 3
)

func (_eadg *CT_EmbeddedFontListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eadg.Font = _bc.NewCT_TextFont()
_fdcc:
	for {
		_ddd, _cff := d.Token()
		if _cff != nil {
			return _cff
		}
		switch _eacc := _ddd.(type) {
		case _b.StartElement:
			switch _eacc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				if _ccgcf := d.DecodeElement(_eadg.Font, &_eacc); _ccgcf != nil {
					return _ccgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}:
				_eadg.Regular = NewCT_EmbeddedFontDataId()
				if _bfda := d.DecodeElement(_eadg.Regular, &_eacc); _bfda != nil {
					return _bfda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}:
				_eadg.Bold = NewCT_EmbeddedFontDataId()
				if _cgga := d.DecodeElement(_eadg.Bold, &_eacc); _cgga != nil {
					return _cgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}:
				_eadg.Italic = NewCT_EmbeddedFontDataId()
				if _dacb := d.DecodeElement(_eadg.Italic, &_eacc); _dacb != nil {
					return _dacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}:
				_eadg.BoldItalic = NewCT_EmbeddedFontDataId()
				if _cbea := d.DecodeElement(_eadg.BoldItalic, &_eacc); _cbea != nil {
					return _cbea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074E\u006e\u0074\u0072\u0079\u0020%\u0076", _eacc.Name)
				if _aeggb := d.Skip(); _aeggb != nil {
					return _aeggb
				}
			}
		case _b.EndElement:
			break _fdcc
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLAnimVariantStringVal struct {

	// Value
	ValAttr string
}

func NewCT_OleObjectEmbed() *CT_OleObjectEmbed { _cbca := &CT_OleObjectEmbed{}; return _cbca }

type ST_SplitterBarState byte

func (_eafec *CT_SlideSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _eafec.CxAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0079"}, Value: _fd.Sprintf("\u0025\u0076", _eafec.CyAttr)})
	if _eafec.TypeAttr != ST_SlideSizeTypeUnset {
		_edfe, _faccg := _eafec.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _faccg != nil {
			return _faccg
		}
		start.Attr = append(start.Attr, _edfe)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ddbbb *ST_TLAnimateColorDirection) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ddbbb = 0
	case "\u0063\u0077":
		*_ddbbb = 1
	case "\u0063\u0063\u0077":
		*_ddbbb = 2
	}
	return nil
}

func (_cagd *CT_Presentation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cagd.NotesSz = _bc.NewCT_PositiveSize2D()
	for _, _bcb := range start.Attr {
		if _bcb.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_ebagc, _agfb := _f.ParseInt(_bcb.Value, 10, 32)
			if _agfb != nil {
				return _agfb
			}
			_fedd := int32(_ebagc)
			_cagd.FirstSlideNumAttr = &_fedd
			continue
		}
		if _bcb.Name.Local == "\u0072\u0074\u006c" {
			_bcfb, _gcgd := _f.ParseBool(_bcb.Value)
			if _gcgd != nil {
				return _gcgd
			}
			_cagd.RtlAttr = &_bcfb
			continue
		}
		if _bcb.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_gcfaa, _dcba := _f.ParseBool(_bcb.Value)
			if _dcba != nil {
				return _dcba
			}
			_cagd.CompatModeAttr = &_gcfaa
			continue
		}
		if _bcb.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_bdcd, _adfbd := _f.ParseBool(_bcb.Value)
			if _adfbd != nil {
				return _adfbd
			}
			_cagd.EmbedTrueTypeFontsAttr = &_bdcd
			continue
		}
		if _bcb.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_adfe, _bbaad := _f.ParseBool(_bcb.Value)
			if _bbaad != nil {
				return _bbaad
			}
			_cagd.AutoCompressPicturesAttr = &_adfe
			continue
		}
		if _bcb.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_aecgf, _gegbd := _f.ParseBool(_bcb.Value)
			if _gegbd != nil {
				return _gegbd
			}
			_cagd.ShowSpecialPlsOnTitleSldAttr = &_aecgf
			continue
		}
		if _bcb.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_acagc, _bebf := ParseUnionST_Percentage(_bcb.Value)
			if _bebf != nil {
				return _bebf
			}
			_cagd.ServerZoomAttr = &_acagc
			continue
		}
		if _bcb.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_cagd.ConformanceAttr.UnmarshalXMLAttr(_bcb)
			continue
		}
		if _bcb.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_abfa, _ggaf := _f.ParseBool(_bcb.Value)
			if _ggaf != nil {
				return _ggaf
			}
			_cagd.RemovePersonalInfoOnSaveAttr = &_abfa
			continue
		}
		if _bcb.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_eeca, _fdge := _f.ParseBool(_bcb.Value)
			if _fdge != nil {
				return _fdge
			}
			_cagd.SaveSubsetFontsAttr = &_eeca
			continue
		}
		if _bcb.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_dffa, _fgeb := _f.ParseUint(_bcb.Value, 10, 32)
			if _fgeb != nil {
				return _fgeb
			}
			_ffecc := uint32(_dffa)
			_cagd.BookmarkIdSeedAttr = &_ffecc
			continue
		}
		if _bcb.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_faddd, _bbgda := _f.ParseBool(_bcb.Value)
			if _bbgda != nil {
				return _bbgda
			}
			_cagd.StrictFirstAndLastCharsAttr = &_faddd
			continue
		}
	}
_eafa:
	for {
		_bafc, _badd := d.Token()
		if _badd != nil {
			return _badd
		}
		switch _dfdd := _bafc.(type) {
		case _b.StartElement:
			switch _dfdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_cagd.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _ceag := d.DecodeElement(_cagd.SldMasterIdLst, &_dfdd); _ceag != nil {
					return _ceag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_cagd.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _fgaeg := d.DecodeElement(_cagd.NotesMasterIdLst, &_dfdd); _fgaeg != nil {
					return _fgaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_cagd.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _bbff := d.DecodeElement(_cagd.HandoutMasterIdLst, &_dfdd); _bbff != nil {
					return _bbff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_cagd.SldIdLst = NewCT_SlideIdList()
				if _bgcf := d.DecodeElement(_cagd.SldIdLst, &_dfdd); _bgcf != nil {
					return _bgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_cagd.SldSz = NewCT_SlideSize()
				if _egbc := d.DecodeElement(_cagd.SldSz, &_dfdd); _egbc != nil {
					return _egbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _dacbb := d.DecodeElement(_cagd.NotesSz, &_dfdd); _dacbb != nil {
					return _dacbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_cagd.SmartTags = NewCT_SmartTags()
				if _dggf := d.DecodeElement(_cagd.SmartTags, &_dfdd); _dggf != nil {
					return _dggf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_cagd.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _dacfb := d.DecodeElement(_cagd.EmbeddedFontLst, &_dfdd); _dacfb != nil {
					return _dacfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_cagd.CustShowLst = NewCT_CustomShowList()
				if _deabb := d.DecodeElement(_cagd.CustShowLst, &_dfdd); _deabb != nil {
					return _deabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_cagd.PhotoAlbum = NewCT_PhotoAlbum()
				if _gaacf := d.DecodeElement(_cagd.PhotoAlbum, &_dfdd); _gaacf != nil {
					return _gaacf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_cagd.CustDataLst = NewCT_CustomerDataList()
				if _dggd := d.DecodeElement(_cagd.CustDataLst, &_dfdd); _dggd != nil {
					return _dggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_cagd.Kinsoku = NewCT_Kinsoku()
				if _geed := d.DecodeElement(_cagd.Kinsoku, &_dfdd); _geed != nil {
					return _geed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_cagd.DefaultTextStyle = _bc.NewCT_TextListStyle()
				if _cdggd := d.DecodeElement(_cagd.DefaultTextStyle, &_dfdd); _cdggd != nil {
					return _cdggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_cagd.ModifyVerifier = NewCT_ModifyVerifier()
				if _ffeb := d.DecodeElement(_cagd.ModifyVerifier, &_dfdd); _ffeb != nil {
					return _ffeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cagd.ExtLst = NewCT_ExtensionList()
				if _dgfd := d.DecodeElement(_cagd.ExtLst, &_dfdd); _dgfd != nil {
					return _dgfd
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _dfdd.Name)
				if _aada := d.Skip(); _aada != nil {
					return _aada
				}
			}
		case _b.EndElement:
			break _eafa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_ceeb *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _adcc := _ceeb.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _adcc != nil {
		return _adcc
	}
	if _bafg := _ceeb.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _bafg != nil {
		return _bafg
	}
	if _bfge := _ceeb.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _bfge != nil {
		return _bfge
	}
	if _gada := _ceeb.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _gada != nil {
		return _gada
	}
	if _ceeb.ExtLst != nil {
		if _aebe := _ceeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aebe != nil {
			return _aebe
		}
	}
	return nil
}

func (_bggfb *CT_SlideRelationshipListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bggfb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_NormalViewProperties struct {

	// Show Outline Icons in Normal View
	ShowOutlineIconsAttr *bool

	// Snap Vertical Splitter
	SnapVertSplitterAttr *bool

	// State of the Vertical Splitter Bar
	VertBarStateAttr ST_SplitterBarState

	// State of the Horizontal Splitter Bar
	HorzBarStateAttr ST_SplitterBarState

	// Prefer Single View
	PreferSingleViewAttr *bool

	// Normal View Restored Left Properties
	RestoredLeft *CT_NormalViewPortion

	// Normal View Restored Top Properties
	RestoredTop *CT_NormalViewPortion
	ExtLst      *CT_ExtensionList
}

func NewCT_TLTimeNodeParallel() *CT_TLTimeNodeParallel {
	_cdaf := &CT_TLTimeNodeParallel{}
	_cdaf.CTn = NewCT_TLCommonTimeNodeData()
	return _cdaf
}

func (_gbfde ST_TLCommandType) ValidateWithPath(path string) error {
	switch _gbfde {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbfde))
	}
	return nil
}

func (_dbff *CT_TLAnimVariantBooleanVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(_dbff.ValAttr))})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLBehaviorAccumulateTypeUnset  ST_TLBehaviorAccumulateType = 0
	ST_TLBehaviorAccumulateTypeNone   ST_TLBehaviorAccumulateType = 1
	ST_TLBehaviorAccumulateTypeAlways ST_TLBehaviorAccumulateType = 2
)

func (_ecfaa *CT_TLAnimVariant) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_degc:
	for {
		_fgcc, _edbd := d.Token()
		if _edbd != nil {
			return _edbd
		}
		switch _effeff := _fgcc.(type) {
		case _b.StartElement:
			switch _effeff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}:
				_ecfaa.BoolVal = NewCT_TLAnimVariantBooleanVal()
				if _fcadc := d.DecodeElement(_ecfaa.BoolVal, &_effeff); _fcadc != nil {
					return _fcadc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}:
				_ecfaa.IntVal = NewCT_TLAnimVariantIntegerVal()
				if _bdecb := d.DecodeElement(_ecfaa.IntVal, &_effeff); _bdecb != nil {
					return _bdecb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}:
				_ecfaa.FltVal = NewCT_TLAnimVariantFloatVal()
				if _dfdcb := d.DecodeElement(_ecfaa.FltVal, &_effeff); _dfdcb != nil {
					return _dfdcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}:
				_ecfaa.StrVal = NewCT_TLAnimVariantStringVal()
				if _gcbfa := d.DecodeElement(_ecfaa.StrVal, &_effeff); _gcbfa != nil {
					return _gcbfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}:
				_ecfaa.ClrVal = _bc.NewCT_Color()
				if _eddb := d.DecodeElement(_ecfaa.ClrVal, &_effeff); _eddb != nil {
					return _eddb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0020\u0025v", _effeff.Name)
				if _dfefa := d.Skip(); _dfefa != nil {
					return _dfefa
				}
			}
		case _b.EndElement:
			break _degc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CommonViewProperties and its children
func (_aed *CT_CommonViewProperties) Validate() error {
	return _aed.ValidateWithPath("\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_de *AG_ChildSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gd := range start.Attr {
		if _gd.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_aa, _ge := _f.ParseBool(_gd.Value)
			if _ge != nil {
				return _ge
			}
			_de.ShowMasterSpAttr = &_aa
			continue
		}
		if _gd.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_ca, _bcc := _f.ParseBool(_gd.Value)
			if _bcc != nil {
				return _bcc
			}
			_de.ShowMasterPhAnimAttr = &_ca
			continue
		}
	}
	for {
		_ff, _ad := d.Token()
		if _ad != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0043h\u0069l\u0064S\u006c\u0069\u0064\u0065\u003a\u0020\u0025s", _ad)
		}
		if _cf, _ga := _ff.(_b.EndElement); _ga && _cf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eccgf *CT_TLBuildDiagram) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eccgf.BldAttr != ST_TLDiagramBuildTypeUnset {
		_egba, _dbdbe := _eccgf.BldAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u006c\u0064"})
		if _dbdbe != nil {
			return _dbdbe
		}
		start.Attr = append(start.Attr, _egba)
	}
	if _eccgf.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eccgf.SpidAttr)})
	}
	if _eccgf.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eccgf.GrpIdAttr)})
	}
	if _eccgf.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_eccgf.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type Presentation struct{ CT_Presentation }

func (_gacea *ST_TransitionInOutDirectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gacea = 0
	case "\u006f\u0075\u0074":
		*_gacea = 1
	case "\u0069\u006e":
		*_gacea = 2
	}
	return nil
}

func NewCT_TLTimeConditionList() *CT_TLTimeConditionList {
	_fccb := &CT_TLTimeConditionList{}
	return _fccb
}

// ValidateWithPath validates the CT_TLSetBehavior and its children, prefixing error messages with path
func (_dccd *CT_TLSetBehavior) ValidateWithPath(path string) error {
	if _fggcc := _dccd.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _fggcc != nil {
		return _fggcc
	}
	if _dccd.To != nil {
		if _eebfg := _dccd.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _eebfg != nil {
			return _eebfg
		}
	}
	return nil
}

func (_gcgf ST_TLAnimateBehaviorValueType) ValidateWithPath(path string) error {
	switch _gcgf {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcgf))
	}
	return nil
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_ffd *CT_ExtensionList) ValidateWithPath(path string) error {
	for _ecfa, _efa := range _ffd.Ext {
		if _begc := _efa.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _ecfa)); _begc != nil {
			return _begc
		}
	}
	return nil
}

type ST_TLTimeIndefinite byte

func NewCT_TLTemplateList() *CT_TLTemplateList { _adcgc := &CT_TLTemplateList{}; return _adcgc }

func (_bgega *ST_TLTimeNodeMasterRelation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbeb, _degg := d.Token()
	if _degg != nil {
		return _degg
	}
	if _befbgc, _agfbbb := _cbeb.(_b.EndElement); _agfbbb && _befbgc.Name == start.Name {
		*_bgega = 1
		return nil
	}
	if _fddgc, _bbadba := _cbeb.(_b.CharData); !_bbadba {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbeb)
	} else {
		switch string(_fddgc) {
		case "":
			*_bgega = 0
		case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
			*_bgega = 1
		case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
			*_bgega = 2
		case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
			*_bgega = 3
		}
	}
	_cbeb, _degg = d.Token()
	if _degg != nil {
		return _degg
	}
	if _ffgfg, _eebd := _cbeb.(_b.EndElement); _eebd && _ffgfg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbeb)
}

func (_cafee *Sld) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cafee.CT_Slide = *NewCT_Slide()
	for _, _eegf := range start.Attr {
		if _eegf.Name.Local == "\u0073\u0068\u006f\u0077" {
			_eedgf, _agdfc := _f.ParseBool(_eegf.Value)
			if _agdfc != nil {
				return _agdfc
			}
			_cafee.ShowAttr = &_eedgf
			continue
		}
		if _eegf.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_dfcdd, _aceed := _f.ParseBool(_eegf.Value)
			if _aceed != nil {
				return _aceed
			}
			_cafee.ShowMasterSpAttr = &_dfcdd
			continue
		}
		if _eegf.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_adgd, _gggfb := _f.ParseBool(_eegf.Value)
			if _gggfb != nil {
				return _gggfb
			}
			_cafee.ShowMasterPhAnimAttr = &_adgd
			continue
		}
	}
_gabgg:
	for {
		_eggdb, _gcafcg := d.Token()
		if _gcafcg != nil {
			return _gcafcg
		}
		switch _fbbbb := _eggdb.(type) {
		case _b.StartElement:
			switch _fbbbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _bfag := d.DecodeElement(_cafee.CSld, &_fbbbb); _bfag != nil {
					return _bfag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_cafee.ClrMapOvr = _bc.NewCT_ColorMappingOverride()
				if _gbfec := d.DecodeElement(_cafee.ClrMapOvr, &_fbbbb); _gbfec != nil {
					return _gbfec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_cafee.Transition = NewCT_SlideTransition()
				if _bdabb := d.DecodeElement(_cafee.Transition, &_fbbbb); _bdabb != nil {
					return _bdabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_cafee.Timing = NewCT_SlideTiming()
				if _dfeeb := d.DecodeElement(_cafee.Timing, &_fbbbb); _dfeeb != nil {
					return _dfeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cafee.ExtLst = NewCT_ExtensionListModify()
				if _caea := d.DecodeElement(_cafee.ExtLst, &_fbbbb); _caea != nil {
					return _caea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053l\u0064\u0020\u0025\u0076", _fbbbb.Name)
				if _gaabe := d.Skip(); _gaabe != nil {
					return _gaabe
				}
			}
		case _b.EndElement:
			break _gabgg
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_WebScreenSizeUnset     ST_WebScreenSize = 0
	ST_WebScreenSize544x376   ST_WebScreenSize = 1
	ST_WebScreenSize640x480   ST_WebScreenSize = 2
	ST_WebScreenSize720x512   ST_WebScreenSize = 3
	ST_WebScreenSize800x600   ST_WebScreenSize = 4
	ST_WebScreenSize1024x768  ST_WebScreenSize = 5
	ST_WebScreenSize1152x882  ST_WebScreenSize = 6
	ST_WebScreenSize1152x900  ST_WebScreenSize = 7
	ST_WebScreenSize1280x1024 ST_WebScreenSize = 8
	ST_WebScreenSize1600x1200 ST_WebScreenSize = 9
	ST_WebScreenSize1800x1400 ST_WebScreenSize = 10
	ST_WebScreenSize1920x1200 ST_WebScreenSize = 11
)

func (_gcbf *CT_SlideLayoutIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_afcc:
	for {
		_faba, _fdbgc := d.Token()
		if _fdbgc != nil {
			return _fdbgc
		}
		switch _dcddf := _faba.(type) {
		case _b.StartElement:
			switch _dcddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}:
				_aebgf := NewCT_SlideLayoutIdListEntry()
				if _ggca := d.DecodeElement(_aebgf, &_dcddf); _ggca != nil {
					return _ggca
				}
				_gcbf.SldLayoutId = append(_gcbf.SldLayoutId, _aebgf)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dcddf.Name)
				if _effed := d.Skip(); _effed != nil {
					return _effed
				}
			}
		case _b.EndElement:
			break _afcc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideLayoutIdList and its children
func (_gedc *CT_SlideLayoutIdList) Validate() error {
	return _gedc.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074")
}

func NewCT_SlideLayout() *CT_SlideLayout {
	_efac := &CT_SlideLayout{}
	_efac.CSld = NewCT_CommonSlideData()
	return _efac
}

type CT_NotesMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_cfgda *CT_GroupShape) ValidateWithPath(path string) error {
	if _begd := _cfgda.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _begd != nil {
		return _begd
	}
	if _gdbf := _cfgda.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _gdbf != nil {
		return _gdbf
	}
	for _dbaa, _caf := range _cfgda.Choice {
		if _dddf := _caf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _dbaa)); _dddf != nil {
			return _dddf
		}
	}
	if _cfgda.ExtLst != nil {
		if _fbff := _cfgda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbff != nil {
			return _fbff
		}
	}
	return nil
}

type CT_Presentation struct {

	// Server Zoom
	ServerZoomAttr *_bc.ST_Percentage

	// First Slide Number
	FirstSlideNumAttr *int32

	// Show Header and Footer Placeholders on Titles
	ShowSpecialPlsOnTitleSldAttr *bool

	// Right-To-Left Views
	RtlAttr *bool

	// Remove Personal Information on Save
	RemovePersonalInfoOnSaveAttr *bool

	// Compatibility Mode
	CompatModeAttr *bool

	// Strict First and Last Characters
	StrictFirstAndLastCharsAttr *bool

	// Embed True Type Fonts
	EmbedTrueTypeFontsAttr *bool

	// Save Subset Fonts
	SaveSubsetFontsAttr *bool

	// Automatically Compress Pictures
	AutoCompressPicturesAttr *bool

	// Bookmark ID Seed
	BookmarkIdSeedAttr *uint32

	// Document Conformance Class
	ConformanceAttr _e.ST_ConformanceClass

	// List of Slide Master IDs
	SldMasterIdLst *CT_SlideMasterIdList

	// List of Notes Master IDs
	NotesMasterIdLst *CT_NotesMasterIdList

	// List of Handout Master IDs
	HandoutMasterIdLst *CT_HandoutMasterIdList

	// List of Slide IDs
	SldIdLst *CT_SlideIdList

	// Presentation Slide Size
	SldSz *CT_SlideSize

	// Notes Slide Size
	NotesSz *_bc.CT_PositiveSize2D

	// Smart Tags
	SmartTags *CT_SmartTags

	// Embedded Font List
	EmbeddedFontLst *CT_EmbeddedFontList

	// List of Custom Shows
	CustShowLst *CT_CustomShowList

	// Photo Album Information
	PhotoAlbum *CT_PhotoAlbum

	// List of Customer Data Buckets
	CustDataLst *CT_CustomerDataList

	// Kinsoku Settings
	Kinsoku *CT_Kinsoku

	// Presentation Default Text Style
	DefaultTextStyle *_bc.CT_TextListStyle

	// Modification Verifier
	ModifyVerifier *CT_ModifyVerifier

	// Extension List
	ExtLst *CT_ExtensionList
}

func (_gdeae *ST_TLTriggerEvent) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gdeae = 0
	case "\u006fn\u0042\u0065\u0067\u0069\u006e":
		*_gdeae = 1
	case "\u006f\u006e\u0045n\u0064":
		*_gdeae = 2
	case "\u0062\u0065\u0067i\u006e":
		*_gdeae = 3
	case "\u0065\u006e\u0064":
		*_gdeae = 4
	case "\u006fn\u0043\u006c\u0069\u0063\u006b":
		*_gdeae = 5
	case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
		*_gdeae = 6
	case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
		*_gdeae = 7
	case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
		*_gdeae = 8
	case "\u006f\u006e\u004e\u0065\u0078\u0074":
		*_gdeae = 9
	case "\u006f\u006e\u0050\u0072\u0065\u0076":
		*_gdeae = 10
	case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
		*_gdeae = 11
	}
	return nil
}

func NewCT_TLSubShapeId() *CT_TLSubShapeId { _gbdfa := &CT_TLSubShapeId{}; return _gbdfa }

func (_gbbaa ST_TLBehaviorTransformType) String() string {
	switch _gbbaa {
	case 0:
		return ""
	case 1:
		return "\u0070\u0074"
	case 2:
		return "\u0069\u006d\u0067"
	}
	return ""
}

func (_gdbbc ST_TLTimeNodeFillType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdgagb := _b.Attr{}
	_gdgagb.Name = name
	switch _gdbbc {
	case ST_TLTimeNodeFillTypeUnset:
		_gdgagb.Value = ""
	case ST_TLTimeNodeFillTypeRemove:
		_gdgagb.Value = "\u0072\u0065\u006d\u006f\u0076\u0065"
	case ST_TLTimeNodeFillTypeFreeze:
		_gdgagb.Value = "\u0066\u0072\u0065\u0065\u007a\u0065"
	case ST_TLTimeNodeFillTypeHold:
		_gdgagb.Value = "\u0068\u006f\u006c\u0064"
	case ST_TLTimeNodeFillTypeTransition:
		_gdgagb.Value = "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return _gdgagb, nil
}

func (_baee *CT_OrientationTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _affd := range start.Attr {
		if _affd.Name.Local == "\u0064\u0069\u0072" {
			_baee.DirAttr.UnmarshalXMLAttr(_affd)
			continue
		}
	}
	for {
		_efda, _deee := d.Token()
		if _deee != nil {
			return _fd.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004frie\u006eta\u0074\u0069\u006f\u006e\u0054\u0072\u0061ns\u0069\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _deee)
		}
		if _adfd, _cabg := _efda.(_b.EndElement); _cabg && _adfd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbac ST_WebScreenSize) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbdgd := _b.Attr{}
	_fbdgd.Name = name
	switch _gbac {
	case ST_WebScreenSizeUnset:
		_fbdgd.Value = ""
	case ST_WebScreenSize544x376:
		_fbdgd.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_WebScreenSize640x480:
		_fbdgd.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_WebScreenSize720x512:
		_fbdgd.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_WebScreenSize800x600:
		_fbdgd.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_WebScreenSize1024x768:
		_fbdgd.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_WebScreenSize1152x882:
		_fbdgd.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_WebScreenSize1152x900:
		_fbdgd.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_WebScreenSize1280x1024:
		_fbdgd.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_WebScreenSize1600x1200:
		_fbdgd.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_WebScreenSize1800x1400:
		_fbdgd.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case ST_WebScreenSize1920x1200:
		_fbdgd.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _fbdgd, nil
}

// Validate validates the CT_HeaderFooter and its children
func (_acbc *CT_HeaderFooter) Validate() error {
	return _acbc.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

func (_ffbcbf *Presentation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e"
	return _ffbcbf.CT_Presentation.MarshalXML(e, start)
}

type CT_OutlineViewProperties struct {

	// Common View Properties
	CViewPr *CT_CommonViewProperties

	// List of Presentation Slides
	SldLst *CT_OutlineViewSlideList
	ExtLst *CT_ExtensionList
}

func NewCT_OptionalBlackTransition() *CT_OptionalBlackTransition {
	_cfaf := &CT_OptionalBlackTransition{}
	return _cfaf
}

func NewCT_GuideList() *CT_GuideList { _afeb := &CT_GuideList{}; return _afeb }

type TagLst struct{ CT_TagList }

func (_gggeg *CT_Placeholder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbfc := range start.Attr {
		if _fbfc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gggeg.TypeAttr.UnmarshalXMLAttr(_fbfc)
			continue
		}
		if _fbfc.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_gggeg.OrientAttr.UnmarshalXMLAttr(_fbfc)
			continue
		}
		if _fbfc.Name.Local == "\u0073\u007a" {
			_gggeg.SzAttr.UnmarshalXMLAttr(_fbfc)
			continue
		}
		if _fbfc.Name.Local == "\u0069\u0064\u0078" {
			_aceca, _gbbb := _f.ParseUint(_fbfc.Value, 10, 32)
			if _gbbb != nil {
				return _gbbb
			}
			_afdf := uint32(_aceca)
			_gggeg.IdxAttr = &_afdf
			continue
		}
		if _fbfc.Name.Local == "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074" {
			_ccfd, _bggf := _f.ParseBool(_fbfc.Value)
			if _bggf != nil {
				return _bggf
			}
			_gggeg.HasCustomPromptAttr = &_ccfd
			continue
		}
	}
_abdf:
	for {
		_fcdea, _cccf := d.Token()
		if _cccf != nil {
			return _cccf
		}
		switch _egbeg := _fcdea.(type) {
		case _b.StartElement:
			switch _egbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gggeg.ExtLst = NewCT_ExtensionListModify()
				if _adbc := d.DecodeElement(_gggeg.ExtLst, &_egbeg); _adbc != nil {
					return _adbc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068\u006fl\u0064e\u0072\u0020\u0025\u0076", _egbeg.Name)
				if _edcg := d.Skip(); _edcg != nil {
					return _edcg
				}
			}
		case _b.EndElement:
			break _abdf
		case _b.CharData:
		}
	}
	return nil
}

type ST_TLBehaviorAccumulateType byte

func (_cgfdd ST_TLPreviousActionType) Validate() error { return _cgfdd.ValidateWithPath("") }

func NewCT_TLTriggerRuntimeNode() *CT_TLTriggerRuntimeNode {
	_facdg := &CT_TLTriggerRuntimeNode{}
	_facdg.ValAttr = ST_TLTriggerRuntimeNode(1)
	return _facdg
}

const (
	ST_TLPreviousActionTypeUnset     ST_TLPreviousActionType = 0
	ST_TLPreviousActionTypeNone      ST_TLPreviousActionType = 1
	ST_TLPreviousActionTypeSkipTimed ST_TLPreviousActionType = 2
)

// ValidateWithPath validates the OleObj and its children, prefixing error messages with path
func (_cafb *OleObj) ValidateWithPath(path string) error {
	if _bbeeb := _cafb.CT_OleObject.ValidateWithPath(path); _bbeeb != nil {
		return _bbeeb
	}
	return nil
}

func (_bdece ST_TransitionInOutDirectionType) String() string {
	switch _bdece {
	case 0:
		return ""
	case 1:
		return "\u006f\u0075\u0074"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

func (_eeggb *CT_SlideMasterIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdbfg:
	for {
		_dbadgb, _cfdba := d.Token()
		if _cfdba != nil {
			return _cfdba
		}
		switch _afdc := _dbadgb.(type) {
		case _b.StartElement:
			switch _afdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_eddef := NewCT_SlideMasterIdListEntry()
				if _dfef := d.DecodeElement(_eddef, &_afdc); _dfef != nil {
					return _dfef
				}
				_eeggb.SldMasterId = append(_eeggb.SldMasterId, _eddef)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _afdc.Name)
				if _ggcbd := d.Skip(); _ggcbd != nil {
					return _ggcbd
				}
			}
		case _b.EndElement:
			break _cdbfg
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TLDiagramBuildTypeUnset         ST_TLDiagramBuildType = 0
	ST_TLDiagramBuildTypeWhole         ST_TLDiagramBuildType = 1
	ST_TLDiagramBuildTypeDepthByNode   ST_TLDiagramBuildType = 2
	ST_TLDiagramBuildTypeDepthByBranch ST_TLDiagramBuildType = 3
	ST_TLDiagramBuildTypeBreadthByNode ST_TLDiagramBuildType = 4
	ST_TLDiagramBuildTypeBreadthByLvl  ST_TLDiagramBuildType = 5
	ST_TLDiagramBuildTypeCw            ST_TLDiagramBuildType = 6
	ST_TLDiagramBuildTypeCwIn          ST_TLDiagramBuildType = 7
	ST_TLDiagramBuildTypeCwOut         ST_TLDiagramBuildType = 8
	ST_TLDiagramBuildTypeCcw           ST_TLDiagramBuildType = 9
	ST_TLDiagramBuildTypeCcwIn         ST_TLDiagramBuildType = 10
	ST_TLDiagramBuildTypeCcwOut        ST_TLDiagramBuildType = 11
	ST_TLDiagramBuildTypeInByRing      ST_TLDiagramBuildType = 12
	ST_TLDiagramBuildTypeOutByRing     ST_TLDiagramBuildType = 13
	ST_TLDiagramBuildTypeUp            ST_TLDiagramBuildType = 14
	ST_TLDiagramBuildTypeDown          ST_TLDiagramBuildType = 15
	ST_TLDiagramBuildTypeAllAtOnce     ST_TLDiagramBuildType = 16
	ST_TLDiagramBuildTypeCust          ST_TLDiagramBuildType = 17
)

func (_adeb ST_TLTimeIndefinite) Validate() error { return _adeb.ValidateWithPath("") }

func (_bagec ST_WebScreenSize) ValidateWithPath(path string) error {
	switch _bagec {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bagec))
	}
	return nil
}

func (_agbdc *CT_Picture) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agbdc.NvPicPr = NewCT_PictureNonVisual()
	_agbdc.BlipFill = _bc.NewCT_BlipFillProperties()
	_agbdc.SpPr = _bc.NewCT_ShapeProperties()
_cgbb:
	for {
		_ffdcg, _fgbd := d.Token()
		if _fgbd != nil {
			return _fgbd
		}
		switch _gebd := _ffdcg.(type) {
		case _b.StartElement:
			switch _gebd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _cdggc := d.DecodeElement(_agbdc.NvPicPr, &_gebd); _cdggc != nil {
					return _cdggc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _fddf := d.DecodeElement(_agbdc.BlipFill, &_gebd); _fddf != nil {
					return _fddf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _fdcgac := d.DecodeElement(_agbdc.SpPr, &_gebd); _fdcgac != nil {
					return _fdcgac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_agbdc.Style = _bc.NewCT_ShapeStyle()
				if _feace := d.DecodeElement(_agbdc.Style, &_gebd); _feace != nil {
					return _feace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agbdc.ExtLst = NewCT_ExtensionListModify()
				if _bcadc := d.DecodeElement(_agbdc.ExtLst, &_gebd); _bcadc != nil {
					return _bcadc
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _gebd.Name)
				if _eafc := d.Skip(); _eafc != nil {
					return _eafc
				}
			}
		case _b.EndElement:
			break _cgbb
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_ViewProperties() *CT_ViewProperties { _fecce := &CT_ViewProperties{}; return _fecce }

func (_bdba *CT_OleObjectLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _deeg := range start.Attr {
		if _deeg.Name.Local == "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063" {
			_ffbca, _fgcb := _f.ParseBool(_deeg.Value)
			if _fgcb != nil {
				return _fgcb
			}
			_bdba.UpdateAutomaticAttr = &_ffbca
			continue
		}
	}
_ebga:
	for {
		_ccgbe, _ddcge := d.Token()
		if _ddcge != nil {
			return _ddcge
		}
		switch _dedg := _ccgbe.(type) {
		case _b.StartElement:
			switch _dedg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdba.ExtLst = NewCT_ExtensionList()
				if _egfe := d.DecodeElement(_bdba.ExtLst, &_dedg); _egfe != nil {
					return _egfe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b\u0020\u0025v", _dedg.Name)
				if _egad := d.Skip(); _egad != nil {
					return _egad
				}
			}
		case _b.EndElement:
			break _ebga
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PresentationProperties and its children, prefixing error messages with path
func (_dbadg *CT_PresentationProperties) ValidateWithPath(path string) error {
	if _dbadg.HtmlPubPr != nil {
		if _dedd := _dbadg.HtmlPubPr.ValidateWithPath(path + "\u002f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"); _dedd != nil {
			return _dedd
		}
	}
	if _dbadg.WebPr != nil {
		if _gbce := _dbadg.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _gbce != nil {
			return _gbce
		}
	}
	if _dbadg.PrnPr != nil {
		if _cbfff := _dbadg.PrnPr.ValidateWithPath(path + "\u002f\u0050\u0072\u006e\u0050\u0072"); _cbfff != nil {
			return _cbfff
		}
	}
	if _dbadg.ShowPr != nil {
		if _dcdad := _dbadg.ShowPr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0050\u0072"); _dcdad != nil {
			return _dcdad
		}
	}
	if _dbadg.ClrMru != nil {
		if _ggcb := _dbadg.ClrMru.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0072\u0075"); _ggcb != nil {
			return _ggcb
		}
	}
	if _dbadg.ExtLst != nil {
		if _ageb := _dbadg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ageb != nil {
			return _ageb
		}
	}
	return nil
}

type CT_ModifyVerifier struct {

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinValueAttr *uint32

	// Cryptographic Provider Type
	CryptProviderTypeAttr _e.ST_CryptProv

	// Cryptographic Algorithm Class
	CryptAlgorithmClassAttr _e.ST_AlgClass

	// Cryptographic Algorithm Type
	CryptAlgorithmTypeAttr _e.ST_AlgType

	// Cryptographic Hashing Algorithm
	CryptAlgorithmSidAttr *uint32

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Salt for Password Verifier
	SaltDataAttr *string

	// Password Hash
	HashDataAttr *string

	// Cryptographic Provider
	CryptProviderAttr *string

	// Cryptographic Algorithm Extensibility
	AlgIdExtAttr *uint32

	// Algorithm Extensibility Source
	AlgIdExtSourceAttr *string

	// Cryptographic Provider Type Extensibility
	CryptProviderTypeExtAttr *uint32

	// Provider Type Extensibility Source
	CryptProviderTypeExtSourceAttr *string
}

func (_dccfc ST_PrintWhat) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdbaa := _b.Attr{}
	_cdbaa.Name = name
	switch _dccfc {
	case ST_PrintWhatUnset:
		_cdbaa.Value = ""
	case ST_PrintWhatSlides:
		_cdbaa.Value = "\u0073\u006c\u0069\u0064\u0065\u0073"
	case ST_PrintWhatHandouts1:
		_cdbaa.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case ST_PrintWhatHandouts2:
		_cdbaa.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case ST_PrintWhatHandouts3:
		_cdbaa.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case ST_PrintWhatHandouts4:
		_cdbaa.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case ST_PrintWhatHandouts6:
		_cdbaa.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case ST_PrintWhatHandouts9:
		_cdbaa.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case ST_PrintWhatNotes:
		_cdbaa.Value = "\u006e\u006f\u0074e\u0073"
	case ST_PrintWhatOutline:
		_cdbaa.Value = "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return _cdbaa, nil
}

type CT_CustomShowList struct {

	// Custom Show
	CustShow []*CT_CustomShow
}

func (_dedb *CT_CommentList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_abd:
	for {
		_dgc, _fdf := d.Token()
		if _fdf != nil {
			return _fdf
		}
		switch _dfde := _dgc.(type) {
		case _b.StartElement:
			switch _dfde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_dgb := NewCT_Comment()
				if _abf := d.DecodeElement(_dgb, &_dfde); _abf != nil {
					return _abf
				}
				_dedb.Cm = append(_dedb.Cm, _dgb)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _dfde.Name)
				if _ffff := d.Skip(); _ffff != nil {
					return _ffff
				}
			}
		case _b.EndElement:
			break _abd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the ViewPr and its children
func (_ffafa *ViewPr) Validate() error {
	return _ffafa.ValidateWithPath("\u0056\u0069\u0065\u0077\u0050\u0072")
}

func (_gfee ST_TLTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gfee.Uint32 != nil {
		e.EncodeToken(_b.CharData(_fd.Sprintf("\u0025\u0064", *_gfee.Uint32)))
	}
	if _gfee.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_b.CharData(_gfee.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

func (_deeaf ST_TLTimeAnimateValueTime) String() string {
	if _deeaf.ST_PositiveFixedPercentage != nil {
		return _deeaf.ST_PositiveFixedPercentage.String()
	}
	if _deeaf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _deeaf.ST_TLTimeIndefinite.String()
	}
	return ""
}

func NewCT_TLAnimVariantFloatVal() *CT_TLAnimVariantFloatVal {
	_bcbf := &CT_TLAnimVariantFloatVal{}
	return _bcbf
}

func (_eccbb ST_TLTimeNodeFillType) Validate() error { return _eccbb.ValidateWithPath("") }

type ST_TLBehaviorAdditiveType byte

// Validate validates the CT_TLTimeNodeParallel and its children
func (_bgba *CT_TLTimeNodeParallel) Validate() error {
	return _bgba.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c")
}

func (_fefdc ST_TLBehaviorAccumulateType) Validate() error { return _fefdc.ValidateWithPath("") }

// ValidateWithPath validates the CT_CornerDirectionTransition and its children, prefixing error messages with path
func (_dbab *CT_CornerDirectionTransition) ValidateWithPath(path string) error {
	if _fae := _dbab.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _fae != nil {
		return _fae
	}
	return nil
}

func (_geeg *CT_SlideTransitionChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bbbdd:
	for {
		_abeec, _bbdeb := d.Token()
		if _bbdeb != nil {
			return _bbdeb
		}
		switch _afec := _abeec.(type) {
		case _b.StartElement:
			switch _afec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_geeg.Blinds = NewCT_OrientationTransition()
				if _egee := d.DecodeElement(_geeg.Blinds, &_afec); _egee != nil {
					return _egee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_geeg.Checker = NewCT_OrientationTransition()
				if _bgcg := d.DecodeElement(_geeg.Checker, &_afec); _bgcg != nil {
					return _bgcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_geeg.Circle = NewCT_Empty()
				if _ffgc := d.DecodeElement(_geeg.Circle, &_afec); _ffgc != nil {
					return _ffgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_geeg.Dissolve = NewCT_Empty()
				if _deeb := d.DecodeElement(_geeg.Dissolve, &_afec); _deeb != nil {
					return _deeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_geeg.Comb = NewCT_OrientationTransition()
				if _aecaf := d.DecodeElement(_geeg.Comb, &_afec); _aecaf != nil {
					return _aecaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_geeg.Cover = NewCT_EightDirectionTransition()
				if _edcfc := d.DecodeElement(_geeg.Cover, &_afec); _edcfc != nil {
					return _edcfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_geeg.Cut = NewCT_OptionalBlackTransition()
				if _edef := d.DecodeElement(_geeg.Cut, &_afec); _edef != nil {
					return _edef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_geeg.Diamond = NewCT_Empty()
				if _ecae := d.DecodeElement(_geeg.Diamond, &_afec); _ecae != nil {
					return _ecae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_geeg.Fade = NewCT_OptionalBlackTransition()
				if _baeda := d.DecodeElement(_geeg.Fade, &_afec); _baeda != nil {
					return _baeda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_geeg.Newsflash = NewCT_Empty()
				if _cbfeb := d.DecodeElement(_geeg.Newsflash, &_afec); _cbfeb != nil {
					return _cbfeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_geeg.Plus = NewCT_Empty()
				if _gcaba := d.DecodeElement(_geeg.Plus, &_afec); _gcaba != nil {
					return _gcaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_geeg.Pull = NewCT_EightDirectionTransition()
				if _fcbfb := d.DecodeElement(_geeg.Pull, &_afec); _fcbfb != nil {
					return _fcbfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_geeg.Push = NewCT_SideDirectionTransition()
				if _bddcbb := d.DecodeElement(_geeg.Push, &_afec); _bddcbb != nil {
					return _bddcbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_geeg.Random = NewCT_Empty()
				if _adafg := d.DecodeElement(_geeg.Random, &_afec); _adafg != nil {
					return _adafg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_geeg.RandomBar = NewCT_OrientationTransition()
				if _beaf := d.DecodeElement(_geeg.RandomBar, &_afec); _beaf != nil {
					return _beaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_geeg.Split = NewCT_SplitTransition()
				if _bdbag := d.DecodeElement(_geeg.Split, &_afec); _bdbag != nil {
					return _bdbag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_geeg.Strips = NewCT_CornerDirectionTransition()
				if _ecgc := d.DecodeElement(_geeg.Strips, &_afec); _ecgc != nil {
					return _ecgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_geeg.Wedge = NewCT_Empty()
				if _gfcb := d.DecodeElement(_geeg.Wedge, &_afec); _gfcb != nil {
					return _gfcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_geeg.Wheel = NewCT_WheelTransition()
				if _eaffb := d.DecodeElement(_geeg.Wheel, &_afec); _eaffb != nil {
					return _eaffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_geeg.Wipe = NewCT_SideDirectionTransition()
				if _cbffc := d.DecodeElement(_geeg.Wipe, &_afec); _cbffc != nil {
					return _cbffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_geeg.Zoom = NewCT_InOutTransition()
				if _fefab := d.DecodeElement(_geeg.Zoom, &_afec); _fefab != nil {
					return _fefab
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _afec.Name)
				if _afbb := d.Skip(); _afbb != nil {
					return _afbb
				}
			}
		case _b.EndElement:
			break _bbbdd
		case _b.CharData:
		}
	}
	return nil
}

func (_dcae *CT_EmbeddedFontList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_deg:
	for {
		_edg, _bae := d.Token()
		if _bae != nil {
			return _bae
		}
		switch _dbef := _edg.(type) {
		case _b.StartElement:
			switch _dbef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}:
				_ggf := NewCT_EmbeddedFontListEntry()
				if _ebee := d.DecodeElement(_ggf, &_dbef); _ebee != nil {
					return _ebee
				}
				_dcae.EmbeddedFont = append(_dcae.EmbeddedFont, _ggf)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065dF\u006f\u006e\u0074\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dbef.Name)
				if _acag := d.Skip(); _acag != nil {
					return _acag
				}
			}
		case _b.EndElement:
			break _deg
		case _b.CharData:
		}
	}
	return nil
}

func (_acdfd ST_TLParaBuildType) ValidateWithPath(path string) error {
	switch _acdfd {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acdfd))
	}
	return nil
}

type CT_TLTextTargetElement struct {

	// Character Range
	CharRg *CT_IndexRange

	// Paragraph Text Range
	PRg *CT_IndexRange
}

// Validate validates the CT_TLAnimVariantBooleanVal and its children
func (_bcabf *CT_TLAnimVariantBooleanVal) Validate() error {
	return _bcabf.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c")
}

// ValidateWithPath validates the CT_WebProperties and its children, prefixing error messages with path
func (_dcce *CT_WebProperties) ValidateWithPath(path string) error {
	if _beged := _dcce.ImgSzAttr.ValidateWithPath(path + "\u002f\u0049\u006d\u0067\u0053\u007a\u0041\u0074\u0074\u0072"); _beged != nil {
		return _beged
	}
	if _bggbc := _dcce.ClrAttr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0041\u0074\u0074\u0072"); _bggbc != nil {
		return _bggbc
	}
	if _dcce.ExtLst != nil {
		if _gaebb := _dcce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gaebb != nil {
			return _gaebb
		}
	}
	return nil
}

// Validate validates the CT_Background and its children
func (_aga *CT_Background) Validate() error {
	return _aga.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

func NewCT_SlideIdListEntry() *CT_SlideIdListEntry {
	_abdee := &CT_SlideIdListEntry{}
	_abdee.IdAttr = 256
	return _abdee
}

// Validate validates the CT_ControlList and its children
func (_fadb *CT_ControlList) Validate() error {
	return _fadb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074")
}

func (_cfbfa *CT_TLIterateIntervalPercentage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddbde := range start.Attr {
		if _ddbde.Name.Local == "\u0076\u0061\u006c" {
			_bcgb, _dccfe := ParseUnionST_PositivePercentage(_ddbde.Value)
			if _dccfe != nil {
				return _dccfe
			}
			_cfbfa.ValAttr = _bcgb
			continue
		}
	}
	for {
		_afgce, _afbbc := d.Token()
		if _afbbc != nil {
			return _fd.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0050\u0065\u0072\u0063\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _afbbc)
		}
		if _fdfd, _ccaa := _afgce.(_b.EndElement); _ccaa && _fdfd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_ffbbg := &CT_ShapeNonVisual{}
	_ffbbg.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_ffbbg.CNvSpPr = _bc.NewCT_NonVisualDrawingShapeProps()
	_ffbbg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _ffbbg
}

type CT_OleObjectLink struct {

	// Update Linked Embedded Objects Automatically
	UpdateAutomaticAttr *bool
	ExtLst              *CT_ExtensionList
}

func (_bagf *ViewPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bagf.CT_ViewProperties = *NewCT_ViewProperties()
	for _, _cgcb := range start.Attr {
		if _cgcb.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_bagf.LastViewAttr.UnmarshalXMLAttr(_cgcb)
			continue
		}
		if _cgcb.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_eefg, _dgcc := _f.ParseBool(_cgcb.Value)
			if _dgcc != nil {
				return _dgcc
			}
			_bagf.ShowCommentsAttr = &_eefg
			continue
		}
	}
_dbadc:
	for {
		_gfgag, _eeefb := d.Token()
		if _eeefb != nil {
			return _eeefb
		}
		switch _cccbc := _gfgag.(type) {
		case _b.StartElement:
			switch _cccbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_bagf.NormalViewPr = NewCT_NormalViewProperties()
				if _eaddc := d.DecodeElement(_bagf.NormalViewPr, &_cccbc); _eaddc != nil {
					return _eaddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_bagf.SlideViewPr = NewCT_SlideViewProperties()
				if _bfdeb := d.DecodeElement(_bagf.SlideViewPr, &_cccbc); _bfdeb != nil {
					return _bfdeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_bagf.OutlineViewPr = NewCT_OutlineViewProperties()
				if _dbdegg := d.DecodeElement(_bagf.OutlineViewPr, &_cccbc); _dbdegg != nil {
					return _dbdegg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_bagf.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _gggaa := d.DecodeElement(_bagf.NotesTextViewPr, &_cccbc); _gggaa != nil {
					return _gggaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_bagf.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _efae := d.DecodeElement(_bagf.SorterViewPr, &_cccbc); _efae != nil {
					return _efae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_bagf.NotesViewPr = NewCT_NotesViewProperties()
				if _baea := d.DecodeElement(_bagf.NotesViewPr, &_cccbc); _baea != nil {
					return _baea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_bagf.GridSpacing = _bc.NewCT_PositiveSize2D()
				if _adbce := d.DecodeElement(_bagf.GridSpacing, &_cccbc); _adbce != nil {
					return _adbce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bagf.ExtLst = NewCT_ExtensionList()
				if _dabfa := d.DecodeElement(_bagf.ExtLst, &_cccbc); _dabfa != nil {
					return _dabfa
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u0069\u0065\u0077\u0050\u0072\u0020\u0025\u0076", _cccbc.Name)
				if _aagb := d.Skip(); _aagb != nil {
					return _aagb
				}
			}
		case _b.EndElement:
			break _dbadc
		case _b.CharData:
		}
	}
	return nil
}

type ST_TLAnimateColorSpace byte

type EG_ChildSlide struct {

	// Color Scheme Map Override
	ClrMapOvr *_bc.CT_ColorMappingOverride
}

type CT_PresentationProperties struct {

	// HTML Publishing Properties
	HtmlPubPr *CT_HtmlPublishProperties

	// Web Properties
	WebPr *CT_WebProperties

	// Printing Properties
	PrnPr *CT_PrintProperties

	// Presentation-wide Show Properties
	ShowPr *CT_ShowProperties

	// Color MRU
	ClrMru *_bc.CT_ColorMRU
	ExtLst *CT_ExtensionList
}

func (_dfege ST_TLDiagramBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfege.String(), start)
}

// ValidateWithPath validates the CT_TLTemplateList and its children, prefixing error messages with path
func (_ddgfab *CT_TLTemplateList) ValidateWithPath(path string) error {
	for _gdaef, _gbgbd := range _ddgfab.Tmpl {
		if _ddaf := _gbgbd.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0054\u006d\u0070\u006c\u005b\u0025\u0064\u005d", path, _gdaef)); _ddaf != nil {
			return _ddaf
		}
	}
	return nil
}

type ST_PhotoAlbumLayout byte

func (_caedc *PresentationPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003ap\u0072\u0065\u0073e\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0050\u0072"
	return _caedc.CT_PresentationProperties.MarshalXML(e, start)
}

func (_geeba *CT_TransitionSoundAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_abge:
	for {
		_bfcgc, _ffbfd := d.Token()
		if _ffbfd != nil {
			return _ffbfd
		}
		switch _abfed := _bfcgc.(type) {
		case _b.StartElement:
			switch _abfed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}:
				_geeba.StSnd = NewCT_TransitionStartSoundAction()
				if _deaad := d.DecodeElement(_geeba.StSnd, &_abfed); _deaad != nil {
					return _deaad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}:
				_geeba.EndSnd = NewCT_Empty()
				if _afabg := d.DecodeElement(_geeba.EndSnd, &_abfed); _afabg != nil {
					return _afabg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006e\u0064\u0041c\u0074\u0069\u006f\u006e\u0020%\u0076", _abfed.Name)
				if _fcbab := d.Skip(); _fcbab != nil {
					return _fcbab
				}
			}
		case _b.EndElement:
			break _abge
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_dfbfc *CT_OleObject) ValidateWithPath(path string) error {
	if _fbab := _dfbfc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _fbab != nil {
		return _fbab
	}
	if _dfbfc.Pic != nil {
		if _fbbc := _dfbfc.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _fbbc != nil {
			return _fbbc
		}
	}
	if _dfbfc.ImgWAttr != nil {
		if *_dfbfc.ImgWAttr < 0 {
			return _fd.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dfbfc.ImgWAttr)
		}
	}
	if _dfbfc.ImgHAttr != nil {
		if *_dfbfc.ImgHAttr < 0 {
			return _fd.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dfbfc.ImgHAttr)
		}
	}
	return nil
}

// Validate validates the CT_CornerDirectionTransition and its children
func (_efcf *CT_CornerDirectionTransition) Validate() error {
	return _efcf.ValidateWithPath("\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e")
}

func ParseUnionST_FixedPercentage(s string) (_bc.ST_FixedPercentage, error) {
	return _bc.ParseUnionST_FixedPercentage(s)
}

func (_gfbc *ST_TLAnimateEffectTransition) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfbc = 0
	case "\u0069\u006e":
		*_gfbc = 1
	case "\u006f\u0075\u0074":
		*_gfbc = 2
	case "\u006e\u006f\u006e\u0065":
		*_gfbc = 3
	}
	return nil
}

// Validate validates the CT_CustomerDataList and its children
func (_caee *CT_CustomerDataList) Validate() error {
	return _caee.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_TLBuildDiagram and its children
func (_faeabf *CT_TLBuildDiagram) Validate() error {
	return _faeabf.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d")
}

// ValidateWithPath validates the CT_TLTimeTargetElement and its children, prefixing error messages with path
func (_eafd *CT_TLTimeTargetElement) ValidateWithPath(path string) error {
	if _eafd.SldTgt != nil {
		if _gfgde := _eafd.SldTgt.ValidateWithPath(path + "\u002fS\u006c\u0064\u0054\u0067\u0074"); _gfgde != nil {
			return _gfgde
		}
	}
	if _eafd.SndTgt != nil {
		if _fgfcf := _eafd.SndTgt.ValidateWithPath(path + "\u002fS\u006e\u0064\u0054\u0067\u0074"); _fgfcf != nil {
			return _fgfcf
		}
	}
	if _eafd.SpTgt != nil {
		if _egcbf := _eafd.SpTgt.ValidateWithPath(path + "\u002f\u0053\u0070\u0054\u0067\u0074"); _egcbf != nil {
			return _egcbf
		}
	}
	if _eafd.InkTgt != nil {
		if _ecbd := _eafd.InkTgt.ValidateWithPath(path + "\u002fI\u006e\u006b\u0054\u0067\u0074"); _ecbd != nil {
			return _ecbd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideRelationshipListEntry and its children, prefixing error messages with path
func (_cgddg *CT_SlideRelationshipListEntry) ValidateWithPath(path string) error { return nil }

func ParseUnionST_Coordinate32(s string) (_bc.ST_Coordinate32, error) {
	return _bc.ParseUnionST_Coordinate32(s)
}

func (_bgdb *CT_SlideLayoutIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgdb.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bgdb.IdAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bgdb.RIdAttr)})
	e.EncodeToken(start)
	if _bgdb.ExtLst != nil {
		_efad := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgdb.ExtLst, _efad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfac *CT_NotesSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfac.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bfac.ShowMasterSpAttr))})
	}
	if _bfac.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_bfac.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_bdbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_bfac.CSld, _bdbg)
	if _bfac.ClrMapOvr != nil {
		_feec := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_bfac.ClrMapOvr, _feec)
	}
	if _bfac.ExtLst != nil {
		_acbfg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfac.ExtLst, _acbfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Guide and its children
func (_dgcaa *CT_Guide) Validate() error {
	return _dgcaa.ValidateWithPath("\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065")
}

const (
	ST_TLAnimateBehaviorValueTypeUnset ST_TLAnimateBehaviorValueType = 0
	ST_TLAnimateBehaviorValueTypeStr   ST_TLAnimateBehaviorValueType = 1
	ST_TLAnimateBehaviorValueTypeNum   ST_TLAnimateBehaviorValueType = 2
	ST_TLAnimateBehaviorValueTypeClr   ST_TLAnimateBehaviorValueType = 3
)

func (_eaeaf ST_TLBehaviorOverrideType) ValidateWithPath(path string) error {
	switch _eaeaf {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaeaf))
	}
	return nil
}

func (_gdca *ST_TLAnimateColorSpace) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_acef, _gcadc := d.Token()
	if _gcadc != nil {
		return _gcadc
	}
	if _gfgfg, _bbagg := _acef.(_b.EndElement); _bbagg && _gfgfg.Name == start.Name {
		*_gdca = 1
		return nil
	}
	if _bdfaf, _gbdgf := _acef.(_b.CharData); !_gbdgf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acef)
	} else {
		switch string(_bdfaf) {
		case "":
			*_gdca = 0
		case "\u0072\u0067\u0062":
			*_gdca = 1
		case "\u0068\u0073\u006c":
			*_gdca = 2
		}
	}
	_acef, _gcadc = d.Token()
	if _gcadc != nil {
		return _gcadc
	}
	if _cgdbaa, _dfdgc := _acef.(_b.EndElement); _dfdgc && _cgdbaa.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acef)
}

func NewCT_TLSetBehavior() *CT_TLSetBehavior {
	_ggadg := &CT_TLSetBehavior{}
	_ggadg.CBhvr = NewCT_TLCommonBehaviorData()
	return _ggadg
}

func NewCT_TLTimeNodeExclusive() *CT_TLTimeNodeExclusive {
	_dcffd := &CT_TLTimeNodeExclusive{}
	_dcffd.CTn = NewCT_TLCommonTimeNodeData()
	return _dcffd
}

func (_faded ST_TLAnimateBehaviorCalcMode) ValidateWithPath(path string) error {
	switch _faded {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faded))
	}
	return nil
}

// Validate validates the CT_TLTimeNodeSequence and its children
func (_eabf *CT_TLTimeNodeSequence) Validate() error {
	return _eabf.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065")
}

func (_gegec *CT_TLByAnimateColorTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfgbf:
	for {
		_bbage, _gcgdc := d.Token()
		if _gcgdc != nil {
			return _gcgdc
		}
		switch _adcbb := _bbage.(type) {
		case _b.StartElement:
			switch _adcbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0067\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062"}:
				_gegec.Rgb = NewCT_TLByRgbColorTransform()
				if _dbbgd := d.DecodeElement(_gegec.Rgb, &_adcbb); _dbbgd != nil {
					return _dbbgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_gegec.Hsl = NewCT_TLByHslColorTransform()
				if _bdgb := d.DecodeElement(_gegec.Hsl, &_adcbb); _bdgb != nil {
					return _bdgb
				}
			default:
				_g.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043\u006f\u006co\u0072\u0054ra\u006e\u0073\u0066o\u0072\u006d\u0020\u0025\u0076", _adcbb.Name)
				if _ffge := d.Skip(); _ffge != nil {
					return _ffge
				}
			}
		case _b.EndElement:
			break _gfgbf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_StringTag() *CT_StringTag { _fdbe := &CT_StringTag{}; return _fdbe }

func (_fecgc *CT_TLOleBuildChart) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fecgc.BldAttr != ST_TLOleChartBuildTypeUnset {
		_abfea, _bdbe := _fecgc.BldAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u006c\u0064"})
		if _bdbe != nil {
			return _bdbe
		}
		start.Attr = append(start.Attr, _abfea)
	}
	if _fecgc.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_fecgc.AnimBgAttr))})
	}
	if _fecgc.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fecgc.SpidAttr)})
	}
	if _fecgc.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fecgc.GrpIdAttr)})
	}
	if _fecgc.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_fecgc.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_beab *CT_Connector) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_caeg := _b.StartElement{Name: _b.Name{Local: "p\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_beab.NvCxnSpPr, _caeg)
	_afg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_beab.SpPr, _afg)
	if _beab.Style != nil {
		_ege := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_beab.Style, _ege)
	}
	if _beab.ExtLst != nil {
		_dfcb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_beab.ExtLst, _dfcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Kinsoku() *CT_Kinsoku { _ggbb := &CT_Kinsoku{}; return _ggbb }

func (_cbefd ST_TLTimeNodeMasterRelation) String() string {
	switch _cbefd {
	case 0:
		return ""
	case 1:
		return "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case 2:
		return "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case 3:
		return "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return ""
}

func (_bdfbc ST_TLAnimateMotionBehaviorOrigin) Validate() error { return _bdfbc.ValidateWithPath("") }

func NewCT_ExtensionListModify() *CT_ExtensionListModify {
	_gaegg := &CT_ExtensionListModify{}
	return _gaegg
}

func (_dggee *EG_TopLevelSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dggee.ClrMap = _bc.NewCT_ColorMapping()
_cbeead:
	for {
		_fceba, _dggg := d.Token()
		if _dggg != nil {
			return _dggg
		}
		switch _ccaga := _fceba.(type) {
		case _b.StartElement:
			switch _ccaga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _dbedf := d.DecodeElement(_dggee.ClrMap, &_ccaga); _dbedf != nil {
					return _dbedf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u006f\u0070\u004c\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065\u0020\u0025v", _ccaga.Name)
				if _cbgg := d.Skip(); _cbgg != nil {
					return _cbgg
				}
			}
		case _b.EndElement:
			break _cbeead
		case _b.CharData:
		}
	}
	return nil
}

func (_cfacc *CT_SlideLayoutIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcadc := range start.Attr {
		if _dcadc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dcadc.Name.Local == "\u0069\u0064" || _dcadc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dcadc.Name.Local == "\u0069\u0064" {
			_efdbf, _dfaed := _dcadc.Value, error(nil)
			if _dfaed != nil {
				return _dfaed
			}
			_cfacc.RIdAttr = _efdbf
			continue
		}
		if _dcadc.Name.Local == "\u0069\u0064" {
			_fegg, _ecee := _f.ParseUint(_dcadc.Value, 10, 32)
			if _ecee != nil {
				return _ecee
			}
			_ccebc := uint32(_fegg)
			_cfacc.IdAttr = &_ccebc
			continue
		}
	}
_cgbfe:
	for {
		_ecfaef, _eccc := d.Token()
		if _eccc != nil {
			return _eccc
		}
		switch _defe := _ecfaef.(type) {
		case _b.StartElement:
			switch _defe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfacc.ExtLst = NewCT_ExtensionList()
				if _fdeee := d.DecodeElement(_cfacc.ExtLst, &_defe); _fdeee != nil {
					return _fdeee
				}
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075t\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _defe.Name)
				if _cbae := d.Skip(); _cbae != nil {
					return _cbae
				}
			}
		case _b.EndElement:
			break _cgbfe
		case _b.CharData:
		}
	}
	return nil
}

func (_cggfc *CT_OrientationTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cggfc.DirAttr != ST_DirectionUnset {
		_cafea, _caca := _cggfc.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _caca != nil {
			return _caca
		}
		start.Attr = append(start.Attr, _cafea)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func ParseUnionST_TransitionEightDirectionType(s string) (ST_TransitionEightDirectionType, error) {
	return ST_TransitionEightDirectionType{}, nil
}

func (_bdffd *CT_TLSubShapeId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbab := range start.Attr {
		if _gbab.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ccga, _gfafc := _gbab.Value, error(nil)
			if _gfafc != nil {
				return _gfafc
			}
			_bdffd.SpidAttr = _ccga
			continue
		}
	}
	for {
		_fbgc, _dagbgc := d.Token()
		if _dagbgc != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0053\u0075\u0062\u0053h\u0061\u0070\u0065I\u0064:\u0020\u0025\u0073", _dagbgc)
		}
		if _bbffa, _decac := _fbgc.(_b.EndElement); _decac && _bbffa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_efefd ST_WebScreenSize) Validate() error { return _efefd.ValidateWithPath("") }

func NewCT_Empty() *CT_Empty { _gbf := &CT_Empty{}; return _gbf }

type ST_TLBehaviorOverrideType byte

func (_fdac *CT_SlideMasterIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fdac.SldMasterId != nil {
		_gbfb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		for _, _dgbaa := range _fdac.SldMasterId {
			e.EncodeElement(_dgbaa, _gbfb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NotesMasterIdList and its children
func (_adegf *CT_NotesMasterIdList) Validate() error {
	return _adegf.ValidateWithPath("C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}

func (_dbfcf *ST_TLBehaviorOverrideType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgec, _aggbdg := d.Token()
	if _aggbdg != nil {
		return _aggbdg
	}
	if _gbedg, _bfgedf := _bgec.(_b.EndElement); _bfgedf && _gbedg.Name == start.Name {
		*_dbfcf = 1
		return nil
	}
	if _dccdd, _abgee := _bgec.(_b.CharData); !_abgee {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgec)
	} else {
		switch string(_dccdd) {
		case "":
			*_dbfcf = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_dbfcf = 1
		case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
			*_dbfcf = 2
		}
	}
	_bgec, _aggbdg = d.Token()
	if _aggbdg != nil {
		return _aggbdg
	}
	if _eafdf, _ebfgf := _bgec.(_b.EndElement); _ebfgf && _eafdf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgec)
}

// Validate validates the CT_OleObjectLink and its children
func (_badb *CT_OleObjectLink) Validate() error {
	return _badb.ValidateWithPath("\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b")
}

func (_dcfbca *ST_TLAnimateBehaviorCalcMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dcfbca = 0
	case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
		*_dcfbca = 1
	case "\u006c\u0069\u006e":
		*_dcfbca = 2
	case "\u0066\u006d\u006c\u0061":
		*_dcfbca = 3
	}
	return nil
}

// Validate validates the EG_ExtensionList and its children
func (_fgcff *EG_ExtensionList) Validate() error {
	return _fgcff.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_TLMediaNodeAudio and its children, prefixing error messages with path
func (_deeeb *CT_TLMediaNodeAudio) ValidateWithPath(path string) error {
	if _dcdf := _deeeb.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _dcdf != nil {
		return _dcdf
	}
	return nil
}

func (_acgb *CmLst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0063\u006d\u004c\u0073\u0074"
	return _acgb.CT_CommentList.MarshalXML(e, start)
}

type CT_Connector struct {

	// Non-Visual Properties for a Connection Shape
	NvCxnSpPr *CT_ConnectorNonVisual

	// Shape Properties
	SpPr *_bc.CT_ShapeProperties

	// Connector Shape Style
	Style  *_bc.CT_ShapeStyle
	ExtLst *CT_ExtensionListModify
}

func (_aaefa *EG_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_efgca:
	for {
		_eaag, _daacb := d.Token()
		if _daacb != nil {
			return _daacb
		}
		switch _ccfgg := _eaag.(type) {
		case _b.StartElement:
			switch _ccfgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fadec := NewCT_Extension()
				if _ebgeb := d.DecodeElement(_fadec, &_ccfgg); _ebgeb != nil {
					return _ebgeb
				}
				_aaefa.Ext = append(_aaefa.Ext, _fadec)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _ccfgg.Name)
				if _dbcbf := d.Skip(); _dbcbf != nil {
					return _dbcbf
				}
			}
		case _b.EndElement:
			break _efgca
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the PresentationPr and its children
func (_aabbf *PresentationPr) Validate() error {
	return _aabbf.ValidateWithPath("\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072")
}

func (_gagad ST_TLParaBuildType) Validate() error { return _gagad.ValidateWithPath("") }

// Validate validates the CT_TLTimeTargetElement and its children
func (_cgdfb *CT_TLTimeTargetElement) Validate() error {
	return _cgdfb.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

func (_fcagg ST_TransitionSideDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fcagg.String(), start)
}

// ValidateWithPath validates the CT_CustomShowList and its children, prefixing error messages with path
func (_aff *CT_CustomShowList) ValidateWithPath(path string) error {
	for _fge, _eabe := range _aff.CustShow {
		if _adfb := _eabe.ValidateWithPath(_fd.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u005b\u0025\u0064\u005d", path, _fge)); _adfb != nil {
			return _adfb
		}
	}
	return nil
}

func (_fbcg *CT_TLAnimateEffectBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbcg.TransitionAttr != ST_TLAnimateEffectTransitionUnset {
		_bdcf, _adfec := _fbcg.TransitionAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"})
		if _adfec != nil {
			return _adfec
		}
		start.Attr = append(start.Attr, _bdcf)
	}
	if _fbcg.FilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcg.FilterAttr)})
	}
	if _fbcg.PrLstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u004cs\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcg.PrLstAttr)})
	}
	e.EncodeToken(start)
	_afba := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fbcg.CBhvr, _afba)
	if _fbcg.Progress != nil {
		_abggb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}}
		e.EncodeElement(_fbcg.Progress, _abggb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dgbed ST_TLCommandType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfeef := _b.Attr{}
	_dfeef.Name = name
	switch _dgbed {
	case ST_TLCommandTypeUnset:
		_dfeef.Value = ""
	case ST_TLCommandTypeEvt:
		_dfeef.Value = "\u0065\u0076\u0074"
	case ST_TLCommandTypeCall:
		_dfeef.Value = "\u0063\u0061\u006c\u006c"
	case ST_TLCommandTypeVerb:
		_dfeef.Value = "\u0076\u0065\u0072\u0062"
	}
	return _dfeef, nil
}

func NewSldMaster() *SldMaster {
	_eeeeac := &SldMaster{}
	_eeeeac.CT_SlideMaster = *NewCT_SlideMaster()
	return _eeeeac
}

type ST_PlaceholderType byte

const (
	ST_TLParaBuildTypeUnset     ST_TLParaBuildType = 0
	ST_TLParaBuildTypeAllAtOnce ST_TLParaBuildType = 1
	ST_TLParaBuildTypeP         ST_TLParaBuildType = 2
	ST_TLParaBuildTypeCust      ST_TLParaBuildType = 3
	ST_TLParaBuildTypeWhole     ST_TLParaBuildType = 4
)

func (_ebbdb ST_TLTriggerRuntimeNode) String() string {
	switch _ebbdb {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0072s\u0074"
	case 2:
		return "\u006c\u0061\u0073\u0074"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_adcb *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _adcb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

type CT_EmbeddedFontList struct {

	// Embedded Font
	EmbeddedFont []*CT_EmbeddedFontListEntry
}

func NewCT_OleObjectChoice() *CT_OleObjectChoice { _gfadf := &CT_OleObjectChoice{}; return _gfadf }

const (
	ST_TLCommandTypeUnset ST_TLCommandType = 0
	ST_TLCommandTypeEvt   ST_TLCommandType = 1
	ST_TLCommandTypeCall  ST_TLCommandType = 2
	ST_TLCommandTypeVerb  ST_TLCommandType = 3
)

// ValidateWithPath validates the CT_HandoutMasterIdListEntry and its children, prefixing error messages with path
func (_feac *CT_HandoutMasterIdListEntry) ValidateWithPath(path string) error {
	if _feac.ExtLst != nil {
		if _bdagf := _feac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdagf != nil {
			return _bdagf
		}
	}
	return nil
}

func (_cabbb ST_PhotoAlbumFrameShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cabbb.String(), start)
}

type CT_EmbeddedFontListEntry struct {

	// Embedded Font Name
	Font *_bc.CT_TextFont

	// Regular Embedded Font
	Regular *CT_EmbeddedFontDataId

	// Bold Embedded Font
	Bold *CT_EmbeddedFontDataId

	// Italic Embedded Font
	Italic *CT_EmbeddedFontDataId

	// Bold Italic Embedded Font
	BoldItalic *CT_EmbeddedFontDataId
}

// ValidateWithPath validates the PresentationPr and its children, prefixing error messages with path
func (_ceaed *PresentationPr) ValidateWithPath(path string) error {
	if _bedff := _ceaed.CT_PresentationProperties.ValidateWithPath(path); _bedff != nil {
		return _bedff
	}
	return nil
}

func (_adcd *CT_TLCommonMediaNodeData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adcd.VolAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_adcd.VolAttr)})
	}
	if _adcd.MuteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_adcd.MuteAttr))})
	}
	if _adcd.NumSldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0053\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_adcd.NumSldAttr)})
	}
	if _adcd.ShowWhenStoppedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_adcd.ShowWhenStoppedAttr))})
	}
	e.EncodeToken(start)
	_dddeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_adcd.CTn, _dddeg)
	_cfbg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_adcd.TgtEl, _cfbg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfcdf ST_PhotoAlbumFrameShape) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fabdb := _b.Attr{}
	_fabdb.Name = name
	switch _bfcdf {
	case ST_PhotoAlbumFrameShapeUnset:
		_fabdb.Value = ""
	case ST_PhotoAlbumFrameShapeFrameStyle1:
		_fabdb.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case ST_PhotoAlbumFrameShapeFrameStyle2:
		_fabdb.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case ST_PhotoAlbumFrameShapeFrameStyle3:
		_fabdb.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case ST_PhotoAlbumFrameShapeFrameStyle4:
		_fabdb.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case ST_PhotoAlbumFrameShapeFrameStyle5:
		_fabdb.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case ST_PhotoAlbumFrameShapeFrameStyle6:
		_fabdb.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case ST_PhotoAlbumFrameShapeFrameStyle7:
		_fabdb.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return _fabdb, nil
}

func (_aacbb *SldLayout) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074"
	return _aacbb.CT_SlideLayout.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_IndexRange and its children, prefixing error messages with path
func (_efga *CT_IndexRange) ValidateWithPath(path string) error { return nil }

func (_dgcad *EG_SlideListChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgcad.SldAll != nil {
		_bdgcd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_dgcad.SldAll, _bdgcd)
	}
	if _dgcad.SldRg != nil {
		_aaaaa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_dgcad.SldRg, _aaaaa)
	}
	if _dgcad.CustShow != nil {
		_dfggd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_dgcad.CustShow, _dfggd)
	}
	return nil
}

// ValidateWithPath validates the CT_EightDirectionTransition and its children, prefixing error messages with path
func (_cgdb *CT_EightDirectionTransition) ValidateWithPath(path string) error {
	if _cgdb.DirAttr != nil {
		if _dgag := _cgdb.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _dgag != nil {
			return _dgag
		}
	}
	return nil
}

// Validate validates the CT_EmbeddedFontList and its children
func (_aecd *CT_EmbeddedFontList) Validate() error {
	return _aecd.ValidateWithPath("\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074")
}

type CT_TimeNodeList struct {

	// Parallel Time Node
	Par []*CT_TLTimeNodeParallel

	// Sequence Time Node
	Seq []*CT_TLTimeNodeSequence

	// Exclusive
	Excl []*CT_TLTimeNodeExclusive

	// Animate
	Anim []*CT_TLAnimateBehavior

	// Animate Color Behavior
	AnimClr []*CT_TLAnimateColorBehavior

	// Animate Effect
	AnimEffect []*CT_TLAnimateEffectBehavior

	// Animate Motion
	AnimMotion []*CT_TLAnimateMotionBehavior

	// Animate Rotation
	AnimRot []*CT_TLAnimateRotationBehavior

	// Animate Scale
	AnimScale []*CT_TLAnimateScaleBehavior

	// Command
	Cmd []*CT_TLCommandBehavior

	// Set Time Node Behavior
	Set []*CT_TLSetBehavior

	// Audio
	Audio []*CT_TLMediaNodeAudio

	// Video
	Video []*CT_TLMediaNodeVideo
}

type CT_TagList struct {

	// Programmable Extensibility Tag
	Tag []*CT_StringTag
}

// Validate validates the CT_ApplicationNonVisualDrawingProps and its children
func (_cbf *CT_ApplicationNonVisualDrawingProps) Validate() error {
	return _cbf.ValidateWithPath("C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073")
}

func (_cfeaf *CT_TagsData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eggad := range start.Attr {
		if _eggad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eggad.Name.Local == "\u0069\u0064" || _eggad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eggad.Name.Local == "\u0069\u0064" {
			_dcfab, _gggd := _eggad.Value, error(nil)
			if _gggd != nil {
				return _gggd
			}
			_cfeaf.IdAttr = _dcfab
			continue
		}
	}
	for {
		_aeeeg, _eede := d.Token()
		if _eede != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _eede)
		}
		if _gadg, _aabgc := _aeeeg.(_b.EndElement); _aabgc && _gadg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SmartTags and its children
func (_dbdcg *CT_SmartTags) Validate() error {
	return _dbdcg.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

func (_bffb *CT_GraphicalObjectFrame) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bffb.BwModeAttr != _bc.ST_BlackWhiteModeUnset {
		_dbeg, _fgd := _bffb.BwModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _fgd != nil {
			return _fgd
		}
		start.Attr = append(start.Attr, _dbeg)
	}
	e.EncodeToken(start)
	_gffc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_bffb.NvGraphicFramePr, _gffc)
	_bbbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_bffb.Xfrm, _bbbd)
	_ffc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_bffb.Graphic, _ffc)
	if _bffb.ExtLst != nil {
		_gbdef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bffb.ExtLst, _gbdef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_efge ST_TransitionCornerDirectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdgf := _b.Attr{}
	_gdgf.Name = name
	switch _efge {
	case ST_TransitionCornerDirectionTypeUnset:
		_gdgf.Value = ""
	case ST_TransitionCornerDirectionTypeLu:
		_gdgf.Value = "\u006c\u0075"
	case ST_TransitionCornerDirectionTypeRu:
		_gdgf.Value = "\u0072\u0075"
	case ST_TransitionCornerDirectionTypeLd:
		_gdgf.Value = "\u006c\u0064"
	case ST_TransitionCornerDirectionTypeRd:
		_gdgf.Value = "\u0072\u0064"
	}
	return _gdgf, nil
}

type CT_HeaderFooter struct {

	// Slide Number Placeholder
	SldNumAttr *bool

	// Header Placeholder
	HdrAttr *bool

	// Footer Placeholder
	FtrAttr *bool

	// Date/Time Placeholder
	DtAttr *bool
	ExtLst *CT_ExtensionListModify
}

// Validate validates the CT_HandoutMasterIdList and its children
func (_fdad *CT_HandoutMasterIdList) Validate() error {
	return _fdad.ValidateWithPath("\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074")
}

type CT_OleObject struct {

	// Embedded Object ProgID
	ProgIdAttr     *string
	Choice         *CT_OleObjectChoice
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

// ValidateWithPath validates the EG_ShowType and its children, prefixing error messages with path
func (_caeeg *EG_ShowType) ValidateWithPath(path string) error {
	if _caeeg.Present != nil {
		if _cabe := _caeeg.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _cabe != nil {
			return _cabe
		}
	}
	if _caeeg.Browse != nil {
		if _ebgfge := _caeeg.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _ebgfge != nil {
			return _ebgfge
		}
	}
	if _caeeg.Kiosk != nil {
		if _gegee := _caeeg.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _gegee != nil {
			return _gegee
		}
	}
	return nil
}

func (_gcbb *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcbb = 0
	case "\u0070\u0061\u0072\u0065\u006e\u0074":
		*_gcbb = 1
	case "\u006c\u0061\u0079\u006f\u0075\u0074":
		*_gcbb = 2
	}
	return nil
}

// ValidateWithPath validates the CT_BuildList and its children, prefixing error messages with path
func (_fcb *CT_BuildList) ValidateWithPath(path string) error {
	for _ead, _cgea := range _fcb.BldP {
		if _feg := _cgea.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0042\u006c\u0064\u0050\u005b\u0025\u0064\u005d", path, _ead)); _feg != nil {
			return _feg
		}
	}
	for _ace, _afa := range _fcb.BldDgm {
		if _gga := _afa.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0044\u0067\u006d\u005b\u0025\u0064\u005d", path, _ace)); _gga != nil {
			return _gga
		}
	}
	for _agc, _ebec := range _fcb.BldOleChart {
		if _gaa := _ebec.ValidateWithPath(_fd.Sprintf("\u0025s\u002fB\u006c\u0064\u004f\u006c\u0065C\u0068\u0061r\u0074\u005b\u0025\u0064\u005d", path, _agc)); _gaa != nil {
			return _gaa
		}
	}
	for _eaa, _bcee := range _fcb.BldGraphic {
		if _dbg := _bcee.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069c\u005b\u0025\u0064\u005d", path, _eaa)); _dbg != nil {
			return _dbg
		}
	}
	return nil
}

// Validate validates the CT_TLAnimateColorBehavior and its children
func (_dgdba *CT_TLAnimateColorBehavior) Validate() error {
	return _dgdba.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}

// Validate validates the CT_WebProperties and its children
func (_gfbg *CT_WebProperties) Validate() error {
	return _gfbg.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_TLTimeNodeParallel struct {

	// Parallel TimeNode
	CTn *CT_TLCommonTimeNodeData
}

// ValidateWithPath validates the CT_NotesViewProperties and its children, prefixing error messages with path
func (_aafcg *CT_NotesViewProperties) ValidateWithPath(path string) error {
	if _gabde := _aafcg.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _gabde != nil {
		return _gabde
	}
	if _aafcg.ExtLst != nil {
		if _cabd := _aafcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cabd != nil {
			return _cabd
		}
	}
	return nil
}

func (_adc *CT_Background) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adc.BwModeAttr != _bc.ST_BlackWhiteModeUnset {
		_dac, _adf := _adc.BwModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _adf != nil {
			return _adf
		}
		start.Attr = append(start.Attr, _dac)
	}
	e.EncodeToken(start)
	if _adc.BgPr != nil {
		_cgg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_adc.BgPr, _cgg)
	}
	if _adc.BgRef != nil {
		_adb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_adc.BgRef, _adb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cffbb *CT_TLTriggerTimeNodeID) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bafba := range start.Attr {
		if _bafba.Name.Local == "\u0076\u0061\u006c" {
			_dfeg, _acbgg := _f.ParseUint(_bafba.Value, 10, 32)
			if _acbgg != nil {
				return _acbgg
			}
			_cffbb.ValAttr = uint32(_dfeg)
			continue
		}
	}
	for {
		_gdcd, _bffgad := d.Token()
		if _bffgad != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0054r\u0069g\u0067e\u0072T\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0049\u0044\u003a\u0020\u0025\u0073", _bffgad)
		}
		if _acbcb, _bafdg := _gdcd.(_b.EndElement); _bafdg && _acbcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gfeee *ST_OleObjectFollowColorScheme) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfeee = 0
	case "\u006e\u006f\u006e\u0065":
		*_gfeee = 1
	case "\u0066\u0075\u006c\u006c":
		*_gfeee = 2
	case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
		*_gfeee = 3
	}
	return nil
}

const (
	ST_TLChartSubelementTypeUnset        ST_TLChartSubelementType = 0
	ST_TLChartSubelementTypeGridLegend   ST_TLChartSubelementType = 1
	ST_TLChartSubelementTypeSeries       ST_TLChartSubelementType = 2
	ST_TLChartSubelementTypeCategory     ST_TLChartSubelementType = 3
	ST_TLChartSubelementTypePtInSeries   ST_TLChartSubelementType = 4
	ST_TLChartSubelementTypePtInCategory ST_TLChartSubelementType = 5
)

func (_ddgaa *CT_CommonViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddgaa.VarScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ddgaa.VarScaleAttr))})
	}
	e.EncodeToken(start)
	_eae := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0063\u0061\u006c\u0065"}}
	e.EncodeElement(_ddgaa.Scale, _eae)
	_caab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006f\u0072\u0069\u0067\u0069\u006e"}}
	e.EncodeElement(_ddgaa.Origin, _caab)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_facbg *ST_TransitionSideDirectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_facbg = 0
	case "\u006c":
		*_facbg = 1
	case "\u0075":
		*_facbg = 2
	case "\u0072":
		*_facbg = 3
	case "\u0064":
		*_facbg = 4
	}
	return nil
}

func (_caead *ST_TLTimeNodeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_caead = 0
	case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
		*_caead = 1
	case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
		*_caead = 2
	case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
		*_caead = 3
	case "\u006da\u0069\u006e\u0053\u0065\u0071":
		*_caead = 4
	case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
		*_caead = 5
	case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
		*_caead = 6
	case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
		*_caead = 7
	case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_caead = 8
	case "\u0074\u006d\u0052\u006f\u006f\u0074":
		*_caead = 9
	}
	return nil
}

func NewOleObj() *OleObj { _ecfc := &OleObj{}; _ecfc.CT_OleObject = *NewCT_OleObject(); return _ecfc }

func (_ddeag *EG_Background) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddeag.BgPr != nil {
		_abfeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_ddeag.BgPr, _abfeb)
	}
	if _ddeag.BgRef != nil {
		_ededb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_ddeag.BgRef, _ededb)
	}
	return nil
}

// Validate validates the SldLayout and its children
func (_fbdbe *SldLayout) Validate() error {
	return _fbdbe.ValidateWithPath("\u0053l\u0064\u004c\u0061\u0079\u006f\u0075t")
}

// Validate validates the CT_TLAnimVariant and its children
func (_dbdf *CT_TLAnimVariant) Validate() error {
	return _dbdf.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074")
}

func NewCT_SlideSyncProperties() *CT_SlideSyncProperties {
	_ffae := &CT_SlideSyncProperties{}
	return _ffae
}

type CT_EightDirectionTransition struct {

	// Direction
	DirAttr *ST_TransitionEightDirectionType
}

func (_fdeea *CT_SlideRelationshipList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fdeea.Sld != nil {
		_cfbdf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _faaa := range _fdeea.Sld {
			e.EncodeElement(_faaa, _cfbdf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CmAuthorLst and its children
func (_dcdbb *CmAuthorLst) Validate() error {
	return _dcdbb.ValidateWithPath("C\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074")
}

func ParseUnionST_PositiveFixedPercentage(s string) (_bc.ST_PositiveFixedPercentage, error) {
	return _bc.ParseUnionST_PositiveFixedPercentage(s)
}

func ParseUnionST_TLTime(s string) (ST_TLTime, error) { return ST_TLTime{}, nil }

func NewCT_TLCommonBehaviorData() *CT_TLCommonBehaviorData {
	_beeeg := &CT_TLCommonBehaviorData{}
	_beeeg.CTn = NewCT_TLCommonTimeNodeData()
	_beeeg.TgtEl = NewCT_TLTimeTargetElement()
	return _beeeg
}

// ValidateWithPath validates the CT_ExtensionListModify and its children, prefixing error messages with path
func (_bccg *CT_ExtensionListModify) ValidateWithPath(path string) error {
	for _aabd, _bbfg := range _bccg.Ext {
		if _dfed := _bbfg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _aabd)); _dfed != nil {
			return _dfed
		}
	}
	return nil
}

func (_fced *SldMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fced.CT_SlideMaster = *NewCT_SlideMaster()
	for _, _beaag := range start.Attr {
		if _beaag.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_egafa, _adcdg := _f.ParseBool(_beaag.Value)
			if _adcdg != nil {
				return _adcdg
			}
			_fced.PreserveAttr = &_egafa
			continue
		}
	}
_bagcb:
	for {
		_bfee, _cbed := d.Token()
		if _cbed != nil {
			return _cbed
		}
		switch _ccde := _bfee.(type) {
		case _b.StartElement:
			switch _ccde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cgggb := d.DecodeElement(_fced.CSld, &_ccde); _cgggb != nil {
					return _cgggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _eedgg := d.DecodeElement(_fced.ClrMap, &_ccde); _eedgg != nil {
					return _eedgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_fced.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _eafbb := d.DecodeElement(_fced.SldLayoutIdLst, &_ccde); _eafbb != nil {
					return _eafbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_fced.Transition = NewCT_SlideTransition()
				if _defed := d.DecodeElement(_fced.Transition, &_ccde); _defed != nil {
					return _defed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_fced.Timing = NewCT_SlideTiming()
				if _ffgec := d.DecodeElement(_fced.Timing, &_ccde); _ffgec != nil {
					return _ffgec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fced.Hf = NewCT_HeaderFooter()
				if _gdeac := d.DecodeElement(_fced.Hf, &_ccde); _gdeac != nil {
					return _gdeac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fced.TxStyles = NewCT_SlideMasterTextStyles()
				if _efaag := d.DecodeElement(_fced.TxStyles, &_ccde); _efaag != nil {
					return _efaag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fced.ExtLst = NewCT_ExtensionListModify()
				if _cffbc := d.DecodeElement(_fced.ExtLst, &_ccde); _cffbc != nil {
					return _cffbc
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004d\u0061\u0073t\u0065\u0072 \u0025\u0076", _ccde.Name)
				if _egdc := d.Skip(); _egdc != nil {
					return _egdc
				}
			}
		case _b.EndElement:
			break _bagcb
		case _b.CharData:
		}
	}
	return nil
}

func (_cgdd *CT_ShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ddcc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_cgdd.CNvPr, _ddcc)
	_aead := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_cgdd.CNvSpPr, _aead)
	_edfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_cgdd.NvPr, _edfa)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLBehaviorAttributeNameList and its children
func (_becga *CT_TLBehaviorAttributeNameList) Validate() error {
	return _becga.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074")
}

type CT_TransitionStartSoundAction struct {

	// Loop Sound
	LoopAttr *bool

	// Sound
	Snd *_bc.CT_EmbeddedWAVAudioFile
}

func (_ffec *CT_Kinsoku) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdcb := range start.Attr {
		if _cdcb.Name.Local == "\u006c\u0061\u006e\u0067" {
			_ecdf, _aebb := _cdcb.Value, error(nil)
			if _aebb != nil {
				return _aebb
			}
			_ffec.LangAttr = &_ecdf
			continue
		}
		if _cdcb.Name.Local == "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073" {
			_fgef, _egec := _cdcb.Value, error(nil)
			if _egec != nil {
				return _egec
			}
			_ffec.InvalStCharsAttr = _fgef
			continue
		}
		if _cdcb.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073" {
			_ebdd, _abfe := _cdcb.Value, error(nil)
			if _abfe != nil {
				return _abfe
			}
			_ffec.InvalEndCharsAttr = _ebdd
			continue
		}
	}
	for {
		_ebcaf, _eddgc := d.Token()
		if _eddgc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075\u003a\u0020%\u0073", _eddgc)
		}
		if _fgge, _eged := _ebcaf.(_b.EndElement); _eged && _fgge.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLIterateIntervalTime and its children
func (_egfb *CT_TLIterateIntervalTime) Validate() error {
	return _egfb.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065")
}

func (_gdac ST_TransitionEightDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gdac.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		e.EncodeToken(_b.CharData(_gdac.ST_TransitionSideDirectionType.String()))
	}
	if _gdac.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		e.EncodeToken(_b.CharData(_gdac.ST_TransitionCornerDirectionType.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

func (_gecf *OleObj) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gecf.CT_OleObject = *NewCT_OleObject()
	for _, _gfeca := range start.Attr {
		if _gfeca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gfeca.Name.Local == "\u0069\u0064" {
			_bbcdg, _daga := _gfeca.Value, error(nil)
			if _daga != nil {
				return _daga
			}
			_gecf.IdAttr = &_bbcdg
			continue
		}
		if _gfeca.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ddagb, _cbbce := _gfeca.Value, error(nil)
			if _cbbce != nil {
				return _cbbce
			}
			_gecf.SpidAttr = &_ddagb
			continue
		}
		if _gfeca.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgeg, _bcecb := _gfeca.Value, error(nil)
			if _bcecb != nil {
				return _bcecb
			}
			_gecf.NameAttr = &_bgeg
			continue
		}
		if _gfeca.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_adca, _bcacg := _f.ParseBool(_gfeca.Value)
			if _bcacg != nil {
				return _bcacg
			}
			_gecf.ShowAsIconAttr = &_adca
			continue
		}
		if _gfeca.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_bdgab, _fcfbe := _gfeca.Value, error(nil)
			if _fcfbe != nil {
				return _fcfbe
			}
			_gecf.ProgIdAttr = &_bdgab
			continue
		}
		if _gfeca.Name.Local == "\u0069\u006d\u0067\u0057" {
			_gbede, _bfbbdb := _f.ParseInt(_gfeca.Value, 10, 32)
			if _bfbbdb != nil {
				return _bfbbdb
			}
			_eacfg := int32(_gbede)
			_gecf.ImgWAttr = &_eacfg
			continue
		}
		if _gfeca.Name.Local == "\u0069\u006d\u0067\u0048" {
			_bbadf, _dbagf := _f.ParseInt(_gfeca.Value, 10, 32)
			if _dbagf != nil {
				return _dbagf
			}
			_bcdgg := int32(_bbadf)
			_gecf.ImgHAttr = &_bcdgg
			continue
		}
	}
_defgge:
	for {
		_dcgaf, _cdecg := d.Token()
		if _cdecg != nil {
			return _cdecg
		}
		switch _dfcec := _dcgaf.(type) {
		case _b.StartElement:
			switch _dfcec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_gecf.Choice = NewCT_OleObjectChoice()
				if _eagcd := d.DecodeElement(&_gecf.Choice.Embed, &_dfcec); _eagcd != nil {
					return _eagcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_gecf.Choice = NewCT_OleObjectChoice()
				if _fbdgb := d.DecodeElement(&_gecf.Choice.Link, &_dfcec); _fbdgb != nil {
					return _fbdgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gecf.Pic = NewCT_Picture()
				if _dabea := d.DecodeElement(_gecf.Pic, &_dfcec); _dabea != nil {
					return _dabea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004f\u006c\u0065\u004f\u0062\u006a\u0020\u0025\u0076", _dfcec.Name)
				if _agfff := d.Skip(); _agfff != nil {
					return _agfff
				}
			}
		case _b.EndElement:
			break _defgge
		case _b.CharData:
		}
	}
	return nil
}

func (_bcfaf ST_PlaceholderType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcfaf.String(), start)
}

func NewCT_SlideMasterIdListEntry() *CT_SlideMasterIdListEntry {
	_cagaf := &CT_SlideMasterIdListEntry{}
	return _cagaf
}

// ValidateWithPath validates the CT_NormalViewProperties and its children, prefixing error messages with path
func (_dbdd *CT_NormalViewProperties) ValidateWithPath(path string) error {
	if _acbf := _dbdd.VertBarStateAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _acbf != nil {
		return _acbf
	}
	if _bdeg := _dbdd.HorzBarStateAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _bdeg != nil {
		return _bdeg
	}
	if _gcbe := _dbdd.RestoredLeft.ValidateWithPath(path + "\u002f\u0052\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"); _gcbe != nil {
		return _gcbe
	}
	if _faeag := _dbdd.RestoredTop.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"); _faeag != nil {
		return _faeag
	}
	if _dbdd.ExtLst != nil {
		if _fdaf := _dbdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdaf != nil {
			return _fdaf
		}
	}
	return nil
}

func (_edffg ST_PhotoAlbumLayout) Validate() error { return _edffg.ValidateWithPath("") }

func (_cfce *ST_TLAnimateEffectTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbegg, _gcfgc := d.Token()
	if _gcfgc != nil {
		return _gcfgc
	}
	if _dffbf, _ccfag := _cbegg.(_b.EndElement); _ccfag && _dffbf.Name == start.Name {
		*_cfce = 1
		return nil
	}
	if _gbadg, _caecc := _cbegg.(_b.CharData); !_caecc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbegg)
	} else {
		switch string(_gbadg) {
		case "":
			*_cfce = 0
		case "\u0069\u006e":
			*_cfce = 1
		case "\u006f\u0075\u0074":
			*_cfce = 2
		case "\u006e\u006f\u006e\u0065":
			*_cfce = 3
		}
	}
	_cbegg, _gcfgc = d.Token()
	if _gcfgc != nil {
		return _gcfgc
	}
	if _cafad, _cgagdf := _cbegg.(_b.EndElement); _cgagdf && _cafad.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbegg)
}

type ST_TLNextActionType byte

func (_ggefb ST_TLTimeNodeMasterRelation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ggefb.String(), start)
}

func (_bggdac *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbgdb, _gadec := d.Token()
	if _gadec != nil {
		return _gadec
	}
	if _daecf, _afbdf := _bbgdb.(_b.EndElement); _afbdf && _daecf.Name == start.Name {
		*_bggdac = 1
		return nil
	}
	if _dfadb, _edcdf := _bbgdb.(_b.CharData); !_edcdf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbgdb)
	} else {
		switch string(_dfadb) {
		case "":
			*_bggdac = 0
		case "\u0070\u0061\u0072\u0065\u006e\u0074":
			*_bggdac = 1
		case "\u006c\u0061\u0079\u006f\u0075\u0074":
			*_bggdac = 2
		}
	}
	_bbgdb, _gadec = d.Token()
	if _gadec != nil {
		return _gadec
	}
	if _cdacc, _gddegfd := _bbgdb.(_b.EndElement); _gddegfd && _cdacc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbgdb)
}

// ValidateWithPath validates the CT_TLAnimVariantBooleanVal and its children, prefixing error messages with path
func (_ddgea *CT_TLAnimVariantBooleanVal) ValidateWithPath(path string) error { return nil }

func (_ecfec *ST_ViewType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbae, _cgbeg := d.Token()
	if _cgbeg != nil {
		return _cgbeg
	}
	if _ddedf, _geecc := _fbae.(_b.EndElement); _geecc && _ddedf.Name == start.Name {
		*_ecfec = 1
		return nil
	}
	if _bgbaa, _ggda := _fbae.(_b.CharData); !_ggda {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbae)
	} else {
		switch string(_bgbaa) {
		case "":
			*_ecfec = 0
		case "\u0073l\u0064\u0056\u0069\u0065\u0077":
			*_ecfec = 1
		case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_ecfec = 2
		case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
			*_ecfec = 3
		case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
			*_ecfec = 4
		case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_ecfec = 5
		case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
			*_ecfec = 6
		case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_ecfec = 7
		case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
			*_ecfec = 8
		}
	}
	_fbae, _cgbeg = d.Token()
	if _cgbeg != nil {
		return _cgbeg
	}
	if _cfgdc, _aefbe := _fbae.(_b.EndElement); _aefbe && _cfgdc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbae)
}

// Validate validates the CT_Rel and its children
func (_feecg *CT_Rel) Validate() error {
	return _feecg.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}

type NotesMaster struct{ CT_NotesMaster }

// Validate validates the CT_Shape and its children
func (_gefbf *CT_Shape) Validate() error {
	return _gefbf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}

// ValidateWithPath validates the CT_TLAnimVariantStringVal and its children, prefixing error messages with path
func (_faecd *CT_TLAnimVariantStringVal) ValidateWithPath(path string) error { return nil }

func (_dagd *ST_TransitionEightDirectionType) Validate() error { return _dagd.ValidateWithPath("") }

func NewCT_PresentationProperties() *CT_PresentationProperties {
	_gcfbb := &CT_PresentationProperties{}
	return _gcfbb
}

func (_eddg *CT_GuideList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eddg.Guide != nil {
		_gedg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0067\u0075\u0069\u0064\u0065"}}
		for _, _edff := range _eddg.Guide {
			e.EncodeElement(_edff, _gedg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bdaef *CT_TLTimeAnimateValue) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bdaef.TmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_bdaef.TmAttr)})
	}
	if _bdaef.FmlaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _fd.Sprintf("\u0025\u0076", *_bdaef.FmlaAttr)})
	}
	e.EncodeToken(start)
	if _bdaef.Val != nil {
		_gagff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0076a\u006c"}}
		e.EncodeElement(_bdaef.Val, _gagff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_afeg *CT_EmbeddedFontDataId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _afeg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_TLTimeNodeSequence() *CT_TLTimeNodeSequence {
	_eccgg := &CT_TLTimeNodeSequence{}
	_eccgg.CTn = NewCT_TLCommonTimeNodeData()
	return _eccgg
}

func (_degca *CT_TLTemplate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_degca.TnLst = NewCT_TimeNodeList()
	for _, _ebbe := range start.Attr {
		if _ebbe.Name.Local == "\u006c\u0076\u006c" {
			_cdbg, _cbfbd := _f.ParseUint(_ebbe.Value, 10, 32)
			if _cbfbd != nil {
				return _cbfbd
			}
			_dcbg := uint32(_cdbg)
			_degca.LvlAttr = &_dcbg
			continue
		}
	}
_badeg:
	for {
		_aafca, _ecgf := d.Token()
		if _ecgf != nil {
			return _ecgf
		}
		switch _cacgfa := _aafca.(type) {
		case _b.StartElement:
			switch _cacgfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				if _bafda := d.DecodeElement(_degca.TnLst, &_cacgfa); _bafda != nil {
					return _bafda
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054L\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065 \u0025\u0076", _cacgfa.Name)
				if _gefae := d.Skip(); _gefae != nil {
					return _gefae
				}
			}
		case _b.EndElement:
			break _badeg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_TopLevelSlide and its children, prefixing error messages with path
func (_gacg *EG_TopLevelSlide) ValidateWithPath(path string) error {
	if _bbggf := _gacg.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _bbggf != nil {
		return _bbggf
	}
	return nil
}

type ST_TLTimeNodeSyncType byte

// ValidateWithPath validates the CT_TLIterateData and its children, prefixing error messages with path
func (_gfaae *CT_TLIterateData) ValidateWithPath(path string) error {
	if _fbfca := _gfaae.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fbfca != nil {
		return _fbfca
	}
	if _gfaae.TmAbs != nil {
		if _edbee := _gfaae.TmAbs.ValidateWithPath(path + "\u002f\u0054\u006d\u0041\u0062\u0073"); _edbee != nil {
			return _edbee
		}
	}
	if _gfaae.TmPct != nil {
		if _afece := _gfaae.TmPct.ValidateWithPath(path + "\u002f\u0054\u006d\u0050\u0063\u0074"); _afece != nil {
			return _afece
		}
	}
	return nil
}

func NewCT_Extension() *CT_Extension { _fegd := &CT_Extension{}; return _fegd }

func (_eaeaa ST_TLParaBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_edbc := _b.Attr{}
	_edbc.Name = name
	switch _eaeaa {
	case ST_TLParaBuildTypeUnset:
		_edbc.Value = ""
	case ST_TLParaBuildTypeAllAtOnce:
		_edbc.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLParaBuildTypeP:
		_edbc.Value = "\u0070"
	case ST_TLParaBuildTypeCust:
		_edbc.Value = "\u0063\u0075\u0073\u0074"
	case ST_TLParaBuildTypeWhole:
		_edbc.Value = "\u0077\u0068\u006fl\u0065"
	}
	return _edbc, nil
}

func NewHandoutMaster() *HandoutMaster {
	_ggaag := &HandoutMaster{}
	_ggaag.CT_HandoutMaster = *NewCT_HandoutMaster()
	return _ggaag
}

func NewCT_TransitionSoundAction() *CT_TransitionSoundAction {
	_gagfg := &CT_TransitionSoundAction{}
	return _gagfg
}

func NewCT_HtmlPublishProperties() *CT_HtmlPublishProperties {
	_afcd := &CT_HtmlPublishProperties{}
	return _afcd
}

func (_caacd *ST_TLBehaviorAdditiveType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_caacd = 0
	case "\u0062\u0061\u0073\u0065":
		*_caacd = 1
	case "\u0073\u0075\u006d":
		*_caacd = 2
	case "\u0072\u0065\u0070\u006c":
		*_caacd = 3
	case "\u006d\u0075\u006c\u0074":
		*_caacd = 4
	case "\u006e\u006f\u006e\u0065":
		*_caacd = 5
	}
	return nil
}

type ST_TransitionSideDirectionType byte

func (_abdgb *ST_TLTimeAnimateValueTime) Validate() error { return _abdgb.ValidateWithPath("") }

func (_ecdbe *ST_TLTime) ValidateWithPath(path string) error {
	_ebcc := []string{}
	if _ecdbe.Uint32 != nil {
		_ebcc = append(_ebcc, "\u0055\u0069\u006e\u0074\u0033\u0032")
	}
	if _ecdbe.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_ebcc = append(_ebcc, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_ebcc) > 1 {
		return _fd.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ebcc)
	}
	return nil
}

func (_dgbdf ST_ViewType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adedd := _b.Attr{}
	_adedd.Name = name
	switch _dgbdf {
	case ST_ViewTypeUnset:
		_adedd.Value = ""
	case ST_ViewTypeSldView:
		_adedd.Value = "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldMasterView:
		_adedd.Value = "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesView:
		_adedd.Value = "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case ST_ViewTypeHandoutView:
		_adedd.Value = "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesMasterView:
		_adedd.Value = "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeOutlineView:
		_adedd.Value = "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldSorterView:
		_adedd.Value = "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldThumbnailView:
		_adedd.Value = "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return _adedd, nil
}

// Validate validates the CT_TimeNodeList and its children
func (_dfaf *CT_TimeNodeList) Validate() error {
	return _dfaf.ValidateWithPath("\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074")
}

const (
	ST_TLTimeNodeFillTypeUnset      ST_TLTimeNodeFillType = 0
	ST_TLTimeNodeFillTypeRemove     ST_TLTimeNodeFillType = 1
	ST_TLTimeNodeFillTypeFreeze     ST_TLTimeNodeFillType = 2
	ST_TLTimeNodeFillTypeHold       ST_TLTimeNodeFillType = 3
	ST_TLTimeNodeFillTypeTransition ST_TLTimeNodeFillType = 4
)

type ST_TLAnimateBehaviorCalcMode byte

func (_fgdd *CT_OleObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgdd.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fgdd.ProgIdAttr)})
	}
	if _fgdd.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fgdd.SpidAttr)})
	}
	if _fgdd.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fgdd.NameAttr)})
	}
	if _fgdd.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_fgdd.ShowAsIconAttr))})
	}
	if _fgdd.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fgdd.IdAttr)})
	}
	if _fgdd.ImgWAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _fd.Sprintf("\u0025\u0076", *_fgdd.ImgWAttr)})
	}
	if _fgdd.ImgHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _fd.Sprintf("\u0025\u0076", *_fgdd.ImgHAttr)})
	}
	e.EncodeToken(start)
	_fgdd.Choice.MarshalXML(e, _b.StartElement{})
	if _fgdd.Pic != nil {
		_ddcbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_fgdd.Pic, _ddcbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLTimeTargetElement struct {

	// Slide Target
	SldTgt *CT_Empty

	// Sound Target
	SndTgt *_bc.CT_EmbeddedWAVAudioFile

	// Shape Target
	SpTgt *CT_TLShapeTargetElement

	// Ink Target
	InkTgt *CT_TLSubShapeId
}

const (
	ST_PrintWhatUnset     ST_PrintWhat = 0
	ST_PrintWhatSlides    ST_PrintWhat = 1
	ST_PrintWhatHandouts1 ST_PrintWhat = 2
	ST_PrintWhatHandouts2 ST_PrintWhat = 3
	ST_PrintWhatHandouts3 ST_PrintWhat = 4
	ST_PrintWhatHandouts4 ST_PrintWhat = 5
	ST_PrintWhatHandouts6 ST_PrintWhat = 6
	ST_PrintWhatHandouts9 ST_PrintWhat = 7
	ST_PrintWhatNotes     ST_PrintWhat = 8
	ST_PrintWhatOutline   ST_PrintWhat = 9
)

type CT_CommonViewProperties struct {

	// Variable Scale
	VarScaleAttr *bool

	// View Scale
	Scale *_bc.CT_Scale2D

	// View Origin
	Origin *_bc.CT_Point2D
}

// ValidateWithPath validates the CT_Background and its children, prefixing error messages with path
func (_fgb *CT_Background) ValidateWithPath(path string) error {
	if _fgc := _fgb.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fgc != nil {
		return _fgc
	}
	if _fgb.BgPr != nil {
		if _ebe := _fgb.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _ebe != nil {
			return _ebe
		}
	}
	if _fgb.BgRef != nil {
		if _egg := _fgb.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _egg != nil {
			return _egg
		}
	}
	return nil
}

func (_gbecb *EG_SlideListChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ecgaa:
	for {
		_ebfeg, _dgaad := d.Token()
		if _dgaad != nil {
			return _dgaad
		}
		switch _dbagc := _ebfeg.(type) {
		case _b.StartElement:
			switch _dbagc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_gbecb.SldAll = NewCT_Empty()
				if _bcgg := d.DecodeElement(_gbecb.SldAll, &_dbagc); _bcgg != nil {
					return _bcgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_gbecb.SldRg = NewCT_IndexRange()
				if _bfcf := d.DecodeElement(_gbecb.SldRg, &_dbagc); _bfcf != nil {
					return _bfcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gbecb.CustShow = NewCT_CustomShowId()
				if _bdgbc := d.DecodeElement(_gbecb.CustShow, &_dbagc); _bdgbc != nil {
					return _bdgbc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u006c\u0069\u0064\u0065\u004ci\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _dbagc.Name)
				if _aggbd := d.Skip(); _aggbd != nil {
					return _aggbd
				}
			}
		case _b.EndElement:
			break _ecgaa
		case _b.CharData:
		}
	}
	return nil
}

func (_fabfc ST_TLTimeNodeRestartType) Validate() error { return _fabfc.ValidateWithPath("") }

func NewCT_TLBuildDiagram() *CT_TLBuildDiagram { _gffgg := &CT_TLBuildDiagram{}; return _gffgg }

// Validate validates the CT_CommonSlideViewProperties and its children
func (_gfeg *CT_CommonSlideViewProperties) Validate() error {
	return _gfeg.ValidateWithPath("\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}

func (_ddfbc *CT_Guide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddfbc.OrientAttr != ST_DirectionUnset {
		_dbcc, _ffdg := _ddfbc.OrientAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _ffdg != nil {
			return _ffdg
		}
		start.Attr = append(start.Attr, _dbcc)
	}
	if _ddfbc.PosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_ddfbc.PosAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cgcbd ST_TLBehaviorAccumulateType) ValidateWithPath(path string) error {
	switch _cgcbd {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgcbd))
	}
	return nil
}

func NewCT_SlideTransitionChoice() *CT_SlideTransitionChoice {
	_cbbc := &CT_SlideTransitionChoice{}
	return _cbbc
}

func (_bccae *ST_PhotoAlbumFrameShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adfdc, _bbcdb := d.Token()
	if _bbcdb != nil {
		return _bbcdb
	}
	if _fdagc, _aedc := _adfdc.(_b.EndElement); _aedc && _fdagc.Name == start.Name {
		*_bccae = 1
		return nil
	}
	if _dacab, _gcdff := _adfdc.(_b.CharData); !_gcdff {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adfdc)
	} else {
		switch string(_dacab) {
		case "":
			*_bccae = 0
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
			*_bccae = 1
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
			*_bccae = 2
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
			*_bccae = 3
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
			*_bccae = 4
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
			*_bccae = 5
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
			*_bccae = 6
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
			*_bccae = 7
		}
	}
	_adfdc, _bbcdb = d.Token()
	if _bbcdb != nil {
		return _bbcdb
	}
	if _bcfgg, _cccef := _adfdc.(_b.EndElement); _cccef && _bcfgg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adfdc)
}

func (_gdgag *ST_TransitionCornerDirectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gdgag = 0
	case "\u006c\u0075":
		*_gdgag = 1
	case "\u0072\u0075":
		*_gdgag = 2
	case "\u006c\u0064":
		*_gdgag = 3
	case "\u0072\u0064":
		*_gdgag = 4
	}
	return nil
}

const (
	ST_DirectionUnset ST_Direction = 0
	ST_DirectionHorz  ST_Direction = 1
	ST_DirectionVert  ST_Direction = 2
)

func (_fcbfd *CT_GraphicalObjectFrame) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcbfd.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_fcbfd.Xfrm = _bc.NewCT_Transform2D()
	_fcbfd.Graphic = _bc.NewGraphic()
	for _, _cfae := range start.Attr {
		if _cfae.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_fcbfd.BwModeAttr.UnmarshalXMLAttr(_cfae)
			continue
		}
	}
_dcaa:
	for {
		_ccfg, _eeda := d.Token()
		if _eeda != nil {
			return _eeda
		}
		switch _dbdb := _ccfg.(type) {
		case _b.StartElement:
			switch _dbdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _ccbef := d.DecodeElement(_fcbfd.NvGraphicFramePr, &_dbdb); _ccbef != nil {
					return _ccbef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _efcgb := d.DecodeElement(_fcbfd.Xfrm, &_dbdb); _efcgb != nil {
					return _efcgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _abbff := d.DecodeElement(_fcbfd.Graphic, &_dbdb); _abbff != nil {
					return _abbff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcbfd.ExtLst = NewCT_ExtensionListModify()
				if _daeg := d.DecodeElement(_fcbfd.ExtLst, &_dbdb); _daeg != nil {
					return _daeg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _dbdb.Name)
				if _dcc := d.Skip(); _dcc != nil {
					return _dcc
				}
			}
		case _b.EndElement:
			break _dcaa
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TLAnimVariantIntegerVal() *CT_TLAnimVariantIntegerVal {
	_gaca := &CT_TLAnimVariantIntegerVal{}
	return _gaca
}

func (_baceg *CT_SmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afgd := range start.Attr {
		if _afgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _afgd.Name.Local == "\u0069\u0064" || _afgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _afgd.Name.Local == "\u0069\u0064" {
			_gccb, _fdbf := _afgd.Value, error(nil)
			if _fdbf != nil {
				return _fdbf
			}
			_baceg.IdAttr = _gccb
			continue
		}
	}
	for {
		_bface, _dfdee := d.Token()
		if _dfdee != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006da\u0072\u0074\u0054\u0061\u0067\u0073\u003a\u0020\u0025\u0073", _dfdee)
		}
		if _efcb, _fdca := _bface.(_b.EndElement); _fdca && _efcb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_NotesMasterIdList struct {

	// Notes Master ID
	NotesMasterId *CT_NotesMasterIdListEntry
}

// Validate validates the CT_NotesMasterIdListEntry and its children
func (_bccff *CT_NotesMasterIdListEntry) Validate() error {
	return _bccff.ValidateWithPath("\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

// ValidateWithPath validates the CmLst and its children, prefixing error messages with path
func (_dfgd *CmLst) ValidateWithPath(path string) error {
	if _dggec := _dfgd.CT_CommentList.ValidateWithPath(path); _dggec != nil {
		return _dggec
	}
	return nil
}

func (_bgcga ST_TLTimeNodeMasterRelation) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dedeg := _b.Attr{}
	_dedeg.Name = name
	switch _bgcga {
	case ST_TLTimeNodeMasterRelationUnset:
		_dedeg.Value = ""
	case ST_TLTimeNodeMasterRelationSameClick:
		_dedeg.Value = "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationLastClick:
		_dedeg.Value = "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationNextClick:
		_dedeg.Value = "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return _dedeg, nil
}

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_dcdcd *CT_Empty) ValidateWithPath(path string) error { return nil }

func (_feacc *EG_ShowType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cfebf:
	for {
		_effegb, _cabbe := d.Token()
		if _cabbe != nil {
			return _cabbe
		}
		switch _fbfce := _effegb.(type) {
		case _b.StartElement:
			switch _fbfce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_feacc.Present = NewCT_Empty()
				if _fgga := d.DecodeElement(_feacc.Present, &_fbfce); _fgga != nil {
					return _fgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_feacc.Browse = NewCT_ShowInfoBrowse()
				if _eagaf := d.DecodeElement(_feacc.Browse, &_fbfce); _eagaf != nil {
					return _eagaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_feacc.Kiosk = NewCT_ShowInfoKiosk()
				if _eafcc := d.DecodeElement(_feacc.Kiosk, &_fbfce); _eafcc != nil {
					return _eafcc
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _fbfce.Name)
				if _cega := d.Skip(); _cega != nil {
					return _cega
				}
			}
		case _b.EndElement:
			break _cfebf
		case _b.CharData:
		}
	}
	return nil
}

type CT_IndexRange struct {

	// Start
	StAttr uint32

	// End
	EndAttr uint32
}

func (_deedc ST_TLAnimateEffectTransition) ValidateWithPath(path string) error {
	switch _deedc {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deedc))
	}
	return nil
}

func NewCT_Guide() *CT_Guide { _acadd := &CT_Guide{}; return _acadd }

const (
	ST_TransitionSideDirectionTypeUnset ST_TransitionSideDirectionType = 0
	ST_TransitionSideDirectionTypeL     ST_TransitionSideDirectionType = 1
	ST_TransitionSideDirectionTypeU     ST_TransitionSideDirectionType = 2
	ST_TransitionSideDirectionTypeR     ST_TransitionSideDirectionType = 3
	ST_TransitionSideDirectionTypeD     ST_TransitionSideDirectionType = 4
)

const (
	ST_TransitionInOutDirectionTypeUnset ST_TransitionInOutDirectionType = 0
	ST_TransitionInOutDirectionTypeOut   ST_TransitionInOutDirectionType = 1
	ST_TransitionInOutDirectionTypeIn    ST_TransitionInOutDirectionType = 2
)

type CT_SlideRelationshipListEntry struct{ IdAttr string }

type CT_TLAnimateRotationBehavior struct {

	// By
	ByAttr *int32

	// From
	FromAttr *int32

	// To
	ToAttr *int32
	CBhvr  *CT_TLCommonBehaviorData
}

func (_dfedaa ST_TLTriggerRuntimeNode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dcdde := _b.Attr{}
	_dcdde.Name = name
	switch _dfedaa {
	case ST_TLTriggerRuntimeNodeUnset:
		_dcdde.Value = ""
	case ST_TLTriggerRuntimeNodeFirst:
		_dcdde.Value = "\u0066\u0069\u0072s\u0074"
	case ST_TLTriggerRuntimeNodeLast:
		_dcdde.Value = "\u006c\u0061\u0073\u0074"
	case ST_TLTriggerRuntimeNodeAll:
		_dcdde.Value = "\u0061\u006c\u006c"
	}
	return _dcdde, nil
}

func (_febaee ST_PhotoAlbumFrameShape) ValidateWithPath(path string) error {
	switch _febaee {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_febaee))
	}
	return nil
}

func (_gfgcb *CT_TLGraphicalObjectBuild) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cafd := range start.Attr {
		if _cafd.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fgcef, _cgcc := _f.ParseUint(_cafd.Value, 10, 32)
			if _cgcc != nil {
				return _cgcc
			}
			_gdae := uint32(_fgcef)
			_gfgcb.SpidAttr = &_gdae
			continue
		}
		if _cafd.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_baada, _fcdbd := _f.ParseUint(_cafd.Value, 10, 32)
			if _fcdbd != nil {
				return _fcdbd
			}
			_efgbfb := uint32(_baada)
			_gfgcb.GrpIdAttr = &_efgbfb
			continue
		}
		if _cafd.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_edcbb, _gddg := _f.ParseBool(_cafd.Value)
			if _gddg != nil {
				return _gddg
			}
			_gfgcb.UiExpandAttr = &_edcbb
			continue
		}
	}
_ggbbg:
	for {
		_bcdbba, _fcgcce := d.Token()
		if _fcgcce != nil {
			return _fcgcce
		}
		switch _gcdad := _bcdbba.(type) {
		case _b.StartElement:
			switch _gcdad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}:
				_gfgcb.BldAsOne = NewCT_Empty()
				if _ggeb := d.DecodeElement(_gfgcb.BldAsOne, &_gcdad); _ggeb != nil {
					return _ggeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}:
				_gfgcb.BldSub = _bc.NewCT_AnimationGraphicalObjectBuildProperties()
				if _faefe := d.DecodeElement(_gfgcb.BldSub, &_gcdad); _faefe != nil {
					return _faefe
				}
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0047\u0072\u0061\u0070\u0068\u0069c\u0061l\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075i\u006cd\u0020\u0025v", _gcdad.Name)
				if _ebfe := d.Skip(); _ebfe != nil {
					return _ebfe
				}
			}
		case _b.EndElement:
			break _ggbbg
		case _b.CharData:
		}
	}
	return nil
}

func (_bacad *CT_TLAnimVariantIntegerVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _bacad.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLAnimateRotationBehavior and its children
func (_ebcab *CT_TLAnimateRotationBehavior) Validate() error {
	return _ebcab.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072")
}

func (_gaeb *CT_TLAnimateColorBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gaeb.ClrSpcAttr != ST_TLAnimateColorSpaceUnset {
		_cfbdc, _cbbe := _gaeb.ClrSpcAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u006c\u0072\u0053\u0070\u0063"})
		if _cbbe != nil {
			return _cbbe
		}
		start.Attr = append(start.Attr, _cfbdc)
	}
	if _gaeb.DirAttr != ST_TLAnimateColorDirectionUnset {
		_cedg, _fefb := _gaeb.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _fefb != nil {
			return _fefb
		}
		start.Attr = append(start.Attr, _cedg)
	}
	e.EncodeToken(start)
	_ddcea := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_gaeb.CBhvr, _ddcea)
	if _gaeb.By != nil {
		_gcdeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_gaeb.By, _gcdeg)
	}
	if _gaeb.From != nil {
		_efbbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_gaeb.From, _efbbd)
	}
	if _gaeb.To != nil {
		_acfdf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_gaeb.To, _acfdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bgagf ST_TLTime) String() string {
	if _bgagf.Uint32 != nil {
		return _fd.Sprintf("\u0025\u0076", *_bgagf.Uint32)
	}
	if _bgagf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _bgagf.ST_TLTimeIndefinite.String()
	}
	return ""
}

type CT_WheelTransition struct {

	// Spokes
	SpokesAttr *uint32
}

func (_dgccd *ST_SplitterBarState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgccd = 0
	case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
		*_dgccd = 1
	case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
		*_dgccd = 2
	case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
		*_dgccd = 3
	}
	return nil
}

func (_gcgdg *ST_OleObjectFollowColorScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dffgc, _ddccc := d.Token()
	if _ddccc != nil {
		return _ddccc
	}
	if _aagbg, _fecbb := _dffgc.(_b.EndElement); _fecbb && _aagbg.Name == start.Name {
		*_gcgdg = 1
		return nil
	}
	if _dded, _afeac := _dffgc.(_b.CharData); !_afeac {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dffgc)
	} else {
		switch string(_dded) {
		case "":
			*_gcgdg = 0
		case "\u006e\u006f\u006e\u0065":
			*_gcgdg = 1
		case "\u0066\u0075\u006c\u006c":
			*_gcgdg = 2
		case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
			*_gcgdg = 3
		}
	}
	_dffgc, _ddccc = d.Token()
	if _ddccc != nil {
		return _ddccc
	}
	if _cagfc, _agcdd := _dffgc.(_b.EndElement); _agcdd && _cagfc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dffgc)
}

func NewCT_Picture() *CT_Picture {
	_edcf := &CT_Picture{}
	_edcf.NvPicPr = NewCT_PictureNonVisual()
	_edcf.BlipFill = _bc.NewCT_BlipFillProperties()
	_edcf.SpPr = _bc.NewCT_ShapeProperties()
	return _edcf
}

func (_fafgd ST_TransitionCornerDirectionType) String() string {
	switch _fafgd {
	case 0:
		return ""
	case 1:
		return "\u006c\u0075"
	case 2:
		return "\u0072\u0075"
	case 3:
		return "\u006c\u0064"
	case 4:
		return "\u0072\u0064"
	}
	return ""
}

type CT_TLTimeNodeExclusive struct {

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData
}

func (_bbgdbg ST_ViewType) ValidateWithPath(path string) error {
	switch _bbgdbg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbgdbg))
	}
	return nil
}

func (_dbbgb *CT_TLMediaNodeVideo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbbgb.FullScrnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_dbbgb.FullScrnAttr))})
	}
	e.EncodeToken(start)
	_cfbde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_dbbgb.CMediaNode, _cfbde)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Empty struct{}

func (_facab ST_TLChartSubelementType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdffca := _b.Attr{}
	_gdffca.Name = name
	switch _facab {
	case ST_TLChartSubelementTypeUnset:
		_gdffca.Value = ""
	case ST_TLChartSubelementTypeGridLegend:
		_gdffca.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case ST_TLChartSubelementTypeSeries:
		_gdffca.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypeCategory:
		_gdffca.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLChartSubelementTypePtInSeries:
		_gdffca.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypePtInCategory:
		_gdffca.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return _gdffca, nil
}

// Validate validates the CT_TLTextTargetElement and its children
func (_edeba *CT_TLTextTargetElement) Validate() error {
	return _edeba.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

func (_gcad ST_TransitionInOutDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gcad.String(), start)
}

func (_edgc *CT_ViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edgc.LastViewAttr != ST_ViewTypeUnset {
		_egade, _ccbb := _edgc.LastViewAttr.MarshalXMLAttr(_b.Name{Local: "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077"})
		if _ccbb != nil {
			return _ccbb
		}
		start.Attr = append(start.Attr, _egade)
	}
	if _edgc.ShowCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_edgc.ShowCommentsAttr))})
	}
	e.EncodeToken(start)
	if _edgc.NormalViewPr != nil {
		_cabb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u006f\u0072\u006d\u0061\u006c\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_edgc.NormalViewPr, _cabb)
	}
	if _edgc.SlideViewPr != nil {
		_fccfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_edgc.SlideViewPr, _fccfa)
	}
	if _edgc.OutlineViewPr != nil {
		_gcgdf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006fu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_edgc.OutlineViewPr, _gcgdf)
	}
	if _edgc.NotesTextViewPr != nil {
		_cfff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0054\u0065\u0078\u0074\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_edgc.NotesTextViewPr, _cfff)
	}
	if _edgc.SorterViewPr != nil {
		_bfde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006f\u0072\u0074\u0065\u0072\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_edgc.SorterViewPr, _bfde)
	}
	if _edgc.NotesViewPr != nil {
		_cbfd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_edgc.NotesViewPr, _cbfd)
	}
	if _edgc.GridSpacing != nil {
		_agafa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}}
		e.EncodeElement(_edgc.GridSpacing, _agafa)
	}
	if _edgc.ExtLst != nil {
		_cfcf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_edgc.ExtLst, _cfcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewSldLayout() *SldLayout {
	_aegca := &SldLayout{}
	_aegca.CT_SlideLayout = *NewCT_SlideLayout()
	return _aegca
}

type CT_TLSubShapeId struct {

	// Shape ID
	SpidAttr string
}

func (_egfbf *CT_TLTriggerRuntimeNode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egfbf.ValAttr = ST_TLTriggerRuntimeNode(1)
	for _, _bgcd := range start.Attr {
		if _bgcd.Name.Local == "\u0076\u0061\u006c" {
			_egfbf.ValAttr.UnmarshalXMLAttr(_bgcd)
			continue
		}
	}
	for {
		_cagab, _gefda := d.Token()
		if _gefda != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0054r\u0069\u0067\u0067\u0065\u0072\u0052\u0075n\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u003a\u0020%\u0073", _gefda)
		}
		if _cefad, _agcd := _cagab.(_b.EndElement); _agcd && _cefad.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CommentAuthorList and its children
func (_debb *CT_CommentAuthorList) Validate() error {
	return _debb.ValidateWithPath("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074")
}

// ValidateWithPath validates the CT_TLCommonMediaNodeData and its children, prefixing error messages with path
func (_fcdaf *CT_TLCommonMediaNodeData) ValidateWithPath(path string) error {
	if _fcdaf.VolAttr != nil {
		if _gdea := _fcdaf.VolAttr.ValidateWithPath(path + "\u002f\u0056\u006f\u006c\u0041\u0074\u0074\u0072"); _gdea != nil {
			return _gdea
		}
	}
	if _gedcg := _fcdaf.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _gedcg != nil {
		return _gedcg
	}
	if _ffdgb := _fcdaf.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _ffdgb != nil {
		return _ffdgb
	}
	return nil
}

// ST_TransitionEightDirectionType is a union type
type ST_TransitionEightDirectionType struct {
	ST_TransitionSideDirectionType   ST_TransitionSideDirectionType
	ST_TransitionCornerDirectionType ST_TransitionCornerDirectionType
}

type CT_TLIterateIntervalPercentage struct {

	// Value
	ValAttr _bc.ST_PositivePercentage
}

// ValidateWithPath validates the CT_SlideIdList and its children, prefixing error messages with path
func (_daeca *CT_SlideIdList) ValidateWithPath(path string) error {
	for _bagc, _ggcc := range _daeca.SldId {
		if _geea := _ggcc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fS\u006c\u0064\u0049\u0064\u005b\u0025\u0064\u005d", path, _bagc)); _geea != nil {
			return _geea
		}
	}
	return nil
}

type CT_SlideIdList struct {

	// Slide ID
	SldId []*CT_SlideIdListEntry
}

func (_fcge *CT_NotesMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bcfe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_fcge.CSld, _bcfe)
	_bcgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_fcge.ClrMap, _bcgd)
	if _fcge.Hf != nil {
		_dfab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_fcge.Hf, _dfab)
	}
	if _fcge.NotesStyle != nil {
		_dgg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006eo\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fcge.NotesStyle, _dgg)
	}
	if _fcge.ExtLst != nil {
		_dcabf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcge.ExtLst, _dcabf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gbfa *CT_GuideList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfaaa:
	for {
		_abec, _fcae := d.Token()
		if _fcae != nil {
			return _fcae
		}
		switch _bege := _abec.(type) {
		case _b.StartElement:
			switch _bege.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}:
				_fega := NewCT_Guide()
				if _eccg := d.DecodeElement(_fega, &_bege); _eccg != nil {
					return _eccg
				}
				_gbfa.Guide = append(_gbfa.Guide, _fega)
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0075\u0069d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bege.Name)
				if _gfafg := d.Skip(); _gfafg != nil {
					return _gfafg
				}
			}
		case _b.EndElement:
			break _bfaaa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesTextViewProperties and its children, prefixing error messages with path
func (_ffdc *CT_NotesTextViewProperties) ValidateWithPath(path string) error {
	if _efed := _ffdc.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _efed != nil {
		return _efed
	}
	if _ffdc.ExtLst != nil {
		if _aeebf := _ffdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeebf != nil {
			return _aeebf
		}
	}
	return nil
}

func (_gefc *CT_TLCommonBehaviorData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gefc.AdditiveAttr != ST_TLBehaviorAdditiveTypeUnset {
		_fbgdf, _gcfd := _gefc.AdditiveAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065"})
		if _gcfd != nil {
			return _gcfd
		}
		start.Attr = append(start.Attr, _fbgdf)
	}
	if _gefc.AccumulateAttr != ST_TLBehaviorAccumulateTypeUnset {
		_aggec, _ggbag := _gefc.AccumulateAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065"})
		if _ggbag != nil {
			return _ggbag
		}
		start.Attr = append(start.Attr, _aggec)
	}
	if _gefc.XfrmTypeAttr != ST_TLBehaviorTransformTypeUnset {
		_bcaeb, _beae := _gefc.XfrmTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065"})
		if _beae != nil {
			return _beae
		}
		start.Attr = append(start.Attr, _bcaeb)
	}
	if _gefc.FromAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_gefc.FromAttr)})
	}
	if _gefc.ToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gefc.ToAttr)})
	}
	if _gefc.ByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_gefc.ByAttr)})
	}
	if _gefc.RctxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0063\u0074\u0078"}, Value: _fd.Sprintf("\u0025\u0076", *_gefc.RctxAttr)})
	}
	if _gefc.OverrideAttr != ST_TLBehaviorOverrideTypeUnset {
		_gafea, _dgdbe := _gefc.OverrideAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"})
		if _dgdbe != nil {
			return _dgdbe
		}
		start.Attr = append(start.Attr, _gafea)
	}
	e.EncodeToken(start)
	_dfgc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_gefc.CTn, _dfgc)
	_fedce := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_gefc.TgtEl, _fedce)
	if _gefc.AttrNameLst != nil {
		_egbdb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_gefc.AttrNameLst, _egbdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_baaag ST_TLAnimateMotionPathEditMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfadg := _b.Attr{}
	_bfadg.Name = name
	switch _baaag {
	case ST_TLAnimateMotionPathEditModeUnset:
		_bfadg.Value = ""
	case ST_TLAnimateMotionPathEditModeRelative:
		_bfadg.Value = "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case ST_TLAnimateMotionPathEditModeFixed:
		_bfadg.Value = "\u0066\u0069\u0078e\u0064"
	}
	return _bfadg, nil
}

// ValidateWithPath validates the CT_TLPoint and its children, prefixing error messages with path
func (_gfde *CT_TLPoint) ValidateWithPath(path string) error {
	if _cabcc := _gfde.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _cabcc != nil {
		return _cabcc
	}
	if _afccg := _gfde.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _afccg != nil {
		return _afccg
	}
	return nil
}

// Validate validates the CT_IndexRange and its children
func (_gcdg *CT_IndexRange) Validate() error {
	return _gcdg.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065")
}

func (_bfab ST_TLTimeNodeFillType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bfab.String(), start)
}

// Validate validates the CT_EmbeddedFontListEntry and its children
func (_eebee *CT_EmbeddedFontListEntry) Validate() error {
	return _eebee.ValidateWithPath("\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

// ValidateWithPath validates the CT_OptionalBlackTransition and its children, prefixing error messages with path
func (_fffa *CT_OptionalBlackTransition) ValidateWithPath(path string) error { return nil }

func (_gbfc *CT_NormalViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbfc.ShowOutlineIconsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gbfc.ShowOutlineIconsAttr))})
	}
	if _gbfc.SnapVertSplitterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gbfc.SnapVertSplitterAttr))})
	}
	if _gbfc.VertBarStateAttr != ST_SplitterBarStateUnset {
		_fggeb, _cbfb := _gbfc.VertBarStateAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _cbfb != nil {
			return _cbfb
		}
		start.Attr = append(start.Attr, _fggeb)
	}
	if _gbfc.HorzBarStateAttr != ST_SplitterBarStateUnset {
		_acece, _cbafd := _gbfc.HorzBarStateAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _cbafd != nil {
			return _cbafd
		}
		start.Attr = append(start.Attr, _acece)
	}
	if _gbfc.PreferSingleViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gbfc.PreferSingleViewAttr))})
	}
	e.EncodeToken(start)
	_ceae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065d\u004c\u0065\u0066\u0074"}}
	e.EncodeElement(_gbfc.RestoredLeft, _ceae)
	_aafc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}}
	e.EncodeElement(_gbfc.RestoredTop, _aafc)
	if _gbfc.ExtLst != nil {
		_egbe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbfc.ExtLst, _egbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLCommandBehavior and its children, prefixing error messages with path
func (_cacf *CT_TLCommandBehavior) ValidateWithPath(path string) error {
	if _agacd := _cacf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _agacd != nil {
		return _agacd
	}
	if _gabg := _cacf.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _gabg != nil {
		return _gabg
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayoutIdListEntry and its children, prefixing error messages with path
func (_agda *CT_SlideLayoutIdListEntry) ValidateWithPath(path string) error {
	if _agda.IdAttr != nil {
		if *_agda.IdAttr < 2147483648 {
			return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_agda.IdAttr)
		}
	}
	if _agda.ExtLst != nil {
		if _aafcgf := _agda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aafcgf != nil {
			return _aafcgf
		}
	}
	return nil
}

type CT_TLTimeAnimateValueList struct {

	// Time Animate Value
	Tav []*CT_TLTimeAnimateValue
}

func (_bcfab ST_TLTimeNodeRestartType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ffgac := _b.Attr{}
	_ffgac.Name = name
	switch _bcfab {
	case ST_TLTimeNodeRestartTypeUnset:
		_ffgac.Value = ""
	case ST_TLTimeNodeRestartTypeAlways:
		_ffgac.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	case ST_TLTimeNodeRestartTypeWhenNotActive:
		_ffgac.Value = "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case ST_TLTimeNodeRestartTypeNever:
		_ffgac.Value = "\u006e\u0065\u0076e\u0072"
	}
	return _ffgac, nil
}

func (_cbcdf ST_TLAnimateMotionPathEditMode) String() string {
	switch _cbcdf {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case 2:
		return "\u0066\u0069\u0078e\u0064"
	}
	return ""
}

// Validate validates the CT_ShowProperties and its children
func (_afcf *CT_ShowProperties) Validate() error {
	return _afcf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func NewEG_Background() *EG_Background { _ceca := &EG_Background{}; return _ceca }

func (_ffcd *CT_TLAnimateRotationBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffcd.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bbfaa := range start.Attr {
		if _bbfaa.Name.Local == "\u0062\u0079" {
			_bacegb, _baddf := _f.ParseInt(_bbfaa.Value, 10, 32)
			if _baddf != nil {
				return _baddf
			}
			_cgaf := int32(_bacegb)
			_ffcd.ByAttr = &_cgaf
			continue
		}
		if _bbfaa.Name.Local == "\u0066\u0072\u006f\u006d" {
			_ffcea, _edefd := _f.ParseInt(_bbfaa.Value, 10, 32)
			if _edefd != nil {
				return _edefd
			}
			_agffa := int32(_ffcea)
			_ffcd.FromAttr = &_agffa
			continue
		}
		if _bbfaa.Name.Local == "\u0074\u006f" {
			_dcbaaf, _efgbe := _f.ParseInt(_bbfaa.Value, 10, 32)
			if _efgbe != nil {
				return _efgbe
			}
			_bcbb := int32(_dcbaaf)
			_ffcd.ToAttr = &_bcbb
			continue
		}
	}
_eedacb:
	for {
		_dbfd, _edbe := d.Token()
		if _edbe != nil {
			return _edbe
		}
		switch _fbgdg := _dbfd.(type) {
		case _b.StartElement:
			switch _fbgdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _adefb := d.DecodeElement(_ffcd.CBhvr, &_fbgdg); _adefb != nil {
					return _adefb
				}
			default:
				_g.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074\u0061\u0074i\u006f\u006eBe\u0068\u0061\u0076i\u006f\u0072\u0020\u0025\u0076", _fbgdg.Name)
				if _eeed := d.Skip(); _eeed != nil {
					return _eeed
				}
			}
		case _b.EndElement:
			break _eedacb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLTimeConditionList and its children
func (_caaeg *CT_TLTimeConditionList) Validate() error {
	return _caaeg.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074")
}

func (_cbbff ST_TLAnimateBehaviorCalcMode) Validate() error { return _cbbff.ValidateWithPath("") }

func (_gccfff *ST_TLOleChartBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgbec, _dddfd := d.Token()
	if _dddfd != nil {
		return _dddfd
	}
	if _cgcfg, _cccaac := _bgbec.(_b.EndElement); _cccaac && _cgcfg.Name == start.Name {
		*_gccfff = 1
		return nil
	}
	if _egceb, _ccdg := _bgbec.(_b.CharData); !_ccdg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgbec)
	} else {
		switch string(_egceb) {
		case "":
			*_gccfff = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_gccfff = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_gccfff = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gccfff = 3
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_gccfff = 4
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_gccfff = 5
		}
	}
	_bgbec, _dddfd = d.Token()
	if _dddfd != nil {
		return _dddfd
	}
	if _adcbc, _adegb := _bgbec.(_b.EndElement); _adegb && _adcbc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgbec)
}

func (_dbccd *CT_TLTimeNodeSequence) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbccd.CTn = NewCT_TLCommonTimeNodeData()
	for _, _cfdab := range start.Attr {
		if _cfdab.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074" {
			_aafgb, _dcfbc := _f.ParseBool(_cfdab.Value)
			if _dcfbc != nil {
				return _dcfbc
			}
			_dbccd.ConcurrentAttr = &_aafgb
			continue
		}
		if _cfdab.Name.Local == "\u0070\u0072\u0065\u0076\u0041\u0063" {
			_dbccd.PrevAcAttr.UnmarshalXMLAttr(_cfdab)
			continue
		}
		if _cfdab.Name.Local == "\u006e\u0065\u0078\u0074\u0041\u0063" {
			_dbccd.NextAcAttr.UnmarshalXMLAttr(_cfdab)
			continue
		}
	}
_fffca:
	for {
		_cfef, _ccdab := d.Token()
		if _ccdab != nil {
			return _ccdab
		}
		switch _fbebg := _cfef.(type) {
		case _b.StartElement:
			switch _fbebg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _agbeg := d.DecodeElement(_dbccd.CTn, &_fbebg); _agbeg != nil {
					return _agbeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_dbccd.PrevCondLst = NewCT_TLTimeConditionList()
				if _geef := d.DecodeElement(_dbccd.PrevCondLst, &_fbebg); _geef != nil {
					return _geef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_dbccd.NextCondLst = NewCT_TLTimeConditionList()
				if _gecbf := d.DecodeElement(_dbccd.NextCondLst, &_fbebg); _gecbf != nil {
					return _gecbf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _fbebg.Name)
				if _edbb := d.Skip(); _edbb != nil {
					return _edbb
				}
			}
		case _b.EndElement:
			break _fffca
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the EG_TopLevelSlide and its children
func (_eefab *EG_TopLevelSlide) Validate() error {
	return _eefab.ValidateWithPath("\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065")
}

// ValidateWithPath validates the CT_TLBuildDiagram and its children, prefixing error messages with path
func (_fgbb *CT_TLBuildDiagram) ValidateWithPath(path string) error {
	if _fceb := _fgbb.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _fceb != nil {
		return _fceb
	}
	return nil
}

func (_geegb ST_TLTriggerEvent) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fcdde := _b.Attr{}
	_fcdde.Name = name
	switch _geegb {
	case ST_TLTriggerEventUnset:
		_fcdde.Value = ""
	case ST_TLTriggerEventOnBegin:
		_fcdde.Value = "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case ST_TLTriggerEventOnEnd:
		_fcdde.Value = "\u006f\u006e\u0045n\u0064"
	case ST_TLTriggerEventBegin:
		_fcdde.Value = "\u0062\u0065\u0067i\u006e"
	case ST_TLTriggerEventEnd:
		_fcdde.Value = "\u0065\u006e\u0064"
	case ST_TLTriggerEventOnClick:
		_fcdde.Value = "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnDblClick:
		_fcdde.Value = "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnMouseOver:
		_fcdde.Value = "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case ST_TLTriggerEventOnMouseOut:
		_fcdde.Value = "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case ST_TLTriggerEventOnNext:
		_fcdde.Value = "\u006f\u006e\u004e\u0065\u0078\u0074"
	case ST_TLTriggerEventOnPrev:
		_fcdde.Value = "\u006f\u006e\u0050\u0072\u0065\u0076"
	case ST_TLTriggerEventOnStopAudio:
		_fcdde.Value = "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return _fcdde, nil
}

func NewCT_IndexRange() *CT_IndexRange { _ecfbd := &CT_IndexRange{}; return _ecfbd }

// ValidateWithPath validates the CT_GuideList and its children, prefixing error messages with path
func (_fddea *CT_GuideList) ValidateWithPath(path string) error {
	for _agaa, _eccgd := range _fddea.Guide {
		if _agea := _eccgd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fG\u0075\u0069\u0064\u0065\u005b\u0025\u0064\u005d", path, _agaa)); _agea != nil {
			return _agea
		}
	}
	return nil
}

func (_beeba ST_TLBehaviorTransformType) Validate() error { return _beeba.ValidateWithPath("") }

func (_cedbg *ST_TLParaBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abfab, _gafdg := d.Token()
	if _gafdg != nil {
		return _gafdg
	}
	if _faaad, _gaaeg := _abfab.(_b.EndElement); _gaaeg && _faaad.Name == start.Name {
		*_cedbg = 1
		return nil
	}
	if _dbcbg, _agfc := _abfab.(_b.CharData); !_agfc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abfab)
	} else {
		switch string(_dbcbg) {
		case "":
			*_cedbg = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_cedbg = 1
		case "\u0070":
			*_cedbg = 2
		case "\u0063\u0075\u0073\u0074":
			*_cedbg = 3
		case "\u0077\u0068\u006fl\u0065":
			*_cedbg = 4
		}
	}
	_abfab, _gafdg = d.Token()
	if _gafdg != nil {
		return _gafdg
	}
	if _cbge, _gabga := _abfab.(_b.EndElement); _gabga && _cbge.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abfab)
}

type ST_PrintColorMode byte

// Validate validates the CT_TLCommonTimeNodeData and its children
func (_bfcg *CT_TLCommonTimeNodeData) Validate() error {
	return _bfcg.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}

type CT_SlideIdListEntry struct {

	// Slide Identifier
	IdAttr  uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

func NewCT_CommonViewProperties() *CT_CommonViewProperties {
	_dgcd := &CT_CommonViewProperties{}
	_dgcd.Scale = _bc.NewCT_Scale2D()
	_dgcd.Origin = _bc.NewCT_Point2D()
	return _dgcd
}

type CT_HandoutMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

type ST_TransitionCornerDirectionType byte

func (_caafd *CT_HandoutMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gegef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_caafd.CSld, _gegef)
	_ccfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_caafd.ClrMap, _ccfa)
	if _caafd.Hf != nil {
		_aedb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_caafd.Hf, _aedb)
	}
	if _caafd.ExtLst != nil {
		_baaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_caafd.ExtLst, _baaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aaagf *CT_ShowInfoKiosk) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aegae := range start.Attr {
		if _aegae.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_effea, _geae := _f.ParseUint(_aegae.Value, 10, 32)
			if _geae != nil {
				return _geae
			}
			_dgbb := uint32(_effea)
			_aaagf.RestartAttr = &_dgbb
			continue
		}
	}
	for {
		_gaag, _gfca := d.Token()
		if _gfca != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077I\u006ef\u006f\u004b\u0069\u006f\u0073\u006b\u003a \u0025\u0073", _gfca)
		}
		if _eaef, _bagba := _gaag.(_b.EndElement); _bagba && _eaef.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ExtensionListModify struct {

	// Modify
	ModAttr *bool

	// Extension
	Ext []*CT_Extension
}

func (_bgaf *CT_BackgroundProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dace := range start.Attr {
		if _dace.Name.Local == "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065" {
			_dcd, _cdgg := _f.ParseBool(_dace.Value)
			if _cdgg != nil {
				return _cdgg
			}
			_bgaf.ShadeToTitleAttr = &_dcd
			continue
		}
	}
_bfd:
	for {
		_ae, _cba := d.Token()
		if _cba != nil {
			return _cba
		}
		switch _bfad := _ae.(type) {
		case _b.StartElement:
			switch _bfad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bgaf.NoFill = _bc.NewCT_NoFillProperties()
				if _bgeb := d.DecodeElement(_bgaf.NoFill, &_bfad); _bgeb != nil {
					return _bgeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bgaf.SolidFill = _bc.NewCT_SolidColorFillProperties()
				if _bd := d.DecodeElement(_bgaf.SolidFill, &_bfad); _bd != nil {
					return _bd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bgaf.GradFill = _bc.NewCT_GradientFillProperties()
				if _acaf := d.DecodeElement(_bgaf.GradFill, &_bfad); _acaf != nil {
					return _acaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bgaf.BlipFill = _bc.NewCT_BlipFillProperties()
				if _bea := d.DecodeElement(_bgaf.BlipFill, &_bfad); _bea != nil {
					return _bea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bgaf.PattFill = _bc.NewCT_PatternFillProperties()
				if _cad := d.DecodeElement(_bgaf.PattFill, &_bfad); _cad != nil {
					return _cad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bgaf.GrpFill = _bc.NewCT_GroupFillProperties()
				if _fbb := d.DecodeElement(_bgaf.GrpFill, &_bfad); _fbb != nil {
					return _fbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_bgaf.EffectLst = _bc.NewCT_EffectList()
				if _dfe := d.DecodeElement(_bgaf.EffectLst, &_bfad); _dfe != nil {
					return _dfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_bgaf.EffectDag = _bc.NewCT_EffectContainer()
				if _beb := d.DecodeElement(_bgaf.EffectDag, &_bfad); _beb != nil {
					return _beb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgaf.ExtLst = NewCT_ExtensionList()
				if _eag := d.DecodeElement(_bgaf.ExtLst, &_bfad); _eag != nil {
					return _eag
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _bfad.Name)
				if _dad := d.Skip(); _dad != nil {
					return _dad
				}
			}
		case _b.EndElement:
			break _bfd
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLTimeConditionList struct {

	// Condition
	Cond []*CT_TLTimeCondition
}

func (_ceffe ST_PhotoAlbumLayout) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ceffe.String(), start)
}

type CT_SlideSize struct {

	// Extent Length
	CxAttr int32

	// Extent Width
	CyAttr int32

	// Type of Size
	TypeAttr ST_SlideSizeType
}

func (_fcg *CT_ConnectorNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcg.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_fcg.CNvCxnSpPr = _bc.NewCT_NonVisualConnectorProperties()
	_fcg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_cgeb:
	for {
		_ecgb, _ccbf := d.Token()
		if _ccbf != nil {
			return _ccbf
		}
		switch _fgab := _ecgb.(type) {
		case _b.StartElement:
			switch _fgab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gaeg := d.DecodeElement(_fcg.CNvPr, &_fgab); _gaeg != nil {
					return _gaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _cce := d.DecodeElement(_fcg.CNvCxnSpPr, &_fgab); _cce != nil {
					return _cce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _agcg := d.DecodeElement(_fcg.NvPr, &_fgab); _agcg != nil {
					return _agcg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _fgab.Name)
				if _gbb := d.Skip(); _gbb != nil {
					return _gbb
				}
			}
		case _b.EndElement:
			break _cgeb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_HtmlPublishProperties and its children
func (_faaf *CT_HtmlPublishProperties) Validate() error {
	return _faaf.ValidateWithPath("\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_geeb *CT_EmbeddedFontListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u006f\u006e\u0074"}}
	e.EncodeElement(_geeb.Font, _dge)
	if _geeb.Regular != nil {
		_ceef := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0072\u0065\u0067\u0075\u006c\u0061r"}}
		e.EncodeElement(_geeb.Regular, _ceef)
	}
	if _geeb.Bold != nil {
		_bagb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006f\u006c\u0064"}}
		e.EncodeElement(_geeb.Bold, _bagb)
	}
	if _geeb.Italic != nil {
		_fba := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0069\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_geeb.Italic, _fba)
	}
	if _geeb.BoldItalic != nil {
		_efbf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062o\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_geeb.BoldItalic, _efbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideLayoutIdList and its children, prefixing error messages with path
func (_cebd *CT_SlideLayoutIdList) ValidateWithPath(path string) error {
	for _ddeba, _deeag := range _cebd.SldLayoutId {
		if _gegc := _deeag.ValidateWithPath(_fd.Sprintf("\u0025s\u002fS\u006c\u0064\u004c\u0061\u0079o\u0075\u0074I\u0064\u005b\u0025\u0064\u005d", path, _ddeba)); _gegc != nil {
			return _gegc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommonTimeNodeData and its children, prefixing error messages with path
func (_ccfcc *CT_TLCommonTimeNodeData) ValidateWithPath(path string) error {
	if _dgddd := _ccfcc.PresetClassAttr.ValidateWithPath(path + "\u002f\u0050r\u0065\u0073\u0065t\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _dgddd != nil {
		return _dgddd
	}
	if _ccfcc.DurAttr != nil {
		if _gdeca := _ccfcc.DurAttr.ValidateWithPath(path + "\u002f\u0044\u0075\u0072\u0041\u0074\u0074\u0072"); _gdeca != nil {
			return _gdeca
		}
	}
	if _ccfcc.RepeatCountAttr != nil {
		if _febgd := _ccfcc.RepeatCountAttr.ValidateWithPath(path + "\u002f\u0052e\u0070\u0065\u0061t\u0043\u006f\u0075\u006e\u0074\u0041\u0074\u0074\u0072"); _febgd != nil {
			return _febgd
		}
	}
	if _ccfcc.RepeatDurAttr != nil {
		if _begegf := _ccfcc.RepeatDurAttr.ValidateWithPath(path + "\u002f\u0052\u0065\u0070\u0065\u0061\u0074\u0044\u0075r\u0041\u0074\u0074\u0072"); _begegf != nil {
			return _begegf
		}
	}
	if _ccfcc.SpdAttr != nil {
		if _acfga := _ccfcc.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _acfga != nil {
			return _acfga
		}
	}
	if _ccfcc.AccelAttr != nil {
		if _afef := _ccfcc.AccelAttr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _afef != nil {
			return _afef
		}
	}
	if _ccfcc.DecelAttr != nil {
		if _bbcff := _ccfcc.DecelAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _bbcff != nil {
			return _bbcff
		}
	}
	if _adbe := _ccfcc.RestartAttr.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u0061\u0072\u0074\u0041\u0074\u0074\u0072"); _adbe != nil {
		return _adbe
	}
	if _bdcb := _ccfcc.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _bdcb != nil {
		return _bdcb
	}
	if _ffbfc := _ccfcc.SyncBehaviorAttr.ValidateWithPath(path + "\u002f\u0053\u0079\u006e\u0063\u0042\u0065\u0068\u0061\u0076\u0069\u006fr\u0041\u0074\u0074\u0072"); _ffbfc != nil {
		return _ffbfc
	}
	if _bceef := _ccfcc.MasterRelAttr.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0052\u0065l\u0041\u0074\u0074\u0072"); _bceef != nil {
		return _bceef
	}
	if _dgfgf := _ccfcc.NodeTypeAttr.ValidateWithPath(path + "\u002f\u004e\u006f\u0064\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _dgfgf != nil {
		return _dgfgf
	}
	if _ccfcc.StCondLst != nil {
		if _bdcdf := _ccfcc.StCondLst.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _bdcdf != nil {
			return _bdcdf
		}
	}
	if _ccfcc.EndCondLst != nil {
		if _bfdaa := _ccfcc.EndCondLst.ValidateWithPath(path + "/\u0045\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _bfdaa != nil {
			return _bfdaa
		}
	}
	if _ccfcc.EndSync != nil {
		if _ebaef := _ccfcc.EndSync.ValidateWithPath(path + "\u002f\u0045\u006e\u0064\u0053\u0079\u006e\u0063"); _ebaef != nil {
			return _ebaef
		}
	}
	if _ccfcc.Iterate != nil {
		if _baad := _ccfcc.Iterate.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u0072\u0061\u0074\u0065"); _baad != nil {
			return _baad
		}
	}
	if _ccfcc.ChildTnLst != nil {
		if _cafaf := _ccfcc.ChildTnLst.ValidateWithPath(path + "/\u0043\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"); _cafaf != nil {
			return _cafaf
		}
	}
	if _ccfcc.SubTnLst != nil {
		if _bgggb := _ccfcc.SubTnLst.ValidateWithPath(path + "\u002fS\u0075\u0062\u0054\u006e\u004c\u0073t"); _bgggb != nil {
			return _bgggb
		}
	}
	return nil
}

func (_dadad ST_TLAnimateMotionPathEditMode) ValidateWithPath(path string) error {
	switch _dadad {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dadad))
	}
	return nil
}

func (_efbb *CT_SideDirectionTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efbb.DirAttr != ST_TransitionSideDirectionTypeUnset {
		_cefe, _bfgga := _efbb.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _bfgga != nil {
			return _bfgga
		}
		start.Attr = append(start.Attr, _cefe)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_daaaef ST_SlideSizeType) String() string {
	switch _daaaef {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case 2:
		return "\u006c\u0065\u0074\u0074\u0065\u0072"
	case 3:
		return "\u0041\u0034"
	case 4:
		return "\u0033\u0035\u006d\u006d"
	case 5:
		return "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case 6:
		return "\u0062\u0061\u006e\u006e\u0065\u0072"
	case 7:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	case 8:
		return "\u006c\u0065\u0064\u0067\u0065\u0072"
	case 9:
		return "\u0041\u0033"
	case 10:
		return "\u0042\u0034\u0049S\u004f"
	case 11:
		return "\u0042\u0035\u0049S\u004f"
	case 12:
		return "\u0042\u0034\u004aI\u0053"
	case 13:
		return "\u0042\u0035\u004aI\u0053"
	case 14:
		return "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case 15:
		return "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case 16:
		return "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return ""
}

type CT_Shape struct {

	// Use Background Fill
	UseBgFillAttr *bool

	// Non-Visual Properties for a Shape
	NvSpPr *CT_ShapeNonVisual
	SpPr   *_bc.CT_ShapeProperties

	// Shape Style
	Style *_bc.CT_ShapeStyle

	// Shape Text Body
	TxBody *_bc.CT_TextBody
	ExtLst *CT_ExtensionListModify
}

func (_fdcb ST_TLAnimateColorSpace) Validate() error { return _fdcb.ValidateWithPath("") }

func NewEG_TopLevelSlide() *EG_TopLevelSlide {
	_gdega := &EG_TopLevelSlide{}
	_gdega.ClrMap = _bc.NewCT_ColorMapping()
	return _gdega
}

func (_ddfc *CT_NotesMasterIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ddfc.NotesMasterId != nil {
		_bded := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_ddfc.NotesMasterId, _bded)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Background struct {

	// Black and White Mode
	BwModeAttr _bc.ST_BlackWhiteMode

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_bc.CT_StyleMatrixReference
}

func (_acaed ST_TLAnimateColorDirection) Validate() error { return _acaed.ValidateWithPath("") }

func (_bfc *CT_InOutTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbbd := range start.Attr {
		if _gbbd.Name.Local == "\u0064\u0069\u0072" {
			_bfc.DirAttr.UnmarshalXMLAttr(_gbbd)
			continue
		}
	}
	for {
		_aadd, _dcgf := d.Token()
		if _dcgf != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0049\u006e\u004f\u0075\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _dcgf)
		}
		if _aegc, _gbgc := _aadd.(_b.EndElement); _gbgc && _aegc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aefba *CT_SlideTiming) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_facb:
	for {
		_afadg, _befb := d.Token()
		if _befb != nil {
			return _befb
		}
		switch _gaaeaf := _afadg.(type) {
		case _b.StartElement:
			switch _gaaeaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				_aefba.TnLst = NewCT_TimeNodeList()
				if _eeeb := d.DecodeElement(_aefba.TnLst, &_gaaeaf); _eeeb != nil {
					return _eeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}:
				_aefba.BldLst = NewCT_BuildList()
				if _ggddg := d.DecodeElement(_aefba.BldLst, &_gaaeaf); _ggddg != nil {
					return _ggddg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aefba.ExtLst = NewCT_ExtensionListModify()
				if _cfdaf := d.DecodeElement(_aefba.ExtLst, &_gaaeaf); _cfdaf != nil {
					return _cfdaf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0069m\u0069n\u0067\u0020\u0025\u0076", _gaaeaf.Name)
				if _bccbg := d.Skip(); _bccbg != nil {
					return _bccbg
				}
			}
		case _b.EndElement:
			break _facb
		case _b.CharData:
		}
	}
	return nil
}

func (_bdagb *CT_SlideLayoutIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bdagb.SldLayoutId != nil {
		_acaa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}}
		for _, _fgcaa := range _bdagb.SldLayoutId {
			e.EncodeElement(_fgcaa, _acaa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Presentation and its children, prefixing error messages with path
func (_dbfff *Presentation) ValidateWithPath(path string) error {
	if _gcbfg := _dbfff.CT_Presentation.ValidateWithPath(path); _gcbfg != nil {
		return _gcbfg
	}
	return nil
}

func (_gdcg *ST_TLTimeNodeFillType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_befgf, _eeeec := d.Token()
	if _eeeec != nil {
		return _eeeec
	}
	if _ffde, _abfbd := _befgf.(_b.EndElement); _abfbd && _ffde.Name == start.Name {
		*_gdcg = 1
		return nil
	}
	if _dfedaaa, _aefefb := _befgf.(_b.CharData); !_aefefb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _befgf)
	} else {
		switch string(_dfedaaa) {
		case "":
			*_gdcg = 0
		case "\u0072\u0065\u006d\u006f\u0076\u0065":
			*_gdcg = 1
		case "\u0066\u0072\u0065\u0065\u007a\u0065":
			*_gdcg = 2
		case "\u0068\u006f\u006c\u0064":
			*_gdcg = 3
		case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
			*_gdcg = 4
		}
	}
	_befgf, _eeeec = d.Token()
	if _eeeec != nil {
		return _eeeec
	}
	if _cbdf, _fafdf := _befgf.(_b.EndElement); _fafdf && _cbdf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _befgf)
}

// Validate validates the CT_InOutTransition and its children
func (_cacg *CT_InOutTransition) Validate() error {
	return _cacg.ValidateWithPath("\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

func (_faabe ST_PlaceholderSize) Validate() error { return _faabe.ValidateWithPath("") }

// ValidateWithPath validates the CT_CommentAuthor and its children, prefixing error messages with path
func (_cagf *CT_CommentAuthor) ValidateWithPath(path string) error {
	if _cagf.ExtLst != nil {
		if _gdge := _cagf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdge != nil {
			return _gdge
		}
	}
	return nil
}

func (_egfda ST_TLAnimateEffectTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egfda.String(), start)
}

// ValidateWithPath validates the CT_OrientationTransition and its children, prefixing error messages with path
func (_eddac *CT_OrientationTransition) ValidateWithPath(path string) error {
	if _eaaf := _eddac.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _eaaf != nil {
		return _eaaf
	}
	return nil
}

func (_cccfg *ST_PlaceholderSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddcgd, _dgebgd := d.Token()
	if _dgebgd != nil {
		return _dgebgd
	}
	if _dbbee, _acceg := _ddcgd.(_b.EndElement); _acceg && _dbbee.Name == start.Name {
		*_cccfg = 1
		return nil
	}
	if _bgbg, _cgbd := _ddcgd.(_b.CharData); !_cgbd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddcgd)
	} else {
		switch string(_bgbg) {
		case "":
			*_cccfg = 0
		case "\u0066\u0075\u006c\u006c":
			*_cccfg = 1
		case "\u0068\u0061\u006c\u0066":
			*_cccfg = 2
		case "\u0071u\u0061\u0072\u0074\u0065\u0072":
			*_cccfg = 3
		}
	}
	_ddcgd, _dgebgd = d.Token()
	if _dgebgd != nil {
		return _dgebgd
	}
	if _bbgdf, _dfcfc := _ddcgd.(_b.EndElement); _dfcfc && _bbgdf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddcgd)
}

func (_ddag *CT_HandoutMasterIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ddag.IdAttr)})
	e.EncodeToken(start)
	if _ddag.ExtLst != nil {
		_cbbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ddag.ExtLst, _cbbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLCommonBehaviorData and its children, prefixing error messages with path
func (_fbbe *CT_TLCommonBehaviorData) ValidateWithPath(path string) error {
	if _beac := _fbbe.AdditiveAttr.ValidateWithPath(path + "\u002f\u0041\u0064\u0064\u0069\u0074\u0069\u0076\u0065\u0041\u0074\u0074\u0072"); _beac != nil {
		return _beac
	}
	if _ecbb := _fbbe.AccumulateAttr.ValidateWithPath(path + "\u002fA\u0063c\u0075\u006d\u0075\u006c\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _ecbb != nil {
		return _ecbb
	}
	if _gbecc := _fbbe.XfrmTypeAttr.ValidateWithPath(path + "\u002f\u0058\u0066\u0072\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _gbecc != nil {
		return _gbecc
	}
	if _befcg := _fbbe.OverrideAttr.ValidateWithPath(path + "\u002f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0041\u0074\u0074\u0072"); _befcg != nil {
		return _befcg
	}
	if _afbeg := _fbbe.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _afbeg != nil {
		return _afbeg
	}
	if _feecd := _fbbe.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _feecd != nil {
		return _feecd
	}
	if _fbbe.AttrNameLst != nil {
		if _gbgg := _fbbe.AttrNameLst.ValidateWithPath(path + "\u002f\u0041\u0074t\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"); _gbgg != nil {
			return _gbgg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommonSlideData and its children, prefixing error messages with path
func (_eagd *CT_CommonSlideData) ValidateWithPath(path string) error {
	if _eagd.Bg != nil {
		if _gad := _eagd.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _gad != nil {
			return _gad
		}
	}
	if _bgef := _eagd.SpTree.ValidateWithPath(path + "\u002fS\u0070\u0054\u0072\u0065\u0065"); _bgef != nil {
		return _bgef
	}
	if _eagd.CustDataLst != nil {
		if _eebf := _eagd.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _eebf != nil {
			return _eebf
		}
	}
	if _eagd.Controls != nil {
		if _gcf := _eagd.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _gcf != nil {
			return _gcf
		}
	}
	if _eagd.ExtLst != nil {
		if _dff := _eagd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dff != nil {
			return _dff
		}
	}
	return nil
}

func (_gcbdf *ST_TLOleChartBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcbdf = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_gcbdf = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_gcbdf = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_gcbdf = 3
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_gcbdf = 4
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_gcbdf = 5
	}
	return nil
}

func (_gcaac *CT_TLTriggerRuntimeNode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_acfdc, _bgbbd := _gcaac.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _bgbbd != nil {
		return _bgbbd
	}
	start.Attr = append(start.Attr, _acfdc)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideSorterViewProperties and its children, prefixing error messages with path
func (_gdaaa *CT_SlideSorterViewProperties) ValidateWithPath(path string) error {
	if _adgg := _gdaaa.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _adgg != nil {
		return _adgg
	}
	if _gdaaa.ExtLst != nil {
		if _ceeda := _gdaaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceeda != nil {
			return _ceeda
		}
	}
	return nil
}

func (_abgea ST_TLNextActionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_edgd := _b.Attr{}
	_edgd.Name = name
	switch _abgea {
	case ST_TLNextActionTypeUnset:
		_edgd.Value = ""
	case ST_TLNextActionTypeNone:
		_edgd.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLNextActionTypeSeek:
		_edgd.Value = "\u0073\u0065\u0065\u006b"
	}
	return _edgd, nil
}

func (_adcbf ST_TLAnimateColorSpace) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_caeb := _b.Attr{}
	_caeb.Name = name
	switch _adcbf {
	case ST_TLAnimateColorSpaceUnset:
		_caeb.Value = ""
	case ST_TLAnimateColorSpaceRgb:
		_caeb.Value = "\u0072\u0067\u0062"
	case ST_TLAnimateColorSpaceHsl:
		_caeb.Value = "\u0068\u0073\u006c"
	}
	return _caeb, nil
}

type CT_HandoutMaster struct {

	// Common slide data for handout master
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_bc.CT_ColorMapping

	// Header/Footer information for a handout master
	Hf     *CT_HeaderFooter
	ExtLst *CT_ExtensionListModify
}

func (_bff *CT_ControlList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bff.Control != nil {
		_ebb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u006f\u006e\u0074\u0072\u006fl"}}
		for _, _beg := range _bff.Control {
			e.EncodeElement(_beg, _ebb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GuideList and its children
func (_ecec *CT_GuideList) Validate() error {
	return _ecec.ValidateWithPath("\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

func (_baac *CT_TLAnimateScaleBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_baac.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _gdgd := range start.Attr {
		if _gdgd.Name.Local == "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_egcd, _acbbe := _f.ParseBool(_gdgd.Value)
			if _acbbe != nil {
				return _acbbe
			}
			_baac.ZoomContentsAttr = &_egcd
			continue
		}
	}
_dcfa:
	for {
		_gggf, _cgace := d.Token()
		if _cgace != nil {
			return _cgace
		}
		switch _fbfb := _gggf.(type) {
		case _b.StartElement:
			switch _fbfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _badbg := d.DecodeElement(_baac.CBhvr, &_fbfb); _badbg != nil {
					return _badbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_baac.By = NewCT_TLPoint()
				if _bfga := d.DecodeElement(_baac.By, &_fbfb); _bfga != nil {
					return _bfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_baac.From = NewCT_TLPoint()
				if _fffb := d.DecodeElement(_baac.From, &_fbfb); _fffb != nil {
					return _fffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_baac.To = NewCT_TLPoint()
				if _agdaa := d.DecodeElement(_baac.To, &_fbfb); _agdaa != nil {
					return _agdaa
				}
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0053c\u0061\u006c\u0065\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _fbfb.Name)
				if _eegec := d.Skip(); _eegec != nil {
					return _eegec
				}
			}
		case _b.EndElement:
			break _dcfa
		case _b.CharData:
		}
	}
	return nil
}

func (_cdcf ST_IterateType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcfbd := _b.Attr{}
	_bcfbd.Name = name
	switch _cdcf {
	case ST_IterateTypeUnset:
		_bcfbd.Value = ""
	case ST_IterateTypeEl:
		_bcfbd.Value = "\u0065\u006c"
	case ST_IterateTypeWd:
		_bcfbd.Value = "\u0077\u0064"
	case ST_IterateTypeLt:
		_bcfbd.Value = "\u006c\u0074"
	}
	return _bcfbd, nil
}

func (_fgbf *CT_IndexRange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbaa := range start.Attr {
		if _bbaa.Name.Local == "\u0073\u0074" {
			_fcbbf, _cdca := _f.ParseUint(_bbaa.Value, 10, 32)
			if _cdca != nil {
				return _cdca
			}
			_fgbf.StAttr = uint32(_fcbbf)
			continue
		}
		if _bbaa.Name.Local == "\u0065\u006e\u0064" {
			_gfdg, _bbgb := _f.ParseUint(_bbaa.Value, 10, 32)
			if _bbgb != nil {
				return _bbgb
			}
			_fgbf.EndAttr = uint32(_gfdg)
			continue
		}
	}
	for {
		_cbfgd, _gfg := d.Token()
		if _gfg != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0064e\u0078R\u0061\u006e\u0067\u0065\u003a\u0020\u0025s", _gfg)
		}
		if _aeae, _aaag := _cbfgd.(_b.EndElement); _aaag && _aeae.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TLPoint struct {

	// X coordinate
	XAttr _bc.ST_Percentage

	// Y coordinate
	YAttr _bc.ST_Percentage
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_edaec *CT_SmartTags) ValidateWithPath(path string) error { return nil }

func NewCT_CustomShowList() *CT_CustomShowList { _effg := &CT_CustomShowList{}; return _effg }

func (_eafce *CT_ShowInfoBrowse) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eafce.ShowScrollbarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_eafce.ShowScrollbarAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OrientationTransition and its children
func (_ccbgfc *CT_OrientationTransition) Validate() error {
	return _ccbgfc.ValidateWithPath("\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e")
}

func NewCT_TLAnimateMotionBehavior() *CT_TLAnimateMotionBehavior {
	_egbdf := &CT_TLAnimateMotionBehavior{}
	_egbdf.CBhvr = NewCT_TLCommonBehaviorData()
	return _egbdf
}

func (_bdabd *CT_PictureNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdabd.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_bdabd.CNvPicPr = _bc.NewCT_NonVisualPictureProperties()
	_bdabd.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_bbgc:
	for {
		_ffca, _bbeb := d.Token()
		if _bbeb != nil {
			return _bbeb
		}
		switch _afad := _ffca.(type) {
		case _b.StartElement:
			switch _afad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gbdbbg := d.DecodeElement(_bdabd.CNvPr, &_afad); _gbdbbg != nil {
					return _gbdbbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _dacgbc := d.DecodeElement(_bdabd.CNvPicPr, &_afad); _dacgbc != nil {
					return _dacgbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _bcea := d.DecodeElement(_bdabd.NvPr, &_afad); _bcea != nil {
					return _bcea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _afad.Name)
				if _bcec := d.Skip(); _bcec != nil {
					return _bcec
				}
			}
		case _b.EndElement:
			break _bbgc
		case _b.CharData:
		}
	}
	return nil
}

func (_dbac *CT_WheelTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbac.SpokesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006f\u006b\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_dbac.SpokesAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_ViewType byte

func (_dfff *CT_SideDirectionTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcffa := range start.Attr {
		if _dcffa.Name.Local == "\u0064\u0069\u0072" {
			_dfff.DirAttr.UnmarshalXMLAttr(_dcffa)
			continue
		}
	}
	for {
		_bcfg, _aceeb := d.Token()
		if _aceeb != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _aceeb)
		}
		if _fffc, _baed := _bcfg.(_b.EndElement); _baed && _fffc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_befg *CT_GroupShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_befg.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_befg.CNvGrpSpPr = _bc.NewCT_NonVisualGroupDrawingShapeProps()
	_befg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_facf:
	for {
		_eegc, _bdbd := d.Token()
		if _bdbd != nil {
			return _bdbd
		}
		switch _ccfbe := _eegc.(type) {
		case _b.StartElement:
			switch _ccfbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _eegeb := d.DecodeElement(_befg.CNvPr, &_ccfbe); _eegeb != nil {
					return _eegeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _dgff := d.DecodeElement(_befg.CNvGrpSpPr, &_ccfbe); _dgff != nil {
					return _dgff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _dde := d.DecodeElement(_befg.NvPr, &_ccfbe); _dde != nil {
					return _dde
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ccfbe.Name)
				if _cafc := d.Skip(); _cafc != nil {
					return _cafc
				}
			}
		case _b.EndElement:
			break _facf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_NotesMasterIdList() *CT_NotesMasterIdList { _bggd := &CT_NotesMasterIdList{}; return _bggd }

func NewCT_CustomShowId() *CT_CustomShowId { _fdgf := &CT_CustomShowId{}; return _fdgf }

func (_aegf *CT_TLAnimVariant) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aegf.BoolVal != nil {
		_gcead := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0062\u006f\u006f\u006c\u0056\u0061l"}}
		e.EncodeElement(_aegf.BoolVal, _gcead)
	}
	if _aegf.IntVal != nil {
		_gbge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0069\u006e\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_aegf.IntVal, _gbge)
	}
	if _aegf.FltVal != nil {
		_cgdge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u006c\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_aegf.FltVal, _cgdge)
	}
	if _aegf.StrVal != nil {
		_dgec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_aegf.StrVal, _dgec)
	}
	if _aegf.ClrVal != nil {
		_adbfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_aegf.ClrVal, _adbfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gadgg ST_TLTimeIndefinite) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dcaea := _b.Attr{}
	_dcaea.Name = name
	switch _gadgg {
	case ST_TLTimeIndefiniteUnset:
		_dcaea.Value = ""
	case ST_TLTimeIndefiniteIndefinite:
		_dcaea.Value = "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return _dcaea, nil
}

// ValidateWithPath validates the CT_SlideMasterIdList and its children, prefixing error messages with path
func (_cebg *CT_SlideMasterIdList) ValidateWithPath(path string) error {
	for _cgfbb, _bfgb := range _cebg.SldMasterId {
		if _adba := _bfgb.ValidateWithPath(_fd.Sprintf("\u0025s\u002fS\u006c\u0064\u004d\u0061\u0073t\u0065\u0072I\u0064\u005b\u0025\u0064\u005d", path, _cgfbb)); _adba != nil {
			return _adba
		}
	}
	return nil
}

func (_adgac ST_OleObjectFollowColorScheme) String() string {
	switch _adgac {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0066\u0075\u006c\u006c"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return ""
}

func (_abfge *CT_TLCommandBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abfge.TypeAttr != ST_TLCommandTypeUnset {
		_adgcf, _ebafag := _abfge.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ebafag != nil {
			return _ebafag
		}
		start.Attr = append(start.Attr, _adgcf)
	}
	if _abfge.CmdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006d\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_abfge.CmdAttr)})
	}
	e.EncodeToken(start)
	_ebeb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_abfge.CBhvr, _ebeb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_eggc *CT_Kinsoku) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eggc.LangAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0076", *_eggc.LangAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0076", _eggc.InvalStCharsAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0076", _eggc.InvalEndCharsAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_afdd *EG_TopLevelSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_gcdbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_afdd.ClrMap, _gcdbb)
	return nil
}

func (_abbfd ST_TLAnimateBehaviorCalcMode) String() string {
	switch _abbfd {
	case 0:
		return ""
	case 1:
		return "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case 2:
		return "\u006c\u0069\u006e"
	case 3:
		return "\u0066\u006d\u006c\u0061"
	}
	return ""
}

func NewCT_SlideMasterTextStyles() *CT_SlideMasterTextStyles {
	_fbcca := &CT_SlideMasterTextStyles{}
	return _fbcca
}

func (_baceb *CT_TLTextTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fdggg:
	for {
		_feaga, _ebefg := d.Token()
		if _ebefg != nil {
			return _ebefg
		}
		switch _bebe := _feaga.(type) {
		case _b.StartElement:
			switch _bebe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}:
				_baceb.CharRg = NewCT_IndexRange()
				if _abdgf := d.DecodeElement(_baceb.CharRg, &_bebe); _abdgf != nil {
					return _abdgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0052\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0052\u0067"}:
				_baceb.PRg = NewCT_IndexRange()
				if _dfee := d.DecodeElement(_baceb.PRg, &_bebe); _dfee != nil {
					return _dfee
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0065x\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _bebe.Name)
				if _dbefe := d.Skip(); _dbefe != nil {
					return _dbefe
				}
			}
		case _b.EndElement:
			break _fdggg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_NotesMaster and its children
func (_faac *CT_NotesMaster) Validate() error {
	return _faac.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072")
}

func (_fecdd ST_TLTimeNodePresetClassType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aaagb := _b.Attr{}
	_aaagb.Name = name
	switch _fecdd {
	case ST_TLTimeNodePresetClassTypeUnset:
		_aaagb.Value = ""
	case ST_TLTimeNodePresetClassTypeEntr:
		_aaagb.Value = "\u0065\u006e\u0074\u0072"
	case ST_TLTimeNodePresetClassTypeExit:
		_aaagb.Value = "\u0065\u0078\u0069\u0074"
	case ST_TLTimeNodePresetClassTypeEmph:
		_aaagb.Value = "\u0065\u006d\u0070\u0068"
	case ST_TLTimeNodePresetClassTypePath:
		_aaagb.Value = "\u0070\u0061\u0074\u0068"
	case ST_TLTimeNodePresetClassTypeVerb:
		_aaagb.Value = "\u0076\u0065\u0072\u0062"
	case ST_TLTimeNodePresetClassTypeMediacall:
		_aaagb.Value = "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return _aaagb, nil
}

type AG_TLBuild struct {
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_aegcf ST_TLTimeNodeMasterRelation) ValidateWithPath(path string) error {
	switch _aegcf {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aegcf))
	}
	return nil
}

func (_bcfeb *ST_SlideLayoutType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcbdb, _cagbgf := d.Token()
	if _cagbgf != nil {
		return _cagbgf
	}
	if _gccad, _gbefe := _dcbdb.(_b.EndElement); _gbefe && _gccad.Name == start.Name {
		*_bcfeb = 1
		return nil
	}
	if _acged, _ebcbd := _dcbdb.(_b.CharData); !_ebcbd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcbdb)
	} else {
		switch string(_acged) {
		case "":
			*_bcfeb = 0
		case "\u0074\u0069\u0074l\u0065":
			*_bcfeb = 1
		case "\u0074\u0078":
			*_bcfeb = 2
		case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
			*_bcfeb = 3
		case "\u0074\u0062\u006c":
			*_bcfeb = 4
		case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
			*_bcfeb = 5
		case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_bcfeb = 6
		case "\u0064\u0067\u006d":
			*_bcfeb = 7
		case "\u0063\u0068\u0061r\u0074":
			*_bcfeb = 8
		case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
			*_bcfeb = 9
		case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_bcfeb = 10
		case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
			*_bcfeb = 11
		case "\u0062\u006c\u0061n\u006b":
			*_bcfeb = 12
		case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
			*_bcfeb = 13
		case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_bcfeb = 14
		case "\u006fb\u006a\u004f\u006e\u006c\u0079":
			*_bcfeb = 15
		case "\u006f\u0062\u006a":
			*_bcfeb = 16
		case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
			*_bcfeb = 17
		case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
			*_bcfeb = 18
		case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
			*_bcfeb = 19
		case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
			*_bcfeb = 20
		case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_bcfeb = 21
		case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_bcfeb = 22
		case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
			*_bcfeb = 23
		case "\u0066o\u0075\u0072\u004f\u0062\u006a":
			*_bcfeb = 24
		case "\u0076\u0065\u0072\u0074\u0054\u0078":
			*_bcfeb = 25
		case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
			*_bcfeb = 26
		case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
			*_bcfeb = 27
		case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
			*_bcfeb = 28
		case "\u0074\u0077\u006f\u004f\u0062\u006a":
			*_bcfeb = 29
		case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_bcfeb = 30
		case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
			*_bcfeb = 31
		case "\u0063\u0075\u0073\u0074":
			*_bcfeb = 32
		case "\u0073e\u0063\u0048\u0065\u0061\u0064":
			*_bcfeb = 33
		case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
			*_bcfeb = 34
		case "\u006f\u0062\u006aT\u0078":
			*_bcfeb = 35
		case "\u0070\u0069\u0063T\u0078":
			*_bcfeb = 36
		}
	}
	_dcbdb, _cagbgf = d.Token()
	if _cagbgf != nil {
		return _cagbgf
	}
	if _ffbbd, _fbdcef := _dcbdb.(_b.EndElement); _fbdcef && _ffbbd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcbdb)
}

// Validate validates the CT_SlideMaster and its children
func (_cdfb *CT_SlideMaster) Validate() error {
	return _cdfb.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072")
}

func NewCT_TagsData() *CT_TagsData { _fffcd := &CT_TagsData{}; return _fffcd }

// Validate validates the CT_TLTimeAnimateValue and its children
func (_deaga *CT_TLTimeAnimateValue) Validate() error {
	return _deaga.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065")
}

func (_ffecbf ST_TLAnimateMotionBehaviorOrigin) String() string {
	switch _ffecbf {
	case 0:
		return ""
	case 1:
		return "\u0070\u0061\u0072\u0065\u006e\u0074"
	case 2:
		return "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}

func (_eaafg ST_TransitionSideDirectionType) ValidateWithPath(path string) error {
	switch _eaafg {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaafg))
	}
	return nil
}

const (
	ST_TransitionCornerDirectionTypeUnset ST_TransitionCornerDirectionType = 0
	ST_TransitionCornerDirectionTypeLu    ST_TransitionCornerDirectionType = 1
	ST_TransitionCornerDirectionTypeRu    ST_TransitionCornerDirectionType = 2
	ST_TransitionCornerDirectionTypeLd    ST_TransitionCornerDirectionType = 3
	ST_TransitionCornerDirectionTypeRd    ST_TransitionCornerDirectionType = 4
)

func (_cdecga ST_WebColorType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egab := _b.Attr{}
	_egab.Name = name
	switch _cdecga {
	case ST_WebColorTypeUnset:
		_egab.Value = ""
	case ST_WebColorTypeNone:
		_egab.Value = "\u006e\u006f\u006e\u0065"
	case ST_WebColorTypeBrowser:
		_egab.Value = "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case ST_WebColorTypePresentationText:
		_egab.Value = "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_WebColorTypePresentationAccent:
		_egab.Value = "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case ST_WebColorTypeWhiteTextOnBlack:
		_egab.Value = "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case ST_WebColorTypeBlackTextOnWhite:
		_egab.Value = "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return _egab, nil
}

func (_dbbd *CT_TLCommonMediaNodeData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbbd.CTn = NewCT_TLCommonTimeNodeData()
	_dbbd.TgtEl = NewCT_TLTimeTargetElement()
	for _, _efbc := range start.Attr {
		if _efbc.Name.Local == "\u0076\u006f\u006c" {
			_abbbd, _bcgcf := ParseUnionST_PositiveFixedPercentage(_efbc.Value)
			if _bcgcf != nil {
				return _bcgcf
			}
			_dbbd.VolAttr = &_abbbd
			continue
		}
		if _efbc.Name.Local == "\u006d\u0075\u0074\u0065" {
			_cacgd, _efgdb := _f.ParseBool(_efbc.Value)
			if _efgdb != nil {
				return _efgdb
			}
			_dbbd.MuteAttr = &_cacgd
			continue
		}
		if _efbc.Name.Local == "\u006e\u0075\u006d\u0053\u006c\u0064" {
			_aaef, _cgef := _f.ParseUint(_efbc.Value, 10, 32)
			if _cgef != nil {
				return _cgef
			}
			_gffaf := uint32(_aaef)
			_dbbd.NumSldAttr = &_gffaf
			continue
		}
		if _efbc.Name.Local == "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064" {
			_cccdb, _ffbcbd := _f.ParseBool(_efbc.Value)
			if _ffbcbd != nil {
				return _ffbcbd
			}
			_dbbd.ShowWhenStoppedAttr = &_cccdb
			continue
		}
	}
_gafef:
	for {
		_agdfg, _fdddb := d.Token()
		if _fdddb != nil {
			return _fdddb
		}
		switch _ccfde := _agdfg.(type) {
		case _b.StartElement:
			switch _ccfde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _bacg := d.DecodeElement(_dbbd.CTn, &_ccfde); _bacg != nil {
					return _bacg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _bdea := d.DecodeElement(_dbbd.TgtEl, &_ccfde); _bdea != nil {
					return _bdea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064e\u0044\u0061\u0074\u0061\u0020%\u0076", _ccfde.Name)
				if _deaa := d.Skip(); _deaa != nil {
					return _deaa
				}
			}
		case _b.EndElement:
			break _gafef
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TLMediaNodeAudio() *CT_TLMediaNodeAudio {
	_ddgg := &CT_TLMediaNodeAudio{}
	_ddgg.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _ddgg
}

func (_bbgbf *ST_TLTimeNodeRestartType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bbgbf = 0
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_bbgbf = 1
	case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
		*_bbgbf = 2
	case "\u006e\u0065\u0076e\u0072":
		*_bbgbf = 3
	}
	return nil
}

// Validate validates the CT_TLByHslColorTransform and its children
func (_eeeba *CT_TLByHslColorTransform) Validate() error {
	return _eeeba.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

func (_gae *AG_Ole) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gae.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gae.SpidAttr)})
	}
	if _gae.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gae.NameAttr)})
	}
	if _gae.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gae.ShowAsIconAttr))})
	}
	if _gae.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gae.IdAttr)})
	}
	if _gae.ImgWAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _fd.Sprintf("\u0025\u0076", *_gae.ImgWAttr)})
	}
	if _gae.ImgHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _fd.Sprintf("\u0025\u0076", *_gae.ImgHAttr)})
	}
	return nil
}

func NewCT_ControlList() *CT_ControlList { _cbec := &CT_ControlList{}; return _cbec }

func (_cdec *CT_HeaderFooter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdec.SldNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006c\u0064\u004e\u0075\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_cdec.SldNumAttr))})
	}
	if _cdec.HdrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0064\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_cdec.HdrAttr))})
	}
	if _cdec.FtrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0074\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_cdec.FtrAttr))})
	}
	if _cdec.DtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_cdec.DtAttr))})
	}
	e.EncodeToken(start)
	if _cdec.ExtLst != nil {
		_bcg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdec.ExtLst, _bcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_ShowInfoKiosk() *CT_ShowInfoKiosk { _facg := &CT_ShowInfoKiosk{}; return _facg }

func (_cfbc *CT_TagList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cfbc.Tag != nil {
		_gadad := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074a\u0067"}}
		for _, _bdfdae := range _cfbc.Tag {
			e.EncodeElement(_bdfdae, _gadad)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ffdedg ST_WebScreenSize) String() string {
	switch _ffdedg {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

// Validate validates the CT_OutlineViewSlideList and its children
func (_cgdbc *CT_OutlineViewSlideList) Validate() error {
	return _cgdbc.ValidateWithPath("\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

func (_baeg ST_Direction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_baeg.String(), start)
}

func (_eggf ST_TransitionSpeed) String() string {
	switch _eggf {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u006f\u0077"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u0066\u0061\u0073\u0074"
	}
	return ""
}

func (_fcgg ST_TLBehaviorAdditiveType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbdba := _b.Attr{}
	_fbdba.Name = name
	switch _fcgg {
	case ST_TLBehaviorAdditiveTypeUnset:
		_fbdba.Value = ""
	case ST_TLBehaviorAdditiveTypeBase:
		_fbdba.Value = "\u0062\u0061\u0073\u0065"
	case ST_TLBehaviorAdditiveTypeSum:
		_fbdba.Value = "\u0073\u0075\u006d"
	case ST_TLBehaviorAdditiveTypeRepl:
		_fbdba.Value = "\u0072\u0065\u0070\u006c"
	case ST_TLBehaviorAdditiveTypeMult:
		_fbdba.Value = "\u006d\u0075\u006c\u0074"
	case ST_TLBehaviorAdditiveTypeNone:
		_fbdba.Value = "\u006e\u006f\u006e\u0065"
	}
	return _fbdba, nil
}

func (_acge *CT_SlideMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acge.PreserveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_acge.PreserveAttr))})
	}
	e.EncodeToken(start)
	_cdffg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_acge.CSld, _cdffg)
	_gafdf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_acge.ClrMap, _gafdf)
	if _acge.SldLayoutIdLst != nil {
		_ffgg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003as\u006c\u0064\u004ca\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_acge.SldLayoutIdLst, _ffgg)
	}
	if _acge.Transition != nil {
		_gabf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_acge.Transition, _gabf)
	}
	if _acge.Timing != nil {
		_fcfe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_acge.Timing, _fcfe)
	}
	if _acge.Hf != nil {
		_acbga := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_acge.Hf, _acbga)
	}
	if _acge.TxStyles != nil {
		_dgfde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_acge.TxStyles, _dgfde)
	}
	if _acge.ExtLst != nil {
		_agfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acge.ExtLst, _agfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ebbf ST_TLPreviousActionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ebbf.String(), start)
}

type CT_SlideMasterTextStyles struct {

	// Slide Master Title Text Style
	TitleStyle *_bc.CT_TextListStyle

	// Slide Master Body Text Style
	BodyStyle *_bc.CT_TextListStyle

	// Slide Master Other Text Style
	OtherStyle *_bc.CT_TextListStyle
	ExtLst     *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLOleChartTargetElement and its children, prefixing error messages with path
func (_fagce *CT_TLOleChartTargetElement) ValidateWithPath(path string) error {
	if _fagce.TypeAttr == ST_TLChartSubelementTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dbdec := _fagce.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dbdec != nil {
		return _dbdec
	}
	return nil
}

func NewCT_SlideIdList() *CT_SlideIdList { _cfga := &CT_SlideIdList{}; return _cfga }

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_efcff *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _ddgff := _efcff.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ddgff != nil {
		return _ddgff
	}
	if _efbfe := _efcff.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _efbfe != nil {
		return _efbfe
	}
	if _gggb := _efcff.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _gggb != nil {
		return _gggb
	}
	return nil
}

func (_gfge ST_TLOleChartBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ffgfe := _b.Attr{}
	_ffgfe.Name = name
	switch _gfge {
	case ST_TLOleChartBuildTypeUnset:
		_ffgfe.Value = ""
	case ST_TLOleChartBuildTypeAllAtOnce:
		_ffgfe.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLOleChartBuildTypeSeries:
		_ffgfe.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLOleChartBuildTypeCategory:
		_ffgfe.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLOleChartBuildTypeSeriesEl:
		_ffgfe.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_TLOleChartBuildTypeCategoryEl:
		_ffgfe.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _ffgfe, nil
}

func NewCT_Placeholder() *CT_Placeholder { _bdadd := &CT_Placeholder{}; return _bdadd }

func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_baff := &CT_PictureNonVisual{}
	_baff.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_baff.CNvPicPr = _bc.NewCT_NonVisualPictureProperties()
	_baff.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _baff
}

func (_ccdff *SldMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072"
	return _ccdff.CT_SlideMaster.MarshalXML(e, start)
}

func (_bdbdc *CT_HeaderFooter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ageg := range start.Attr {
		if _ageg.Name.Local == "\u0073\u006c\u0064\u004e\u0075\u006d" {
			_dab, _gfaff := _f.ParseBool(_ageg.Value)
			if _gfaff != nil {
				return _gfaff
			}
			_bdbdc.SldNumAttr = &_dab
			continue
		}
		if _ageg.Name.Local == "\u0068\u0064\u0072" {
			_dfb, _ggdc := _f.ParseBool(_ageg.Value)
			if _ggdc != nil {
				return _ggdc
			}
			_bdbdc.HdrAttr = &_dfb
			continue
		}
		if _ageg.Name.Local == "\u0066\u0074\u0072" {
			_gbfe, _dagb := _f.ParseBool(_ageg.Value)
			if _dagb != nil {
				return _dagb
			}
			_bdbdc.FtrAttr = &_gbfe
			continue
		}
		if _ageg.Name.Local == "\u0064\u0074" {
			_fcff, _acbbb := _f.ParseBool(_ageg.Value)
			if _acbbb != nil {
				return _acbbb
			}
			_bdbdc.DtAttr = &_fcff
			continue
		}
	}
_bbcf:
	for {
		_bcdb, _acbgb := d.Token()
		if _acbgb != nil {
			return _acbgb
		}
		switch _aggc := _bcdb.(type) {
		case _b.StartElement:
			switch _aggc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdbdc.ExtLst = NewCT_ExtensionListModify()
				if _fdfe := d.DecodeElement(_bdbdc.ExtLst, &_aggc); _fdfe != nil {
					return _fdfe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _aggc.Name)
				if _cffc := d.Skip(); _cffc != nil {
					return _cffc
				}
			}
		case _b.EndElement:
			break _bbcf
		case _b.CharData:
		}
	}
	return nil
}

type CT_InOutTransition struct {

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func (_cddece *ST_IterateType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffgae, _bcbbad := d.Token()
	if _bcbbad != nil {
		return _bcbbad
	}
	if _bdgdg, _ccee := _ffgae.(_b.EndElement); _ccee && _bdgdg.Name == start.Name {
		*_cddece = 1
		return nil
	}
	if _cdab, _eccga := _ffgae.(_b.CharData); !_eccga {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffgae)
	} else {
		switch string(_cdab) {
		case "":
			*_cddece = 0
		case "\u0065\u006c":
			*_cddece = 1
		case "\u0077\u0064":
			*_cddece = 2
		case "\u006c\u0074":
			*_cddece = 3
		}
	}
	_ffgae, _bcbbad = d.Token()
	if _bcbbad != nil {
		return _bcbbad
	}
	if _cdae, _gccdd := _ffgae.(_b.EndElement); _gccdd && _cdae.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffgae)
}

func NewCT_TLTriggerTimeNodeID() *CT_TLTriggerTimeNodeID {
	_dgabb := &CT_TLTriggerTimeNodeID{}
	return _dgabb
}

func (_deef *CT_CommonSlideViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_deef.CViewPr = NewCT_CommonViewProperties()
	for _, _afe := range start.Attr {
		if _afe.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064" {
			_eada, _gdef := _f.ParseBool(_afe.Value)
			if _gdef != nil {
				return _gdef
			}
			_deef.SnapToGridAttr = &_eada
			continue
		}
		if _afe.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_gcg, _gcc := _f.ParseBool(_afe.Value)
			if _gcc != nil {
				return _gcc
			}
			_deef.SnapToObjectsAttr = &_gcg
			continue
		}
		if _afe.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073" {
			_dbd, _dae := _f.ParseBool(_afe.Value)
			if _dae != nil {
				return _dae
			}
			_deef.ShowGuidesAttr = &_dbd
			continue
		}
	}
_eebe:
	for {
		_gaga, _acbb := d.Token()
		if _acbb != nil {
			return _acbb
		}
		switch _edda := _gaga.(type) {
		case _b.StartElement:
			switch _edda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _feed := d.DecodeElement(_deef.CViewPr, &_edda); _feed != nil {
					return _feed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}:
				_deef.GuideLst = NewCT_GuideList()
				if _fgbg := d.DecodeElement(_deef.GuideLst, &_edda); _fgbg != nil {
					return _fgbg
				}
			default:
				_g.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _edda.Name)
				if _afca := d.Skip(); _afca != nil {
					return _afca
				}
			}
		case _b.EndElement:
			break _eebe
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLSubShapeId and its children
func (_eedb *CT_TLSubShapeId) Validate() error {
	return _eedb.ValidateWithPath("\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064")
}

func (_ecdd *EG_Background) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_daef:
	for {
		_edgbb, _fdbfc := d.Token()
		if _fdbfc != nil {
			return _fdbfc
		}
		switch _ababa := _edgbb.(type) {
		case _b.StartElement:
			switch _ababa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_ecdd.BgPr = NewCT_BackgroundProperties()
				if _ageafa := d.DecodeElement(_ecdd.BgPr, &_ababa); _ageafa != nil {
					return _ageafa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_ecdd.BgRef = _bc.NewCT_StyleMatrixReference()
				if _gadae := d.DecodeElement(_ecdd.BgRef, &_ababa); _gadae != nil {
					return _gadae
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _ababa.Name)
				if _bdgbd := d.Skip(); _bdgbd != nil {
					return _bdgbd
				}
			}
		case _b.EndElement:
			break _daef
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_EmbeddedFontDataId and its children
func (_bag *CT_EmbeddedFontDataId) Validate() error {
	return _bag.ValidateWithPath("C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064")
}

func (_ddae *CT_PresentationProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ddae.HtmlPubPr != nil {
		_fagcb := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0068\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_ddae.HtmlPubPr, _fagcb)
	}
	if _ddae.WebPr != nil {
		_becg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_ddae.WebPr, _becg)
	}
	if _ddae.PrnPr != nil {
		_dgded := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0070\u0072\u006e\u0050\u0072"}}
		e.EncodeElement(_ddae.PrnPr, _dgded)
	}
	if _ddae.ShowPr != nil {
		_cgbf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0068\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_ddae.ShowPr, _cgbf)
	}
	if _ddae.ClrMru != nil {
		_ebafa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0072\u0075"}}
		e.EncodeElement(_ddae.ClrMru, _ebafa)
	}
	if _ddae.ExtLst != nil {
		_bdbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ddae.ExtLst, _bdbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CmLst and its children
func (_gfgcf *CmLst) Validate() error { return _gfgcf.ValidateWithPath("\u0043\u006d\u004cs\u0074") }

// ValidateWithPath validates the CT_ShowInfoKiosk and its children, prefixing error messages with path
func (_bcacd *CT_ShowInfoKiosk) ValidateWithPath(path string) error { return nil }

func NewCT_SlideLayoutIdList() *CT_SlideLayoutIdList { _effeg := &CT_SlideLayoutIdList{}; return _effeg }

func (_fecgb ST_TLDiagramBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dggga := _b.Attr{}
	_dggga.Name = name
	switch _fecgb {
	case ST_TLDiagramBuildTypeUnset:
		_dggga.Value = ""
	case ST_TLDiagramBuildTypeWhole:
		_dggga.Value = "\u0077\u0068\u006fl\u0065"
	case ST_TLDiagramBuildTypeDepthByNode:
		_dggga.Value = "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeDepthByBranch:
		_dggga.Value = "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case ST_TLDiagramBuildTypeBreadthByNode:
		_dggga.Value = "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeBreadthByLvl:
		_dggga.Value = "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case ST_TLDiagramBuildTypeCw:
		_dggga.Value = "\u0063\u0077"
	case ST_TLDiagramBuildTypeCwIn:
		_dggga.Value = "\u0063\u0077\u0049\u006e"
	case ST_TLDiagramBuildTypeCwOut:
		_dggga.Value = "\u0063\u0077\u004fu\u0074"
	case ST_TLDiagramBuildTypeCcw:
		_dggga.Value = "\u0063\u0063\u0077"
	case ST_TLDiagramBuildTypeCcwIn:
		_dggga.Value = "\u0063\u0063\u0077I\u006e"
	case ST_TLDiagramBuildTypeCcwOut:
		_dggga.Value = "\u0063\u0063\u0077\u004f\u0075\u0074"
	case ST_TLDiagramBuildTypeInByRing:
		_dggga.Value = "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case ST_TLDiagramBuildTypeOutByRing:
		_dggga.Value = "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case ST_TLDiagramBuildTypeUp:
		_dggga.Value = "\u0075\u0070"
	case ST_TLDiagramBuildTypeDown:
		_dggga.Value = "\u0064\u006f\u0077\u006e"
	case ST_TLDiagramBuildTypeAllAtOnce:
		_dggga.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLDiagramBuildTypeCust:
		_dggga.Value = "\u0063\u0075\u0073\u0074"
	}
	return _dggga, nil
}

// Validate validates the CT_CommentAuthor and its children
func (_abb *CT_CommentAuthor) Validate() error {
	return _abb.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072")
}

func (_faefc ST_OleObjectFollowColorScheme) ValidateWithPath(path string) error {
	switch _faefc {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faefc))
	}
	return nil
}

type ST_TLAnimateColorDirection byte

func (_fcbdg ST_IterateType) String() string {
	switch _fcbdg {
	case 0:
		return ""
	case 1:
		return "\u0065\u006c"
	case 2:
		return "\u0077\u0064"
	case 3:
		return "\u006c\u0074"
	}
	return ""
}

func (_eegac *ST_TLDiagramBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eegbd, _bfcbg := d.Token()
	if _bfcbg != nil {
		return _bfcbg
	}
	if _ffded, _ddgeae := _eegbd.(_b.EndElement); _ddgeae && _ffded.Name == start.Name {
		*_eegac = 1
		return nil
	}
	if _afefa, _ggceg := _eegbd.(_b.CharData); !_ggceg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eegbd)
	} else {
		switch string(_afefa) {
		case "":
			*_eegac = 0
		case "\u0077\u0068\u006fl\u0065":
			*_eegac = 1
		case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_eegac = 2
		case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
			*_eegac = 3
		case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_eegac = 4
		case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
			*_eegac = 5
		case "\u0063\u0077":
			*_eegac = 6
		case "\u0063\u0077\u0049\u006e":
			*_eegac = 7
		case "\u0063\u0077\u004fu\u0074":
			*_eegac = 8
		case "\u0063\u0063\u0077":
			*_eegac = 9
		case "\u0063\u0063\u0077I\u006e":
			*_eegac = 10
		case "\u0063\u0063\u0077\u004f\u0075\u0074":
			*_eegac = 11
		case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
			*_eegac = 12
		case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
			*_eegac = 13
		case "\u0075\u0070":
			*_eegac = 14
		case "\u0064\u006f\u0077\u006e":
			*_eegac = 15
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_eegac = 16
		case "\u0063\u0075\u0073\u0074":
			*_eegac = 17
		}
	}
	_eegbd, _bfcbg = d.Token()
	if _bfcbg != nil {
		return _bfcbg
	}
	if _cgcd, _becgc := _eegbd.(_b.EndElement); _becgc && _cgcd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eegbd)
}

// Validate validates the CT_GroupShapeChoice and its children
func (_ebeef *CT_GroupShapeChoice) Validate() error {
	return _ebeef.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

func NewCT_TLTimeTargetElement() *CT_TLTimeTargetElement {
	_dgabad := &CT_TLTimeTargetElement{}
	return _dgabad
}

func (_gbcg *CT_CustomShowId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eacg := range start.Attr {
		if _eacg.Name.Local == "\u0069\u0064" {
			_acafa, _bee := _f.ParseUint(_eacg.Value, 10, 32)
			if _bee != nil {
				return _bee
			}
			_gbcg.IdAttr = uint32(_acafa)
			continue
		}
	}
	for {
		_bdag, _agbg := d.Token()
		if _agbg != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u006f\u0077I\u0064:\u0020\u0025\u0073", _agbg)
		}
		if _ddcb, _fccd := _bdag.(_b.EndElement); _fccd && _ddcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aaefb *ST_ViewType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aaefb = 0
	case "\u0073l\u0064\u0056\u0069\u0065\u0077":
		*_aaefb = 1
	case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_aaefb = 2
	case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
		*_aaefb = 3
	case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
		*_aaefb = 4
	case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_aaefb = 5
	case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
		*_aaefb = 6
	case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_aaefb = 7
	case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
		*_aaefb = 8
	}
	return nil
}

func (_daceg *CT_TLCommandBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daceg.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _dgdea := range start.Attr {
		if _dgdea.Name.Local == "\u0074\u0079\u0070\u0065" {
			_daceg.TypeAttr.UnmarshalXMLAttr(_dgdea)
			continue
		}
		if _dgdea.Name.Local == "\u0063\u006d\u0064" {
			_gfcf, _cbdb := _dgdea.Value, error(nil)
			if _cbdb != nil {
				return _cbdb
			}
			_daceg.CmdAttr = &_gfcf
			continue
		}
	}
_dddd:
	for {
		_eecb, _bfdcg := d.Token()
		if _bfdcg != nil {
			return _bfdcg
		}
		switch _fbde := _eecb.(type) {
		case _b.StartElement:
			switch _fbde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _gebb := d.DecodeElement(_daceg.CBhvr, &_fbde); _gebb != nil {
					return _gebb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _fbde.Name)
				if _fbeb := d.Skip(); _fbeb != nil {
					return _fbeb
				}
			}
		case _b.EndElement:
			break _dddd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TagsData and its children
func (_befcd *CT_TagsData) Validate() error {
	return _befcd.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061")
}

func (_aabac *CT_TLTimeNodeParallel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bggag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_aabac.CTn, _bggag)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_SlideMaster() *CT_SlideMaster {
	_bfaf := &CT_SlideMaster{}
	_bfaf.CSld = NewCT_CommonSlideData()
	_bfaf.ClrMap = _bc.NewCT_ColorMapping()
	return _bfaf
}

func (_bcbfc ST_TLBehaviorOverrideType) Validate() error { return _bcbfc.ValidateWithPath("") }

func (_eafg *CT_StringTag) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gafe := range start.Attr {
		if _gafe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fece, _gfbd := _gafe.Value, error(nil)
			if _gfbd != nil {
				return _gfbd
			}
			_eafg.NameAttr = _fece
			continue
		}
		if _gafe.Name.Local == "\u0076\u0061\u006c" {
			_aefef, _affb := _gafe.Value, error(nil)
			if _affb != nil {
				return _affb
			}
			_eafg.ValAttr = _aefef
			continue
		}
	}
	for {
		_dcbc, _dbde := d.Token()
		if _dbde != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0074r\u0069\u006e\u0067\u0054\u0061\u0067\u003a\u0020\u0025\u0073", _dbde)
		}
		if _agabd, _aade := _dcbc.(_b.EndElement); _aade && _agabd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TLAnimVariantBooleanVal struct {

	// Value
	ValAttr bool
}

// Validate validates the CT_TLAnimateMotionBehavior and its children
func (_bbddc *CT_TLAnimateMotionBehavior) Validate() error {
	return _bbddc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}

func (_edcge *ST_TLBehaviorTransformType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edcge = 0
	case "\u0070\u0074":
		*_edcge = 1
	case "\u0069\u006d\u0067":
		*_edcge = 2
	}
	return nil
}

func NewCT_SlideSize() *CT_SlideSize {
	_dfcde := &CT_SlideSize{}
	_dfcde.CxAttr = 914400
	_dfcde.CyAttr = 914400
	return _dfcde
}

func (_eec *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eec.CNvPr = _bc.NewCT_NonVisualDrawingProps()
	_eec.CNvGraphicFramePr = _bc.NewCT_NonVisualGraphicFrameProperties()
	_eec.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_ddfe:
	for {
		_dda, _bbbg := d.Token()
		if _bbbg != nil {
			return _bbbg
		}
		switch _dadg := _dda.(type) {
		case _b.StartElement:
			switch _dadg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _bebd := d.DecodeElement(_eec.CNvPr, &_dadg); _bebd != nil {
					return _bebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _caaf := d.DecodeElement(_eec.CNvGraphicFramePr, &_dadg); _caaf != nil {
					return _caaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _bfgf := d.DecodeElement(_eec.NvPr, &_dadg); _bfgf != nil {
					return _bfgf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _dadg.Name)
				if _cecg := d.Skip(); _cecg != nil {
					return _cecg
				}
			}
		case _b.EndElement:
			break _ddfe
		case _b.CharData:
		}
	}
	return nil
}

func (_cdea *ST_TransitionSpeed) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdea = 0
	case "\u0073\u006c\u006f\u0077":
		*_cdea = 1
	case "\u006d\u0065\u0064":
		*_cdea = 2
	case "\u0066\u0061\u0073\u0074":
		*_cdea = 3
	}
	return nil
}

func (_bacge *ST_PrintColorMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbfbf, _ddcac := d.Token()
	if _ddcac != nil {
		return _ddcac
	}
	if _gbdgc, _fcaaag := _dbfbf.(_b.EndElement); _fcaaag && _gbdgc.Name == start.Name {
		*_bacge = 1
		return nil
	}
	if _edagf, _baafd := _dbfbf.(_b.CharData); !_baafd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbfbf)
	} else {
		switch string(_edagf) {
		case "":
			*_bacge = 0
		case "\u0062\u0077":
			*_bacge = 1
		case "\u0067\u0072\u0061\u0079":
			*_bacge = 2
		case "\u0063\u006c\u0072":
			*_bacge = 3
		}
	}
	_dbfbf, _ddcac = d.Token()
	if _ddcac != nil {
		return _ddcac
	}
	if _eedggf, _cfbae := _dbfbf.(_b.EndElement); _cfbae && _eedggf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbfbf)
}

type ST_PlaceholderSize byte

func (_dgdebb *Notes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u006e\u006f\u0074\u0065\u0073"
	return _dgdebb.CT_NotesSlide.MarshalXML(e, start)
}

// Validate validates the CT_TLTimeAnimateValueList and its children
func (_debcb *CT_TLTimeAnimateValueList) Validate() error {
	return _debcb.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t")
}

// ValidateWithPath validates the CT_TLTimeNodeSequence and its children, prefixing error messages with path
func (_baddg *CT_TLTimeNodeSequence) ValidateWithPath(path string) error {
	if _bbed := _baddg.PrevAcAttr.ValidateWithPath(path + "/\u0050\u0072\u0065\u0076\u0041\u0063\u0041\u0074\u0074\u0072"); _bbed != nil {
		return _bbed
	}
	if _beebg := _baddg.NextAcAttr.ValidateWithPath(path + "/\u004e\u0065\u0078\u0074\u0041\u0063\u0041\u0074\u0074\u0072"); _beebg != nil {
		return _beebg
	}
	if _bdfe := _baddg.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _bdfe != nil {
		return _bdfe
	}
	if _baddg.PrevCondLst != nil {
		if _eagg := _baddg.PrevCondLst.ValidateWithPath(path + "\u002f\u0050\u0072e\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _eagg != nil {
			return _eagg
		}
	}
	if _baddg.NextCondLst != nil {
		if _fcef := _baddg.NextCondLst.ValidateWithPath(path + "\u002f\u004e\u0065x\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _fcef != nil {
			return _fcef
		}
	}
	return nil
}

func (_eefea ST_SplitterBarState) String() string {
	switch _eefea {
	case 0:
		return ""
	case 1:
		return "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case 2:
		return "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case 3:
		return "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return ""
}

// Validate validates the CT_OleObjectChoice and its children
func (_ggagc *CT_OleObjectChoice) Validate() error {
	return _ggagc.ValidateWithPath("\u0043T\u005fO\u006c\u0065\u004f\u0062\u006ae\u0063\u0074C\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_ModifyVerifier and its children
func (_abbgg *CT_ModifyVerifier) Validate() error {
	return _abbgg.ValidateWithPath("\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072")
}

func NewCT_TLAnimateEffectBehavior() *CT_TLAnimateEffectBehavior {
	_gefeb := &CT_TLAnimateEffectBehavior{}
	_gefeb.CBhvr = NewCT_TLCommonBehaviorData()
	return _gefeb
}

func (_feeaed *ST_TLTimeNodeMasterRelation) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_feeaed = 0
	case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
		*_feeaed = 1
	case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
		*_feeaed = 2
	case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
		*_feeaed = 3
	}
	return nil
}

func (_gaedff *CT_TLMediaNodeVideo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gaedff.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _gefg := range start.Attr {
		if _gefg.Name.Local == "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e" {
			_cabga, _dafa := _f.ParseBool(_gefg.Value)
			if _dafa != nil {
				return _dafa
			}
			_gaedff.FullScrnAttr = &_cabga
			continue
		}
	}
_fbcfe:
	for {
		_fabbc, _gdbb := d.Token()
		if _gdbb != nil {
			return _gdbb
		}
		switch _gedd := _fabbc.(type) {
		case _b.StartElement:
			switch _gedd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _becd := d.DecodeElement(_gaedff.CMediaNode, &_gedd); _becd != nil {
					return _becd
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0056\u0069\u0064\u0065\u006f\u0020\u0025\u0076", _gedd.Name)
				if _bcdbe := d.Skip(); _bcdbe != nil {
					return _bcdbe
				}
			}
		case _b.EndElement:
			break _fbcfe
		case _b.CharData:
		}
	}
	return nil
}

func (_gbbbc ST_TLTimeAnimateValueTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gbbbc.ST_PositiveFixedPercentage != nil {
		e.Encode(_gbbbc.ST_PositiveFixedPercentage)
	}
	if _gbbbc.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_b.CharData(_gbbbc.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

type ST_TLCommandType byte

type CT_OleObjectChoice struct {
	Embed *CT_OleObjectEmbed
	Link  *CT_OleObjectLink
}

// Validate validates the OleObj and its children
func (_fegcb *OleObj) Validate() error {
	return _fegcb.ValidateWithPath("\u004f\u006c\u0065\u004f\u0062\u006a")
}

func (_fbdec ST_TLTimeNodeSyncType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abfede := _b.Attr{}
	_abfede.Name = name
	switch _fbdec {
	case ST_TLTimeNodeSyncTypeUnset:
		_abfede.Value = ""
	case ST_TLTimeNodeSyncTypeCanSlip:
		_abfede.Value = "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case ST_TLTimeNodeSyncTypeLocked:
		_abfede.Value = "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return _abfede, nil
}

type CT_SlideLayoutIdList struct {

	// Slide Layout Id
	SldLayoutId []*CT_SlideLayoutIdListEntry
}

type CT_EmbeddedFontDataId struct{ IdAttr string }

func NewCT_TLOleChartTargetElement() *CT_TLOleChartTargetElement {
	_gfecb := &CT_TLOleChartTargetElement{}
	_gfecb.TypeAttr = ST_TLChartSubelementType(1)
	return _gfecb
}

// ValidateWithPath validates the CT_Placeholder and its children, prefixing error messages with path
func (_bafb *CT_Placeholder) ValidateWithPath(path string) error {
	if _cdb := _bafb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cdb != nil {
		return _cdb
	}
	if _gabdf := _bafb.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _gabdf != nil {
		return _gabdf
	}
	if _eebcd := _bafb.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _eebcd != nil {
		return _eebcd
	}
	if _bafb.ExtLst != nil {
		if _egfa := _bafb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egfa != nil {
			return _egfa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Kinsoku and its children, prefixing error messages with path
func (_dfba *CT_Kinsoku) ValidateWithPath(path string) error { return nil }

func NewCT_EmbeddedFontListEntry() *CT_EmbeddedFontListEntry {
	_deba := &CT_EmbeddedFontListEntry{}
	_deba.Font = _bc.NewCT_TextFont()
	return _deba
}

func (_addgg ST_TLTimeNodePresetClassType) ValidateWithPath(path string) error {
	switch _addgg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_addgg))
	}
	return nil
}

func (_gfaaa ST_TLBehaviorTransformType) ValidateWithPath(path string) error {
	switch _gfaaa {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfaaa))
	}
	return nil
}

func (_eabd *ST_TLCommandType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eedbb, _ddda := d.Token()
	if _ddda != nil {
		return _ddda
	}
	if _abgc, _cbda := _eedbb.(_b.EndElement); _cbda && _abgc.Name == start.Name {
		*_eabd = 1
		return nil
	}
	if _dddfb, _fgcdg := _eedbb.(_b.CharData); !_fgcdg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eedbb)
	} else {
		switch string(_dddfb) {
		case "":
			*_eabd = 0
		case "\u0065\u0076\u0074":
			*_eabd = 1
		case "\u0063\u0061\u006c\u006c":
			*_eabd = 2
		case "\u0076\u0065\u0072\u0062":
			*_eabd = 3
		}
	}
	_eedbb, _ddda = d.Token()
	if _ddda != nil {
		return _ddda
	}
	if _cdfe, _efdg := _eedbb.(_b.EndElement); _efdg && _cdfe.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eedbb)
}

func (_bbc *CT_Guide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cggf := range start.Attr {
		if _cggf.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_bbc.OrientAttr.UnmarshalXMLAttr(_cggf)
			continue
		}
		if _cggf.Name.Local == "\u0070\u006f\u0073" {
			_ddb, _fdbg := ParseUnionST_Coordinate32(_cggf.Value)
			if _fdbg != nil {
				return _fdbg
			}
			_bbc.PosAttr = &_ddb
			continue
		}
	}
	for {
		_gbg, _bcae := d.Token()
		if _bcae != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0075\u0069\u0064\u0065: \u0025\u0073", _bcae)
		}
		if _ffgd, _dacc := _gbg.(_b.EndElement); _dacc && _ffgd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_CustomerData() *CT_CustomerData { _abff := &CT_CustomerData{}; return _abff }

func (_ddfaa ST_TLTriggerRuntimeNode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ddfaa.String(), start)
}

type CT_TLByHslColorTransform struct {

	// Hue
	HAttr int32

	// Saturation
	SAttr _bc.ST_FixedPercentage

	// Lightness
	LAttr _bc.ST_FixedPercentage
}

// ValidateWithPath validates the CT_ShowInfoBrowse and its children, prefixing error messages with path
func (_bgdf *CT_ShowInfoBrowse) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CmAuthorLst and its children, prefixing error messages with path
func (_fecdf *CmAuthorLst) ValidateWithPath(path string) error {
	if _gbeec := _fecdf.CT_CommentAuthorList.ValidateWithPath(path); _gbeec != nil {
		return _gbeec
	}
	return nil
}

func (_gbba *CT_TLAnimateBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbba.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _dgfdee := range start.Attr {
		if _dgfdee.Name.Local == "\u0062\u0079" {
			_gcacd, _fcdae := _dgfdee.Value, error(nil)
			if _fcdae != nil {
				return _fcdae
			}
			_gbba.ByAttr = &_gcacd
			continue
		}
		if _dgfdee.Name.Local == "\u0066\u0072\u006f\u006d" {
			_abecd, _gffe := _dgfdee.Value, error(nil)
			if _gffe != nil {
				return _gffe
			}
			_gbba.FromAttr = &_abecd
			continue
		}
		if _dgfdee.Name.Local == "\u0074\u006f" {
			_egeea, _cdeb := _dgfdee.Value, error(nil)
			if _cdeb != nil {
				return _cdeb
			}
			_gbba.ToAttr = &_egeea
			continue
		}
		if _dgfdee.Name.Local == "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065" {
			_gbba.CalcmodeAttr.UnmarshalXMLAttr(_dgfdee)
			continue
		}
		if _dgfdee.Name.Local == "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e" {
			_gbba.ValueTypeAttr.UnmarshalXMLAttr(_dgfdee)
			continue
		}
	}
_cfge:
	for {
		_bbaed, _daac := d.Token()
		if _daac != nil {
			return _daac
		}
		switch _edgfb := _bbaed.(type) {
		case _b.StartElement:
			switch _edgfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _dbegc := d.DecodeElement(_gbba.CBhvr, &_edgfb); _dbegc != nil {
					return _dbegc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}:
				_gbba.TavLst = NewCT_TLTimeAnimateValueList()
				if _addgb := d.DecodeElement(_gbba.TavLst, &_edgfb); _addgb != nil {
					return _addgb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _edgfb.Name)
				if _ecaed := d.Skip(); _ecaed != nil {
					return _ecaed
				}
			}
		case _b.EndElement:
			break _cfge
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontDataId and its children, prefixing error messages with path
func (_ceaf *CT_EmbeddedFontDataId) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLMediaNodeVideo and its children
func (_geffc *CT_TLMediaNodeVideo) Validate() error {
	return _geffc.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f")
}

const (
	ST_TLTimeNodeTypeUnset          ST_TLTimeNodeType = 0
	ST_TLTimeNodeTypeClickEffect    ST_TLTimeNodeType = 1
	ST_TLTimeNodeTypeWithEffect     ST_TLTimeNodeType = 2
	ST_TLTimeNodeTypeAfterEffect    ST_TLTimeNodeType = 3
	ST_TLTimeNodeTypeMainSeq        ST_TLTimeNodeType = 4
	ST_TLTimeNodeTypeInteractiveSeq ST_TLTimeNodeType = 5
	ST_TLTimeNodeTypeClickPar       ST_TLTimeNodeType = 6
	ST_TLTimeNodeTypeWithGroup      ST_TLTimeNodeType = 7
	ST_TLTimeNodeTypeAfterGroup     ST_TLTimeNodeType = 8
	ST_TLTimeNodeTypeTmRoot         ST_TLTimeNodeType = 9
)

func (_ebdc ST_SlideLayoutType) ValidateWithPath(path string) error {
	switch _ebdc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebdc))
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeCondition and its children, prefixing error messages with path
func (_bafe *CT_TLTimeCondition) ValidateWithPath(path string) error {
	if _aeed := _bafe.EvtAttr.ValidateWithPath(path + "\u002f\u0045\u0076\u0074\u0041\u0074\u0074\u0072"); _aeed != nil {
		return _aeed
	}
	if _bafe.DelayAttr != nil {
		if _cbeef := _bafe.DelayAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u006c\u0061\u0079\u0041\u0074\u0074\u0072"); _cbeef != nil {
			return _cbeef
		}
	}
	if _bafe.TgtEl != nil {
		if _egfee := _bafe.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _egfee != nil {
			return _egfee
		}
	}
	if _bafe.Tn != nil {
		if _gegdc := _bafe.Tn.ValidateWithPath(path + "\u002f\u0054\u006e"); _gegdc != nil {
			return _gegdc
		}
	}
	if _bafe.Rtn != nil {
		if _bgfe := _bafe.Rtn.ValidateWithPath(path + "\u002f\u0052\u0074\u006e"); _bgfe != nil {
			return _bgfe
		}
	}
	return nil
}

func (_eacfae ST_PlaceholderType) ValidateWithPath(path string) error {
	switch _eacfae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eacfae))
	}
	return nil
}

func (_baafae ST_SplitterBarState) Validate() error { return _baafae.ValidateWithPath("") }

func NewCT_TLTimeAnimateValue() *CT_TLTimeAnimateValue {
	_aggeag := &CT_TLTimeAnimateValue{}
	return _aggeag
}

func (_bgfcg *CT_TLTimeCondition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgfc := range start.Attr {
		if _cgfc.Name.Local == "\u0065\u0076\u0074" {
			_bgfcg.EvtAttr.UnmarshalXMLAttr(_cgfc)
			continue
		}
		if _cgfc.Name.Local == "\u0064\u0065\u006ca\u0079" {
			_bdfad, _eaed := ParseUnionST_TLTime(_cgfc.Value)
			if _eaed != nil {
				return _eaed
			}
			_bgfcg.DelayAttr = &_bdfad
			continue
		}
	}
_eaga:
	for {
		_debbf, _gfgd := d.Token()
		if _gfgd != nil {
			return _gfgd
		}
		switch _gfcgb := _debbf.(type) {
		case _b.StartElement:
			switch _gfcgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				_bgfcg.TgtEl = NewCT_TLTimeTargetElement()
				if _gadc := d.DecodeElement(_bgfcg.TgtEl, &_gfcgb); _gadc != nil {
					return _gadc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e"}:
				_bgfcg.Tn = NewCT_TLTriggerTimeNodeID()
				if _eded := d.DecodeElement(_bgfcg.Tn, &_gfcgb); _eded != nil {
					return _eded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0074\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006e"}:
				_bgfcg.Rtn = NewCT_TLTriggerRuntimeNode()
				if _egea := d.DecodeElement(_bgfcg.Rtn, &_gfcgb); _egea != nil {
					return _egea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065C\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gfcgb.Name)
				if _edaab := d.Skip(); _edaab != nil {
					return _edaab
				}
			}
		case _b.EndElement:
			break _eaga
		case _b.CharData:
		}
	}
	return nil
}

func (_ebfc ST_WebColorType) String() string {
	switch _ebfc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case 3:
		return "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 4:
		return "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case 5:
		return "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case 6:
		return "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return ""
}

type ST_TLAnimateMotionBehaviorOrigin byte

// Validate validates the CT_ExtensionListModify and its children
func (_eeee *CT_ExtensionListModify) Validate() error {
	return _eeee.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079")
}

func (_edeff *CmAuthorLst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edeff.CT_CommentAuthorList = *NewCT_CommentAuthorList()
_bgbfc:
	for {
		_eeef, _eebg := d.Token()
		if _eebg != nil {
			return _eebg
		}
		switch _bfggac := _eeef.(type) {
		case _b.StartElement:
			switch _bfggac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_fccc := NewCT_CommentAuthor()
				if _edgbe := d.DecodeElement(_fccc, &_bfggac); _edgbe != nil {
					return _edgbe
				}
				_edeff.CmAuthor = append(_edeff.CmAuthor, _fccc)
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074\u0020\u0025\u0076", _bfggac.Name)
				if _fbgce := d.Skip(); _fbgce != nil {
					return _fbgce
				}
			}
		case _b.EndElement:
			break _bgbfc
		case _b.CharData:
		}
	}
	return nil
}

func (_bggec ST_TLOleChartBuildType) ValidateWithPath(path string) error {
	switch _bggec {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bggec))
	}
	return nil
}

// Validate validates the CT_TLByAnimateColorTransform and its children
func (_ffdb *CT_TLByAnimateColorTransform) Validate() error {
	return _ffdb.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d")
}

func (_abgb ST_PrintColorMode) String() string {
	switch _abgb {
	case 0:
		return ""
	case 1:
		return "\u0062\u0077"
	case 2:
		return "\u0067\u0072\u0061\u0079"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

func (_dcbe *CT_GroupShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcbe.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_dcbe.GrpSpPr = _bc.NewCT_GroupShapeProperties()
_afaa:
	for {
		_ada, _ebaf := d.Token()
		if _ebaf != nil {
			return _ebaf
		}
		switch _bdec := _ada.(type) {
		case _b.StartElement:
			switch _bdec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _fac := d.DecodeElement(_dcbe.NvGrpSpPr, &_bdec); _fac != nil {
					return _fac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _dgbc := d.DecodeElement(_dcbe.GrpSpPr, &_bdec); _dgbc != nil {
					return _dgbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_ddce := NewCT_GroupShapeChoice()
				if _faef := d.DecodeElement(&_ddce.Sp, &_bdec); _faef != nil {
					return _faef
				}
				_dcbe.Choice = append(_dcbe.Choice, _ddce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_eaff := NewCT_GroupShapeChoice()
				if _cceb := d.DecodeElement(&_eaff.GrpSp, &_bdec); _cceb != nil {
					return _cceb
				}
				_dcbe.Choice = append(_dcbe.Choice, _eaff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_eadgc := NewCT_GroupShapeChoice()
				if _fgcf := d.DecodeElement(&_eadgc.GraphicFrame, &_bdec); _fgcf != nil {
					return _fgcf
				}
				_dcbe.Choice = append(_dcbe.Choice, _eadgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_fagc := NewCT_GroupShapeChoice()
				if _aaa := d.DecodeElement(&_fagc.CxnSp, &_bdec); _aaa != nil {
					return _aaa
				}
				_dcbe.Choice = append(_dcbe.Choice, _fagc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fed := NewCT_GroupShapeChoice()
				if _ecdc := d.DecodeElement(&_fed.Pic, &_bdec); _ecdc != nil {
					return _ecdc
				}
				_dcbe.Choice = append(_dcbe.Choice, _fed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_baef := NewCT_GroupShapeChoice()
				if _accec := d.DecodeElement(&_baef.ContentPart, &_bdec); _accec != nil {
					return _accec
				}
				_dcbe.Choice = append(_dcbe.Choice, _baef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcbe.ExtLst = NewCT_ExtensionListModify()
				if _ebafe := d.DecodeElement(_dcbe.ExtLst, &_bdec); _ebafe != nil {
					return _ebafe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _bdec.Name)
				if _gcfee := d.Skip(); _gcfee != nil {
					return _gcfee
				}
			}
		case _b.EndElement:
			break _afaa
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_OleObject() *CT_OleObject {
	_ccgb := &CT_OleObject{}
	_ccgb.Choice = NewCT_OleObjectChoice()
	return _ccgb
}

type CT_TLCommandBehavior struct {

	// Command Type
	TypeAttr ST_TLCommandType

	// Command
	CmdAttr *string
	CBhvr   *CT_TLCommonBehaviorData
}

func (_geb *CT_CustomerDataList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ecdgf:
	for {
		_daf, _aef := d.Token()
		if _aef != nil {
			return _aef
		}
		switch _gcfed := _daf.(type) {
		case _b.StartElement:
			switch _gcfed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}:
				_dgaac := NewCT_CustomerData()
				if _gbdea := d.DecodeElement(_dgaac, &_gcfed); _gbdea != nil {
					return _gbdea
				}
				_geb.CustData = append(_geb.CustData, _dgaac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}:
				_geb.Tags = NewCT_TagsData()
				if _fbd := d.DecodeElement(_geb.Tags, &_gcfed); _fbd != nil {
					return _fbd
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0065rD\u0061\u0074\u0061\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gcfed.Name)
				if _cbbg := d.Skip(); _cbbg != nil {
					return _cbbg
				}
			}
		case _b.EndElement:
			break _ecdgf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TLTimeAnimateValueList() *CT_TLTimeAnimateValueList {
	_daeae := &CT_TLTimeAnimateValueList{}
	return _daeae
}

func NewCT_ExtensionList() *CT_ExtensionList { _ffa := &CT_ExtensionList{}; return _ffa }

// ValidateWithPath validates the CT_TLBehaviorAttributeNameList and its children, prefixing error messages with path
func (_eccgdd *CT_TLBehaviorAttributeNameList) ValidateWithPath(path string) error { return nil }

func NewPresentation() *Presentation {
	_fcdgc := &Presentation{}
	_fcdgc.CT_Presentation = *NewCT_Presentation()
	return _fcdgc
}

// ValidateWithPath validates the CT_TLByHslColorTransform and its children, prefixing error messages with path
func (_daace *CT_TLByHslColorTransform) ValidateWithPath(path string) error {
	if _dgffg := _daace.SAttr.ValidateWithPath(path + "\u002f\u0053\u0041\u0074\u0074\u0072"); _dgffg != nil {
		return _dgffg
	}
	if _ggaff := _daace.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _ggaff != nil {
		return _ggaff
	}
	return nil
}

func (_cbgae *ST_PhotoAlbumLayout) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbgae = 0
	case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
		*_cbgae = 1
	case "\u0031\u0070\u0069\u0063":
		*_cbgae = 2
	case "\u0032\u0070\u0069\u0063":
		*_cbgae = 3
	case "\u0034\u0070\u0069\u0063":
		*_cbgae = 4
	case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_cbgae = 5
	case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_cbgae = 6
	case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_cbgae = 7
	}
	return nil
}

type CT_CornerDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionCornerDirectionType
}

type CT_TLOleBuildChart struct {

	// Build
	BldAttr ST_TLOleChartBuildType

	// Animate Background
	AnimBgAttr   *bool
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

// Validate validates the CT_TLSetBehavior and its children
func (_dfaeg *CT_TLSetBehavior) Validate() error {
	return _dfaeg.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072")
}

// ValidateWithPath validates the CT_Guide and its children, prefixing error messages with path
func (_fddc *CT_Guide) ValidateWithPath(path string) error {
	if _bdee := _fddc.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _bdee != nil {
		return _bdee
	}
	if _fddc.PosAttr != nil {
		if _dfcd := _fddc.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _dfcd != nil {
			return _dfcd
		}
	}
	return nil
}

type CT_BackgroundProperties struct {

	// Shade to Title
	ShadeToTitleAttr *bool
	NoFill           *_bc.CT_NoFillProperties
	SolidFill        *_bc.CT_SolidColorFillProperties
	GradFill         *_bc.CT_GradientFillProperties
	BlipFill         *_bc.CT_BlipFillProperties
	PattFill         *_bc.CT_PatternFillProperties
	GrpFill          *_bc.CT_GroupFillProperties
	EffectLst        *_bc.CT_EffectList
	EffectDag        *_bc.CT_EffectContainer
	ExtLst           *CT_ExtensionList
}

func (_affdg ST_TLTimeIndefinite) String() string {
	switch _affdg {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return ""
}

// Validate validates the CT_OutlineViewProperties and its children
func (_cffd *CT_OutlineViewProperties) Validate() error {
	return _cffd.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_TLTimeCondition struct {

	// Trigger Event
	EvtAttr ST_TLTriggerEvent

	// Trigger Delay
	DelayAttr *ST_TLTime

	// Target Element Trigger Choice
	TgtEl *CT_TLTimeTargetElement

	// Time Node
	Tn *CT_TLTriggerTimeNodeID

	// Runtime Node Trigger Choice
	Rtn *CT_TLTriggerRuntimeNode
}

// ValidateWithPath validates the CT_CustomerDataList and its children, prefixing error messages with path
func (_aaeg *CT_CustomerDataList) ValidateWithPath(path string) error {
	for _gfaf, _fdcd := range _aaeg.CustData {
		if _ega := _fdcd.ValidateWithPath(_fd.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _gfaf)); _ega != nil {
			return _ega
		}
	}
	if _aaeg.Tags != nil {
		if _egca := _aaeg.Tags.ValidateWithPath(path + "\u002f\u0054\u0061g\u0073"); _egca != nil {
			return _egca
		}
	}
	return nil
}

func (_dbccc ST_TransitionSideDirectionType) Validate() error { return _dbccc.ValidateWithPath("") }

func (_bbaf ST_SplitterBarState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bgebc := _b.Attr{}
	_bgebc.Name = name
	switch _bbaf {
	case ST_SplitterBarStateUnset:
		_bgebc.Value = ""
	case ST_SplitterBarStateMinimized:
		_bgebc.Value = "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case ST_SplitterBarStateRestored:
		_bgebc.Value = "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_SplitterBarStateMaximized:
		_bgebc.Value = "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return _bgebc, nil
}

const (
	ST_PrintColorModeUnset ST_PrintColorMode = 0
	ST_PrintColorModeBw    ST_PrintColorMode = 1
	ST_PrintColorModeGray  ST_PrintColorMode = 2
	ST_PrintColorModeClr   ST_PrintColorMode = 3
)

func NewCT_EightDirectionTransition() *CT_EightDirectionTransition {
	_eagf := &CT_EightDirectionTransition{}
	return _eagf
}

func (_bffbeb ST_TLTimeNodeType) String() string {
	switch _bffbeb {
	case 0:
		return ""
	case 1:
		return "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case 2:
		return "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case 3:
		return "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case 4:
		return "\u006da\u0069\u006e\u0053\u0065\u0071"
	case 5:
		return "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case 6:
		return "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case 7:
		return "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case 8:
		return "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case 9:
		return "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return ""
}

func (_abcfg ST_TLParaBuildType) String() string {
	switch _abcfg {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0070"
	case 3:
		return "\u0063\u0075\u0073\u0074"
	case 4:
		return "\u0077\u0068\u006fl\u0065"
	}
	return ""
}

func (_egff *CT_Extension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcda := range start.Attr {
		if _dcda.Name.Local == "\u0075\u0072\u0069" {
			_dbgb, _cca := _dcda.Value, error(nil)
			if _cca != nil {
				return _cca
			}
			_egff.UriAttr = _dbgb
			continue
		}
	}
_bbbe:
	for {
		_bgca, _dbca := d.Token()
		if _dbca != nil {
			return _dbca
		}
		switch _fdbb := _bgca.(type) {
		case _b.StartElement:
			switch _fdbb.Name {
			default:
				if _fcda, _bbfa := _g.CreateElement(_fdbb); _bbfa != nil {
					return _bbfa
				} else {
					if _eefa := d.DecodeElement(_fcda, &_fdbb); _eefa != nil {
						return _eefa
					}
					_egff.Any = append(_egff.Any, _fcda)
				}
			}
		case _b.EndElement:
			break _bbbe
		case _b.CharData:
		}
	}
	return nil
}

func (_daaaf *CT_HandoutMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daaaf.CSld = NewCT_CommonSlideData()
	_daaaf.ClrMap = _bc.NewCT_ColorMapping()
_begdd:
	for {
		_ebgb, _bdfg := d.Token()
		if _bdfg != nil {
			return _bdfg
		}
		switch _ebdg := _ebgb.(type) {
		case _b.StartElement:
			switch _ebdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _aaga := d.DecodeElement(_daaaf.CSld, &_ebdg); _aaga != nil {
					return _aaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _bcccd := d.DecodeElement(_daaaf.ClrMap, &_ebdg); _bcccd != nil {
					return _bcccd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_daaaf.Hf = NewCT_HeaderFooter()
				if _cgce := d.DecodeElement(_daaaf.Hf, &_ebdg); _cgce != nil {
					return _cgce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daaaf.ExtLst = NewCT_ExtensionListModify()
				if _bbfab := d.DecodeElement(_daaaf.ExtLst, &_ebdg); _bbfab != nil {
					return _bbfab
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025v", _ebdg.Name)
				if _eeecf := d.Skip(); _eeecf != nil {
					return _eeecf
				}
			}
		case _b.EndElement:
			break _begdd
		case _b.CharData:
		}
	}
	return nil
}

func (_ccag *CT_TLTemplateList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_daece:
	for {
		_dggef, _dbbfc := d.Token()
		if _dbbfc != nil {
			return _dbbfc
		}
		switch _dcga := _dggef.(type) {
		case _b.StartElement:
			switch _dcga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}:
				_gdeg := NewCT_TLTemplate()
				if _bgdfe := d.DecodeElement(_gdeg, &_dcga); _bgdfe != nil {
					return _bgdfe
				}
				_ccag.Tmpl = append(_ccag.Tmpl, _gdeg)
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dcga.Name)
				if _caccfb := d.Skip(); _caccfb != nil {
					return _caccfb
				}
			}
		case _b.EndElement:
			break _daece
		case _b.CharData:
		}
	}
	return nil
}

func (_cagafb *ST_TLBehaviorOverrideType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cagafb = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_cagafb = 1
	case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
		*_cagafb = 2
	}
	return nil
}

func (_ccfdb ST_TransitionSideDirectionType) String() string {
	switch _ccfdb {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0075"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064"
	}
	return ""
}

const (
	ST_TLBehaviorAdditiveTypeUnset ST_TLBehaviorAdditiveType = 0
	ST_TLBehaviorAdditiveTypeBase  ST_TLBehaviorAdditiveType = 1
	ST_TLBehaviorAdditiveTypeSum   ST_TLBehaviorAdditiveType = 2
	ST_TLBehaviorAdditiveTypeRepl  ST_TLBehaviorAdditiveType = 3
	ST_TLBehaviorAdditiveTypeMult  ST_TLBehaviorAdditiveType = 4
	ST_TLBehaviorAdditiveTypeNone  ST_TLBehaviorAdditiveType = 5
)

type ST_WebColorType byte

func NewSld() *Sld { _aggf := &Sld{}; _aggf.CT_Slide = *NewCT_Slide(); return _aggf }

// Validate validates the CT_NotesSlide and its children
func (_fgce *CT_NotesSlide) Validate() error {
	return _fgce.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065")
}

func (_beeff ST_PrintColorMode) Validate() error { return _beeff.ValidateWithPath("") }

func NewCT_ApplicationNonVisualDrawingProps() *CT_ApplicationNonVisualDrawingProps {
	_cb := &CT_ApplicationNonVisualDrawingProps{}
	return _cb
}

// Validate validates the CT_SlideLayout and its children
func (_acae *CT_SlideLayout) Validate() error {
	return _acae.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074")
}

type EG_SlideListChoice struct {

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
}

func (_fbfbf ST_TLAnimateBehaviorValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adgfc := _b.Attr{}
	_adgfc.Name = name
	switch _fbfbf {
	case ST_TLAnimateBehaviorValueTypeUnset:
		_adgfc.Value = ""
	case ST_TLAnimateBehaviorValueTypeStr:
		_adgfc.Value = "\u0073\u0074\u0072"
	case ST_TLAnimateBehaviorValueTypeNum:
		_adgfc.Value = "\u006e\u0075\u006d"
	case ST_TLAnimateBehaviorValueTypeClr:
		_adgfc.Value = "\u0063\u006c\u0072"
	}
	return _adgfc, nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_cfbe *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _eefe := _cfbe.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _eefe != nil {
		return _eefe
	}
	if _aee := _cfbe.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _aee != nil {
		return _aee
	}
	if _gbaf := _cfbe.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _gbaf != nil {
		return _gbaf
	}
	return nil
}

type CT_NotesTextViewProperties struct {

	// Base properties for Notes View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

func (_cagge *CT_TLAnimateColorBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cagge.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _fgec := range start.Attr {
		if _fgec.Name.Local == "\u0063\u006c\u0072\u0053\u0070\u0063" {
			_cagge.ClrSpcAttr.UnmarshalXMLAttr(_fgec)
			continue
		}
		if _fgec.Name.Local == "\u0064\u0069\u0072" {
			_cagge.DirAttr.UnmarshalXMLAttr(_fgec)
			continue
		}
	}
_gggbf:
	for {
		_bcdbb, _bcgcb := d.Token()
		if _bcgcb != nil {
			return _bcgcb
		}
		switch _eccb := _bcdbb.(type) {
		case _b.StartElement:
			switch _eccb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _edgff := d.DecodeElement(_cagge.CBhvr, &_eccb); _edgff != nil {
					return _edgff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_cagge.By = NewCT_TLByAnimateColorTransform()
				if _feagd := d.DecodeElement(_cagge.By, &_eccb); _feagd != nil {
					return _feagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_cagge.From = _bc.NewCT_Color()
				if _gcca := d.DecodeElement(_cagge.From, &_eccb); _gcca != nil {
					return _gcca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_cagge.To = _bc.NewCT_Color()
				if _ccce := d.DecodeElement(_cagge.To, &_eccb); _ccce != nil {
					return _ccce
				}
			default:
				_g.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0043o\u006c\u006f\u0072\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _eccb.Name)
				if _gbgbf := d.Skip(); _gbgbf != nil {
					return _gbgbf
				}
			}
		case _b.EndElement:
			break _gggbf
		case _b.CharData:
		}
	}
	return nil
}

func (_cbfed *CT_WheelTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdfba := range start.Attr {
		if _cdfba.Name.Local == "\u0073\u0070\u006f\u006b\u0065\u0073" {
			_bbbfb, _bfcad := _f.ParseUint(_cdfba.Value, 10, 32)
			if _bfcad != nil {
				return _bfcad
			}
			_cefg := uint32(_bbbfb)
			_cbfed.SpokesAttr = &_cefg
			continue
		}
	}
	for {
		_accdb, _febgb := d.Token()
		if _febgb != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u0068\u0065\u0065\u006c\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _febgb)
		}
		if _ccdaae, _ddafe := _accdb.(_b.EndElement); _ddafe && _ccdaae.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_eaad := &CT_GraphicalObjectFrame{}
	_eaad.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_eaad.Xfrm = _bc.NewCT_Transform2D()
	_eaad.Graphic = _bc.NewGraphic()
	return _eaad
}

const (
	ST_TLBehaviorOverrideTypeUnset      ST_TLBehaviorOverrideType = 0
	ST_TLBehaviorOverrideTypeNormal     ST_TLBehaviorOverrideType = 1
	ST_TLBehaviorOverrideTypeChildStyle ST_TLBehaviorOverrideType = 2
)

func (_gacbb *ST_WebColorType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gacbb = 0
	case "\u006e\u006f\u006e\u0065":
		*_gacbb = 1
	case "\u0062r\u006f\u0077\u0073\u0065\u0072":
		*_gacbb = 2
	case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_gacbb = 3
	case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
		*_gacbb = 4
	case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
		*_gacbb = 5
	case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
		*_gacbb = 6
	}
	return nil
}

func (_fagdc *CT_ModifyVerifier) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfbf := range start.Attr {
		if _dfbf.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_ceac, _fafg := _f.ParseUint(_dfbf.Value, 10, 32)
			if _fafg != nil {
				return _fafg
			}
			_abdg := uint32(_ceac)
			_fagdc.SpinCountAttr = &_abdg
			continue
		}
		if _dfbf.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_gfdf, _bbec := _dfbf.Value, error(nil)
			if _bbec != nil {
				return _bbec
			}
			_fagdc.AlgorithmNameAttr = &_gfdf
			continue
		}
		if _dfbf.Name.Local == "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061" {
			_aaaa, _ced := _dfbf.Value, error(nil)
			if _ced != nil {
				return _ced
			}
			_fagdc.SaltDataAttr = &_aaaa
			continue
		}
		if _dfbf.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_dede, _cgde := _dfbf.Value, error(nil)
			if _cgde != nil {
				return _cgde
			}
			_fagdc.SaltValueAttr = &_dede
			continue
		}
		if _dfbf.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065" {
			_fagdc.CryptProviderTypeAttr.UnmarshalXMLAttr(_dfbf)
			continue
		}
		if _dfbf.Name.Local == "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073" {
			_fagdc.CryptAlgorithmClassAttr.UnmarshalXMLAttr(_dfbf)
			continue
		}
		if _dfbf.Name.Local == "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065" {
			_fagdc.CryptAlgorithmTypeAttr.UnmarshalXMLAttr(_dfbf)
			continue
		}
		if _dfbf.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064" {
			_efaf, _dgae := _f.ParseUint(_dfbf.Value, 10, 32)
			if _dgae != nil {
				return _dgae
			}
			_ggcg := uint32(_efaf)
			_fagdc.CryptAlgorithmSidAttr = &_ggcg
			continue
		}
		if _dfbf.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_egga, _bdff := _dfbf.Value, error(nil)
			if _bdff != nil {
				return _bdff
			}
			_fagdc.HashValueAttr = &_egga
			continue
		}
		if _dfbf.Name.Local == "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e" {
			_eefb, _egef := _f.ParseUint(_dfbf.Value, 10, 32)
			if _egef != nil {
				return _egef
			}
			_fafc := uint32(_eefb)
			_fagdc.SpinValueAttr = &_fafc
			continue
		}
		if _dfbf.Name.Local == "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061" {
			_afbe, _gdgb := _dfbf.Value, error(nil)
			if _gdgb != nil {
				return _gdgb
			}
			_fagdc.HashDataAttr = &_afbe
			continue
		}
		if _dfbf.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072" {
			_acdf, _gccd := _dfbf.Value, error(nil)
			if _gccd != nil {
				return _gccd
			}
			_fagdc.CryptProviderAttr = &_acdf
			continue
		}
		if _dfbf.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074" {
			_agge, _dgba := _f.ParseUint(_dfbf.Value, 10, 32)
			if _dgba != nil {
				return _dgba
			}
			_cbbf := uint32(_agge)
			_fagdc.AlgIdExtAttr = &_cbbf
			continue
		}
		if _dfbf.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065" {
			_babff, _fbcc := _dfbf.Value, error(nil)
			if _fbcc != nil {
				return _fbcc
			}
			_fagdc.AlgIdExtSourceAttr = &_babff
			continue
		}
		if _dfbf.Name.Local == "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074" {
			_cdde, _fcfa := _f.ParseUint(_dfbf.Value, 10, 32)
			if _fcfa != nil {
				return _fcfa
			}
			_caef := uint32(_cdde)
			_fagdc.CryptProviderTypeExtAttr = &_caef
			continue
		}
		if _dfbf.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065" {
			_aefc, _gaed := _dfbf.Value, error(nil)
			if _gaed != nil {
				return _gaed
			}
			_fagdc.CryptProviderTypeExtSourceAttr = &_aefc
			continue
		}
	}
	for {
		_ddbc, _adce := d.Token()
		if _adce != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072: \u0025\u0073", _adce)
		}
		if _dgagf, _agfe := _ddbc.(_b.EndElement); _agfe && _dgagf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gffgb ST_OleObjectFollowColorScheme) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_facde := _b.Attr{}
	_facde.Name = name
	switch _gffgb {
	case ST_OleObjectFollowColorSchemeUnset:
		_facde.Value = ""
	case ST_OleObjectFollowColorSchemeNone:
		_facde.Value = "\u006e\u006f\u006e\u0065"
	case ST_OleObjectFollowColorSchemeFull:
		_facde.Value = "\u0066\u0075\u006c\u006c"
	case ST_OleObjectFollowColorSchemeTextAndBackground:
		_facde.Value = "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return _facde, nil
}

func NewCT_TLAnimVariant() *CT_TLAnimVariant { _egdg := &CT_TLAnimVariant{}; return _egdg }

func (_dceae ST_SlideLayoutType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eafac := _b.Attr{}
	_eafac.Name = name
	switch _dceae {
	case ST_SlideLayoutTypeUnset:
		_eafac.Value = ""
	case ST_SlideLayoutTypeTitle:
		_eafac.Value = "\u0074\u0069\u0074l\u0065"
	case ST_SlideLayoutTypeTx:
		_eafac.Value = "\u0074\u0078"
	case ST_SlideLayoutTypeTwoColTx:
		_eafac.Value = "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case ST_SlideLayoutTypeTbl:
		_eafac.Value = "\u0074\u0062\u006c"
	case ST_SlideLayoutTypeTxAndChart:
		_eafac.Value = "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeChartAndTx:
		_eafac.Value = "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeDgm:
		_eafac.Value = "\u0064\u0067\u006d"
	case ST_SlideLayoutTypeChart:
		_eafac.Value = "\u0063\u0068\u0061r\u0074"
	case ST_SlideLayoutTypeTxAndClipArt:
		_eafac.Value = "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case ST_SlideLayoutTypeClipArtAndTx:
		_eafac.Value = "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTitleOnly:
		_eafac.Value = "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case ST_SlideLayoutTypeBlank:
		_eafac.Value = "\u0062\u006c\u0061n\u006b"
	case ST_SlideLayoutTypeTxAndObj:
		_eafac.Value = "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTx:
		_eafac.Value = "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOnly:
		_eafac.Value = "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case ST_SlideLayoutTypeObj:
		_eafac.Value = "\u006f\u0062\u006a"
	case ST_SlideLayoutTypeTxAndMedia:
		_eafac.Value = "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case ST_SlideLayoutTypeMediaAndTx:
		_eafac.Value = "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOverTx:
		_eafac.Value = "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case ST_SlideLayoutTypeTxOverObj:
		_eafac.Value = "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case ST_SlideLayoutTypeTxAndTwoObj:
		_eafac.Value = "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndTx:
		_eafac.Value = "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTwoObjOverTx:
		_eafac.Value = "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case ST_SlideLayoutTypeFourObj:
		_eafac.Value = "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case ST_SlideLayoutTypeVertTx:
		_eafac.Value = "\u0076\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeClipArtAndVertTx:
		_eafac.Value = "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTx:
		_eafac.Value = "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTxOverChart:
		_eafac.Value = "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeTwoObj:
		_eafac.Value = "\u0074\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTwoObj:
		_eafac.Value = "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndObj:
		_eafac.Value = "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeCust:
		_eafac.Value = "\u0063\u0075\u0073\u0074"
	case ST_SlideLayoutTypeSecHead:
		_eafac.Value = "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case ST_SlideLayoutTypeTwoTxTwoObj:
		_eafac.Value = "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjTx:
		_eafac.Value = "\u006f\u0062\u006aT\u0078"
	case ST_SlideLayoutTypePicTx:
		_eafac.Value = "\u0070\u0069\u0063T\u0078"
	}
	return _eafac, nil
}

func (_febdb *CT_NormalViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_febdb.RestoredLeft = NewCT_NormalViewPortion()
	_febdb.RestoredTop = NewCT_NormalViewPortion()
	for _, _bddf := range start.Attr {
		if _bddf.Name.Local == "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073" {
			_gaaf, _cdfg := _f.ParseBool(_bddf.Value)
			if _cdfg != nil {
				return _cdfg
			}
			_febdb.ShowOutlineIconsAttr = &_gaaf
			continue
		}
		if _bddf.Name.Local == "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072" {
			_abfc, _fec := _f.ParseBool(_bddf.Value)
			if _fec != nil {
				return _fec
			}
			_febdb.SnapVertSplitterAttr = &_abfc
			continue
		}
		if _bddf.Name.Local == "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_febdb.VertBarStateAttr.UnmarshalXMLAttr(_bddf)
			continue
		}
		if _bddf.Name.Local == "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_febdb.HorzBarStateAttr.UnmarshalXMLAttr(_bddf)
			continue
		}
		if _bddf.Name.Local == "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077" {
			_ffbc, _fcde := _f.ParseBool(_bddf.Value)
			if _fcde != nil {
				return _fcde
			}
			_febdb.PreferSingleViewAttr = &_ffbc
			continue
		}
	}
_eecg:
	for {
		_dbb, _fadbe := d.Token()
		if _fadbe != nil {
			return _fadbe
		}
		switch _bgcc := _dbb.(type) {
		case _b.StartElement:
			switch _bgcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}:
				if _dadd := d.DecodeElement(_febdb.RestoredLeft, &_bgcc); _dadd != nil {
					return _dadd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}:
				if _acde := d.DecodeElement(_febdb.RestoredTop, &_bgcc); _acde != nil {
					return _acde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_febdb.ExtLst = NewCT_ExtensionList()
				if _bbbgf := d.DecodeElement(_febdb.ExtLst, &_bgcc); _bbbgf != nil {
					return _bbbgf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _bgcc.Name)
				if _faea := d.Skip(); _faea != nil {
					return _faea
				}
			}
		case _b.EndElement:
			break _eecg
		case _b.CharData:
		}
	}
	return nil
}

func (_efef *CT_TLTextTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _efef.CharRg != nil {
		_dffef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0068\u0061\u0072\u0052\u0067"}}
		e.EncodeElement(_efef.CharRg, _dffef)
	}
	if _efef.PRg != nil {
		_eebfgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070R\u0067"}}
		e.EncodeElement(_efef.PRg, _eebfgd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLTextTargetElement and its children, prefixing error messages with path
func (_accaf *CT_TLTextTargetElement) ValidateWithPath(path string) error {
	if _accaf.CharRg != nil {
		if _fgdbc := _accaf.CharRg.ValidateWithPath(path + "\u002fC\u0068\u0061\u0072\u0052\u0067"); _fgdbc != nil {
			return _fgdbc
		}
	}
	if _accaf.PRg != nil {
		if _dgebc := _accaf.PRg.ValidateWithPath(path + "\u002f\u0050\u0052\u0067"); _dgebc != nil {
			return _dgebc
		}
	}
	return nil
}

// Validate validates the CT_Connector and its children
func (_bab *CT_Connector) Validate() error {
	return _bab.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

func (_aebg *CT_NotesMasterIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _aebg.IdAttr)})
	e.EncodeToken(start)
	if _aebg.ExtLst != nil {
		_aecf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aebg.ExtLst, _aecf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TLOleChartBuildType byte

func (_febe *CT_TLMediaNodeAudio) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_febe.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _ccgcfb := range start.Attr {
		if _ccgcfb.Name.Local == "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_dgdec, _cgbed := _f.ParseBool(_ccgcfb.Value)
			if _cgbed != nil {
				return _cgbed
			}
			_febe.IsNarrationAttr = &_dgdec
			continue
		}
	}
_abbffe:
	for {
		_dgea, _cedc := d.Token()
		if _cedc != nil {
			return _cedc
		}
		switch _edbfa := _dgea.(type) {
		case _b.StartElement:
			switch _edbfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _bfbfg := d.DecodeElement(_febe.CMediaNode, &_edbfa); _bfbfg != nil {
					return _bfbfg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0041\u0075\u0064\u0069\u006f\u0020\u0025\u0076", _edbfa.Name)
				if _bbadb := d.Skip(); _bbadb != nil {
					return _bbadb
				}
			}
		case _b.EndElement:
			break _abbffe
		case _b.CharData:
		}
	}
	return nil
}

func (_dgfag *ST_TLTimeAnimateValueTime) ValidateWithPath(path string) error {
	_cdgdb := []string{}
	if _dgfag.ST_PositiveFixedPercentage != nil {
		if _gbage := _dgfag.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _gbage != nil {
			return _gbage
		}
		_cdgdb = append(_cdgdb, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if _dgfag.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_cdgdb = append(_cdgdb, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_cdgdb) > 1 {
		return _fd.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cdgdb)
	}
	return nil
}

// Validate validates the CT_Picture and its children
func (_aaae *CT_Picture) Validate() error {
	return _aaae.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

func (_fffbd *ST_WebColorType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adcde, _ddbee := d.Token()
	if _ddbee != nil {
		return _ddbee
	}
	if _fggd, _eceec := _adcde.(_b.EndElement); _eceec && _fggd.Name == start.Name {
		*_fffbd = 1
		return nil
	}
	if _efdbff, _edfgg := _adcde.(_b.CharData); !_edfgg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adcde)
	} else {
		switch string(_efdbff) {
		case "":
			*_fffbd = 0
		case "\u006e\u006f\u006e\u0065":
			*_fffbd = 1
		case "\u0062r\u006f\u0077\u0073\u0065\u0072":
			*_fffbd = 2
		case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_fffbd = 3
		case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
			*_fffbd = 4
		case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
			*_fffbd = 5
		case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
			*_fffbd = 6
		}
	}
	_adcde, _ddbee = d.Token()
	if _ddbee != nil {
		return _ddbee
	}
	if _edag, _eadc := _adcde.(_b.EndElement); _eadc && _edag.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adcde)
}

type CT_OutlineViewSlideList struct {

	// Presentation Slide
	Sld []*CT_OutlineViewSlideEntry
}

func (_gcafda ST_TLNextActionType) Validate() error { return _gcafda.ValidateWithPath("") }

func (_ebddg *ST_Direction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aeedd, _aegbe := d.Token()
	if _aegbe != nil {
		return _aegbe
	}
	if _acafe, _cbfa := _aeedd.(_b.EndElement); _cbfa && _acafe.Name == start.Name {
		*_ebddg = 1
		return nil
	}
	if _fcgcca, _ecaeg := _aeedd.(_b.CharData); !_ecaeg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeedd)
	} else {
		switch string(_fcgcca) {
		case "":
			*_ebddg = 0
		case "\u0068\u006f\u0072\u007a":
			*_ebddg = 1
		case "\u0076\u0065\u0072\u0074":
			*_ebddg = 2
		}
	}
	_aeedd, _aegbe = d.Token()
	if _aegbe != nil {
		return _aegbe
	}
	if _cgfdc, _bfbfa := _aeedd.(_b.EndElement); _bfbfa && _cgfdc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeedd)
}

// Validate validates the CT_TLMediaNodeAudio and its children
func (_edddf *CT_TLMediaNodeAudio) Validate() error {
	return _edddf.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f")
}

func (_facfd ST_SlideSizeType) Validate() error { return _facfd.ValidateWithPath("") }

func (_dagcf ST_TLTimeNodeMasterRelation) Validate() error { return _dagcf.ValidateWithPath("") }

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicalObjectFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
	ContentPart  []*CT_Rel
}

func (_eegga ST_TLCommandType) Validate() error { return _eegga.ValidateWithPath("") }

func (_dadc *CT_Comment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dadc.Pos = _bc.NewCT_Point2D()
	for _, _gag := range start.Attr {
		if _gag.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_gabd, _dba := _f.ParseUint(_gag.Value, 10, 32)
			if _dba != nil {
				return _dba
			}
			_dadc.AuthorIdAttr = uint32(_gabd)
			continue
		}
		if _gag.Name.Local == "\u0064\u0074" {
			_dadb, _bggg := ParseStdlibTime(_gag.Value)
			if _bggg != nil {
				return _bggg
			}
			_dadc.DtAttr = &_dadb
			continue
		}
		if _gag.Name.Local == "\u0069\u0064\u0078" {
			_dea, _ade := _f.ParseUint(_gag.Value, 10, 32)
			if _ade != nil {
				return _ade
			}
			_dadc.IdxAttr = uint32(_dea)
			continue
		}
	}
_fda:
	for {
		_gcb, _acb := d.Token()
		if _acb != nil {
			return _acb
		}
		switch _fgag := _gcb.(type) {
		case _b.StartElement:
			switch _fgag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006f\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _fdd := d.DecodeElement(_dadc.Pos, &_fgag); _fdd != nil {
					return _fdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _ggc := d.DecodeElement(&_dadc.Text, &_fgag); _ggc != nil {
					return _ggc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dadc.ExtLst = NewCT_ExtensionListModify()
				if _cbba := d.DecodeElement(_dadc.ExtLst, &_fgag); _cbba != nil {
					return _cbba
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _fgag.Name)
				if _eeba := d.Skip(); _eeba != nil {
					return _eeba
				}
			}
		case _b.EndElement:
			break _fda
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_SlideTiming() *CT_SlideTiming { _bfffc := &CT_SlideTiming{}; return _bfffc }

type ST_TLPreviousActionType byte

func NewCT_ShowProperties() *CT_ShowProperties { _fdef := &CT_ShowProperties{}; return _fdef }

func (_adeac *ST_PrintColorMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adeac = 0
	case "\u0062\u0077":
		*_adeac = 1
	case "\u0067\u0072\u0061\u0079":
		*_adeac = 2
	case "\u0063\u006c\u0072":
		*_adeac = 3
	}
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_eefc *EG_ExtensionList) ValidateWithPath(path string) error {
	for _dgbaaf, _cccfd := range _eefc.Ext {
		if _eecbf := _cccfd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _dgbaaf)); _eecbf != nil {
			return _eecbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesMasterIdList and its children, prefixing error messages with path
func (_dfag *CT_NotesMasterIdList) ValidateWithPath(path string) error {
	if _dfag.NotesMasterId != nil {
		if _acadb := _dfag.NotesMasterId.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"); _acadb != nil {
			return _acadb
		}
	}
	return nil
}

func (_afgbdf ST_PhotoAlbumLayout) ValidateWithPath(path string) error {
	switch _afgbdf {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afgbdf))
	}
	return nil
}

// ValidateWithPath validates the CT_Slide and its children, prefixing error messages with path
func (_dccc *CT_Slide) ValidateWithPath(path string) error {
	if _bacef := _dccc.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _bacef != nil {
		return _bacef
	}
	if _dccc.ClrMapOvr != nil {
		if _ecfe := _dccc.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _ecfe != nil {
			return _ecfe
		}
	}
	if _dccc.Transition != nil {
		if _fbdafg := _dccc.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _fbdafg != nil {
			return _fbdafg
		}
	}
	if _dccc.Timing != nil {
		if _gfcgd := _dccc.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _gfcgd != nil {
			return _gfcgd
		}
	}
	if _dccc.ExtLst != nil {
		if _gfaa := _dccc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfaa != nil {
			return _gfaa
		}
	}
	return nil
}

func (_acac *CT_SplitTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfefd := range start.Attr {
		if _dfefd.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_acac.OrientAttr.UnmarshalXMLAttr(_dfefd)
			continue
		}
		if _dfefd.Name.Local == "\u0064\u0069\u0072" {
			_acac.DirAttr.UnmarshalXMLAttr(_dfefd)
			continue
		}
	}
	for {
		_bdfd, _cffda := d.Token()
		if _cffda != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0070\u006c\u0069\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _cffda)
		}
		if _acacc, _abbfb := _bdfd.(_b.EndElement); _abbfb && _acacc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Comment and its children
func (_fdde *CT_Comment) Validate() error {
	return _fdde.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}

func (_fbefa ST_WebColorType) ValidateWithPath(path string) error {
	switch _fbefa {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbefa))
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateBehavior and its children, prefixing error messages with path
func (_babc *CT_TLAnimateBehavior) ValidateWithPath(path string) error {
	if _bggda := _babc.CalcmodeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u006d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _bggda != nil {
		return _bggda
	}
	if _eeeea := _babc.ValueTypeAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _eeeea != nil {
		return _eeeea
	}
	if _gggcd := _babc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _gggcd != nil {
		return _gggcd
	}
	if _babc.TavLst != nil {
		if _gffa := _babc.TavLst.ValidateWithPath(path + "\u002fT\u0061\u0076\u004c\u0073\u0074"); _gffa != nil {
			return _gffa
		}
	}
	return nil
}

type CT_Guide struct {

	// Guide Orientation
	OrientAttr ST_Direction

	// Guide Position
	PosAttr *_bc.ST_Coordinate32
}

// ValidateWithPath validates the CT_TLAnimateColorBehavior and its children, prefixing error messages with path
func (_gggg *CT_TLAnimateColorBehavior) ValidateWithPath(path string) error {
	if _defba := _gggg.ClrSpcAttr.ValidateWithPath(path + "/\u0043\u006c\u0072\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _defba != nil {
		return _defba
	}
	if _efadg := _gggg.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _efadg != nil {
		return _efadg
	}
	if _eaffd := _gggg.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _eaffd != nil {
		return _eaffd
	}
	if _gggg.By != nil {
		if _ecegb := _gggg.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _ecegb != nil {
			return _ecegb
		}
	}
	if _gggg.From != nil {
		if _gdfb := _gggg.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _gdfb != nil {
			return _gdfb
		}
	}
	if _gggg.To != nil {
		if _dbaaa := _gggg.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _dbaaa != nil {
			return _dbaaa
		}
	}
	return nil
}

// Validate validates the AG_Ole and its children
func (_fb *AG_Ole) Validate() error {
	return _fb.ValidateWithPath("\u0041\u0047\u005f\u004f\u006c\u0065")
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_dbgf *CT_TimeNodeList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bdce:
	for {
		_ceggd, _aaeef := d.Token()
		if _aaeef != nil {
			return _aaeef
		}
		switch _befbb := _ceggd.(type) {
		case _b.StartElement:
			switch _befbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0061\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072"}:
				_dcaag := NewCT_TLTimeNodeParallel()
				if _fdacf := d.DecodeElement(_dcaag, &_befbb); _fdacf != nil {
					return _fdacf
				}
				_dbgf.Par = append(_dbgf.Par, _dcaag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0071"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0071"}:
				_fggbe := NewCT_TLTimeNodeSequence()
				if _dfgfe := d.DecodeElement(_fggbe, &_befbb); _dfgfe != nil {
					return _dfgfe
				}
				_dbgf.Seq = append(_dbgf.Seq, _fggbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}:
				_eeeeab := NewCT_TLTimeNodeExclusive()
				if _aeef := d.DecodeElement(_eeeeab, &_befbb); _aeef != nil {
					return _aeef
				}
				_dbgf.Excl = append(_dbgf.Excl, _eeeeab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}:
				_ccfaa := NewCT_TLAnimateBehavior()
				if _ddfae := d.DecodeElement(_ccfaa, &_befbb); _ddfae != nil {
					return _ddfae
				}
				_dbgf.Anim = append(_dbgf.Anim, _ccfaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}:
				_cfdeg := NewCT_TLAnimateColorBehavior()
				if _feef := d.DecodeElement(_cfdeg, &_befbb); _feef != nil {
					return _feef
				}
				_dbgf.AnimClr = append(_dbgf.AnimClr, _cfdeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}:
				_gbfd := NewCT_TLAnimateEffectBehavior()
				if _dfdcg := d.DecodeElement(_gbfd, &_befbb); _dfdcg != nil {
					return _dfdcg
				}
				_dbgf.AnimEffect = append(_dbgf.AnimEffect, _gbfd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}:
				_fdgdbf := NewCT_TLAnimateMotionBehavior()
				if _cfafb := d.DecodeElement(_fdgdbf, &_befbb); _cfafb != nil {
					return _cfafb
				}
				_dbgf.AnimMotion = append(_dbgf.AnimMotion, _fdgdbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}:
				_dgbf := NewCT_TLAnimateRotationBehavior()
				if _bdgeea := d.DecodeElement(_dgbf, &_befbb); _bdgeea != nil {
					return _bdgeea
				}
				_dbgf.AnimRot = append(_dbgf.AnimRot, _dgbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}:
				_dfcae := NewCT_TLAnimateScaleBehavior()
				if _dbdeb := d.DecodeElement(_dfcae, &_befbb); _dbdeb != nil {
					return _dbdeb
				}
				_dbgf.AnimScale = append(_dbgf.AnimScale, _dfcae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0064"}:
				_aagfa := NewCT_TLCommandBehavior()
				if _fgbff := d.DecodeElement(_aagfa, &_befbb); _fgbff != nil {
					return _fgbff
				}
				_dbgf.Cmd = append(_dbgf.Cmd, _aagfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_caccc := NewCT_TLSetBehavior()
				if _dcgdd := d.DecodeElement(_caccc, &_befbb); _dcgdd != nil {
					return _dcgdd
				}
				_dbgf.Set = append(_dbgf.Set, _caccc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}:
				_dffdg := NewCT_TLMediaNodeAudio()
				if _eadba := d.DecodeElement(_dffdg, &_befbb); _eadba != nil {
					return _eadba
				}
				_dbgf.Audio = append(_dbgf.Audio, _dffdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}:
				_aaage := NewCT_TLMediaNodeVideo()
				if _cfgdb := d.DecodeElement(_aaage, &_befbb); _cfgdb != nil {
					return _cfgdb
				}
				_dbgf.Video = append(_dbgf.Video, _aaage)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0069\u006de\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _befbb.Name)
				if _daeb := d.Skip(); _daeb != nil {
					return _daeb
				}
			}
		case _b.EndElement:
			break _bdce
		case _b.CharData:
		}
	}
	return nil
}

func (_accdfb *CT_TLTimeTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_efege:
	for {
		_aced, _ggfcc := d.Token()
		if _ggfcc != nil {
			return _ggfcc
		}
		switch _faccgf := _aced.(type) {
		case _b.StartElement:
			switch _faccgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}:
				_accdfb.SldTgt = NewCT_Empty()
				if _acbfa := d.DecodeElement(_accdfb.SldTgt, &_faccgf); _acbfa != nil {
					return _acbfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}:
				_accdfb.SndTgt = _bc.NewCT_EmbeddedWAVAudioFile()
				if _fbcce := d.DecodeElement(_accdfb.SndTgt, &_faccgf); _fbcce != nil {
					return _fbcce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}:
				_accdfb.SpTgt = NewCT_TLShapeTargetElement()
				if _befeb := d.DecodeElement(_accdfb.SpTgt, &_faccgf); _befeb != nil {
					return _befeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}:
				_accdfb.InkTgt = NewCT_TLSubShapeId()
				if _ddfaf := d.DecodeElement(_accdfb.InkTgt, &_faccgf); _ddfaf != nil {
					return _ddfaf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _faccgf.Name)
				if _bfacf := d.Skip(); _bfacf != nil {
					return _bfacf
				}
			}
		case _b.EndElement:
			break _efege
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ShowInfoBrowse and its children
func (_dbgg *CT_ShowInfoBrowse) Validate() error {
	return _dbgg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065")
}

func (_aabag *CT_TLTemplate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aabag.LvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0076\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_aabag.LvlAttr)})
	}
	e.EncodeToken(start)
	_bcag := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
	e.EncodeElement(_aabag.TnLst, _bcag)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TagsData struct{ IdAttr string }

// ValidateWithPath validates the EG_ChildSlide and its children, prefixing error messages with path
func (_egdfca *EG_ChildSlide) ValidateWithPath(path string) error {
	if _egdfca.ClrMapOvr != nil {
		if _bccbd := _egdfca.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _bccbd != nil {
			return _bccbd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontListEntry and its children, prefixing error messages with path
func (_gbebc *CT_EmbeddedFontListEntry) ValidateWithPath(path string) error {
	if _gbbg := _gbebc.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _gbbg != nil {
		return _gbbg
	}
	if _gbebc.Regular != nil {
		if _efgd := _gbebc.Regular.ValidateWithPath(path + "\u002f\u0052\u0065\u0067\u0075\u006c\u0061\u0072"); _efgd != nil {
			return _efgd
		}
	}
	if _gbebc.Bold != nil {
		if _fadff := _gbebc.Bold.ValidateWithPath(path + "\u002f\u0042\u006fl\u0064"); _fadff != nil {
			return _fadff
		}
	}
	if _gbebc.Italic != nil {
		if _ebca := _gbebc.Italic.ValidateWithPath(path + "\u002fI\u0074\u0061\u006c\u0069\u0063"); _ebca != nil {
			return _ebca
		}
	}
	if _gbebc.BoldItalic != nil {
		if _gge := _gbebc.BoldItalic.ValidateWithPath(path + "/\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"); _gge != nil {
			return _gge
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLBuildParagraph and its children, prefixing error messages with path
func (_bgbc *CT_TLBuildParagraph) ValidateWithPath(path string) error {
	if _fcecae := _bgbc.BuildAttr.ValidateWithPath(path + "\u002f\u0042\u0075\u0069\u006c\u0064\u0041\u0074\u0074\u0072"); _fcecae != nil {
		return _fcecae
	}
	if _bgbc.AdvAutoAttr != nil {
		if _fgdfg := _bgbc.AdvAutoAttr.ValidateWithPath(path + "\u002f\u0041\u0064v\u0041\u0075\u0074\u006f\u0041\u0074\u0074\u0072"); _fgdfg != nil {
			return _fgdfg
		}
	}
	if _bgbc.TmplLst != nil {
		if _abeee := _bgbc.TmplLst.ValidateWithPath(path + "\u002f\u0054\u006d\u0070\u006c\u004c\u0073\u0074"); _abeee != nil {
			return _abeee
		}
	}
	return nil
}

// Validate validates the CT_CommentList and its children
func (_dfg *CT_CommentList) Validate() error {
	return _dfg.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_SlideViewProperties and its children
func (_ddge *CT_SlideViewProperties) Validate() error {
	return _ddge.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func NewCT_CommentAuthor() *CT_CommentAuthor { _eee := &CT_CommentAuthor{}; return _eee }

type OleObj struct{ CT_OleObject }

type CT_SlideTransition struct {

	// Transition Speed
	SpdAttr ST_TransitionSpeed

	// Advance on Click
	AdvClickAttr *bool

	// Advance after time
	AdvTmAttr *uint32
	Choice    *CT_SlideTransitionChoice

	// Sound Action
	SndAc  *CT_TransitionSoundAction
	ExtLst *CT_ExtensionListModify
}

func (_feff *HandoutMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0068a\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072"
	return _feff.CT_HandoutMaster.MarshalXML(e, start)
}

func (_gabab *CT_Presentation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gabab.ServerZoomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_gabab.ServerZoomAttr)})
	}
	if _gabab.FirstSlideNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_gabab.FirstSlideNumAttr)})
	}
	if _gabab.ShowSpecialPlsOnTitleSldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.ShowSpecialPlsOnTitleSldAttr))})
	}
	if _gabab.RtlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0074\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.RtlAttr))})
	}
	if _gabab.RemovePersonalInfoOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.RemovePersonalInfoOnSaveAttr))})
	}
	if _gabab.CompatModeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.CompatModeAttr))})
	}
	if _gabab.StrictFirstAndLastCharsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.StrictFirstAndLastCharsAttr))})
	}
	if _gabab.EmbedTrueTypeFontsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.EmbedTrueTypeFontsAttr))})
	}
	if _gabab.SaveSubsetFontsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.SaveSubsetFontsAttr))})
	}
	if _gabab.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_gabab.AutoCompressPicturesAttr))})
	}
	if _gabab.BookmarkIdSeedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gabab.BookmarkIdSeedAttr)})
	}
	if _gabab.ConformanceAttr != _e.ST_ConformanceClassUnset {
		_fabb, _bbae := _gabab.ConformanceAttr.MarshalXMLAttr(_b.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _bbae != nil {
			return _bbae
		}
		start.Attr = append(start.Attr, _fabb)
	}
	e.EncodeToken(start)
	if _gabab.SldMasterIdLst != nil {
		_cbeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003as\u006c\u0064\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_gabab.SldMasterIdLst, _cbeg)
	}
	if _gabab.NotesMasterIdLst != nil {
		_gfgf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_gabab.NotesMasterIdLst, _gfgf)
	}
	if _gabab.HandoutMasterIdLst != nil {
		_bace := _b.StartElement{Name: _b.Name{Local: "p\u003ah\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061s\u0074\u0065\u0072\u0049dL\u0073\u0074"}}
		e.EncodeElement(_gabab.HandoutMasterIdLst, _bace)
	}
	if _gabab.SldIdLst != nil {
		_bbbeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_gabab.SldIdLst, _bbbeg)
	}
	if _gabab.SldSz != nil {
		_ffcab := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0053\u007a"}}
		e.EncodeElement(_gabab.SldSz, _ffcab)
	}
	_adgf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006e\u006f\u0074\u0065\u0073\u0053z"}}
	e.EncodeElement(_gabab.NotesSz, _adgf)
	if _gabab.SmartTags != nil {
		_eedac := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_gabab.SmartTags, _eedac)
	}
	if _gabab.EmbeddedFontLst != nil {
		_deab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gabab.EmbeddedFontLst, _deab)
	}
	if _gabab.CustShowLst != nil {
		_bgbbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}}
		e.EncodeElement(_gabab.CustShowLst, _bgbbc)
	}
	if _gabab.PhotoAlbum != nil {
		_dbae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}}
		e.EncodeElement(_gabab.PhotoAlbum, _dbae)
	}
	if _gabab.CustDataLst != nil {
		_bedfc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_gabab.CustDataLst, _bedfc)
	}
	if _gabab.Kinsoku != nil {
		_bgbef := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006b\u0069\u006e\u0073\u006f\u006bu"}}
		e.EncodeElement(_gabab.Kinsoku, _bgbef)
	}
	if _gabab.DefaultTextStyle != nil {
		_ffga := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0064e\u0066\u0061\u0075\u006c\u0074T\u0065\u0078t\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_gabab.DefaultTextStyle, _ffga)
	}
	if _gabab.ModifyVerifier != nil {
		_cbef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003am\u006f\u0064\u0069f\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_gabab.ModifyVerifier, _cbef)
	}
	if _gabab.ExtLst != nil {
		_fce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gabab.ExtLst, _fce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_GroupShape() *CT_GroupShape {
	_dgde := &CT_GroupShape{}
	_dgde.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_dgde.GrpSpPr = _bc.NewCT_GroupShapeProperties()
	return _dgde
}

func (_cgcg *CT_CustomShow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _cgcg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cgcg.IdAttr)})
	e.EncodeToken(start)
	_febd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
	e.EncodeElement(_cgcg.SldLst, _febd)
	if _cgcg.ExtLst != nil {
		_fcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgcg.ExtLst, _fcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bdgcb *CT_TLIterateIntervalTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _bdgcb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fedea *CT_TLAnimateMotionBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fedea.OriginAttr != ST_TLAnimateMotionBehaviorOriginUnset {
		_aggab, _adbff := _fedea.OriginAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0067\u0069\u006e"})
		if _adbff != nil {
			return _adbff
		}
		start.Attr = append(start.Attr, _aggab)
	}
	if _fedea.PathAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_fedea.PathAttr)})
	}
	if _fedea.PathEditModeAttr != ST_TLAnimateMotionPathEditModeUnset {
		_ceadb, _gaedf := _fedea.PathEditModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065"})
		if _gaedf != nil {
			return _gaedf
		}
		start.Attr = append(start.Attr, _ceadb)
	}
	if _fedea.RAngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0041\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0076", *_fedea.RAngAttr)})
	}
	if _fedea.PtsTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_fedea.PtsTypesAttr)})
	}
	e.EncodeToken(start)
	_gfbec := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fedea.CBhvr, _gfbec)
	if _fedea.By != nil {
		_adgfb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_fedea.By, _adgfb)
	}
	if _fedea.From != nil {
		_dfdgf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_fedea.From, _dfdgf)
	}
	if _fedea.To != nil {
		_cfebcf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_fedea.To, _cfebcf)
	}
	if _fedea.RCtr != nil {
		_dgcf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0043\u0074\u0072"}}
		e.EncodeElement(_fedea.RCtr, _dgcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLAnimateEffectBehavior and its children, prefixing error messages with path
func (_daed *CT_TLAnimateEffectBehavior) ValidateWithPath(path string) error {
	if _bacegg := _daed.TransitionAttr.ValidateWithPath(path + "\u002fT\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _bacegg != nil {
		return _bacegg
	}
	if _cffeb := _daed.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _cffeb != nil {
		return _cffeb
	}
	if _daed.Progress != nil {
		if _dcgfd := _daed.Progress.ValidateWithPath(path + "\u002fP\u0072\u006f\u0067\u0072\u0065\u0073s"); _dcgfd != nil {
			return _dcgfd
		}
	}
	return nil
}

func (_bdeec *ST_TLNextActionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gedce, _gdgdd := d.Token()
	if _gdgdd != nil {
		return _gdgdd
	}
	if _fbded, _ggadf := _gedce.(_b.EndElement); _ggadf && _fbded.Name == start.Name {
		*_bdeec = 1
		return nil
	}
	if _bgdgc, _fbfg := _gedce.(_b.CharData); !_fbfg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gedce)
	} else {
		switch string(_bgdgc) {
		case "":
			*_bdeec = 0
		case "\u006e\u006f\u006e\u0065":
			*_bdeec = 1
		case "\u0073\u0065\u0065\u006b":
			*_bdeec = 2
		}
	}
	_gedce, _gdgdd = d.Token()
	if _gdgdd != nil {
		return _gdgdd
	}
	if _acgdc, _abeb := _gedce.(_b.EndElement); _abeb && _acgdc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gedce)
}

func (_abgdf ST_IterateType) Validate() error { return _abgdf.ValidateWithPath("") }

type HandoutMaster struct{ CT_HandoutMaster }

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_cef *CT_CommentList) ValidateWithPath(path string) error {
	for _cda, _cfa := range _cef.Cm {
		if _gdd := _cfa.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0043\u006d\u005b\u0025\u0064]", path, _cda)); _gdd != nil {
			return _gdd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTriggerRuntimeNode and its children, prefixing error messages with path
func (_affda *CT_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	if _affda.ValAttr == ST_TLTriggerRuntimeNodeUnset {
		return _fd.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eecag := _affda.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eecag != nil {
		return _eecag
	}
	return nil
}

// Validate validates the CT_TLAnimateBehavior and its children
func (_fbcf *CT_TLAnimateBehavior) Validate() error {
	return _fbcf.ValidateWithPath("C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072")
}

const (
	ST_TLAnimateColorSpaceUnset ST_TLAnimateColorSpace = 0
	ST_TLAnimateColorSpaceRgb   ST_TLAnimateColorSpace = 1
	ST_TLAnimateColorSpaceHsl   ST_TLAnimateColorSpace = 2
)

func (_ebff *CT_OutlineViewSlideEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ebff.IdAttr)})
	if _ebff.CollapseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_ebff.CollapseAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CommonSlideData and its children
func (_gaec *CT_CommonSlideData) Validate() error {
	return _gaec.ValidateWithPath("\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061")
}

type CT_NotesMaster struct {

	// Common Slide Data
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_bc.CT_ColorMapping

	// Header/Footer Information for a Notes Master
	Hf *CT_HeaderFooter

	// Notes Text Style
	NotesStyle *_bc.CT_TextListStyle
	ExtLst     *CT_ExtensionListModify
}

const (
	ST_WebColorTypeUnset              ST_WebColorType = 0
	ST_WebColorTypeNone               ST_WebColorType = 1
	ST_WebColorTypeBrowser            ST_WebColorType = 2
	ST_WebColorTypePresentationText   ST_WebColorType = 3
	ST_WebColorTypePresentationAccent ST_WebColorType = 4
	ST_WebColorTypeWhiteTextOnBlack   ST_WebColorType = 5
	ST_WebColorTypeBlackTextOnWhite   ST_WebColorType = 6
)

func NewAG_ChildSlide() *AG_ChildSlide { _eb := &AG_ChildSlide{}; return _eb }

func (_efbce ST_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	switch _efbce {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efbce))
	}
	return nil
}

type Notes struct{ CT_NotesSlide }

func NewAG_TLBuild() *AG_TLBuild { _edd := &AG_TLBuild{}; return _edd }

func (_ecded *CT_TLOleChartTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecded.TypeAttr = ST_TLChartSubelementType(1)
	for _, _afcbg := range start.Attr {
		if _afcbg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ecded.TypeAttr.UnmarshalXMLAttr(_afcbg)
			continue
		}
		if _afcbg.Name.Local == "\u006c\u0076\u006c" {
			_bgga, _bfgfe := _f.ParseUint(_afcbg.Value, 10, 32)
			if _bfgfe != nil {
				return _bfgfe
			}
			_fgbbc := uint32(_bgga)
			_ecded.LvlAttr = &_fgbbc
			continue
		}
	}
	for {
		_eaeeg, _dcac := d.Token()
		if _dcac != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0054\u0061\u0072g\u0065\u0074\u0045\u006c\u0065m\u0065\u006et\u003a\u0020\u0025\u0073", _dcac)
		}
		if _caggb, _ecbg := _eaeeg.(_b.EndElement); _ecbg && _caggb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GraphicalObjectFrameNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_bc.CT_NonVisualDrawingProps

	// Non-Visual Graphic Frame Drawing Properties
	CNvGraphicFramePr *_bc.CT_NonVisualGraphicFrameProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_aaad ST_PlaceholderSize) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cecde := _b.Attr{}
	_cecde.Name = name
	switch _aaad {
	case ST_PlaceholderSizeUnset:
		_cecde.Value = ""
	case ST_PlaceholderSizeFull:
		_cecde.Value = "\u0066\u0075\u006c\u006c"
	case ST_PlaceholderSizeHalf:
		_cecde.Value = "\u0068\u0061\u006c\u0066"
	case ST_PlaceholderSizeQuarter:
		_cecde.Value = "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return _cecde, nil
}

func (_fddaa *SldSyncPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fddaa.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	for _, _aggdb := range start.Attr {
		if _aggdb.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_gfffa, _adggcc := _aggdb.Value, error(nil)
			if _adggcc != nil {
				return _adggcc
			}
			_fddaa.ServerSldIdAttr = _gfffa
			continue
		}
		if _aggdb.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_gcbd, _bgccb := ParseStdlibTime(_aggdb.Value)
			if _bgccb != nil {
				return _bgccb
			}
			_fddaa.ServerSldModifiedTimeAttr = _gcbd
			continue
		}
		if _aggdb.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_ddbdc, _abcf := ParseStdlibTime(_aggdb.Value)
			if _abcf != nil {
				return _abcf
			}
			_fddaa.ClientInsertedTimeAttr = _ddbdc
			continue
		}
	}
_bdcee:
	for {
		_dfdgfg, _ffeg := d.Token()
		if _ffeg != nil {
			return _ffeg
		}
		switch _cebfa := _dfdgfg.(type) {
		case _b.StartElement:
			switch _cebfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fddaa.ExtLst = NewCT_ExtensionList()
				if _dfgcg := d.DecodeElement(_fddaa.ExtLst, &_cebfa); _dfgcg != nil {
					return _dfgcg
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u0053\u0079\u006ec\u0050\u0072 \u0025\u0076", _cebfa.Name)
				if _fgcfe := d.Skip(); _fgcfe != nil {
					return _fgcfe
				}
			}
		case _b.EndElement:
			break _bdcee
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Placeholder and its children
func (_cefb *CT_Placeholder) Validate() error {
	return _cefb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072")
}

type ST_PrintWhat byte

func (_bdffc ST_Direction) Validate() error { return _bdffc.ValidateWithPath("") }

func (_cgag *CT_EmbeddedFontList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cgag.EmbeddedFont != nil {
		_ceff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065d\u0046\u006f\u006e\u0074"}}
		for _, _cagfd := range _cgag.EmbeddedFont {
			e.EncodeElement(_cagfd, _ceff)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfcba *CT_TLSubShapeId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bfcba.SpidAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLTimeNodeSequence struct {

	// Concurrent
	ConcurrentAttr *bool

	// Previous Action
	PrevAcAttr ST_TLPreviousActionType

	// Next Action
	NextAcAttr ST_TLNextActionType

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData

	// Previous Conditions List
	PrevCondLst *CT_TLTimeConditionList

	// Next Conditions List
	NextCondLst *CT_TLTimeConditionList
}

// ValidateWithPath validates the CT_TimeNodeList and its children, prefixing error messages with path
func (_cdbc *CT_TimeNodeList) ValidateWithPath(path string) error {
	for _eaefb, _adfab := range _cdbc.Par {
		if _geefe := _adfab.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0050\u0061\u0072\u005b\u0025\u0064\u005d", path, _eaefb)); _geefe != nil {
			return _geefe
		}
	}
	for _dbcb, _ceffb := range _cdbc.Seq {
		if _efcae := _ceffb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0071\u005b\u0025\u0064\u005d", path, _dbcb)); _efcae != nil {
			return _efcae
		}
	}
	for _aagfd, _gebed := range _cdbc.Excl {
		if _cfacf := _gebed.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0045\u0078\u0063\u006c\u005b\u0025\u0064\u005d", path, _aagfd)); _cfacf != nil {
			return _cfacf
		}
	}
	for _beebc, _adfgb := range _cdbc.Anim {
		if _abfagg := _adfgb.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0041\u006e\u0069\u006d\u005b\u0025\u0064\u005d", path, _beebc)); _abfagg != nil {
			return _abfagg
		}
	}
	for _gdecf, _edfc := range _cdbc.AnimClr {
		if _bdgd := _edfc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0043\u006cr\u005b\u0025\u0064\u005d", path, _gdecf)); _bdgd != nil {
			return _bdgd
		}
	}
	for _caede, _ccdb := range _cdbc.AnimEffect {
		if _befce := _ccdb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063t\u005b\u0025\u0064\u005d", path, _caede)); _befce != nil {
			return _befce
		}
	}
	for _fdcad, _bbgcd := range _cdbc.AnimMotion {
		if _efdaa := _bbgcd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _fdcad)); _efdaa != nil {
			return _efdaa
		}
	}
	for _gceb, _cbfgg := range _cdbc.AnimRot {
		if _faaag := _cbfgg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0052\u006ft\u005b\u0025\u0064\u005d", path, _gceb)); _faaag != nil {
			return _faaag
		}
	}
	for _ebfgd, _gdabe := range _cdbc.AnimScale {
		if _ggga := _gdabe.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0041\u006e\u0069m\u0053\u0063\u0061\u006c\u0065\u005b\u0025\u0064\u005d", path, _ebfgd)); _ggga != nil {
			return _ggga
		}
	}
	for _acdeg, _gggbd := range _cdbc.Cmd {
		if _ggec := _gggbd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u006d\u0064\u005b\u0025\u0064\u005d", path, _acdeg)); _ggec != nil {
			return _ggec
		}
	}
	for _ggdb, _acfad := range _cdbc.Set {
		if _aadea := _acfad.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _ggdb)); _aadea != nil {
			return _aadea
		}
	}
	for _eebac, _ecbge := range _cdbc.Audio {
		if _cbeea := _ecbge.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fA\u0075\u0064\u0069\u006f\u005b\u0025\u0064\u005d", path, _eebac)); _cbeea != nil {
			return _cbeea
		}
	}
	for _gcgcf, _abdcgg := range _cdbc.Video {
		if _aadc := _abdcgg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fV\u0069\u0064\u0065\u006f\u005b\u0025\u0064\u005d", path, _gcgcf)); _aadc != nil {
			return _aadc
		}
	}
	return nil
}

func (_dabf *CT_SlideTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _badc := range start.Attr {
		if _badc.Name.Local == "\u0073\u0070\u0064" {
			_dabf.SpdAttr.UnmarshalXMLAttr(_badc)
			continue
		}
		if _badc.Name.Local == "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b" {
			_fafd, _efeda := _f.ParseBool(_badc.Value)
			if _efeda != nil {
				return _efeda
			}
			_dabf.AdvClickAttr = &_fafd
			continue
		}
		if _badc.Name.Local == "\u0061\u0064\u0076T\u006d" {
			_bgfa, _afbg := _f.ParseUint(_badc.Value, 10, 32)
			if _afbg != nil {
				return _afbg
			}
			_gefbd := uint32(_bgfa)
			_dabf.AdvTmAttr = &_gefbd
			continue
		}
	}
_baeb:
	for {
		_badg, _ffbcb := d.Token()
		if _ffbcb != nil {
			return _ffbcb
		}
		switch _ggcac := _badg.(type) {
		case _b.StartElement:
			switch _ggcac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _efedf := d.DecodeElement(&_dabf.Choice.Blinds, &_ggcac); _efedf != nil {
					return _efedf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _ececb := d.DecodeElement(&_dabf.Choice.Checker, &_ggcac); _ececb != nil {
					return _ececb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _bfdd := d.DecodeElement(&_dabf.Choice.Circle, &_ggcac); _bfdd != nil {
					return _bfdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _gaged := d.DecodeElement(&_dabf.Choice.Dissolve, &_ggcac); _gaged != nil {
					return _gaged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _gfdb := d.DecodeElement(&_dabf.Choice.Comb, &_ggcac); _gfdb != nil {
					return _gfdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _efgda := d.DecodeElement(&_dabf.Choice.Cover, &_ggcac); _efgda != nil {
					return _efgda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _aafg := d.DecodeElement(&_dabf.Choice.Cut, &_ggcac); _aafg != nil {
					return _aafg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _deead := d.DecodeElement(&_dabf.Choice.Diamond, &_ggcac); _deead != nil {
					return _deead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _ccfbf := d.DecodeElement(&_dabf.Choice.Fade, &_ggcac); _ccfbf != nil {
					return _ccfbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _ggfa := d.DecodeElement(&_dabf.Choice.Newsflash, &_ggcac); _ggfa != nil {
					return _ggfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _gcda := d.DecodeElement(&_dabf.Choice.Plus, &_ggcac); _gcda != nil {
					return _gcda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _cdcg := d.DecodeElement(&_dabf.Choice.Pull, &_ggcac); _cdcg != nil {
					return _cdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _cgda := d.DecodeElement(&_dabf.Choice.Push, &_ggcac); _cgda != nil {
					return _cgda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _fcdbg := d.DecodeElement(&_dabf.Choice.Random, &_ggcac); _fcdbg != nil {
					return _fcdbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _cfgg := d.DecodeElement(&_dabf.Choice.RandomBar, &_ggcac); _cfgg != nil {
					return _cfgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _bdbbg := d.DecodeElement(&_dabf.Choice.Split, &_ggcac); _bdbbg != nil {
					return _bdbbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _ceabg := d.DecodeElement(&_dabf.Choice.Strips, &_ggcac); _ceabg != nil {
					return _ceabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _efbfc := d.DecodeElement(&_dabf.Choice.Wedge, &_ggcac); _efbfc != nil {
					return _efbfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _fegfc := d.DecodeElement(&_dabf.Choice.Wheel, &_ggcac); _fegfc != nil {
					return _fegfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _gefe := d.DecodeElement(&_dabf.Choice.Wipe, &_ggcac); _gefe != nil {
					return _gefe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_dabf.Choice = NewCT_SlideTransitionChoice()
				if _gdfe := d.DecodeElement(&_dabf.Choice.Zoom, &_ggcac); _gdfe != nil {
					return _gdfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}:
				_dabf.SndAc = NewCT_TransitionSoundAction()
				if _aabde := d.DecodeElement(_dabf.SndAc, &_ggcac); _aabde != nil {
					return _aabde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dabf.ExtLst = NewCT_ExtensionListModify()
				if _eaee := d.DecodeElement(_dabf.ExtLst, &_ggcac); _eaee != nil {
					return _eaee
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _ggcac.Name)
				if _eeccg := d.Skip(); _eeccg != nil {
					return _eeccg
				}
			}
		case _b.EndElement:
			break _baeb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomShow and its children, prefixing error messages with path
func (_babd *CT_CustomShow) ValidateWithPath(path string) error {
	if _cgfg := _babd.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _cgfg != nil {
		return _cgfg
	}
	if _babd.ExtLst != nil {
		if _dbad := _babd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbad != nil {
			return _dbad
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLShapeTargetElement and its children, prefixing error messages with path
func (_eggg *CT_TLShapeTargetElement) ValidateWithPath(path string) error {
	if _eggg.Bg != nil {
		if _abfbe := _eggg.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _abfbe != nil {
			return _abfbe
		}
	}
	if _eggg.SubSp != nil {
		if _fdfbg := _eggg.SubSp.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0053\u0070"); _fdfbg != nil {
			return _fdfbg
		}
	}
	if _eggg.OleChartEl != nil {
		if _ebafd := _eggg.OleChartEl.ValidateWithPath(path + "/\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"); _ebafd != nil {
			return _ebafd
		}
	}
	if _eggg.TxEl != nil {
		if _eggag := _eggg.TxEl.ValidateWithPath(path + "\u002f\u0054\u0078E\u006c"); _eggag != nil {
			return _eggag
		}
	}
	if _eggg.GraphicEl != nil {
		if _gbfbf := _eggg.GraphicEl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"); _gbfbf != nil {
			return _gbfbf
		}
	}
	return nil
}

func NewCT_SlideViewProperties() *CT_SlideViewProperties {
	_bfdg := &CT_SlideViewProperties{}
	_bfdg.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _bfdg
}

func (_eggcb ST_WebColorType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eggcb.String(), start)
}

// ValidateWithPath validates the CT_TLAnimVariant and its children, prefixing error messages with path
func (_gbda *CT_TLAnimVariant) ValidateWithPath(path string) error {
	if _gbda.BoolVal != nil {
		if _ccfgb := _gbda.BoolVal.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006c\u0056\u0061\u006c"); _ccfgb != nil {
			return _ccfgb
		}
	}
	if _gbda.IntVal != nil {
		if _ggfac := _gbda.IntVal.ValidateWithPath(path + "\u002fI\u006e\u0074\u0056\u0061\u006c"); _ggfac != nil {
			return _ggfac
		}
	}
	if _gbda.FltVal != nil {
		if _geebg := _gbda.FltVal.ValidateWithPath(path + "\u002fF\u006c\u0074\u0056\u0061\u006c"); _geebg != nil {
			return _geebg
		}
	}
	if _gbda.StrVal != nil {
		if _gdabg := _gbda.StrVal.ValidateWithPath(path + "\u002fS\u0074\u0072\u0056\u0061\u006c"); _gdabg != nil {
			return _gdabg
		}
	}
	if _gbda.ClrVal != nil {
		if _gagf := _gbda.ClrVal.ValidateWithPath(path + "\u002fC\u006c\u0072\u0056\u0061\u006c"); _gagf != nil {
			return _gagf
		}
	}
	return nil
}

// ST_TLTime is a union type
type ST_TLTime struct {
	Uint32              *uint32
	ST_TLTimeIndefinite ST_TLTimeIndefinite
}

type ST_TLAnimateMotionPathEditMode byte

func (_afgb *CT_SlideLayout) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afgb.MatchingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_afgb.MatchingNameAttr)})
	}
	if _afgb.TypeAttr != ST_SlideLayoutTypeUnset {
		_eafe, _fecb := _afgb.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _fecb != nil {
			return _fecb
		}
		start.Attr = append(start.Attr, _eafe)
	}
	if _afgb.PreserveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_afgb.PreserveAttr))})
	}
	if _afgb.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_afgb.UserDrawnAttr))})
	}
	if _afgb.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_afgb.ShowMasterSpAttr))})
	}
	if _afgb.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_afgb.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_afbf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_afgb.CSld, _afbf)
	if _afgb.ClrMapOvr != nil {
		_eccf := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_afgb.ClrMapOvr, _eccf)
	}
	if _afgb.Transition != nil {
		_gbcgc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_afgb.Transition, _gbcgc)
	}
	if _afgb.Timing != nil {
		_ddgag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_afgb.Timing, _ddgag)
	}
	if _afgb.Hf != nil {
		_bega := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_afgb.Hf, _bega)
	}
	if _afgb.ExtLst != nil {
		_dfce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afgb.ExtLst, _dfce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bacebf ST_TLBehaviorAccumulateType) String() string {
	switch _bacebf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}

func (_cegdd ST_PlaceholderSize) String() string {
	switch _cegdd {
	case 0:
		return ""
	case 1:
		return "\u0066\u0075\u006c\u006c"
	case 2:
		return "\u0068\u0061\u006c\u0066"
	case 3:
		return "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return ""
}

func (_abcb ST_PrintWhat) ValidateWithPath(path string) error {
	switch _abcb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abcb))
	}
	return nil
}

func (_dcdbe ST_TLTimeNodePresetClassType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcdbe.String(), start)
}

func (_fcdd *ST_TransitionEightDirectionType) ValidateWithPath(path string) error {
	_cecb := []string{}
	if _fcdd.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		_cecb = append(_cecb, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e\u0053\u0069\u0064\u0065\u0044i\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if _fcdd.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		_cecb = append(_cecb, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043\u006fr\u006ee\u0072\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if len(_cecb) > 1 {
		return _fd.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cecb)
	}
	return nil
}

func (_ggagf ST_PhotoAlbumLayout) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aecfg := _b.Attr{}
	_aecfg.Name = name
	switch _ggagf {
	case ST_PhotoAlbumLayoutUnset:
		_aecfg.Value = ""
	case ST_PhotoAlbumLayoutFitToSlide:
		_aecfg.Value = "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case ST_PhotoAlbumLayout1pic:
		_aecfg.Value = "\u0031\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout2pic:
		_aecfg.Value = "\u0032\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout4pic:
		_aecfg.Value = "\u0034\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout1picTitle:
		_aecfg.Value = "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout2picTitle:
		_aecfg.Value = "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout4picTitle:
		_aecfg.Value = "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return _aecfg, nil
}

func (_acga *ST_TLBehaviorAdditiveType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfebf, _ccge := d.Token()
	if _ccge != nil {
		return _ccge
	}
	if _bebeb, _degd := _bfebf.(_b.EndElement); _degd && _bebeb.Name == start.Name {
		*_acga = 1
		return nil
	}
	if _fbccf, _fffcb := _bfebf.(_b.CharData); !_fffcb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfebf)
	} else {
		switch string(_fbccf) {
		case "":
			*_acga = 0
		case "\u0062\u0061\u0073\u0065":
			*_acga = 1
		case "\u0073\u0075\u006d":
			*_acga = 2
		case "\u0072\u0065\u0070\u006c":
			*_acga = 3
		case "\u006d\u0075\u006c\u0074":
			*_acga = 4
		case "\u006e\u006f\u006e\u0065":
			*_acga = 5
		}
	}
	_bfebf, _ccge = d.Token()
	if _ccge != nil {
		return _ccge
	}
	if _dggbe, _eabge := _bfebf.(_b.EndElement); _eabge && _dggbe.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfebf)
}

const (
	ST_PlaceholderTypeUnset    ST_PlaceholderType = 0
	ST_PlaceholderTypeTitle    ST_PlaceholderType = 1
	ST_PlaceholderTypeBody     ST_PlaceholderType = 2
	ST_PlaceholderTypeCtrTitle ST_PlaceholderType = 3
	ST_PlaceholderTypeSubTitle ST_PlaceholderType = 4
	ST_PlaceholderTypeDt       ST_PlaceholderType = 5
	ST_PlaceholderTypeSldNum   ST_PlaceholderType = 6
	ST_PlaceholderTypeFtr      ST_PlaceholderType = 7
	ST_PlaceholderTypeHdr      ST_PlaceholderType = 8
	ST_PlaceholderTypeObj      ST_PlaceholderType = 9
	ST_PlaceholderTypeChart    ST_PlaceholderType = 10
	ST_PlaceholderTypeTbl      ST_PlaceholderType = 11
	ST_PlaceholderTypeClipArt  ST_PlaceholderType = 12
	ST_PlaceholderTypeDgm      ST_PlaceholderType = 13
	ST_PlaceholderTypeMedia    ST_PlaceholderType = 14
	ST_PlaceholderTypeSldImg   ST_PlaceholderType = 15
	ST_PlaceholderTypePic      ST_PlaceholderType = 16
)

func (_fggba ST_PlaceholderType) Validate() error { return _fggba.ValidateWithPath("") }

// ValidateWithPath validates the SldLayout and its children, prefixing error messages with path
func (_gcag *SldLayout) ValidateWithPath(path string) error {
	if _cfgba := _gcag.CT_SlideLayout.ValidateWithPath(path); _cfgba != nil {
		return _cfgba
	}
	return nil
}

type CT_SlideMasterIdList struct {

	// Slide Master ID
	SldMasterId []*CT_SlideMasterIdListEntry
}

func (_dfeda *ST_TransitionSpeed) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddcbba, _fgegf := d.Token()
	if _fgegf != nil {
		return _fgegf
	}
	if _dcfe, _effbec := _ddcbba.(_b.EndElement); _effbec && _dcfe.Name == start.Name {
		*_dfeda = 1
		return nil
	}
	if _fbad, _eeebc := _ddcbba.(_b.CharData); !_eeebc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddcbba)
	} else {
		switch string(_fbad) {
		case "":
			*_dfeda = 0
		case "\u0073\u006c\u006f\u0077":
			*_dfeda = 1
		case "\u006d\u0065\u0064":
			*_dfeda = 2
		case "\u0066\u0061\u0073\u0074":
			*_dfeda = 3
		}
	}
	_ddcbba, _fgegf = d.Token()
	if _fgegf != nil {
		return _fgegf
	}
	if _eceb, _feffb := _ddcbba.(_b.EndElement); _feffb && _eceb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddcbba)
}

// ValidateWithPath validates the Notes and its children, prefixing error messages with path
func (_caabg *Notes) ValidateWithPath(path string) error {
	if _aadaf := _caabg.CT_NotesSlide.ValidateWithPath(path); _aadaf != nil {
		return _aadaf
	}
	return nil
}

func (_bbadbac ST_TLBehaviorAdditiveType) Validate() error { return _bbadbac.ValidateWithPath("") }

func (_ffdda ST_TLTimeNodeFillType) String() string {
	switch _ffdda {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006d\u006f\u0076\u0065"
	case 2:
		return "\u0066\u0072\u0065\u0065\u007a\u0065"
	case 3:
		return "\u0068\u006f\u006c\u0064"
	case 4:
		return "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return ""
}

type CT_TLOleChartTargetElement struct {

	// Type
	TypeAttr ST_TLChartSubelementType

	// Level
	LvlAttr *uint32
}

// Validate validates the CT_ExtensionList and its children
func (_bbdd *CT_ExtensionList) Validate() error {
	return _bbdd.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

func NewEG_ExtensionList() *EG_ExtensionList { _fedfd := &EG_ExtensionList{}; return _fedfd }

// Validate validates the CT_NotesTextViewProperties and its children
func (_baagc *CT_NotesTextViewProperties) Validate() error {
	return _baagc.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

func (_fedag ST_TLParaBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fedag.String(), start)
}

func (_fffaa ST_TLTriggerEvent) String() string {
	switch _fffaa {
	case 0:
		return ""
	case 1:
		return "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case 2:
		return "\u006f\u006e\u0045n\u0064"
	case 3:
		return "\u0062\u0065\u0067i\u006e"
	case 4:
		return "\u0065\u006e\u0064"
	case 5:
		return "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case 6:
		return "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case 7:
		return "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case 8:
		return "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case 9:
		return "\u006f\u006e\u004e\u0065\u0078\u0074"
	case 10:
		return "\u006f\u006e\u0050\u0072\u0065\u0076"
	case 11:
		return "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return ""
}

// Validate validates the CT_TransitionStartSoundAction and its children
func (_eabea *CT_TransitionStartSoundAction) Validate() error {
	return _eabea.ValidateWithPath("\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e")
}

func (_dgcdc *CT_TransitionStartSoundAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgcdc.Snd = _bc.NewCT_EmbeddedWAVAudioFile()
	for _, _fagcbc := range start.Attr {
		if _fagcbc.Name.Local == "\u006c\u006f\u006f\u0070" {
			_adggc, _efcfd := _f.ParseBool(_fagcbc.Value)
			if _efcfd != nil {
				return _efcfd
			}
			_dgcdc.LoopAttr = &_adggc
			continue
		}
	}
_dcdfb:
	for {
		_cgcea, _cegdb := d.Token()
		if _cegdb != nil {
			return _cegdb
		}
		switch _bfeb := _cgcea.(type) {
		case _b.StartElement:
			switch _bfeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				if _bfdgf := d.DecodeElement(_dgcdc.Snd, &_bfeb); _bfdgf != nil {
					return _bfdgf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074a\u0072\u0074\u0053\u006f\u0075\u006ed\u0041\u0063t\u0069\u006fn\u0020%\u0076", _bfeb.Name)
				if _bgced := d.Skip(); _bgced != nil {
					return _bgced
				}
			}
		case _b.EndElement:
			break _dcdfb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesMaster and its children, prefixing error messages with path
func (_egge *CT_NotesMaster) ValidateWithPath(path string) error {
	if _eaca := _egge.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _eaca != nil {
		return _eaca
	}
	if _dabe := _egge.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _dabe != nil {
		return _dabe
	}
	if _egge.Hf != nil {
		if _gbdc := _egge.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _gbdc != nil {
			return _gbdc
		}
	}
	if _egge.NotesStyle != nil {
		if _gbbe := _egge.NotesStyle.ValidateWithPath(path + "/\u004e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"); _gbbe != nil {
			return _gbbe
		}
	}
	if _egge.ExtLst != nil {
		if _faefa := _egge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faefa != nil {
			return _faefa
		}
	}
	return nil
}

const (
	ST_PhotoAlbumFrameShapeUnset       ST_PhotoAlbumFrameShape = 0
	ST_PhotoAlbumFrameShapeFrameStyle1 ST_PhotoAlbumFrameShape = 1
	ST_PhotoAlbumFrameShapeFrameStyle2 ST_PhotoAlbumFrameShape = 2
	ST_PhotoAlbumFrameShapeFrameStyle3 ST_PhotoAlbumFrameShape = 3
	ST_PhotoAlbumFrameShapeFrameStyle4 ST_PhotoAlbumFrameShape = 4
	ST_PhotoAlbumFrameShapeFrameStyle5 ST_PhotoAlbumFrameShape = 5
	ST_PhotoAlbumFrameShapeFrameStyle6 ST_PhotoAlbumFrameShape = 6
	ST_PhotoAlbumFrameShapeFrameStyle7 ST_PhotoAlbumFrameShape = 7
)

func (_fdgfg *CT_OutlineViewSlideList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fdgfg.Sld != nil {
		_caddg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _fcfaf := range _fdgfg.Sld {
			e.EncodeElement(_fcfaf, _caddg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cgee *CT_OutlineViewSlideEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dead := range start.Attr {
		if _dead.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dead.Name.Local == "\u0069\u0064" || _dead.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dead.Name.Local == "\u0069\u0064" {
			_aggce, _gcfec := _dead.Value, error(nil)
			if _gcfec != nil {
				return _gcfec
			}
			_cgee.IdAttr = _aggce
			continue
		}
		if _dead.Name.Local == "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065" {
			_gfabd, _cdda := _f.ParseBool(_dead.Value)
			if _cdda != nil {
				return _cdda
			}
			_cgee.CollapseAttr = &_gfabd
			continue
		}
	}
	for {
		_gea, _bbdge := d.Token()
		if _bbdge != nil {
			return _fd.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004futl\u0069ne\u0056\u0069\u0065\u0077\u0053\u006c\u0069de\u0045\u006e\u0074\u0072\u0079\u003a\u0020%\u0073", _bbdge)
		}
		if _decb, _cgaa := _gea.(_b.EndElement); _cgaa && _decb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_WebProperties() *CT_WebProperties { _ecdce := &CT_WebProperties{}; return _ecdce }

func (_bfadc *ST_PhotoAlbumLayout) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afebd, _bede := d.Token()
	if _bede != nil {
		return _bede
	}
	if _adefc, _bbbcc := _afebd.(_b.EndElement); _bbbcc && _adefc.Name == start.Name {
		*_bfadc = 1
		return nil
	}
	if _aafaa, _adgaf := _afebd.(_b.CharData); !_adgaf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _afebd)
	} else {
		switch string(_aafaa) {
		case "":
			*_bfadc = 0
		case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
			*_bfadc = 1
		case "\u0031\u0070\u0069\u0063":
			*_bfadc = 2
		case "\u0032\u0070\u0069\u0063":
			*_bfadc = 3
		case "\u0034\u0070\u0069\u0063":
			*_bfadc = 4
		case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_bfadc = 5
		case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_bfadc = 6
		case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_bfadc = 7
		}
	}
	_afebd, _bede = d.Token()
	if _bede != nil {
		return _bede
	}
	if _dcdab, _bcca := _afebd.(_b.EndElement); _bcca && _dcdab.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _afebd)
}

func (_ebbg *CT_IndexRange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _ebbg.StAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ebbg.EndAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideMasterIdList and its children
func (_ddbcf *CT_SlideMasterIdList) Validate() error {
	return _ddbcf.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}

func (_edce *CT_ModifyVerifier) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edce.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.AlgorithmNameAttr)})
	}
	if _edce.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.HashValueAttr)})
	}
	if _edce.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.SaltValueAttr)})
	}
	if _edce.SpinValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.SpinValueAttr)})
	}
	if _edce.CryptProviderTypeAttr != _e.ST_CryptProvUnset {
		_dfcfa, _feea := _edce.CryptProviderTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065"})
		if _feea != nil {
			return _feea
		}
		start.Attr = append(start.Attr, _dfcfa)
	}
	if _edce.CryptAlgorithmClassAttr != _e.ST_AlgClassUnset {
		_aegab, _ebge := _edce.CryptAlgorithmClassAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073"})
		if _ebge != nil {
			return _ebge
		}
		start.Attr = append(start.Attr, _aegab)
	}
	if _edce.CryptAlgorithmTypeAttr != _e.ST_AlgTypeUnset {
		_ceed, _edac := _edce.CryptAlgorithmTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065"})
		if _edac != nil {
			return _edac
		}
		start.Attr = append(start.Attr, _ceed)
	}
	if _edce.CryptAlgorithmSidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.CryptAlgorithmSidAttr)})
	}
	if _edce.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.SpinCountAttr)})
	}
	if _edce.SaltDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.SaltDataAttr)})
	}
	if _edce.HashDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.HashDataAttr)})
	}
	if _edce.CryptProviderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.CryptProviderAttr)})
	}
	if _edce.AlgIdExtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.AlgIdExtAttr)})
	}
	if _edce.AlgIdExtSourceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.AlgIdExtSourceAttr)})
	}
	if _edce.CryptProviderTypeExtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.CryptProviderTypeExtAttr)})
	}
	if _edce.CryptProviderTypeExtSourceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_edce.CryptProviderTypeExtSourceAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TLDiagramBuildType byte

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_fdab *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _fbdaf := _fdab.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fbdaf != nil {
		return _fbdaf
	}
	if _gaaa := _fdab.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _gaaa != nil {
		return _gaaa
	}
	if _egaf := _fdab.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _egaf != nil {
		return _egaf
	}
	return nil
}

func (_deag *CT_SlideSyncProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfabdb := range start.Attr {
		if _gfabdb.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_fade, _bbeee := _gfabdb.Value, error(nil)
			if _bbeee != nil {
				return _bbeee
			}
			_deag.ServerSldIdAttr = _fade
			continue
		}
		if _gfabdb.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_aggd, _gaeda := ParseStdlibTime(_gfabdb.Value)
			if _gaeda != nil {
				return _gaeda
			}
			_deag.ServerSldModifiedTimeAttr = _aggd
			continue
		}
		if _gfabdb.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_cdcab, _cgaaf := ParseStdlibTime(_gfabdb.Value)
			if _cgaaf != nil {
				return _cgaaf
			}
			_deag.ClientInsertedTimeAttr = _cdcab
			continue
		}
	}
_cdadg:
	for {
		_bafcf, _ggad := d.Token()
		if _ggad != nil {
			return _ggad
		}
		switch _fdeb := _bafcf.(type) {
		case _b.StartElement:
			switch _fdeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deag.ExtLst = NewCT_ExtensionList()
				if _cggc := d.DecodeElement(_deag.ExtLst, &_fdeb); _cggc != nil {
					return _cggc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fdeb.Name)
				if _bgge := d.Skip(); _bgge != nil {
					return _bgge
				}
			}
		case _b.EndElement:
			break _cdadg
		case _b.CharData:
		}
	}
	return nil
}

func (_fbdaa *ST_PrintWhat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdggce, _bfcc := d.Token()
	if _bfcc != nil {
		return _bfcc
	}
	if _fbfcc, _baedd := _cdggce.(_b.EndElement); _baedd && _fbfcc.Name == start.Name {
		*_fbdaa = 1
		return nil
	}
	if _geagc, _dfegg := _cdggce.(_b.CharData); !_dfegg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdggce)
	} else {
		switch string(_geagc) {
		case "":
			*_fbdaa = 0
		case "\u0073\u006c\u0069\u0064\u0065\u0073":
			*_fbdaa = 1
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
			*_fbdaa = 2
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
			*_fbdaa = 3
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
			*_fbdaa = 4
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
			*_fbdaa = 5
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
			*_fbdaa = 6
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
			*_fbdaa = 7
		case "\u006e\u006f\u0074e\u0073":
			*_fbdaa = 8
		case "\u006fu\u0074\u006c\u0069\u006e\u0065":
			*_fbdaa = 9
		}
	}
	_cdggce, _bfcc = d.Token()
	if _bfcc != nil {
		return _bfcc
	}
	if _beeea, _ggbg := _cdggce.(_b.EndElement); _ggbg && _beeea.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdggce)
}

func NewCT_NotesMaster() *CT_NotesMaster {
	_agca := &CT_NotesMaster{}
	_agca.CSld = NewCT_CommonSlideData()
	_agca.ClrMap = _bc.NewCT_ColorMapping()
	return _agca
}

func (_caccf *CT_TLIterateIntervalTime) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfbbg := range start.Attr {
		if _dfbbg.Name.Local == "\u0076\u0061\u006c" {
			_ddbdec, _deagg := ParseUnionST_TLTime(_dfbbg.Value)
			if _deagg != nil {
				return _deagg
			}
			_caccf.ValAttr = _ddbdec
			continue
		}
	}
	for {
		_gggegb, _gagag := d.Token()
		if _gagag != nil {
			return _fd.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LIt\u0065ra\u0074\u0065\u0049\u006e\u0074\u0065\u0072va\u006c\u0054\u0069\u006d\u0065\u003a\u0020%\u0073", _gagag)
		}
		if _dceg, _abad := _gggegb.(_b.EndElement); _abad && _dceg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SlideRelationshipList and its children
func (_aaeeb *CT_SlideRelationshipList) Validate() error {
	return _aaeeb.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074")
}

func (_gffb *CT_CornerDirectionTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcf := range start.Attr {
		if _bcf.Name.Local == "\u0064\u0069\u0072" {
			_gffb.DirAttr.UnmarshalXMLAttr(_bcf)
			continue
		}
	}
	for {
		_bacb, _efd := d.Token()
		if _efd != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u006e\u0065\u0072\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006esi\u0074\u0069\u006fn\u003a \u0025\u0073", _efd)
		}
		if _dacg, _dcab := _bacb.(_b.EndElement); _dcab && _dacg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLGraphicalObjectBuild and its children, prefixing error messages with path
func (_ccfe *CT_TLGraphicalObjectBuild) ValidateWithPath(path string) error {
	if _ccfe.BldAsOne != nil {
		if _fdgeb := _ccfe.BldAsOne.ValidateWithPath(path + "\u002fB\u006c\u0064\u0041\u0073\u004f\u006ee"); _fdgeb != nil {
			return _fdgeb
		}
	}
	if _ccfe.BldSub != nil {
		if _aedf := _ccfe.BldSub.ValidateWithPath(path + "\u002fB\u006c\u0064\u0053\u0075\u0062"); _aedf != nil {
			return _aedf
		}
	}
	return nil
}

func NewNotesMaster() *NotesMaster {
	_abda := &NotesMaster{}
	_abda.CT_NotesMaster = *NewCT_NotesMaster()
	return _abda
}

const (
	ST_TLOleChartBuildTypeUnset      ST_TLOleChartBuildType = 0
	ST_TLOleChartBuildTypeAllAtOnce  ST_TLOleChartBuildType = 1
	ST_TLOleChartBuildTypeSeries     ST_TLOleChartBuildType = 2
	ST_TLOleChartBuildTypeCategory   ST_TLOleChartBuildType = 3
	ST_TLOleChartBuildTypeSeriesEl   ST_TLOleChartBuildType = 4
	ST_TLOleChartBuildTypeCategoryEl ST_TLOleChartBuildType = 5
)

func (_faabd *CT_Slide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_faabd.CSld = NewCT_CommonSlideData()
	for _, _bccfd := range start.Attr {
		if _bccfd.Name.Local == "\u0073\u0068\u006f\u0077" {
			_egege, _befdf := _f.ParseBool(_bccfd.Value)
			if _befdf != nil {
				return _befdf
			}
			_faabd.ShowAttr = &_egege
			continue
		}
		if _bccfd.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_dbbb, _gbceg := _f.ParseBool(_bccfd.Value)
			if _gbceg != nil {
				return _gbceg
			}
			_faabd.ShowMasterSpAttr = &_dbbb
			continue
		}
		if _bccfd.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_bfca, _eddf := _f.ParseBool(_bccfd.Value)
			if _eddf != nil {
				return _eddf
			}
			_faabd.ShowMasterPhAnimAttr = &_bfca
			continue
		}
	}
_dcgd:
	for {
		_fgcd, _ddcca := d.Token()
		if _ddcca != nil {
			return _ddcca
		}
		switch _gbbc := _fgcd.(type) {
		case _b.StartElement:
			switch _gbbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _dfbg := d.DecodeElement(_faabd.CSld, &_gbbc); _dfbg != nil {
					return _dfbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_faabd.ClrMapOvr = _bc.NewCT_ColorMappingOverride()
				if _defb := d.DecodeElement(_faabd.ClrMapOvr, &_gbbc); _defb != nil {
					return _defb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_faabd.Transition = NewCT_SlideTransition()
				if _bfcd := d.DecodeElement(_faabd.Transition, &_gbbc); _bfcd != nil {
					return _bfcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_faabd.Timing = NewCT_SlideTiming()
				if _efbba := d.DecodeElement(_faabd.Timing, &_gbbc); _efbba != nil {
					return _efbba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faabd.ExtLst = NewCT_ExtensionListModify()
				if _bddc := d.DecodeElement(_faabd.ExtLst, &_gbbc); _bddc != nil {
					return _bddc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0020\u0025\u0076", _gbbc.Name)
				if _cbfbc := d.Skip(); _cbfbc != nil {
					return _cbfbc
				}
			}
		case _b.EndElement:
			break _dcgd
		case _b.CharData:
		}
	}
	return nil
}

func (_dgcfd ST_PhotoAlbumFrameShape) Validate() error { return _dgcfd.ValidateWithPath("") }

func (_dddfg *CT_TLSetBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dddfg.CBhvr = NewCT_TLCommonBehaviorData()
_feaf:
	for {
		_bdfgec, _dgee := d.Token()
		if _dgee != nil {
			return _dgee
		}
		switch _edfad := _bdfgec.(type) {
		case _b.StartElement:
			switch _edfad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _dfeae := d.DecodeElement(_dddfg.CBhvr, &_edfad); _dfeae != nil {
					return _dfeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_dddfg.To = NewCT_TLAnimVariant()
				if _fbdb := d.DecodeElement(_dddfg.To, &_edfad); _fbdb != nil {
					return _fbdb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0065\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025v", _edfad.Name)
				if _bfbca := d.Skip(); _bfbca != nil {
					return _bfbca
				}
			}
		case _b.EndElement:
			break _feaf
		case _b.CharData:
		}
	}
	return nil
}

func (_fgfb ST_TLPreviousActionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cfdgdc := _b.Attr{}
	_cfdgdc.Name = name
	switch _fgfb {
	case ST_TLPreviousActionTypeUnset:
		_cfdgdc.Value = ""
	case ST_TLPreviousActionTypeNone:
		_cfdgdc.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLPreviousActionTypeSkipTimed:
		_cfdgdc.Value = "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return _cfdgdc, nil
}

type CT_TLCommonTimeNodeData struct {

	// ID
	IdAttr *uint32

	// Preset ID
	PresetIDAttr *int32

	// Preset Types
	PresetClassAttr ST_TLTimeNodePresetClassType

	// Preset SubType
	PresetSubtypeAttr *int32

	// Duration
	DurAttr *ST_TLTime

	// Repeat Count
	RepeatCountAttr *ST_TLTime

	// Repeat Duration
	RepeatDurAttr *ST_TLTime

	// Speed
	SpdAttr *_bc.ST_Percentage

	// Acceleration
	AccelAttr *_bc.ST_PositiveFixedPercentage

	// Deceleration
	DecelAttr *_bc.ST_PositiveFixedPercentage

	// Auto Reverse
	AutoRevAttr *bool

	// Restart
	RestartAttr ST_TLTimeNodeRestartType

	// Fill
	FillAttr ST_TLTimeNodeFillType

	// Synchronization Behavior
	SyncBehaviorAttr ST_TLTimeNodeSyncType

	// Time Filter
	TmFilterAttr *string

	// Event Filter
	EvtFilterAttr *string

	// Display
	DisplayAttr *bool

	// Master Relation
	MasterRelAttr ST_TLTimeNodeMasterRelation

	// Build level
	BldLvlAttr *int32

	// Group ID
	GrpIdAttr *uint32

	// After Effect
	AfterEffectAttr *bool

	// Node Type
	NodeTypeAttr ST_TLTimeNodeType

	// Node Placeholder
	NodePhAttr *bool

	// Start Conditions List
	StCondLst *CT_TLTimeConditionList

	// End Conditions List
	EndCondLst *CT_TLTimeConditionList

	// EndSync
	EndSync *CT_TLTimeCondition

	// Iterate
	Iterate *CT_TLIterateData

	// Children Time Node List
	ChildTnLst *CT_TimeNodeList

	// Sub-TimeNodes List
	SubTnLst *CT_TimeNodeList
}

func (_acdgg ST_SlideSizeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fegcab := _b.Attr{}
	_fegcab.Name = name
	switch _acdgg {
	case ST_SlideSizeTypeUnset:
		_fegcab.Value = ""
	case ST_SlideSizeTypeScreen4x3:
		_fegcab.Value = "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case ST_SlideSizeTypeLetter:
		_fegcab.Value = "\u006c\u0065\u0074\u0074\u0065\u0072"
	case ST_SlideSizeTypeA4:
		_fegcab.Value = "\u0041\u0034"
	case ST_SlideSizeType35mm:
		_fegcab.Value = "\u0033\u0035\u006d\u006d"
	case ST_SlideSizeTypeOverhead:
		_fegcab.Value = "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case ST_SlideSizeTypeBanner:
		_fegcab.Value = "\u0062\u0061\u006e\u006e\u0065\u0072"
	case ST_SlideSizeTypeCustom:
		_fegcab.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	case ST_SlideSizeTypeLedger:
		_fegcab.Value = "\u006c\u0065\u0064\u0067\u0065\u0072"
	case ST_SlideSizeTypeA3:
		_fegcab.Value = "\u0041\u0033"
	case ST_SlideSizeTypeB4ISO:
		_fegcab.Value = "\u0042\u0034\u0049S\u004f"
	case ST_SlideSizeTypeB5ISO:
		_fegcab.Value = "\u0042\u0035\u0049S\u004f"
	case ST_SlideSizeTypeB4JIS:
		_fegcab.Value = "\u0042\u0034\u004aI\u0053"
	case ST_SlideSizeTypeB5JIS:
		_fegcab.Value = "\u0042\u0035\u004aI\u0053"
	case ST_SlideSizeTypeHagakiCard:
		_fegcab.Value = "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case ST_SlideSizeTypeScreen16x9:
		_fegcab.Value = "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case ST_SlideSizeTypeScreen16x10:
		_fegcab.Value = "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return _fegcab, nil
}

func (_daege *CT_OleObjectEmbed) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daege.FollowColorSchemeAttr != ST_OleObjectFollowColorSchemeUnset {
		_gegf, _ccdf := _daege.FollowColorSchemeAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065"})
		if _ccdf != nil {
			return _ccdf
		}
		start.Attr = append(start.Attr, _gegf)
	}
	e.EncodeToken(start)
	if _daege.ExtLst != nil {
		_bedc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_daege.ExtLst, _bedc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HandoutMasterIdListEntry and its children
func (_bcdc *CT_HandoutMasterIdListEntry) Validate() error {
	return _bcdc.ValidateWithPath("C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079")
}

func (_fbec *CT_SlideIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fbec.SldId != nil {
		_gcgc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0049\u0064"}}
		for _, _gcbc := range _fbec.SldId {
			e.EncodeElement(_gcbc, _gcgc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bbgf *ST_IterateType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bbgf = 0
	case "\u0065\u006c":
		*_bbgf = 1
	case "\u0077\u0064":
		*_bbgf = 2
	case "\u006c\u0074":
		*_bbgf = 3
	}
	return nil
}

// Validate validates the NotesMaster and its children
func (_edfbd *NotesMaster) Validate() error {
	return _edfbd.ValidateWithPath("N\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072")
}

type CT_SlideViewProperties struct {
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_geag *CT_TLTimeAnimateValue) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeaf := range start.Attr {
		if _aeaf.Name.Local == "\u0074\u006d" {
			_dgcbe, _bbadd := ParseUnionST_TLTimeAnimateValueTime(_aeaf.Value)
			if _bbadd != nil {
				return _bbadd
			}
			_geag.TmAttr = &_dgcbe
			continue
		}
		if _aeaf.Name.Local == "\u0066\u006d\u006c\u0061" {
			_bbga, _eaeg := _aeaf.Value, error(nil)
			if _eaeg != nil {
				return _eaeg
			}
			_geag.FmlaAttr = &_bbga
			continue
		}
	}
_cdfbf:
	for {
		_bfgcf, _ddff := d.Token()
		if _ddff != nil {
			return _ddff
		}
		switch _cebdd := _bfgcf.(type) {
		case _b.StartElement:
			switch _cebdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				_geag.Val = NewCT_TLAnimVariant()
				if _eedfe := d.DecodeElement(_geag.Val, &_cebdd); _eedfe != nil {
					return _eedfe
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _cebdd.Name)
				if _dcacb := d.Skip(); _dcacb != nil {
					return _dcacb
				}
			}
		case _b.EndElement:
			break _cdfbf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariantIntegerVal and its children
func (_gcfad *CT_TLAnimVariantIntegerVal) Validate() error {
	return _gcfad.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c")
}

const (
	ST_TLTimeNodeMasterRelationUnset     ST_TLTimeNodeMasterRelation = 0
	ST_TLTimeNodeMasterRelationSameClick ST_TLTimeNodeMasterRelation = 1
	ST_TLTimeNodeMasterRelationLastClick ST_TLTimeNodeMasterRelation = 2
	ST_TLTimeNodeMasterRelationNextClick ST_TLTimeNodeMasterRelation = 3
)

func (_daae *CT_NormalViewPortion) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _accd := range start.Attr {
		if _accd.Name.Local == "\u0073\u007a" {
			_adcf, _eeeeb := ParseUnionST_PositiveFixedPercentage(_accd.Value)
			if _eeeeb != nil {
				return _eeeeb
			}
			_daae.SzAttr = _adcf
			continue
		}
		if _accd.Name.Local == "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074" {
			_cged, _bcge := _f.ParseBool(_accd.Value)
			if _bcge != nil {
				return _bcge
			}
			_daae.AutoAdjustAttr = &_cged
			continue
		}
	}
	for {
		_egda, _bged := d.Token()
		if _bged != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006da\u006cV\u0069\u0065\u0077\u0050\u006f\u0072\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _bged)
		}
		if _fbga, _fcffb := _egda.(_b.EndElement); _fcffb && _fbga.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TLTimeNodeMasterRelation byte

// Validate validates the CT_TLPoint and its children
func (_efdcd *CT_TLPoint) Validate() error {
	return _efdcd.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074")
}

const (
	ST_OleObjectFollowColorSchemeUnset             ST_OleObjectFollowColorScheme = 0
	ST_OleObjectFollowColorSchemeNone              ST_OleObjectFollowColorScheme = 1
	ST_OleObjectFollowColorSchemeFull              ST_OleObjectFollowColorScheme = 2
	ST_OleObjectFollowColorSchemeTextAndBackground ST_OleObjectFollowColorScheme = 3
)

// Validate validates the CT_OleObject and its children
func (_aefb *CT_OleObject) Validate() error {
	return _aefb.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

func (_aaffd ST_PrintWhat) String() string {
	switch _aaffd {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u0069\u0064\u0065\u0073"
	case 2:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case 3:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case 4:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case 5:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case 6:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case 7:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case 8:
		return "\u006e\u006f\u0074e\u0073"
	case 9:
		return "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return ""
}

func (_aagfb *ST_TLChartSubelementType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcagf, _cdagd := d.Token()
	if _cdagd != nil {
		return _cdagd
	}
	if _dgccf, _dcgee := _gcagf.(_b.EndElement); _dcgee && _dgccf.Name == start.Name {
		*_aagfb = 1
		return nil
	}
	if _ggde, _dbgcg := _gcagf.(_b.CharData); !_dbgcg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcagf)
	} else {
		switch string(_ggde) {
		case "":
			*_aagfb = 0
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_aagfb = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_aagfb = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_aagfb = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_aagfb = 4
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_aagfb = 5
		}
	}
	_gcagf, _cdagd = d.Token()
	if _cdagd != nil {
		return _cdagd
	}
	if _ddegb, _daefc := _gcagf.(_b.EndElement); _daefc && _ddegb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcagf)
}

func (_ccda *CT_OutlineViewSlideList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gbfaa:
	for {
		_cbbfd, _baagf := d.Token()
		if _baagf != nil {
			return _baagf
		}
		switch _cdgd := _cbbfd.(type) {
		case _b.StartElement:
			switch _cdgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_aaac := NewCT_OutlineViewSlideEntry()
				if _gggc := d.DecodeElement(_aaac, &_cdgd); _gggc != nil {
					return _gggc
				}
				_ccda.Sld = append(_ccda.Sld, _aaac)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069e\u0077\u0053\u006c\u0069\u0064\u0065L\u0069\u0073\u0074 \u0025\u0076", _cdgd.Name)
				if _efcde := d.Skip(); _efcde != nil {
					return _efcde
				}
			}
		case _b.EndElement:
			break _gbfaa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_ebgd *CT_Picture) ValidateWithPath(path string) error {
	if _beff := _ebgd.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _beff != nil {
		return _beff
	}
	if _facc := _ebgd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _facc != nil {
		return _facc
	}
	if _edge := _ebgd.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _edge != nil {
		return _edge
	}
	if _ebgd.Style != nil {
		if _geffe := _ebgd.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _geffe != nil {
			return _geffe
		}
	}
	if _ebgd.ExtLst != nil {
		if _bafga := _ebgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bafga != nil {
			return _bafga
		}
	}
	return nil
}

func (_addgbee ST_TLAnimateColorDirection) String() string {
	switch _addgbee {
	case 0:
		return ""
	case 1:
		return "\u0063\u0077"
	case 2:
		return "\u0063\u0063\u0077"
	}
	return ""
}

// Validate validates the CT_SlideTransitionChoice and its children
func (_cggca *CT_SlideTransitionChoice) Validate() error {
	return _cggca.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073i\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_eaccc *CT_ShowInfoKiosk) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaccc.RestartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_eaccc.RestartAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_agbgeb *ST_PlaceholderType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_agbgeb = 0
	case "\u0074\u0069\u0074l\u0065":
		*_agbgeb = 1
	case "\u0062\u006f\u0064\u0079":
		*_agbgeb = 2
	case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
		*_agbgeb = 3
	case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
		*_agbgeb = 4
	case "\u0064\u0074":
		*_agbgeb = 5
	case "\u0073\u006c\u0064\u004e\u0075\u006d":
		*_agbgeb = 6
	case "\u0066\u0074\u0072":
		*_agbgeb = 7
	case "\u0068\u0064\u0072":
		*_agbgeb = 8
	case "\u006f\u0062\u006a":
		*_agbgeb = 9
	case "\u0063\u0068\u0061r\u0074":
		*_agbgeb = 10
	case "\u0074\u0062\u006c":
		*_agbgeb = 11
	case "\u0063l\u0069\u0070\u0041\u0072\u0074":
		*_agbgeb = 12
	case "\u0064\u0067\u006d":
		*_agbgeb = 13
	case "\u006d\u0065\u0064i\u0061":
		*_agbgeb = 14
	case "\u0073\u006c\u0064\u0049\u006d\u0067":
		*_agbgeb = 15
	case "\u0070\u0069\u0063":
		*_agbgeb = 16
	}
	return nil
}

const (
	ST_TLTimeIndefiniteUnset      ST_TLTimeIndefinite = 0
	ST_TLTimeIndefiniteIndefinite ST_TLTimeIndefinite = 1
)

func (_acee *CT_CommonSlideViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acee.SnapToGridAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_acee.SnapToGridAttr))})
	}
	if _acee.SnapToObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_acee.SnapToObjectsAttr))})
	}
	if _acee.ShowGuidesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _fecgg(*_acee.ShowGuidesAttr))})
	}
	e.EncodeToken(start)
	_bdc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_acee.CViewPr, _bdc)
	if _acee.GuideLst != nil {
		_gdb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_acee.GuideLst, _gdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gee *CT_CustomShowList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gee.CustShow != nil {
		_efcg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		for _, _bbf := range _gee.CustShow {
			e.EncodeElement(_bbf, _efcg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dfacd *ST_TLTimeIndefinite) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddcgg, _dacfd := d.Token()
	if _dacfd != nil {
		return _dacfd
	}
	if _effbee, _ggebd := _ddcgg.(_b.EndElement); _ggebd && _effbee.Name == start.Name {
		*_dfacd = 1
		return nil
	}
	if _dgfgb, _gbabe := _ddcgg.(_b.CharData); !_gbabe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddcgg)
	} else {
		switch string(_dgfgb) {
		case "":
			*_dfacd = 0
		case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
			*_dfacd = 1
		}
	}
	_ddcgg, _dacfd = d.Token()
	if _dacfd != nil {
		return _dacfd
	}
	if _cddfa, _gfgbfa := _ddcgg.(_b.EndElement); _gfgbfa && _cddfa.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddcgg)
}

func (_gdafc *ST_TLTime) Validate() error { return _gdafc.ValidateWithPath("") }

func (_cdfa *CT_SlideMasterTextStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cdfa.TitleStyle != nil {
		_dfdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074i\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cdfa.TitleStyle, _dfdc)
	}
	if _cdfa.BodyStyle != nil {
		_gcabc := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0062\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cdfa.BodyStyle, _gcabc)
	}
	if _cdfa.OtherStyle != nil {
		_cfdbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006ft\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cdfa.OtherStyle, _cfdbg)
	}
	if _cdfa.ExtLst != nil {
		_cfec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdfa.ExtLst, _cfec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GuideList struct {

	// A Guide
	Guide []*CT_Guide
}

func (_acec *CT_CommentAuthorList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _acec.CmAuthor != nil {
		_gfag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}}
		for _, _afce := range _acec.CmAuthor {
			e.EncodeElement(_afce, _gfag)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_deegc ST_TLAnimateColorSpace) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_deegc.String(), start)
}

func (_gbae *CT_Control) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdf := range start.Attr {
		if _gdf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gdf.Name.Local == "\u0069\u0064" {
			_cbe, _bed := _gdf.Value, error(nil)
			if _bed != nil {
				return _bed
			}
			_gbae.IdAttr = &_cbe
			continue
		}
		if _gdf.Name.Local == "\u0073\u0070\u0069\u0064" {
			_eef, _eacf := _gdf.Value, error(nil)
			if _eacf != nil {
				return _eacf
			}
			_gbae.SpidAttr = &_eef
			continue
		}
		if _gdf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ffbd, _ebg := _gdf.Value, error(nil)
			if _ebg != nil {
				return _ebg
			}
			_gbae.NameAttr = &_ffbd
			continue
		}
		if _gdf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_fbbf, _aab := _f.ParseBool(_gdf.Value)
			if _aab != nil {
				return _aab
			}
			_gbae.ShowAsIconAttr = &_fbbf
			continue
		}
		if _gdf.Name.Local == "\u0069\u006d\u0067\u0057" {
			_gcfe, _bgb := _f.ParseInt(_gdf.Value, 10, 32)
			if _bgb != nil {
				return _bgb
			}
			_dgaa := int32(_gcfe)
			_gbae.ImgWAttr = &_dgaa
			continue
		}
		if _gdf.Name.Local == "\u0069\u006d\u0067\u0048" {
			_effe, _fcf := _f.ParseInt(_gdf.Value, 10, 32)
			if _fcf != nil {
				return _fcf
			}
			_gegd := int32(_effe)
			_gbae.ImgHAttr = &_gegd
			continue
		}
	}
_gbaa:
	for {
		_age, _agef := d.Token()
		if _agef != nil {
			return _agef
		}
		switch _defc := _age.(type) {
		case _b.StartElement:
			switch _defc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbae.ExtLst = NewCT_ExtensionList()
				if _agg := d.DecodeElement(_gbae.ExtLst, &_defc); _agg != nil {
					return _agg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gbae.Pic = NewCT_Picture()
				if _dgad := d.DecodeElement(_gbae.Pic, &_defc); _dgad != nil {
					return _dgad
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _defc.Name)
				if _ggag := d.Skip(); _ggag != nil {
					return _ggag
				}
			}
		case _b.EndElement:
			break _gbaa
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLTemplate and its children
func (_ccgfd *CT_TLTemplate) Validate() error {
	return _ccgfd.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065")
}

// ValidateWithPath validates the CT_ControlList and its children, prefixing error messages with path
func (_aeb *CT_ControlList) ValidateWithPath(path string) error {
	for _abgg, _febg := range _aeb.Control {
		if _gege := _febg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _abgg)); _gege != nil {
			return _gege
		}
	}
	return nil
}

func (_bec *CT_ExtensionListModify) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbfa := range start.Attr {
		if _fbfa.Name.Local == "\u006d\u006f\u0064" {
			_faed, _agff := _f.ParseBool(_fbfa.Value)
			if _agff != nil {
				return _agff
			}
			_bec.ModAttr = &_faed
			continue
		}
	}
_eaae:
	for {
		_aad, _gdc := d.Token()
		if _gdc != nil {
			return _gdc
		}
		switch _edgf := _aad.(type) {
		case _b.StartElement:
			switch _edgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_bbge := NewCT_Extension()
				if _gdga := d.DecodeElement(_bbge, &_edgf); _gdga != nil {
					return _gdga
				}
				_bec.Ext = append(_bec.Ext, _bbge)
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0045\u0078\u0074\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069\u0066\u0079\u0020\u0025\u0076", _edgf.Name)
				if _babf := d.Skip(); _babf != nil {
					return _babf
				}
			}
		case _b.EndElement:
			break _eaae
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLAnimVariantIntegerVal struct {

	// Value
	ValAttr int32
}

func (_dgebg ST_TLChartSubelementType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dgebg.String(), start)
}

type CT_GroupShapeNonVisual struct {

	// Non-visual Drawing Properties
	CNvPr *_bc.CT_NonVisualDrawingProps

	// Non-Visual Group Shape Drawing Properties
	CNvGrpSpPr *_bc.CT_NonVisualGroupDrawingShapeProps

	// Non-Visual Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_aeecc *CT_PhotoAlbum) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _beea := range start.Attr {
		if _beea.Name.Local == "\u0062\u0077" {
			_ffgdg, _ccc := _f.ParseBool(_beea.Value)
			if _ccc != nil {
				return _ccc
			}
			_aeecc.BwAttr = &_ffgdg
			continue
		}
		if _beea.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073" {
			_edea, _gaaea := _f.ParseBool(_beea.Value)
			if _gaaea != nil {
				return _gaaea
			}
			_aeecc.ShowCaptionsAttr = &_edea
			continue
		}
		if _beea.Name.Local == "\u006c\u0061\u0079\u006f\u0075\u0074" {
			_aeecc.LayoutAttr.UnmarshalXMLAttr(_beea)
			continue
		}
		if _beea.Name.Local == "\u0066\u0072\u0061m\u0065" {
			_aeecc.FrameAttr.UnmarshalXMLAttr(_beea)
			continue
		}
	}
_cffa:
	for {
		_afde, _ggdf := d.Token()
		if _ggdf != nil {
			return _ggdf
		}
		switch _cdee := _afde.(type) {
		case _b.StartElement:
			switch _cdee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeecc.ExtLst = NewCT_ExtensionList()
				if _fcbc := d.DecodeElement(_aeecc.ExtLst, &_cdee); _fcbc != nil {
					return _fcbc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d \u0025\u0076", _cdee.Name)
				if _fdgdb := d.Skip(); _fdgdb != nil {
					return _fdgdb
				}
			}
		case _b.EndElement:
			break _cffa
		case _b.CharData:
		}
	}
	return nil
}

func (_dfc *CT_BuildList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dfc.BldP != nil {
		_dfd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0050"}}
		for _, _fdg := range _dfc.BldP {
			e.EncodeElement(_fdg, _dfd)
		}
	}
	if _dfc.BldDgm != nil {
		_ffbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		for _, _eab := range _dfc.BldDgm {
			e.EncodeElement(_eab, _ffbb)
		}
	}
	if _dfc.BldOleChart != nil {
		_fee := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}}
		for _, _cbg := range _dfc.BldOleChart {
			e.EncodeElement(_cbg, _fee)
		}
	}
	if _dfc.BldGraphic != nil {
		_bde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062l\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}}
		for _, _gecd := range _dfc.BldGraphic {
			e.EncodeElement(_gecd, _bde)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewPresentationPr() *PresentationPr {
	_cceffb := &PresentationPr{}
	_cceffb.CT_PresentationProperties = *NewCT_PresentationProperties()
	return _cceffb
}

// Validate validates the CT_SlideIdList and its children
func (_fdga *CT_SlideIdList) Validate() error {
	return _fdga.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074")
}

func NewCT_TLByRgbColorTransform() *CT_TLByRgbColorTransform {
	_fddeb := &CT_TLByRgbColorTransform{}
	return _fddeb
}

type CT_OleObjectEmbed struct {

	// Color Scheme Properties for Embedded object
	FollowColorSchemeAttr ST_OleObjectFollowColorScheme
	ExtLst                *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLSubShapeId and its children, prefixing error messages with path
func (_ebgef *CT_TLSubShapeId) ValidateWithPath(path string) error { return nil }

func (_bebda *CT_TLTimeCondition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bebda.EvtAttr != ST_TLTriggerEventUnset {
		_dddgd, _cdcabd := _bebda.EvtAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0076\u0074"})
		if _cdcabd != nil {
			return _cdcabd
		}
		start.Attr = append(start.Attr, _dddgd)
	}
	if _bebda.DelayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006ca\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_bebda.DelayAttr)})
	}
	e.EncodeToken(start)
	if _bebda.TgtEl != nil {
		_eacfb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
		e.EncodeElement(_bebda.TgtEl, _eacfb)
	}
	if _bebda.Tn != nil {
		_edgg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006e"}}
		e.EncodeElement(_bebda.Tn, _edgg)
	}
	if _bebda.Rtn != nil {
		_ggbba := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072t\u006e"}}
		e.EncodeElement(_bebda.Rtn, _ggbba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_HeaderFooter() *CT_HeaderFooter { _aega := &CT_HeaderFooter{}; return _aega }

type CT_TLBuildDiagram struct {

	// Diagram Build Types
	BldAttr      ST_TLDiagramBuildType
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

type AG_Ole struct {
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func (_gcafb *ST_TLAnimateMotionPathEditMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfca, _gfgagf := d.Token()
	if _gfgagf != nil {
		return _gfgagf
	}
	if _dccb, _gbdfg := _cfca.(_b.EndElement); _gbdfg && _dccb.Name == start.Name {
		*_gcafb = 1
		return nil
	}
	if _bdecf, _debac := _cfca.(_b.CharData); !_debac {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfca)
	} else {
		switch string(_bdecf) {
		case "":
			*_gcafb = 0
		case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
			*_gcafb = 1
		case "\u0066\u0069\u0078e\u0064":
			*_gcafb = 2
		}
	}
	_cfca, _gfgagf = d.Token()
	if _gfgagf != nil {
		return _gfgagf
	}
	if _ecgge, _fcce := _cfca.(_b.EndElement); _fcce && _ecgge.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfca)
}

// Validate validates the CT_TransitionSoundAction and its children
func (_fgbdee *CT_TransitionSoundAction) Validate() error {
	return _fgbdee.ValidateWithPath("\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e")
}

func (_cgec *ST_SplitterBarState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efdbd, _aacc := d.Token()
	if _aacc != nil {
		return _aacc
	}
	if _fgaac, _gdbfef := _efdbd.(_b.EndElement); _gdbfef && _fgaac.Name == start.Name {
		*_cgec = 1
		return nil
	}
	if _fdgegf, _cgacba := _efdbd.(_b.CharData); !_cgacba {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efdbd)
	} else {
		switch string(_fdgegf) {
		case "":
			*_cgec = 0
		case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
			*_cgec = 1
		case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
			*_cgec = 2
		case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
			*_cgec = 3
		}
	}
	_efdbd, _aacc = d.Token()
	if _aacc != nil {
		return _aacc
	}
	if _afdfd, _gebfc := _efdbd.(_b.EndElement); _gebfc && _afdfd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efdbd)
}

type ST_TLBehaviorTransformType byte

type CT_OutlineViewSlideEntry struct {
	IdAttr string

	// Collapsed
	CollapseAttr *bool
}

// ST_TLTimeAnimateValueTime is a union type
type ST_TLTimeAnimateValueTime struct {
	ST_PositiveFixedPercentage *_bc.ST_PositiveFixedPercentage
	ST_TLTimeIndefinite        ST_TLTimeIndefinite
}

// Validate validates the CT_TLTemplateList and its children
func (_bbgg *CT_TLTemplateList) Validate() error {
	return _bbgg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074")
}

func NewCT_OutlineViewSlideEntry() *CT_OutlineViewSlideEntry {
	_gcea := &CT_OutlineViewSlideEntry{}
	return _gcea
}

func (_cbfc ST_TLOleChartBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbfc.String(), start)
}

func init() {
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_SideDirectionTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e", NewCT_CornerDirectionTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e", NewCT_EightDirectionTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e", NewCT_OrientationTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_InOutTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_OptionalBlackTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SplitTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_WheelTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e", NewCT_TransitionStartSoundAction)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e", NewCT_TransitionSoundAction)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SlideTransition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065", NewCT_TLIterateIntervalTime)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_TLIterateIntervalPercentage)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061", NewCT_TLIterateData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064", NewCT_TLSubShapeId)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTextTargetElement)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074", NewCT_TLOleChartTargetElement)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_TLShapeTargetElement)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTimeTargetElement)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044", NewCT_TLTriggerTimeNodeID)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065", NewCT_TLTriggerRuntimeNode)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e", NewCT_TLTimeCondition)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074", NewCT_TLTimeConditionList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_TimeNodeList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonTimeNodeData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c", NewCT_TLTimeNodeParallel)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065", NewCT_TLTimeNodeSequence)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065", NewCT_TLTimeNodeExclusive)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074", NewCT_TLBehaviorAttributeNameList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061", NewCT_TLCommonBehaviorData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c", NewCT_TLAnimVariantBooleanVal)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c", NewCT_TLAnimVariantIntegerVal)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c", NewCT_TLAnimVariantFloatVal)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l", NewCT_TLAnimVariantStringVal)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074", NewCT_TLAnimVariant)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_TLTimeAnimateValue)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t", NewCT_TLTimeAnimateValueList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLAnimateBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByRgbColorTransform)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByHslColorTransform)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d", NewCT_TLByAnimateColorTransform)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateColorBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateEffectBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074", NewCT_TLPoint)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateMotionBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072", NewCT_TLAnimateRotationBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateScaleBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLCommandBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072", NewCT_TLSetBehavior)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonMediaNodeData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f", NewCT_TLMediaNodeAudio)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f", NewCT_TLMediaNodeVideo)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065", NewCT_TLTemplate)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074", NewCT_TLTemplateList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TLBuildParagraph)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d", NewCT_TLBuildDiagram)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074", NewCT_TLOleBuildChart)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd", NewCT_TLGraphicalObjectBuild)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074", NewCT_BuildList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067", NewCT_SlideTiming)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079", NewCT_Empty)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065", NewCT_IndexRange)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079", NewCT_SlideRelationshipListEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074", NewCT_SlideRelationshipList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064", NewCT_CustomShowId)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061", NewCT_CustomerData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061", NewCT_TagsData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074", NewCT_CustomerDataList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079", NewCT_ExtensionListModify)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072", NewCT_CommentAuthor)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074", NewCT_CommentAuthorList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064", NewCT_OleObjectEmbed)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b", NewCT_OleObjectLink)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074", NewCT_ControlList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_SlideIdListEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074", NewCT_SlideIdList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideMasterIdListEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_SlideMasterIdList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_NotesMasterIdListEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_NotesMasterIdList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079", NewCT_HandoutMasterIdListEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074", NewCT_HandoutMasterIdList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064", NewCT_EmbeddedFontDataId)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_EmbeddedFontListEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074", NewCT_EmbeddedFontList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077", NewCT_CustomShow)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074", NewCT_CustomShowList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d", NewCT_PhotoAlbum)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065", NewCT_SlideSize)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075", NewCT_Kinsoku)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072", NewCT_ModifyVerifier)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewCT_Presentation)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_HtmlPublishProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_WebProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_PrintProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065", NewCT_ShowInfoBrowse)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b", NewCT_ShowInfoKiosk)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ShowProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_PresentationProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072", NewCT_Placeholder)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073", NewCT_ApplicationNonVisualDrawingProps)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BackgroundProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewCT_Background)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061", NewCT_CommonSlideData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065", NewCT_Slide)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074", NewCT_SlideLayout)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_SlideMasterTextStyles)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideLayoutIdListEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074", NewCT_SlideLayoutIdList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072", NewCT_SlideMaster)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewCT_HandoutMaster)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072", NewCT_NotesMaster)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065", NewCT_NotesSlide)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideSyncProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067", NewCT_StringTag)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074", NewCT_TagList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e", NewCT_NormalViewPortion)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NormalViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CommonViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_NotesTextViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079", NewCT_OutlineViewSlideEntry)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_OutlineViewSlideList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_OutlineViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_SlideSorterViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065", NewCT_Guide)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GuideList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_CommonSlideViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_NotesViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ViewProperties)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "c\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074", NewCmAuthorLst)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0063\u006d\u004cs\u0074", NewCmLst)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006f\u006c\u0065\u004f\u0062\u006a", NewOleObj)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewPresentation)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072", NewPresentationPr)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073\u006c\u0064", NewSld)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004c\u0061\u0079\u006f\u0075t", NewSldLayout)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004d\u0061\u0073\u0074\u0065r", NewSldMaster)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewHandoutMaster)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "n\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072", NewNotesMaster)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006e\u006f\u0074e\u0073", NewNotes)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u0053\u0079\u006e\u0063\u0050r", NewSldSyncPr)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0074\u0061\u0067\u004c\u0073\u0074", NewTagLst)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0076\u0069\u0065\u0077\u0050\u0072", NewViewPr)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065", NewEG_SlideListChoice)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065", NewEG_ShowType)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065", NewEG_TopLevelSlide)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewEG_ChildSlide)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewEG_Background)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064", NewAG_TLBuild)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u004f\u006c\u0065", NewAG_Ole)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewAG_ChildSlide)
}
