//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package spreadsheetDrawing

import (
	_b "encoding/xml"
	_eb "fmt"
	_g "github.com/Casper-Mars/officeTool"
	_ge "github.com/Casper-Mars/officeTool/schema/soo/dml"
	_bb "strconv"
)

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_dfg *CT_Shape) ValidateWithPath(path string) error {
	if _fgga := _dfg.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _fgga != nil {
		return _fgga
	}
	if _baaa := _dfg.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _baaa != nil {
		return _baaa
	}
	if _dfg.Style != nil {
		if _ccd := _dfg.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ccd != nil {
			return _ccd
		}
	}
	if _dfg.TxBody != nil {
		if _dcd := _dfg.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _dcd != nil {
			return _dcd
		}
	}
	return nil
}

func (_effg *CT_TwoCellAnchor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_effg.From = NewCT_Marker()
	_effg.To = NewCT_Marker()
	_effg.ClientData = NewCT_AnchorClientData()
	for _, _bbe := range start.Attr {
		if _bbe.Name.Local == "\u0065\u0064\u0069\u0074\u0041\u0073" {
			_effg.EditAsAttr.UnmarshalXMLAttr(_bbe)
			continue
		}
	}
_fcag:
	for {
		_ccde, _abff := d.Token()
		if _abff != nil {
			return _abff
		}
		switch _ffd := _ccde.(type) {
		case _b.StartElement:
			switch _ffd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _gebb := d.DecodeElement(_effg.From, &_ffd); _gebb != nil {
					return _gebb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _afef := d.DecodeElement(_effg.To, &_ffd); _afef != nil {
					return _afef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_effg.Choice = NewEG_ObjectChoicesChoice()
				if _bba := d.DecodeElement(&_effg.Choice.Sp, &_ffd); _bba != nil {
					return _bba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_effg.Choice = NewEG_ObjectChoicesChoice()
				if _gacb := d.DecodeElement(&_effg.Choice.GrpSp, &_ffd); _gacb != nil {
					return _gacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_effg.Choice = NewEG_ObjectChoicesChoice()
				if _dbcc := d.DecodeElement(&_effg.Choice.GraphicFrame, &_ffd); _dbcc != nil {
					return _dbcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_effg.Choice = NewEG_ObjectChoicesChoice()
				if _gbd := d.DecodeElement(&_effg.Choice.CxnSp, &_ffd); _gbd != nil {
					return _gbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_effg.Choice = NewEG_ObjectChoicesChoice()
				if _dba := d.DecodeElement(&_effg.Choice.Pic, &_ffd); _dba != nil {
					return _dba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_effg.Choice = NewEG_ObjectChoicesChoice()
				if _gbbb := d.DecodeElement(&_effg.Choice.ContentPart, &_ffd); _gbbb != nil {
					return _gbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}:
				if _dccf := d.DecodeElement(_effg.ClientData, &_ffd); _dccf != nil {
					return _dccf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _ffd.Name)
				if _fcff := d.Skip(); _fcff != nil {
					return _fcff
				}
			}
		case _b.EndElement:
			break _fcag
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TwoCellAnchor() *CT_TwoCellAnchor {
	_gecb := &CT_TwoCellAnchor{}
	_gecb.From = NewCT_Marker()
	_gecb.To = NewCT_Marker()
	_gecb.ClientData = NewCT_AnchorClientData()
	return _gecb
}

func NewCT_Connector() *CT_Connector {
	_ae := &CT_Connector{}
	_ae.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_ae.SpPr = _ge.NewCT_ShapeProperties()
	return _ae
}

func _dbg(_febg bool) uint8 {
	if _febg {
		return 1
	}
	return 0
}

func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_gcfe := &CT_GraphicalObjectFrame{}
	_gcfe.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_gcfe.Xfrm = _ge.NewCT_Transform2D()
	_gcfe.Graphic = _ge.NewGraphic()
	return _gcfe
}

// Validate validates the CT_PictureNonVisual and its children
func (_ebg *CT_PictureNonVisual) Validate() error {
	return _ebg.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_cad *ST_EditAs) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cad = 0
	case "\u0074w\u006f\u0043\u0065\u006c\u006c":
		*_cad = 1
	case "\u006fn\u0065\u0043\u0065\u006c\u006c":
		*_cad = 2
	case "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065":
		*_cad = 3
	}
	return nil
}

func (_fa *CT_AnchorClientData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cd := range start.Attr {
		if _cd.Name.Local == "\u0066L\u006fc\u006b\u0073\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074" {
			_bg, _gc := _bb.ParseBool(_cd.Value)
			if _gc != nil {
				return _gc
			}
			_fa.FLocksWithSheetAttr = &_bg
			continue
		}
		if _cd.Name.Local == "\u0066\u0050r\u0069\u006e\u0074s\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074" {
			_ce, _faf := _bb.ParseBool(_cd.Value)
			if _faf != nil {
				return _faf
			}
			_fa.FPrintsWithSheetAttr = &_ce
			continue
		}
	}
	for {
		_gca, _af := d.Token()
		if _af != nil {
			return _eb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0041\u006e\u0063\u0068\u006fr\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _af)
		}
		if _cc, _db := _gca.(_b.EndElement); _db && _cc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ead *To) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ead.CT_Marker = *NewCT_Marker()
_gbfdf:
	for {
		_cgd, _age := d.Token()
		if _age != nil {
			return _age
		}
		switch _gafd := _cgd.(type) {
		case _b.StartElement:
			switch _gafd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}:
				if _edd := d.DecodeElement(&_ead.Col, &_gafd); _edd != nil {
					return _edd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}:
				if _ccgg := d.DecodeElement(&_ead.ColOff, &_gafd); _ccgg != nil {
					return _ccgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}:
				if _ddc := d.DecodeElement(&_ead.Row, &_gafd); _ddc != nil {
					return _ddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}:
				if _caa := d.DecodeElement(&_ead.RowOff, &_gafd); _caa != nil {
					return _caa
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006eg\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020T\u006f\u0020\u0025\u0076", _gafd.Name)
				if _gaefc := d.Skip(); _gaefc != nil {
					return _gaefc
				}
			}
		case _b.EndElement:
			break _gbfdf
		case _b.CharData:
		}
	}
	return nil
}

type EG_Anchor struct {
	TwoCellAnchor  *CT_TwoCellAnchor
	OneCellAnchor  *CT_OneCellAnchor
	AbsoluteAnchor *CT_AbsoluteAnchor
}

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_gee *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _bca := _gee.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _bca != nil {
		return _bca
	}
	if _fcc := _gee.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _fcc != nil {
		return _fcc
	}
	if _ggc := _gee.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _ggc != nil {
		return _ggc
	}
	return nil
}

func (_fc *CT_Connector) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fc.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _eb.Sprintf("\u0025\u0076", *_fc.MacroAttr)})
	}
	if _fc.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _eb.Sprintf("\u0025\u0064", _dbg(*_fc.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_faa := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fc.NvCxnSpPr, _faa)
	_cdd := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fc.SpPr, _cdd)
	if _fc.Style != nil {
		_dga := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0073\u0074\u0079\u006ce"}}
		e.EncodeElement(_fc.Style, _dga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_eaee *From) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"
	return _eaee.CT_Marker.MarshalXML(e, start)
}

type EG_ObjectChoices struct{ Choice *EG_ObjectChoicesChoice }

func (_deg *CT_ConnectorNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_deg.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_deg.CNvCxnSpPr = _ge.NewCT_NonVisualConnectorProperties()
_df:
	for {
		_fe, _cddb := d.Token()
		if _cddb != nil {
			return _cddb
		}
		switch _eag := _fe.(type) {
		case _b.StartElement:
			switch _eag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cfe := d.DecodeElement(_deg.CNvPr, &_eag); _cfe != nil {
					return _cfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _afc := d.DecodeElement(_deg.CNvCxnSpPr, &_eag); _afc != nil {
					return _afc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _eag.Name)
				if _gaef := d.Skip(); _gaef != nil {
					return _gaef
				}
			}
		case _b.EndElement:
			break _df
		case _b.CharData:
		}
	}
	return nil
}

func (_eea *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dbc := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_eea.CNvPr, _dbc)
	_gccd := _b.StartElement{Name: _b.Name{Local: "x\u0064\u0072\u003a\u0063Nv\u0047r\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_eea.CNvGraphicFramePr, _gccd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the From and its children, prefixing error messages with path
func (_bdce *From) ValidateWithPath(path string) error {
	if _eeg := _bdce.CT_Marker.ValidateWithPath(path); _eeg != nil {
		return _eeg
	}
	return nil
}

func (_ded *CT_PictureNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ded.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_ded.CNvPicPr = _ge.NewCT_NonVisualPictureProperties()
_gac:
	for {
		_gbc, _daca := d.Token()
		if _daca != nil {
			return _daca
		}
		switch _abfg := _gbc.(type) {
		case _b.StartElement:
			switch _abfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _fgb := d.DecodeElement(_ded.CNvPr, &_abfg); _fgb != nil {
					return _fgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _acce := d.DecodeElement(_ded.CNvPicPr, &_abfg); _acce != nil {
					return _acce
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _abfg.Name)
				if _fca := d.Skip(); _fca != nil {
					return _fca
				}
			}
		case _b.EndElement:
			break _gac
		case _b.CharData:
		}
	}
	return nil
}

func (_dcbd *CT_GroupShapeChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcbd.Sp != nil {
		_ecg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070"}}
		for _, _bcb := range _dcbd.Sp {
			e.EncodeElement(_bcb, _ecg)
		}
	}
	if _dcbd.GrpSp != nil {
		_acf := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0067\u0072\u0070\u0053p"}}
		for _, _gcdg := range _dcbd.GrpSp {
			e.EncodeElement(_gcdg, _acf)
		}
	}
	if _dcbd.GraphicFrame != nil {
		_abb := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064r\u003a\u0067\u0072a\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		for _, _fba := range _dcbd.GraphicFrame {
			e.EncodeElement(_fba, _abb)
		}
	}
	if _dcbd.CxnSp != nil {
		_badf := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u0078\u006e\u0053p"}}
		for _, _ged := range _dcbd.CxnSp {
			e.EncodeElement(_ged, _badf)
		}
	}
	if _dcbd.Pic != nil {
		_dece := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0070\u0069\u0063"}}
		for _, _bda := range _dcbd.Pic {
			e.EncodeElement(_bda, _dece)
		}
	}
	return nil
}

func (_dgbg *CT_TwoCellAnchor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgbg.EditAsAttr != ST_EditAsUnset {
		_eba, _gce := _dgbg.EditAsAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0064\u0069\u0074\u0041\u0073"})
		if _gce != nil {
			return _gce
		}
		start.Attr = append(start.Attr, _eba)
	}
	e.EncodeToken(start)
	_cdeg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_dgbg.From, _cdeg)
	_bdad := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_dgbg.To, _bdad)
	if _dgbg.Choice != nil {
		_dgbg.Choice.MarshalXML(e, _b.StartElement{})
	}
	_ccg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006c\u0069\u0065\u006et\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_dgbg.ClientData, _ccg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_ggcg *CT_GroupShape) ValidateWithPath(path string) error {
	if _cfed := _ggcg.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cfed != nil {
		return _cfed
	}
	if _gaf := _ggcg.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _gaf != nil {
		return _gaf
	}
	for _aeeb, _baf := range _ggcg.Choice {
		if _afea := _baf.ValidateWithPath(_eb.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _aeeb)); _afea != nil {
			return _afea
		}
	}
	return nil
}

func (_fbdd *EG_ObjectChoices) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edbb:
	for {
		_ggcgd, _agd := d.Token()
		if _agd != nil {
			return _agd
		}
		switch _gdee := _ggcgd.(type) {
		case _b.StartElement:
			switch _gdee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_fbdd.Choice = NewEG_ObjectChoicesChoice()
				if _cdc := d.DecodeElement(&_fbdd.Choice.Sp, &_gdee); _cdc != nil {
					return _cdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_fbdd.Choice = NewEG_ObjectChoicesChoice()
				if _ggcf := d.DecodeElement(&_fbdd.Choice.GrpSp, &_gdee); _ggcf != nil {
					return _ggcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_fbdd.Choice = NewEG_ObjectChoicesChoice()
				if _agcb := d.DecodeElement(&_fbdd.Choice.GraphicFrame, &_gdee); _agcb != nil {
					return _agcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_fbdd.Choice = NewEG_ObjectChoicesChoice()
				if _bbbd := d.DecodeElement(&_fbdd.Choice.CxnSp, &_gdee); _bbbd != nil {
					return _bbbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_fbdd.Choice = NewEG_ObjectChoicesChoice()
				if _fcbd := d.DecodeElement(&_fbdd.Choice.Pic, &_gdee); _fcbd != nil {
					return _fcbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_fbdd.Choice = NewEG_ObjectChoicesChoice()
				if _dgg := d.DecodeElement(&_fbdd.Choice.ContentPart, &_gdee); _dgg != nil {
					return _dgg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0020\u0025v", _gdee.Name)
				if _dcaf := d.Skip(); _dcaf != nil {
					return _dcaf
				}
			}
		case _b.EndElement:
			break _edbb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_gaa *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _adb, _eab := range _gaa.Sp {
		if _cba := _eab.ValidateWithPath(_eb.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _adb)); _cba != nil {
			return _cba
		}
	}
	for _ace, _eeeg := range _gaa.GrpSp {
		if _aag := _eeeg.ValidateWithPath(_eb.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _ace)); _aag != nil {
			return _aag
		}
	}
	for _efg, _dca := range _gaa.GraphicFrame {
		if _fde := _dca.ValidateWithPath(_eb.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _efg)); _fde != nil {
			return _fde
		}
	}
	for _eda, _bcbe := range _gaa.CxnSp {
		if _agg := _bcbe.ValidateWithPath(_eb.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _eda)); _agg != nil {
			return _agg
		}
	}
	for _adc, _acc := range _gaa.Pic {
		if _geff := _acc.ValidateWithPath(_eb.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _adc)); _geff != nil {
			return _geff
		}
	}
	return nil
}

// Validate validates the CT_AnchorClientData and its children
func (_gcf *CT_AnchorClientData) Validate() error {
	return _gcf.ValidateWithPath("\u0043\u0054\u005f\u0041nc\u0068\u006f\u0072\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061")
}

func (_aeebe *CT_GroupShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_edb := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_aeebe.CNvPr, _edb)
	_fab := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u004e\u0076\u0047\u0072p\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_aeebe.CNvGrpSpPr, _fab)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_cdg *CT_Drawing) ValidateWithPath(path string) error {
	for _dce, _bdde := range _cdg.EG_Anchor {
		if _feba := _bdde.ValidateWithPath(_eb.Sprintf("\u0025\u0073/\u0045\u0047\u005fA\u006e\u0063\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _dce)); _feba != nil {
			return _feba
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_eec *CT_Picture) ValidateWithPath(path string) error {
	if _acfe := _eec.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _acfe != nil {
		return _acfe
	}
	if _afcf := _eec.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _afcf != nil {
		return _afcf
	}
	if _ffaf := _eec.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _ffaf != nil {
		return _ffaf
	}
	if _eec.Style != nil {
		if _fbf := _eec.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _fbf != nil {
			return _fbf
		}
	}
	return nil
}

func (_bddg *CT_ShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bddg.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_bddg.CNvSpPr = _ge.NewCT_NonVisualDrawingShapeProps()
_fbc:
	for {
		_bge, _dab := d.Token()
		if _dab != nil {
			return _dab
		}
		switch _efa := _bge.(type) {
		case _b.StartElement:
			switch _efa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _fcf := d.DecodeElement(_bddg.CNvPr, &_efa); _fcf != nil {
					return _fcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _gccf := d.DecodeElement(_bddg.CNvSpPr, &_efa); _gccf != nil {
					return _gccf
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _efa.Name)
				if _gcbd := d.Skip(); _gcbd != nil {
					return _gcbd
				}
			}
		case _b.EndElement:
			break _fbc
		case _b.CharData:
		}
	}
	return nil
}

func (_fadg *CT_GroupShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fadg.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_fadg.GrpSpPr = _ge.NewCT_GroupShapeProperties()
_cff:
	for {
		_egb, _bfe := d.Token()
		if _bfe != nil {
			return _bfe
		}
		switch _eaf := _egb.(type) {
		case _b.StartElement:
			switch _eaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _abd := d.DecodeElement(_fadg.NvGrpSpPr, &_eaf); _abd != nil {
					return _abd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _aa := d.DecodeElement(_fadg.GrpSpPr, &_eaf); _aa != nil {
					return _aa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_gdg := NewCT_GroupShapeChoice()
				if _dgc := d.DecodeElement(&_gdg.Sp, &_eaf); _dgc != nil {
					return _dgc
				}
				_fadg.Choice = append(_fadg.Choice, _gdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_cdad := NewCT_GroupShapeChoice()
				if _acd := d.DecodeElement(&_cdad.GrpSp, &_eaf); _acd != nil {
					return _acd
				}
				_fadg.Choice = append(_fadg.Choice, _cdad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bcd := NewCT_GroupShapeChoice()
				if _bfed := d.DecodeElement(&_bcd.GraphicFrame, &_eaf); _bfed != nil {
					return _bfed
				}
				_fadg.Choice = append(_fadg.Choice, _bcd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_ecea := NewCT_GroupShapeChoice()
				if _fcca := d.DecodeElement(&_ecea.CxnSp, &_eaf); _fcca != nil {
					return _fcca
				}
				_fadg.Choice = append(_fadg.Choice, _ecea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_aaf := NewCT_GroupShapeChoice()
				if _bfbe := d.DecodeElement(&_aaf.Pic, &_eaf); _bfbe != nil {
					return _bfbe
				}
				_fadg.Choice = append(_fadg.Choice, _aaf)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _eaf.Name)
				if _dgcd := d.Skip(); _dgcd != nil {
					return _dgcd
				}
			}
		case _b.EndElement:
			break _cff
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_ffa := &CT_GraphicalObjectFrameNonVisual{}
	_ffa.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_ffa.CNvGraphicFramePr = _ge.NewCT_NonVisualGraphicFrameProperties()
	return _ffa
}

func (_dd *CT_ConnectorNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bcg := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_dd.CNvPr, _bcg)
	_ec := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u004e\u0076\u0043\u0078n\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dd.CNvCxnSpPr, _ec)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewTo() *To { _afa := &To{}; _afa.CT_Marker = *NewCT_Marker(); return _afa }

type ST_EditAs byte

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_ebf *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _abf := _ebf.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _abf != nil {
		return _abf
	}
	if _fcb := _ebf.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _fcb != nil {
		return _fcb
	}
	return nil
}

type CT_Shape struct {
	MacroAttr      *string
	TextlinkAttr   *string
	FLocksTextAttr *bool
	FPublishedAttr *bool
	NvSpPr         *CT_ShapeNonVisual
	SpPr           *_ge.CT_ShapeProperties
	Style          *_ge.CT_ShapeStyle
	TxBody         *_ge.CT_TextBody
}

func (_bad *CT_Drawing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dfb:
	for {
		_bag, _agc := d.Token()
		if _agc != nil {
			return _agc
		}
		switch _fd := _bag.(type) {
		case _b.StartElement:
			switch _fd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_aed := NewEG_Anchor()
				_aed.TwoCellAnchor = NewCT_TwoCellAnchor()
				if _ca := d.DecodeElement(_aed.TwoCellAnchor, &_fd); _ca != nil {
					return _ca
				}
				_bad.EG_Anchor = append(_bad.EG_Anchor, _aed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_feb := NewEG_Anchor()
				_feb.OneCellAnchor = NewCT_OneCellAnchor()
				if _bdd := d.DecodeElement(_feb.OneCellAnchor, &_fd); _bdd != nil {
					return _bdd
				}
				_bad.EG_Anchor = append(_bad.EG_Anchor, _feb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}:
				_cda := NewEG_Anchor()
				_cda.AbsoluteAnchor = NewCT_AbsoluteAnchor()
				if _ccc := d.DecodeElement(_cda.AbsoluteAnchor, &_fd); _ccc != nil {
					return _ccc
				}
				_bad.EG_Anchor = append(_bad.EG_Anchor, _cda)
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0020\u0025\u0076", _fd.Name)
				if _gabd := d.Skip(); _gabd != nil {
					return _gabd
				}
			}
		case _b.EndElement:
			break _dfb
		case _b.CharData:
		}
	}
	return nil
}

func (_fad *CT_GraphicalObjectFrame) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fad.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _eb.Sprintf("\u0025\u0076", *_fad.MacroAttr)})
	}
	if _fad.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _eb.Sprintf("\u0025\u0064", _dbg(*_fad.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_ggdc := _b.StartElement{Name: _b.Name{Local: "x\u0064r\u003a\u006e\u0076\u0047\u0072\u0061\u0070\u0068i\u0063\u0046\u0072\u0061me\u0050\u0072"}}
	e.EncodeElement(_fad.NvGraphicFramePr, _ggdc)
	_cbg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_fad.Xfrm, _cbg)
	_fec := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_fad.Graphic, _fec)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type From struct{ CT_Marker }

// ValidateWithPath validates the EG_ObjectChoicesChoice and its children, prefixing error messages with path
func (_bdg *EG_ObjectChoicesChoice) ValidateWithPath(path string) error {
	if _bdg.Sp != nil {
		if _cefg := _bdg.Sp.ValidateWithPath(path + "\u002f\u0053\u0070"); _cefg != nil {
			return _cefg
		}
	}
	if _bdg.GrpSp != nil {
		if _ebcd := _bdg.GrpSp.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070"); _ebcd != nil {
			return _ebcd
		}
	}
	if _bdg.GraphicFrame != nil {
		if _ddf := _bdg.GraphicFrame.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"); _ddf != nil {
			return _ddf
		}
	}
	if _bdg.CxnSp != nil {
		if _acdeb := _bdg.CxnSp.ValidateWithPath(path + "\u002f\u0043\u0078\u006e\u0053\u0070"); _acdeb != nil {
			return _acdeb
		}
	}
	if _bdg.Pic != nil {
		if _badb := _bdg.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _badb != nil {
			return _badb
		}
	}
	if _bdg.ContentPart != nil {
		if _ggbe := _bdg.ContentPart.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"); _ggbe != nil {
			return _ggbe
		}
	}
	return nil
}

// Validate validates the CT_GroupShape and its children
func (_ced *CT_GroupShape) Validate() error {
	return _ced.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}

func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_edcg := &CT_ShapeNonVisual{}
	_edcg.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_edcg.CNvSpPr = _ge.NewCT_NonVisualDrawingShapeProps()
	return _edcg
}

func (_ga *CT_AbsoluteAnchor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gd := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0070\u006f\u0073"}}
	e.EncodeElement(_ga.Pos, _gd)
	_a := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0065\u0078\u0074"}}
	e.EncodeElement(_ga.Ext, _a)
	if _ga.Choice != nil {
		_ga.Choice.MarshalXML(e, _b.StartElement{})
	}
	_ag := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006c\u0069\u0065\u006et\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_ga.ClientData, _ag)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gece *CT_PictureNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fafa := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_gece.CNvPr, _fafa)
	_efff := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072:\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_gece.CNvPicPr, _efff)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Marker() *CT_Marker { _bedf := &CT_Marker{}; _bedf.Col = 0; _bedf.Row = 0; return _bedf }

// ValidateWithPath validates the WsDr and its children, prefixing error messages with path
func (_gabdb *WsDr) ValidateWithPath(path string) error {
	if _gbe := _gabdb.CT_Drawing.ValidateWithPath(path); _gbe != nil {
		return _gbe
	}
	return nil
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicalObjectFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
}

type CT_GraphicalObjectFrameNonVisual struct {
	CNvPr             *_ge.CT_NonVisualDrawingProps
	CNvGraphicFramePr *_ge.CT_NonVisualGraphicFrameProperties
}

// ValidateWithPath validates the CT_TwoCellAnchor and its children, prefixing error messages with path
func (_baba *CT_TwoCellAnchor) ValidateWithPath(path string) error {
	if _efffb := _baba.EditAsAttr.ValidateWithPath(path + "/\u0045\u0064\u0069\u0074\u0041\u0073\u0041\u0074\u0074\u0072"); _efffb != nil {
		return _efffb
	}
	if _egf := _baba.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _egf != nil {
		return _egf
	}
	if _feag := _baba.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _feag != nil {
		return _feag
	}
	if _baba.Choice != nil {
		if _bbaa := _baba.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _bbaa != nil {
			return _bbaa
		}
	}
	if _ceb := _baba.ClientData.ValidateWithPath(path + "/\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"); _ceb != nil {
		return _ceb
	}
	return nil
}

func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_cca := &CT_PictureNonVisual{}
	_cca.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_cca.CNvPicPr = _ge.NewCT_NonVisualPictureProperties()
	return _cca
}

type To struct{ CT_Marker }

// ValidateWithPath validates the EG_ObjectChoices and its children, prefixing error messages with path
func (_ggb *EG_ObjectChoices) ValidateWithPath(path string) error {
	if _ggb.Choice != nil {
		if _egfb := _ggb.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _egfb != nil {
			return _egfb
		}
	}
	return nil
}

func (_fcdf *CT_OneCellAnchor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_geb := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_fcdf.From, _geb)
	_dced := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0065\u0078\u0074"}}
	e.EncodeElement(_fcdf.Ext, _dced)
	if _fcdf.Choice != nil {
		_fcdf.Choice.MarshalXML(e, _b.StartElement{})
	}
	_bafc := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006c\u0069\u0065\u006et\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_fcdf.ClientData, _bafc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ShapeNonVisual struct {
	CNvPr   *_ge.CT_NonVisualDrawingProps
	CNvSpPr *_ge.CT_NonVisualDrawingShapeProps
}

type EG_ObjectChoicesChoice struct {
	Sp           *CT_Shape
	GrpSp        *CT_GroupShape
	GraphicFrame *CT_GraphicalObjectFrame
	CxnSp        *CT_Connector
	Pic          *CT_Picture
	ContentPart  *CT_Rel
}

func (_fffa *WsDr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0078\u0064\u0072\u003a\u0077\u0073\u0044\u0072"
	return _fffa.CT_Drawing.MarshalXML(e, start)
}

// Validate validates the CT_AbsoluteAnchor and its children
func (_eg *CT_AbsoluteAnchor) Validate() error {
	return _eg.ValidateWithPath("\u0043\u0054\u005f\u0041\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072")
}

// Validate validates the EG_ObjectChoices and its children
func (_cbbc *EG_ObjectChoices) Validate() error {
	return _cbbc.ValidateWithPath("\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073")
}

// ValidateWithPath validates the CT_AbsoluteAnchor and its children, prefixing error messages with path
func (_ega *CT_AbsoluteAnchor) ValidateWithPath(path string) error {
	if _acg := _ega.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _acg != nil {
		return _acg
	}
	if _ea := _ega.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _ea != nil {
		return _ea
	}
	if _ega.Choice != nil {
		if _ed := _ega.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _ed != nil {
			return _ed
		}
	}
	if _bbcd := _ega.ClientData.ValidateWithPath(path + "/\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"); _bbcd != nil {
		return _bbcd
	}
	return nil
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_aeg *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _eeda := _aeg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _eeda != nil {
		return _eeda
	}
	if _ebc := _aeg.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _ebc != nil {
		return _ebc
	}
	return nil
}

// Validate validates the CT_OneCellAnchor and its children
func (_fef *CT_OneCellAnchor) Validate() error {
	return _fef.ValidateWithPath("\u0043\u0054_\u004f\u006e\u0065C\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072")
}

func (_fge *CT_Picture) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fge.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _eb.Sprintf("\u0025\u0076", *_fge.MacroAttr)})
	}
	if _fge.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _eb.Sprintf("\u0025\u0064", _dbg(*_fge.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_cae := _b.StartElement{Name: _b.Name{Local: "x\u0064\u0072\u003a\u006e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_fge.NvPicPr, _cae)
	_cab := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072:\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_fge.BlipFill, _cab)
	_dadc := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fge.SpPr, _dadc)
	if _fge.Style != nil {
		_gdf := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0073\u0074\u0079\u006ce"}}
		e.EncodeElement(_fge.Style, _gdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_Anchor and its children
func (_egd *EG_Anchor) Validate() error {
	return _egd.ValidateWithPath("\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr")
}

func (_gde *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gde.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_gde.CNvGraphicFramePr = _ge.NewCT_NonVisualGraphicFrameProperties()
_fff:
	for {
		_afg, _eca := d.Token()
		if _eca != nil {
			return _eca
		}
		switch _dge := _afg.(type) {
		case _b.StartElement:
			switch _dge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _bgg := d.DecodeElement(_gde.CNvPr, &_dge); _bgg != nil {
					return _bgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _gdec := d.DecodeElement(_gde.CNvGraphicFramePr, &_dge); _gdec != nil {
					return _gdec
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _dge.Name)
				if _eac := d.Skip(); _eac != nil {
					return _eac
				}
			}
		case _b.EndElement:
			break _fff
		case _b.CharData:
		}
	}
	return nil
}

func (_gebf *WsDr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gebf.CT_Drawing = *NewCT_Drawing()
_fcab:
	for {
		_dcdd, _gegg := d.Token()
		if _gegg != nil {
			return _gegg
		}
		switch _cfcb := _dcdd.(type) {
		case _b.StartElement:
			switch _cfcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_bcgg := NewEG_Anchor()
				_bcgg.TwoCellAnchor = NewCT_TwoCellAnchor()
				if _gaea := d.DecodeElement(_bcgg.TwoCellAnchor, &_cfcb); _gaea != nil {
					return _gaea
				}
				_gebf.EG_Anchor = append(_gebf.EG_Anchor, _bcgg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_acdf := NewEG_Anchor()
				_acdf.OneCellAnchor = NewCT_OneCellAnchor()
				if _abeb := d.DecodeElement(_acdf.OneCellAnchor, &_cfcb); _abeb != nil {
					return _abeb
				}
				_gebf.EG_Anchor = append(_gebf.EG_Anchor, _acdf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}:
				_gcde := NewEG_Anchor()
				_gcde.AbsoluteAnchor = NewCT_AbsoluteAnchor()
				if _fcbda := d.DecodeElement(_gcde.AbsoluteAnchor, &_cfcb); _fcbda != nil {
					return _fcbda
				}
				_gebf.EG_Anchor = append(_gebf.EG_Anchor, _gcde)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u0073D\u0072\u0020\u0025\u0076", _cfcb.Name)
				if _cefga := d.Skip(); _cefga != nil {
					return _cefga
				}
			}
		case _b.EndElement:
			break _fcab
		case _b.CharData:
		}
	}
	return nil
}

func (_fdf *From) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdf.CT_Marker = *NewCT_Marker()
_bce:
	for {
		_feage, _efc := d.Token()
		if _efc != nil {
			return _efc
		}
		switch _beb := _feage.(type) {
		case _b.StartElement:
			switch _beb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}:
				if _baag := d.DecodeElement(&_fdf.Col, &_beb); _baag != nil {
					return _baag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}:
				if _ccded := d.DecodeElement(&_fdf.ColOff, &_beb); _ccded != nil {
					return _ccded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}:
				if _dadf := d.DecodeElement(&_fdf.Row, &_beb); _dadf != nil {
					return _dadf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}:
				if _bafg := d.DecodeElement(&_fdf.RowOff, &_beb); _bafg != nil {
					return _bafg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0046\u0072o\u006d\u0020\u0025\u0076", _beb.Name)
				if _fafb := d.Skip(); _fafb != nil {
					return _fafb
				}
			}
		case _b.EndElement:
			break _bce
		case _b.CharData:
		}
	}
	return nil
}

type CT_Rel struct{ IdAttr string }

func (_dddc *CT_Rel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbbd := range start.Attr {
		if _dbbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dbbd.Name.Local == "\u0069\u0064" || _dbbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dbbd.Name.Local == "\u0069\u0064" {
			_ffaa, _gbg := _dbbd.Value, error(nil)
			if _gbg != nil {
				return _gbg
			}
			_dddc.IdAttr = _ffaa
			continue
		}
	}
	for {
		_eae, _adg := d.Token()
		if _adg != nil {
			return _eb.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _adg)
		}
		if _eebc, _cdf := _eae.(_b.EndElement); _cdf && _eebc.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Picture() *CT_Picture {
	_dbb := &CT_Picture{}
	_dbb.NvPicPr = NewCT_PictureNonVisual()
	_dbb.BlipFill = _ge.NewCT_BlipFillProperties()
	_dbb.SpPr = _ge.NewCT_ShapeProperties()
	return _dbb
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_bed *CT_ConnectorNonVisual) Validate() error {
	return _bed.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

type CT_Drawing struct{ EG_Anchor []*EG_Anchor }

// Validate validates the CT_Rel and its children
func (_bgf *CT_Rel) Validate() error {
	return _bgf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}

func (_aef *CT_Connector) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aef.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_aef.SpPr = _ge.NewCT_ShapeProperties()
	for _, _dcb := range start.Attr {
		if _dcb.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bde, _bbb := _dcb.Value, error(nil)
			if _bbb != nil {
				return _bbb
			}
			_aef.MacroAttr = &_bde
			continue
		}
		if _dcb.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_fbg, _bbg := _bb.ParseBool(_dcb.Value)
			if _bbg != nil {
				return _bbg
			}
			_aef.FPublishedAttr = &_fbg
			continue
		}
	}
_cf:
	for {
		_cbb, _gae := d.Token()
		if _gae != nil {
			return _gae
		}
		switch _ggd := _cbb.(type) {
		case _b.StartElement:
			switch _ggd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _geg := d.DecodeElement(_aef.NvCxnSpPr, &_ggd); _geg != nil {
					return _geg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _fcd := d.DecodeElement(_aef.SpPr, &_ggd); _fcd != nil {
					return _fcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_aef.Style = _ge.NewCT_ShapeStyle()
				if _ad := d.DecodeElement(_aef.Style, &_ggd); _ad != nil {
					return _ad
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _ggd.Name)
				if _afe := d.Skip(); _afe != nil {
					return _afe
				}
			}
		case _b.EndElement:
			break _cf
		case _b.CharData:
		}
	}
	return nil
}

type CT_GroupShapeNonVisual struct {
	CNvPr      *_ge.CT_NonVisualDrawingProps
	CNvGrpSpPr *_ge.CT_NonVisualGroupDrawingShapeProps
}

func (_ceg *CT_GroupShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ceg.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_ceg.CNvGrpSpPr = _ge.NewCT_NonVisualGroupDrawingShapeProps()
_eead:
	for {
		_fed, _gcb := d.Token()
		if _gcb != nil {
			return _gcb
		}
		switch _acef := _fed.(type) {
		case _b.StartElement:
			switch _acef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _dcbb := d.DecodeElement(_ceg.CNvPr, &_acef); _dcbb != nil {
					return _dcbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _fag := d.DecodeElement(_ceg.CNvGrpSpPr, &_acef); _fag != nil {
					return _fag
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _acef.Name)
				if _bcgc := d.Skip(); _bcgc != nil {
					return _bcgc
				}
			}
		case _b.EndElement:
			break _eead
		case _b.CharData:
		}
	}
	return nil
}

func (_fdag ST_EditAs) ValidateWithPath(path string) error {
	switch _fdag {
	case 0, 1, 2, 3:
	default:
		return _eb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdag))
	}
	return nil
}

func (_fgbd *EG_ObjectChoices) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgbd.Choice != nil {
		_fgbd.Choice.MarshalXML(e, _b.StartElement{})
	}
	return nil
}

func (_cef *CT_ShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_daeg := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_cef.CNvPr, _daeg)
	_gabb := _b.StartElement{Name: _b.Name{Local: "x\u0064\u0072\u003a\u0063\u004e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_cef.CNvSpPr, _gabb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cbf *CT_Drawing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cbf.EG_Anchor != nil {
		for _, _gec := range _cbf.EG_Anchor {
			_gec.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewEG_ObjectChoices() *EG_ObjectChoices { _fcce := &EG_ObjectChoices{}; return _fcce }

// Validate validates the CT_GroupShapeNonVisual and its children
func (_dcec *CT_GroupShapeNonVisual) Validate() error {
	return _dcec.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

// Validate validates the CT_Shape and its children
func (_dcef *CT_Shape) Validate() error {
	return _dcef.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}

func (_bcbg *CT_GroupShapeChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bded:
	for {
		_degb, _ef := d.Token()
		if _ef != nil {
			return _ef
		}
		switch _cffg := _degb.(type) {
		case _b.StartElement:
			switch _cffg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_gb := NewCT_Shape()
				if _gdc := d.DecodeElement(_gb, &_cffg); _gdc != nil {
					return _gdc
				}
				_bcbg.Sp = append(_bcbg.Sp, _gb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_dac := NewCT_GroupShape()
				if _aefe := d.DecodeElement(_dac, &_cffg); _aefe != nil {
					return _aefe
				}
				_bcbg.GrpSp = append(_bcbg.GrpSp, _dac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bbba := NewCT_GraphicalObjectFrame()
				if _aca := d.DecodeElement(_bbba, &_cffg); _aca != nil {
					return _aca
				}
				_bcbg.GraphicFrame = append(_bcbg.GraphicFrame, _bbba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_bagg := NewCT_Connector()
				if _eed := d.DecodeElement(_bagg, &_cffg); _eed != nil {
					return _eed
				}
				_bcbg.CxnSp = append(_bcbg.CxnSp, _bagg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_febd := NewCT_Picture()
				if _dfba := d.DecodeElement(_febd, &_cffg); _dfba != nil {
					return _dfba
				}
				_bcbg.Pic = append(_bcbg.Pic, _febd)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _cffg.Name)
				if _gga := d.Skip(); _gga != nil {
					return _gga
				}
			}
		case _b.EndElement:
			break _bded
		case _b.CharData:
		}
	}
	return nil
}

func (_fda *CT_Shape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fda.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _eb.Sprintf("\u0025\u0076", *_fda.MacroAttr)})
	}
	if _fda.TextlinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b"}, Value: _eb.Sprintf("\u0025\u0076", *_fda.TextlinkAttr)})
	}
	if _fda.FLocksTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074"}, Value: _eb.Sprintf("\u0025\u0064", _dbg(*_fda.FLocksTextAttr))})
	}
	if _fda.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _eb.Sprintf("\u0025\u0064", _dbg(*_fda.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_gdef := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fda.NvSpPr, _gdef)
	_ggg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fda.SpPr, _ggg)
	if _fda.Style != nil {
		_aae := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0073\u0074\u0079\u006ce"}}
		e.EncodeElement(_fda.Style, _aae)
	}
	if _fda.TxBody != nil {
		_bfaa := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_fda.TxBody, _bfaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gdfa *EG_Anchor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdfa.TwoCellAnchor != nil {
		_gdeca := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_gdfa.TwoCellAnchor, _gdeca)
	}
	if _gdfa.OneCellAnchor != nil {
		_gfg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_gdfa.OneCellAnchor, _gfg)
	}
	if _gdfa.AbsoluteAnchor != nil {
		_ceeb := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072:\u0061\u0062\u0073\u006f\u006cu\u0074\u0065A\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_gdfa.AbsoluteAnchor, _ceeb)
	}
	return nil
}

func (_ege *CT_GraphicalObjectFrame) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ege.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_ege.Xfrm = _ge.NewCT_Transform2D()
	_ege.Graphic = _ge.NewGraphic()
	for _, _bfb := range start.Attr {
		if _bfb.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bdc, _dfa := _bfb.Value, error(nil)
			if _dfa != nil {
				return _dfa
			}
			_ege.MacroAttr = &_bdc
			continue
		}
		if _bfb.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_fae, _gcc := _bb.ParseBool(_bfb.Value)
			if _gcc != nil {
				return _gcc
			}
			_ege.FPublishedAttr = &_fae
			continue
		}
	}
_ff:
	for {
		_cfg, _fee := d.Token()
		if _fee != nil {
			return _fee
		}
		switch _cfb := _cfg.(type) {
		case _b.StartElement:
			switch _cfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _aee := d.DecodeElement(_ege.NvGraphicFramePr, &_cfb); _aee != nil {
					return _aee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078\u0066\u0072\u006d"}:
				if _eef := d.DecodeElement(_ege.Xfrm, &_cfb); _eef != nil {
					return _eef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _gea := d.DecodeElement(_ege.Graphic, &_cfb); _gea != nil {
					return _gea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _cfb.Name)
				if _eeb := d.Skip(); _eeb != nil {
					return _eeb
				}
			}
		case _b.EndElement:
			break _ff
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_gab *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _gcd := _gab.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _gcd != nil {
		return _gcd
	}
	if _aea := _gab.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _aea != nil {
		return _aea
	}
	return nil
}

// Validate validates the WsDr and its children
func (_cffc *WsDr) Validate() error { return _cffc.ValidateWithPath("\u0057\u0073\u0044\u0072") }

type CT_Connector struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvCxnSpPr      *CT_ConnectorNonVisual
	SpPr           *_ge.CT_ShapeProperties
	Style          *_ge.CT_ShapeStyle
}

func NewCT_AbsoluteAnchor() *CT_AbsoluteAnchor {
	_bd := &CT_AbsoluteAnchor{}
	_bd.Pos = _ge.NewCT_Point2D()
	_bd.Ext = _ge.NewCT_PositiveSize2D()
	_bd.ClientData = NewCT_AnchorClientData()
	return _bd
}

// Validate validates the EG_ObjectChoicesChoice and its children
func (_ffaac *EG_ObjectChoicesChoice) Validate() error {
	return _ffaac.ValidateWithPath("\u0045\u0047\u005f\u004fbj\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069c\u0065")
}

func (_geffa *CT_Rel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _eb.Sprintf("\u0025\u0076", _geffa.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_fg *CT_Connector) ValidateWithPath(path string) error {
	if _dgb := _fg.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _dgb != nil {
		return _dgb
	}
	if _dgag := _fg.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dgag != nil {
		return _dgag
	}
	if _fg.Style != nil {
		if _bfc := _fg.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _bfc != nil {
			return _bfc
		}
	}
	return nil
}

// Validate validates the CT_Connector and its children
func (_bbgb *CT_Connector) Validate() error {
	return _bbgb.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

// ValidateWithPath validates the To and its children, prefixing error messages with path
func (_fdfe *To) ValidateWithPath(path string) error {
	if _bebe := _fdfe.CT_Marker.ValidateWithPath(path); _bebe != nil {
		return _bebe
	}
	return nil
}

// ValidateWithPath validates the CT_AnchorClientData and its children, prefixing error messages with path
func (_bgb *CT_AnchorClientData) ValidateWithPath(path string) error { return nil }

func NewWsDr() *WsDr { _dbaa := &WsDr{}; _dbaa.CT_Drawing = *NewCT_Drawing(); return _dbaa }

type CT_TwoCellAnchor struct {
	EditAsAttr ST_EditAs
	From       *CT_Marker
	To         *CT_Marker
	Choice     *EG_ObjectChoicesChoice
	ClientData *CT_AnchorClientData
}

func (_gbf *CT_Shape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbf.NvSpPr = NewCT_ShapeNonVisual()
	_gbf.SpPr = _ge.NewCT_ShapeProperties()
	for _, _fbgc := range start.Attr {
		if _fbgc.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_gdb, _ggdg := _fbgc.Value, error(nil)
			if _ggdg != nil {
				return _ggdg
			}
			_gbf.MacroAttr = &_gdb
			continue
		}
		if _fbgc.Name.Local == "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b" {
			_ggab, _dadb := _fbgc.Value, error(nil)
			if _dadb != nil {
				return _dadb
			}
			_gbf.TextlinkAttr = &_ggab
			continue
		}
		if _fbgc.Name.Local == "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074" {
			_fbfe, _fce := _bb.ParseBool(_fbgc.Value)
			if _fce != nil {
				return _fce
			}
			_gbf.FLocksTextAttr = &_fbfe
			continue
		}
		if _fbgc.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_ffac, _eeefg := _bb.ParseBool(_fbgc.Value)
			if _eeefg != nil {
				return _eeefg
			}
			_gbf.FPublishedAttr = &_ffac
			continue
		}
	}
_abe:
	for {
		_bbgg, _aeed := d.Token()
		if _aeed != nil {
			return _aeed
		}
		switch _accb := _bbgg.(type) {
		case _b.StartElement:
			switch _accb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _beeg := d.DecodeElement(_gbf.NvSpPr, &_accb); _beeg != nil {
					return _beeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _ecee := d.DecodeElement(_gbf.SpPr, &_accb); _ecee != nil {
					return _ecee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_gbf.Style = _ge.NewCT_ShapeStyle()
				if _gfd := d.DecodeElement(_gbf.Style, &_accb); _gfd != nil {
					return _gfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_gbf.TxBody = _ge.NewCT_TextBody()
				if _febc := d.DecodeElement(_gbf.TxBody, &_accb); _febc != nil {
					return _febc
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _accb.Name)
				if _cbbf := d.Skip(); _cbbf != nil {
					return _cbbf
				}
			}
		case _b.EndElement:
			break _abe
		case _b.CharData:
		}
	}
	return nil
}

func NewEG_ObjectChoicesChoice() *EG_ObjectChoicesChoice {
	_fcceb := &EG_ObjectChoicesChoice{}
	return _fcceb
}

// Validate validates the CT_Drawing and its children
func (_agf *CT_Drawing) Validate() error {
	return _agf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

func (_ac *CT_AbsoluteAnchor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ac.Pos = _ge.NewCT_Point2D()
	_ac.Ext = _ge.NewCT_PositiveSize2D()
	_ac.ClientData = NewCT_AnchorClientData()
_be:
	for {
		_bf, _ba := d.Token()
		if _ba != nil {
			return _ba
		}
		switch _c := _bf.(type) {
		case _b.StartElement:
			switch _c.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u006f\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u006f\u0073"}:
				if _gg := d.DecodeElement(_ac.Pos, &_c); _gg != nil {
					return _gg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}:
				if _f := d.DecodeElement(_ac.Ext, &_c); _f != nil {
					return _f
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_ac.Choice = NewEG_ObjectChoicesChoice()
				if _bee := d.DecodeElement(&_ac.Choice.Sp, &_c); _bee != nil {
					return _bee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_ac.Choice = NewEG_ObjectChoicesChoice()
				if _d := d.DecodeElement(&_ac.Choice.GrpSp, &_c); _d != nil {
					return _d
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_ac.Choice = NewEG_ObjectChoicesChoice()
				if _bc := d.DecodeElement(&_ac.Choice.GraphicFrame, &_c); _bc != nil {
					return _bc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_ac.Choice = NewEG_ObjectChoicesChoice()
				if _bbc := d.DecodeElement(&_ac.Choice.CxnSp, &_c); _bbc != nil {
					return _bbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_ac.Choice = NewEG_ObjectChoicesChoice()
				if _cb := d.DecodeElement(&_ac.Choice.Pic, &_c); _cb != nil {
					return _cb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_ac.Choice = NewEG_ObjectChoicesChoice()
				if _ab := d.DecodeElement(&_ac.Choice.ContentPart, &_c); _ab != nil {
					return _ab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}:
				if _da := d.DecodeElement(_ac.ClientData, &_c); _da != nil {
					return _da
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _c.Name)
				if _gf := d.Skip(); _gf != nil {
					return _gf
				}
			}
		case _b.EndElement:
			break _be
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GroupShapeChoice and its children
func (_bege *CT_GroupShapeChoice) Validate() error {
	return _bege.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _fea := &CT_GroupShapeChoice{}; return _fea }

func NewEG_Anchor() *EG_Anchor { _ccbg := &EG_Anchor{}; return _ccbg }

// Validate validates the CT_GraphicalObjectFrame and its children
func (_egc *CT_GraphicalObjectFrame) Validate() error {
	return _egc.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}

func (_bcf ST_EditAs) String() string {
	switch _bcf {
	case 0:
		return ""
	case 1:
		return "\u0074w\u006f\u0043\u0065\u006c\u006c"
	case 2:
		return "\u006fn\u0065\u0043\u0065\u006c\u006c"
	case 3:
		return "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065"
	}
	return ""
}

func (_ggba ST_EditAs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ggba.String(), start)
}

type CT_GraphicalObjectFrame struct {
	MacroAttr        *string
	FPublishedAttr   *bool
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual
	Xfrm             *_ge.CT_Transform2D
	Graphic          *_ge.Graphic
}

type CT_OneCellAnchor struct {
	From       *CT_Marker
	Ext        *_ge.CT_PositiveSize2D
	Choice     *EG_ObjectChoicesChoice
	ClientData *CT_AnchorClientData
}

func (_dg *CT_AnchorClientData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dg.FLocksWithSheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066L\u006fc\u006b\u0073\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074"}, Value: _eb.Sprintf("\u0025\u0064", _dbg(*_dg.FLocksWithSheetAttr))})
	}
	if _dg.FPrintsWithSheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0050r\u0069\u006e\u0074s\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074"}, Value: _eb.Sprintf("\u0025\u0064", _dbg(*_dg.FPrintsWithSheetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_AnchorClientData() *CT_AnchorClientData { _fb := &CT_AnchorClientData{}; return _fb }

// ValidateWithPath validates the CT_Marker and its children, prefixing error messages with path
func (_gag *CT_Marker) ValidateWithPath(path string) error {
	if _gag.Col < 0 {
		return _eb.Errorf("\u0025\u0073\u002fm\u002e\u0043\u006f\u006c \u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gag.Col)
	}
	if _abdf := _gag.ColOff.ValidateWithPath(path + "\u002fC\u006f\u006c\u004f\u0066\u0066"); _abdf != nil {
		return _abdf
	}
	if _gag.Row < 0 {
		return _eb.Errorf("\u0025\u0073\u002fm\u002e\u0052\u006f\u0077 \u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gag.Row)
	}
	if _ddd := _gag.RowOff.ValidateWithPath(path + "\u002fR\u006f\u0077\u004f\u0066\u0066"); _ddd != nil {
		return _ddd
	}
	return nil
}

func NewCT_GroupShape() *CT_GroupShape {
	_adf := &CT_GroupShape{}
	_adf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_adf.GrpSpPr = _ge.NewCT_GroupShapeProperties()
	return _adf
}

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_gge *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _gge.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_bdaa *CT_OneCellAnchor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdaa.From = NewCT_Marker()
	_bdaa.Ext = _ge.NewCT_PositiveSize2D()
	_bdaa.ClientData = NewCT_AnchorClientData()
_bga:
	for {
		_badd, _cee := d.Token()
		if _cee != nil {
			return _cee
		}
		switch _gdd := _badd.(type) {
		case _b.StartElement:
			switch _gdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _fagb := d.DecodeElement(_bdaa.From, &_gdd); _fagb != nil {
					return _fagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}:
				if _cddg := d.DecodeElement(_bdaa.Ext, &_gdd); _cddg != nil {
					return _cddg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_bdaa.Choice = NewEG_ObjectChoicesChoice()
				if _eeef := d.DecodeElement(&_bdaa.Choice.Sp, &_gdd); _eeef != nil {
					return _eeef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_bdaa.Choice = NewEG_ObjectChoicesChoice()
				if _degd := d.DecodeElement(&_bdaa.Choice.GrpSp, &_gdd); _degd != nil {
					return _degd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bdaa.Choice = NewEG_ObjectChoicesChoice()
				if _baa := d.DecodeElement(&_bdaa.Choice.GraphicFrame, &_gdd); _baa != nil {
					return _baa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_bdaa.Choice = NewEG_ObjectChoicesChoice()
				if _fbge := d.DecodeElement(&_bdaa.Choice.CxnSp, &_gdd); _fbge != nil {
					return _fbge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_bdaa.Choice = NewEG_ObjectChoicesChoice()
				if _cbae := d.DecodeElement(&_bdaa.Choice.Pic, &_gdd); _cbae != nil {
					return _cbae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_bdaa.Choice = NewEG_ObjectChoicesChoice()
				if _fccad := d.DecodeElement(&_bdaa.Choice.ContentPart, &_gdd); _fccad != nil {
					return _fccad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}:
				if _gda := d.DecodeElement(_bdaa.ClientData, &_gdd); _gda != nil {
					return _gda
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _gdd.Name)
				if _ccb := d.Skip(); _ccb != nil {
					return _ccb
				}
			}
		case _b.EndElement:
			break _bga
		case _b.CharData:
		}
	}
	return nil
}

type WsDr struct{ CT_Drawing }

type CT_Picture struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvPicPr        *CT_PictureNonVisual
	BlipFill       *_ge.CT_BlipFillProperties
	SpPr           *_ge.CT_ShapeProperties
	Style          *_ge.CT_ShapeStyle
}

func NewCT_Rel() *CT_Rel { _dcc := &CT_Rel{}; return _dcc }

type CT_Marker struct {
	Col    int32
	ColOff _ge.ST_Coordinate
	Row    int32
	RowOff _ge.ST_Coordinate
}

func NewCT_Shape() *CT_Shape {
	_dde := &CT_Shape{}
	_dde.NvSpPr = NewCT_ShapeNonVisual()
	_dde.SpPr = _ge.NewCT_ShapeProperties()
	return _dde
}

func NewCT_Drawing() *CT_Drawing { _gef := &CT_Drawing{}; return _gef }

func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_de := &CT_ConnectorNonVisual{}
	_de.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_de.CNvCxnSpPr = _ge.NewCT_NonVisualConnectorProperties()
	return _de
}

type CT_PictureNonVisual struct {
	CNvPr    *_ge.CT_NonVisualDrawingProps
	CNvPicPr *_ge.CT_NonVisualPictureProperties
}

func (_egeg *EG_Anchor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cfee:
	for {
		_ebbf, _egaa := d.Token()
		if _egaa != nil {
			return _egaa
		}
		switch _ebce := _ebbf.(type) {
		case _b.StartElement:
			switch _ebce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_egeg.TwoCellAnchor = NewCT_TwoCellAnchor()
				if _ccgb := d.DecodeElement(_egeg.TwoCellAnchor, &_ebce); _ccgb != nil {
					return _ccgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_egeg.OneCellAnchor = NewCT_OneCellAnchor()
				if _ffc := d.DecodeElement(_egeg.OneCellAnchor, &_ebce); _ffc != nil {
					return _ffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}:
				_egeg.AbsoluteAnchor = NewCT_AbsoluteAnchor()
				if _gbfd := d.DecodeElement(_egeg.AbsoluteAnchor, &_ebce); _gbfd != nil {
					return _gbfd
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0041\u006e\u0063h\u006f\u0072 \u0025\u0076", _ebce.Name)
				if _abg := d.Skip(); _abg != nil {
					return _abg
				}
			}
		case _b.EndElement:
			break _cfee
		case _b.CharData:
		}
	}
	return nil
}

func (_cabc *ST_EditAs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agge, _fbca := d.Token()
	if _fbca != nil {
		return _fbca
	}
	if _bbca, _eada := _agge.(_b.EndElement); _eada && _bbca.Name == start.Name {
		*_cabc = 1
		return nil
	}
	if _afefg, _bbbc := _agge.(_b.CharData); !_bbbc {
		return _eb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agge)
	} else {
		switch string(_afefg) {
		case "":
			*_cabc = 0
		case "\u0074w\u006f\u0043\u0065\u006c\u006c":
			*_cabc = 1
		case "\u006fn\u0065\u0043\u0065\u006c\u006c":
			*_cabc = 2
		case "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065":
			*_cabc = 3
		}
	}
	_agge, _fbca = d.Token()
	if _fbca != nil {
		return _fbca
	}
	if _cdcc, _egag := _agge.(_b.EndElement); _egag && _cdcc.Name == start.Name {
		return nil
	}
	return _eb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agge)
}

// Validate validates the CT_Marker and its children
func (_cfa *CT_Marker) Validate() error {
	return _cfa.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r")
}

func (_ggcga *EG_ObjectChoicesChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggcga.Sp != nil {
		_dddd := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070"}}
		e.EncodeElement(_ggcga.Sp, _dddd)
	}
	if _ggcga.GrpSp != nil {
		_bfg := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0067\u0072\u0070\u0053p"}}
		e.EncodeElement(_ggcga.GrpSp, _bfg)
	}
	if _ggcga.GraphicFrame != nil {
		_gebg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064r\u003a\u0067\u0072a\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		e.EncodeElement(_ggcga.GraphicFrame, _gebg)
	}
	if _ggcga.CxnSp != nil {
		_faff := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u0078\u006e\u0053p"}}
		e.EncodeElement(_ggcga.CxnSp, _faff)
	}
	if _ggcga.Pic != nil {
		_aeda := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0070\u0069\u0063"}}
		e.EncodeElement(_ggcga.Pic, _aeda)
	}
	if _ggcga.ContentPart != nil {
		_bggd := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072:\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		e.EncodeElement(_ggcga.ContentPart, _bggd)
	}
	return nil
}

func (_eebb *CT_Marker) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eebb.Col = 0
	_eebb.Row = 0
_dae:
	for {
		_edc, _adfd := d.Token()
		if _adfd != nil {
			return _adfd
		}
		switch _eff := _edc.(type) {
		case _b.StartElement:
			switch _eff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}:
				if _dad := d.DecodeElement(&_eebb.Col, &_eff); _dad != nil {
					return _dad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}:
				if _febe := d.DecodeElement(&_eebb.ColOff, &_eff); _febe != nil {
					return _febe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}:
				if _faga := d.DecodeElement(&_eebb.Row, &_eff); _faga != nil {
					return _faga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}:
				if _gdgb := d.DecodeElement(&_eebb.RowOff, &_eff); _gdgb != nil {
					return _gdgb
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0072k\u0065\u0072 \u0025\u0076", _eff.Name)
				if _dada := d.Skip(); _dada != nil {
					return _dada
				}
			}
		case _b.EndElement:
			break _dae
		case _b.CharData:
		}
	}
	return nil
}

func (_cce *CT_Marker) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_acde := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0063\u006f\u006c"}}
	e.EncodeElement(_cce.Col, _acde)
	_efb := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006f\u006c\u004f\u0066\u0066"}}
	e.EncodeElement(_cce.ColOff, _efb)
	_dgf := _b.StartElement{Name: _b.Name{Local: "\u0078d\u0072\u003a\u0072\u006f\u0077"}}
	e.EncodeElement(_cce.Row, _dgf)
	_egef := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0072\u006f\u0077\u004f\u0066\u0066"}}
	e.EncodeElement(_cce.RowOff, _egef)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_ece *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _fac := _ece.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fac != nil {
		return _fac
	}
	if _aeb := _ece.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _aeb != nil {
		return _aeb
	}
	return nil
}

func NewCT_OneCellAnchor() *CT_OneCellAnchor {
	_bggb := &CT_OneCellAnchor{}
	_bggb.From = NewCT_Marker()
	_bggb.Ext = _ge.NewCT_PositiveSize2D()
	_bggb.ClientData = NewCT_AnchorClientData()
	return _bggb
}

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_ccad *CT_Rel) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_ddb *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _aefb := _ddb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aefb != nil {
		return _aefb
	}
	if _fgg := _ddb.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _fgg != nil {
		return _fgg
	}
	return nil
}

func (_bfa *CT_GroupShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_beg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_bfa.NvGrpSpPr, _beg)
	_bef := _b.StartElement{Name: _b.Name{Local: "x\u0064\u0072\u003a\u0067\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_bfa.GrpSpPr, _bef)
	if _bfa.Choice != nil {
		for _, _bddec := range _bfa.Choice {
			_bddec.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TwoCellAnchor and its children
func (_ccbf *CT_TwoCellAnchor) Validate() error {
	return _ccbf.ValidateWithPath("\u0043\u0054_\u0054\u0077\u006fC\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072")
}

func (_aefeg *CT_Picture) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aefeg.NvPicPr = NewCT_PictureNonVisual()
	_aefeg.BlipFill = _ge.NewCT_BlipFillProperties()
	_aefeg.SpPr = _ge.NewCT_ShapeProperties()
	for _, _aebg := range start.Attr {
		if _aebg.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_cfaa, _aff := _aebg.Value, error(nil)
			if _aff != nil {
				return _aff
			}
			_aefeg.MacroAttr = &_cfaa
			continue
		}
		if _aebg.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_cde, _dcbf := _bb.ParseBool(_aebg.Value)
			if _dcbf != nil {
				return _dcbf
			}
			_aefeg.FPublishedAttr = &_cde
			continue
		}
	}
_cbe:
	for {
		_feec, _bcde := d.Token()
		if _bcde != nil {
			return _bcde
		}
		switch _eeeb := _feec.(type) {
		case _b.StartElement:
			switch _eeeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _bab := d.DecodeElement(_aefeg.NvPicPr, &_eeeb); _bab != nil {
					return _bab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _fdd := d.DecodeElement(_aefeg.BlipFill, &_eeeb); _fdd != nil {
					return _fdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _dag := d.DecodeElement(_aefeg.SpPr, &_eeeb); _dag != nil {
					return _dag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_aefeg.Style = _ge.NewCT_ShapeStyle()
				if _ggca := d.DecodeElement(_aefeg.Style, &_eeeb); _ggca != nil {
					return _ggca
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _eeeb.Name)
				if _ebb := d.Skip(); _ebb != nil {
					return _ebb
				}
			}
		case _b.EndElement:
			break _cbe
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_Anchor and its children, prefixing error messages with path
func (_bgc *EG_Anchor) ValidateWithPath(path string) error {
	if _bgc.TwoCellAnchor != nil {
		if _fagf := _bgc.TwoCellAnchor.ValidateWithPath(path + "\u002f\u0054\u0077\u006f\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"); _fagf != nil {
			return _fagf
		}
	}
	if _bgc.OneCellAnchor != nil {
		if _bagc := _bgc.OneCellAnchor.ValidateWithPath(path + "\u002f\u004f\u006e\u0065\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"); _bagc != nil {
			return _bagc
		}
	}
	if _bgc.AbsoluteAnchor != nil {
		if _baaad := _bgc.AbsoluteAnchor.ValidateWithPath(path + "\u002fA\u0062s\u006f\u006c\u0075\u0074\u0065\u0041\u006e\u0063\u0068\u006f\u0072"); _baaad != nil {
			return _baaad
		}
	}
	return nil
}

// Validate validates the From and its children
func (_gbbc *From) Validate() error { return _gbbc.ValidateWithPath("\u0046\u0072\u006f\u006d") }

type CT_AbsoluteAnchor struct {
	Pos        *_ge.CT_Point2D
	Ext        *_ge.CT_PositiveSize2D
	Choice     *EG_ObjectChoicesChoice
	ClientData *CT_AnchorClientData
}

func (_ggf *EG_ObjectChoicesChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gccfb:
	for {
		_feg, _dda := d.Token()
		if _dda != nil {
			return _dda
		}
		switch _dgbf := _feg.(type) {
		case _b.StartElement:
			switch _dgbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_ggf.Sp = NewCT_Shape()
				if _dcaa := d.DecodeElement(_ggf.Sp, &_dgbf); _dcaa != nil {
					return _dcaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_ggf.GrpSp = NewCT_GroupShape()
				if _efe := d.DecodeElement(_ggf.GrpSp, &_dgbf); _efe != nil {
					return _efe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_ggf.GraphicFrame = NewCT_GraphicalObjectFrame()
				if _bdcd := d.DecodeElement(_ggf.GraphicFrame, &_dgbf); _bdcd != nil {
					return _bdcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_ggf.CxnSp = NewCT_Connector()
				if _bggg := d.DecodeElement(_ggf.CxnSp, &_dgbf); _bggg != nil {
					return _bggg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_ggf.Pic = NewCT_Picture()
				if _agga := d.DecodeElement(_ggf.Pic, &_dgbf); _agga != nil {
					return _agga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_ggf.ContentPart = NewCT_Rel()
				if _abee := d.DecodeElement(_ggf.ContentPart, &_dgbf); _abee != nil {
					return _abee
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u004f\u0062\u006a\u0065c\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _dgbf.Name)
				if _dded := d.Skip(); _dded != nil {
					return _dded
				}
			}
		case _b.EndElement:
			break _gccfb
		case _b.CharData:
		}
	}
	return nil
}

type CT_GroupShape struct {
	NvGrpSpPr *CT_GroupShapeNonVisual
	GrpSpPr   *_ge.CT_GroupShapeProperties
	Choice    []*CT_GroupShapeChoice
}

// Validate validates the CT_Picture and its children
func (_gbb *CT_Picture) Validate() error {
	return _gbb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

const (
	ST_EditAsUnset    ST_EditAs = 0
	ST_EditAsTwoCell  ST_EditAs = 1
	ST_EditAsOneCell  ST_EditAs = 2
	ST_EditAsAbsolute ST_EditAs = 3
)

func (_gdaa *To) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0078\u0064\u0072\u003a\u0074\u006f"
	return _gdaa.CT_Marker.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_OneCellAnchor and its children, prefixing error messages with path
func (_cfc *CT_OneCellAnchor) ValidateWithPath(path string) error {
	if _dgcdc := _cfc.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _dgcdc != nil {
		return _dgcdc
	}
	if _ecf := _cfc.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _ecf != nil {
		return _ecf
	}
	if _cfc.Choice != nil {
		if _acb := _cfc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _acb != nil {
			return _acb
		}
	}
	if _aad := _cfc.ClientData.ValidateWithPath(path + "/\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"); _aad != nil {
		return _aad
	}
	return nil
}

func (_ebga ST_EditAs) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bgeb := _b.Attr{}
	_bgeb.Name = name
	switch _ebga {
	case ST_EditAsUnset:
		_bgeb.Value = ""
	case ST_EditAsTwoCell:
		_bgeb.Value = "\u0074w\u006f\u0043\u0065\u006c\u006c"
	case ST_EditAsOneCell:
		_bgeb.Value = "\u006fn\u0065\u0043\u0065\u006c\u006c"
	case ST_EditAsAbsolute:
		_bgeb.Value = "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065"
	}
	return _bgeb, nil
}

// Validate validates the To and its children
func (_gcef *To) Validate() error { return _gcef.ValidateWithPath("\u0054\u006f") }

// Validate validates the CT_ShapeNonVisual and its children
func (_fbd *CT_ShapeNonVisual) Validate() error {
	return _fbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}

type CT_AnchorClientData struct {
	FLocksWithSheetAttr  *bool
	FPrintsWithSheetAttr *bool
}

func (_agfb ST_EditAs) Validate() error { return _agfb.ValidateWithPath("") }

type CT_ConnectorNonVisual struct {
	CNvPr      *_ge.CT_NonVisualDrawingProps
	CNvCxnSpPr *_ge.CT_NonVisualConnectorProperties
}

func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_ecae := &CT_GroupShapeNonVisual{}
	_ecae.CNvPr = _ge.NewCT_NonVisualDrawingProps()
	_ecae.CNvGrpSpPr = _ge.NewCT_NonVisualGroupDrawingShapeProps()
	return _ecae
}

func NewFrom() *From { _cea := &From{}; _cea.CT_Marker = *NewCT_Marker(); return _cea }

func init() {
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0041nc\u0068\u006f\u0072\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061", NewCT_AnchorClientData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r", NewCT_Marker)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054_\u0054\u0077\u006fC\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_TwoCellAnchor)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054_\u004f\u006e\u0065C\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_OneCellAnchor)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0041\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072", NewCT_AbsoluteAnchor)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0066\u0072\u006f\u006d", NewFrom)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0074\u006f", NewTo)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0077\u0073\u0044\u0072", NewWsDr)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073", NewEG_ObjectChoices)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr", NewEG_Anchor)
}
