//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package chartDrawing

import (
	_f "encoding/xml"
	_a "fmt"
	_ac "github.com/unidoc/unioffice"
	_af "github.com/unidoc/unioffice/schema/soo/dml"
	_e "strconv"
)

func (_edfe *CT_GroupShapeChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bagg:
	for {
		_fac, _fafd := d.Token()
		if _fafd != nil {
			return _fafd
		}
		switch _bcg := _fac.(type) {
		case _f.StartElement:
			switch _bcg.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_dd := NewCT_Shape()
				if _egd := d.DecodeElement(_dd, &_bcg); _egd != nil {
					return _egd
				}
				_edfe.Sp = append(_edfe.Sp, _dd)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_edg := NewCT_GroupShape()
				if _fedf := d.DecodeElement(_edg, &_bcg); _fedf != nil {
					return _fedf
				}
				_edfe.GrpSp = append(_edfe.GrpSp, _edg)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gg := NewCT_GraphicFrame()
				if _abc := d.DecodeElement(_gg, &_bcg); _abc != nil {
					return _abc
				}
				_edfe.GraphicFrame = append(_edfe.GraphicFrame, _gg)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_babc := NewCT_Connector()
				if _bbg := d.DecodeElement(_babc, &_bcg); _bbg != nil {
					return _bbg
				}
				_edfe.CxnSp = append(_edfe.CxnSp, _babc)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_dde := NewCT_Picture()
				if _efe := d.DecodeElement(_dde, &_bcg); _efe != nil {
					return _efe
				}
				_edfe.Pic = append(_edfe.Pic, _dde)
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bcg.Name)
				if _dc := d.Skip(); _dc != nil {
					return _dc
				}
			}
		case _f.EndElement:
			break _bagg
		case _f.CharData:
		}
	}
	return nil
}

type CT_GroupShape struct {
	NvGrpSpPr *CT_GroupShapeNonVisual
	GrpSpPr   *_af.CT_GroupShapeProperties
	Choice    []*CT_GroupShapeChoice
}

type CT_GraphicFrameNonVisual struct {
	CNvPr             *_af.CT_NonVisualDrawingProps
	CNvGraphicFramePr *_af.CT_NonVisualGraphicFrameProperties
}

func (_aba *CT_Shape) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _aba.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_aba.MacroAttr)})
	}
	if _aba.TextlinkAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b"}, Value: _a.Sprintf("\u0025\u0076", *_aba.TextlinkAttr)})
	}
	if _aba.FLocksTextAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bafb(*_aba.FLocksTextAttr))})
	}
	if _aba.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bafb(*_aba.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_fbd := _f.StartElement{Name: _f.Name{Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_aba.NvSpPr, _fbd)
	_ebcg := _f.StartElement{Name: _f.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_aba.SpPr, _ebcg)
	if _aba.Style != nil {
		_fagb := _f.StartElement{Name: _f.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_aba.Style, _fagb)
	}
	if _aba.TxBody != nil {
		_dgbb := _f.StartElement{Name: _f.Name{Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_aba.TxBody, _dgbb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _fdd := &CT_GroupShapeChoice{}; return _fdd }

// ValidateWithPath validates the EG_Anchor and its children, prefixing error messages with path
func (_dfc *EG_Anchor) ValidateWithPath(path string) error {
	if _dfc.RelSizeAnchor != nil {
		if _fdfc := _dfc.RelSizeAnchor.ValidateWithPath(path + "\u002f\u0052\u0065\u006c\u0053\u0069\u007a\u0065\u0041n\u0063\u0068\u006f\u0072"); _fdfc != nil {
			return _fdfc
		}
	}
	if _dfc.AbsSizeAnchor != nil {
		if _dfgd := _dfc.AbsSizeAnchor.ValidateWithPath(path + "\u002f\u0041\u0062\u0073\u0053\u0069\u007a\u0065\u0041n\u0063\u0068\u006f\u0072"); _dfgd != nil {
			return _dfgd
		}
	}
	return nil
}

// Validate validates the CT_Drawing and its children
func (_ebf *CT_Drawing) Validate() error {
	return _ebf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

type CT_Picture struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvPicPr        *CT_PictureNonVisual
	BlipFill       *_af.CT_BlipFillProperties
	SpPr           *_af.CT_ShapeProperties
	Style          *_af.CT_ShapeStyle
}

type CT_RelSizeAnchor struct {
	From   *CT_Marker
	To     *CT_Marker
	Choice *EG_ObjectChoicesChoice
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_aed *CT_Shape) ValidateWithPath(path string) error {
	if _ddc := _aed.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _ddc != nil {
		return _ddc
	}
	if _dbed := _aed.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dbed != nil {
		return _dbed
	}
	if _aed.Style != nil {
		if _fga := _aed.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _fga != nil {
			return _fga
		}
	}
	if _aed.TxBody != nil {
		if _cbf := _aed.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _cbf != nil {
			return _cbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_gcf *CT_GroupShape) ValidateWithPath(path string) error {
	if _ead := _gcf.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _ead != nil {
		return _ead
	}
	if _bcb := _gcf.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _bcb != nil {
		return _bcb
	}
	for _fggd, _faf := range _gcf.Choice {
		if _dafa := _faf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _fggd)); _dafa != nil {
			return _dafa
		}
	}
	return nil
}

func NewCT_GroupShape() *CT_GroupShape {
	_bf := &CT_GroupShape{}
	_bf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_bf.GrpSpPr = _af.NewCT_GroupShapeProperties()
	return _bf
}

func (_agba *CT_GroupShapeNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_gcd := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_agba.CNvPr, _gcd)
	_adf := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_agba.CNvGrpSpPr, _adf)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_debf *EG_ObjectChoices) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _debf.Choice != nil {
		_debf.Choice.MarshalXML(e, _f.StartElement{})
	}
	return nil
}

// Validate validates the CT_Connector and its children
func (_ba *CT_Connector) Validate() error {
	return _ba.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

type CT_PictureNonVisual struct {
	CNvPr    *_af.CT_NonVisualDrawingProps
	CNvPicPr *_af.CT_NonVisualPictureProperties
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
}

func (_ffc *CT_Picture) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ffc.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_ffc.MacroAttr)})
	}
	if _ffc.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bafb(*_ffc.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_badf := _f.StartElement{Name: _f.Name{Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_ffc.NvPicPr, _badf)
	_daee := _f.StartElement{Name: _f.Name{Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_ffc.BlipFill, _daee)
	_fdf := _f.StartElement{Name: _f.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ffc.SpPr, _fdf)
	if _ffc.Style != nil {
		_facg := _f.StartElement{Name: _f.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_ffc.Style, _facg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_AbsSizeAnchor struct {
	From   *CT_Marker
	Ext    *_af.CT_PositiveSize2D
	Choice *EG_ObjectChoicesChoice
}

func (_ed *CT_Connector) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ed.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_ed.MacroAttr)})
	}
	if _ed.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bafb(*_ed.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_aga := _f.StartElement{Name: _f.Name{Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}}
	e.EncodeElement(_ed.NvCxnSpPr, _aga)
	_adc := _f.StartElement{Name: _f.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ed.SpPr, _adc)
	if _ed.Style != nil {
		_fd := _f.StartElement{Name: _f.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_ed.Style, _fd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_ecd *CT_PictureNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ecd.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_ecd.CNvPicPr = _af.NewCT_NonVisualPictureProperties()
_afb:
	for {
		_eeca, _aacf := d.Token()
		if _aacf != nil {
			return _aacf
		}
		switch _bcbd := _eeca.(type) {
		case _f.StartElement:
			switch _bcbd.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _aea := d.DecodeElement(_ecd.CNvPr, &_bcbd); _aea != nil {
					return _aea
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _bbb := d.DecodeElement(_ecd.CNvPicPr, &_bcbd); _bbb != nil {
					return _bbb
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _bcbd.Name)
				if _cba := d.Skip(); _cba != nil {
					return _cba
				}
			}
		case _f.EndElement:
			break _afb
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_AbsSizeAnchor() *CT_AbsSizeAnchor {
	_cd := &CT_AbsSizeAnchor{}
	_cd.From = NewCT_Marker()
	_cd.Ext = _af.NewCT_PositiveSize2D()
	return _cd
}

func (_ddb *CT_Shape) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ddb.NvSpPr = NewCT_ShapeNonVisual()
	_ddb.SpPr = _af.NewCT_ShapeProperties()
	for _, _fde := range start.Attr {
		if _fde.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bbfd, _eed := _fde.Value, error(nil)
			if _eed != nil {
				return _eed
			}
			_ddb.MacroAttr = &_bbfd
			continue
		}
		if _fde.Name.Local == "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b" {
			_ageg, _ecad := _fde.Value, error(nil)
			if _ecad != nil {
				return _ecad
			}
			_ddb.TextlinkAttr = &_ageg
			continue
		}
		if _fde.Name.Local == "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074" {
			_cbg, _gcc := _e.ParseBool(_fde.Value)
			if _gcc != nil {
				return _gcc
			}
			_ddb.FLocksTextAttr = &_cbg
			continue
		}
		if _fde.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_ged, _fcce := _e.ParseBool(_fde.Value)
			if _fcce != nil {
				return _fcce
			}
			_ddb.FPublishedAttr = &_ged
			continue
		}
	}
_acb:
	for {
		_gda, _gcbc := d.Token()
		if _gcbc != nil {
			return _gcbc
		}
		switch _becb := _gda.(type) {
		case _f.StartElement:
			switch _becb.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _dffc := d.DecodeElement(_ddb.NvSpPr, &_becb); _dffc != nil {
					return _dffc
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _aff := d.DecodeElement(_ddb.SpPr, &_becb); _aff != nil {
					return _aff
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_ddb.Style = _af.NewCT_ShapeStyle()
				if _acee := d.DecodeElement(_ddb.Style, &_becb); _acee != nil {
					return _acee
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_ddb.TxBody = _af.NewCT_TextBody()
				if _bac := d.DecodeElement(_ddb.TxBody, &_becb); _bac != nil {
					return _bac
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _becb.Name)
				if _abe := d.Skip(); _abe != nil {
					return _abe
				}
			}
		case _f.EndElement:
			break _acb
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_bccc := &CT_PictureNonVisual{}
	_bccc.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_bccc.CNvPicPr = _af.NewCT_NonVisualPictureProperties()
	return _bccc
}

func (_def *CT_GroupShapeChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _def.Sp != nil {
		_fag := _f.StartElement{Name: _f.Name{Local: "\u0073\u0070"}}
		for _, _bbf := range _def.Sp {
			e.EncodeElement(_bbf, _fag)
		}
	}
	if _def.GrpSp != nil {
		_cee := _f.StartElement{Name: _f.Name{Local: "\u0067\u0072\u0070S\u0070"}}
		for _, _dgfg := range _def.GrpSp {
			e.EncodeElement(_dgfg, _cee)
		}
	}
	if _def.GraphicFrame != nil {
		_dbc := _f.StartElement{Name: _f.Name{Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		for _, _ab := range _def.GraphicFrame {
			e.EncodeElement(_ab, _dbc)
		}
	}
	if _def.CxnSp != nil {
		_bga := _f.StartElement{Name: _f.Name{Local: "\u0063\u0078\u006eS\u0070"}}
		for _, _gbe := range _def.CxnSp {
			e.EncodeElement(_gbe, _bga)
		}
	}
	if _def.Pic != nil {
		_eba := _f.StartElement{Name: _f.Name{Local: "\u0070\u0069\u0063"}}
		for _, _eff := range _def.Pic {
			e.EncodeElement(_eff, _eba)
		}
	}
	return nil
}

func (_edf *CT_Drawing) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fdb:
	for {
		_edb, _gdd := d.Token()
		if _gdd != nil {
			return _gdd
		}
		switch _fcb := _edb.(type) {
		case _f.StartElement:
			switch _fcb.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_bad := NewEG_Anchor()
				_bad.RelSizeAnchor = NewCT_RelSizeAnchor()
				if _dae := d.DecodeElement(_bad.RelSizeAnchor, &_fcb); _dae != nil {
					return _dae
				}
				_edf.EG_Anchor = append(_edf.EG_Anchor, _bad)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_cdb := NewEG_Anchor()
				_cdb.AbsSizeAnchor = NewCT_AbsSizeAnchor()
				if _gee := d.DecodeElement(_cdb.AbsSizeAnchor, &_fcb); _gee != nil {
					return _gee
				}
				_edf.EG_Anchor = append(_edf.EG_Anchor, _cdb)
			default:
				_ac.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0020\u0025\u0076", _fcb.Name)
				if _ffd := d.Skip(); _ffd != nil {
					return _ffd
				}
			}
		case _f.EndElement:
			break _fdb
		case _f.CharData:
		}
	}
	return nil
}

func (_agb *CT_GroupShape) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_agb.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_agb.GrpSpPr = _af.NewCT_GroupShapeProperties()
_bfe:
	for {
		_bde, _bab := d.Token()
		if _bab != nil {
			return _bab
		}
		switch _aacd := _bde.(type) {
		case _f.StartElement:
			switch _aacd.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _fbg := d.DecodeElement(_agb.NvGrpSpPr, &_aacd); _fbg != nil {
					return _fbg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _fgf := d.DecodeElement(_agb.GrpSpPr, &_aacd); _fgf != nil {
					return _fgf
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_eggg := NewCT_GroupShapeChoice()
				if _dee := d.DecodeElement(&_eggg.Sp, &_aacd); _dee != nil {
					return _dee
				}
				_agb.Choice = append(_agb.Choice, _eggg)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_fbbf := NewCT_GroupShapeChoice()
				if _daf := d.DecodeElement(&_fbbf.GrpSp, &_aacd); _daf != nil {
					return _daf
				}
				_agb.Choice = append(_agb.Choice, _fbbf)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_faa := NewCT_GroupShapeChoice()
				if _bgd := d.DecodeElement(&_faa.GraphicFrame, &_aacd); _bgd != nil {
					return _bgd
				}
				_agb.Choice = append(_agb.Choice, _faa)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_cgb := NewCT_GroupShapeChoice()
				if _bfc := d.DecodeElement(&_cgb.CxnSp, &_aacd); _bfc != nil {
					return _bfc
				}
				_agb.Choice = append(_agb.Choice, _cgb)
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_fcc := NewCT_GroupShapeChoice()
				if _gdbd := d.DecodeElement(&_fcc.Pic, &_aacd); _gdbd != nil {
					return _gdbd
				}
				_agb.Choice = append(_agb.Choice, _fcc)
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _aacd.Name)
				if _eec := d.Skip(); _eec != nil {
					return _eec
				}
			}
		case _f.EndElement:
			break _bfe
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PictureNonVisual and its children
func (_fgbd *CT_PictureNonVisual) Validate() error {
	return _fgbd.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_dab *CT_Marker) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dab.X = 0.0
	_dab.Y = 0.0
_efb:
	for {
		_bec, _bgbc := d.Token()
		if _bgbc != nil {
			return _bgbc
		}
		switch _ebbd := _bec.(type) {
		case _f.StartElement:
			switch _ebbd.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078"}:
				if _fcgg := d.DecodeElement(&_dab.X, &_ebbd); _fcgg != nil {
					return _fcgg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0079"}:
				if _ebc := d.DecodeElement(&_dab.Y, &_ebbd); _ebc != nil {
					return _ebc
				}
			default:
				_ac.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0072k\u0065\u0072 \u0025\u0076", _ebbd.Name)
				if _fbbc := d.Skip(); _fbbc != nil {
					return _fbbc
				}
			}
		case _f.EndElement:
			break _efb
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Marker and its children, prefixing error messages with path
func (_gdg *CT_Marker) ValidateWithPath(path string) error {
	if _gdg.X < 0.0 {
		return _a.Errorf("\u0025\u0073\u002fm\u002e\u0058\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gdg.X)
	}
	if _gdg.X > 1.0 {
		return _a.Errorf("\u0025\u0073\u002fm\u002e\u0058\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0031\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gdg.X)
	}
	if _gdg.Y < 0.0 {
		return _a.Errorf("\u0025\u0073\u002fm\u002e\u0059\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gdg.Y)
	}
	if _gdg.Y > 1.0 {
		return _a.Errorf("\u0025\u0073\u002fm\u002e\u0059\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0031\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gdg.Y)
	}
	return nil
}

// Validate validates the CT_GraphicFrameNonVisual and its children
func (_fbc *CT_GraphicFrameNonVisual) Validate() error {
	return _fbc.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func _bafb(_gdeg bool) uint8 {
	if _gdeg {
		return 1
	}
	return 0
}

func (_bd *CT_Connector) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bd.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_bd.SpPr = _af.NewCT_ShapeProperties()
	for _, _gd := range start.Attr {
		if _gd.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_gc, _fe := _gd.Value, error(nil)
			if _fe != nil {
				return _fe
			}
			_bd.MacroAttr = &_gc
			continue
		}
		if _gd.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_ef, _dg := _e.ParseBool(_gd.Value)
			if _dg != nil {
				return _dg
			}
			_bd.FPublishedAttr = &_ef
			continue
		}
	}
_be:
	for {
		_aa, _fed := d.Token()
		if _fed != nil {
			return _fed
		}
		switch _cf := _aa.(type) {
		case _f.StartElement:
			switch _cf.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _eb := d.DecodeElement(_bd.NvCxnSpPr, &_cf); _eb != nil {
					return _eb
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _fa := d.DecodeElement(_bd.SpPr, &_cf); _fa != nil {
					return _fa
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_bd.Style = _af.NewCT_ShapeStyle()
				if _ace := d.DecodeElement(_bd.Style, &_cf); _ace != nil {
					return _ace
				}
			default:
				_ac.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _cf.Name)
				if _eeb := d.Skip(); _eeb != nil {
					return _eeb
				}
			}
		case _f.EndElement:
			break _be
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RelSizeAnchor and its children, prefixing error messages with path
func (_dcgc *CT_RelSizeAnchor) ValidateWithPath(path string) error {
	if _bece := _dcgc.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _bece != nil {
		return _bece
	}
	if _cbc := _dcgc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _cbc != nil {
		return _cbc
	}
	if _dcgc.Choice != nil {
		if _edc := _dcgc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _edc != nil {
			return _edc
		}
	}
	return nil
}

func (_bcd *CT_GraphicFrame) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bcd.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_bcd.MacroAttr)})
	}
	if _bcd.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bafb(*_bcd.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_gag := _f.StartElement{Name: _f.Name{Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_bcd.NvGraphicFramePr, _gag)
	_age := _f.StartElement{Name: _f.Name{Local: "\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_bcd.Xfrm, _age)
	_gfb := _f.StartElement{Name: _f.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_bcd.Graphic, _gfb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupShape and its children
func (_cgf *CT_GroupShape) Validate() error {
	return _cgf.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}

func (_adcg *CT_GraphicFrameNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_dbe := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_adcg.CNvPr, _dbe)
	_cfe := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_adcg.CNvGraphicFramePr, _cfe)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_fdc *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _debg := _fdc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _debg != nil {
		return _debg
	}
	if _ggf := _fdc.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _ggf != nil {
		return _ggf
	}
	return nil
}

// Validate validates the CT_GroupShapeChoice and its children
func (_cbe *CT_GroupShapeChoice) Validate() error {
	return _cbe.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

type CT_ConnectorNonVisual struct {
	CNvPr      *_af.CT_NonVisualDrawingProps
	CNvCxnSpPr *_af.CT_NonVisualConnectorProperties
}

func (_gdgd *CT_ShapeNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gdgd.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_gdgd.CNvSpPr = _af.NewCT_NonVisualDrawingShapeProps()
_fbgd:
	for {
		_gbc, _ceg := d.Token()
		if _ceg != nil {
			return _ceg
		}
		switch _ggg := _gbc.(type) {
		case _f.StartElement:
			switch _ggg.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _afgg := d.DecodeElement(_gdgd.CNvPr, &_ggg); _afgg != nil {
					return _afgg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _aee := d.DecodeElement(_gdgd.CNvSpPr, &_ggg); _aee != nil {
					return _aee
				}
			default:
				_ac.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ggg.Name)
				if _cbab := d.Skip(); _cbab != nil {
					return _cbab
				}
			}
		case _f.EndElement:
			break _fbgd
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_GraphicFrameNonVisual() *CT_GraphicFrameNonVisual {
	_ebb := &CT_GraphicFrameNonVisual{}
	_ebb.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_ebb.CNvGraphicFramePr = _af.NewCT_NonVisualGraphicFrameProperties()
	return _ebb
}

type CT_Drawing struct{ EG_Anchor []*EG_Anchor }

// Validate validates the CT_Shape and its children
func (_gfbd *CT_Shape) Validate() error {
	return _gfbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}

func NewEG_Anchor() *EG_Anchor { _ffgd := &EG_Anchor{}; return _ffgd }

func (_bgc *CT_GraphicFrameNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bgc.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_bgc.CNvGraphicFramePr = _af.NewCT_NonVisualGraphicFrameProperties()
_eaf:
	for {
		_bb, _efd := d.Token()
		if _efd != nil {
			return _efd
		}
		switch _gad := _bb.(type) {
		case _f.StartElement:
			switch _gad.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _eab := d.DecodeElement(_bgc.CNvPr, &_gad); _eab != nil {
					return _eab
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _gba := d.DecodeElement(_bgc.CNvGraphicFramePr, &_gad); _gba != nil {
					return _gba
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c\u0020%\u0076", _gad.Name)
				if _cdbe := d.Skip(); _cdbe != nil {
					return _cdbe
				}
			}
		case _f.EndElement:
			break _eaf
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicFrame and its children, prefixing error messages with path
func (_cdbg *CT_GraphicFrame) ValidateWithPath(path string) error {
	if _bgba := _cdbg.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _bgba != nil {
		return _bgba
	}
	if _gdc := _cdbg.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _gdc != nil {
		return _gdc
	}
	if _deb := _cdbg.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _deb != nil {
		return _deb
	}
	return nil
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_gfa *CT_Connector) ValidateWithPath(path string) error {
	if _cddd := _gfa.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _cddd != nil {
		return _cddd
	}
	if _db := _gfa.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _db != nil {
		return _db
	}
	if _gfa.Style != nil {
		if _da := _gfa.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _da != nil {
			return _da
		}
	}
	return nil
}

type CT_Marker struct {
	X float64
	Y float64
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_ccc *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _agbad := _ccc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _agbad != nil {
		return _agbad
	}
	if _fad := _ccc.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _fad != nil {
		return _fad
	}
	return nil
}

// ValidateWithPath validates the EG_ObjectChoicesChoice and its children, prefixing error messages with path
func (_acbf *EG_ObjectChoicesChoice) ValidateWithPath(path string) error {
	if _acbf.Sp != nil {
		if _afa := _acbf.Sp.ValidateWithPath(path + "\u002f\u0053\u0070"); _afa != nil {
			return _afa
		}
	}
	if _acbf.GrpSp != nil {
		if _cad := _acbf.GrpSp.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070"); _cad != nil {
			return _cad
		}
	}
	if _acbf.GraphicFrame != nil {
		if _eae := _acbf.GraphicFrame.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"); _eae != nil {
			return _eae
		}
	}
	if _acbf.CxnSp != nil {
		if _ceab := _acbf.CxnSp.ValidateWithPath(path + "\u002f\u0043\u0078\u006e\u0053\u0070"); _ceab != nil {
			return _ceab
		}
	}
	if _acbf.Pic != nil {
		if _abf := _acbf.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _abf != nil {
			return _abf
		}
	}
	return nil
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_aad *CT_GroupShapeNonVisual) Validate() error {
	return _aad.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

func NewCT_Picture() *CT_Picture {
	_gde := &CT_Picture{}
	_gde.NvPicPr = NewCT_PictureNonVisual()
	_gde.BlipFill = _af.NewCT_BlipFillProperties()
	_gde.SpPr = _af.NewCT_ShapeProperties()
	return _gde
}

// Validate validates the CT_RelSizeAnchor and its children
func (_baf *CT_RelSizeAnchor) Validate() error {
	return _baf.ValidateWithPath("\u0043\u0054_\u0052\u0065\u006cS\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072")
}

func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_edd := &CT_GroupShapeNonVisual{}
	_edd.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_edd.CNvGrpSpPr = _af.NewCT_NonVisualGroupDrawingShapeProps()
	return _edd
}

func NewCT_Marker() *CT_Marker { _cfa := &CT_Marker{}; _cfa.X = 0.0; _cfa.Y = 0.0; return _cfa }

// Validate validates the CT_ConnectorNonVisual and its children
func (_df *CT_ConnectorNonVisual) Validate() error {
	return _df.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

// Validate validates the CT_AbsSizeAnchor and its children
func (_gfd *CT_AbsSizeAnchor) Validate() error {
	return _gfd.ValidateWithPath("\u0043\u0054_\u0041\u0062\u0073S\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072")
}

// Validate validates the CT_Marker and its children
func (_fggb *CT_Marker) Validate() error {
	return _fggb.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r")
}

func (_gcab *EG_ObjectChoices) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ccd:
	for {
		_bed, _acec := d.Token()
		if _acec != nil {
			return _acec
		}
		switch _dabc := _bed.(type) {
		case _f.StartElement:
			switch _dabc.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_gcab.Choice = NewEG_ObjectChoicesChoice()
				if _cff := d.DecodeElement(&_gcab.Choice.Sp, &_dabc); _cff != nil {
					return _cff
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_gcab.Choice = NewEG_ObjectChoicesChoice()
				if _feg := d.DecodeElement(&_gcab.Choice.GrpSp, &_dabc); _feg != nil {
					return _feg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gcab.Choice = NewEG_ObjectChoicesChoice()
				if _ebeg := d.DecodeElement(&_gcab.Choice.GraphicFrame, &_dabc); _ebeg != nil {
					return _ebeg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_gcab.Choice = NewEG_ObjectChoicesChoice()
				if _babg := d.DecodeElement(&_gcab.Choice.CxnSp, &_dabc); _babg != nil {
					return _babg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_gcab.Choice = NewEG_ObjectChoicesChoice()
				if _geg := d.DecodeElement(&_gcab.Choice.Pic, &_dabc); _geg != nil {
					return _geg
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0020\u0025v", _dabc.Name)
				if _dce := d.Skip(); _dce != nil {
					return _dce
				}
			}
		case _f.EndElement:
			break _ccd
		case _f.CharData:
		}
	}
	return nil
}

func (_bca *EG_ObjectChoicesChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bcec:
	for {
		_dfge, _cefg := d.Token()
		if _cefg != nil {
			return _cefg
		}
		switch _bfd := _dfge.(type) {
		case _f.StartElement:
			switch _bfd.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_bca.Sp = NewCT_Shape()
				if _dba := d.DecodeElement(_bca.Sp, &_bfd); _dba != nil {
					return _dba
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_bca.GrpSp = NewCT_GroupShape()
				if _egeb := d.DecodeElement(_bca.GrpSp, &_bfd); _egeb != nil {
					return _egeb
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bca.GraphicFrame = NewCT_GraphicFrame()
				if _ggdg := d.DecodeElement(_bca.GraphicFrame, &_bfd); _ggdg != nil {
					return _ggdg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_bca.CxnSp = NewCT_Connector()
				if _dedb := d.DecodeElement(_bca.CxnSp, &_bfd); _dedb != nil {
					return _dedb
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_bca.Pic = NewCT_Picture()
				if _bba := d.DecodeElement(_bca.Pic, &_bfd); _bba != nil {
					return _bba
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u004f\u0062\u006a\u0065c\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bfd.Name)
				if _cdbb := d.Skip(); _cdbb != nil {
					return _cdbb
				}
			}
		case _f.EndElement:
			break _bcec
		case _f.CharData:
		}
	}
	return nil
}

func (_dge *CT_ConnectorNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_gb := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_dge.CNvPr, _gb)
	_fb := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dge.CNvCxnSpPr, _fb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_egb *CT_GraphicFrame) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_egb.NvGraphicFramePr = NewCT_GraphicFrameNonVisual()
	_egb.Xfrm = _af.NewCT_Transform2D()
	_egb.Graphic = _af.NewGraphic()
	for _, _cdf := range start.Attr {
		if _cdf.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_fea, _efa := _cdf.Value, error(nil)
			if _efa != nil {
				return _efa
			}
			_egb.MacroAttr = &_fea
			continue
		}
		if _cdf.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_fbb, _fgc := _e.ParseBool(_cdf.Value)
			if _fgc != nil {
				return _fgc
			}
			_egb.FPublishedAttr = &_fbb
			continue
		}
	}
_cefc:
	for {
		_dfa, _aac := d.Token()
		if _aac != nil {
			return _aac
		}
		switch _fab := _dfa.(type) {
		case _f.StartElement:
			switch _fab.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _dad := d.DecodeElement(_egb.NvGraphicFramePr, &_fab); _dad != nil {
					return _dad
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078\u0066\u0072\u006d"}:
				if _eca := d.DecodeElement(_egb.Xfrm, &_fab); _eca != nil {
					return _eca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _cb := d.DecodeElement(_egb.Graphic, &_fab); _cb != nil {
					return _cb
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _fab.Name)
				if _fee := d.Skip(); _fee != nil {
					return _fee
				}
			}
		case _f.EndElement:
			break _cefc
		case _f.CharData:
		}
	}
	return nil
}

type CT_Shape struct {
	MacroAttr      *string
	TextlinkAttr   *string
	FLocksTextAttr *bool
	FPublishedAttr *bool
	NvSpPr         *CT_ShapeNonVisual
	SpPr           *_af.CT_ShapeProperties
	Style          *_af.CT_ShapeStyle
	TxBody         *_af.CT_TextBody
}

func NewEG_ObjectChoicesChoice() *EG_ObjectChoicesChoice {
	_daeeb := &EG_ObjectChoicesChoice{}
	return _daeeb
}

func (_gce *CT_GroupShape) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_aeg := _f.StartElement{Name: _f.Name{Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_gce.NvGrpSpPr, _aeg)
	_gagg := _f.StartElement{Name: _f.Name{Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gce.GrpSpPr, _gagg)
	if _gce.Choice != nil {
		for _, _afe := range _gce.Choice {
			_afe.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_bgda *EG_Anchor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bgda.RelSizeAnchor != nil {
		_cbff := _f.StartElement{Name: _f.Name{Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_bgda.RelSizeAnchor, _cbff)
	}
	if _bgda.AbsSizeAnchor != nil {
		_gae := _f.StartElement{Name: _f.Name{Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_bgda.AbsSizeAnchor, _gae)
	}
	return nil
}

func NewCT_Connector() *CT_Connector {
	_ece := &CT_Connector{}
	_ece.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_ece.SpPr = _af.NewCT_ShapeProperties()
	return _ece
}

func (_ded *CT_Marker) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_bgab := _f.StartElement{Name: _f.Name{Local: "\u0078"}}
	e.EncodeElement(_ded.X, _bgab)
	_bdd := _f.StartElement{Name: _f.Name{Local: "\u0079"}}
	e.EncodeElement(_ded.Y, _bdd)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewEG_ObjectChoices() *EG_ObjectChoices { _ddg := &EG_ObjectChoices{}; return _ddg }

// Validate validates the EG_ObjectChoicesChoice and its children
func (_efg *EG_ObjectChoicesChoice) Validate() error {
	return _efg.ValidateWithPath("\u0045\u0047\u005f\u004fbj\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069c\u0065")
}

type CT_GroupShapeNonVisual struct {
	CNvPr      *_af.CT_NonVisualDrawingProps
	CNvGrpSpPr *_af.CT_NonVisualGroupDrawingShapeProps
}

// ValidateWithPath validates the EG_ObjectChoices and its children, prefixing error messages with path
func (_afea *EG_ObjectChoices) ValidateWithPath(path string) error {
	if _afea.Choice != nil {
		if _dcb := _afea.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dcb != nil {
			return _dcb
		}
	}
	return nil
}

func (_bff *CT_PictureNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_gef := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_bff.CNvPr, _gef)
	_edfc := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_bff.CNvPicPr, _edfc)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GraphicFrameNonVisual and its children, prefixing error messages with path
func (_bcf *CT_GraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _cg := _bcf.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cg != nil {
		return _cg
	}
	if _cefd := _bcf.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _cefd != nil {
		return _cefd
	}
	return nil
}

func (_egf *EG_Anchor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dafe:
	for {
		_dfe, _ebg := d.Token()
		if _ebg != nil {
			return _ebg
		}
		switch _fce := _dfe.(type) {
		case _f.StartElement:
			switch _fce.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_egf.RelSizeAnchor = NewCT_RelSizeAnchor()
				if _gcea := d.DecodeElement(_egf.RelSizeAnchor, &_fce); _gcea != nil {
					return _gcea
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_egf.AbsSizeAnchor = NewCT_AbsSizeAnchor()
				if _ced := d.DecodeElement(_egf.AbsSizeAnchor, &_fce); _ced != nil {
					return _ced
				}
			default:
				_ac.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0041\u006e\u0063h\u006f\u0072 \u0025\u0076", _fce.Name)
				if _fabb := d.Skip(); _fabb != nil {
					return _fabb
				}
			}
		case _f.EndElement:
			break _dafe
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_bgb := &CT_ConnectorNonVisual{}
	_bgb.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_bgb.CNvCxnSpPr = _af.NewCT_NonVisualConnectorProperties()
	return _bgb
}

type CT_Connector struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvCxnSpPr      *CT_ConnectorNonVisual
	SpPr           *_af.CT_ShapeProperties
	Style          *_af.CT_ShapeStyle
}

// Validate validates the CT_ShapeNonVisual and its children
func (_bdf *CT_ShapeNonVisual) Validate() error {
	return _bdf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}

func NewCT_Shape() *CT_Shape {
	_bfcd := &CT_Shape{}
	_bfcd.NvSpPr = NewCT_ShapeNonVisual()
	_bfcd.SpPr = _af.NewCT_ShapeProperties()
	return _bfcd
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_bag *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _cef := _bag.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cef != nil {
		return _cef
	}
	if _ea := _bag.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _ea != nil {
		return _ea
	}
	return nil
}

// ValidateWithPath validates the CT_AbsSizeAnchor and its children, prefixing error messages with path
func (_adb *CT_AbsSizeAnchor) ValidateWithPath(path string) error {
	if _ff := _adb.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _ff != nil {
		return _ff
	}
	if _bc := _adb.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _bc != nil {
		return _bc
	}
	if _adb.Choice != nil {
		if _cec := _adb.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _cec != nil {
			return _cec
		}
	}
	return nil
}

// Validate validates the EG_Anchor and its children
func (_bcfg *EG_Anchor) Validate() error {
	return _bcfg.ValidateWithPath("\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr")
}

func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_acbg := &CT_ShapeNonVisual{}
	_acbg.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_acbg.CNvSpPr = _af.NewCT_NonVisualDrawingShapeProps()
	return _acbg
}

type CT_GraphicFrame struct {
	MacroAttr        *string
	FPublishedAttr   *bool
	NvGraphicFramePr *CT_GraphicFrameNonVisual
	Xfrm             *_af.CT_Transform2D
	Graphic          *_af.Graphic
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_eaff *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _cfab := _eaff.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cfab != nil {
		return _cfab
	}
	if _fbdd := _eaff.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _fbdd != nil {
		return _fbdd
	}
	return nil
}

// Validate validates the CT_GraphicFrame and its children
func (_feda *CT_GraphicFrame) Validate() error {
	return _feda.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065")
}

func (_cgba *CT_Picture) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cgba.NvPicPr = NewCT_PictureNonVisual()
	_cgba.BlipFill = _af.NewCT_BlipFillProperties()
	_cgba.SpPr = _af.NewCT_ShapeProperties()
	for _, _bfa := range start.Attr {
		if _bfa.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_cgff, _gff := _bfa.Value, error(nil)
			if _gff != nil {
				return _gff
			}
			_cgba.MacroAttr = &_cgff
			continue
		}
		if _bfa.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_fgb, _agef := _e.ParseBool(_bfa.Value)
			if _agef != nil {
				return _agef
			}
			_cgba.FPublishedAttr = &_fgb
			continue
		}
	}
_dgb:
	for {
		_ccb, _dcf := d.Token()
		if _dcf != nil {
			return _dcf
		}
		switch _ebea := _ccb.(type) {
		case _f.StartElement:
			switch _ebea.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _ffcd := d.DecodeElement(_cgba.NvPicPr, &_ebea); _ffcd != nil {
					return _ffcd
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _gdce := d.DecodeElement(_cgba.BlipFill, &_ebea); _gdce != nil {
					return _gdce
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _gcbd := d.DecodeElement(_cgba.SpPr, &_ebea); _gcbd != nil {
					return _gcbd
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_cgba.Style = _af.NewCT_ShapeStyle()
				if _gge := d.DecodeElement(_cgba.Style, &_ebea); _gge != nil {
					return _gge
				}
			default:
				_ac.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _ebea.Name)
				if _gdf := d.Skip(); _gdf != nil {
					return _gdf
				}
			}
		case _f.EndElement:
			break _dgb
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_fcg *CT_Drawing) ValidateWithPath(path string) error {
	for _bda, _fedd := range _fcg.EG_Anchor {
		if _dgf := _fedd.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0045\u0047\u005fA\u006e\u0063\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _bda)); _dgf != nil {
			return _dgf
		}
	}
	return nil
}

func (_gcfg *CT_RelSizeAnchor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_bdec := _f.StartElement{Name: _f.Name{Local: "\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_gcfg.From, _bdec)
	_dga := _f.StartElement{Name: _f.Name{Local: "\u0074\u006f"}}
	e.EncodeElement(_gcfg.To, _dga)
	if _gcfg.Choice != nil {
		_gcfg.Choice.MarshalXML(e, _f.StartElement{})
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type EG_Anchor struct {
	RelSizeAnchor *CT_RelSizeAnchor
	AbsSizeAnchor *CT_AbsSizeAnchor
}

func (_babf *CT_RelSizeAnchor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_babf.From = NewCT_Marker()
	_babf.To = NewCT_Marker()
_fbcf:
	for {
		_gfba, _agec := d.Token()
		if _agec != nil {
			return _agec
		}
		switch _gab := _gfba.(type) {
		case _f.StartElement:
			switch _gab.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _dbcd := d.DecodeElement(_babf.From, &_gab); _dbcd != nil {
					return _dbcd
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _gbab := d.DecodeElement(_babf.To, &_gab); _gbab != nil {
					return _gbab
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_babf.Choice = NewEG_ObjectChoicesChoice()
				if _agf := d.DecodeElement(&_babf.Choice.Sp, &_gab); _agf != nil {
					return _agf
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_babf.Choice = NewEG_ObjectChoicesChoice()
				if _gbec := d.DecodeElement(&_babf.Choice.GrpSp, &_gab); _gbec != nil {
					return _gbec
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_babf.Choice = NewEG_ObjectChoicesChoice()
				if _egaf := d.DecodeElement(&_babf.Choice.GraphicFrame, &_gab); _egaf != nil {
					return _egaf
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_babf.Choice = NewEG_ObjectChoicesChoice()
				if _cdc := d.DecodeElement(&_babf.Choice.CxnSp, &_gab); _cdc != nil {
					return _cdc
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_babf.Choice = NewEG_ObjectChoicesChoice()
				if _bcde := d.DecodeElement(&_babf.Choice.Pic, &_gab); _bcde != nil {
					return _bcde
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _gab.Name)
				if _dcg := d.Skip(); _dcg != nil {
					return _dcg
				}
			}
		case _f.EndElement:
			break _fbcf
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the EG_ObjectChoices and its children
func (_fcga *EG_ObjectChoices) Validate() error {
	return _fcga.ValidateWithPath("\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073")
}

func (_ec *CT_AbsSizeAnchor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_ee := _f.StartElement{Name: _f.Name{Local: "\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_ec.From, _ee)
	_b := _f.StartElement{Name: _f.Name{Local: "\u0065\u0078\u0074"}}
	e.EncodeElement(_ec.Ext, _b)
	if _ec.Choice != nil {
		_ec.Choice.MarshalXML(e, _f.StartElement{})
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_gcb *CT_GroupShapeNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gcb.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_gcb.CNvGrpSpPr = _af.NewCT_NonVisualGroupDrawingShapeProps()
_ada:
	for {
		_cac, _ffg := d.Token()
		if _ffg != nil {
			return _ffg
		}
		switch _cc := _cac.(type) {
		case _f.StartElement:
			switch _cc.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _agaf := d.DecodeElement(_gcb.CNvPr, &_cc); _agaf != nil {
					return _agaf
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _bce := d.DecodeElement(_gcb.CNvGrpSpPr, &_cc); _bce != nil {
					return _bce
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _cc.Name)
				if _agbg := d.Skip(); _agbg != nil {
					return _agbg
				}
			}
		case _f.EndElement:
			break _ada
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_RelSizeAnchor() *CT_RelSizeAnchor {
	_dff := &CT_RelSizeAnchor{}
	_dff.From = NewCT_Marker()
	_dff.To = NewCT_Marker()
	return _dff
}

type EG_ObjectChoices struct{ Choice *EG_ObjectChoicesChoice }

func (_cfg *CT_ShapeNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_ggd := _f.StartElement{Name: _f.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_cfg.CNvPr, _ggd)
	_aeb := _f.StartElement{Name: _f.Name{Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_cfg.CNvSpPr, _aeb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_ccde *EG_ObjectChoicesChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ccde.Sp != nil {
		_fbgb := _f.StartElement{Name: _f.Name{Local: "\u0073\u0070"}}
		e.EncodeElement(_ccde.Sp, _fbgb)
	}
	if _ccde.GrpSp != nil {
		_bede := _f.StartElement{Name: _f.Name{Local: "\u0067\u0072\u0070S\u0070"}}
		e.EncodeElement(_ccde.GrpSp, _bede)
	}
	if _ccde.GraphicFrame != nil {
		_gddfd := _f.StartElement{Name: _f.Name{Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		e.EncodeElement(_ccde.GraphicFrame, _gddfd)
	}
	if _ccde.CxnSp != nil {
		_gdca := _f.StartElement{Name: _f.Name{Local: "\u0063\u0078\u006eS\u0070"}}
		e.EncodeElement(_ccde.CxnSp, _gdca)
	}
	if _ccde.Pic != nil {
		_geea := _f.StartElement{Name: _f.Name{Local: "\u0070\u0069\u0063"}}
		e.EncodeElement(_ccde.Pic, _geea)
	}
	return nil
}

func NewCT_Drawing() *CT_Drawing { _gbd := &CT_Drawing{}; return _gbd }

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_afg *CT_Picture) ValidateWithPath(path string) error {
	if _ega := _afg.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _ega != nil {
		return _ega
	}
	if _ege := _afg.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ege != nil {
		return _ege
	}
	if _ggeg := _afg.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _ggeg != nil {
		return _ggeg
	}
	if _afg.Style != nil {
		if _bge := _afg.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _bge != nil {
			return _bge
		}
	}
	return nil
}

func NewCT_GraphicFrame() *CT_GraphicFrame {
	_ga := &CT_GraphicFrame{}
	_ga.NvGraphicFramePr = NewCT_GraphicFrameNonVisual()
	_ga.Xfrm = _af.NewCT_Transform2D()
	_ga.Graphic = _af.NewGraphic()
	return _ga
}

type EG_ObjectChoicesChoice struct {
	Sp           *CT_Shape
	GrpSp        *CT_GroupShape
	GraphicFrame *CT_GraphicFrame
	CxnSp        *CT_Connector
	Pic          *CT_Picture
}

func (_gdb *CT_Drawing) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Name.Local = "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"
	e.EncodeToken(start)
	if _gdb.EG_Anchor != nil {
		for _, _ae := range _gdb.EG_Anchor {
			_ae.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_bdef *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _acf, _daag := range _bdef.Sp {
		if _bee := _daag.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _acf)); _bee != nil {
			return _bee
		}
	}
	for _eceb, _agg := range _bdef.GrpSp {
		if _dfg := _agg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _eceb)); _dfg != nil {
			return _dfg
		}
	}
	for _gac, _ecc := range _bdef.GraphicFrame {
		if _bdg := _ecc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _gac)); _bdg != nil {
			return _bdg
		}
	}
	for _gddf, _feee := range _bdef.CxnSp {
		if _cga := _feee.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _gddf)); _cga != nil {
			return _cga
		}
	}
	for _bcc, _ffa := range _bdef.Pic {
		if _gadd := _ffa.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _bcc)); _gadd != nil {
			return _gadd
		}
	}
	return nil
}

func (_fg *CT_AbsSizeAnchor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fg.From = NewCT_Marker()
	_fg.Ext = _af.NewCT_PositiveSize2D()
_d:
	for {
		_cdd, _g := d.Token()
		if _g != nil {
			return _g
		}
		switch _ad := _cdd.(type) {
		case _f.StartElement:
			switch _ad.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _eg := d.DecodeElement(_fg.From, &_ad); _eg != nil {
					return _eg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}:
				if _bg := d.DecodeElement(_fg.Ext, &_ad); _bg != nil {
					return _bg
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_fg.Choice = NewEG_ObjectChoicesChoice()
				if _fc := d.DecodeElement(&_fg.Choice.Sp, &_ad); _fc != nil {
					return _fc
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_fg.Choice = NewEG_ObjectChoicesChoice()
				if _ag := d.DecodeElement(&_fg.Choice.GrpSp, &_ad); _ag != nil {
					return _ag
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_fg.Choice = NewEG_ObjectChoicesChoice()
				if _afd := d.DecodeElement(&_fg.Choice.GraphicFrame, &_ad); _afd != nil {
					return _afd
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_fg.Choice = NewEG_ObjectChoicesChoice()
				if _ce := d.DecodeElement(&_fg.Choice.CxnSp, &_ad); _ce != nil {
					return _ce
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_fg.Choice = NewEG_ObjectChoicesChoice()
				if _gf := d.DecodeElement(&_fg.Choice.Pic, &_ad); _gf != nil {
					return _gf
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _ad.Name)
				if _ca := d.Skip(); _ca != nil {
					return _ca
				}
			}
		case _f.EndElement:
			break _d
		case _f.CharData:
		}
	}
	return nil
}

type CT_ShapeNonVisual struct {
	CNvPr   *_af.CT_NonVisualDrawingProps
	CNvSpPr *_af.CT_NonVisualDrawingShapeProps
}

func (_bdb *CT_ConnectorNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bdb.CNvPr = _af.NewCT_NonVisualDrawingProps()
	_bdb.CNvCxnSpPr = _af.NewCT_NonVisualConnectorProperties()
_daa:
	for {
		_aca, _egg := d.Token()
		if _egg != nil {
			return _egg
		}
		switch _ge := _aca.(type) {
		case _f.StartElement:
			switch _ge.Name {
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ebe := d.DecodeElement(_bdb.CNvPr, &_ge); _ebe != nil {
					return _ebe
				}
			case _f.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _de := d.DecodeElement(_bdb.CNvCxnSpPr, &_ge); _de != nil {
					return _de
				}
			default:
				_ac.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ge.Name)
				if _fgg := d.Skip(); _fgg != nil {
					return _fgg
				}
			}
		case _f.EndElement:
			break _daa
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Picture and its children
func (_ebd *CT_Picture) Validate() error {
	return _ebd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

func init() {
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicFrameNonVisual)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicFrame)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r", NewCT_Marker)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054_\u0052\u0065\u006cS\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_RelSizeAnchor)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054_\u0041\u0062\u0073S\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_AbsSizeAnchor)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073", NewEG_ObjectChoices)
	_ac.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr", NewEG_Anchor)
}
