//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package dml

import (
	_g "encoding/xml"
	_bb "fmt"
	_fc "github.com/Casper-Mars/officeTool"
	_a "github.com/Casper-Mars/officeTool/schema/soo/ofc/sharedTypes"
	_fd "regexp"
	_fg "strconv"
	_f "time"
)

func (_faabe *CT_TableCell) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _faabe.RowSpanAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072o\u0077\u0053\u0070\u0061\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_faabe.RowSpanAttr)})
	}
	if _faabe.GridSpanAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_faabe.GridSpanAttr)})
	}
	if _faabe.HMergeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u004d\u0065\u0072\u0067\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_faabe.HMergeAttr))})
	}
	if _faabe.VMergeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u004d\u0065\u0072\u0067\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_faabe.VMergeAttr))})
	}
	if _faabe.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_faabe.IdAttr)})
	}
	e.EncodeToken(start)
	if _faabe.TxBody != nil {
		_acfgb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_faabe.TxBody, _acfgb)
	}
	if _faabe.TcPr != nil {
		_abdbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0063\u0050\u0072"}}
		e.EncodeElement(_faabe.TcPr, _abdbd)
	}
	if _faabe.ExtLst != nil {
		_ffbff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faabe.ExtLst, _ffbff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_ObjectStyleDefaults struct {
	SpDef  *CT_DefaultShapeDefinition
	LnDef  *CT_DefaultShapeDefinition
	TxDef  *CT_DefaultShapeDefinition
	ExtLst *CT_OfficeArtExtensionList
}

func (_cdde *EG_ThemeableFontStyles) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cdde.Font != nil {
		_afccab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_cdde.Font, _afccab)
	}
	if _cdde.FontRef != nil {
		_dddcd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_cdde.FontRef, _dddcd)
	}
	return nil
}

type CT_StyleMatrix struct {
	NameAttr       *string
	FillStyleLst   *CT_FillStyleList
	LnStyleLst     *CT_LineStyleList
	EffectStyleLst *CT_EffectStyleList
	BgFillStyleLst *CT_BackgroundFillStyleList
}

// ValidateWithPath validates the CT_AnimationElementChoice and its children, prefixing error messages with path
func (_ecec *CT_AnimationElementChoice) ValidateWithPath(path string) error {
	if _ecec.Dgm != nil {
		if _dcdbg := _ecec.Dgm.ValidateWithPath(path + "\u002f\u0044\u0067\u006d"); _dcdbg != nil {
			return _dcdbg
		}
	}
	if _ecec.Chart != nil {
		if _bcf := _ecec.Chart.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074"); _bcf != nil {
			return _bcf
		}
	}
	return nil
}

// Validate validates the CT_TextSpacingPercent and its children
func (_eccfe *CT_TextSpacingPercent) Validate() error {
	return _eccfe.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
}

func (_egbcf ST_TextCapsType) ValidateWithPath(path string) error {
	switch _egbcf {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egbcf))
	}
	return nil
}

func (_bead *CT_ConnectionSiteList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bead.Cxn != nil {
		_fgbdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063x\u006e"}}
		for _, _affd := range _bead.Cxn {
			e.EncodeElement(_affd, _fgbdd)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_adbebe *EG_TextUnderlineLine) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _adbebe.ULnTx != nil {
		_bfcbd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_adbebe.ULnTx, _bfcbd)
	}
	if _adbebe.ULn != nil {
		_dccdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_adbebe.ULn, _dccdb)
	}
	return nil
}

func (_abdec ST_TextFontAlignType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abdec.String(), start)
}

func (_gfbcb *CT_NonVisualDrawingProps) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _gfbcb.IdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _gfbcb.NameAttr)})
	if _gfbcb.DescrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u0073c\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_gfbcb.DescrAttr)})
	}
	if _gfbcb.HiddenAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gfbcb.HiddenAttr))})
	}
	if _gfbcb.TitleAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_gfbcb.TitleAttr)})
	}
	e.EncodeToken(start)
	if _gfbcb.HlinkClick != nil {
		_bagacb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_gfbcb.HlinkClick, _bagacb)
	}
	if _gfbcb.HlinkHover != nil {
		_gegg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_gfbcb.HlinkHover, _gegg)
	}
	if _gfbcb.ExtLst != nil {
		_afdfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfbcb.ExtLst, _afdfc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ebdfgg *EG_ShadeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dedgg:
	for {
		_cccgg, _efeebb := d.Token()
		if _efeebb != nil {
			return _efeebb
		}
		switch _bbeg := _cccgg.(type) {
		case _g.StartElement:
			switch _bbeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_ebdfgg.Lin = NewCT_LinearShadeProperties()
				if _edgdc := d.DecodeElement(_ebdfgg.Lin, &_bbeg); _edgdc != nil {
					return _edgdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_ebdfgg.Path = NewCT_PathShadeProperties()
				if _acafef := d.DecodeElement(_ebdfgg.Path, &_bbeg); _acafef != nil {
					return _acafef
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u0061\u0064\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bbeg.Name)
				if _aedcc := d.Skip(); _aedcc != nil {
					return _aedcc
				}
			}
		case _g.EndElement:
			break _dedgg
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GroupTransform2D() *CT_GroupTransform2D { _cgbc := &CT_GroupTransform2D{}; return _cgbc }

type CT_AlphaOutsetEffect struct{ RadAttr *ST_Coordinate }

func (_beccb ST_AnimationDgmOnlyBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cfddd := _g.Attr{}
	_cfddd.Name = name
	switch _beccb {
	case ST_AnimationDgmOnlyBuildTypeUnset:
		_cfddd.Value = ""
	case ST_AnimationDgmOnlyBuildTypeOne:
		_cfddd.Value = "\u006f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlOne:
		_cfddd.Value = "\u006c\u0076\u006c\u004f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlAtOnce:
		_cfddd.Value = "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _cfddd, nil
}

func NewCT_ConnectionSite() *CT_ConnectionSite {
	_cbgg := &CT_ConnectionSite{}
	_cbgg.Pos = NewCT_AdjPoint2D()
	return _cbgg
}

// ValidateWithPath validates the CT_TextSpacing and its children, prefixing error messages with path
func (_egce *CT_TextSpacing) ValidateWithPath(path string) error {
	if _egce.SpcPct != nil {
		if _efbdc := _egce.SpcPct.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0063\u0074"); _efbdc != nil {
			return _efbdc
		}
	}
	if _egce.SpcPts != nil {
		if _egggf := _egce.SpcPts.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0074\u0073"); _egggf != nil {
			return _egggf
		}
	}
	return nil
}

func (_badfb *CT_RelativeOffsetEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ceafd := range start.Attr {
		if _ceafd.Name.Local == "\u0074\u0078" {
			_ddaab, _cabe := ParseUnionST_Percentage(_ceafd.Value)
			if _cabe != nil {
				return _cabe
			}
			_badfb.TxAttr = &_ddaab
			continue
		}
		if _ceafd.Name.Local == "\u0074\u0079" {
			_ecfdb, _eedcc := ParseUnionST_Percentage(_ceafd.Value)
			if _eedcc != nil {
				return _eedcc
			}
			_badfb.TyAttr = &_ecfdb
			continue
		}
	}
	for {
		_adfa, _bdcdb := d.Token()
		if _bdcdb != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006ca\u0074\u0069\u0076\u0065\u004f\u0066\u0066s\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020%\u0073", _bdcdb)
		}
		if _cfag, _bcccb := _adfa.(_g.EndElement); _bcccb && _cfag.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Vector3D struct {
	DxAttr ST_Coordinate
	DyAttr ST_Coordinate
	DzAttr ST_Coordinate
}

func (_cegcf ST_TextVertOverflowType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cecba := _g.Attr{}
	_cecba.Name = name
	switch _cegcf {
	case ST_TextVertOverflowTypeUnset:
		_cecba.Value = ""
	case ST_TextVertOverflowTypeOverflow:
		_cecba.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextVertOverflowTypeEllipsis:
		_cecba.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case ST_TextVertOverflowTypeClip:
		_cecba.Value = "\u0063\u006c\u0069\u0070"
	}
	return _cecba, nil
}

func NewEG_ThemeableEffectStyle() *EG_ThemeableEffectStyle {
	_cggga := &EG_ThemeableEffectStyle{}
	return _cggga
}

func (_acbcg *EG_TextBulletSize) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _acbcg.BuSzTx != nil {
		_aaafd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_acbcg.BuSzTx, _aaafd)
	}
	if _acbcg.BuSzPct != nil {
		_afegf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_acbcg.BuSzPct, _afegf)
	}
	if _acbcg.BuSzPts != nil {
		_gdedd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_acbcg.BuSzPts, _gdedd)
	}
	return nil
}

func (_gagec *ST_Coordinate32) Validate() error { return _gagec.ValidateWithPath("") }

func (_baegf *CT_ClipboardStyleSheet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Name.Local = "\u0061:\u0043\u0054\u005f\u0043\u006c\u0069\u0070\u0062\u006f\u0061\u0072d\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	_bbgg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_baegf.ThemeElements, _bbgg)
	_eaadb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_baegf.ClrMap, _eaadb)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type AG_Blob struct {
	EmbedAttr *string
	LinkAttr  *string
}

type CT_Bevel struct {
	WAttr    *int64
	HAttr    *int64
	PrstAttr ST_BevelPresetType
}

func (_afebed ST_ShapeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_afebed.String(), start)
}

func NewCT_AdjustHandleList() *CT_AdjustHandleList { _abf := &CT_AdjustHandleList{}; return _abf }

func (_baeed *ST_LineCap) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bbacc, _fdacf := d.Token()
	if _fdacf != nil {
		return _fdacf
	}
	if _bgbbfa, _dafdc := _bbacc.(_g.EndElement); _dafdc && _bgbbfa.Name == start.Name {
		*_baeed = 1
		return nil
	}
	if _eaagb, _gbdgb := _bbacc.(_g.CharData); !_gbdgb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbacc)
	} else {
		switch string(_eaagb) {
		case "":
			*_baeed = 0
		case "\u0072\u006e\u0064":
			*_baeed = 1
		case "\u0073\u0071":
			*_baeed = 2
		case "\u0066\u006c\u0061\u0074":
			*_baeed = 3
		}
	}
	_bbacc, _fdacf = d.Token()
	if _fdacf != nil {
		return _fdacf
	}
	if _aeedb, _gefaf := _bbacc.(_g.EndElement); _gefaf && _aeedb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbacc)
}

// ValidateWithPath validates the CT_ColorChangeEffect and its children, prefixing error messages with path
func (_ggdba *CT_ColorChangeEffect) ValidateWithPath(path string) error {
	if _ebdg := _ggdba.ClrFrom.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0046\u0072\u006f\u006d"); _ebdg != nil {
		return _ebdg
	}
	if _dbcb := _ggdba.ClrTo.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0054\u006f"); _dbcb != nil {
		return _dbcb
	}
	return nil
}

func (_bbcga *CT_CustomGeometry2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bbcga.PathLst = NewCT_Path2DList()
_cace:
	for {
		_bbe, _fgba := d.Token()
		if _fgba != nil {
			return _fgba
		}
		switch _bcad := _bbe.(type) {
		case _g.StartElement:
			switch _bcad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_bbcga.AvLst = NewCT_GeomGuideList()
				if _abecb := d.DecodeElement(_bbcga.AvLst, &_bcad); _abecb != nil {
					return _abecb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}:
				_bbcga.GdLst = NewCT_GeomGuideList()
				if _baca := d.DecodeElement(_bbcga.GdLst, &_bcad); _baca != nil {
					return _baca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}:
				_bbcga.AhLst = NewCT_AdjustHandleList()
				if _fbadf := d.DecodeElement(_bbcga.AhLst, &_bcad); _fbadf != nil {
					return _fbadf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}:
				_bbcga.CxnLst = NewCT_ConnectionSiteList()
				if _gcad := d.DecodeElement(_bbcga.CxnLst, &_bcad); _gcad != nil {
					return _gcad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}:
				_bbcga.Rect = NewCT_GeomRect()
				if _agca := d.DecodeElement(_bbcga.Rect, &_bcad); _agca != nil {
					return _agca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}:
				if _gadb := d.DecodeElement(_bbcga.PathLst, &_bcad); _gadb != nil {
					return _gadb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _bcad.Name)
				if _gffb := d.Skip(); _gffb != nil {
					return _gffb
				}
			}
		case _g.EndElement:
			break _cace
		case _g.CharData:
		}
	}
	return nil
}

func (_egd *CT_AnimationElementChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egd.Dgm != nil {
		_eeec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064g\u006d"}}
		e.EncodeElement(_egd.Dgm, _eeec)
	}
	if _egd.Chart != nil {
		_ebd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_egd.Chart, _ebd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SchemeColorValUnset    ST_SchemeColorVal = 0
	ST_SchemeColorValBg1      ST_SchemeColorVal = 1
	ST_SchemeColorValTx1      ST_SchemeColorVal = 2
	ST_SchemeColorValBg2      ST_SchemeColorVal = 3
	ST_SchemeColorValTx2      ST_SchemeColorVal = 4
	ST_SchemeColorValAccent1  ST_SchemeColorVal = 5
	ST_SchemeColorValAccent2  ST_SchemeColorVal = 6
	ST_SchemeColorValAccent3  ST_SchemeColorVal = 7
	ST_SchemeColorValAccent4  ST_SchemeColorVal = 8
	ST_SchemeColorValAccent5  ST_SchemeColorVal = 9
	ST_SchemeColorValAccent6  ST_SchemeColorVal = 10
	ST_SchemeColorValHlink    ST_SchemeColorVal = 11
	ST_SchemeColorValFolHlink ST_SchemeColorVal = 12
	ST_SchemeColorValPhClr    ST_SchemeColorVal = 13
	ST_SchemeColorValDk1      ST_SchemeColorVal = 14
	ST_SchemeColorValLt1      ST_SchemeColorVal = 15
	ST_SchemeColorValDk2      ST_SchemeColorVal = 16
	ST_SchemeColorValLt2      ST_SchemeColorVal = 17
)

func NewCT_PresetColor() *CT_PresetColor {
	_bedbc := &CT_PresetColor{}
	_bedbc.ValAttr = ST_PresetColorVal(1)
	return _bedbc
}

func (_fbbae *CT_LineJoinBevel) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_adbbge, _dbbgc := d.Token()
		if _dbbgc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0042\u0065\u0076\u0065\u006c\u003a \u0025\u0073", _dbbgc)
		}
		if _gfadd, _dbbee := _adbbge.(_g.EndElement); _dbbee && _gfadd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_EffectReference struct{ RefAttr string }

type CT_LineStyleList struct{ Ln []*CT_LineProperties }

// ValidateWithPath validates the CT_BaseStylesOverride and its children, prefixing error messages with path
func (_fgga *CT_BaseStylesOverride) ValidateWithPath(path string) error {
	if _fgga.ClrScheme != nil {
		if _bdbg := _fgga.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _bdbg != nil {
			return _bdbg
		}
	}
	if _fgga.FontScheme != nil {
		if _aaag := _fgga.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _aaag != nil {
			return _aaag
		}
	}
	if _fgga.FmtScheme != nil {
		if _ggdb := _fgga.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _ggdb != nil {
			return _ggdb
		}
	}
	return nil
}

func NewEG_TextBulletColor() *EG_TextBulletColor { _eeega := &EG_TextBulletColor{}; return _eeega }

type CT_TextSpacing struct {
	SpcPct *CT_TextSpacingPercent
	SpcPts *CT_TextSpacingPoint
}

// Validate validates the CT_ThemeableLineStyle and its children
func (_cdebfg *CT_ThemeableLineStyle) Validate() error {
	return _cdebfg.ValidateWithPath("C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065")
}

func (_dfcca *ST_AnimationBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dfcca = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_dfcca = 1
	}
	return nil
}

func (_acgac *ST_BlackWhiteMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_acgac = 0
	case "\u0063\u006c\u0072":
		*_acgac = 1
	case "\u0061\u0075\u0074\u006f":
		*_acgac = 2
	case "\u0067\u0072\u0061\u0079":
		*_acgac = 3
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_acgac = 4
	case "\u0069n\u0076\u0047\u0072\u0061\u0079":
		*_acgac = 5
	case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
		*_acgac = 6
	case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
		*_acgac = 7
	case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
		*_acgac = 8
	case "\u0062\u006c\u0061c\u006b":
		*_acgac = 9
	case "\u0077\u0068\u0069t\u0065":
		*_acgac = 10
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_acgac = 11
	}
	return nil
}

func NewCT_Point3D() *CT_Point3D { _gfcgd := &CT_Point3D{}; return _gfcgd }

// Validate validates the CT_Ratio and its children
func (_eggba *CT_Ratio) Validate() error {
	return _eggba.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f")
}

type CT_FontReference struct {
	IdxAttr   ST_FontCollectionIndex
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_abggb ST_TextBulletSize) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _abggb.ST_TextBulletSizePercent != nil {
		e.EncodeToken(_g.CharData(*_abggb.ST_TextBulletSizePercent))
	}
	if _abggb.ST_TextBulletSizeDecimal != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_abggb.ST_TextBulletSizeDecimal)))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// Validate validates the CT_GroupLocking and its children
func (_eegda *CT_GroupLocking) Validate() error {
	return _eegda.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_agcac *ST_TextStrikeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_agcac = 0
	case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
		*_agcac = 1
	case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
		*_agcac = 2
	case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
		*_agcac = 3
	}
	return nil
}

type ST_SystemColorVal byte

func (_cegfda ST_SystemColorVal) String() string {
	switch _cegfda {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case 2:
		return "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case 3:
		return "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 5:
		return "\u006d\u0065\u006e\u0075"
	case 6:
		return "\u0077\u0069\u006e\u0064\u006f\u0077"
	case 7:
		return "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case 8:
		return "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case 9:
		return "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case 10:
		return "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case 12:
		return "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case 13:
		return "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case 14:
		return "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case 15:
		return "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case 16:
		return "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case 17:
		return "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case 18:
		return "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case 19:
		return "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case 20:
		return "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 21:
		return "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 22:
		return "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case 23:
		return "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case 24:
		return "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case 25:
		return "\u0069\u006e\u0066\u006f\u0042\u006b"
	case 26:
		return "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case 27:
		return "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case 28:
		return "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 29:
		return "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 30:
		return "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return ""
}

type CT_GradientFillProperties struct {
	FlipAttr         ST_TileFlipMode
	RotWithShapeAttr *bool
	GsLst            *CT_GradientStopList
	Lin              *CT_LinearShadeProperties
	Path             *CT_PathShadeProperties
	TileRect         *CT_RelativeRect
}

// Validate validates the CT_ColorSchemeList and its children
func (_aeda *CT_ColorSchemeList) Validate() error {
	return _aeda.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074")
}

func (_gfgbc ST_PresetMaterialType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cfdaa := _g.Attr{}
	_cfdaa.Name = name
	switch _gfgbc {
	case ST_PresetMaterialTypeUnset:
		_cfdaa.Value = ""
	case ST_PresetMaterialTypeLegacyMatte:
		_cfdaa.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case ST_PresetMaterialTypeLegacyPlastic:
		_cfdaa.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeLegacyMetal:
		_cfdaa.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case ST_PresetMaterialTypeLegacyWireframe:
		_cfdaa.Value = "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case ST_PresetMaterialTypeMatte:
		_cfdaa.Value = "\u006d\u0061\u0074t\u0065"
	case ST_PresetMaterialTypePlastic:
		_cfdaa.Value = "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeMetal:
		_cfdaa.Value = "\u006d\u0065\u0074a\u006c"
	case ST_PresetMaterialTypeWarmMatte:
		_cfdaa.Value = "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case ST_PresetMaterialTypeTranslucentPowder:
		_cfdaa.Value = "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypePowder:
		_cfdaa.Value = "\u0070\u006f\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypeDkEdge:
		_cfdaa.Value = "\u0064\u006b\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeSoftEdge:
		_cfdaa.Value = "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeClear:
		_cfdaa.Value = "\u0063\u006c\u0065a\u0072"
	case ST_PresetMaterialTypeFlat:
		_cfdaa.Value = "\u0066\u006c\u0061\u0074"
	case ST_PresetMaterialTypeSoftmetal:
		_cfdaa.Value = "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return _cfdaa, nil
}

func NewCT_CustomColor() *CT_CustomColor { _ecdd := &CT_CustomColor{}; return _ecdd }

// ValidateWithPath validates the CT_BlurEffect and its children, prefixing error messages with path
func (_bcaaf *CT_BlurEffect) ValidateWithPath(path string) error {
	if _bcaaf.RadAttr != nil {
		if *_bcaaf.RadAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bcaaf.RadAttr)
		}
		if *_bcaaf.RadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_bcaaf.RadAttr)
		}
	}
	return nil
}

type CT_DashStopList struct{ Ds []*CT_DashStop }

type ST_TextAutonumberScheme byte

// Validate validates the CT_GradientStop and its children
func (_cgacf *CT_GradientStop) Validate() error {
	return _cgacf.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

// ValidateWithPath validates the CT_AlphaReplaceEffect and its children, prefixing error messages with path
func (_fecf *CT_AlphaReplaceEffect) ValidateWithPath(path string) error {
	if _eade := _fecf.AAttr.ValidateWithPath(path + "\u002f\u0041\u0041\u0074\u0074\u0072"); _eade != nil {
		return _eade
	}
	return nil
}

func NewCT_AudioFile() *CT_AudioFile { _bgdf := &CT_AudioFile{}; return _bgdf }

func NewEG_TextAutofit() *EG_TextAutofit { _efbba := &EG_TextAutofit{}; return _efbba }

func (_dgce *EG_ColorChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dabaa:
	for {
		_bfbfe, _cgddf := d.Token()
		if _cgddf != nil {
			return _cgddf
		}
		switch _gcccaa := _bfbfe.(type) {
		case _g.StartElement:
			switch _gcccaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dgce.ScrgbClr = NewCT_ScRgbColor()
				if _fcdf := d.DecodeElement(_dgce.ScrgbClr, &_gcccaa); _fcdf != nil {
					return _fcdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dgce.SrgbClr = NewCT_SRgbColor()
				if _dffbg := d.DecodeElement(_dgce.SrgbClr, &_gcccaa); _dffbg != nil {
					return _dffbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dgce.HslClr = NewCT_HslColor()
				if _cdbcec := d.DecodeElement(_dgce.HslClr, &_gcccaa); _cdbcec != nil {
					return _cdbcec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dgce.SysClr = NewCT_SystemColor()
				if _bedgd := d.DecodeElement(_dgce.SysClr, &_gcccaa); _bedgd != nil {
					return _bedgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dgce.SchemeClr = NewCT_SchemeColor()
				if _ebbbcc := d.DecodeElement(_dgce.SchemeClr, &_gcccaa); _ebbbcc != nil {
					return _ebbbcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dgce.PrstClr = NewCT_PresetColor()
				if _fcgdd := d.DecodeElement(_dgce.PrstClr, &_gcccaa); _fcgdd != nil {
					return _fcgdd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076", _gcccaa.Name)
				if _efaee := d.Skip(); _efaee != nil {
					return _efaee
				}
			}
		case _g.EndElement:
			break _dabaa
		case _g.CharData:
		}
	}
	return nil
}

func (_eeacb ST_AnimationChartOnlyBuildType) Validate() error { return _eeacb.ValidateWithPath("") }

// Validate validates the EG_ShadeProperties and its children
func (_aabbg *EG_ShadeProperties) Validate() error {
	return _aabbg.ValidateWithPath("\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

func NewEG_TextUnderlineFill() *EG_TextUnderlineFill { _dcbcf := &EG_TextUnderlineFill{}; return _dcbcf }

func NewCT_SystemColor() *CT_SystemColor {
	_dfcad := &CT_SystemColor{}
	_dfcad.ValAttr = ST_SystemColorVal(1)
	return _dfcad
}

type CT_StyleMatrixReference struct {
	IdxAttr   uint32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func NewCT_TextFont() *CT_TextFont { _fgcagg := &CT_TextFont{}; return _fgcagg }

type CT_ColorSchemeAndMapping struct {
	ClrScheme *CT_ColorScheme
	ClrMap    *CT_ColorMapping
}

func (_aeebb *CT_TransformEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aeebb.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_aeebb.SxAttr)})
	}
	if _aeebb.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_aeebb.SyAttr)})
	}
	if _aeebb.KxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_aeebb.KxAttr)})
	}
	if _aeebb.KyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_aeebb.KyAttr)})
	}
	if _aeebb.TxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_aeebb.TxAttr)})
	}
	if _aeebb.TyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_aeebb.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bbgdg ST_TextStrikeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bbgdg.String(), start)
}

func NewCT_PositiveFixedAngle() *CT_PositiveFixedAngle {
	_ebgb := &CT_PositiveFixedAngle{}
	_ebgb.ValAttr = 0
	return _ebgb
}

// Validate validates the CT_NonVisualContentPartProperties and its children
func (_bdae *CT_NonVisualContentPartProperties) Validate() error {
	return _bdae.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_PatternFillProperties and its children, prefixing error messages with path
func (_egeeg *CT_PatternFillProperties) ValidateWithPath(path string) error {
	if _gfef := _egeeg.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _gfef != nil {
		return _gfef
	}
	if _egeeg.FgClr != nil {
		if _bgfdc := _egeeg.FgClr.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006c\u0072"); _bgfdc != nil {
			return _bgfdc
		}
	}
	if _egeeg.BgClr != nil {
		if _aecb := _egeeg.BgClr.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006c\u0072"); _aecb != nil {
			return _aecb
		}
	}
	return nil
}

func NewCT_NonVisualGroupDrawingShapeProps() *CT_NonVisualGroupDrawingShapeProps {
	_fedb := &CT_NonVisualGroupDrawingShapeProps{}
	return _fedb
}

func (_gfdfb *CT_LineJoinBevel) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_PictureLocking() *CT_PictureLocking { _gffbf := &CT_PictureLocking{}; return _gffbf }

// ValidateWithPath validates the CT_TextCharacterProperties and its children, prefixing error messages with path
func (_bfaef *CT_TextCharacterProperties) ValidateWithPath(path string) error {
	if _bfaef.SzAttr != nil {
		if *_bfaef.SzAttr < 100 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0053\u007aA\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0031\u00300 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bfaef.SzAttr)
		}
		if *_bfaef.SzAttr > 400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u007a\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_bfaef.SzAttr)
		}
	}
	if _agfge := _bfaef.UAttr.ValidateWithPath(path + "\u002f\u0055\u0041\u0074\u0074\u0072"); _agfge != nil {
		return _agfge
	}
	if _eebde := _bfaef.StrikeAttr.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0041\u0074\u0074\u0072"); _eebde != nil {
		return _eebde
	}
	if _bfaef.KernAttr != nil {
		if *_bfaef.KernAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u004b\u0065r\u006e\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bfaef.KernAttr)
		}
		if *_bfaef.KernAttr > 400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eK\u0065\u0072\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfaef.KernAttr)
		}
	}
	if _gbgeec := _bfaef.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _gbgeec != nil {
		return _gbgeec
	}
	if _bfaef.SpcAttr != nil {
		if _beacf := _bfaef.SpcAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _beacf != nil {
			return _beacf
		}
	}
	if _bfaef.BaselineAttr != nil {
		if _agedef := _bfaef.BaselineAttr.ValidateWithPath(path + "\u002f\u0042\u0061\u0073\u0065\u006c\u0069\u006e\u0065\u0041\u0074\u0074\u0072"); _agedef != nil {
			return _agedef
		}
	}
	if _bfaef.Ln != nil {
		if _gecafe := _bfaef.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _gecafe != nil {
			return _gecafe
		}
	}
	if _bfaef.NoFill != nil {
		if _gegcb := _bfaef.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _gegcb != nil {
			return _gegcb
		}
	}
	if _bfaef.SolidFill != nil {
		if _cecdb := _bfaef.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _cecdb != nil {
			return _cecdb
		}
	}
	if _bfaef.GradFill != nil {
		if _fdcaf := _bfaef.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fdcaf != nil {
			return _fdcaf
		}
	}
	if _bfaef.BlipFill != nil {
		if _gaeeg := _bfaef.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gaeeg != nil {
			return _gaeeg
		}
	}
	if _bfaef.PattFill != nil {
		if _bdefc := _bfaef.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bdefc != nil {
			return _bdefc
		}
	}
	if _bfaef.GrpFill != nil {
		if _dfdfc := _bfaef.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dfdfc != nil {
			return _dfdfc
		}
	}
	if _bfaef.EffectLst != nil {
		if _afcad := _bfaef.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _afcad != nil {
			return _afcad
		}
	}
	if _bfaef.EffectDag != nil {
		if _efeec := _bfaef.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _efeec != nil {
			return _efeec
		}
	}
	if _bfaef.Highlight != nil {
		if _dgcdd := _bfaef.Highlight.ValidateWithPath(path + "\u002f\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"); _dgcdd != nil {
			return _dgcdd
		}
	}
	if _bfaef.ULnTx != nil {
		if _fgdgf := _bfaef.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _fgdgf != nil {
			return _fgdgf
		}
	}
	if _bfaef.ULn != nil {
		if _gdfdc := _bfaef.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _gdfdc != nil {
			return _gdfdc
		}
	}
	if _bfaef.UFillTx != nil {
		if _gfagee := _bfaef.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _gfagee != nil {
			return _gfagee
		}
	}
	if _bfaef.UFill != nil {
		if _bfeae := _bfaef.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _bfeae != nil {
			return _bfeae
		}
	}
	if _bfaef.Latin != nil {
		if _deacf := _bfaef.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _deacf != nil {
			return _deacf
		}
	}
	if _bfaef.Ea != nil {
		if _cfffe := _bfaef.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _cfffe != nil {
			return _cfffe
		}
	}
	if _bfaef.Cs != nil {
		if _bdagf := _bfaef.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _bdagf != nil {
			return _bdagf
		}
	}
	if _bfaef.Sym != nil {
		if _badba := _bfaef.Sym.ValidateWithPath(path + "\u002f\u0053\u0079\u006d"); _badba != nil {
			return _badba
		}
	}
	if _bfaef.HlinkClick != nil {
		if _cbfgc := _bfaef.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _cbfgc != nil {
			return _cbfgc
		}
	}
	if _bfaef.HlinkMouseOver != nil {
		if _acgffc := _bfaef.HlinkMouseOver.ValidateWithPath(path + "\u002fH\u006ci\u006e\u006b\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"); _acgffc != nil {
			return _acgffc
		}
	}
	if _bfaef.Rtl != nil {
		if _cabef := _bfaef.Rtl.ValidateWithPath(path + "\u002f\u0052\u0074\u006c"); _cabef != nil {
			return _cabef
		}
	}
	if _bfaef.ExtLst != nil {
		if _cgfbe := _bfaef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgfbe != nil {
			return _cgfbe
		}
	}
	return nil
}

type CT_TileInfoProperties struct {
	TxAttr   *ST_Coordinate
	TyAttr   *ST_Coordinate
	SxAttr   *ST_Percentage
	SyAttr   *ST_Percentage
	FlipAttr ST_TileFlipMode
	AlgnAttr ST_RectAlignment
}

func (_dbcgd *CT_GvmlPictureNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dbcgd.CNvPr = NewCT_NonVisualDrawingProps()
	_dbcgd.CNvPicPr = NewCT_NonVisualPictureProperties()
_ccdc:
	for {
		_bbba, _cgafc := d.Token()
		if _cgafc != nil {
			return _cgafc
		}
		switch _egage := _bbba.(type) {
		case _g.StartElement:
			switch _egage.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ffbd := d.DecodeElement(_dbcgd.CNvPr, &_egage); _ffbd != nil {
					return _ffbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _edcda := d.DecodeElement(_dbcgd.CNvPicPr, &_egage); _edcda != nil {
					return _edcda
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063\u0074\u0075r\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c \u0025\u0076", _egage.Name)
				if _bbagc := d.Skip(); _bbagc != nil {
					return _bbagc
				}
			}
		case _g.EndElement:
			break _ccdc
		case _g.CharData:
		}
	}
	return nil
}

type ST_FontCollectionIndex byte

type CT_GvmlTextShapeChoice struct {
	UseSpRect *CT_GvmlUseShapeRectangle
	Xfrm      *CT_Transform2D
}

func NewCT_RelativeOffsetEffect() *CT_RelativeOffsetEffect {
	_afgd := &CT_RelativeOffsetEffect{}
	return _afgd
}

// ValidateWithPath validates the CT_EffectReference and its children, prefixing error messages with path
func (_gegaf *CT_EffectReference) ValidateWithPath(path string) error { return nil }

func (_cebbg ST_TextAlignType) String() string {
	switch _cebbg {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u006au\u0073\u0074\u004c\u006f\u0077"
	case 6:
		return "\u0064\u0069\u0073\u0074"
	case 7:
		return "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return ""
}

func NewCT_GraphicalObject() *CT_GraphicalObject {
	_cbfa := &CT_GraphicalObject{}
	_cbfa.GraphicData = NewCT_GraphicalObjectData()
	return _cbfa
}

func NewCT_AnimationDgmElement() *CT_AnimationDgmElement {
	_dfcg := &CT_AnimationDgmElement{}
	return _dfcg
}

func (_eaf *CT_Bevel) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eaf.WAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", *_eaf.WAttr)})
	}
	if _eaf.HAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068"}, Value: _bb.Sprintf("\u0025\u0076", *_eaf.HAttr)})
	}
	if _eaf.PrstAttr != ST_BevelPresetTypeUnset {
		_efgb, _cebc := _eaf.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _cebc != nil {
			return _cebc
		}
		start.Attr = append(start.Attr, _efgb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dcfg *CT_InnerShadowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dfed := range start.Attr {
		if _dfed.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_ffga, _faaa := _fg.ParseInt(_dfed.Value, 10, 64)
			if _faaa != nil {
				return _faaa
			}
			_dcfg.BlurRadAttr = &_ffga
			continue
		}
		if _dfed.Name.Local == "\u0064\u0069\u0073\u0074" {
			_gcbfd, _gggf := _fg.ParseInt(_dfed.Value, 10, 64)
			if _gggf != nil {
				return _gggf
			}
			_dcfg.DistAttr = &_gcbfd
			continue
		}
		if _dfed.Name.Local == "\u0064\u0069\u0072" {
			_bbbd, _eeffac := _fg.ParseInt(_dfed.Value, 10, 32)
			if _eeffac != nil {
				return _eeffac
			}
			_ggbc := int32(_bbbd)
			_dcfg.DirAttr = &_ggbc
			continue
		}
	}
_dcaf:
	for {
		_fecag, _ecdf := d.Token()
		if _ecdf != nil {
			return _ecdf
		}
		switch _geeaa := _fecag.(type) {
		case _g.StartElement:
			switch _geeaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dcfg.ScrgbClr = NewCT_ScRgbColor()
				if _ffcg := d.DecodeElement(_dcfg.ScrgbClr, &_geeaa); _ffcg != nil {
					return _ffcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dcfg.SrgbClr = NewCT_SRgbColor()
				if _cgbe := d.DecodeElement(_dcfg.SrgbClr, &_geeaa); _cgbe != nil {
					return _cgbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dcfg.HslClr = NewCT_HslColor()
				if _aaddf := d.DecodeElement(_dcfg.HslClr, &_geeaa); _aaddf != nil {
					return _aaddf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dcfg.SysClr = NewCT_SystemColor()
				if _bcdac := d.DecodeElement(_dcfg.SysClr, &_geeaa); _bcdac != nil {
					return _bcdac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dcfg.SchemeClr = NewCT_SchemeColor()
				if _gafbe := d.DecodeElement(_dcfg.SchemeClr, &_geeaa); _gafbe != nil {
					return _gafbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dcfg.PrstClr = NewCT_PresetColor()
				if _cbcgdc := d.DecodeElement(_dcfg.PrstClr, &_geeaa); _cbcgdc != nil {
					return _cbcgdc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _geeaa.Name)
				if _efce := d.Skip(); _efce != nil {
					return _efce
				}
			}
		case _g.EndElement:
			break _dcaf
		case _g.CharData:
		}
	}
	return nil
}

func (_egcfa ST_AdjAngle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egcfa.ST_Angle != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_egcfa.ST_Angle)))
	}
	if _egcfa.ST_GeomGuideName != nil {
		e.EncodeToken(_g.CharData(*_egcfa.ST_GeomGuideName))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

type CT_ConnectorLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

type CT_DashStop struct {
	DAttr  ST_PositivePercentage
	SpAttr ST_PositivePercentage
}

func (_cced *CT_TableCol) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _befcb := range start.Attr {
		if _befcb.Name.Local == "\u0077" {
			_ecdfe, _afebe := ParseUnionST_Coordinate(_befcb.Value)
			if _afebe != nil {
				return _afebe
			}
			_cced.WAttr = _ecdfe
			continue
		}
	}
_eege:
	for {
		_efffce, _fffee := d.Token()
		if _fffee != nil {
			return _fffee
		}
		switch _aadgf := _efffce.(type) {
		case _g.StartElement:
			switch _aadgf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cced.ExtLst = NewCT_OfficeArtExtensionList()
				if _cedec := d.DecodeElement(_cced.ExtLst, &_aadgf); _cedec != nil {
					return _cedec
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0020\u0025\u0076", _aadgf.Name)
				if _fecgc := d.Skip(); _fecgc != nil {
					return _fecgc
				}
			}
		case _g.EndElement:
			break _eege
		case _g.CharData:
		}
	}
	return nil
}

func (_agbag *CT_ShapeLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _agbag.NoTextEditAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoTextEditAttr))})
	}
	if _agbag.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoGrpAttr))})
	}
	if _agbag.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoSelectAttr))})
	}
	if _agbag.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoRotAttr))})
	}
	if _agbag.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoChangeAspectAttr))})
	}
	if _agbag.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoMoveAttr))})
	}
	if _agbag.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoResizeAttr))})
	}
	if _agbag.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoEditPointsAttr))})
	}
	if _agbag.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoAdjustHandlesAttr))})
	}
	if _agbag.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoChangeArrowheadsAttr))})
	}
	if _agbag.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_agbag.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _agbag.ExtLst != nil {
		_eaafd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agbag.ExtLst, _eaafd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupTransform2D and its children, prefixing error messages with path
func (_dedf *CT_GroupTransform2D) ValidateWithPath(path string) error {
	if _dedf.Off != nil {
		if _ceaag := _dedf.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _ceaag != nil {
			return _ceaag
		}
	}
	if _dedf.Ext != nil {
		if _gcdcd := _dedf.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _gcdcd != nil {
			return _gcdcd
		}
	}
	if _dedf.ChOff != nil {
		if _bddc := _dedf.ChOff.ValidateWithPath(path + "\u002f\u0043\u0068\u004f\u0066\u0066"); _bddc != nil {
			return _bddc
		}
	}
	if _dedf.ChExt != nil {
		if _cddbd := _dedf.ChExt.ValidateWithPath(path + "\u002f\u0043\u0068\u0045\u0078\u0074"); _cddbd != nil {
			return _cddbd
		}
	}
	return nil
}

func (_abee *CT_ConnectionSite) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abee.Pos = NewCT_AdjPoint2D()
	for _, _aaadf := range start.Attr {
		if _aaadf.Name.Local == "\u0061\u006e\u0067" {
			_fbff, _dbge := ParseUnionST_AdjAngle(_aaadf.Value)
			if _dbge != nil {
				return _dbge
			}
			_abee.AngAttr = _fbff
			continue
		}
	}
_gcdf:
	for {
		_fgdd, _dbfb := d.Token()
		if _dbfb != nil {
			return _dbfb
		}
		switch _geefc := _fgdd.(type) {
		case _g.StartElement:
			switch _geefc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _deee := d.DecodeElement(_abee.Pos, &_geefc); _deee != nil {
					return _deee
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u0020\u0025\u0076", _geefc.Name)
				if _eccf := d.Skip(); _eccf != nil {
					return _eccf
				}
			}
		case _g.EndElement:
			break _gcdf
		case _g.CharData:
		}
	}
	return nil
}

func (_fbeeg ST_TextFontAlignType) ValidateWithPath(path string) error {
	switch _fbeeg {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbeeg))
	}
	return nil
}

type CT_GvmlUseShapeRectangle struct{}

// ValidateWithPath validates the CT_GvmlGroupShape and its children, prefixing error messages with path
func (_aeabe *CT_GvmlGroupShape) ValidateWithPath(path string) error {
	if _daaaf := _aeabe.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _daaaf != nil {
		return _daaaf
	}
	if _abbea := _aeabe.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _abbea != nil {
		return _abbea
	}
	for _gggd, _bgae := range _aeabe.Choice {
		if _bgee := _bgae.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _gggd)); _bgee != nil {
			return _bgee
		}
	}
	if _aeabe.ExtLst != nil {
		if _caaeg := _aeabe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _caaeg != nil {
			return _caaeg
		}
	}
	return nil
}

func (_cdcb *CT_GvmlPicture) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bcffg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_cdcb.NvPicPr, _bcffg)
	_eacab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_cdcb.BlipFill, _eacab)
	_aeggb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cdcb.SpPr, _aeggb)
	if _cdcb.Style != nil {
		_beeg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cdcb.Style, _beeg)
	}
	if _cdcb.ExtLst != nil {
		_ddgbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdcb.ExtLst, _ddgbf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dcbgb *EG_Text3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dcbgb.Sp3d != nil {
		_dfedg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_dcbgb.Sp3d, _dfedg)
	}
	if _dcbgb.FlatTx != nil {
		_gdgca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_dcbgb.FlatTx, _gdgca)
	}
	return nil
}

// Validate validates the EG_TextBulletSize and its children
func (_bcgbgd *EG_TextBulletSize) Validate() error {
	return _bcgbgd.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065")
}

func (_adad *CT_GrayscaleEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ColorChangeEffect() *CT_ColorChangeEffect {
	_bfeb := &CT_ColorChangeEffect{}
	_bfeb.ClrFrom = NewCT_Color()
	_bfeb.ClrTo = NewCT_Color()
	return _bfeb
}

type CT_Scene3D struct {
	Camera   *CT_Camera
	LightRig *CT_LightRig
	Backdrop *CT_Backdrop
	ExtLst   *CT_OfficeArtExtensionList
}

func NewCT_Connection() *CT_Connection { _eeacg := &CT_Connection{}; return _eeacg }

func (_eadge *ST_LineEndType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eadge = 0
	case "\u006e\u006f\u006e\u0065":
		*_eadge = 1
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_eadge = 2
	case "\u0073t\u0065\u0061\u006c\u0074\u0068":
		*_eadge = 3
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_eadge = 4
	case "\u006f\u0076\u0061\u006c":
		*_eadge = 5
	case "\u0061\u0072\u0072o\u0077":
		*_eadge = 6
	}
	return nil
}

func (_abdbcd ST_SchemeColorVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abdbcd.String(), start)
}

const (
	ST_TextTabAlignTypeUnset ST_TextTabAlignType = 0
	ST_TextTabAlignTypeL     ST_TextTabAlignType = 1
	ST_TextTabAlignTypeCtr   ST_TextTabAlignType = 2
	ST_TextTabAlignTypeR     ST_TextTabAlignType = 3
	ST_TextTabAlignTypeDec   ST_TextTabAlignType = 4
)

func (_ffdbc ST_PresetCameraType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fffge := _g.Attr{}
	_fffge.Name = name
	switch _ffdbc {
	case ST_PresetCameraTypeUnset:
		_fffge.Value = ""
	case ST_PresetCameraTypeLegacyObliqueTopLeft:
		_fffge.Value = "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueTop:
		_fffge.Value = "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeLegacyObliqueTopRight:
		_fffge.Value = "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueLeft:
		_fffge.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueFront:
		_fffge.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeLegacyObliqueRight:
		_fffge.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottomLeft:
		_fffge.Value = "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottom:
		_fffge.Value = "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyObliqueBottomRight:
		_fffge.Value = "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTopLeft:
		_fffge.Value = "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTop:
		_fffge.Value = "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case ST_PresetCameraTypeLegacyPerspectiveTopRight:
		_fffge.Value = "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case ST_PresetCameraTypeLegacyPerspectiveLeft:
		_fffge.Value = "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveFront:
		_fffge.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveRight:
		_fffge.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottomLeft:
		_fffge.Value = "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottom:
		_fffge.Value = "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyPerspectiveBottomRight:
		_fffge.Value = "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case ST_PresetCameraTypeOrthographicFront:
		_fffge.Value = "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeIsometricTopUp:
		_fffge.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case ST_PresetCameraTypeIsometricTopDown:
		_fffge.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricBottomUp:
		_fffge.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case ST_PresetCameraTypeIsometricBottomDown:
		_fffge.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricLeftUp:
		_fffge.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricLeftDown:
		_fffge.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricRightUp:
		_fffge.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricRightDown:
		_fffge.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricOffAxis1Left:
		_fffge.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Right:
		_fffge.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Top:
		_fffge.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis2Left:
		_fffge.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Right:
		_fffge.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Top:
		_fffge.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis3Left:
		_fffge.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Right:
		_fffge.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Bottom:
		_fffge.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeIsometricOffAxis4Left:
		_fffge.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Right:
		_fffge.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Bottom:
		_fffge.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueTopLeft:
		_fffge.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueTop:
		_fffge.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeObliqueTopRight:
		_fffge.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueLeft:
		_fffge.Value = "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueRight:
		_fffge.Value = "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueBottomLeft:
		_fffge.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueBottom:
		_fffge.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueBottomRight:
		_fffge.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveFront:
		_fffge.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypePerspectiveLeft:
		_fffge.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypePerspectiveRight:
		_fffge.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveAbove:
		_fffge.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case ST_PresetCameraTypePerspectiveBelow:
		_fffge.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case ST_PresetCameraTypePerspectiveAboveLeftFacing:
		_fffge.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveAboveRightFacing:
		_fffge.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingLeftFacing:
		_fffge.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingRightFacing:
		_fffge.Value = "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicLeftFacing:
		_fffge.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicRightFacing:
		_fffge.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing:
		_fffge.Value = "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing:
		_fffge.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case ST_PresetCameraTypePerspectiveRelaxed:
		_fffge.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case ST_PresetCameraTypePerspectiveRelaxedModerately:
		_fffge.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return _fffge, nil
}

func (_eebce *EG_TextUnderlineFill) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eebce.UFillTx != nil {
		_eegee := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_eebce.UFillTx, _eegee)
	}
	if _eebce.UFill != nil {
		_aggg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eebce.UFill, _aggg)
	}
	return nil
}

func (_bgbf *CT_ColorSchemeAndMapping) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_eecc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_bgbf.ClrScheme, _eecc)
	if _bgbf.ClrMap != nil {
		_dgafc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
		e.EncodeElement(_bgbf.ClrMap, _dgafc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RelativeRect and its children, prefixing error messages with path
func (_agaeb *CT_RelativeRect) ValidateWithPath(path string) error {
	if _agaeb.LAttr != nil {
		if _aabg := _agaeb.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _aabg != nil {
			return _aabg
		}
	}
	if _agaeb.TAttr != nil {
		if _bbdcc := _agaeb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bbdcc != nil {
			return _bbdcc
		}
	}
	if _agaeb.RAttr != nil {
		if _fdfaa := _agaeb.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _fdfaa != nil {
			return _fdfaa
		}
	}
	if _agaeb.BAttr != nil {
		if _abdce := _agaeb.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _abdce != nil {
			return _abdce
		}
	}
	return nil
}

func (_gbdcga ST_FontCollectionIndex) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gbdcga.String(), start)
}

// ValidateWithPath validates the CT_PolarAdjustHandle and its children, prefixing error messages with path
func (_cgfed *CT_PolarAdjustHandle) ValidateWithPath(path string) error {
	if _cgfed.MinRAttr != nil {
		if _gffdc := _cgfed.MinRAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0052\u0041\u0074\u0074r"); _gffdc != nil {
			return _gffdc
		}
	}
	if _cgfed.MaxRAttr != nil {
		if _fdaea := _cgfed.MaxRAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0052\u0041\u0074\u0074r"); _fdaea != nil {
			return _fdaea
		}
	}
	if _cgfed.MinAngAttr != nil {
		if _ccbag := _cgfed.MinAngAttr.ValidateWithPath(path + "/\u004d\u0069\u006e\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _ccbag != nil {
			return _ccbag
		}
	}
	if _cgfed.MaxAngAttr != nil {
		if _eega := _cgfed.MaxAngAttr.ValidateWithPath(path + "/\u004d\u0061\u0078\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _eega != nil {
			return _eega
		}
	}
	if _abdbc := _cgfed.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _abdbc != nil {
		return _abdbc
	}
	return nil
}

func (_cgdgff ST_TextTabAlignType) ValidateWithPath(path string) error {
	switch _cgdgff {
	case 0, 1, 2, 3, 4:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgdgff))
	}
	return nil
}

func (_fcaa *CT_TableStyleTextStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fcaa.BAttr != ST_OnOffStyleTypeUnset {
		_degcg, _gbece := _fcaa.BAttr.MarshalXMLAttr(_g.Name{Local: "\u0062"})
		if _gbece != nil {
			return _gbece
		}
		start.Attr = append(start.Attr, _degcg)
	}
	if _fcaa.IAttr != ST_OnOffStyleTypeUnset {
		_ebge, _addbea := _fcaa.IAttr.MarshalXMLAttr(_g.Name{Local: "\u0069"})
		if _addbea != nil {
			return _addbea
		}
		start.Attr = append(start.Attr, _ebge)
	}
	e.EncodeToken(start)
	if _fcaa.Font != nil {
		_fagdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_fcaa.Font, _fagdg)
	}
	if _fcaa.FontRef != nil {
		_cddff := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_fcaa.FontRef, _cddff)
	}
	if _fcaa.ScrgbClr != nil {
		_febfbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fcaa.ScrgbClr, _febfbf)
	}
	if _fcaa.SrgbClr != nil {
		_gcedga := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fcaa.SrgbClr, _gcedga)
	}
	if _fcaa.HslClr != nil {
		_dcdad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fcaa.HslClr, _dcdad)
	}
	if _fcaa.SysClr != nil {
		_feeac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fcaa.SysClr, _feeac)
	}
	if _fcaa.SchemeClr != nil {
		_eefac := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fcaa.SchemeClr, _eefac)
	}
	if _fcaa.PrstClr != nil {
		_acadf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fcaa.PrstClr, _acadf)
	}
	if _fcaa.ExtLst != nil {
		_dccb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcaa.ExtLst, _dccb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_afff *CT_GradientFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _afff.FlipAttr != ST_TileFlipModeUnset {
		_faecd, _gbdea := _afff.FlipAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _gbdea != nil {
			return _gbdea
		}
		start.Attr = append(start.Attr, _faecd)
	}
	if _afff.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_afff.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _afff.GsLst != nil {
		_accdg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0073\u004c\u0073\u0074"}}
		e.EncodeElement(_afff.GsLst, _accdg)
	}
	if _afff.Lin != nil {
		_ddfag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_afff.Lin, _ddfag)
	}
	if _afff.Path != nil {
		_gbdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_afff.Path, _gbdb)
	}
	if _afff.TileRect != nil {
		_ccac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_afff.TileRect, _ccac)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dccga *CT_FontReference) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_bgggg, _bcfb := _dccga.IdxAttr.MarshalXMLAttr(_g.Name{Local: "\u0069\u0064\u0078"})
	if _bcfb != nil {
		return _bcfb
	}
	start.Attr = append(start.Attr, _bgggg)
	e.EncodeToken(start)
	if _dccga.ScrgbClr != nil {
		_begd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dccga.ScrgbClr, _begd)
	}
	if _dccga.SrgbClr != nil {
		_dgdg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dccga.SrgbClr, _dgdg)
	}
	if _dccga.HslClr != nil {
		_gfcf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dccga.HslClr, _gfcf)
	}
	if _dccga.SysClr != nil {
		_bfbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dccga.SysClr, _bfbg)
	}
	if _dccga.SchemeClr != nil {
		_gfdc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dccga.SchemeClr, _gfdc)
	}
	if _dccga.PrstClr != nil {
		_fcggbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dccga.PrstClr, _fcggbb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextTabStop struct {
	PosAttr  *ST_Coordinate32
	AlgnAttr ST_TextTabAlignType
}

// Validate validates the EG_Media and its children
func (_dabfc *EG_Media) Validate() error {
	return _dabfc.ValidateWithPath("\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061")
}

// Validate validates the CT_CustomGeometry2D and its children
func (_dafg *CT_CustomGeometry2D) Validate() error {
	return _dafg.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}

func NewCT_TableCellBorderStyle() *CT_TableCellBorderStyle {
	_fdffe := &CT_TableCellBorderStyle{}
	return _fdffe
}

func NewCT_NonVisualDrawingProps() *CT_NonVisualDrawingProps {
	_fadaag := &CT_NonVisualDrawingProps{}
	return _fadaag
}

type ST_TextAnchoringType byte

func (_bcfbc *ST_PositivePercentage) ValidateWithPath(path string) error {
	_bdgcga := []string{}
	if _bcfbc.ST_PositivePercentageDecimal != nil {
		_bdgcga = append(_bdgcga, "\u0053\u0054\u005f\u0050o\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063e\u006et\u0061\u0067\u0065\u0044\u0065\u0063\u0069m\u0061\u006c")
	}
	if _bcfbc.ST_PositivePercentage != nil {
		if _cbege := _bcfbc.ST_PositivePercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fPo\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065"); _cbege != nil {
			return _cbege
		}
		_bdgcga = append(_bdgcga, "S\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_bdgcga) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bdgcga)
	}
	return nil
}

type CT_FontScheme struct {
	NameAttr  string
	MajorFont *CT_FontCollection
	MinorFont *CT_FontCollection
	ExtLst    *CT_OfficeArtExtensionList
}

// Validate validates the CT_ContentPartLocking and its children
func (_bdgb *CT_ContentPartLocking) Validate() error {
	return _bdgb.ValidateWithPath("C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067")
}

// ST_PositivePercentage is a union type
type ST_PositivePercentage struct {
	ST_PositivePercentageDecimal *int32
	ST_PositivePercentage        *ST_Percentage
}

// ValidateWithPath validates the CT_TextBulletSizeFollowText and its children, prefixing error messages with path
func (_dccgf *CT_TextBulletSizeFollowText) ValidateWithPath(path string) error { return nil }

func (_accga *CT_DuotoneEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dgbaf:
	for {
		_ccbe, _gbef := d.Token()
		if _gbef != nil {
			return _gbef
		}
		switch _afee := _ccbe.(type) {
		case _g.StartElement:
			switch _afee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ecdde := NewEG_ColorChoice()
				_ecdde.ScrgbClr = NewCT_ScRgbColor()
				if _dcaa := d.DecodeElement(_ecdde.ScrgbClr, &_afee); _dcaa != nil {
					return _dcaa
				}
				_accga.EG_ColorChoice = append(_accga.EG_ColorChoice, _ecdde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cfec := NewEG_ColorChoice()
				_cfec.SrgbClr = NewCT_SRgbColor()
				if _gbad := d.DecodeElement(_cfec.SrgbClr, &_afee); _gbad != nil {
					return _gbad
				}
				_accga.EG_ColorChoice = append(_accga.EG_ColorChoice, _cfec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_caae := NewEG_ColorChoice()
				_caae.HslClr = NewCT_HslColor()
				if _dbedb := d.DecodeElement(_caae.HslClr, &_afee); _dbedb != nil {
					return _dbedb
				}
				_accga.EG_ColorChoice = append(_accga.EG_ColorChoice, _caae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_agfe := NewEG_ColorChoice()
				_agfe.SysClr = NewCT_SystemColor()
				if _caef := d.DecodeElement(_agfe.SysClr, &_afee); _caef != nil {
					return _caef
				}
				_accga.EG_ColorChoice = append(_accga.EG_ColorChoice, _agfe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fdec := NewEG_ColorChoice()
				_fdec.SchemeClr = NewCT_SchemeColor()
				if _cega := d.DecodeElement(_fdec.SchemeClr, &_afee); _cega != nil {
					return _cega
				}
				_accga.EG_ColorChoice = append(_accga.EG_ColorChoice, _fdec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ebbbd := NewEG_ColorChoice()
				_ebbbd.PrstClr = NewCT_PresetColor()
				if _fegd := d.DecodeElement(_ebbbd.PrstClr, &_afee); _fegd != nil {
					return _fegd
				}
				_accga.EG_ColorChoice = append(_accga.EG_ColorChoice, _ebbbd)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0075\u006f\u0074\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025v", _afee.Name)
				if _acaf := d.Skip(); _acaf != nil {
					return _acaf
				}
			}
		case _g.EndElement:
			break _dgbaf
		case _g.CharData:
		}
	}
	return nil
}

func (_dbbff ST_DgmBuildStep) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dbbff.String(), start)
}

func (_cffba ST_AnimationDgmOnlyBuildType) ValidateWithPath(path string) error {
	switch _cffba {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cffba))
	}
	return nil
}

func (_ecaec *CT_PresetGeometry2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ecaec.PrstAttr = ST_ShapeType(1)
	for _, _aaecb := range start.Attr {
		if _aaecb.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ecaec.PrstAttr.UnmarshalXMLAttr(_aaecb)
			continue
		}
	}
_fbbce:
	for {
		_bgbbc, _ffceb := d.Token()
		if _ffceb != nil {
			return _ffceb
		}
		switch _adbcf := _bgbbc.(type) {
		case _g.StartElement:
			switch _adbcf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_ecaec.AvLst = NewCT_GeomGuideList()
				if _ceeaab := d.DecodeElement(_ecaec.AvLst, &_adbcf); _ceeaab != nil {
					return _ceeaab
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _adbcf.Name)
				if _efffc := d.Skip(); _efffc != nil {
					return _efffc
				}
			}
		case _g.EndElement:
			break _fbbce
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PositiveSize2D and its children, prefixing error messages with path
func (_fadea *CT_PositiveSize2D) ValidateWithPath(path string) error {
	if _fadea.CxAttr < 0 {
		return _bb.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fadea.CxAttr)
	}
	if _fadea.CxAttr > 27273042316900 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fadea.CxAttr)
	}
	if _fadea.CyAttr < 0 {
		return _bb.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fadea.CyAttr)
	}
	if _fadea.CyAttr > 27273042316900 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fadea.CyAttr)
	}
	return nil
}

func (_badabc ST_LineCap) String() string {
	switch _badabc {
	case 0:
		return ""
	case 1:
		return "\u0072\u006e\u0064"
	case 2:
		return "\u0073\u0071"
	case 3:
		return "\u0066\u006c\u0061\u0074"
	}
	return ""
}

type ST_BevelPresetType byte

func (_effg *CT_AlphaReplaceEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061"}, Value: _bb.Sprintf("\u0025\u0076", _effg.AAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BlipFillProperties and its children, prefixing error messages with path
func (_fbag *CT_BlipFillProperties) ValidateWithPath(path string) error {
	if _fbag.Blip != nil {
		if _afdg := _fbag.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _afdg != nil {
			return _afdg
		}
	}
	if _fbag.SrcRect != nil {
		if _gega := _fbag.SrcRect.ValidateWithPath(path + "\u002f\u0053\u0072\u0063\u0052\u0065\u0063\u0074"); _gega != nil {
			return _gega
		}
	}
	if _fbag.Tile != nil {
		if _dege := _fbag.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _dege != nil {
			return _dege
		}
	}
	if _fbag.Stretch != nil {
		if _fdfgb := _fbag.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _fdfgb != nil {
			return _fdfgb
		}
	}
	return nil
}

type CT_CustomColorList struct{ CustClr []*CT_CustomColor }

// Validate validates the CT_Scene3D and its children
func (_cacfbb *CT_Scene3D) Validate() error {
	return _cacfbb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044")
}

// Validate validates the CT_Hyperlink and its children
func (_cbfce *CT_Hyperlink) Validate() error {
	return _cbfce.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

func (_aaegd *CT_Path2DArcTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fdbee := range start.Attr {
		if _fdbee.Name.Local == "\u0077\u0052" {
			_defc, _beaec := ParseUnionST_AdjCoordinate(_fdbee.Value)
			if _beaec != nil {
				return _beaec
			}
			_aaegd.WRAttr = _defc
			continue
		}
		if _fdbee.Name.Local == "\u0068\u0052" {
			_gdbb, _ggefe := ParseUnionST_AdjCoordinate(_fdbee.Value)
			if _ggefe != nil {
				return _ggefe
			}
			_aaegd.HRAttr = _gdbb
			continue
		}
		if _fdbee.Name.Local == "\u0073\u0074\u0041n\u0067" {
			_fcgcd, _edgge := ParseUnionST_AdjAngle(_fdbee.Value)
			if _edgge != nil {
				return _edgge
			}
			_aaegd.StAngAttr = _fcgcd
			continue
		}
		if _fdbee.Name.Local == "\u0073\u0077\u0041n\u0067" {
			_dedb, _baad := ParseUnionST_AdjAngle(_fdbee.Value)
			if _baad != nil {
				return _baad
			}
			_aaegd.SwAngAttr = _dedb
			continue
		}
	}
	for {
		_beebe, _dbag := d.Token()
		if _dbag != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0041\u0072\u0063\u0054\u006f:\u0020\u0025\u0073", _dbag)
		}
		if _ebagb, _abebf := _beebe.(_g.EndElement); _abebf && _ebagb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Cell3D() *CT_Cell3D { _ecea := &CT_Cell3D{}; _ecea.Bevel = NewCT_Bevel(); return _ecea }

type CT_GvmlGroupShapeChoice struct {
	TxSp         []*CT_GvmlTextShape
	Sp           []*CT_GvmlShape
	CxnSp        []*CT_GvmlConnector
	Pic          []*CT_GvmlPicture
	GraphicFrame []*CT_GvmlGraphicalObjectFrame
	GrpSp        []*CT_GvmlGroupShape
}

func (_ecefa *ST_TextShapeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ecefa = 0
	case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
		*_ecefa = 1
	case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
		*_ecefa = 2
	case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
		*_ecefa = 3
	case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_ecefa = 4
	case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
		*_ecefa = 5
	case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
		*_ecefa = 6
	case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
		*_ecefa = 7
	case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
		*_ecefa = 8
	case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
		*_ecefa = 9
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
		*_ecefa = 10
	case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
		*_ecefa = 11
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
		*_ecefa = 12
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
		*_ecefa = 13
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
		*_ecefa = 14
	case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
		*_ecefa = 15
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
		*_ecefa = 16
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
		*_ecefa = 17
	case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
		*_ecefa = 18
	case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
		*_ecefa = 19
	case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
		*_ecefa = 20
	case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
		*_ecefa = 21
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
		*_ecefa = 22
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
		*_ecefa = 23
	case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
		*_ecefa = 24
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
		*_ecefa = 25
	case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
		*_ecefa = 26
	case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
		*_ecefa = 27
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_ecefa = 28
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_ecefa = 29
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_ecefa = 30
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_ecefa = 31
	case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
		*_ecefa = 32
	case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
		*_ecefa = 33
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
		*_ecefa = 34
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
		*_ecefa = 35
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
		*_ecefa = 36
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_ecefa = 37
	case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
		*_ecefa = 38
	case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
		*_ecefa = 39
	case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
		*_ecefa = 40
	case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_ecefa = 41
	}
	return nil
}

// ValidateWithPath validates the CT_PresetTextShape and its children, prefixing error messages with path
func (_bgagb *CT_PresetTextShape) ValidateWithPath(path string) error {
	if _bgagb.PrstAttr == ST_TextShapeTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gadgea := _bgagb.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _gadgea != nil {
		return _gadgea
	}
	if _bgagb.AvLst != nil {
		if _dffga := _bgagb.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _dffga != nil {
			return _dffga
		}
	}
	return nil
}

type CT_PathShadeProperties struct {
	PathAttr   ST_PathShadeType
	FillToRect *CT_RelativeRect
}

func (_beeff *CT_ShapeStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_becf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
	e.EncodeElement(_beeff.LnRef, _becf)
	_aeacc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
	e.EncodeElement(_beeff.FillRef, _aeacc)
	_cfgag := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
	e.EncodeElement(_beeff.EffectRef, _cfgag)
	_dgccg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
	e.EncodeElement(_beeff.FontRef, _dgccg)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_Camera struct {
	PrstAttr ST_PresetCameraType
	FovAttr  *int32
	ZoomAttr *ST_PositivePercentage
	Rot      *CT_SphereCoords
}

// Validate validates the CT_TextBody and its children
func (_cgcfc *CT_TextBody) Validate() error {
	return _cgcfc.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079")
}

func (_adfb ST_PresetShadowVal) Validate() error { return _adfb.ValidateWithPath("") }

func (_cdce *CT_TextBlipBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cbbag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
	e.EncodeElement(_cdce.Blip, _cbbag)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_EffectReference and its children
func (_facbd *CT_EffectReference) Validate() error {
	return _facbd.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065")
}

func (_bcgf *EG_TextUnderlineFill) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ebaea:
	for {
		_bdcbc, _dggegc := d.Token()
		if _dggegc != nil {
			return _dggegc
		}
		switch _fbefad := _bdcbc.(type) {
		case _g.StartElement:
			switch _fbefad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_bcgf.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _adff := d.DecodeElement(_bcgf.UFillTx, &_fbefad); _adff != nil {
					return _adff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_bcgf.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _cccfg := d.DecodeElement(_bcgf.UFill, &_fbefad); _cccfg != nil {
					return _cccfg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _fbefad.Name)
				if _ebcca := d.Skip(); _ebcca != nil {
					return _ebcca
				}
			}
		case _g.EndElement:
			break _ebaea
		case _g.CharData:
		}
	}
	return nil
}

func (_ffbbd *CT_TextLineBreak) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ffbbd.RPr != nil {
		_aacbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_ffbbd.RPr, _aacbb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ShapeTypeUnset                      ST_ShapeType = 0
	ST_ShapeTypeLine                       ST_ShapeType = 1
	ST_ShapeTypeLineInv                    ST_ShapeType = 2
	ST_ShapeTypeTriangle                   ST_ShapeType = 3
	ST_ShapeTypeRtTriangle                 ST_ShapeType = 4
	ST_ShapeTypeRect                       ST_ShapeType = 5
	ST_ShapeTypeDiamond                    ST_ShapeType = 6
	ST_ShapeTypeParallelogram              ST_ShapeType = 7
	ST_ShapeTypeTrapezoid                  ST_ShapeType = 8
	ST_ShapeTypeNonIsoscelesTrapezoid      ST_ShapeType = 9
	ST_ShapeTypePentagon                   ST_ShapeType = 10
	ST_ShapeTypeHexagon                    ST_ShapeType = 11
	ST_ShapeTypeHeptagon                   ST_ShapeType = 12
	ST_ShapeTypeOctagon                    ST_ShapeType = 13
	ST_ShapeTypeDecagon                    ST_ShapeType = 14
	ST_ShapeTypeDodecagon                  ST_ShapeType = 15
	ST_ShapeTypeStar4                      ST_ShapeType = 16
	ST_ShapeTypeStar5                      ST_ShapeType = 17
	ST_ShapeTypeStar6                      ST_ShapeType = 18
	ST_ShapeTypeStar7                      ST_ShapeType = 19
	ST_ShapeTypeStar8                      ST_ShapeType = 20
	ST_ShapeTypeStar10                     ST_ShapeType = 21
	ST_ShapeTypeStar12                     ST_ShapeType = 22
	ST_ShapeTypeStar16                     ST_ShapeType = 23
	ST_ShapeTypeStar24                     ST_ShapeType = 24
	ST_ShapeTypeStar32                     ST_ShapeType = 25
	ST_ShapeTypeRoundRect                  ST_ShapeType = 26
	ST_ShapeTypeRound1Rect                 ST_ShapeType = 27
	ST_ShapeTypeRound2SameRect             ST_ShapeType = 28
	ST_ShapeTypeRound2DiagRect             ST_ShapeType = 29
	ST_ShapeTypeSnipRoundRect              ST_ShapeType = 30
	ST_ShapeTypeSnip1Rect                  ST_ShapeType = 31
	ST_ShapeTypeSnip2SameRect              ST_ShapeType = 32
	ST_ShapeTypeSnip2DiagRect              ST_ShapeType = 33
	ST_ShapeTypePlaque                     ST_ShapeType = 34
	ST_ShapeTypeEllipse                    ST_ShapeType = 35
	ST_ShapeTypeTeardrop                   ST_ShapeType = 36
	ST_ShapeTypeHomePlate                  ST_ShapeType = 37
	ST_ShapeTypeChevron                    ST_ShapeType = 38
	ST_ShapeTypePieWedge                   ST_ShapeType = 39
	ST_ShapeTypePie                        ST_ShapeType = 40
	ST_ShapeTypeBlockArc                   ST_ShapeType = 41
	ST_ShapeTypeDonut                      ST_ShapeType = 42
	ST_ShapeTypeNoSmoking                  ST_ShapeType = 43
	ST_ShapeTypeRightArrow                 ST_ShapeType = 44
	ST_ShapeTypeLeftArrow                  ST_ShapeType = 45
	ST_ShapeTypeUpArrow                    ST_ShapeType = 46
	ST_ShapeTypeDownArrow                  ST_ShapeType = 47
	ST_ShapeTypeStripedRightArrow          ST_ShapeType = 48
	ST_ShapeTypeNotchedRightArrow          ST_ShapeType = 49
	ST_ShapeTypeBentUpArrow                ST_ShapeType = 50
	ST_ShapeTypeLeftRightArrow             ST_ShapeType = 51
	ST_ShapeTypeUpDownArrow                ST_ShapeType = 52
	ST_ShapeTypeLeftUpArrow                ST_ShapeType = 53
	ST_ShapeTypeLeftRightUpArrow           ST_ShapeType = 54
	ST_ShapeTypeQuadArrow                  ST_ShapeType = 55
	ST_ShapeTypeLeftArrowCallout           ST_ShapeType = 56
	ST_ShapeTypeRightArrowCallout          ST_ShapeType = 57
	ST_ShapeTypeUpArrowCallout             ST_ShapeType = 58
	ST_ShapeTypeDownArrowCallout           ST_ShapeType = 59
	ST_ShapeTypeLeftRightArrowCallout      ST_ShapeType = 60
	ST_ShapeTypeUpDownArrowCallout         ST_ShapeType = 61
	ST_ShapeTypeQuadArrowCallout           ST_ShapeType = 62
	ST_ShapeTypeBentArrow                  ST_ShapeType = 63
	ST_ShapeTypeUturnArrow                 ST_ShapeType = 64
	ST_ShapeTypeCircularArrow              ST_ShapeType = 65
	ST_ShapeTypeLeftCircularArrow          ST_ShapeType = 66
	ST_ShapeTypeLeftRightCircularArrow     ST_ShapeType = 67
	ST_ShapeTypeCurvedRightArrow           ST_ShapeType = 68
	ST_ShapeTypeCurvedLeftArrow            ST_ShapeType = 69
	ST_ShapeTypeCurvedUpArrow              ST_ShapeType = 70
	ST_ShapeTypeCurvedDownArrow            ST_ShapeType = 71
	ST_ShapeTypeSwooshArrow                ST_ShapeType = 72
	ST_ShapeTypeCube                       ST_ShapeType = 73
	ST_ShapeTypeCan                        ST_ShapeType = 74
	ST_ShapeTypeLightningBolt              ST_ShapeType = 75
	ST_ShapeTypeHeart                      ST_ShapeType = 76
	ST_ShapeTypeSun                        ST_ShapeType = 77
	ST_ShapeTypeMoon                       ST_ShapeType = 78
	ST_ShapeTypeSmileyFace                 ST_ShapeType = 79
	ST_ShapeTypeIrregularSeal1             ST_ShapeType = 80
	ST_ShapeTypeIrregularSeal2             ST_ShapeType = 81
	ST_ShapeTypeFoldedCorner               ST_ShapeType = 82
	ST_ShapeTypeBevel                      ST_ShapeType = 83
	ST_ShapeTypeFrame                      ST_ShapeType = 84
	ST_ShapeTypeHalfFrame                  ST_ShapeType = 85
	ST_ShapeTypeCorner                     ST_ShapeType = 86
	ST_ShapeTypeDiagStripe                 ST_ShapeType = 87
	ST_ShapeTypeChord                      ST_ShapeType = 88
	ST_ShapeTypeArc                        ST_ShapeType = 89
	ST_ShapeTypeLeftBracket                ST_ShapeType = 90
	ST_ShapeTypeRightBracket               ST_ShapeType = 91
	ST_ShapeTypeLeftBrace                  ST_ShapeType = 92
	ST_ShapeTypeRightBrace                 ST_ShapeType = 93
	ST_ShapeTypeBracketPair                ST_ShapeType = 94
	ST_ShapeTypeBracePair                  ST_ShapeType = 95
	ST_ShapeTypeStraightConnector1         ST_ShapeType = 96
	ST_ShapeTypeBentConnector2             ST_ShapeType = 97
	ST_ShapeTypeBentConnector3             ST_ShapeType = 98
	ST_ShapeTypeBentConnector4             ST_ShapeType = 99
	ST_ShapeTypeBentConnector5             ST_ShapeType = 100
	ST_ShapeTypeCurvedConnector2           ST_ShapeType = 101
	ST_ShapeTypeCurvedConnector3           ST_ShapeType = 102
	ST_ShapeTypeCurvedConnector4           ST_ShapeType = 103
	ST_ShapeTypeCurvedConnector5           ST_ShapeType = 104
	ST_ShapeTypeCallout1                   ST_ShapeType = 105
	ST_ShapeTypeCallout2                   ST_ShapeType = 106
	ST_ShapeTypeCallout3                   ST_ShapeType = 107
	ST_ShapeTypeAccentCallout1             ST_ShapeType = 108
	ST_ShapeTypeAccentCallout2             ST_ShapeType = 109
	ST_ShapeTypeAccentCallout3             ST_ShapeType = 110
	ST_ShapeTypeBorderCallout1             ST_ShapeType = 111
	ST_ShapeTypeBorderCallout2             ST_ShapeType = 112
	ST_ShapeTypeBorderCallout3             ST_ShapeType = 113
	ST_ShapeTypeAccentBorderCallout1       ST_ShapeType = 114
	ST_ShapeTypeAccentBorderCallout2       ST_ShapeType = 115
	ST_ShapeTypeAccentBorderCallout3       ST_ShapeType = 116
	ST_ShapeTypeWedgeRectCallout           ST_ShapeType = 117
	ST_ShapeTypeWedgeRoundRectCallout      ST_ShapeType = 118
	ST_ShapeTypeWedgeEllipseCallout        ST_ShapeType = 119
	ST_ShapeTypeCloudCallout               ST_ShapeType = 120
	ST_ShapeTypeCloud                      ST_ShapeType = 121
	ST_ShapeTypeRibbon                     ST_ShapeType = 122
	ST_ShapeTypeRibbon2                    ST_ShapeType = 123
	ST_ShapeTypeEllipseRibbon              ST_ShapeType = 124
	ST_ShapeTypeEllipseRibbon2             ST_ShapeType = 125
	ST_ShapeTypeLeftRightRibbon            ST_ShapeType = 126
	ST_ShapeTypeVerticalScroll             ST_ShapeType = 127
	ST_ShapeTypeHorizontalScroll           ST_ShapeType = 128
	ST_ShapeTypeWave                       ST_ShapeType = 129
	ST_ShapeTypeDoubleWave                 ST_ShapeType = 130
	ST_ShapeTypePlus                       ST_ShapeType = 131
	ST_ShapeTypeFlowChartProcess           ST_ShapeType = 132
	ST_ShapeTypeFlowChartDecision          ST_ShapeType = 133
	ST_ShapeTypeFlowChartInputOutput       ST_ShapeType = 134
	ST_ShapeTypeFlowChartPredefinedProcess ST_ShapeType = 135
	ST_ShapeTypeFlowChartInternalStorage   ST_ShapeType = 136
	ST_ShapeTypeFlowChartDocument          ST_ShapeType = 137
	ST_ShapeTypeFlowChartMultidocument     ST_ShapeType = 138
	ST_ShapeTypeFlowChartTerminator        ST_ShapeType = 139
	ST_ShapeTypeFlowChartPreparation       ST_ShapeType = 140
	ST_ShapeTypeFlowChartManualInput       ST_ShapeType = 141
	ST_ShapeTypeFlowChartManualOperation   ST_ShapeType = 142
	ST_ShapeTypeFlowChartConnector         ST_ShapeType = 143
	ST_ShapeTypeFlowChartPunchedCard       ST_ShapeType = 144
	ST_ShapeTypeFlowChartPunchedTape       ST_ShapeType = 145
	ST_ShapeTypeFlowChartSummingJunction   ST_ShapeType = 146
	ST_ShapeTypeFlowChartOr                ST_ShapeType = 147
	ST_ShapeTypeFlowChartCollate           ST_ShapeType = 148
	ST_ShapeTypeFlowChartSort              ST_ShapeType = 149
	ST_ShapeTypeFlowChartExtract           ST_ShapeType = 150
	ST_ShapeTypeFlowChartMerge             ST_ShapeType = 151
	ST_ShapeTypeFlowChartOfflineStorage    ST_ShapeType = 152
	ST_ShapeTypeFlowChartOnlineStorage     ST_ShapeType = 153
	ST_ShapeTypeFlowChartMagneticTape      ST_ShapeType = 154
	ST_ShapeTypeFlowChartMagneticDisk      ST_ShapeType = 155
	ST_ShapeTypeFlowChartMagneticDrum      ST_ShapeType = 156
	ST_ShapeTypeFlowChartDisplay           ST_ShapeType = 157
	ST_ShapeTypeFlowChartDelay             ST_ShapeType = 158
	ST_ShapeTypeFlowChartAlternateProcess  ST_ShapeType = 159
	ST_ShapeTypeFlowChartOffpageConnector  ST_ShapeType = 160
	ST_ShapeTypeActionButtonBlank          ST_ShapeType = 161
	ST_ShapeTypeActionButtonHome           ST_ShapeType = 162
	ST_ShapeTypeActionButtonHelp           ST_ShapeType = 163
	ST_ShapeTypeActionButtonInformation    ST_ShapeType = 164
	ST_ShapeTypeActionButtonForwardNext    ST_ShapeType = 165
	ST_ShapeTypeActionButtonBackPrevious   ST_ShapeType = 166
	ST_ShapeTypeActionButtonEnd            ST_ShapeType = 167
	ST_ShapeTypeActionButtonBeginning      ST_ShapeType = 168
	ST_ShapeTypeActionButtonReturn         ST_ShapeType = 169
	ST_ShapeTypeActionButtonDocument       ST_ShapeType = 170
	ST_ShapeTypeActionButtonSound          ST_ShapeType = 171
	ST_ShapeTypeActionButtonMovie          ST_ShapeType = 172
	ST_ShapeTypeGear6                      ST_ShapeType = 173
	ST_ShapeTypeGear9                      ST_ShapeType = 174
	ST_ShapeTypeFunnel                     ST_ShapeType = 175
	ST_ShapeTypeMathPlus                   ST_ShapeType = 176
	ST_ShapeTypeMathMinus                  ST_ShapeType = 177
	ST_ShapeTypeMathMultiply               ST_ShapeType = 178
	ST_ShapeTypeMathDivide                 ST_ShapeType = 179
	ST_ShapeTypeMathEqual                  ST_ShapeType = 180
	ST_ShapeTypeMathNotEqual               ST_ShapeType = 181
	ST_ShapeTypeCornerTabs                 ST_ShapeType = 182
	ST_ShapeTypeSquareTabs                 ST_ShapeType = 183
	ST_ShapeTypePlaqueTabs                 ST_ShapeType = 184
	ST_ShapeTypeChartX                     ST_ShapeType = 185
	ST_ShapeTypeChartStar                  ST_ShapeType = 186
	ST_ShapeTypeChartPlus                  ST_ShapeType = 187
)

// ST_TextSpacingPercentOrPercentString is a union type
type ST_TextSpacingPercentOrPercentString struct {
	ST_TextSpacingPercent *int32
	ST_Percentage         *string
}

func (_febd *CT_Shape3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eddee := range start.Attr {
		if _eddee.Name.Local == "\u007a" {
			_fegaf, _abgfe := ParseUnionST_Coordinate(_eddee.Value)
			if _abgfe != nil {
				return _abgfe
			}
			_febd.ZAttr = &_fegaf
			continue
		}
		if _eddee.Name.Local == "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048" {
			_cbfebd, _ebaac := _fg.ParseInt(_eddee.Value, 10, 64)
			if _ebaac != nil {
				return _ebaac
			}
			_febd.ExtrusionHAttr = &_cbfebd
			continue
		}
		if _eddee.Name.Local == "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057" {
			_dbccf, _dfdea := _fg.ParseInt(_eddee.Value, 10, 64)
			if _dfdea != nil {
				return _dfdea
			}
			_febd.ContourWAttr = &_dbccf
			continue
		}
		if _eddee.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_febd.PrstMaterialAttr.UnmarshalXMLAttr(_eddee)
			continue
		}
	}
_efbdb:
	for {
		_dgada, _cabfg := d.Token()
		if _cabfg != nil {
			return _cabfg
		}
		switch _eefff := _dgada.(type) {
		case _g.StartElement:
			switch _eefff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}:
				_febd.BevelT = NewCT_Bevel()
				if _efaae := d.DecodeElement(_febd.BevelT, &_eefff); _efaae != nil {
					return _efaae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}:
				_febd.BevelB = NewCT_Bevel()
				if _edgf := d.DecodeElement(_febd.BevelB, &_eefff); _edgf != nil {
					return _edgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}:
				_febd.ExtrusionClr = NewCT_Color()
				if _eccfb := d.DecodeElement(_febd.ExtrusionClr, &_eefff); _eccfb != nil {
					return _eccfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}:
				_febd.ContourClr = NewCT_Color()
				if _ddfeg := d.DecodeElement(_febd.ContourClr, &_eefff); _ddfeg != nil {
					return _ddfeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_febd.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbbaf := d.DecodeElement(_febd.ExtLst, &_eefff); _cbbaf != nil {
					return _cbbaf
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0061\u0070\u0065\u0033\u0044\u0020\u0025\u0076", _eefff.Name)
				if _cfdd := d.Skip(); _cfdd != nil {
					return _cfdd
				}
			}
		case _g.EndElement:
			break _efbdb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FillOverlayEffect and its children, prefixing error messages with path
func (_eecca *CT_FillOverlayEffect) ValidateWithPath(path string) error {
	if _eecca.BlendAttr == ST_BlendModeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _bdef := _eecca.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _bdef != nil {
		return _bdef
	}
	if _eecca.NoFill != nil {
		if _cbab := _eecca.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cbab != nil {
			return _cbab
		}
	}
	if _eecca.SolidFill != nil {
		if _fbdaa := _eecca.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _fbdaa != nil {
			return _fbdaa
		}
	}
	if _eecca.GradFill != nil {
		if _fccaf := _eecca.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fccaf != nil {
			return _fccaf
		}
	}
	if _eecca.BlipFill != nil {
		if _fegdg := _eecca.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fegdg != nil {
			return _fegdg
		}
	}
	if _eecca.PattFill != nil {
		if _cdbg := _eecca.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cdbg != nil {
			return _cdbg
		}
	}
	if _eecca.GrpFill != nil {
		if _geaa := _eecca.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _geaa != nil {
			return _geaa
		}
	}
	return nil
}

// Validate validates the CT_PresetColor and its children
func (_fggda *CT_PresetColor) Validate() error {
	return _fggda.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the CT_EmptyElement and its children, prefixing error messages with path
func (_cede *CT_EmptyElement) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_NonVisualPictureProperties and its children
func (_fcdb *CT_NonVisualPictureProperties) Validate() error {
	return _fcdb.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073")
}

func (_dgfa *CT_BlendEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_dfddb, _edbb := _dgfa.BlendAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _edbb != nil {
		return _edbb
	}
	start.Attr = append(start.Attr, _dfddb)
	e.EncodeToken(start)
	_bfeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_dgfa.Cont, _bfeg)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gafab *EG_TextUnderlineLine) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gagdf:
	for {
		_cbace, _cfceed := d.Token()
		if _cfceed != nil {
			return _cfceed
		}
		switch _cgaea := _cbace.(type) {
		case _g.StartElement:
			switch _cgaea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_gafab.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _dcccc := d.DecodeElement(_gafab.ULnTx, &_cgaea); _dcccc != nil {
					return _dcccc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_gafab.ULn = NewCT_LineProperties()
				if _fgega := d.DecodeElement(_gafab.ULn, &_cgaea); _fgega != nil {
					return _fgega
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0020\u0025\u0076", _cgaea.Name)
				if _ebgad := d.Skip(); _ebgad != nil {
					return _ebgad
				}
			}
		case _g.EndElement:
			break _gagdf
		case _g.CharData:
		}
	}
	return nil
}

func (_gcaf *CT_AnimationChartElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gcaf.SeriesIdxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x"}, Value: _bb.Sprintf("\u0025\u0076", *_gcaf.SeriesIdxAttr)})
	}
	if _gcaf.CategoryIdxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_gcaf.CategoryIdxAttr)})
	}
	_efff, _feg := _gcaf.BldStepAttr.MarshalXMLAttr(_g.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
	if _feg != nil {
		return _feg
	}
	start.Attr = append(start.Attr, _efff)
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ST_AdjAngle is a union type
type ST_AdjAngle struct {
	ST_Angle         *int32
	ST_GeomGuideName *string
}

// ValidateWithPath validates the CT_LineJoinMiterProperties and its children, prefixing error messages with path
func (_ggaf *CT_LineJoinMiterProperties) ValidateWithPath(path string) error {
	if _ggaf.LimAttr != nil {
		if _ebdea := _ggaf.LimAttr.ValidateWithPath(path + "\u002f\u004c\u0069\u006d\u0041\u0074\u0074\u0072"); _ebdea != nil {
			return _ebdea
		}
	}
	return nil
}

func NewCT_GvmlConnectorNonVisual() *CT_GvmlConnectorNonVisual {
	_geddc := &CT_GvmlConnectorNonVisual{}
	_geddc.CNvPr = NewCT_NonVisualDrawingProps()
	_geddc.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
	return _geddc
}

// ValidateWithPath validates the EG_ThemeableFontStyles and its children, prefixing error messages with path
func (_adggc *EG_ThemeableFontStyles) ValidateWithPath(path string) error {
	if _adggc.Font != nil {
		if _gebcf := _adggc.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _gebcf != nil {
			return _gebcf
		}
	}
	if _adggc.FontRef != nil {
		if _ceaagc := _adggc.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _ceaagc != nil {
			return _ceaagc
		}
	}
	return nil
}

func (_cgbg *CT_AlphaBiLevelEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _bb.Sprintf("\u0025\u0076", _cgbg.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_agcee *CT_TextCharBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ccedg := range start.Attr {
		if _ccedg.Name.Local == "\u0063\u0068\u0061\u0072" {
			_fbgce, _eggge := _ccedg.Value, error(nil)
			if _eggge != nil {
				return _eggge
			}
			_agcee.CharAttr = _fbgce
			continue
		}
	}
	for {
		_cagff, _fegba := d.Token()
		if _fegba != nil {
			return _bb.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042\u0075\u006c\u006c\u0065\u0074: \u0025\u0073", _fegba)
		}
		if _fcdac, _dbcfg := _cagff.(_g.EndElement); _dbcfg && _fcdac.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PatternFillProperties struct {
	PrstAttr ST_PresetPatternVal
	FgClr    *CT_Color
	BgClr    *CT_Color
}

func (_cbadbf *ST_TextPoint) ValidateWithPath(path string) error {
	_ddegbg := []string{}
	if _cbadbf.ST_TextPointUnqualified != nil {
		_ddegbg = append(_ddegbg, "\u0053\u0054\u005fTe\u0078\u0074\u0050\u006f\u0069\u006e\u0074\u0055\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _cbadbf.ST_UniversalMeasure != nil {
		_ddegbg = append(_ddegbg, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_ddegbg) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ddegbg)
	}
	return nil
}

const (
	ST_TextCapsTypeUnset ST_TextCapsType = 0
	ST_TextCapsTypeNone  ST_TextCapsType = 1
	ST_TextCapsTypeSmall ST_TextCapsType = 2
	ST_TextCapsTypeAll   ST_TextCapsType = 3
)

type CT_AnimationChartBuildProperties struct {
	BldAttr    *ST_AnimationChartBuildType
	AnimBgAttr *bool
}

func (_feba *CT_GeomGuide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _feba.NameAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _bb.Sprintf("\u0025\u0076", _feba.FmlaAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ddegbd *CT_ThemeableLineStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ddegbd.Ln != nil {
		_aeeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_ddegbd.Ln, _aeeb)
	}
	if _ddegbd.LnRef != nil {
		_fcdd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
		e.EncodeElement(_ddegbd.LnRef, _fcdd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextAutonumberSchemeUnset                 ST_TextAutonumberScheme = 0
	ST_TextAutonumberSchemeAlphaLcParenBoth      ST_TextAutonumberScheme = 1
	ST_TextAutonumberSchemeAlphaUcParenBoth      ST_TextAutonumberScheme = 2
	ST_TextAutonumberSchemeAlphaLcParenR         ST_TextAutonumberScheme = 3
	ST_TextAutonumberSchemeAlphaUcParenR         ST_TextAutonumberScheme = 4
	ST_TextAutonumberSchemeAlphaLcPeriod         ST_TextAutonumberScheme = 5
	ST_TextAutonumberSchemeAlphaUcPeriod         ST_TextAutonumberScheme = 6
	ST_TextAutonumberSchemeArabicParenBoth       ST_TextAutonumberScheme = 7
	ST_TextAutonumberSchemeArabicParenR          ST_TextAutonumberScheme = 8
	ST_TextAutonumberSchemeArabicPeriod          ST_TextAutonumberScheme = 9
	ST_TextAutonumberSchemeArabicPlain           ST_TextAutonumberScheme = 10
	ST_TextAutonumberSchemeRomanLcParenBoth      ST_TextAutonumberScheme = 11
	ST_TextAutonumberSchemeRomanUcParenBoth      ST_TextAutonumberScheme = 12
	ST_TextAutonumberSchemeRomanLcParenR         ST_TextAutonumberScheme = 13
	ST_TextAutonumberSchemeRomanUcParenR         ST_TextAutonumberScheme = 14
	ST_TextAutonumberSchemeRomanLcPeriod         ST_TextAutonumberScheme = 15
	ST_TextAutonumberSchemeRomanUcPeriod         ST_TextAutonumberScheme = 16
	ST_TextAutonumberSchemeCircleNumDbPlain      ST_TextAutonumberScheme = 17
	ST_TextAutonumberSchemeCircleNumWdBlackPlain ST_TextAutonumberScheme = 18
	ST_TextAutonumberSchemeCircleNumWdWhitePlain ST_TextAutonumberScheme = 19
	ST_TextAutonumberSchemeArabicDbPeriod        ST_TextAutonumberScheme = 20
	ST_TextAutonumberSchemeArabicDbPlain         ST_TextAutonumberScheme = 21
	ST_TextAutonumberSchemeEa1ChsPeriod          ST_TextAutonumberScheme = 22
	ST_TextAutonumberSchemeEa1ChsPlain           ST_TextAutonumberScheme = 23
	ST_TextAutonumberSchemeEa1ChtPeriod          ST_TextAutonumberScheme = 24
	ST_TextAutonumberSchemeEa1ChtPlain           ST_TextAutonumberScheme = 25
	ST_TextAutonumberSchemeEa1JpnChsDbPeriod     ST_TextAutonumberScheme = 26
	ST_TextAutonumberSchemeEa1JpnKorPlain        ST_TextAutonumberScheme = 27
	ST_TextAutonumberSchemeEa1JpnKorPeriod       ST_TextAutonumberScheme = 28
	ST_TextAutonumberSchemeArabic1Minus          ST_TextAutonumberScheme = 29
	ST_TextAutonumberSchemeArabic2Minus          ST_TextAutonumberScheme = 30
	ST_TextAutonumberSchemeHebrew2Minus          ST_TextAutonumberScheme = 31
	ST_TextAutonumberSchemeThaiAlphaPeriod       ST_TextAutonumberScheme = 32
	ST_TextAutonumberSchemeThaiAlphaParenR       ST_TextAutonumberScheme = 33
	ST_TextAutonumberSchemeThaiAlphaParenBoth    ST_TextAutonumberScheme = 34
	ST_TextAutonumberSchemeThaiNumPeriod         ST_TextAutonumberScheme = 35
	ST_TextAutonumberSchemeThaiNumParenR         ST_TextAutonumberScheme = 36
	ST_TextAutonumberSchemeThaiNumParenBoth      ST_TextAutonumberScheme = 37
	ST_TextAutonumberSchemeHindiAlphaPeriod      ST_TextAutonumberScheme = 38
	ST_TextAutonumberSchemeHindiNumPeriod        ST_TextAutonumberScheme = 39
	ST_TextAutonumberSchemeHindiNumParenR        ST_TextAutonumberScheme = 40
	ST_TextAutonumberSchemeHindiAlpha1Period     ST_TextAutonumberScheme = 41
)

type CT_InverseGammaTransform struct{}

type CT_AnimationChartElement struct {
	SeriesIdxAttr   *int32
	CategoryIdxAttr *int32
	BldStepAttr     ST_ChartBuildStep
}

// ValidateWithPath validates the CT_LineJoinBevel and its children, prefixing error messages with path
func (_ccgfd *CT_LineJoinBevel) ValidateWithPath(path string) error { return nil }

func (_aggdd *CT_NonVisualGroupDrawingShapeProps) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ffgda:
	for {
		_gcfb, _cgae := d.Token()
		if _cgae != nil {
			return _cgae
		}
		switch _gebag := _gcfb.(type) {
		case _g.StartElement:
			switch _gebag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_aggdd.GrpSpLocks = NewCT_GroupLocking()
				if _bagdd := d.DecodeElement(_aggdd.GrpSpLocks, &_gebag); _bagdd != nil {
					return _bagdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aggdd.ExtLst = NewCT_OfficeArtExtensionList()
				if _abeb := d.DecodeElement(_aggdd.ExtLst, &_gebag); _abeb != nil {
					return _abeb
				}
			default:
				_fc.Log("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u006f\u0075\u0070\u0044\u0072\u0061\u0077\u0069\u006eg\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073\u0020%\u0076", _gebag.Name)
				if _cdbc := d.Skip(); _cdbc != nil {
					return _cdbc
				}
			}
		case _g.EndElement:
			break _ffgda
		case _g.CharData:
		}
	}
	return nil
}

type ST_RectAlignment byte

func (_dbdfgca ST_Percentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dbdfgca.ST_PercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_dbdfgca.ST_PercentageDecimal)))
	}
	if _dbdfgca.ST_Percentage != nil {
		e.EncodeToken(_g.CharData(*_dbdfgca.ST_Percentage))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// Validate validates the CT_GvmlGraphicalObjectFrame and its children
func (_bbca *CT_GvmlGraphicalObjectFrame) Validate() error {
	return _bbca.ValidateWithPath("C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065")
}

// Validate validates the CT_AlphaModulateFixedEffect and its children
func (_egbg *CT_AlphaModulateFixedEffect) Validate() error {
	return _egbg.ValidateWithPath("C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_Ratio and its children, prefixing error messages with path
func (_acfdd *CT_Ratio) ValidateWithPath(path string) error { return nil }

func (_cfd *CT_Angle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bca := range start.Attr {
		if _bca.Name.Local == "\u0076\u0061\u006c" {
			_cga, _ffb := _fg.ParseInt(_bca.Value, 10, 32)
			if _ffb != nil {
				return _ffb
			}
			_cfd.ValAttr = int32(_cga)
			continue
		}
	}
	for {
		_dadd, _cbc := d.Token()
		if _cbc != nil {
			return _bb.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u006e\u0067\u006c\u0065: \u0025\u0073", _cbc)
		}
		if _gcbg, _fdbc := _dadd.(_g.EndElement); _fdbc && _gcbg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_PresetShadowEffect() *CT_PresetShadowEffect {
	_cgfcc := &CT_PresetShadowEffect{}
	_cgfcc.PrstAttr = ST_PresetShadowVal(1)
	return _cgfcc
}

func (_fdgg *CT_EmbeddedWAVAudioFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dega := range start.Attr {
		if _dega.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dega.Name.Local == "\u0065\u006d\u0062e\u0064" || _dega.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dega.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_ddbaf, _agfb := _dega.Value, error(nil)
			if _agfb != nil {
				return _agfb
			}
			_fdgg.EmbedAttr = _ddbaf
			continue
		}
		if _dega.Name.Local == "\u006e\u0061\u006d\u0065" {
			_deac, _fgde := _dega.Value, error(nil)
			if _fgde != nil {
				return _fgde
			}
			_fdgg.NameAttr = &_deac
			continue
		}
	}
	for {
		_ffadf, _cecc := d.Token()
		if _cecc != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0057\u0041\u0056A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065\u003a\u0020%\u0073", _cecc)
		}
		if _eegcd, _bged := _ffadf.(_g.EndElement); _bged && _eegcd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualGroupDrawingShapeProps and its children, prefixing error messages with path
func (_cbadb *CT_NonVisualGroupDrawingShapeProps) ValidateWithPath(path string) error {
	if _cbadb.GrpSpLocks != nil {
		if _bdfeg := _cbadb.GrpSpLocks.ValidateWithPath(path + "/\u0047\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _bdfeg != nil {
			return _bdfeg
		}
	}
	if _cbadb.ExtLst != nil {
		if _bece := _cbadb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bece != nil {
			return _bece
		}
	}
	return nil
}

func (_fbeb *CT_FlatText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fbeb.ZAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_fbeb.ZAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_TextBulletColor struct {
	BuClrTx *CT_TextBulletColorFollowText
	BuClr   *CT_Color
}

type CT_GvmlGroupShapeNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvGrpSpPr *CT_NonVisualGroupDrawingShapeProps
}

// ValidateWithPath validates the CT_ConnectionSite and its children, prefixing error messages with path
func (_egdcb *CT_ConnectionSite) ValidateWithPath(path string) error {
	if _egfd := _egdcb.AngAttr.ValidateWithPath(path + "\u002f\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _egfd != nil {
		return _egfd
	}
	if _agfg := _egdcb.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _agfg != nil {
		return _agfg
	}
	return nil
}

type CT_SphereCoords struct {
	LatAttr int32
	LonAttr int32
	RevAttr int32
}

func (_ecdgc *ST_PitchFamily) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ecdgc = 0
	case "\u0030\u0030":
		*_ecdgc = 1
	case "\u0030\u0031":
		*_ecdgc = 2
	case "\u0030\u0032":
		*_ecdgc = 3
	case "\u0031\u0036":
		*_ecdgc = 4
	case "\u0031\u0037":
		*_ecdgc = 5
	case "\u0031\u0038":
		*_ecdgc = 6
	case "\u0033\u0032":
		*_ecdgc = 7
	case "\u0033\u0033":
		*_ecdgc = 8
	case "\u0033\u0034":
		*_ecdgc = 9
	case "\u0034\u0038":
		*_ecdgc = 10
	case "\u0034\u0039":
		*_ecdgc = 11
	case "\u0035\u0030":
		*_ecdgc = 12
	case "\u0036\u0034":
		*_ecdgc = 13
	case "\u0036\u0035":
		*_ecdgc = 14
	case "\u0036\u0036":
		*_ecdgc = 15
	case "\u0038\u0030":
		*_ecdgc = 16
	case "\u0038\u0031":
		*_ecdgc = 17
	case "\u0038\u0032":
		*_ecdgc = 18
	}
	return nil
}

type CT_LinearShadeProperties struct {
	AngAttr    *int32
	ScaledAttr *bool
}

func (_gdff *CT_GvmlGraphicalObjectFrame) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aaadc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_gdff.NvGraphicFramePr, _aaadc)
	_dcfeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_gdff.Graphic, _dcfeb)
	_eccfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_gdff.Xfrm, _eccfa)
	if _gdff.ExtLst != nil {
		_gbgg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdff.ExtLst, _gbgg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextBulletTypefaceFollowText and its children
func (_cfgfg *CT_TextBulletTypefaceFollowText) Validate() error {
	return _cfgfg.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

func NewCT_BiLevelEffect() *CT_BiLevelEffect { _fffa := &CT_BiLevelEffect{}; return _fffa }

// Validate validates the CT_FillEffect and its children
func (_caaae *CT_FillEffect) Validate() error {
	return _caaae.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

func NewEG_OfficeArtExtensionList() *EG_OfficeArtExtensionList {
	_feabb := &EG_OfficeArtExtensionList{}
	return _feabb
}

type CT_PresetColor struct {
	ValAttr           ST_PresetColorVal
	EG_ColorTransform []*EG_ColorTransform
}

func (_edabee *ST_LineEndLength) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_degeaa, _fbfgfe := d.Token()
	if _fbfgfe != nil {
		return _fbfgfe
	}
	if _cefge, _cgaec := _degeaa.(_g.EndElement); _cgaec && _cefge.Name == start.Name {
		*_edabee = 1
		return nil
	}
	if _edcbb, _bebeg := _degeaa.(_g.CharData); !_bebeg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _degeaa)
	} else {
		switch string(_edcbb) {
		case "":
			*_edabee = 0
		case "\u0073\u006d":
			*_edabee = 1
		case "\u006d\u0065\u0064":
			*_edabee = 2
		case "\u006c\u0067":
			*_edabee = 3
		}
	}
	_degeaa, _fbfgfe = d.Token()
	if _fbfgfe != nil {
		return _fbfgfe
	}
	if _efaec, _ecddd := _degeaa.(_g.EndElement); _ecddd && _efaec.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _degeaa)
}

// Validate validates the CT_EmbeddedWAVAudioFile and its children
func (_feeb *CT_EmbeddedWAVAudioFile) Validate() error {
	return _feeb.ValidateWithPath("\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}

// ValidateWithPath validates the VideoFile and its children, prefixing error messages with path
func (_befgd *VideoFile) ValidateWithPath(path string) error {
	if _bbeca := _befgd.CT_VideoFile.ValidateWithPath(path); _bbeca != nil {
		return _bbeca
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlTextShapeChoice and its children, prefixing error messages with path
func (_bfdaf *CT_GvmlTextShapeChoice) ValidateWithPath(path string) error {
	if _bfdaf.UseSpRect != nil {
		if _deced := _bfdaf.UseSpRect.ValidateWithPath(path + "\u002f\u0055\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"); _deced != nil {
			return _deced
		}
	}
	if _bfdaf.Xfrm != nil {
		if _effb := _bfdaf.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _effb != nil {
			return _effb
		}
	}
	return nil
}

// Validate validates the EG_TextBullet and its children
func (_abdg *EG_TextBullet) Validate() error {
	return _abdg.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074")
}

type ST_PresetColorVal byte

// ValidateWithPath validates the CT_NonVisualPictureProperties and its children, prefixing error messages with path
func (_febfg *CT_NonVisualPictureProperties) ValidateWithPath(path string) error {
	if _febfg.PicLocks != nil {
		if _bbgc := _febfg.PicLocks.ValidateWithPath(path + "\u002fP\u0069\u0063\u004c\u006f\u0063\u006bs"); _bbgc != nil {
			return _bbgc
		}
	}
	if _febfg.ExtLst != nil {
		if _dfdcc := _febfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfdcc != nil {
			return _dfdcc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextListStyle and its children, prefixing error messages with path
func (_gfeag *CT_TextListStyle) ValidateWithPath(path string) error {
	if _gfeag.DefPPr != nil {
		if _egeaa := _gfeag.DefPPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0050\u0050\u0072"); _egeaa != nil {
			return _egeaa
		}
	}
	if _gfeag.Lvl1pPr != nil {
		if _gagcg := _gfeag.Lvl1pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0031\u0070\u0050\u0072"); _gagcg != nil {
			return _gagcg
		}
	}
	if _gfeag.Lvl2pPr != nil {
		if _geadb := _gfeag.Lvl2pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0032\u0070\u0050\u0072"); _geadb != nil {
			return _geadb
		}
	}
	if _gfeag.Lvl3pPr != nil {
		if _eebeb := _gfeag.Lvl3pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0033\u0070\u0050\u0072"); _eebeb != nil {
			return _eebeb
		}
	}
	if _gfeag.Lvl4pPr != nil {
		if _dgbb := _gfeag.Lvl4pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0034\u0070\u0050\u0072"); _dgbb != nil {
			return _dgbb
		}
	}
	if _gfeag.Lvl5pPr != nil {
		if _gcfdb := _gfeag.Lvl5pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0035\u0070\u0050\u0072"); _gcfdb != nil {
			return _gcfdb
		}
	}
	if _gfeag.Lvl6pPr != nil {
		if _eaedfc := _gfeag.Lvl6pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0036\u0070\u0050\u0072"); _eaedfc != nil {
			return _eaedfc
		}
	}
	if _gfeag.Lvl7pPr != nil {
		if _gfdbab := _gfeag.Lvl7pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0037\u0070\u0050\u0072"); _gfdbab != nil {
			return _gfdbab
		}
	}
	if _gfeag.Lvl8pPr != nil {
		if _fbfc := _gfeag.Lvl8pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0038\u0070\u0050\u0072"); _fbfc != nil {
			return _fbfc
		}
	}
	if _gfeag.Lvl9pPr != nil {
		if _cgfgc := _gfeag.Lvl9pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0039\u0070\u0050\u0072"); _cgfgc != nil {
			return _cgfgc
		}
	}
	if _gfeag.ExtLst != nil {
		if _bgdga := _gfeag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgdga != nil {
			return _bgdga
		}
	}
	return nil
}

// Validate validates the CT_Path2DQuadBezierTo and its children
func (_gggac *CT_Path2DQuadBezierTo) Validate() error {
	return _gggac.ValidateWithPath("C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f")
}

func (_gbege *CT_Path2DLineTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_fgae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_gbege.Pt, _fgae)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Boolean() *CT_Boolean { _bedg := &CT_Boolean{}; return _bedg }

// Validate validates the CT_TextListStyle and its children
func (_eceba *CT_TextListStyle) Validate() error {
	return _eceba.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_ClipboardStyleSheet and its children
func (_ffgd *CT_ClipboardStyleSheet) Validate() error {
	return _ffgd.ValidateWithPath("\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074")
}

func (_daadd *CT_PresetColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_daadd.ValAttr = ST_PresetColorVal(1)
	for _, _ffagd := range start.Attr {
		if _ffagd.Name.Local == "\u0076\u0061\u006c" {
			_daadd.ValAttr.UnmarshalXMLAttr(_ffagd)
			continue
		}
	}
_cbcge:
	for {
		_eafbf, _facgf := d.Token()
		if _facgf != nil {
			return _facgf
		}
		switch _edeag := _eafbf.(type) {
		case _g.StartElement:
			switch _edeag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_bgcfb := NewEG_ColorTransform()
				_bgcfb.Tint = NewCT_PositiveFixedPercentage()
				if _efgccb := d.DecodeElement(_bgcfb.Tint, &_edeag); _efgccb != nil {
					return _efgccb
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _bgcfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_dgge := NewEG_ColorTransform()
				_dgge.Shade = NewCT_PositiveFixedPercentage()
				if _addcb := d.DecodeElement(_dgge.Shade, &_edeag); _addcb != nil {
					return _addcb
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _dgge)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_dafgd := NewEG_ColorTransform()
				_dafgd.Comp = NewCT_ComplementTransform()
				if _ccffb := d.DecodeElement(_dafgd.Comp, &_edeag); _ccffb != nil {
					return _ccffb
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _dafgd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_ggea := NewEG_ColorTransform()
				_ggea.Inv = NewCT_InverseTransform()
				if _ggdgf := d.DecodeElement(_ggea.Inv, &_edeag); _ggdgf != nil {
					return _ggdgf
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _ggea)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_cecde := NewEG_ColorTransform()
				_cecde.Gray = NewCT_GrayscaleTransform()
				if _fadf := d.DecodeElement(_cecde.Gray, &_edeag); _fadf != nil {
					return _fadf
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _cecde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_bcaec := NewEG_ColorTransform()
				_bcaec.Alpha = NewCT_PositiveFixedPercentage()
				if _dbbae := d.DecodeElement(_bcaec.Alpha, &_edeag); _dbbae != nil {
					return _dbbae
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _bcaec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_agbbc := NewEG_ColorTransform()
				_agbbc.AlphaOff = NewCT_FixedPercentage()
				if _cbfb := d.DecodeElement(_agbbc.AlphaOff, &_edeag); _cbfb != nil {
					return _cbfb
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _agbbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_cgbf := NewEG_ColorTransform()
				_cgbf.AlphaMod = NewCT_PositivePercentage()
				if _dfdga := d.DecodeElement(_cgbf.AlphaMod, &_edeag); _dfdga != nil {
					return _dfdga
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _cgbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_agddc := NewEG_ColorTransform()
				_agddc.Hue = NewCT_PositiveFixedAngle()
				if _bfege := d.DecodeElement(_agddc.Hue, &_edeag); _bfege != nil {
					return _bfege
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _agddc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_ceaba := NewEG_ColorTransform()
				_ceaba.HueOff = NewCT_Angle()
				if _cfacb := d.DecodeElement(_ceaba.HueOff, &_edeag); _cfacb != nil {
					return _cfacb
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _ceaba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_efec := NewEG_ColorTransform()
				_efec.HueMod = NewCT_PositivePercentage()
				if _cbfac := d.DecodeElement(_efec.HueMod, &_edeag); _cbfac != nil {
					return _cbfac
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _efec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_bced := NewEG_ColorTransform()
				_bced.Sat = NewCT_Percentage()
				if _aeacdc := d.DecodeElement(_bced.Sat, &_edeag); _aeacdc != nil {
					return _aeacdc
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _bced)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_ccaee := NewEG_ColorTransform()
				_ccaee.SatOff = NewCT_Percentage()
				if _bfbac := d.DecodeElement(_ccaee.SatOff, &_edeag); _bfbac != nil {
					return _bfbac
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _ccaee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_fbgbf := NewEG_ColorTransform()
				_fbgbf.SatMod = NewCT_Percentage()
				if _efccd := d.DecodeElement(_fbgbf.SatMod, &_edeag); _efccd != nil {
					return _efccd
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _fbgbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_dfedb := NewEG_ColorTransform()
				_dfedb.Lum = NewCT_Percentage()
				if _fcec := d.DecodeElement(_dfedb.Lum, &_edeag); _fcec != nil {
					return _fcec
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _dfedb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_bgbb := NewEG_ColorTransform()
				_bgbb.LumOff = NewCT_Percentage()
				if _egbga := d.DecodeElement(_bgbb.LumOff, &_edeag); _egbga != nil {
					return _egbga
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _bgbb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_dgbfb := NewEG_ColorTransform()
				_dgbfb.LumMod = NewCT_Percentage()
				if _gccba := d.DecodeElement(_dgbfb.LumMod, &_edeag); _gccba != nil {
					return _gccba
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _dgbfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_fdabe := NewEG_ColorTransform()
				_fdabe.Red = NewCT_Percentage()
				if _aadea := d.DecodeElement(_fdabe.Red, &_edeag); _aadea != nil {
					return _aadea
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _fdabe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_bbeff := NewEG_ColorTransform()
				_bbeff.RedOff = NewCT_Percentage()
				if _bgfcd := d.DecodeElement(_bbeff.RedOff, &_edeag); _bgfcd != nil {
					return _bgfcd
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _bbeff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_caafc := NewEG_ColorTransform()
				_caafc.RedMod = NewCT_Percentage()
				if _baab := d.DecodeElement(_caafc.RedMod, &_edeag); _baab != nil {
					return _baab
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _caafc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_gbab := NewEG_ColorTransform()
				_gbab.Green = NewCT_Percentage()
				if _bgdcd := d.DecodeElement(_gbab.Green, &_edeag); _bgdcd != nil {
					return _bgdcd
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _gbab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gbada := NewEG_ColorTransform()
				_gbada.GreenOff = NewCT_Percentage()
				if _eeggd := d.DecodeElement(_gbada.GreenOff, &_edeag); _eeggd != nil {
					return _eeggd
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _gbada)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_gdbeg := NewEG_ColorTransform()
				_gdbeg.GreenMod = NewCT_Percentage()
				if _eceag := d.DecodeElement(_gdbeg.GreenMod, &_edeag); _eceag != nil {
					return _eceag
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _gdbeg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_fcabc := NewEG_ColorTransform()
				_fcabc.Blue = NewCT_Percentage()
				if _feggc := d.DecodeElement(_fcabc.Blue, &_edeag); _feggc != nil {
					return _feggc
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _fcabc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_ddggd := NewEG_ColorTransform()
				_ddggd.BlueOff = NewCT_Percentage()
				if _dbddg := d.DecodeElement(_ddggd.BlueOff, &_edeag); _dbddg != nil {
					return _dbddg
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _ddggd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_abfad := NewEG_ColorTransform()
				_abfad.BlueMod = NewCT_Percentage()
				if _agfed := d.DecodeElement(_abfad.BlueMod, &_edeag); _agfed != nil {
					return _agfed
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _abfad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_gbbdc := NewEG_ColorTransform()
				_gbbdc.Gamma = NewCT_GammaTransform()
				if _fccfc := d.DecodeElement(_gbbdc.Gamma, &_edeag); _fccfc != nil {
					return _fccfc
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _gbbdc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_ggfbf := NewEG_ColorTransform()
				_ggfbf.InvGamma = NewCT_InverseGammaTransform()
				if _bfbed := d.DecodeElement(_ggfbf.InvGamma, &_edeag); _bfbed != nil {
					return _bfbed
				}
				_daadd.EG_ColorTransform = append(_daadd.EG_ColorTransform, _ggfbf)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0043o\u006co\u0072\u0020\u0025\u0076", _edeag.Name)
				if _bffg := d.Skip(); _bffg != nil {
					return _bffg
				}
			}
		case _g.EndElement:
			break _cbcge
		case _g.CharData:
		}
	}
	return nil
}

func (_cddba *VideoFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"
	return _cddba.CT_VideoFile.MarshalXML(e, start)
}

func (_cfebb *CT_NoFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Transform2D and its children
func (_gcfc *CT_Transform2D) Validate() error {
	return _gcfc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044")
}

func (_gcgb *CT_ColorMapping) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gcgb.Bg1Attr = ST_ColorSchemeIndex(1)
	_gcgb.Tx1Attr = ST_ColorSchemeIndex(1)
	_gcgb.Bg2Attr = ST_ColorSchemeIndex(1)
	_gcgb.Tx2Attr = ST_ColorSchemeIndex(1)
	_gcgb.Accent1Attr = ST_ColorSchemeIndex(1)
	_gcgb.Accent2Attr = ST_ColorSchemeIndex(1)
	_gcgb.Accent3Attr = ST_ColorSchemeIndex(1)
	_gcgb.Accent4Attr = ST_ColorSchemeIndex(1)
	_gcgb.Accent5Attr = ST_ColorSchemeIndex(1)
	_gcgb.Accent6Attr = ST_ColorSchemeIndex(1)
	_gcgb.HlinkAttr = ST_ColorSchemeIndex(1)
	_gcgb.FolHlinkAttr = ST_ColorSchemeIndex(1)
	for _, _bbc := range start.Attr {
		if _bbc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0033" {
			_gcgb.Accent3Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0074\u0078\u0031" {
			_gcgb.Tx1Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0062\u0067\u0032" {
			_gcgb.Bg2Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0074\u0078\u0032" {
			_gcgb.Tx2Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0031" {
			_gcgb.Accent1Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0032" {
			_gcgb.Accent2Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0062\u0067\u0031" {
			_gcgb.Bg1Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0034" {
			_gcgb.Accent4Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0035" {
			_gcgb.Accent5Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0036" {
			_gcgb.Accent6Attr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0068\u006c\u0069n\u006b" {
			_gcgb.HlinkAttr.UnmarshalXMLAttr(_bbc)
			continue
		}
		if _bbc.Name.Local == "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b" {
			_gcgb.FolHlinkAttr.UnmarshalXMLAttr(_bbc)
			continue
		}
	}
_cab:
	for {
		_dabg, _dbdd := d.Token()
		if _dbdd != nil {
			return _dbdd
		}
		switch _ccaf := _dabg.(type) {
		case _g.StartElement:
			switch _ccaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcgb.ExtLst = NewCT_OfficeArtExtensionList()
				if _cffc := d.DecodeElement(_gcgb.ExtLst, &_ccaf); _cffc != nil {
					return _cffc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006co\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u0020\u0025\u0076", _ccaf.Name)
				if _eaedf := d.Skip(); _eaedf != nil {
					return _eaedf
				}
			}
		case _g.EndElement:
			break _cab
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_FontReference() *CT_FontReference {
	_ddbaa := &CT_FontReference{}
	_ddbaa.IdxAttr = ST_FontCollectionIndex(1)
	return _ddbaa
}

// Validate validates the CT_GvmlPicture and its children
func (_gdbg *CT_GvmlPicture) Validate() error {
	return _gdbg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065")
}

// Validate validates the EG_EffectProperties and its children
func (_bbaea *EG_EffectProperties) Validate() error {
	return _bbaea.ValidateWithPath("\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_gffeg *CT_TextBodyProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ddcc := range start.Attr {
		if _ddcc.Name.Local == "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074" {
			_cgfdea, _efbgd := _fg.ParseBool(_ddcc.Value)
			if _efbgd != nil {
				return _efbgd
			}
			_gffeg.FromWordArtAttr = &_cgfdea
			continue
		}
		if _ddcc.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_gffeg.AnchorAttr.UnmarshalXMLAttr(_ddcc)
			continue
		}
		if _ddcc.Name.Local == "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061" {
			_aadcd, _dggga := _fg.ParseBool(_ddcc.Value)
			if _dggga != nil {
				return _dggga
			}
			_gffeg.SpcFirstLastParaAttr = &_aadcd
			continue
		}
		if _ddcc.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_acgeg, _bdbca := _fg.ParseBool(_ddcc.Value)
			if _bdbca != nil {
				return _bdbca
			}
			_gffeg.AnchorCtrAttr = &_acgeg
			continue
		}
		if _ddcc.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_gffeg.HorzOverflowAttr.UnmarshalXMLAttr(_ddcc)
			continue
		}
		if _ddcc.Name.Local == "\u0066o\u0072\u0063\u0065\u0041\u0041" {
			_fcdabf, _eccce := _fg.ParseBool(_ddcc.Value)
			if _eccce != nil {
				return _eccce
			}
			_gffeg.ForceAAAttr = &_fcdabf
			continue
		}
		if _ddcc.Name.Local == "\u0077\u0072\u0061\u0070" {
			_gffeg.WrapAttr.UnmarshalXMLAttr(_ddcc)
			continue
		}
		if _ddcc.Name.Local == "\u0075p\u0072\u0069\u0067\u0068\u0074" {
			_egfc, _bdfeb := _fg.ParseBool(_ddcc.Value)
			if _bdfeb != nil {
				return _bdfeb
			}
			_gffeg.UprightAttr = &_egfc
			continue
		}
		if _ddcc.Name.Local == "\u0074\u0049\u006e\u0073" {
			_dcdg, _efafc := ParseUnionST_Coordinate32(_ddcc.Value)
			if _efafc != nil {
				return _efafc
			}
			_gffeg.TInsAttr = &_dcdg
			continue
		}
		if _ddcc.Name.Local == "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063" {
			_fcbfe, _geceb := _fg.ParseBool(_ddcc.Value)
			if _geceb != nil {
				return _geceb
			}
			_gffeg.CompatLnSpcAttr = &_fcbfe
			continue
		}
		if _ddcc.Name.Local == "\u0062\u0049\u006e\u0073" {
			_affeda, _gdfgd := ParseUnionST_Coordinate32(_ddcc.Value)
			if _gdfgd != nil {
				return _gdfgd
			}
			_gffeg.BInsAttr = &_affeda
			continue
		}
		if _ddcc.Name.Local == "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_gffeg.VertOverflowAttr.UnmarshalXMLAttr(_ddcc)
			continue
		}
		if _ddcc.Name.Local == "\u0072\u006f\u0074" {
			_fadda, _bdgcaa := _fg.ParseInt(_ddcc.Value, 10, 32)
			if _bdgcaa != nil {
				return _bdgcaa
			}
			_abfgb := int32(_fadda)
			_gffeg.RotAttr = &_abfgb
			continue
		}
		if _ddcc.Name.Local == "\u0073\u0070\u0063\u0043\u006f\u006c" {
			_fbfad, _ecaed := _fg.ParseInt(_ddcc.Value, 10, 32)
			if _ecaed != nil {
				return _ecaed
			}
			_bdadb := int32(_fbfad)
			_gffeg.SpcColAttr = &_bdadb
			continue
		}
		if _ddcc.Name.Local == "\u0076\u0065\u0072\u0074" {
			_gffeg.VertAttr.UnmarshalXMLAttr(_ddcc)
			continue
		}
		if _ddcc.Name.Local == "\u0072\u0049\u006e\u0073" {
			_baedf, _cdbdef := ParseUnionST_Coordinate32(_ddcc.Value)
			if _cdbdef != nil {
				return _cdbdef
			}
			_gffeg.RInsAttr = &_baedf
			continue
		}
		if _ddcc.Name.Local == "\u006e\u0075\u006d\u0043\u006f\u006c" {
			_cfdfa, _fegbf := _fg.ParseInt(_ddcc.Value, 10, 32)
			if _fegbf != nil {
				return _fegbf
			}
			_acbgd := int32(_cfdfa)
			_gffeg.NumColAttr = &_acbgd
			continue
		}
		if _ddcc.Name.Local == "\u0072\u0074\u006c\u0043\u006f\u006c" {
			_dafbg, _acdea := _fg.ParseBool(_ddcc.Value)
			if _acdea != nil {
				return _acdea
			}
			_gffeg.RtlColAttr = &_dafbg
			continue
		}
		if _ddcc.Name.Local == "\u006c\u0049\u006e\u0073" {
			_afdef, _dfagaf := ParseUnionST_Coordinate32(_ddcc.Value)
			if _dfagaf != nil {
				return _dfagaf
			}
			_gffeg.LInsAttr = &_afdef
			continue
		}
	}
_acbb:
	for {
		_bbccec, _dgcff := d.Token()
		if _dgcff != nil {
			return _dgcff
		}
		switch _ceecg := _bbccec.(type) {
		case _g.StartElement:
			switch _ceecg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_gffeg.PrstTxWarp = NewCT_PresetTextShape()
				if _ecgef := d.DecodeElement(_gffeg.PrstTxWarp, &_ceecg); _ecgef != nil {
					return _ecgef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_gffeg.NoAutofit = NewCT_TextNoAutofit()
				if _fcggg := d.DecodeElement(_gffeg.NoAutofit, &_ceecg); _fcggg != nil {
					return _fcggg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_gffeg.NormAutofit = NewCT_TextNormalAutofit()
				if _cabdg := d.DecodeElement(_gffeg.NormAutofit, &_ceecg); _cabdg != nil {
					return _cabdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_gffeg.SpAutoFit = NewCT_TextShapeAutofit()
				if _cdfda := d.DecodeElement(_gffeg.SpAutoFit, &_ceecg); _cdfda != nil {
					return _cdfda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_gffeg.Scene3d = NewCT_Scene3D()
				if _bdgbf := d.DecodeElement(_gffeg.Scene3d, &_ceecg); _bdgbf != nil {
					return _bdgbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_gffeg.Sp3d = NewCT_Shape3D()
				if _badfe := d.DecodeElement(_gffeg.Sp3d, &_ceecg); _badfe != nil {
					return _badfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_gffeg.FlatTx = NewCT_FlatText()
				if _fdbcbf := d.DecodeElement(_gffeg.FlatTx, &_ceecg); _fdbcbf != nil {
					return _fdbcbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gffeg.ExtLst = NewCT_OfficeArtExtensionList()
				if _fbccb := d.DecodeElement(_gffeg.ExtLst, &_ceecg); _fbccb != nil {
					return _fbccb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ceecg.Name)
				if _feffe := d.Skip(); _feffe != nil {
					return _feffe
				}
			}
		case _g.EndElement:
			break _acbb
		case _g.CharData:
		}
	}
	return nil
}

func (_ffdfbb ST_SchemeColorVal) ValidateWithPath(path string) error {
	switch _ffdfbb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffdfbb))
	}
	return nil
}

// ST_Coordinate is a union type
type ST_Coordinate struct {
	ST_CoordinateUnqualified *int64
	ST_UniversalMeasure      *string
}

func NewCT_OfficeArtExtensionList() *CT_OfficeArtExtensionList {
	_bbaf := &CT_OfficeArtExtensionList{}
	return _bbaf
}

func (_abcg ST_TextAutonumberScheme) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cffcb := _g.Attr{}
	_cffcb.Name = name
	switch _abcg {
	case ST_TextAutonumberSchemeUnset:
		_cffcb.Value = ""
	case ST_TextAutonumberSchemeAlphaLcParenBoth:
		_cffcb.Value = "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaUcParenBoth:
		_cffcb.Value = "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaLcParenR:
		_cffcb.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaUcParenR:
		_cffcb.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaLcPeriod:
		_cffcb.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeAlphaUcPeriod:
		_cffcb.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicParenBoth:
		_cffcb.Value = "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeArabicParenR:
		_cffcb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeArabicPeriod:
		_cffcb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicPlain:
		_cffcb.Value = "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeRomanLcParenBoth:
		_cffcb.Value = "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanUcParenBoth:
		_cffcb.Value = "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanLcParenR:
		_cffcb.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanUcParenR:
		_cffcb.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanLcPeriod:
		_cffcb.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeRomanUcPeriod:
		_cffcb.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeCircleNumDbPlain:
		_cffcb.Value = "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdBlackPlain:
		_cffcb.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdWhitePlain:
		_cffcb.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeArabicDbPeriod:
		_cffcb.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicDbPlain:
		_cffcb.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChsPeriod:
		_cffcb.Value = "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChsPlain:
		_cffcb.Value = "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChtPeriod:
		_cffcb.Value = "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChtPlain:
		_cffcb.Value = "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnChsDbPeriod:
		_cffcb.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1JpnKorPlain:
		_cffcb.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnKorPeriod:
		_cffcb.Value = "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabic1Minus:
		_cffcb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeArabic2Minus:
		_cffcb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeHebrew2Minus:
		_cffcb.Value = "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeThaiAlphaPeriod:
		_cffcb.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiAlphaParenR:
		_cffcb.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiAlphaParenBoth:
		_cffcb.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeThaiNumPeriod:
		_cffcb.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiNumParenR:
		_cffcb.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiNumParenBoth:
		_cffcb.Value = "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeHindiAlphaPeriod:
		_cffcb.Value = "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumPeriod:
		_cffcb.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumParenR:
		_cffcb.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeHindiAlpha1Period:
		_cffcb.Value = "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return _cffcb, nil
}

const (
	ST_AnimationChartOnlyBuildTypeUnset      ST_AnimationChartOnlyBuildType = 0
	ST_AnimationChartOnlyBuildTypeSeries     ST_AnimationChartOnlyBuildType = 1
	ST_AnimationChartOnlyBuildTypeCategory   ST_AnimationChartOnlyBuildType = 2
	ST_AnimationChartOnlyBuildTypeSeriesEl   ST_AnimationChartOnlyBuildType = 3
	ST_AnimationChartOnlyBuildTypeCategoryEl ST_AnimationChartOnlyBuildType = 4
)

func (_fdaead ST_PresetCameraType) Validate() error { return _fdaead.ValidateWithPath("") }

func (_cdeae *CT_Path2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ebaca := range start.Attr {
		if _ebaca.Name.Local == "\u0077" {
			_dcgcc, _ddeac := _fg.ParseInt(_ebaca.Value, 10, 64)
			if _ddeac != nil {
				return _ddeac
			}
			_cdeae.WAttr = &_dcgcc
			continue
		}
		if _ebaca.Name.Local == "\u0068" {
			_bbabe, _ebedge := _fg.ParseInt(_ebaca.Value, 10, 64)
			if _ebedge != nil {
				return _ebedge
			}
			_cdeae.HAttr = &_bbabe
			continue
		}
		if _ebaca.Name.Local == "\u0066\u0069\u006c\u006c" {
			_cdeae.FillAttr.UnmarshalXMLAttr(_ebaca)
			continue
		}
		if _ebaca.Name.Local == "\u0073\u0074\u0072\u006f\u006b\u0065" {
			_gaabg, _bffdf := _fg.ParseBool(_ebaca.Value)
			if _bffdf != nil {
				return _bffdf
			}
			_cdeae.StrokeAttr = &_gaabg
			continue
		}
		if _ebaca.Name.Local == "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b" {
			_daaba, _adcbf := _fg.ParseBool(_ebaca.Value)
			if _adcbf != nil {
				return _adcbf
			}
			_cdeae.ExtrusionOkAttr = &_daaba
			continue
		}
	}
_fbbd:
	for {
		_adaf, _dbcga := d.Token()
		if _dbcga != nil {
			return _dbcga
		}
		switch _aacad := _adaf.(type) {
		case _g.StartElement:
			switch _aacad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}:
				_bgeee := NewCT_Path2DClose()
				if _gfge := d.DecodeElement(_bgeee, &_aacad); _gfge != nil {
					return _gfge
				}
				_cdeae.Close = append(_cdeae.Close, _bgeee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}:
				_gaafe := NewCT_Path2DMoveTo()
				if _cgbef := d.DecodeElement(_gaafe, &_aacad); _cgbef != nil {
					return _cgbef
				}
				_cdeae.MoveTo = append(_cdeae.MoveTo, _gaafe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}:
				_acfeg := NewCT_Path2DLineTo()
				if _afdea := d.DecodeElement(_acfeg, &_aacad); _afdea != nil {
					return _afdea
				}
				_cdeae.LnTo = append(_cdeae.LnTo, _acfeg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}:
				_fdca := NewCT_Path2DArcTo()
				if _adbca := d.DecodeElement(_fdca, &_aacad); _adbca != nil {
					return _adbca
				}
				_cdeae.ArcTo = append(_cdeae.ArcTo, _fdca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}:
				_cacc := NewCT_Path2DQuadBezierTo()
				if _gcbdg := d.DecodeElement(_cacc, &_aacad); _gcbdg != nil {
					return _gcbdg
				}
				_cdeae.QuadBezTo = append(_cdeae.QuadBezTo, _cacc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}:
				_cadge := NewCT_Path2DCubicBezierTo()
				if _fgaca := d.DecodeElement(_cadge, &_aacad); _fgaca != nil {
					return _fgaca
				}
				_cdeae.CubicBezTo = append(_cdeae.CubicBezTo, _cadge)
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044 \u0025\u0076", _aacad.Name)
				if _eeceg := d.Skip(); _eeceg != nil {
					return _eeceg
				}
			}
		case _g.EndElement:
			break _fbbd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_XYAdjustHandle and its children, prefixing error messages with path
func (_dfcag *CT_XYAdjustHandle) ValidateWithPath(path string) error {
	if _dfcag.MinXAttr != nil {
		if _fedfc := _dfcag.MinXAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0058\u0041\u0074\u0074r"); _fedfc != nil {
			return _fedfc
		}
	}
	if _dfcag.MaxXAttr != nil {
		if _egaag := _dfcag.MaxXAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0058\u0041\u0074\u0074r"); _egaag != nil {
			return _egaag
		}
	}
	if _dfcag.MinYAttr != nil {
		if _daebe := _dfcag.MinYAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0059\u0041\u0074\u0074r"); _daebe != nil {
			return _daebe
		}
	}
	if _dfcag.MaxYAttr != nil {
		if _eefaa := _dfcag.MaxYAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0059\u0041\u0074\u0074r"); _eefaa != nil {
			return _eefaa
		}
	}
	if _adbeb := _dfcag.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _adbeb != nil {
		return _adbeb
	}
	return nil
}

// Validate validates the CT_OfficeStyleSheet and its children
func (_cfaa *CT_OfficeStyleSheet) Validate() error {
	return _cfaa.ValidateWithPath("\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_Path2DCubicBezierTo and its children, prefixing error messages with path
func (_abfgc *CT_Path2DCubicBezierTo) ValidateWithPath(path string) error {
	for _daced, _accde := range _abfgc.Pt {
		if _faaaf := _accde.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _daced)); _faaaf != nil {
			return _faaaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextLineBreak and its children, prefixing error messages with path
func (_efdad *CT_TextLineBreak) ValidateWithPath(path string) error {
	if _efdad.RPr != nil {
		if _edcga := _efdad.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _edcga != nil {
			return _edcga
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ShapeProperties and its children, prefixing error messages with path
func (_bcdeb *CT_ShapeProperties) ValidateWithPath(path string) error {
	if _badgcg := _bcdeb.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _badgcg != nil {
		return _badgcg
	}
	if _bcdeb.Xfrm != nil {
		if _dcdcf := _bcdeb.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _dcdcf != nil {
			return _dcdcf
		}
	}
	if _bcdeb.CustGeom != nil {
		if _daceda := _bcdeb.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _daceda != nil {
			return _daceda
		}
	}
	if _bcdeb.PrstGeom != nil {
		if _efddb := _bcdeb.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _efddb != nil {
			return _efddb
		}
	}
	if _bcdeb.NoFill != nil {
		if _fbcfb := _bcdeb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _fbcfb != nil {
			return _fbcfb
		}
	}
	if _bcdeb.SolidFill != nil {
		if _afeag := _bcdeb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _afeag != nil {
			return _afeag
		}
	}
	if _bcdeb.GradFill != nil {
		if _geee := _bcdeb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _geee != nil {
			return _geee
		}
	}
	if _bcdeb.BlipFill != nil {
		if _geefcd := _bcdeb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _geefcd != nil {
			return _geefcd
		}
	}
	if _bcdeb.PattFill != nil {
		if _cfad := _bcdeb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cfad != nil {
			return _cfad
		}
	}
	if _bcdeb.GrpFill != nil {
		if _ddagcf := _bcdeb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _ddagcf != nil {
			return _ddagcf
		}
	}
	if _bcdeb.Ln != nil {
		if _dgfgg := _bcdeb.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _dgfgg != nil {
			return _dgfgg
		}
	}
	if _bcdeb.EffectLst != nil {
		if _eecgc := _bcdeb.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _eecgc != nil {
			return _eecgc
		}
	}
	if _bcdeb.EffectDag != nil {
		if _beefb := _bcdeb.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _beefb != nil {
			return _beefb
		}
	}
	if _bcdeb.Scene3d != nil {
		if _fdgad := _bcdeb.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _fdgad != nil {
			return _fdgad
		}
	}
	if _bcdeb.Sp3d != nil {
		if _bgbce := _bcdeb.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _bgbce != nil {
			return _bgbce
		}
	}
	if _bcdeb.ExtLst != nil {
		if _dadde := _bcdeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dadde != nil {
			return _dadde
		}
	}
	return nil
}

func (_ffcd *CT_AnimationChartBuildProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ega := range start.Attr {
		if _ega.Name.Local == "\u0062\u006c\u0064" {
			_dcdb, _eda := ParseUnionST_AnimationChartBuildType(_ega.Value)
			if _eda != nil {
				return _eda
			}
			_ffcd.BldAttr = &_dcdb
			continue
		}
		if _ega.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_gcee, _afc := _fg.ParseBool(_ega.Value)
			if _afc != nil {
				return _afc
			}
			_ffcd.AnimBgAttr = &_gcee
			continue
		}
	}
	for {
		_geg, _bbgf := d.Token()
		if _bbgf != nil {
			return _bb.Errorf("\u0070a\u0072\u0073i\u006e\u0067\u0020\u0043T\u005f\u0041\u006ei\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061rt\u0042\u0075\u0069l\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069e\u0073\u003a \u0025\u0073", _bbgf)
		}
		if _aga, _gcf := _geg.(_g.EndElement); _gcf && _aga.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfcdd *CT_TableGrid) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dfcdd.GridCol != nil {
		_ffdab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0069\u0064\u0043\u006fl"}}
		for _, _aceg := range _dfcdd.GridCol {
			e.EncodeElement(_aceg, _ffdab)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_geaag *EG_ThemeableFontStyles) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fcdg:
	for {
		_caaag, _dbbgg := d.Token()
		if _dbbgg != nil {
			return _dbbgg
		}
		switch _beggg := _caaag.(type) {
		case _g.StartElement:
			switch _beggg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_geaag.Font = NewCT_FontCollection()
				if _fgegbd := d.DecodeElement(_geaag.Font, &_beggg); _fgegbd != nil {
					return _fgegbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_geaag.FontRef = NewCT_FontReference()
				if _gfaccb := d.DecodeElement(_geaag.FontRef, &_beggg); _gfaccb != nil {
					return _gfaccb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u0054\u0068\u0065\u006de\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006c\u0065\u0073\u0020\u0025\u0076", _beggg.Name)
				if _ecbag := d.Skip(); _ecbag != nil {
					return _ecbag
				}
			}
		case _g.EndElement:
			break _fcdg
		case _g.CharData:
		}
	}
	return nil
}

type CT_BackgroundFormatting struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_aagaf *ST_ColorSchemeIndex) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fcafd, _fggge := d.Token()
	if _fggge != nil {
		return _fggge
	}
	if _eegga, _dgbe := _fcafd.(_g.EndElement); _dgbe && _eegga.Name == start.Name {
		*_aagaf = 1
		return nil
	}
	if _gbcca, _fcffg := _fcafd.(_g.CharData); !_fcffg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcafd)
	} else {
		switch string(_gbcca) {
		case "":
			*_aagaf = 0
		case "\u0064\u006b\u0031":
			*_aagaf = 1
		case "\u006c\u0074\u0031":
			*_aagaf = 2
		case "\u0064\u006b\u0032":
			*_aagaf = 3
		case "\u006c\u0074\u0032":
			*_aagaf = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_aagaf = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_aagaf = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_aagaf = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_aagaf = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_aagaf = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_aagaf = 10
		case "\u0068\u006c\u0069n\u006b":
			*_aagaf = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_aagaf = 12
		}
	}
	_fcafd, _fggge = d.Token()
	if _fggge != nil {
		return _fggge
	}
	if _feabe, _geddg := _fcafd.(_g.EndElement); _geddg && _feabe.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcafd)
}

func NewEG_LineDashProperties() *EG_LineDashProperties {
	_ffdgge := &EG_LineDashProperties{}
	return _ffdgge
}

func (_cccag *CT_PositiveSize2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _cccag.CxAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _cccag.CyAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dgdae *Tbl) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgdae.CT_Table = *NewCT_Table()
_cfeec:
	for {
		_gfbag, _fdcag := d.Token()
		if _fdcag != nil {
			return _fdcag
		}
		switch _dafdb := _gfbag.(type) {
		case _g.StartElement:
			switch _dafdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_dgdae.TblPr = NewCT_TableProperties()
				if _dedfe := d.DecodeElement(_dgdae.TblPr, &_dafdb); _dedfe != nil {
					return _dedfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _eaacff := d.DecodeElement(_dgdae.TblGrid, &_dafdb); _eaacff != nil {
					return _eaacff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_fddfb := NewCT_TableRow()
				if _edcdg := d.DecodeElement(_fddfb, &_dafdb); _edcdg != nil {
					return _edcdg
				}
				_dgdae.Tr = append(_dgdae.Tr, _fddfb)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0054b\u006c\u0020\u0025\u0076", _dafdb.Name)
				if _fdgee := d.Skip(); _fdgee != nil {
					return _fdgee
				}
			}
		case _g.EndElement:
			break _cfeec
		case _g.CharData:
		}
	}
	return nil
}

func (_bgebb *ST_PresetCameraType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bgebb = 0
	case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
		*_bgebb = 1
	case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_bgebb = 2
	case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
		*_bgebb = 3
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
		*_bgebb = 4
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
		*_bgebb = 5
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
		*_bgebb = 6
	case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_bgebb = 7
	case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bgebb = 8
	case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_bgebb = 9
	case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
		*_bgebb = 10
	case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
		*_bgebb = 11
	case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
		*_bgebb = 12
	case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
		*_bgebb = 13
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
		*_bgebb = 14
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
		*_bgebb = 15
	case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
		*_bgebb = 16
	case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bgebb = 17
	case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
		*_bgebb = 18
	case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
		*_bgebb = 19
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
		*_bgebb = 20
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
		*_bgebb = 21
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
		*_bgebb = 22
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
		*_bgebb = 23
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
		*_bgebb = 24
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
		*_bgebb = 25
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
		*_bgebb = 26
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
		*_bgebb = 27
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
		*_bgebb = 28
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
		*_bgebb = 29
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
		*_bgebb = 30
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
		*_bgebb = 31
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
		*_bgebb = 32
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
		*_bgebb = 33
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
		*_bgebb = 34
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
		*_bgebb = 35
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bgebb = 36
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
		*_bgebb = 37
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
		*_bgebb = 38
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bgebb = 39
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
		*_bgebb = 40
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_bgebb = 41
	case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_bgebb = 42
	case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
		*_bgebb = 43
	case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
		*_bgebb = 44
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
		*_bgebb = 45
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bgebb = 46
	case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
		*_bgebb = 47
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
		*_bgebb = 48
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
		*_bgebb = 49
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
		*_bgebb = 50
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
		*_bgebb = 51
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
		*_bgebb = 52
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
		*_bgebb = 53
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
		*_bgebb = 54
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_bgebb = 55
	case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
		*_bgebb = 56
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
		*_bgebb = 57
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
		*_bgebb = 58
	case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_bgebb = 59
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
		*_bgebb = 60
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
		*_bgebb = 61
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
		*_bgebb = 62
	}
	return nil
}

// Validate validates the CT_TextUnderlineLineFollowText and its children
func (_gggcc *CT_TextUnderlineLineFollowText) Validate() error {
	return _gggcc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

func (_dbfbb ST_TextShapeType) String() string {
	switch _dbfbb {
	case 0:
		return ""
	case 1:
		return "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case 2:
		return "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case 4:
		return "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case 6:
		return "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case 7:
		return "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case 8:
		return "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case 9:
		return "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case 10:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case 11:
		return "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case 12:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case 13:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case 14:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case 15:
		return "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case 16:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case 17:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case 18:
		return "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case 19:
		return "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case 20:
		return "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case 21:
		return "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case 23:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case 24:
		return "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case 25:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case 26:
		return "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case 27:
		return "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case 28:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 29:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 30:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 31:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 32:
		return "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case 33:
		return "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case 34:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case 35:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case 36:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case 37:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case 38:
		return "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case 39:
		return "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case 40:
		return "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case 41:
		return "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return ""
}

func NewCT_Angle() *CT_Angle { _dbf := &CT_Angle{}; return _dbf }

// Validate validates the EG_TextAutofit and its children
func (_cdfdb *EG_TextAutofit) Validate() error {
	return _cdfdb.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074")
}

func (_fdaff *CT_SupplementalFont) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bbggd := range start.Attr {
		if _bbggd.Name.Local == "\u0073\u0063\u0072\u0069\u0070\u0074" {
			_gafga, _fdgcb := _bbggd.Value, error(nil)
			if _fdgcb != nil {
				return _fdgcb
			}
			_fdaff.ScriptAttr = _gafga
			continue
		}
		if _bbggd.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_edaa, _addac := _bbggd.Value, error(nil)
			if _addac != nil {
				return _addac
			}
			_fdaff.TypefaceAttr = _edaa
			continue
		}
	}
	for {
		_dfeef, _cddda := d.Token()
		if _cddda != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0053\u0075\u0070\u0070\u006ce\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _cddda)
		}
		if _cecea, _abecbf := _dfeef.(_g.EndElement); _abecbf && _cecea.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Vector3D and its children
func (_gaagdf *CT_Vector3D) Validate() error {
	return _gaagdf.ValidateWithPath("C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044")
}

// Validate validates the CT_Scale2D and its children
func (_cefab *CT_Scale2D) Validate() error {
	return _cefab.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044")
}

// ValidateWithPath validates the CT_TextBulletSizePercent and its children, prefixing error messages with path
func (_egfb *CT_TextBulletSizePercent) ValidateWithPath(path string) error {
	if !ST_TextBulletSizePercentPatternRe.MatchString(_egfb.ValAttr) {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, ST_TextBulletSizePercentPatternRe, _egfb.ValAttr)
	}
	return nil
}

// Validate validates the CT_EffectProperties and its children
func (_eaaf *CT_EffectProperties) Validate() error {
	return _eaaf.ValidateWithPath("\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewCT_TableStyleTextStyle() *CT_TableStyleTextStyle {
	_ffcgc := &CT_TableStyleTextStyle{}
	return _ffcgc
}

func NewCT_InverseGammaTransform() *CT_InverseGammaTransform {
	_cbge := &CT_InverseGammaTransform{}
	return _cbge
}

func NewEG_ThemeableFontStyles() *EG_ThemeableFontStyles {
	_fdebce := &EG_ThemeableFontStyles{}
	return _fdebce
}

// Validate validates the CT_Camera and its children
func (_gebb *CT_Camera) Validate() error {
	return _gebb.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a")
}

func NewCT_Path2DArcTo() *CT_Path2DArcTo { _aaff := &CT_Path2DArcTo{}; return _aaff }

func NewCT_ColorMapping() *CT_ColorMapping {
	_cacad := &CT_ColorMapping{}
	_cacad.Bg1Attr = ST_ColorSchemeIndex(1)
	_cacad.Tx1Attr = ST_ColorSchemeIndex(1)
	_cacad.Bg2Attr = ST_ColorSchemeIndex(1)
	_cacad.Tx2Attr = ST_ColorSchemeIndex(1)
	_cacad.Accent1Attr = ST_ColorSchemeIndex(1)
	_cacad.Accent2Attr = ST_ColorSchemeIndex(1)
	_cacad.Accent3Attr = ST_ColorSchemeIndex(1)
	_cacad.Accent4Attr = ST_ColorSchemeIndex(1)
	_cacad.Accent5Attr = ST_ColorSchemeIndex(1)
	_cacad.Accent6Attr = ST_ColorSchemeIndex(1)
	_cacad.HlinkAttr = ST_ColorSchemeIndex(1)
	_cacad.FolHlinkAttr = ST_ColorSchemeIndex(1)
	return _cacad
}

// Validate validates the CT_GraphicalObject and its children
func (_adcb *CT_GraphicalObject) Validate() error {
	return _adcb.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074")
}

func (_edgeb *CT_ShapeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _edgeb.BwModeAttr != ST_BlackWhiteModeUnset {
		_fcffbd, _cdef := _edgeb.BwModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _cdef != nil {
			return _cdef
		}
		start.Attr = append(start.Attr, _fcffbd)
	}
	e.EncodeToken(start)
	if _edgeb.Xfrm != nil {
		_gaagdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_edgeb.Xfrm, _gaagdb)
	}
	if _edgeb.CustGeom != nil {
		_aacccg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_edgeb.CustGeom, _aacccg)
	}
	if _edgeb.PrstGeom != nil {
		_cdfef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_edgeb.PrstGeom, _cdfef)
	}
	if _edgeb.NoFill != nil {
		_gddda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgeb.NoFill, _gddda)
	}
	if _edgeb.SolidFill != nil {
		_efgfb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgeb.SolidFill, _efgfb)
	}
	if _edgeb.GradFill != nil {
		_cfgea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgeb.GradFill, _cfgea)
	}
	if _edgeb.BlipFill != nil {
		_bgffb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgeb.BlipFill, _bgffb)
	}
	if _edgeb.PattFill != nil {
		_dadfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgeb.PattFill, _dadfc)
	}
	if _edgeb.GrpFill != nil {
		_gggdb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_edgeb.GrpFill, _gggdb)
	}
	if _edgeb.Ln != nil {
		_dgcdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_edgeb.Ln, _dgcdf)
	}
	if _edgeb.EffectLst != nil {
		_gebe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_edgeb.EffectLst, _gebe)
	}
	if _edgeb.EffectDag != nil {
		_dcbec := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_edgeb.EffectDag, _dcbec)
	}
	if _edgeb.Scene3d != nil {
		_ddgbd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_edgeb.Scene3d, _ddgbd)
	}
	if _edgeb.Sp3d != nil {
		_efaaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_edgeb.Sp3d, _efaaf)
	}
	if _edgeb.ExtLst != nil {
		_fcabcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_edgeb.ExtLst, _fcabcd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ShapeStyle and its children, prefixing error messages with path
func (_dddae *CT_ShapeStyle) ValidateWithPath(path string) error {
	if _gfdbae := _dddae.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _gfdbae != nil {
		return _gfdbae
	}
	if _dggdc := _dddae.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _dggdc != nil {
		return _dggdc
	}
	if _ddfcd := _dddae.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _ddfcd != nil {
		return _ddfcd
	}
	if _ffabf := _dddae.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _ffabf != nil {
		return _ffabf
	}
	return nil
}

type CT_GvmlGraphicalObjectFrame struct {
	NvGraphicFramePr *CT_GvmlGraphicFrameNonVisual
	Graphic          *Graphic
	Xfrm             *CT_Transform2D
	ExtLst           *CT_OfficeArtExtensionList
}

type CT_RelativeRect struct {
	LAttr *ST_Percentage
	TAttr *ST_Percentage
	RAttr *ST_Percentage
	BAttr *ST_Percentage
}

type ST_TextFontAlignType byte

// Validate validates the CT_ComplementTransform and its children
func (_ffbg *CT_ComplementTransform) Validate() error {
	return _ffbg.ValidateWithPath("\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d")
}

func (_eebca *CT_GroupTransform2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dcaege := range start.Attr {
		if _dcaege.Name.Local == "\u0072\u006f\u0074" {
			_bdcfe, _cbbab := _fg.ParseInt(_dcaege.Value, 10, 32)
			if _cbbab != nil {
				return _cbbab
			}
			_fbcg := int32(_bdcfe)
			_eebca.RotAttr = &_fbcg
			continue
		}
		if _dcaege.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_gabg, _bdgca := _fg.ParseBool(_dcaege.Value)
			if _bdgca != nil {
				return _bdgca
			}
			_eebca.FlipHAttr = &_gabg
			continue
		}
		if _dcaege.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_bcfbg, _gade := _fg.ParseBool(_dcaege.Value)
			if _gade != nil {
				return _gade
			}
			_eebca.FlipVAttr = &_bcfbg
			continue
		}
	}
_eddcd:
	for {
		_dfdeg, _dbea := d.Token()
		if _dbea != nil {
			return _dbea
		}
		switch _ecbcff := _dfdeg.(type) {
		case _g.StartElement:
			switch _ecbcff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_eebca.Off = NewCT_Point2D()
				if _eged := d.DecodeElement(_eebca.Off, &_ecbcff); _eged != nil {
					return _eged
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_eebca.Ext = NewCT_PositiveSize2D()
				if _gffg := d.DecodeElement(_eebca.Ext, &_ecbcff); _gffg != nil {
					return _gffg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}:
				_eebca.ChOff = NewCT_Point2D()
				if _acfaa := d.DecodeElement(_eebca.ChOff, &_ecbcff); _acfaa != nil {
					return _acfaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}:
				_eebca.ChExt = NewCT_PositiveSize2D()
				if _ebdfg := d.DecodeElement(_eebca.ChExt, &_ecbcff); _ebdfg != nil {
					return _ebdfg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u0032\u0044\u0020\u0025\u0076", _ecbcff.Name)
				if _acge := d.Skip(); _acge != nil {
					return _acge
				}
			}
		case _g.EndElement:
			break _eddcd
		case _g.CharData:
		}
	}
	return nil
}

func (_aeffce *ST_BlipCompression) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_aeffce = 0
	case "\u0065\u006d\u0061i\u006c":
		*_aeffce = 1
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_aeffce = 2
	case "\u0070\u0072\u0069n\u0074":
		*_aeffce = 3
	case "\u0068q\u0070\u0072\u0069\u006e\u0074":
		*_aeffce = 4
	case "\u006e\u006f\u006e\u0065":
		*_aeffce = 5
	}
	return nil
}

func NewCT_EffectList() *CT_EffectList { _cefef := &CT_EffectList{}; return _cefef }

func (_efafg ST_TextFontAlignType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_adbfc := _g.Attr{}
	_adbfc.Name = name
	switch _efafg {
	case ST_TextFontAlignTypeUnset:
		_adbfc.Value = ""
	case ST_TextFontAlignTypeAuto:
		_adbfc.Value = "\u0061\u0075\u0074\u006f"
	case ST_TextFontAlignTypeT:
		_adbfc.Value = "\u0074"
	case ST_TextFontAlignTypeCtr:
		_adbfc.Value = "\u0063\u0074\u0072"
	case ST_TextFontAlignTypeBase:
		_adbfc.Value = "\u0062\u0061\u0073\u0065"
	case ST_TextFontAlignTypeB:
		_adbfc.Value = "\u0062"
	}
	return _adbfc, nil
}

// Validate validates the CT_NonVisualDrawingShapeProps and its children
func (_dfaga *CT_NonVisualDrawingShapeProps) Validate() error {
	return _dfaga.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073")
}

// ValidateWithPath validates the CT_FontCollection and its children, prefixing error messages with path
func (_eegg *CT_FontCollection) ValidateWithPath(path string) error {
	if _fdbf := _eegg.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _fdbf != nil {
		return _fdbf
	}
	if _cgdgf := _eegg.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _cgdgf != nil {
		return _cgdgf
	}
	if _abgf := _eegg.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _abgf != nil {
		return _abgf
	}
	for _cbgga, _dbad := range _eegg.Font {
		if _ggbe := _dbad.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _cbgga)); _ggbe != nil {
			return _ggbe
		}
	}
	if _eegg.ExtLst != nil {
		if _fbcee := _eegg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbcee != nil {
			return _fbcee
		}
	}
	return nil
}

func NewCT_PathShadeProperties() *CT_PathShadeProperties {
	_bcddf := &CT_PathShadeProperties{}
	return _bcddf
}

// Validate validates the CT_RelativeOffsetEffect and its children
func (_cbggac *CT_RelativeOffsetEffect) Validate() error {
	return _cbggac.ValidateWithPath("\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

type CT_OfficeArtExtension struct {
	UriAttr string
	Any     []_fc.Any
}

func (_beee *CT_ComplementTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_eadfg, _ebgce := d.Token()
		if _ebgce != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u006dp\u006ce\u006de\u006et\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _ebgce)
		}
		if _aade, _gfad := _eadfg.(_g.EndElement); _gfad && _aade.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_BlipChoice struct {
	AlphaBiLevel []*CT_AlphaBiLevelEffect
	AlphaCeiling []*CT_AlphaCeilingEffect
	AlphaFloor   []*CT_AlphaFloorEffect
	AlphaInv     []*CT_AlphaInverseEffect
	AlphaMod     []*CT_AlphaModulateEffect
	AlphaModFix  []*CT_AlphaModulateFixedEffect
	AlphaRepl    []*CT_AlphaReplaceEffect
	BiLevel      []*CT_BiLevelEffect
	Blur         []*CT_BlurEffect
	ClrChange    []*CT_ColorChangeEffect
	ClrRepl      []*CT_ColorReplaceEffect
	Duotone      []*CT_DuotoneEffect
	FillOverlay  []*CT_FillOverlayEffect
	Grayscl      []*CT_GrayscaleEffect
	Hsl          []*CT_HSLEffect
	Lum          []*CT_LuminanceEffect
	Tint         []*CT_TintEffect
}

// ValidateWithPath validates the CT_GvmlPicture and its children, prefixing error messages with path
func (_defae *CT_GvmlPicture) ValidateWithPath(path string) error {
	if _gcdab := _defae.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _gcdab != nil {
		return _gcdab
	}
	if _fcea := _defae.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fcea != nil {
		return _fcea
	}
	if _cagdf := _defae.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _cagdf != nil {
		return _cagdf
	}
	if _defae.Style != nil {
		if _ggbf := _defae.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ggbf != nil {
			return _ggbf
		}
	}
	if _defae.ExtLst != nil {
		if _cgdfb := _defae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgdfb != nil {
			return _cgdfb
		}
	}
	return nil
}

// Validate validates the EG_TextBulletTypeface and its children
func (_gfgbb *EG_TextBulletTypeface) Validate() error {
	return _gfgbb.ValidateWithPath("E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065")
}

func (_adgeb ST_TextVerticalType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gcdbd := _g.Attr{}
	_gcdbd.Name = name
	switch _adgeb {
	case ST_TextVerticalTypeUnset:
		_gcdbd.Value = ""
	case ST_TextVerticalTypeHorz:
		_gcdbd.Value = "\u0068\u006f\u0072\u007a"
	case ST_TextVerticalTypeVert:
		_gcdbd.Value = "\u0076\u0065\u0072\u0074"
	case ST_TextVerticalTypeVert270:
		_gcdbd.Value = "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case ST_TextVerticalTypeWordArtVert:
		_gcdbd.Value = "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeEaVert:
		_gcdbd.Value = "\u0065\u0061\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeMongolianVert:
		_gcdbd.Value = "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeWordArtVertRtl:
		_gcdbd.Value = "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return _gcdbd, nil
}

func NewCT_TextBody() *CT_TextBody {
	_gaabac := &CT_TextBody{}
	_gaabac.BodyPr = NewCT_TextBodyProperties()
	return _gaabac
}

// ValidateWithPath validates the CT_ColorMappingOverrideChoice and its children, prefixing error messages with path
func (_gaecf *CT_ColorMappingOverrideChoice) ValidateWithPath(path string) error {
	if _gaecf.MasterClrMapping != nil {
		if _afge := _gaecf.MasterClrMapping.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0043\u006c\u0072\u004d\u0061p\u0070\u0069\u006e\u0067"); _afge != nil {
			return _afge
		}
	}
	if _gaecf.OverrideClrMapping != nil {
		if _cdba := _gaecf.OverrideClrMapping.ValidateWithPath(path + "\u002f\u004f\u0076\u0065rr\u0069\u0064\u0065\u0043\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"); _cdba != nil {
			return _cdba
		}
	}
	return nil
}

func (_adebcc *CT_PositivePercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _adebcc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func ParseUnionST_AnimationDgmBuildType(s string) (ST_AnimationDgmBuildType, error) {
	_decef := ST_AnimationDgmBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_decef.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u006f\u006e\u0065":
		_decef.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeOne
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		_decef.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlOne
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		_decef.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlAtOnce
	}
	return _decef, nil
}

func (_bbeaa ST_PresetPatternVal) ValidateWithPath(path string) error {
	switch _bbeaa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbeaa))
	}
	return nil
}

func NewCT_GlowEffect() *CT_GlowEffect { _baag := &CT_GlowEffect{}; return _baag }

func (_ccab *CT_AudioCD) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccab.St = NewCT_AudioCDTime()
	_ccab.End = NewCT_AudioCDTime()
_gdf:
	for {
		_dagd, _edb := d.Token()
		if _edb != nil {
			return _edb
		}
		switch _dcdf := _dagd.(type) {
		case _g.StartElement:
			switch _dcdf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}:
				if _afe := d.DecodeElement(_ccab.St, &_dcdf); _afe != nil {
					return _afe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				if _agc := d.DecodeElement(_ccab.End, &_dcdf); _agc != nil {
					return _agc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccab.ExtLst = NewCT_OfficeArtExtensionList()
				if _decf := d.DecodeElement(_ccab.ExtLst, &_dcdf); _decf != nil {
					return _decf
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0020\u0025\u0076", _dcdf.Name)
				if _gdba := d.Skip(); _gdba != nil {
					return _gdba
				}
			}
		case _g.EndElement:
			break _gdf
		case _g.CharData:
		}
	}
	return nil
}

func (_bbad *CT_DashStop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ffad := range start.Attr {
		if _ffad.Name.Local == "\u0064" {
			_dbed, _fege := ParseUnionST_PositivePercentage(_ffad.Value)
			if _fege != nil {
				return _fege
			}
			_bbad.DAttr = _dbed
			continue
		}
		if _ffad.Name.Local == "\u0073\u0070" {
			_cebf, _cddg := ParseUnionST_PositivePercentage(_ffad.Value)
			if _cddg != nil {
				return _cddg
			}
			_bbad.SpAttr = _cebf
			continue
		}
	}
	for {
		_adeb, _ceac := d.Token()
		if _ceac != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u003a\u0020\u0025\u0073", _ceac)
		}
		if _fecfe, _dagf := _adeb.(_g.EndElement); _dagf && _fecfe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fddfd *EG_TextRun) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dagad:
	for {
		_ddaea, _cbccdb := d.Token()
		if _cbccdb != nil {
			return _cbccdb
		}
		switch _bbdge := _ddaea.(type) {
		case _g.StartElement:
			switch _bbdge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_fddfd.R = NewCT_RegularTextRun()
				if _egddgg := d.DecodeElement(_fddfd.R, &_bbdge); _egddgg != nil {
					return _egddgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_fddfd.Br = NewCT_TextLineBreak()
				if _ededeb := d.DecodeElement(_fddfd.Br, &_bbdge); _ededeb != nil {
					return _ededeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_fddfd.Fld = NewCT_TextField()
				if _aafcc := d.DecodeElement(_fddfd.Fld, &_bbdge); _aafcc != nil {
					return _aafcc
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005fT\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _bbdge.Name)
				if _dbdca := d.Skip(); _dbdca != nil {
					return _dbdca
				}
			}
		case _g.EndElement:
			break _dagad
		case _g.CharData:
		}
	}
	return nil
}

func (_adcd *CT_ShapeStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_adcd.LnRef = NewCT_StyleMatrixReference()
	_adcd.FillRef = NewCT_StyleMatrixReference()
	_adcd.EffectRef = NewCT_StyleMatrixReference()
	_adcd.FontRef = NewCT_FontReference()
_abbf:
	for {
		_abdcd, _ddbba := d.Token()
		if _ddbba != nil {
			return _ddbba
		}
		switch _cbaab := _abdcd.(type) {
		case _g.StartElement:
			switch _cbaab.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				if _fbbf := d.DecodeElement(_adcd.LnRef, &_cbaab); _fbbf != nil {
					return _fbbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				if _gbbdd := d.DecodeElement(_adcd.FillRef, &_cbaab); _gbbdd != nil {
					return _gbbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				if _cabbb := d.DecodeElement(_adcd.EffectRef, &_cbaab); _cabbb != nil {
					return _cabbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				if _cgagb := d.DecodeElement(_adcd.FontRef, &_cbaab); _cgagb != nil {
					return _cgagb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _cbaab.Name)
				if _gfgcb := d.Skip(); _gfgcb != nil {
					return _gfgcb
				}
			}
		case _g.EndElement:
			break _abbf
		case _g.CharData:
		}
	}
	return nil
}

func (_abfb *CT_BlipChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abfb.AlphaBiLevel != nil {
		_aebg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		for _, _gabd := range _abfb.AlphaBiLevel {
			e.EncodeElement(_gabd, _aebg)
		}
	}
	if _abfb.AlphaCeiling != nil {
		_acbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		for _, _gdgc := range _abfb.AlphaCeiling {
			e.EncodeElement(_gdgc, _acbc)
		}
	}
	if _abfb.AlphaFloor != nil {
		_cgcga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		for _, _cddc := range _abfb.AlphaFloor {
			e.EncodeElement(_cddc, _cgcga)
		}
	}
	if _abfb.AlphaInv != nil {
		_aadd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		for _, _fdac := range _abfb.AlphaInv {
			e.EncodeElement(_fdac, _aadd)
		}
	}
	if _abfb.AlphaMod != nil {
		_bdeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		for _, _abgb := range _abfb.AlphaMod {
			e.EncodeElement(_abgb, _bdeb)
		}
	}
	if _abfb.AlphaModFix != nil {
		_gfbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		for _, _ddef := range _abfb.AlphaModFix {
			e.EncodeElement(_ddef, _gfbe)
		}
	}
	if _abfb.AlphaRepl != nil {
		_cefe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		for _, _bdca := range _abfb.AlphaRepl {
			e.EncodeElement(_bdca, _cefe)
		}
	}
	if _abfb.BiLevel != nil {
		_bcag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		for _, _cbba := range _abfb.BiLevel {
			e.EncodeElement(_cbba, _bcag)
		}
	}
	if _abfb.Blur != nil {
		_fgdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		for _, _adcagd := range _abfb.Blur {
			e.EncodeElement(_adcagd, _fgdf)
		}
	}
	if _abfb.ClrChange != nil {
		_cfcfe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		for _, _bgcb := range _abfb.ClrChange {
			e.EncodeElement(_bgcb, _cfcfe)
		}
	}
	if _abfb.ClrRepl != nil {
		_bcacf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		for _, _ccb := range _abfb.ClrRepl {
			e.EncodeElement(_ccb, _bcacf)
		}
	}
	if _abfb.Duotone != nil {
		_fgdfb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		for _, _babf := range _abfb.Duotone {
			e.EncodeElement(_babf, _fgdfb)
		}
	}
	if _abfb.FillOverlay != nil {
		_fbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		for _, _bcdb := range _abfb.FillOverlay {
			e.EncodeElement(_bcdb, _fbg)
		}
	}
	if _abfb.Grayscl != nil {
		_egad := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		for _, _faab := range _abfb.Grayscl {
			e.EncodeElement(_faab, _egad)
		}
	}
	if _abfb.Hsl != nil {
		_acce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		for _, _edcd := range _abfb.Hsl {
			e.EncodeElement(_edcd, _acce)
		}
	}
	if _abfb.Lum != nil {
		_dcgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		for _, _dagg := range _abfb.Lum {
			e.EncodeElement(_dagg, _dcgc)
		}
	}
	if _abfb.Tint != nil {
		_bffea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		for _, _gfgc := range _abfb.Tint {
			e.EncodeElement(_gfgc, _bffea)
		}
	}
	return nil
}

func (_becgb ST_BlipCompression) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bdgec := _g.Attr{}
	_bdgec.Name = name
	switch _becgb {
	case ST_BlipCompressionUnset:
		_bdgec.Value = ""
	case ST_BlipCompressionEmail:
		_bdgec.Value = "\u0065\u006d\u0061i\u006c"
	case ST_BlipCompressionScreen:
		_bdgec.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlipCompressionPrint:
		_bdgec.Value = "\u0070\u0072\u0069n\u0074"
	case ST_BlipCompressionHqprint:
		_bdgec.Value = "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case ST_BlipCompressionNone:
		_bdgec.Value = "\u006e\u006f\u006e\u0065"
	}
	return _bdgec, nil
}

func ParseUnionST_TextPoint(s string) (ST_TextPoint, error) {
	_edada := ST_TextPoint{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_edada.ST_UniversalMeasure = &s
	} else {
		_fgabd, _dbbagg := _fg.ParseInt(s, 10, 32)
		if _dbbagg != nil {
			return _edada, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dbbagg)
		}
		_ebeac := int32(_fgabd)
		_edada.ST_TextPointUnqualified = &_ebeac
	}
	return _edada, nil
}

func NewCT_TextCharacterProperties() *CT_TextCharacterProperties {
	_bdag := &CT_TextCharacterProperties{}
	return _bdag
}

func NewCT_ObjectStyleDefaults() *CT_ObjectStyleDefaults {
	_egaeb := &CT_ObjectStyleDefaults{}
	return _egaeb
}

func (_bcgcg *CT_EffectStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cdacf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}}
	for _, _defg := range _bcgcg.EffectStyle {
		e.EncodeElement(_defg, _cdacf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SchemeColor and its children
func (_aafef *CT_SchemeColor) Validate() error {
	return _aafef.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072")
}

func NewCT_LuminanceEffect() *CT_LuminanceEffect { _edeb := &CT_LuminanceEffect{}; return _edeb }

type CT_TablePartStyle struct {
	TcTxStyle *CT_TableStyleTextStyle
	TcStyle   *CT_TableStyleCellStyle
}

func (_faddd *CT_InverseTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_fcfe, _dced := d.Token()
		if _dced != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0049\u006e\u0076\u0065\u0072s\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _dced)
		}
		if _becgc, _decg := _fcfe.(_g.EndElement); _decg && _becgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbcbg *ST_Coordinate) ValidateWithPath(path string) error {
	_eebabb := []string{}
	if _gbcbg.ST_CoordinateUnqualified != nil {
		_eebabb = append(_eebabb, "\u0053T\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065U\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _gbcbg.ST_UniversalMeasure != nil {
		_eebabb = append(_eebabb, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_eebabb) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _eebabb)
	}
	return nil
}

type CT_OuterShadowEffect struct {
	BlurRadAttr      *int64
	DistAttr         *int64
	DirAttr          *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
	ScrgbClr         *CT_ScRgbColor
	SrgbClr          *CT_SRgbColor
	HslClr           *CT_HslColor
	SysClr           *CT_SystemColor
	SchemeClr        *CT_SchemeColor
	PrstClr          *CT_PresetColor
}

// ValidateWithPath validates the CT_GammaTransform and its children, prefixing error messages with path
func (_gedd *CT_GammaTransform) ValidateWithPath(path string) error { return nil }

func (_acadb *ST_BlackWhiteMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eaefde, _ggadbba := d.Token()
	if _ggadbba != nil {
		return _ggadbba
	}
	if _aeagb, _bgcbg := _eaefde.(_g.EndElement); _bgcbg && _aeagb.Name == start.Name {
		*_acadb = 1
		return nil
	}
	if _ddacd, _dffacc := _eaefde.(_g.CharData); !_dffacc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eaefde)
	} else {
		switch string(_ddacd) {
		case "":
			*_acadb = 0
		case "\u0063\u006c\u0072":
			*_acadb = 1
		case "\u0061\u0075\u0074\u006f":
			*_acadb = 2
		case "\u0067\u0072\u0061\u0079":
			*_acadb = 3
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_acadb = 4
		case "\u0069n\u0076\u0047\u0072\u0061\u0079":
			*_acadb = 5
		case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
			*_acadb = 6
		case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
			*_acadb = 7
		case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
			*_acadb = 8
		case "\u0062\u006c\u0061c\u006b":
			*_acadb = 9
		case "\u0077\u0068\u0069t\u0065":
			*_acadb = 10
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_acadb = 11
		}
	}
	_eaefde, _ggadbba = d.Token()
	if _ggadbba != nil {
		return _ggadbba
	}
	if _bdfg, _dfgdg := _eaefde.(_g.EndElement); _dfgdg && _bdfg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eaefde)
}

// Validate validates the CT_SphereCoords and its children
func (_adea *CT_SphereCoords) Validate() error {
	return _adea.ValidateWithPath("\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073")
}

func (_ccagd *ST_TextPoint) Validate() error { return _ccagd.ValidateWithPath("") }

func NewCT_LineJoinMiterProperties() *CT_LineJoinMiterProperties {
	_bbbg := &CT_LineJoinMiterProperties{}
	return _bbbg
}

func (_cddf *CT_LuminanceEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cddf.BrightAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0072\u0069\u0067\u0068\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_cddf.BrightAttr)})
	}
	if _cddf.ContrastAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_cddf.ContrastAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_efgfbf ST_TextWrappingType) String() string {
	switch _efgfbf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return ""
}

func (_adaaf *CT_EffectProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cdfee:
	for {
		_bgdg, _eaebe := d.Token()
		if _eaebe != nil {
			return _eaebe
		}
		switch _gcdb := _bgdg.(type) {
		case _g.StartElement:
			switch _gcdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_adaaf.EffectLst = NewCT_EffectList()
				if _ffcdg := d.DecodeElement(_adaaf.EffectLst, &_gcdb); _ffcdg != nil {
					return _ffcdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_adaaf.EffectDag = NewCT_EffectContainer()
				if _gaeca := d.DecodeElement(_adaaf.EffectDag, &_gcdb); _gaeca != nil {
					return _gaeca
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gcdb.Name)
				if _ddagg := d.Skip(); _ddagg != nil {
					return _ddagg
				}
			}
		case _g.EndElement:
			break _cdfee
		case _g.CharData:
		}
	}
	return nil
}

func (_cfdb *CT_Camera) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_cfg, _cdfe := _cfdb.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _cdfe != nil {
		return _cdfe
	}
	start.Attr = append(start.Attr, _cfg)
	if _cfdb.FovAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006f\u0076"}, Value: _bb.Sprintf("\u0025\u0076", *_cfdb.FovAttr)})
	}
	if _cfdb.ZoomAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a\u006f\u006f\u006d"}, Value: _bb.Sprintf("\u0025\u0076", *_cfdb.ZoomAttr)})
	}
	e.EncodeToken(start)
	if _cfdb.Rot != nil {
		_eafb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_cfdb.Rot, _eafb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Point3D and its children, prefixing error messages with path
func (_agdee *CT_Point3D) ValidateWithPath(path string) error {
	if _gegeb := _agdee.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _gegeb != nil {
		return _gegeb
	}
	if _fffag := _agdee.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _fffag != nil {
		return _fffag
	}
	if _daecc := _agdee.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _daecc != nil {
		return _daecc
	}
	return nil
}

// Validate validates the CT_TextBulletColorFollowText and its children
func (_gfdbc *CT_TextBulletColorFollowText) Validate() error {
	return _gfdbc.ValidateWithPath("\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074")
}

// ValidateWithPath validates the CT_TextParagraphProperties and its children, prefixing error messages with path
func (_egfab *CT_TextParagraphProperties) ValidateWithPath(path string) error {
	if _egfab.MarLAttr != nil {
		if *_egfab.MarLAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u004c\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_egfab.MarLAttr)
		}
		if *_egfab.MarLAttr > 51206400 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u004c\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_egfab.MarLAttr)
		}
	}
	if _egfab.MarRAttr != nil {
		if *_egfab.MarRAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u0052\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_egfab.MarRAttr)
		}
		if *_egfab.MarRAttr > 51206400 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u0052\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_egfab.MarRAttr)
		}
	}
	if _egfab.LvlAttr != nil {
		if *_egfab.LvlAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_egfab.LvlAttr)
		}
		if *_egfab.LvlAttr > 8 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_egfab.LvlAttr)
		}
	}
	if _egfab.IndentAttr != nil {
		if *_egfab.IndentAttr < -51206400 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0049\u006e\u0064\u0065\u006e\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u002d\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_egfab.IndentAttr)
		}
		if *_egfab.IndentAttr > 51206400 {
			return _bb.Errorf("\u0025s\u002f\u006d.\u0049\u006e\u0064e\u006e\u0074\u0041\u0074\u0074\u0072\u0020m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_egfab.IndentAttr)
		}
	}
	if _adecg := _egfab.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _adecg != nil {
		return _adecg
	}
	if _egfab.DefTabSzAttr != nil {
		if _edgff := _egfab.DefTabSzAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0054\u0061\u0062\u0053\u007a\u0041\u0074\u0074\u0072"); _edgff != nil {
			return _edgff
		}
	}
	if _efgddd := _egfab.FontAlgnAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0041\u006c\u0067\u006e\u0041\u0074\u0074\u0072"); _efgddd != nil {
		return _efgddd
	}
	if _egfab.LnSpc != nil {
		if _adaeda := _egfab.LnSpc.ValidateWithPath(path + "\u002f\u004c\u006e\u0053\u0070\u0063"); _adaeda != nil {
			return _adaeda
		}
	}
	if _egfab.SpcBef != nil {
		if _gggbge := _egfab.SpcBef.ValidateWithPath(path + "\u002fS\u0070\u0063\u0042\u0065\u0066"); _gggbge != nil {
			return _gggbge
		}
	}
	if _egfab.SpcAft != nil {
		if _cfacbf := _egfab.SpcAft.ValidateWithPath(path + "\u002fS\u0070\u0063\u0041\u0066\u0074"); _cfacbf != nil {
			return _cfacbf
		}
	}
	if _egfab.BuClrTx != nil {
		if _aabdeb := _egfab.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _aabdeb != nil {
			return _aabdeb
		}
	}
	if _egfab.BuClr != nil {
		if _fdcfa := _egfab.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _fdcfa != nil {
			return _fdcfa
		}
	}
	if _egfab.BuSzTx != nil {
		if _eggaeg := _egfab.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _eggaeg != nil {
			return _eggaeg
		}
	}
	if _egfab.BuSzPct != nil {
		if _faggf := _egfab.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _faggf != nil {
			return _faggf
		}
	}
	if _egfab.BuSzPts != nil {
		if _dcgff := _egfab.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _dcgff != nil {
			return _dcgff
		}
	}
	if _egfab.BuFontTx != nil {
		if _dfggb := _egfab.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _dfggb != nil {
			return _dfggb
		}
	}
	if _egfab.BuFont != nil {
		if _dgdbaa := _egfab.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _dgdbaa != nil {
			return _dgdbaa
		}
	}
	if _egfab.BuNone != nil {
		if _dged := _egfab.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _dged != nil {
			return _dged
		}
	}
	if _egfab.BuAutoNum != nil {
		if _fagdgf := _egfab.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _fagdgf != nil {
			return _fagdgf
		}
	}
	if _egfab.BuChar != nil {
		if _baegg := _egfab.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _baegg != nil {
			return _baegg
		}
	}
	if _egfab.BuBlip != nil {
		if _dacgf := _egfab.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _dacgf != nil {
			return _dacgf
		}
	}
	if _egfab.TabLst != nil {
		if _ddbe := _egfab.TabLst.ValidateWithPath(path + "\u002fT\u0061\u0062\u004c\u0073\u0074"); _ddbe != nil {
			return _ddbe
		}
	}
	if _egfab.DefRPr != nil {
		if _fgffc := _egfab.DefRPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0052\u0050\u0072"); _fgffc != nil {
			return _fgffc
		}
	}
	if _egfab.ExtLst != nil {
		if _bcbcf := _egfab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcbcf != nil {
			return _bcbcf
		}
	}
	return nil
}

func (_dfcgb *CT_ColorMRU) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bagc:
	for {
		_fffd, _ceeca := d.Token()
		if _ceeca != nil {
			return _ceeca
		}
		switch _eebc := _fffd.(type) {
		case _g.StartElement:
			switch _eebc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dgba := NewEG_ColorChoice()
				_dgba.ScrgbClr = NewCT_ScRgbColor()
				if _gcga := d.DecodeElement(_dgba.ScrgbClr, &_eebc); _gcga != nil {
					return _gcga
				}
				_dfcgb.EG_ColorChoice = append(_dfcgb.EG_ColorChoice, _dgba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ceea := NewEG_ColorChoice()
				_ceea.SrgbClr = NewCT_SRgbColor()
				if _ageb := d.DecodeElement(_ceea.SrgbClr, &_eebc); _ageb != nil {
					return _ageb
				}
				_dfcgb.EG_ColorChoice = append(_dfcgb.EG_ColorChoice, _ceea)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cggg := NewEG_ColorChoice()
				_cggg.HslClr = NewCT_HslColor()
				if _gfaf := d.DecodeElement(_cggg.HslClr, &_eebc); _gfaf != nil {
					return _gfaf
				}
				_dfcgb.EG_ColorChoice = append(_dfcgb.EG_ColorChoice, _cggg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_debg := NewEG_ColorChoice()
				_debg.SysClr = NewCT_SystemColor()
				if _cfa := d.DecodeElement(_debg.SysClr, &_eebc); _cfa != nil {
					return _cfa
				}
				_dfcgb.EG_ColorChoice = append(_dfcgb.EG_ColorChoice, _debg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_bggdb := NewEG_ColorChoice()
				_bggdb.SchemeClr = NewCT_SchemeColor()
				if _fbee := d.DecodeElement(_bggdb.SchemeClr, &_eebc); _fbee != nil {
					return _fbee
				}
				_dfcgb.EG_ColorChoice = append(_dfcgb.EG_ColorChoice, _bggdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ddega := NewEG_ColorChoice()
				_ddega.PrstClr = NewCT_PresetColor()
				if _eagd := d.DecodeElement(_ddega.PrstClr, &_eebc); _eagd != nil {
					return _eagd
				}
				_dfcgb.EG_ColorChoice = append(_dfcgb.EG_ColorChoice, _ddega)
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055\u0020\u0025\u0076", _eebc.Name)
				if _cgea := d.Skip(); _cgea != nil {
					return _cgea
				}
			}
		case _g.EndElement:
			break _bagc
		case _g.CharData:
		}
	}
	return nil
}

func (_adef *CT_AlphaBiLevelEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afa := range start.Attr {
		if _afa.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_bgd, _bdg := ParseUnionST_PositiveFixedPercentage(_afa.Value)
			if _bdg != nil {
				return _bdg
			}
			_adef.ThreshAttr = _bgd
			continue
		}
	}
	for {
		_addf, _dagc := d.Token()
		if _dagc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065v\u0065\u006c\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _dagc)
		}
		if _fdc, _bbg := _addf.(_g.EndElement); _bbg && _fdc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ShapeStyle and its children
func (_ggfebg *CT_ShapeStyle) Validate() error {
	return _ggfebg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065")
}

func (_efbca *CT_ShapeLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fcdab := range start.Attr {
		if _fcdab.Name.Local == "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074" {
			_agcfa, _ccgdd := _fg.ParseBool(_fcdab.Value)
			if _ccgdd != nil {
				return _ccgdd
			}
			_efbca.NoTextEditAttr = &_agcfa
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_edabe, _fdecd := _fg.ParseBool(_fcdab.Value)
			if _fdecd != nil {
				return _fdecd
			}
			_efbca.NoGrpAttr = &_edabe
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_gbdae, _gageb := _fg.ParseBool(_fcdab.Value)
			if _gageb != nil {
				return _gageb
			}
			_efbca.NoSelectAttr = &_gbdae
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_bdgg, _fage := _fg.ParseBool(_fcdab.Value)
			if _fage != nil {
				return _fage
			}
			_efbca.NoRotAttr = &_bdgg
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gggde, _cbffa := _fg.ParseBool(_fcdab.Value)
			if _cbffa != nil {
				return _cbffa
			}
			_efbca.NoChangeAspectAttr = &_gggde
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_eaaedb, _gcedc := _fg.ParseBool(_fcdab.Value)
			if _gcedc != nil {
				return _gcedc
			}
			_efbca.NoMoveAttr = &_eaaedb
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_fdccg, _ebbfd := _fg.ParseBool(_fcdab.Value)
			if _ebbfd != nil {
				return _ebbfd
			}
			_efbca.NoResizeAttr = &_fdccg
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_ffbae, _bcfce := _fg.ParseBool(_fcdab.Value)
			if _bcfce != nil {
				return _bcfce
			}
			_efbca.NoEditPointsAttr = &_ffbae
			continue
		}
		if _fcdab.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_dbcge, _efdbdc := _fg.ParseBool(_fcdab.Value)
			if _efdbdc != nil {
				return _efdbdc
			}
			_efbca.NoAdjustHandlesAttr = &_dbcge
			continue
		}
		if _fcdab.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_cdcd, _beacd := _fg.ParseBool(_fcdab.Value)
			if _beacd != nil {
				return _beacd
			}
			_efbca.NoChangeArrowheadsAttr = &_cdcd
			continue
		}
		if _fcdab.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_becce, _gagca := _fg.ParseBool(_fcdab.Value)
			if _gagca != nil {
				return _gagca
			}
			_efbca.NoChangeShapeTypeAttr = &_becce
			continue
		}
	}
_agfeb:
	for {
		_gadce, _bgcfd := d.Token()
		if _bgcfd != nil {
			return _bgcfd
		}
		switch _cegfc := _gadce.(type) {
		case _g.StartElement:
			switch _cegfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efbca.ExtLst = NewCT_OfficeArtExtensionList()
				if _bagbd := d.DecodeElement(_efbca.ExtLst, &_cegfc); _bagbd != nil {
					return _bagbd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061p\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _cegfc.Name)
				if _bgdce := d.Skip(); _bgdce != nil {
					return _bgdce
				}
			}
		case _g.EndElement:
			break _agfeb
		case _g.CharData:
		}
	}
	return nil
}

func (_ggbdgf *CT_VideoFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _ggbdgf.LinkAttr)})
	if _ggbdgf.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_ggbdgf.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _ggbdgf.ExtLst != nil {
		_ggegd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbdgf.ExtLst, _ggegd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_egacb *CT_VideoFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cffcdf := range start.Attr {
		if _cffcdf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cffcdf.Name.Local == "\u006c\u0069\u006e\u006b" || _cffcdf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cffcdf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_effcae, _bbfgd := _cffcdf.Value, error(nil)
			if _bbfgd != nil {
				return _bbfgd
			}
			_egacb.LinkAttr = _effcae
			continue
		}
		if _cffcdf.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_dbbfd, _ebffa := _cffcdf.Value, error(nil)
			if _ebffa != nil {
				return _ebffa
			}
			_egacb.ContentTypeAttr = &_dbbfd
			continue
		}
	}
_efbfb:
	for {
		_agaafd, _gbeda := d.Token()
		if _gbeda != nil {
			return _gbeda
		}
		switch _gedba := _agaafd.(type) {
		case _g.StartElement:
			switch _gedba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egacb.ExtLst = NewCT_OfficeArtExtensionList()
				if _gcgda := d.DecodeElement(_egacb.ExtLst, &_gedba); _gcgda != nil {
					return _gcgda
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_V\u0069\u0064e\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _gedba.Name)
				if _edbga := d.Skip(); _edbga != nil {
					return _edbga
				}
			}
		case _g.EndElement:
			break _efbfb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Color and its children
func (_ggcd *CT_Color) Validate() error {
	return _ggcd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

func (_gabc *CT_TableBackgroundStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gabc.Fill != nil {
		_bfgef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_gabc.Fill, _bfgef)
	}
	if _gabc.FillRef != nil {
		_cgged := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_gabc.FillRef, _cgged)
	}
	if _gabc.Effect != nil {
		_ffcec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_gabc.Effect, _ffcec)
	}
	if _gabc.EffectRef != nil {
		_dgddf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_gabc.EffectRef, _dgddf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bbef *CT_GroupShapeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bbef.BwModeAttr != ST_BlackWhiteModeUnset {
		_decea, _abae := _bbef.BwModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _abae != nil {
			return _abae
		}
		start.Attr = append(start.Attr, _decea)
	}
	e.EncodeToken(start)
	if _bbef.Xfrm != nil {
		_babfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_bbef.Xfrm, _babfd)
	}
	if _bbef.NoFill != nil {
		_cgaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbef.NoFill, _cgaf)
	}
	if _bbef.SolidFill != nil {
		_aege := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbef.SolidFill, _aege)
	}
	if _bbef.GradFill != nil {
		_cccf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbef.GradFill, _cccf)
	}
	if _bbef.BlipFill != nil {
		_ddda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbef.BlipFill, _ddda)
	}
	if _bbef.PattFill != nil {
		_ffcfg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbef.PattFill, _ffcfg)
	}
	if _bbef.GrpFill != nil {
		_agaaf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bbef.GrpFill, _agaaf)
	}
	if _bbef.EffectLst != nil {
		_cadfg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbef.EffectLst, _cadfg)
	}
	if _bbef.EffectDag != nil {
		_bacec := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_bbef.EffectDag, _bacec)
	}
	if _bbef.Scene3d != nil {
		_ggbac := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_bbef.Scene3d, _ggbac)
	}
	if _bbef.ExtLst != nil {
		_abfbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbef.ExtLst, _abfbf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cbag *CT_BlurEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cbag.RadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_cbag.RadAttr)})
	}
	if _cbag.GrowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cbag.GrowAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_HslColor struct {
	HueAttr           int32
	SatAttr           ST_Percentage
	LumAttr           ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}

func (_aagdb ST_OnOffStyleType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_aagdb.String(), start)
}

func NewCT_FontScheme() *CT_FontScheme {
	_efbg := &CT_FontScheme{}
	_efbg.MajorFont = NewCT_FontCollection()
	_efbg.MinorFont = NewCT_FontCollection()
	return _efbg
}

func (_cdfeg ST_ChartBuildStep) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cdfeg.String(), start)
}

func NewCT_AlphaModulateFixedEffect() *CT_AlphaModulateFixedEffect {
	_gca := &CT_AlphaModulateFixedEffect{}
	return _gca
}

func NewCT_ColorReplaceEffect() *CT_ColorReplaceEffect {
	_bfed := &CT_ColorReplaceEffect{}
	return _bfed
}

type CT_NonVisualContentPartProperties struct {
	IsCommentAttr *bool
	CpLocks       *CT_ContentPartLocking
	ExtLst        *CT_OfficeArtExtensionList
}

func (_cecgef ST_PresetLineDashVal) ValidateWithPath(path string) error {
	switch _cecgef {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cecgef))
	}
	return nil
}

func (_cabdf *ST_RectAlignment) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cabdf = 0
	case "\u0074\u006c":
		*_cabdf = 1
	case "\u0074":
		*_cabdf = 2
	case "\u0074\u0072":
		*_cabdf = 3
	case "\u006c":
		*_cabdf = 4
	case "\u0063\u0074\u0072":
		*_cabdf = 5
	case "\u0072":
		*_cabdf = 6
	case "\u0062\u006c":
		*_cabdf = 7
	case "\u0062":
		*_cabdf = 8
	case "\u0062\u0072":
		*_cabdf = 9
	}
	return nil
}

func (_bagad *CT_TablePartStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fddbg:
	for {
		_afdc, _fddbbb := d.Token()
		if _fddbbb != nil {
			return _fddbbb
		}
		switch _eegef := _afdc.(type) {
		case _g.StartElement:
			switch _eegef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}:
				_bagad.TcTxStyle = NewCT_TableStyleTextStyle()
				if _ggdbac := d.DecodeElement(_bagad.TcTxStyle, &_eegef); _ggdbac != nil {
					return _ggdbac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}:
				_bagad.TcStyle = NewCT_TableStyleCellStyle()
				if _ecgb := d.DecodeElement(_bagad.TcStyle, &_eegef); _ecgb != nil {
					return _ecgb
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _eegef.Name)
				if _cdbgg := d.Skip(); _cdbgg != nil {
					return _cdbgg
				}
			}
		case _g.EndElement:
			break _fddbg
		case _g.CharData:
		}
	}
	return nil
}

type CT_Point3D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
	ZAttr ST_Coordinate
}

// ValidateWithPath validates the CT_GradientStopList and its children, prefixing error messages with path
func (_bede *CT_GradientStopList) ValidateWithPath(path string) error {
	for _cdcfgb, _fagc := range _bede.Gs {
		if _fadeg := _fagc.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0047\u0073\u005b\u0025\u0064]", path, _cdcfgb)); _fadeg != nil {
			return _fadeg
		}
	}
	return nil
}

type ST_ShapeType byte

func (_dfeg *CT_EffectReference) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gfaa := range start.Attr {
		if _gfaa.Name.Local == "\u0072\u0065\u0066" {
			_dgbff, _ebdf := _gfaa.Value, error(nil)
			if _ebdf != nil {
				return _ebdf
			}
			_dfeg.RefAttr = _dgbff
			continue
		}
	}
	for {
		_fedea, _caadg := d.Token()
		if _caadg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0045\u0066\u0066\u0065\u0063\u0074\u0052e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _caadg)
		}
		if _abcde, _dgbffa := _fedea.(_g.EndElement); _dgbffa && _abcde.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TextParagraphProperties() *CT_TextParagraphProperties {
	_fbbabd := &CT_TextParagraphProperties{}
	return _fbbabd
}

type CT_AlphaReplaceEffect struct{ AAttr ST_PositiveFixedPercentage }

type CT_NonVisualDrawingShapeProps struct {
	TxBoxAttr *bool
	SpLocks   *CT_ShapeLocking
	ExtLst    *CT_OfficeArtExtensionList
}

func (_ccd *CT_AlphaCeilingEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_ace, _fed := d.Token()
		if _fed != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006ci\u006e\u0067\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _fed)
		}
		if _eee, _aae := _ace.(_g.EndElement); _aae && _eee.Name == start.Name {
			break
		}
	}
	return nil
}

// ST_FixedPercentage is a union type
type ST_FixedPercentage struct {
	ST_FixedPercentageDecimal *int32
	ST_FixedPercentage        *ST_Percentage
}

type CT_SRgbColor struct {
	ValAttr           string
	EG_ColorTransform []*EG_ColorTransform
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_gfbfb *CT_TableStyle) ValidateWithPath(path string) error {
	if !_a.ST_GuidPatternRe.MatchString(_gfbfb.StyleIdAttr) {
		return _bb.Errorf("\u0025\u0073\u002fm\u002e\u0053\u0074\u0079\u006c\u0065\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, _gfbfb.StyleIdAttr)
	}
	if _gfbfb.TblBg != nil {
		if _gggc := _gfbfb.TblBg.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0042\u0067"); _gggc != nil {
			return _gggc
		}
	}
	if _gfbfb.WholeTbl != nil {
		if _ddgda := _gfbfb.WholeTbl.ValidateWithPath(path + "\u002fW\u0068\u006f\u006c\u0065\u0054\u0062l"); _ddgda != nil {
			return _ddgda
		}
	}
	if _gfbfb.Band1H != nil {
		if _badd := _gfbfb.Band1H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0048"); _badd != nil {
			return _badd
		}
	}
	if _gfbfb.Band2H != nil {
		if _bfgaf := _gfbfb.Band2H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0048"); _bfgaf != nil {
			return _bfgaf
		}
	}
	if _gfbfb.Band1V != nil {
		if _ddgc := _gfbfb.Band1V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0056"); _ddgc != nil {
			return _ddgc
		}
	}
	if _gfbfb.Band2V != nil {
		if _dfgb := _gfbfb.Band2V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0056"); _dfgb != nil {
			return _dfgb
		}
	}
	if _gfbfb.LastCol != nil {
		if _afdbc := _gfbfb.LastCol.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0043\u006f\u006c"); _afdbc != nil {
			return _afdbc
		}
	}
	if _gfbfb.FirstCol != nil {
		if _dbcef := _gfbfb.FirstCol.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0043\u006fl"); _dbcef != nil {
			return _dbcef
		}
	}
	if _gfbfb.LastRow != nil {
		if _bgfde := _gfbfb.LastRow.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0052\u006f\u0077"); _bgfde != nil {
			return _bgfde
		}
	}
	if _gfbfb.SeCell != nil {
		if _eeeg := _gfbfb.SeCell.ValidateWithPath(path + "\u002fS\u0065\u0043\u0065\u006c\u006c"); _eeeg != nil {
			return _eeeg
		}
	}
	if _gfbfb.SwCell != nil {
		if _beecfc := _gfbfb.SwCell.ValidateWithPath(path + "\u002fS\u0077\u0043\u0065\u006c\u006c"); _beecfc != nil {
			return _beecfc
		}
	}
	if _gfbfb.FirstRow != nil {
		if _cfbfb := _gfbfb.FirstRow.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0052\u006fw"); _cfbfb != nil {
			return _cfbfb
		}
	}
	if _gfbfb.NeCell != nil {
		if _dagb := _gfbfb.NeCell.ValidateWithPath(path + "\u002fN\u0065\u0043\u0065\u006c\u006c"); _dagb != nil {
			return _dagb
		}
	}
	if _gfbfb.NwCell != nil {
		if _fbbefa := _gfbfb.NwCell.ValidateWithPath(path + "\u002fN\u0077\u0043\u0065\u006c\u006c"); _fbbefa != nil {
			return _fbbefa
		}
	}
	if _gfbfb.ExtLst != nil {
		if _fdefe := _gfbfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdefe != nil {
			return _fdefe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_StyleMatrix and its children, prefixing error messages with path
func (_gaed *CT_StyleMatrix) ValidateWithPath(path string) error {
	if _eegdd := _gaed.FillStyleLst.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _eegdd != nil {
		return _eegdd
	}
	if _bbaad := _gaed.LnStyleLst.ValidateWithPath(path + "/\u004c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _bbaad != nil {
		return _bbaad
	}
	if _gcecc := _gaed.EffectStyleLst.ValidateWithPath(path + "\u002fE\u0066f\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _gcecc != nil {
		return _gcecc
	}
	if _fggdd := _gaed.BgFillStyleLst.ValidateWithPath(path + "\u002fB\u0067F\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _fggdd != nil {
		return _fggdd
	}
	return nil
}

func (_daccfg ST_TextTabAlignType) String() string {
	switch _daccfg {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064\u0065\u0063"
	}
	return ""
}

func (_fcfd *CT_BiLevelEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dde := range start.Attr {
		if _dde.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_abbg, _bgff := ParseUnionST_PositiveFixedPercentage(_dde.Value)
			if _bgff != nil {
				return _bgff
			}
			_fcfd.ThreshAttr = _abbg
			continue
		}
	}
	for {
		_dae, _cbfef := d.Token()
		if _cbfef != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0069\u004c\u0065v\u0065l\u0045\u0066\u0066\u0065\u0063\u0074\u003a \u0025\u0073", _cbfef)
		}
		if _gff, _acfg := _dae.(_g.EndElement); _acfg && _gff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfad ST_RectAlignment) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dfad.String(), start)
}

// ValidateWithPath validates the CT_FillStyleList and its children, prefixing error messages with path
func (_gaaba *CT_FillStyleList) ValidateWithPath(path string) error {
	for _eafdf, _fegg := range _gaaba.EG_FillProperties {
		if _cbeff := _fegg.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _eafdf)); _cbeff != nil {
			return _cbeff
		}
	}
	return nil
}

func (_afcga *CT_TableStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_afcga.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _bfged := range start.Attr {
		if _bfged.Name.Local == "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de" {
			_efebcg, _ggefb := _bfged.Value, error(nil)
			if _ggefb != nil {
				return _ggefb
			}
			_afcga.StyleNameAttr = _efebcg
			continue
		}
		if _bfged.Name.Local == "\u0073t\u0079\u006c\u0065\u0049\u0064" {
			_cgdc, _dabb := _bfged.Value, error(nil)
			if _dabb != nil {
				return _dabb
			}
			_afcga.StyleIdAttr = _cgdc
			continue
		}
	}
_acfac:
	for {
		_gaecc, _fbddg := d.Token()
		if _fbddg != nil {
			return _fbddg
		}
		switch _ceegb := _gaecc.(type) {
		case _g.StartElement:
			switch _ceegb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}:
				_afcga.TblBg = NewCT_TableBackgroundStyle()
				if _bcgeb := d.DecodeElement(_afcga.TblBg, &_ceegb); _bcgeb != nil {
					return _bcgeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}:
				_afcga.WholeTbl = NewCT_TablePartStyle()
				if _efefbf := d.DecodeElement(_afcga.WholeTbl, &_ceegb); _efefbf != nil {
					return _efefbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}:
				_afcga.Band1H = NewCT_TablePartStyle()
				if _badcd := d.DecodeElement(_afcga.Band1H, &_ceegb); _badcd != nil {
					return _badcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}:
				_afcga.Band2H = NewCT_TablePartStyle()
				if _gfdgg := d.DecodeElement(_afcga.Band2H, &_ceegb); _gfdgg != nil {
					return _gfdgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}:
				_afcga.Band1V = NewCT_TablePartStyle()
				if _aegcg := d.DecodeElement(_afcga.Band1V, &_ceegb); _aegcg != nil {
					return _aegcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}:
				_afcga.Band2V = NewCT_TablePartStyle()
				if _dbbbb := d.DecodeElement(_afcga.Band2V, &_ceegb); _dbbbb != nil {
					return _dbbbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}:
				_afcga.LastCol = NewCT_TablePartStyle()
				if _dbeeg := d.DecodeElement(_afcga.LastCol, &_ceegb); _dbeeg != nil {
					return _dbeeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}:
				_afcga.FirstCol = NewCT_TablePartStyle()
				if _dafa := d.DecodeElement(_afcga.FirstCol, &_ceegb); _dafa != nil {
					return _dafa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}:
				_afcga.LastRow = NewCT_TablePartStyle()
				if _bcace := d.DecodeElement(_afcga.LastRow, &_ceegb); _bcace != nil {
					return _bcace
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}:
				_afcga.SeCell = NewCT_TablePartStyle()
				if _bbae := d.DecodeElement(_afcga.SeCell, &_ceegb); _bbae != nil {
					return _bbae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}:
				_afcga.SwCell = NewCT_TablePartStyle()
				if _edcee := d.DecodeElement(_afcga.SwCell, &_ceegb); _edcee != nil {
					return _edcee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}:
				_afcga.FirstRow = NewCT_TablePartStyle()
				if _ecfcd := d.DecodeElement(_afcga.FirstRow, &_ceegb); _ecfcd != nil {
					return _ecfcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}:
				_afcga.NeCell = NewCT_TablePartStyle()
				if _ddgbe := d.DecodeElement(_afcga.NeCell, &_ceegb); _ddgbe != nil {
					return _ddgbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}:
				_afcga.NwCell = NewCT_TablePartStyle()
				if _ecdg := d.DecodeElement(_afcga.NwCell, &_ceegb); _ecdg != nil {
					return _ecdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afcga.ExtLst = NewCT_OfficeArtExtensionList()
				if _afdfe := d.DecodeElement(_afcga.ExtLst, &_ceegb); _afdfe != nil {
					return _afdfe
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _ceegb.Name)
				if _ebaf := d.Skip(); _ebaf != nil {
					return _ebaf
				}
			}
		case _g.EndElement:
			break _acfac
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the EG_TextUnderlineFill and its children
func (_gaacc *EG_TextUnderlineFill) Validate() error {
	return _gaacc.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c")
}

func (_feebg *CT_EmptyElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_FontCollection struct {
	Latin  *CT_TextFont
	Ea     *CT_TextFont
	Cs     *CT_TextFont
	Font   []*CT_SupplementalFont
	ExtLst *CT_OfficeArtExtensionList
}

func (_fgefe ST_ColorSchemeIndex) String() string {
	switch _fgefe {
	case 0:
		return ""
	case 1:
		return "\u0064\u006b\u0031"
	case 2:
		return "\u006c\u0074\u0031"
	case 3:
		return "\u0064\u006b\u0032"
	case 4:
		return "\u006c\u0074\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return ""
}

func (_bfbfc *CT_TextBulletSizePercent) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _bfbfc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PositiveSize2D and its children
func (_ffdfc *CT_PositiveSize2D) Validate() error {
	return _ffdfc.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044")
}

func (_egeea ST_Percentage) String() string {
	if _egeea.ST_PercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_egeea.ST_PercentageDecimal)
	}
	if _egeea.ST_Percentage != nil {
		return _bb.Sprintf("\u0025\u0076", *_egeea.ST_Percentage)
	}
	return ""
}

type CT_EffectContainer struct {
	TypeAttr     ST_EffectContainerType
	NameAttr     *string
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

func NewCT_TintEffect() *CT_TintEffect { _fffaf := &CT_TintEffect{}; return _fffaf }

func (_cbcfb *CT_NonVisualPictureProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dgde := range start.Attr {
		if _dgde.Name.Local == "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065" {
			_eecb, _gfdfec := _fg.ParseBool(_dgde.Value)
			if _gfdfec != nil {
				return _gfdfec
			}
			_cbcfb.PreferRelativeResizeAttr = &_eecb
			continue
		}
	}
_feea:
	for {
		_fbddf, _abcae := d.Token()
		if _abcae != nil {
			return _abcae
		}
		switch _fagf := _fbddf.(type) {
		case _g.StartElement:
			switch _fagf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}:
				_cbcfb.PicLocks = NewCT_PictureLocking()
				if _dcdbb := d.DecodeElement(_cbcfb.PicLocks, &_fagf); _dcdbb != nil {
					return _dcdbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbcfb.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbadb := d.DecodeElement(_cbcfb.ExtLst, &_fagf); _gbadb != nil {
					return _gbadb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063t\u0075\u0072\u0065\u0050\u0072\u006fp\u0065\u0072t\u0069\u0065s\u0020%\u0076", _fagf.Name)
				if _ccbff := d.Skip(); _ccbff != nil {
					return _ccbff
				}
			}
		case _g.EndElement:
			break _feea
		case _g.CharData:
		}
	}
	return nil
}

func (_eacbg *ST_TextUnderlineType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eacbg = 0
	case "\u006e\u006f\u006e\u0065":
		*_eacbg = 1
	case "\u0077\u006f\u0072d\u0073":
		*_eacbg = 2
	case "\u0073\u006e\u0067":
		*_eacbg = 3
	case "\u0064\u0062\u006c":
		*_eacbg = 4
	case "\u0068\u0065\u0061v\u0079":
		*_eacbg = 5
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_eacbg = 6
	case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
		*_eacbg = 7
	case "\u0064\u0061\u0073\u0068":
		*_eacbg = 8
	case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
		*_eacbg = 9
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
		*_eacbg = 10
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
		*_eacbg = 11
	case "\u0064o\u0074\u0044\u0061\u0073\u0068":
		*_eacbg = 12
	case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_eacbg = 13
	case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
		*_eacbg = 14
	case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_eacbg = 15
	case "\u0077\u0061\u0076\u0079":
		*_eacbg = 16
	case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
		*_eacbg = 17
	case "\u0077a\u0076\u0079\u0044\u0062\u006c":
		*_eacbg = 18
	}
	return nil
}

// ValidateWithPath validates the CT_FixedPercentage and its children, prefixing error messages with path
func (_dfba *CT_FixedPercentage) ValidateWithPath(path string) error {
	if _aeec := _dfba.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aeec != nil {
		return _aeec
	}
	return nil
}

func (_bbcced *CT_SRgbColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fbdfg := range start.Attr {
		if _fbdfg.Name.Local == "\u0076\u0061\u006c" {
			_ddeca, _bgeg := _fbdfg.Value, error(nil)
			if _bgeg != nil {
				return _bgeg
			}
			_bbcced.ValAttr = _ddeca
			continue
		}
	}
_egcd:
	for {
		_eccae, _beecfb := d.Token()
		if _beecfb != nil {
			return _beecfb
		}
		switch _ceabe := _eccae.(type) {
		case _g.StartElement:
			switch _ceabe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_degbf := NewEG_ColorTransform()
				_degbf.Tint = NewCT_PositiveFixedPercentage()
				if _gfgbe := d.DecodeElement(_degbf.Tint, &_ceabe); _gfgbe != nil {
					return _gfgbe
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _degbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_dbafc := NewEG_ColorTransform()
				_dbafc.Shade = NewCT_PositiveFixedPercentage()
				if _gecagg := d.DecodeElement(_dbafc.Shade, &_ceabe); _gecagg != nil {
					return _gecagg
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _dbafc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_edgb := NewEG_ColorTransform()
				_edgb.Comp = NewCT_ComplementTransform()
				if _ebefc := d.DecodeElement(_edgb.Comp, &_ceabe); _ebefc != nil {
					return _ebefc
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _edgb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_dgaee := NewEG_ColorTransform()
				_dgaee.Inv = NewCT_InverseTransform()
				if _agdfg := d.DecodeElement(_dgaee.Inv, &_ceabe); _agdfg != nil {
					return _agdfg
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _dgaee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_afbe := NewEG_ColorTransform()
				_afbe.Gray = NewCT_GrayscaleTransform()
				if _bdcfa := d.DecodeElement(_afbe.Gray, &_ceabe); _bdcfa != nil {
					return _bdcfa
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _afbe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_acgg := NewEG_ColorTransform()
				_acgg.Alpha = NewCT_PositiveFixedPercentage()
				if _afbga := d.DecodeElement(_acgg.Alpha, &_ceabe); _afbga != nil {
					return _afbga
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _acgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_dadfd := NewEG_ColorTransform()
				_dadfd.AlphaOff = NewCT_FixedPercentage()
				if _cedee := d.DecodeElement(_dadfd.AlphaOff, &_ceabe); _cedee != nil {
					return _cedee
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _dadfd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_effga := NewEG_ColorTransform()
				_effga.AlphaMod = NewCT_PositivePercentage()
				if _bcbac := d.DecodeElement(_effga.AlphaMod, &_ceabe); _bcbac != nil {
					return _bcbac
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _effga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_gbggb := NewEG_ColorTransform()
				_gbggb.Hue = NewCT_PositiveFixedAngle()
				if _febga := d.DecodeElement(_gbggb.Hue, &_ceabe); _febga != nil {
					return _febga
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _gbggb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_agfgf := NewEG_ColorTransform()
				_agfgf.HueOff = NewCT_Angle()
				if _dcceec := d.DecodeElement(_agfgf.HueOff, &_ceabe); _dcceec != nil {
					return _dcceec
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _agfgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_dgdac := NewEG_ColorTransform()
				_dgdac.HueMod = NewCT_PositivePercentage()
				if _bdded := d.DecodeElement(_dgdac.HueMod, &_ceabe); _bdded != nil {
					return _bdded
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _dgdac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_cdace := NewEG_ColorTransform()
				_cdace.Sat = NewCT_Percentage()
				if _bgecc := d.DecodeElement(_cdace.Sat, &_ceabe); _bgecc != nil {
					return _bgecc
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _cdace)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_ggagf := NewEG_ColorTransform()
				_ggagf.SatOff = NewCT_Percentage()
				if _fgbed := d.DecodeElement(_ggagf.SatOff, &_ceabe); _fgbed != nil {
					return _fgbed
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _ggagf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_cffbg := NewEG_ColorTransform()
				_cffbg.SatMod = NewCT_Percentage()
				if _bebdg := d.DecodeElement(_cffbg.SatMod, &_ceabe); _bebdg != nil {
					return _bebdg
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _cffbg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_caeac := NewEG_ColorTransform()
				_caeac.Lum = NewCT_Percentage()
				if _ccebf := d.DecodeElement(_caeac.Lum, &_ceabe); _ccebf != nil {
					return _ccebf
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _caeac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_decfe := NewEG_ColorTransform()
				_decfe.LumOff = NewCT_Percentage()
				if _eedag := d.DecodeElement(_decfe.LumOff, &_ceabe); _eedag != nil {
					return _eedag
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _decfe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_ecgg := NewEG_ColorTransform()
				_ecgg.LumMod = NewCT_Percentage()
				if _dbebec := d.DecodeElement(_ecgg.LumMod, &_ceabe); _dbebec != nil {
					return _dbebec
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _ecgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_dgcbb := NewEG_ColorTransform()
				_dgcbb.Red = NewCT_Percentage()
				if _dcefd := d.DecodeElement(_dgcbb.Red, &_ceabe); _dcefd != nil {
					return _dcefd
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _dgcbb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_eecg := NewEG_ColorTransform()
				_eecg.RedOff = NewCT_Percentage()
				if _ccdeg := d.DecodeElement(_eecg.RedOff, &_ceabe); _ccdeg != nil {
					return _ccdeg
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _eecg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_bcfgf := NewEG_ColorTransform()
				_bcfgf.RedMod = NewCT_Percentage()
				if _ccgfda := d.DecodeElement(_bcfgf.RedMod, &_ceabe); _ccgfda != nil {
					return _ccgfda
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _bcfgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_aagaa := NewEG_ColorTransform()
				_aagaa.Green = NewCT_Percentage()
				if _aeceb := d.DecodeElement(_aagaa.Green, &_ceabe); _aeceb != nil {
					return _aeceb
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _aagaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_aadgb := NewEG_ColorTransform()
				_aadgb.GreenOff = NewCT_Percentage()
				if _aebga := d.DecodeElement(_aadgb.GreenOff, &_ceabe); _aebga != nil {
					return _aebga
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _aadgb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_gdbegd := NewEG_ColorTransform()
				_gdbegd.GreenMod = NewCT_Percentage()
				if _aggfc := d.DecodeElement(_gdbegd.GreenMod, &_ceabe); _aggfc != nil {
					return _aggfc
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _gdbegd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_dggeg := NewEG_ColorTransform()
				_dggeg.Blue = NewCT_Percentage()
				if _fgedc := d.DecodeElement(_dggeg.Blue, &_ceabe); _fgedc != nil {
					return _fgedc
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _dggeg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_bacgg := NewEG_ColorTransform()
				_bacgg.BlueOff = NewCT_Percentage()
				if _ccged := d.DecodeElement(_bacgg.BlueOff, &_ceabe); _ccged != nil {
					return _ccged
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _bacgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_gfdceb := NewEG_ColorTransform()
				_gfdceb.BlueMod = NewCT_Percentage()
				if _ddecg := d.DecodeElement(_gfdceb.BlueMod, &_ceabe); _ddecg != nil {
					return _ddecg
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _gfdceb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_fbegb := NewEG_ColorTransform()
				_fbegb.Gamma = NewCT_GammaTransform()
				if _dgfc := d.DecodeElement(_fbegb.Gamma, &_ceabe); _dgfc != nil {
					return _dgfc
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _fbegb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_dffbe := NewEG_ColorTransform()
				_dffbe.InvGamma = NewCT_InverseGammaTransform()
				if _fgdgg := d.DecodeElement(_dffbe.InvGamma, &_ceabe); _fgdgg != nil {
					return _fgdgg
				}
				_bbcced.EG_ColorTransform = append(_bbcced.EG_ColorTransform, _dffbe)
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0052\u0067b\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _ceabe.Name)
				if _ebgcc := d.Skip(); _ebgcc != nil {
					return _ebgcc
				}
			}
		case _g.EndElement:
			break _egcd
		case _g.CharData:
		}
	}
	return nil
}

func (_eaffe ST_TextTabAlignType) Validate() error { return _eaffe.ValidateWithPath("") }

// Validate validates the CT_AlphaCeilingEffect and its children
func (_dda *CT_AlphaCeilingEffect) Validate() error {
	return _dda.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cbcfc *CT_TintEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cbcfc.HueAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0075\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_cbcfc.HueAttr)})
	}
	if _cbcfc.AmtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006d\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_cbcfc.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextParagraph struct {
	PPr        *CT_TextParagraphProperties
	EG_TextRun []*EG_TextRun
	EndParaRPr *CT_TextCharacterProperties
}

// Validate validates the CT_ColorChangeEffect and its children
func (_cbfed *CT_ColorChangeEffect) Validate() error {
	return _cbfed.ValidateWithPath("C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074")
}

type ST_PenAlignment byte

func (_abea *CT_SoftEdgesEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abea.RadAttr = 0
	for _, _cfcd := range start.Attr {
		if _cfcd.Name.Local == "\u0072\u0061\u0064" {
			_ffddc, _gaaga := _fg.ParseInt(_cfcd.Value, 10, 64)
			if _gaaga != nil {
				return _gaaga
			}
			_abea.RadAttr = _ffddc
			continue
		}
	}
	for {
		_aega, _adgb := d.Token()
		if _adgb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u006f\u0066\u0074\u0045\u0064\u0067e\u0073\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _adgb)
		}
		if _bfcff, _cebgc := _aega.(_g.EndElement); _cebgc && _bfcff.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_PresetMaterialTypeUnset             ST_PresetMaterialType = 0
	ST_PresetMaterialTypeLegacyMatte       ST_PresetMaterialType = 1
	ST_PresetMaterialTypeLegacyPlastic     ST_PresetMaterialType = 2
	ST_PresetMaterialTypeLegacyMetal       ST_PresetMaterialType = 3
	ST_PresetMaterialTypeLegacyWireframe   ST_PresetMaterialType = 4
	ST_PresetMaterialTypeMatte             ST_PresetMaterialType = 5
	ST_PresetMaterialTypePlastic           ST_PresetMaterialType = 6
	ST_PresetMaterialTypeMetal             ST_PresetMaterialType = 7
	ST_PresetMaterialTypeWarmMatte         ST_PresetMaterialType = 8
	ST_PresetMaterialTypeTranslucentPowder ST_PresetMaterialType = 9
	ST_PresetMaterialTypePowder            ST_PresetMaterialType = 10
	ST_PresetMaterialTypeDkEdge            ST_PresetMaterialType = 11
	ST_PresetMaterialTypeSoftEdge          ST_PresetMaterialType = 12
	ST_PresetMaterialTypeClear             ST_PresetMaterialType = 13
	ST_PresetMaterialTypeFlat              ST_PresetMaterialType = 14
	ST_PresetMaterialTypeSoftmetal         ST_PresetMaterialType = 15
)

// ValidateWithPath validates the EG_Media and its children, prefixing error messages with path
func (_cdcdd *EG_Media) ValidateWithPath(path string) error {
	if _cdcdd.AudioCd != nil {
		if _bedgc := _cdcdd.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _bedgc != nil {
			return _bedgc
		}
	}
	if _cdcdd.WavAudioFile != nil {
		if _bgfec := _cdcdd.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _bgfec != nil {
			return _bgfec
		}
	}
	if _cdcdd.AudioFile != nil {
		if _gegdb := _cdcdd.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _gegdb != nil {
			return _gegdb
		}
	}
	if _cdcdd.VideoFile != nil {
		if _aeede := _cdcdd.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _aeede != nil {
			return _aeede
		}
	}
	if _cdcdd.QuickTimeFile != nil {
		if _fddaag := _cdcdd.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _fddaag != nil {
			return _fddaag
		}
	}
	return nil
}

func (_caed *CT_GvmlGroupShapeNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dcgbfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_caed.CNvPr, _dcgbfe)
	_gdffa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_caed.CNvGrpSpPr, _gdffa)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_NonVisualGroupDrawingShapeProps struct {
	GrpSpLocks *CT_GroupLocking
	ExtLst     *CT_OfficeArtExtensionList
}

const (
	ST_PathShadeTypeUnset  ST_PathShadeType = 0
	ST_PathShadeTypeShape  ST_PathShadeType = 1
	ST_PathShadeTypeCircle ST_PathShadeType = 2
	ST_PathShadeTypeRect   ST_PathShadeType = 3
)

func NewCT_AlphaCeilingEffect() *CT_AlphaCeilingEffect { _dec := &CT_AlphaCeilingEffect{}; return _dec }

// ValidateWithPath validates the CT_EffectProperties and its children, prefixing error messages with path
func (_cfba *CT_EffectProperties) ValidateWithPath(path string) error {
	if _cfba.EffectLst != nil {
		if _begcf := _cfba.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _begcf != nil {
			return _begcf
		}
	}
	if _cfba.EffectDag != nil {
		if _bdbef := _cfba.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bdbef != nil {
			return _bdbef
		}
	}
	return nil
}

func (_baac *CT_TextBulletSizeFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WholeE2oFormatting and its children
func (_bbdee *CT_WholeE2oFormatting) Validate() error {
	return _bbdee.ValidateWithPath("C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}

// Validate validates the CT_AnimationChartElement and its children
func (_facg *CT_AnimationChartElement) Validate() error {
	return _facg.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

type CT_TextUnderlineLineFollowText struct{}

func NewCT_LinearShadeProperties() *CT_LinearShadeProperties {
	_adagb := &CT_LinearShadeProperties{}
	return _adagb
}

// ValidateWithPath validates the CT_GvmlConnector and its children, prefixing error messages with path
func (_cfbb *CT_GvmlConnector) ValidateWithPath(path string) error {
	if _eeee := _cfbb.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _eeee != nil {
		return _eeee
	}
	if _aefde := _cfbb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _aefde != nil {
		return _aefde
	}
	if _cfbb.Style != nil {
		if _aggad := _cfbb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _aggad != nil {
			return _aggad
		}
	}
	if _cfbb.ExtLst != nil {
		if _agafa := _cfbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agafa != nil {
			return _agafa
		}
	}
	return nil
}

func ParseUnionST_TextFontScalePercentOrPercentString(s string) (ST_TextFontScalePercentOrPercentString, error) {
	_adegf := ST_TextFontScalePercentOrPercentString{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_adegf.ST_Percentage = &s
	} else {
		_bccdd, _cdegb := _fg.ParseInt(s, 10, 64)
		if _cdegb != nil {
			return _adegf, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cdegb)
		}
		_ffabde := int32(_bccdd)
		_adegf.ST_TextFontScalePercent = &_ffabde
	}
	return _adegf, nil
}

type CT_GroupTransform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
	ChOff     *CT_Point2D
	ChExt     *CT_PositiveSize2D
}

func NewCT_GvmlShape() *CT_GvmlShape {
	_faddb := &CT_GvmlShape{}
	_faddb.NvSpPr = NewCT_GvmlShapeNonVisual()
	_faddb.SpPr = NewCT_ShapeProperties()
	return _faddb
}

func (_fccf *CT_GroupLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fccf.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fccf.NoGrpAttr))})
	}
	if _fccf.NoUngrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0055\u006e\u0067\u0072\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fccf.NoUngrpAttr))})
	}
	if _fccf.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fccf.NoSelectAttr))})
	}
	if _fccf.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fccf.NoRotAttr))})
	}
	if _fccf.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fccf.NoChangeAspectAttr))})
	}
	if _fccf.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fccf.NoMoveAttr))})
	}
	if _fccf.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fccf.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _fccf.ExtLst != nil {
		_gaeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fccf.ExtLst, _gaeb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aaaab *CT_TextSpacing) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fbcca:
	for {
		_gdgfa, _bbceg := d.Token()
		if _bbceg != nil {
			return _bbceg
		}
		switch _fcafc := _gdgfa.(type) {
		case _g.StartElement:
			switch _fcafc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}:
				_aaaab.SpcPct = NewCT_TextSpacingPercent()
				if _edede := d.DecodeElement(_aaaab.SpcPct, &_fcafc); _edede != nil {
					return _edede
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}:
				_aaaab.SpcPts = NewCT_TextSpacingPoint()
				if _gddf := d.DecodeElement(_aaaab.SpcPts, &_fcafc); _gddf != nil {
					return _gddf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061c\u0069n\u0067\u0020\u0025\u0076", _fcafc.Name)
				if _ggefd := d.Skip(); _ggefd != nil {
					return _ggefd
				}
			}
		case _g.EndElement:
			break _fbcca
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TransformEffect() *CT_TransformEffect { _ffgebg := &CT_TransformEffect{}; return _ffgebg }

type CT_QuickTimeFile struct {
	LinkAttr string
	ExtLst   *CT_OfficeArtExtensionList
}

// Validate validates the CT_ColorMappingOverride and its children
func (_aba *CT_ColorMappingOverride) Validate() error {
	return _aba.ValidateWithPath("\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}

func (_dbfcg ST_Coordinate32) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dbfcg.ST_Coordinate32Unqualified != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_dbfcg.ST_Coordinate32Unqualified)))
	}
	if _dbfcg.ST_UniversalMeasure != nil {
		e.EncodeToken(_g.CharData(*_dbfcg.ST_UniversalMeasure))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_StyleMatrixReference and its children, prefixing error messages with path
func (_ecbcg *CT_StyleMatrixReference) ValidateWithPath(path string) error {
	if _ecbcg.ScrgbClr != nil {
		if _bgcaa := _ecbcg.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _bgcaa != nil {
			return _bgcaa
		}
	}
	if _ecbcg.SrgbClr != nil {
		if _egeg := _ecbcg.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _egeg != nil {
			return _egeg
		}
	}
	if _ecbcg.HslClr != nil {
		if _bdcdbe := _ecbcg.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bdcdbe != nil {
			return _bdcdbe
		}
	}
	if _ecbcg.SysClr != nil {
		if _gagd := _ecbcg.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gagd != nil {
			return _gagd
		}
	}
	if _ecbcg.SchemeClr != nil {
		if _geegd := _ecbcg.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _geegd != nil {
			return _geegd
		}
	}
	if _ecbcg.PrstClr != nil {
		if _dffcg := _ecbcg.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dffcg != nil {
			return _dffcg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextSpacingPercent and its children, prefixing error messages with path
func (_acdf *CT_TextSpacingPercent) ValidateWithPath(path string) error {
	if _faced := _acdf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _faced != nil {
		return _faced
	}
	return nil
}

func (_fgc *CT_AnimationChartBuildProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fgc.BldAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006c\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_fgc.BldAttr)})
	}
	if _fgc.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_fgc.AnimBgAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gecaf *CT_PresetTextShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gecaf.PrstAttr = ST_TextShapeType(1)
	for _, _bbdf := range start.Attr {
		if _bbdf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_gecaf.PrstAttr.UnmarshalXMLAttr(_bbdf)
			continue
		}
	}
_gegda:
	for {
		_acfcg, _fgce := d.Token()
		if _fgce != nil {
			return _fgce
		}
		switch _edaed := _acfcg.(type) {
		case _g.StartElement:
			switch _edaed.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_gecaf.AvLst = NewCT_GeomGuideList()
				if _dadag := d.DecodeElement(_gecaf.AvLst, &_edaed); _dadag != nil {
					return _dadag
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074T\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _edaed.Name)
				if _dgbab := d.Skip(); _dgbab != nil {
					return _dgbab
				}
			}
		case _g.EndElement:
			break _gegda
		case _g.CharData:
		}
	}
	return nil
}

func (_bcdadb ST_PresetMaterialType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bcdadb.String(), start)
}

func (_fdbcad *CT_FillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fdbcad.NoFill != nil {
		_bdfbda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdbcad.NoFill, _bdfbda)
	}
	if _fdbcad.SolidFill != nil {
		_cggcg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdbcad.SolidFill, _cggcg)
	}
	if _fdbcad.GradFill != nil {
		_aebcc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdbcad.GradFill, _aebcc)
	}
	if _fdbcad.BlipFill != nil {
		_bbbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdbcad.BlipFill, _bbbf)
	}
	if _fdbcad.PattFill != nil {
		_ecgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdbcad.PattFill, _ecgc)
	}
	if _fdbcad.GrpFill != nil {
		_fdagee := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_fdbcad.GrpFill, _fdagee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_PresetTextShape() *CT_PresetTextShape {
	_fabgf := &CT_PresetTextShape{}
	_fabgf.PrstAttr = ST_TextShapeType(1)
	return _fabgf
}

// Validate validates the AG_Locking and its children
func (_ef *AG_Locking) Validate() error {
	return _ef.ValidateWithPath("\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_ecgbg *CT_TableStyleCellStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ecgbg.TcBdr != nil {
		_gagebd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0063\u0042\u0064\u0072"}}
		e.EncodeElement(_ecgbg.TcBdr, _gagebd)
	}
	if _ecgbg.Fill != nil {
		_dfece := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_ecgbg.Fill, _dfece)
	}
	if _ecgbg.FillRef != nil {
		_ggadbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_ecgbg.FillRef, _ggadbb)
	}
	if _ecgbg.Cell3D != nil {
		_defca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_ecgbg.Cell3D, _defca)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GeomGuide struct {
	NameAttr string
	FmlaAttr string
}

func (_febe ST_DgmBuildStep) ValidateWithPath(path string) error {
	switch _febe {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_febe))
	}
	return nil
}

// Validate validates the CT_AnimationChartBuildProperties and its children
func (_gdbf *CT_AnimationChartBuildProperties) Validate() error {
	return _gdbf.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewEG_TextUnderlineLine() *EG_TextUnderlineLine { _dgefb := &EG_TextUnderlineLine{}; return _dgefb }

func ParseUnionST_Coordinate32(s string) (ST_Coordinate32, error) {
	_baeec := ST_Coordinate32{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_baeec.ST_UniversalMeasure = &s
	} else {
		_cdfbg, _ggecf := _fg.ParseInt(s, 10, 32)
		if _ggecf != nil {
			return _baeec, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _ggecf)
		}
		_cgaac := int32(_cdfbg)
		_baeec.ST_Coordinate32Unqualified = &_cgaac
	}
	return _baeec, nil
}

func NewAG_Locking() *AG_Locking { _da := &AG_Locking{}; return _da }

type EG_TextBulletTypeface struct {
	BuFontTx *CT_TextBulletTypefaceFollowText
	BuFont   *CT_TextFont
}

// Validate validates the CT_ConnectorLocking and its children
func (_abgg *CT_ConnectorLocking) Validate() error {
	return _abgg.ValidateWithPath("\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_GvmlGroupShapeNonVisual and its children, prefixing error messages with path
func (_eeefg *CT_GvmlGroupShapeNonVisual) ValidateWithPath(path string) error {
	if _dbgaf := _eeefg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dbgaf != nil {
		return _dbgaf
	}
	if _edgd := _eeefg.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _edgd != nil {
		return _edgd
	}
	return nil
}

// Validate validates the CT_FlatText and its children
func (_dfbae *CT_FlatText) Validate() error {
	return _dfbae.ValidateWithPath("C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074")
}

// ValidateWithPath validates the CT_OfficeArtExtension and its children, prefixing error messages with path
func (_affed *CT_OfficeArtExtension) ValidateWithPath(path string) error { return nil }

func NewCT_AudioCD() *CT_AudioCD {
	_dgc := &CT_AudioCD{}
	_dgc.St = NewCT_AudioCDTime()
	_dgc.End = NewCT_AudioCDTime()
	return _dgc
}

func (_bdgbg ST_TextBulletSize) String() string {
	if _bdgbg.ST_TextBulletSizePercent != nil {
		return _bb.Sprintf("\u0025\u0076", *_bdgbg.ST_TextBulletSizePercent)
	}
	if _bdgbg.ST_TextBulletSizeDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_bdgbg.ST_TextBulletSizeDecimal)
	}
	return ""
}

func (_bgea ST_TextVertOverflowType) Validate() error { return _bgea.ValidateWithPath("") }

func (_beff *CT_AudioCDTime) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0072\u0061c\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _beff.TrackAttr)})
	if _beff.TimeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_beff.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GvmlConnectorNonVisual and its children, prefixing error messages with path
func (_fdee *CT_GvmlConnectorNonVisual) ValidateWithPath(path string) error {
	if _fedee := _fdee.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fedee != nil {
		return _fedee
	}
	if _bfbdf := _fdee.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _bfbdf != nil {
		return _bfbdf
	}
	return nil
}

func (_ceecf ST_AnimationDgmBuildType) String() string {
	if _ceecf.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _ceecf.ST_AnimationBuildType.String()
	}
	if _ceecf.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		return _ceecf.ST_AnimationDgmOnlyBuildType.String()
	}
	return ""
}

func (_ggbad *ST_LightRigDirection) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gafbeb, _bgffc := d.Token()
	if _bgffc != nil {
		return _bgffc
	}
	if _eacgc, _ggaabd := _gafbeb.(_g.EndElement); _ggaabd && _eacgc.Name == start.Name {
		*_ggbad = 1
		return nil
	}
	if _dbbef, _ddeda := _gafbeb.(_g.CharData); !_ddeda {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gafbeb)
	} else {
		switch string(_dbbef) {
		case "":
			*_ggbad = 0
		case "\u0074\u006c":
			*_ggbad = 1
		case "\u0074":
			*_ggbad = 2
		case "\u0074\u0072":
			*_ggbad = 3
		case "\u006c":
			*_ggbad = 4
		case "\u0072":
			*_ggbad = 5
		case "\u0062\u006c":
			*_ggbad = 6
		case "\u0062":
			*_ggbad = 7
		case "\u0062\u0072":
			*_ggbad = 8
		}
	}
	_gafbeb, _bgffc = d.Token()
	if _bgffc != nil {
		return _bgffc
	}
	if _gegb, _dacede := _gafbeb.(_g.EndElement); _dacede && _gegb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gafbeb)
}

func (_afgaae ST_PenAlignment) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_afgaae.String(), start)
}

const (
	ST_LineEndLengthUnset ST_LineEndLength = 0
	ST_LineEndLengthSm    ST_LineEndLength = 1
	ST_LineEndLengthMed   ST_LineEndLength = 2
	ST_LineEndLengthLg    ST_LineEndLength = 3
)

func NewCT_StyleMatrix() *CT_StyleMatrix {
	_ddabd := &CT_StyleMatrix{}
	_ddabd.FillStyleLst = NewCT_FillStyleList()
	_ddabd.LnStyleLst = NewCT_LineStyleList()
	_ddabd.EffectStyleLst = NewCT_EffectStyleList()
	_ddabd.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	return _ddabd
}

func (_adaa *CT_EffectList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ffec:
	for {
		_fdgfg, _begc := d.Token()
		if _begc != nil {
			return _begc
		}
		switch _gdbdd := _fdgfg.(type) {
		case _g.StartElement:
			switch _gdbdd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_adaa.Blur = NewCT_BlurEffect()
				if _daed := d.DecodeElement(_adaa.Blur, &_gdbdd); _daed != nil {
					return _daed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_adaa.FillOverlay = NewCT_FillOverlayEffect()
				if _egaf := d.DecodeElement(_adaa.FillOverlay, &_gdbdd); _egaf != nil {
					return _egaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_adaa.Glow = NewCT_GlowEffect()
				if _gacbb := d.DecodeElement(_adaa.Glow, &_gdbdd); _gacbb != nil {
					return _gacbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_adaa.InnerShdw = NewCT_InnerShadowEffect()
				if _babgg := d.DecodeElement(_adaa.InnerShdw, &_gdbdd); _babgg != nil {
					return _babgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_adaa.OuterShdw = NewCT_OuterShadowEffect()
				if _bgcf := d.DecodeElement(_adaa.OuterShdw, &_gdbdd); _bgcf != nil {
					return _bgcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_adaa.PrstShdw = NewCT_PresetShadowEffect()
				if _gcaed := d.DecodeElement(_adaa.PrstShdw, &_gdbdd); _gcaed != nil {
					return _gcaed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_adaa.Reflection = NewCT_ReflectionEffect()
				if _cbbc := d.DecodeElement(_adaa.Reflection, &_gdbdd); _cbbc != nil {
					return _cbbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_adaa.SoftEdge = NewCT_SoftEdgesEffect()
				if _daeb := d.DecodeElement(_adaa.SoftEdge, &_gdbdd); _daeb != nil {
					return _daeb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045f\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074 \u0025\u0076", _gdbdd.Name)
				if _ecceg := d.Skip(); _ecceg != nil {
					return _ecceg
				}
			}
		case _g.EndElement:
			break _ffec
		case _g.CharData:
		}
	}
	return nil
}

type CT_TextNoAutofit struct{}

// ValidateWithPath validates the EG_ThemeableEffectStyle and its children, prefixing error messages with path
func (_cbgafc *EG_ThemeableEffectStyle) ValidateWithPath(path string) error {
	if _cbgafc.Effect != nil {
		if _faccc := _cbgafc.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _faccc != nil {
			return _faccc
		}
	}
	if _cbgafc.EffectRef != nil {
		if _dggea := _cbgafc.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _dggea != nil {
			return _dggea
		}
	}
	return nil
}

type CT_TextUnderlineFillFollowText struct{}

func (_bbgaa *CT_NonVisualGraphicFrameProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bbgaa.GraphicFrameLocks != nil {
		_bbbff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072ap\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_bbgaa.GraphicFrameLocks, _bbbff)
	}
	if _bbgaa.ExtLst != nil {
		_dcde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbgaa.ExtLst, _dcde)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ST_AnimationDgmBuildType is a union type
type ST_AnimationDgmBuildType struct {
	ST_AnimationBuildType        ST_AnimationBuildType
	ST_AnimationDgmOnlyBuildType ST_AnimationDgmOnlyBuildType
}

func (_efgdd *CT_ColorReplaceEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _efgdd.ScrgbClr != nil {
		_efbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_efgdd.ScrgbClr, _efbe)
	}
	if _efgdd.SrgbClr != nil {
		_dbfgd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_efgdd.SrgbClr, _dbfgd)
	}
	if _efgdd.HslClr != nil {
		_fbcc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_efgdd.HslClr, _fbcc)
	}
	if _efgdd.SysClr != nil {
		_geec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_efgdd.SysClr, _geec)
	}
	if _efgdd.SchemeClr != nil {
		_gdbe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_efgdd.SchemeClr, _gdbe)
	}
	if _efgdd.PrstClr != nil {
		_gbeg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_efgdd.PrstClr, _gbeg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cfaff ST_TextStrikeType) ValidateWithPath(path string) error {
	switch _cfaff {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfaff))
	}
	return nil
}

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_gaeea *CT_Hyperlink) ValidateWithPath(path string) error {
	if _gaeea.Snd != nil {
		if _gfbfg := _gaeea.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _gfbfg != nil {
			return _gfbfg
		}
	}
	if _gaeea.ExtLst != nil {
		if _cfeaab := _gaeea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfeaab != nil {
			return _cfeaab
		}
	}
	return nil
}

func (_dbbcb ST_SystemColorVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ebebd := _g.Attr{}
	_ebebd.Name = name
	switch _dbbcb {
	case ST_SystemColorValUnset:
		_ebebd.Value = ""
	case ST_SystemColorValScrollBar:
		_ebebd.Value = "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case ST_SystemColorValBackground:
		_ebebd.Value = "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case ST_SystemColorValActiveCaption:
		_ebebd.Value = "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValInactiveCaption:
		_ebebd.Value = "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenu:
		_ebebd.Value = "\u006d\u0065\u006e\u0075"
	case ST_SystemColorValWindow:
		_ebebd.Value = "\u0077\u0069\u006e\u0064\u006f\u0077"
	case ST_SystemColorValWindowFrame:
		_ebebd.Value = "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case ST_SystemColorValMenuText:
		_ebebd.Value = "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case ST_SystemColorValWindowText:
		_ebebd.Value = "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case ST_SystemColorValCaptionText:
		_ebebd.Value = "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValActiveBorder:
		_ebebd.Value = "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case ST_SystemColorValInactiveBorder:
		_ebebd.Value = "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case ST_SystemColorValAppWorkspace:
		_ebebd.Value = "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case ST_SystemColorValHighlight:
		_ebebd.Value = "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case ST_SystemColorValHighlightText:
		_ebebd.Value = "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnFace:
		_ebebd.Value = "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case ST_SystemColorValBtnShadow:
		_ebebd.Value = "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case ST_SystemColorValGrayText:
		_ebebd.Value = "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnText:
		_ebebd.Value = "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInactiveCaptionText:
		_ebebd.Value = "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnHighlight:
		_ebebd.Value = "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorVal3dDkShadow:
		_ebebd.Value = "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case ST_SystemColorVal3dLight:
		_ebebd.Value = "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValInfoText:
		_ebebd.Value = "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInfoBk:
		_ebebd.Value = "\u0069\u006e\u0066\u006f\u0042\u006b"
	case ST_SystemColorValHotLight:
		_ebebd.Value = "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValGradientActiveCaption:
		_ebebd.Value = "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValGradientInactiveCaption:
		_ebebd.Value = "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenuHighlight:
		_ebebd.Value = "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValMenuBar:
		_ebebd.Value = "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return _ebebd, nil
}

func (_gdefg *CT_NoFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_adgdf, _gdbga := d.Token()
		if _gdbga != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u004e\u006f\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _gdbga)
		}
		if _egdgb, _cdagf := _adgdf.(_g.EndElement); _cdagf && _egdgb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecf *CT_AudioCDTime) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cgcg := range start.Attr {
		if _cgcg.Name.Local == "\u0074\u0072\u0061c\u006b" {
			_adcag, _aac := _fg.ParseUint(_cgcg.Value, 10, 8)
			if _aac != nil {
				return _aac
			}
			_ecf.TrackAttr = uint8(_adcag)
			continue
		}
		if _cgcg.Name.Local == "\u0074\u0069\u006d\u0065" {
			_fde, _eaed := _fg.ParseUint(_cgcg.Value, 10, 32)
			if _eaed != nil {
				return _eaed
			}
			_bcaa := uint32(_fde)
			_ecf.TimeAttr = &_bcaa
			continue
		}
	}
	for {
		_faf, _aaad := d.Token()
		if _aaad != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0054\u0069\u006d\u0065:\u0020\u0025\u0073", _aaad)
		}
		if _aafd, _fdfg := _faf.(_g.EndElement); _fdfg && _aafd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcfdg ST_AnimationChartBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fcfdg.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_g.CharData(_fcfdg.ST_AnimationBuildType.String()))
	}
	if _fcfdg.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		e.EncodeToken(_g.CharData(_fcfdg.ST_AnimationChartOnlyBuildType.String()))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// Validate validates the CT_ColorScheme and its children
func (_gcgd *CT_ColorScheme) Validate() error {
	return _gcgd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065")
}

func ParseUnionST_OnOff(s string) (_a.ST_OnOff, error) { return _a.ST_OnOff{}, nil }

// Validate validates the ThemeManager and its children
func (_effcf *ThemeManager) Validate() error {
	return _effcf.ValidateWithPath("\u0054\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072")
}

func (_ebadc *CT_GrayscaleEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_eacfe, _ecgf := d.Token()
		if _ecgf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0047\u0072\u0061\u0079\u0073\u0063\u0061l\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ecgf)
		}
		if _gcaag, _efbc := _eacfe.(_g.EndElement); _efbc && _gcaag.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OfficeStyleSheet and its children, prefixing error messages with path
func (_begbd *CT_OfficeStyleSheet) ValidateWithPath(path string) error {
	if _dfdfg := _begbd.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _dfdfg != nil {
		return _dfdfg
	}
	if _begbd.ObjectDefaults != nil {
		if _fdgb := _begbd.ObjectDefaults.ValidateWithPath(path + "\u002fO\u0062j\u0065\u0063\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"); _fdgb != nil {
			return _fdgb
		}
	}
	if _begbd.ExtraClrSchemeLst != nil {
		if _edbda := _begbd.ExtraClrSchemeLst.ValidateWithPath(path + "\u002fE\u0078t\u0072\u0061\u0043\u006c\u0072S\u0063\u0068e\u006d\u0065\u004c\u0073\u0074"); _edbda != nil {
			return _edbda
		}
	}
	if _begbd.CustClrLst != nil {
		if _gfgg := _begbd.CustClrLst.ValidateWithPath(path + "/\u0043\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"); _gfgg != nil {
			return _gfgg
		}
	}
	if _begbd.ExtLst != nil {
		if _adfd := _begbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adfd != nil {
			return _adfd
		}
	}
	return nil
}

func NewEG_ColorTransform() *EG_ColorTransform { _bfcad := &EG_ColorTransform{}; return _bfcad }

func (_egbbde ST_AnimationDgmOnlyBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_egbbde.String(), start)
}

func NewCT_EffectProperties() *CT_EffectProperties { _fbbe := &CT_EffectProperties{}; return _fbbe }

func (_ecad *CT_AnimationGraphicalObjectBuildProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ecad.BldDgm != nil {
		_eggf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		e.EncodeElement(_ecad.BldDgm, _eggf)
	}
	if _ecad.BldChart != nil {
		_gaff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_ecad.BldChart, _gaff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextWrappingTypeUnset  ST_TextWrappingType = 0
	ST_TextWrappingTypeNone   ST_TextWrappingType = 1
	ST_TextWrappingTypeSquare ST_TextWrappingType = 2
)

func NewTbl() *Tbl { _bcffb := &Tbl{}; _bcffb.CT_Table = *NewCT_Table(); return _bcffb }

const (
	ST_TextAnchoringTypeUnset ST_TextAnchoringType = 0
	ST_TextAnchoringTypeT     ST_TextAnchoringType = 1
	ST_TextAnchoringTypeCtr   ST_TextAnchoringType = 2
	ST_TextAnchoringTypeB     ST_TextAnchoringType = 3
	ST_TextAnchoringTypeJust  ST_TextAnchoringType = 4
	ST_TextAnchoringTypeDist  ST_TextAnchoringType = 5
)

func (_cgcf *CT_GvmlGraphicFrameNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_badeg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_cgcf.CNvPr, _badeg)
	_eadb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_cgcf.CNvGraphicFramePr, _eadb)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TablePropertiesChoice() *CT_TablePropertiesChoice {
	_gfedd := &CT_TablePropertiesChoice{}
	return _gfedd
}

type EG_Geometry struct {
	CustGeom *CT_CustomGeometry2D
	PrstGeom *CT_PresetGeometry2D
}

// ValidateWithPath validates the CT_GvmlGroupShapeChoice and its children, prefixing error messages with path
func (_dbadc *CT_GvmlGroupShapeChoice) ValidateWithPath(path string) error {
	for _dccee, _efgf := range _dbadc.TxSp {
		if _bgccc := _efgf.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0054\u0078\u0053\u0070\u005b\u0025\u0064\u005d", path, _dccee)); _bgccc != nil {
			return _bgccc
		}
	}
	for _ebfde, _dcba := range _dbadc.Sp {
		if _ggecc := _dcba.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _ebfde)); _ggecc != nil {
			return _ggecc
		}
	}
	for _cbed, _ffgbc := range _dbadc.CxnSp {
		if _affe := _ffgbc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _cbed)); _affe != nil {
			return _affe
		}
	}
	for _gdea, _fgebc := range _dbadc.Pic {
		if _gbdc := _fgebc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _gdea)); _gbdc != nil {
			return _gbdc
		}
	}
	for _bbdc, _effe := range _dbadc.GraphicFrame {
		if _fdaaf := _effe.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _bbdc)); _fdaaf != nil {
			return _fdaaf
		}
	}
	for _dcbf, _fgffb := range _dbadc.GrpSp {
		if _dgdad := _fgffb.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _dcbf)); _dgdad != nil {
			return _dgdad
		}
	}
	return nil
}

func (_bafaf *ThemeManager) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0068\u0065\u006d\u0065\u004d\u0061n\u0061\u0067\u0065\u0072"
	return _bafaf.CT_EmptyElement.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_PresetLineDashProperties and its children, prefixing error messages with path
func (_ccfdd *CT_PresetLineDashProperties) ValidateWithPath(path string) error {
	if _fcgfg := _ccfdd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fcgfg != nil {
		return _fcgfg
	}
	return nil
}

// ValidateWithPath validates the CT_TextNormalAutofit and its children, prefixing error messages with path
func (_gcbad *CT_TextNormalAutofit) ValidateWithPath(path string) error {
	if _gcbad.FontScaleAttr != nil {
		if _cecded := _gcbad.FontScaleAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006ce\u0041\u0074\u0074\u0072"); _cecded != nil {
			return _cecded
		}
	}
	if _gcbad.LnSpcReductionAttr != nil {
		if _gdbbd := _gcbad.LnSpcReductionAttr.ValidateWithPath(path + "\u002f\u004c\u006e\u0053pc\u0052\u0065\u0064\u0075\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gdbbd != nil {
			return _gdbbd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_InverseGammaTransform and its children, prefixing error messages with path
func (_fcfdf *CT_InverseGammaTransform) ValidateWithPath(path string) error { return nil }

func (_cdgfa *ST_EffectContainerType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cdgfa = 0
	case "\u0073\u0069\u0062":
		*_cdgfa = 1
	case "\u0074\u0072\u0065\u0065":
		*_cdgfa = 2
	}
	return nil
}

func (_fefff ST_BlendMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fgdge := _g.Attr{}
	_fgdge.Name = name
	switch _fefff {
	case ST_BlendModeUnset:
		_fgdge.Value = ""
	case ST_BlendModeOver:
		_fgdge.Value = "\u006f\u0076\u0065\u0072"
	case ST_BlendModeMult:
		_fgdge.Value = "\u006d\u0075\u006c\u0074"
	case ST_BlendModeScreen:
		_fgdge.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlendModeDarken:
		_fgdge.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_BlendModeLighten:
		_fgdge.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return _fgdge, nil
}

func (_badfa *CT_Scale2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bcaafg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0078"}}
	e.EncodeElement(_badfa.Sx, _bcaafg)
	_affa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079"}}
	e.EncodeElement(_badfa.Sy, _affa)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GroupFillProperties() *CT_GroupFillProperties {
	_fcbff := &CT_GroupFillProperties{}
	return _fcbff
}

// Validate validates the CT_GeomRect and its children
func (_gbbe *CT_GeomRect) Validate() error {
	return _gbbe.ValidateWithPath("C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_TextBodyProperties and its children, prefixing error messages with path
func (_abed *CT_TextBodyProperties) ValidateWithPath(path string) error {
	if _bbcae := _abed.VertOverflowAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _bbcae != nil {
		return _bbcae
	}
	if _gcgfe := _abed.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _gcgfe != nil {
		return _gcgfe
	}
	if _dcccb := _abed.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _dcccb != nil {
		return _dcccb
	}
	if _eeecf := _abed.WrapAttr.ValidateWithPath(path + "\u002fW\u0072\u0061\u0070\u0041\u0074\u0074r"); _eeecf != nil {
		return _eeecf
	}
	if _abed.LInsAttr != nil {
		if _fcccb := _abed.LInsAttr.ValidateWithPath(path + "\u002fL\u0049\u006e\u0073\u0041\u0074\u0074r"); _fcccb != nil {
			return _fcccb
		}
	}
	if _abed.TInsAttr != nil {
		if _ababc := _abed.TInsAttr.ValidateWithPath(path + "\u002fT\u0049\u006e\u0073\u0041\u0074\u0074r"); _ababc != nil {
			return _ababc
		}
	}
	if _abed.RInsAttr != nil {
		if _eddgc := _abed.RInsAttr.ValidateWithPath(path + "\u002fR\u0049\u006e\u0073\u0041\u0074\u0074r"); _eddgc != nil {
			return _eddgc
		}
	}
	if _abed.BInsAttr != nil {
		if _bedccd := _abed.BInsAttr.ValidateWithPath(path + "\u002fB\u0049\u006e\u0073\u0041\u0074\u0074r"); _bedccd != nil {
			return _bedccd
		}
	}
	if _abed.NumColAttr != nil {
		if *_abed.NumColAttr < 1 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0031\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_abed.NumColAttr)
		}
		if *_abed.NumColAttr > 16 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0036\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_abed.NumColAttr)
		}
	}
	if _abed.SpcColAttr != nil {
		if *_abed.SpcColAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0070\u0063\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0030\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_abed.SpcColAttr)
		}
	}
	if _ddgadb := _abed.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _ddgadb != nil {
		return _ddgadb
	}
	if _abed.PrstTxWarp != nil {
		if _decbg := _abed.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _decbg != nil {
			return _decbg
		}
	}
	if _abed.NoAutofit != nil {
		if _fecabb := _abed.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _fecabb != nil {
			return _fecabb
		}
	}
	if _abed.NormAutofit != nil {
		if _abgc := _abed.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _abgc != nil {
			return _abgc
		}
	}
	if _abed.SpAutoFit != nil {
		if _dfgag := _abed.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _dfgag != nil {
			return _dfgag
		}
	}
	if _abed.Scene3d != nil {
		if _efedf := _abed.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _efedf != nil {
			return _efedf
		}
	}
	if _abed.Sp3d != nil {
		if _afcba := _abed.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _afcba != nil {
			return _afcba
		}
	}
	if _abed.FlatTx != nil {
		if _ceaaec := _abed.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _ceaaec != nil {
			return _ceaaec
		}
	}
	if _abed.ExtLst != nil {
		if _aacdg := _abed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aacdg != nil {
			return _aacdg
		}
	}
	return nil
}

// Validate validates the CT_ColorMapping and its children
func (_eagg *CT_ColorMapping) Validate() error {
	return _eagg.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_ColorMapping and its children, prefixing error messages with path
func (_dbdg *CT_ColorMapping) ValidateWithPath(path string) error {
	if _dbdg.Bg1Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fB\u0067\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eeaf := _dbdg.Bg1Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0031\u0041\u0074\u0074\u0072"); _eeaf != nil {
		return _eeaf
	}
	if _dbdg.Tx1Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fT\u0078\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bacg := _dbdg.Tx1Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0031\u0041\u0074\u0074\u0072"); _bacg != nil {
		return _bacg
	}
	if _dbdg.Bg2Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fB\u0067\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cgga := _dbdg.Bg2Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0032\u0041\u0074\u0074\u0072"); _cgga != nil {
		return _cgga
	}
	if _dbdg.Tx2Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fT\u0078\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _feec := _dbdg.Tx2Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0032\u0041\u0074\u0074\u0072"); _feec != nil {
		return _feec
	}
	if _dbdg.Accent1Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0031\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _cgge := _dbdg.Accent1Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0031\u0041\u0074\u0074\u0072"); _cgge != nil {
		return _cgge
	}
	if _dbdg.Accent2Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0032\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _cbgcde := _dbdg.Accent2Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0032\u0041\u0074\u0074\u0072"); _cbgcde != nil {
		return _cbgcde
	}
	if _dbdg.Accent3Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0033\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _accbc := _dbdg.Accent3Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0033\u0041\u0074\u0074\u0072"); _accbc != nil {
		return _accbc
	}
	if _dbdg.Accent4Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0034\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _ggddc := _dbdg.Accent4Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0034\u0041\u0074\u0074\u0072"); _ggddc != nil {
		return _ggddc
	}
	if _dbdg.Accent5Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0035\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bdgcg := _dbdg.Accent5Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0035\u0041\u0074\u0074\u0072"); _bdgcg != nil {
		return _bdgcg
	}
	if _dbdg.Accent6Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0036\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _dcdd := _dbdg.Accent6Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0036\u0041\u0074\u0074\u0072"); _dcdd != nil {
		return _dcdd
	}
	if _dbdg.HlinkAttr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0048\u006c\u0069n\u006b\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _efbb := _dbdg.HlinkAttr.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _efbb != nil {
		return _efbb
	}
	if _dbdg.FolHlinkAttr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073/F\u006f\u006c\u0048l\u0069\u006e\u006b\u0041ttr\u0020is\u0020\u0061\u0020\u006d\u0061\u006e\u0064at\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _geeb := _dbdg.FolHlinkAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006c\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _geeb != nil {
		return _geeb
	}
	if _dbdg.ExtLst != nil {
		if _ddfe := _dbdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddfe != nil {
			return _ddfe
		}
	}
	return nil
}

func NewCT_OuterShadowEffect() *CT_OuterShadowEffect { _aeeed := &CT_OuterShadowEffect{}; return _aeeed }

func (_gecca ST_PresetCameraType) String() string {
	switch _gecca {
	case 0:
		return ""
	case 1:
		return "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case 2:
		return "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 3:
		return "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case 4:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case 5:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case 6:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case 7:
		return "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 8:
		return "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 9:
		return "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 10:
		return "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case 11:
		return "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case 12:
		return "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case 13:
		return "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case 14:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case 15:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case 16:
		return "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case 17:
		return "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 18:
		return "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case 19:
		return "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case 20:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case 21:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case 23:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case 24:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case 25:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case 26:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case 27:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case 28:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case 29:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case 30:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case 31:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case 32:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case 33:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case 34:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case 35:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case 36:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case 37:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case 38:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case 39:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case 40:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case 41:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 42:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 43:
		return "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case 44:
		return "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case 45:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case 46:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 47:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case 48:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case 49:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case 50:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case 51:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case 52:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case 53:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case 54:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case 55:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 56:
		return "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case 57:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case 58:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case 59:
		return "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 60:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case 61:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case 62:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return ""
}

// ValidateWithPath validates the CT_PositiveFixedPercentage and its children, prefixing error messages with path
func (_fceafb *CT_PositiveFixedPercentage) ValidateWithPath(path string) error {
	if _ecafg := _fceafb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ecafg != nil {
		return _ecafg
	}
	return nil
}

func (_bgde *CT_AnimationChartElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgde.BldStepAttr = ST_ChartBuildStep(1)
	for _, _bddd := range start.Attr {
		if _bddd.Name.Local == "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x" {
			_accfc, _cdfb := _fg.ParseInt(_bddd.Value, 10, 32)
			if _cdfb != nil {
				return _cdfb
			}
			_eac := int32(_accfc)
			_bgde.SeriesIdxAttr = &_eac
			continue
		}
		if _bddd.Name.Local == "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078" {
			_fddc, _bdeg := _fg.ParseInt(_bddd.Value, 10, 32)
			if _bdeg != nil {
				return _bdeg
			}
			_eeac := int32(_fddc)
			_bgde.CategoryIdxAttr = &_eeac
			continue
		}
		if _bddd.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_bgde.BldStepAttr.UnmarshalXMLAttr(_bddd)
			continue
		}
	}
	for {
		_cgg, _bfa := d.Token()
		if _bfa != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0041nim\u0061ti\u006f\u006e\u0043\u0068\u0061\u0072\u0074El\u0065\u006d\u0065\u006e\u0074\u003a\u0020%\u0073", _bfa)
		}
		if _fgeb, _agaf := _cgg.(_g.EndElement); _agaf && _fgeb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ClipboardStyleSheet struct {
	ThemeElements *CT_BaseStyles
	ClrMap        *CT_ColorMapping
}

func (_ebbba *CT_GvmlGraphicFrameNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ebbba.CNvPr = NewCT_NonVisualDrawingProps()
	_ebbba.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
_abca:
	for {
		_daef, _dbbdef := d.Token()
		if _dbbdef != nil {
			return _dbbdef
		}
		switch _abegc := _daef.(type) {
		case _g.StartElement:
			switch _abegc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _dgdgb := d.DecodeElement(_ebbba.CNvPr, &_abegc); _dgdgb != nil {
					return _dgdgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _gegef := d.DecodeElement(_ebbba.CNvGraphicFramePr, &_abegc); _gegef != nil {
					return _gegef
				}
			default:
				_fc.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004eon\u0056\u0069\u0073u\u0061\u006c\u0020\u0025\u0076", _abegc.Name)
				if _ceab := d.Skip(); _ceab != nil {
					return _ceab
				}
			}
		case _g.EndElement:
			break _abca
		case _g.CharData:
		}
	}
	return nil
}

func (_geacaa *ST_PresetColorVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dafff, _fedbf := d.Token()
	if _fedbf != nil {
		return _fedbf
	}
	if _eadff, _bbccf := _dafff.(_g.EndElement); _bbccf && _eadff.Name == start.Name {
		*_geacaa = 1
		return nil
	}
	if _begda, _fcaab := _dafff.(_g.CharData); !_fcaab {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dafff)
	} else {
		switch string(_begda) {
		case "":
			*_geacaa = 0
		case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
			*_geacaa = 1
		case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
			*_geacaa = 2
		case "\u0061\u0071\u0075\u0061":
			*_geacaa = 3
		case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_geacaa = 4
		case "\u0061\u007a\u0075r\u0065":
			*_geacaa = 5
		case "\u0062\u0065\u0069g\u0065":
			*_geacaa = 6
		case "\u0062\u0069\u0073\u0071\u0075\u0065":
			*_geacaa = 7
		case "\u0062\u006c\u0061c\u006b":
			*_geacaa = 8
		case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
			*_geacaa = 9
		case "\u0062\u006c\u0075\u0065":
			*_geacaa = 10
		case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
			*_geacaa = 11
		case "\u0062\u0072\u006fw\u006e":
			*_geacaa = 12
		case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
			*_geacaa = 13
		case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
			*_geacaa = 14
		case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
			*_geacaa = 15
		case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
			*_geacaa = 16
		case "\u0063\u006f\u0072a\u006c":
			*_geacaa = 17
		case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
			*_geacaa = 18
		case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
			*_geacaa = 19
		case "\u0063r\u0069\u006d\u0073\u006f\u006e":
			*_geacaa = 20
		case "\u0063\u0079\u0061\u006e":
			*_geacaa = 21
		case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
			*_geacaa = 22
		case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
			*_geacaa = 23
		case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_geacaa = 24
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_geacaa = 25
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
			*_geacaa = 26
		case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
			*_geacaa = 27
		case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
			*_geacaa = 28
		case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
			*_geacaa = 29
		case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
			*_geacaa = 30
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_geacaa = 31
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_geacaa = 32
		case "\u0064a\u0072\u006b\u0052\u0065\u0064":
			*_geacaa = 33
		case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_geacaa = 34
		case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 35
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_geacaa = 36
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_geacaa = 37
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_geacaa = 38
		case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_geacaa = 39
		case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_geacaa = 40
		case "\u0064\u006b\u0042\u006c\u0075\u0065":
			*_geacaa = 41
		case "\u0064\u006b\u0043\u0079\u0061\u006e":
			*_geacaa = 42
		case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_geacaa = 43
		case "\u0064\u006b\u0047\u0072\u0061\u0079":
			*_geacaa = 44
		case "\u0064\u006b\u0047\u0072\u0065\u0079":
			*_geacaa = 45
		case "\u0064k\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 46
		case "\u0064k\u004b\u0068\u0061\u006b\u0069":
			*_geacaa = 47
		case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
			*_geacaa = 48
		case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 49
		case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_geacaa = 50
		case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_geacaa = 51
		case "\u0064\u006b\u0052e\u0064":
			*_geacaa = 52
		case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_geacaa = 53
		case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 54
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_geacaa = 55
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_geacaa = 56
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_geacaa = 57
		case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_geacaa = 58
		case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_geacaa = 59
		case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
			*_geacaa = 60
		case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_geacaa = 61
		case "\u0064i\u006d\u0047\u0072\u0061\u0079":
			*_geacaa = 62
		case "\u0064i\u006d\u0047\u0072\u0065\u0079":
			*_geacaa = 63
		case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
			*_geacaa = 64
		case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
			*_geacaa = 65
		case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
			*_geacaa = 66
		case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 67
		case "\u0066u\u0063\u0068\u0073\u0069\u0061":
			*_geacaa = 68
		case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
			*_geacaa = 69
		case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
			*_geacaa = 70
		case "\u0067\u006f\u006c\u0064":
			*_geacaa = 71
		case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
			*_geacaa = 72
		case "\u0067\u0072\u0061\u0079":
			*_geacaa = 73
		case "\u0067\u0072\u0065\u0079":
			*_geacaa = 74
		case "\u0067\u0072\u0065e\u006e":
			*_geacaa = 75
		case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
			*_geacaa = 76
		case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
			*_geacaa = 77
		case "\u0068o\u0074\u0050\u0069\u006e\u006b":
			*_geacaa = 78
		case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
			*_geacaa = 79
		case "\u0069\u006e\u0064\u0069\u0067\u006f":
			*_geacaa = 80
		case "\u0069\u0076\u006fr\u0079":
			*_geacaa = 81
		case "\u006b\u0068\u0061k\u0069":
			*_geacaa = 82
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
			*_geacaa = 83
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
			*_geacaa = 84
		case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
			*_geacaa = 85
		case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
			*_geacaa = 86
		case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
			*_geacaa = 87
		case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
			*_geacaa = 88
		case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
			*_geacaa = 89
		case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
			*_geacaa = 90
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_geacaa = 91
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
			*_geacaa = 92
		case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 93
		case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
			*_geacaa = 94
		case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_geacaa = 95
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 96
		case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_geacaa = 97
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
			*_geacaa = 98
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
			*_geacaa = 99
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
			*_geacaa = 100
		case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_geacaa = 101
		case "\u006c\u0074\u0042\u006c\u0075\u0065":
			*_geacaa = 102
		case "\u006ct\u0043\u006f\u0072\u0061\u006c":
			*_geacaa = 103
		case "\u006c\u0074\u0043\u0079\u0061\u006e":
			*_geacaa = 104
		case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
			*_geacaa = 105
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_geacaa = 106
		case "\u006c\u0074\u0047\u0072\u0065\u0079":
			*_geacaa = 107
		case "\u006ct\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 108
		case "\u006c\u0074\u0050\u0069\u006e\u006b":
			*_geacaa = 109
		case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_geacaa = 110
		case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 111
		case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
			*_geacaa = 112
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_geacaa = 113
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_geacaa = 114
		case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
			*_geacaa = 115
		case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_geacaa = 116
		case "\u006c\u0069\u006d\u0065":
			*_geacaa = 117
		case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
			*_geacaa = 118
		case "\u006c\u0069\u006ee\u006e":
			*_geacaa = 119
		case "\u006da\u0067\u0065\u006e\u0074\u0061":
			*_geacaa = 120
		case "\u006d\u0061\u0072\u006f\u006f\u006e":
			*_geacaa = 121
		case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_geacaa = 122
		case "\u006de\u0064\u0042\u006c\u0075\u0065":
			*_geacaa = 123
		case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
			*_geacaa = 124
		case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
			*_geacaa = 125
		case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 126
		case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_geacaa = 127
		case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_geacaa = 128
		case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_geacaa = 129
		case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_geacaa = 130
		case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_geacaa = 131
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
			*_geacaa = 132
		case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
			*_geacaa = 133
		case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
			*_geacaa = 134
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
			*_geacaa = 135
		case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_geacaa = 136
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_geacaa = 137
		case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_geacaa = 138
		case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_geacaa = 139
		case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
			*_geacaa = 140
		case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
			*_geacaa = 141
		case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
			*_geacaa = 142
		case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
			*_geacaa = 143
		case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
			*_geacaa = 144
		case "\u006e\u0061\u0076\u0079":
			*_geacaa = 145
		case "\u006fl\u0064\u004c\u0061\u0063\u0065":
			*_geacaa = 146
		case "\u006f\u006c\u0069v\u0065":
			*_geacaa = 147
		case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
			*_geacaa = 148
		case "\u006f\u0072\u0061\u006e\u0067\u0065":
			*_geacaa = 149
		case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
			*_geacaa = 150
		case "\u006f\u0072\u0063\u0068\u0069\u0064":
			*_geacaa = 151
		case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_geacaa = 152
		case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
			*_geacaa = 153
		case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_geacaa = 154
		case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_geacaa = 155
		case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
			*_geacaa = 156
		case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
			*_geacaa = 157
		case "\u0070\u0065\u0072\u0075":
			*_geacaa = 158
		case "\u0070\u0069\u006e\u006b":
			*_geacaa = 159
		case "\u0070\u006c\u0075\u006d":
			*_geacaa = 160
		case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
			*_geacaa = 161
		case "\u0070\u0075\u0072\u0070\u006c\u0065":
			*_geacaa = 162
		case "\u0072\u0065\u0064":
			*_geacaa = 163
		case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
			*_geacaa = 164
		case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
			*_geacaa = 165
		case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
			*_geacaa = 166
		case "\u0073\u0061\u006c\u006d\u006f\u006e":
			*_geacaa = 167
		case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
			*_geacaa = 168
		case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 169
		case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
			*_geacaa = 170
		case "\u0073\u0069\u0065\u006e\u006e\u0061":
			*_geacaa = 171
		case "\u0073\u0069\u006c\u0076\u0065\u0072":
			*_geacaa = 172
		case "\u0073k\u0079\u0042\u006c\u0075\u0065":
			*_geacaa = 173
		case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
			*_geacaa = 174
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
			*_geacaa = 175
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
			*_geacaa = 176
		case "\u0073\u006e\u006f\u0077":
			*_geacaa = 177
		case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 178
		case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
			*_geacaa = 179
		case "\u0074\u0061\u006e":
			*_geacaa = 180
		case "\u0074\u0065\u0061\u006c":
			*_geacaa = 181
		case "\u0074h\u0069\u0073\u0074\u006c\u0065":
			*_geacaa = 182
		case "\u0074\u006f\u006d\u0061\u0074\u006f":
			*_geacaa = 183
		case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
			*_geacaa = 184
		case "\u0076\u0069\u006f\u006c\u0065\u0074":
			*_geacaa = 185
		case "\u0077\u0068\u0065a\u0074":
			*_geacaa = 186
		case "\u0077\u0068\u0069t\u0065":
			*_geacaa = 187
		case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
			*_geacaa = 188
		case "\u0079\u0065\u006c\u006c\u006f\u0077":
			*_geacaa = 189
		case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
			*_geacaa = 190
		}
	}
	_dafff, _fedbf = d.Token()
	if _fedbf != nil {
		return _fedbf
	}
	if _bbcegb, _ggedc := _dafff.(_g.EndElement); _ggedc && _bbcegb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dafff)
}

type CT_GroupFillProperties struct{}

func (_fcdbd *ST_AdjCoordinate) Validate() error { return _fcdbd.ValidateWithPath("") }

func NewCT_NonVisualPictureProperties() *CT_NonVisualPictureProperties {
	_ebbca := &CT_NonVisualPictureProperties{}
	return _ebbca
}

func (_aabde *CT_StretchInfoProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_acde:
	for {
		_gdeb, _dcaef := d.Token()
		if _dcaef != nil {
			return _dcaef
		}
		switch _abcac := _gdeb.(type) {
		case _g.StartElement:
			switch _abcac.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}:
				_aabde.FillRect = NewCT_RelativeRect()
				if _cgfef := d.DecodeElement(_aabde.FillRect, &_abcac); _cgfef != nil {
					return _cgfef
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066\u006f\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _abcac.Name)
				if _dffad := d.Skip(); _dffad != nil {
					return _dffad
				}
			}
		case _g.EndElement:
			break _acde
		case _g.CharData:
		}
	}
	return nil
}

func (_bcde *CT_FillEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bcde.NoFill != nil {
		_fdef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcde.NoFill, _fdef)
	}
	if _bcde.SolidFill != nil {
		_ecadf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcde.SolidFill, _ecadf)
	}
	if _bcde.GradFill != nil {
		_gaba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcde.GradFill, _gaba)
	}
	if _bcde.BlipFill != nil {
		_ebbgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcde.BlipFill, _ebbgf)
	}
	if _bcde.PattFill != nil {
		_eeea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcde.PattFill, _eeea)
	}
	if _bcde.GrpFill != nil {
		_cfaeg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bcde.GrpFill, _cfaeg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_Cell3D struct {
	PrstMaterialAttr ST_PresetMaterialType
	Bevel            *CT_Bevel
	LightRig         *CT_LightRig
	ExtLst           *CT_OfficeArtExtensionList
}

// Validate validates the CT_Path2DCubicBezierTo and its children
func (_adabd *CT_Path2DCubicBezierTo) Validate() error {
	return _adabd.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f")
}

func NewEG_ShadeProperties() *EG_ShadeProperties { _aeggbg := &EG_ShadeProperties{}; return _aeggbg }

func (_fgafb ST_CompoundLine) Validate() error { return _fgafb.ValidateWithPath("") }

type CT_TableGrid struct{ GridCol []*CT_TableCol }

func (_bcaef *CT_PictureLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ffgdd := range start.Attr {
		if _ffgdd.Name.Local == "\u006e\u006f\u0043\u0072\u006f\u0070" {
			_gaagd, _afaf := _fg.ParseBool(_ffgdd.Value)
			if _afaf != nil {
				return _afaf
			}
			_bcaef.NoCropAttr = &_gaagd
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_acda, _dagcc := _fg.ParseBool(_ffgdd.Value)
			if _dagcc != nil {
				return _dagcc
			}
			_bcaef.NoGrpAttr = &_acda
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_ggaee, _cbgbb := _fg.ParseBool(_ffgdd.Value)
			if _cbgbb != nil {
				return _cbgbb
			}
			_bcaef.NoSelectAttr = &_ggaee
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_ccbb, _adfe := _fg.ParseBool(_ffgdd.Value)
			if _adfe != nil {
				return _adfe
			}
			_bcaef.NoRotAttr = &_ccbb
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gcbfa, _fgcfe := _fg.ParseBool(_ffgdd.Value)
			if _fgcfe != nil {
				return _fgcfe
			}
			_bcaef.NoChangeAspectAttr = &_gcbfa
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_cdgffb, _afaag := _fg.ParseBool(_ffgdd.Value)
			if _afaag != nil {
				return _afaag
			}
			_bcaef.NoMoveAttr = &_cdgffb
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_agcc, _ecceac := _fg.ParseBool(_ffgdd.Value)
			if _ecceac != nil {
				return _ecceac
			}
			_bcaef.NoResizeAttr = &_agcc
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_ffdfd, _fcgdc := _fg.ParseBool(_ffgdd.Value)
			if _fcgdc != nil {
				return _fcgdc
			}
			_bcaef.NoEditPointsAttr = &_ffdfd
			continue
		}
		if _ffgdd.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_baeae, _babfbe := _fg.ParseBool(_ffgdd.Value)
			if _babfbe != nil {
				return _babfbe
			}
			_bcaef.NoAdjustHandlesAttr = &_baeae
			continue
		}
		if _ffgdd.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_aefc, _ageab := _fg.ParseBool(_ffgdd.Value)
			if _ageab != nil {
				return _ageab
			}
			_bcaef.NoChangeArrowheadsAttr = &_aefc
			continue
		}
		if _ffgdd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_dafcgd, _dggab := _fg.ParseBool(_ffgdd.Value)
			if _dggab != nil {
				return _dggab
			}
			_bcaef.NoChangeShapeTypeAttr = &_dafcgd
			continue
		}
	}
_fafc:
	for {
		_cedd, _gage := d.Token()
		if _gage != nil {
			return _gage
		}
		switch _geed := _cedd.(type) {
		case _g.StartElement:
			switch _geed.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcaef.ExtLst = NewCT_OfficeArtExtensionList()
				if _dagee := d.DecodeElement(_bcaef.ExtLst, &_geed); _dagee != nil {
					return _dagee
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _geed.Name)
				if _edeee := d.Skip(); _edeee != nil {
					return _edeee
				}
			}
		case _g.EndElement:
			break _fafc
		case _g.CharData:
		}
	}
	return nil
}

func (_gbeb *CT_GeomGuide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _deabg := range start.Attr {
		if _deabg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddgfa, _abffg := _deabg.Value, error(nil)
			if _abffg != nil {
				return _abffg
			}
			_gbeb.NameAttr = _ddgfa
			continue
		}
		if _deabg.Name.Local == "\u0066\u006d\u006c\u0061" {
			_dgfdc, _dbfcb := _deabg.Value, error(nil)
			if _dbfcb != nil {
				return _dbfcb
			}
			_gbeb.FmlaAttr = _dgfdc
			continue
		}
	}
	for {
		_fbffb, _bbde := d.Token()
		if _bbde != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065o\u006d\u0047\u0075\u0069\u0064\u0065\u003a\u0020\u0025\u0073", _bbde)
		}
		if _effd, _eace := _fbffb.(_g.EndElement); _eace && _effd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbcba *ST_BlendMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccbc, _febff := d.Token()
	if _febff != nil {
		return _febff
	}
	if _ccbagdg, _gffce := _ccbc.(_g.EndElement); _gffce && _ccbagdg.Name == start.Name {
		*_gbcba = 1
		return nil
	}
	if _becac, _ffebc := _ccbc.(_g.CharData); !_ffebc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccbc)
	} else {
		switch string(_becac) {
		case "":
			*_gbcba = 0
		case "\u006f\u0076\u0065\u0072":
			*_gbcba = 1
		case "\u006d\u0075\u006c\u0074":
			*_gbcba = 2
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_gbcba = 3
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_gbcba = 4
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_gbcba = 5
		}
	}
	_ccbc, _febff = d.Token()
	if _febff != nil {
		return _febff
	}
	if _acefbe, _becefg := _ccbc.(_g.EndElement); _becefg && _acefbe.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccbc)
}

// Validate validates the CT_Percentage and its children
func (_ebaccf *CT_Percentage) Validate() error {
	return _ebaccf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

// Validate validates the CT_AudioFile and its children
func (_adg *CT_AudioFile) Validate() error {
	return _adg.ValidateWithPath("\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}

type CT_TableCellProperties struct {
	MarLAttr         *ST_Coordinate32
	MarRAttr         *ST_Coordinate32
	MarTAttr         *ST_Coordinate32
	MarBAttr         *ST_Coordinate32
	VertAttr         ST_TextVerticalType
	AnchorAttr       ST_TextAnchoringType
	AnchorCtrAttr    *bool
	HorzOverflowAttr ST_TextHorzOverflowType
	LnL              *CT_LineProperties
	LnR              *CT_LineProperties
	LnT              *CT_LineProperties
	LnB              *CT_LineProperties
	LnTlToBr         *CT_LineProperties
	LnBlToTr         *CT_LineProperties
	Cell3D           *CT_Cell3D
	NoFill           *CT_NoFillProperties
	SolidFill        *CT_SolidColorFillProperties
	GradFill         *CT_GradientFillProperties
	BlipFill         *CT_BlipFillProperties
	PattFill         *CT_PatternFillProperties
	GrpFill          *CT_GroupFillProperties
	Headers          *CT_Headers
	ExtLst           *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_ContentPartLocking and its children, prefixing error messages with path
func (_cegf *CT_ContentPartLocking) ValidateWithPath(path string) error {
	if _cegf.ExtLst != nil {
		if _fabd := _cegf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fabd != nil {
			return _fabd
		}
	}
	return nil
}

func (_gecdg ST_LineEndLength) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gecdg.String(), start)
}

func (_eceb *CT_BackgroundFillStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fbe:
	for {
		_agg, _gbe := d.Token()
		if _gbe != nil {
			return _gbe
		}
		switch _ddc := _agg.(type) {
		case _g.StartElement:
			switch _ddc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fba := NewEG_FillProperties()
				_fba.NoFill = NewCT_NoFillProperties()
				if _geda := d.DecodeElement(_fba.NoFill, &_ddc); _geda != nil {
					return _geda
				}
				_eceb.EG_FillProperties = append(_eceb.EG_FillProperties, _fba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_aff := NewEG_FillProperties()
				_aff.SolidFill = NewCT_SolidColorFillProperties()
				if _afcc := d.DecodeElement(_aff.SolidFill, &_ddc); _afcc != nil {
					return _afcc
				}
				_eceb.EG_FillProperties = append(_eceb.EG_FillProperties, _aff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ebg := NewEG_FillProperties()
				_ebg.GradFill = NewCT_GradientFillProperties()
				if _fcca := d.DecodeElement(_ebg.GradFill, &_ddc); _fcca != nil {
					return _fcca
				}
				_eceb.EG_FillProperties = append(_eceb.EG_FillProperties, _ebg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fbda := NewEG_FillProperties()
				_fbda.BlipFill = NewCT_BlipFillProperties()
				if _fcff := d.DecodeElement(_fbda.BlipFill, &_ddc); _fcff != nil {
					return _fcff
				}
				_eceb.EG_FillProperties = append(_eceb.EG_FillProperties, _fbda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_gge := NewEG_FillProperties()
				_gge.PattFill = NewCT_PatternFillProperties()
				if _addb := d.DecodeElement(_gge.PattFill, &_ddc); _addb != nil {
					return _addb
				}
				_eceb.EG_FillProperties = append(_eceb.EG_FillProperties, _gge)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cbef := NewEG_FillProperties()
				_cbef.GrpFill = NewCT_GroupFillProperties()
				if _gfbc := d.DecodeElement(_cbef.GrpFill, &_ddc); _gfbc != nil {
					return _gfbc
				}
				_eceb.EG_FillProperties = append(_eceb.EG_FillProperties, _cbef)
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0042\u0061c\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ddc.Name)
				if _cbda := d.Skip(); _cbda != nil {
					return _cbda
				}
			}
		case _g.EndElement:
			break _fbe
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Percentage() *CT_Percentage { _effdf := &CT_Percentage{}; return _effdf }

func (_cgbgf *CT_GvmlConnector) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_facgg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_cgbgf.NvCxnSpPr, _facgg)
	_fecdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cgbgf.SpPr, _fecdc)
	if _cgbgf.Style != nil {
		_fbdac := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cgbgf.Style, _fbdac)
	}
	if _cgbgf.ExtLst != nil {
		_cdbed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgbgf.ExtLst, _cdbed)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fbcce *CT_TextBulletSizePoint) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _fbcce.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_ColorChoice and its children, prefixing error messages with path
func (_efcac *EG_ColorChoice) ValidateWithPath(path string) error {
	if _efcac.ScrgbClr != nil {
		if _ggeab := _efcac.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ggeab != nil {
			return _ggeab
		}
	}
	if _efcac.SrgbClr != nil {
		if _agbec := _efcac.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _agbec != nil {
			return _agbec
		}
	}
	if _efcac.HslClr != nil {
		if _bcfebb := _efcac.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bcfebb != nil {
			return _bcfebb
		}
	}
	if _efcac.SysClr != nil {
		if _dfggf := _efcac.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dfggf != nil {
			return _dfggf
		}
	}
	if _efcac.SchemeClr != nil {
		if _ggdeg := _efcac.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ggdeg != nil {
			return _ggdeg
		}
	}
	if _efcac.PrstClr != nil {
		if _afgc := _efcac.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _afgc != nil {
			return _afgc
		}
	}
	return nil
}

const (
	ST_AnimationDgmOnlyBuildTypeUnset     ST_AnimationDgmOnlyBuildType = 0
	ST_AnimationDgmOnlyBuildTypeOne       ST_AnimationDgmOnlyBuildType = 1
	ST_AnimationDgmOnlyBuildTypeLvlOne    ST_AnimationDgmOnlyBuildType = 2
	ST_AnimationDgmOnlyBuildTypeLvlAtOnce ST_AnimationDgmOnlyBuildType = 3
)

func (_aefac ST_TextCapsType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_aefac.String(), start)
}

// Validate validates the CT_DefaultShapeDefinition and its children
func (_dbca *CT_DefaultShapeDefinition) Validate() error {
	return _dbca.ValidateWithPath("\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn")
}

type CT_ShapeStyle struct {
	LnRef     *CT_StyleMatrixReference
	FillRef   *CT_StyleMatrixReference
	EffectRef *CT_StyleMatrixReference
	FontRef   *CT_FontReference
}

// ValidateWithPath validates the CT_EffectStyleItem and its children, prefixing error messages with path
func (_fbbg *CT_EffectStyleItem) ValidateWithPath(path string) error {
	if _fbbg.EffectLst != nil {
		if _gdeg := _fbbg.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _gdeg != nil {
			return _gdeg
		}
	}
	if _fbbg.EffectDag != nil {
		if _bgdee := _fbbg.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bgdee != nil {
			return _bgdee
		}
	}
	if _fbbg.Scene3d != nil {
		if _edcf := _fbbg.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _edcf != nil {
			return _edcf
		}
	}
	if _fbbg.Sp3d != nil {
		if _adcfg := _fbbg.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _adcfg != nil {
			return _adcfg
		}
	}
	return nil
}

type CT_SchemeColor struct {
	ValAttr           ST_SchemeColorVal
	EG_ColorTransform []*EG_ColorTransform
}

func NewThemeManager() *ThemeManager {
	_afgcc := &ThemeManager{}
	_afgcc.CT_EmptyElement = *NewCT_EmptyElement()
	return _afgcc
}

func (_cgde ST_PresetColorVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_caedc := _g.Attr{}
	_caedc.Name = name
	switch _cgde {
	case ST_PresetColorValUnset:
		_caedc.Value = ""
	case ST_PresetColorValAliceBlue:
		_caedc.Value = "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValAntiqueWhite:
		_caedc.Value = "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValAqua:
		_caedc.Value = "\u0061\u0071\u0075\u0061"
	case ST_PresetColorValAquamarine:
		_caedc.Value = "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValAzure:
		_caedc.Value = "\u0061\u007a\u0075r\u0065"
	case ST_PresetColorValBeige:
		_caedc.Value = "\u0062\u0065\u0069g\u0065"
	case ST_PresetColorValBisque:
		_caedc.Value = "\u0062\u0069\u0073\u0071\u0075\u0065"
	case ST_PresetColorValBlack:
		_caedc.Value = "\u0062\u006c\u0061c\u006b"
	case ST_PresetColorValBlanchedAlmond:
		_caedc.Value = "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case ST_PresetColorValBlue:
		_caedc.Value = "\u0062\u006c\u0075\u0065"
	case ST_PresetColorValBlueViolet:
		_caedc.Value = "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValBrown:
		_caedc.Value = "\u0062\u0072\u006fw\u006e"
	case ST_PresetColorValBurlyWood:
		_caedc.Value = "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case ST_PresetColorValCadetBlue:
		_caedc.Value = "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValChartreuse:
		_caedc.Value = "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case ST_PresetColorValChocolate:
		_caedc.Value = "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case ST_PresetColorValCoral:
		_caedc.Value = "\u0063\u006f\u0072a\u006c"
	case ST_PresetColorValCornflowerBlue:
		_caedc.Value = "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case ST_PresetColorValCornsilk:
		_caedc.Value = "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case ST_PresetColorValCrimson:
		_caedc.Value = "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case ST_PresetColorValCyan:
		_caedc.Value = "\u0063\u0079\u0061\u006e"
	case ST_PresetColorValDarkBlue:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkCyan:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDarkGoldenrod:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDarkGray:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkGrey:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkGreen:
		_caedc.Value = "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValDarkKhaki:
		_caedc.Value = "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case ST_PresetColorValDarkMagenta:
		_caedc.Value = "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValDarkOliveGreen:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkOrange:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDarkOrchid:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDarkRed:
		_caedc.Value = "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case ST_PresetColorValDarkSalmon:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDarkSeaGreen:
		_caedc.Value = "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkSlateBlue:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkSlateGray:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkSlateGrey:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkTurquoise:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDarkViolet:
		_caedc.Value = "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDkBlue:
		_caedc.Value = "\u0064\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkCyan:
		_caedc.Value = "\u0064\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDkGoldenrod:
		_caedc.Value = "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDkGray:
		_caedc.Value = "\u0064\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkGrey:
		_caedc.Value = "\u0064\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkGreen:
		_caedc.Value = "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkKhaki:
		_caedc.Value = "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case ST_PresetColorValDkMagenta:
		_caedc.Value = "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case ST_PresetColorValDkOliveGreen:
		_caedc.Value = "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkOrange:
		_caedc.Value = "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDkOrchid:
		_caedc.Value = "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDkRed:
		_caedc.Value = "\u0064\u006b\u0052e\u0064"
	case ST_PresetColorValDkSalmon:
		_caedc.Value = "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDkSeaGreen:
		_caedc.Value = "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkSlateBlue:
		_caedc.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkSlateGray:
		_caedc.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkSlateGrey:
		_caedc.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkTurquoise:
		_caedc.Value = "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDkViolet:
		_caedc.Value = "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDeepPink:
		_caedc.Value = "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case ST_PresetColorValDeepSkyBlue:
		_caedc.Value = "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDimGray:
		_caedc.Value = "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDimGrey:
		_caedc.Value = "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDodgerBlue:
		_caedc.Value = "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValFirebrick:
		_caedc.Value = "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case ST_PresetColorValFloralWhite:
		_caedc.Value = "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValForestGreen:
		_caedc.Value = "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValFuchsia:
		_caedc.Value = "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case ST_PresetColorValGainsboro:
		_caedc.Value = "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case ST_PresetColorValGhostWhite:
		_caedc.Value = "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValGold:
		_caedc.Value = "\u0067\u006f\u006c\u0064"
	case ST_PresetColorValGoldenrod:
		_caedc.Value = "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case ST_PresetColorValGray:
		_caedc.Value = "\u0067\u0072\u0061\u0079"
	case ST_PresetColorValGrey:
		_caedc.Value = "\u0067\u0072\u0065\u0079"
	case ST_PresetColorValGreen:
		_caedc.Value = "\u0067\u0072\u0065e\u006e"
	case ST_PresetColorValGreenYellow:
		_caedc.Value = "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValHoneydew:
		_caedc.Value = "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case ST_PresetColorValHotPink:
		_caedc.Value = "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValIndianRed:
		_caedc.Value = "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case ST_PresetColorValIndigo:
		_caedc.Value = "\u0069\u006e\u0064\u0069\u0067\u006f"
	case ST_PresetColorValIvory:
		_caedc.Value = "\u0069\u0076\u006fr\u0079"
	case ST_PresetColorValKhaki:
		_caedc.Value = "\u006b\u0068\u0061k\u0069"
	case ST_PresetColorValLavender:
		_caedc.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case ST_PresetColorValLavenderBlush:
		_caedc.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case ST_PresetColorValLawnGreen:
		_caedc.Value = "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLemonChiffon:
		_caedc.Value = "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case ST_PresetColorValLightBlue:
		_caedc.Value = "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValLightCoral:
		_caedc.Value = "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLightCyan:
		_caedc.Value = "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case ST_PresetColorValLightGoldenrodYellow:
		_caedc.Value = "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case ST_PresetColorValLightGray:
		_caedc.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PresetColorValLightGrey:
		_caedc.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case ST_PresetColorValLightGreen:
		_caedc.Value = "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightPink:
		_caedc.Value = "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case ST_PresetColorValLightSalmon:
		_caedc.Value = "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLightSeaGreen:
		_caedc.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightSkyBlue:
		_caedc.Value = "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightSlateGray:
		_caedc.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLightSlateGrey:
		_caedc.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLightSteelBlue:
		_caedc.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightYellow:
		_caedc.Value = "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtBlue:
		_caedc.Value = "\u006c\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtCoral:
		_caedc.Value = "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLtCyan:
		_caedc.Value = "\u006c\u0074\u0043\u0079\u0061\u006e"
	case ST_PresetColorValLtGoldenrodYellow:
		_caedc.Value = "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtGray:
		_caedc.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtGrey:
		_caedc.Value = "\u006c\u0074\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtGreen:
		_caedc.Value = "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtPink:
		_caedc.Value = "\u006c\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValLtSalmon:
		_caedc.Value = "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLtSeaGreen:
		_caedc.Value = "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtSkyBlue:
		_caedc.Value = "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case ST_PresetColorValLtSlateGray:
		_caedc.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtSlateGrey:
		_caedc.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtSteelBlue:
		_caedc.Value = "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtYellow:
		_caedc.Value = "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLime:
		_caedc.Value = "\u006c\u0069\u006d\u0065"
	case ST_PresetColorValLimeGreen:
		_caedc.Value = "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLinen:
		_caedc.Value = "\u006c\u0069\u006ee\u006e"
	case ST_PresetColorValMagenta:
		_caedc.Value = "\u006da\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValMaroon:
		_caedc.Value = "\u006d\u0061\u0072\u006f\u006f\u006e"
	case ST_PresetColorValMedAquamarine:
		_caedc.Value = "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMedBlue:
		_caedc.Value = "\u006de\u0064\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedOrchid:
		_caedc.Value = "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case ST_PresetColorValMedPurple:
		_caedc.Value = "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case ST_PresetColorValMedSeaGreen:
		_caedc.Value = "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedSlateBlue:
		_caedc.Value = "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedSpringGreen:
		_caedc.Value = "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedTurquoise:
		_caedc.Value = "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMedVioletRed:
		_caedc.Value = "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMediumAquamarine:
		_caedc.Value = "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMediumBlue:
		_caedc.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumOrchid:
		_caedc.Value = "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValMediumPurple:
		_caedc.Value = "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValMediumSeaGreen:
		_caedc.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumSlateBlue:
		_caedc.Value = "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumSpringGreen:
		_caedc.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumTurquoise:
		_caedc.Value = "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMediumVioletRed:
		_caedc.Value = "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMidnightBlue:
		_caedc.Value = "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMintCream:
		_caedc.Value = "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case ST_PresetColorValMistyRose:
		_caedc.Value = "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case ST_PresetColorValMoccasin:
		_caedc.Value = "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case ST_PresetColorValNavajoWhite:
		_caedc.Value = "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValNavy:
		_caedc.Value = "\u006e\u0061\u0076\u0079"
	case ST_PresetColorValOldLace:
		_caedc.Value = "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case ST_PresetColorValOlive:
		_caedc.Value = "\u006f\u006c\u0069v\u0065"
	case ST_PresetColorValOliveDrab:
		_caedc.Value = "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case ST_PresetColorValOrange:
		_caedc.Value = "\u006f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValOrangeRed:
		_caedc.Value = "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case ST_PresetColorValOrchid:
		_caedc.Value = "\u006f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValPaleGoldenrod:
		_caedc.Value = "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValPaleGreen:
		_caedc.Value = "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValPaleTurquoise:
		_caedc.Value = "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValPaleVioletRed:
		_caedc.Value = "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValPapayaWhip:
		_caedc.Value = "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case ST_PresetColorValPeachPuff:
		_caedc.Value = "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case ST_PresetColorValPeru:
		_caedc.Value = "\u0070\u0065\u0072\u0075"
	case ST_PresetColorValPink:
		_caedc.Value = "\u0070\u0069\u006e\u006b"
	case ST_PresetColorValPlum:
		_caedc.Value = "\u0070\u006c\u0075\u006d"
	case ST_PresetColorValPowderBlue:
		_caedc.Value = "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValPurple:
		_caedc.Value = "\u0070\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValRed:
		_caedc.Value = "\u0072\u0065\u0064"
	case ST_PresetColorValRosyBrown:
		_caedc.Value = "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case ST_PresetColorValRoyalBlue:
		_caedc.Value = "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValSaddleBrown:
		_caedc.Value = "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSalmon:
		_caedc.Value = "\u0073\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValSandyBrown:
		_caedc.Value = "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSeaGreen:
		_caedc.Value = "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSeaShell:
		_caedc.Value = "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case ST_PresetColorValSienna:
		_caedc.Value = "\u0073\u0069\u0065\u006e\u006e\u0061"
	case ST_PresetColorValSilver:
		_caedc.Value = "\u0073\u0069\u006c\u0076\u0065\u0072"
	case ST_PresetColorValSkyBlue:
		_caedc.Value = "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValSlateBlue:
		_caedc.Value = "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValSlateGray:
		_caedc.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case ST_PresetColorValSlateGrey:
		_caedc.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case ST_PresetColorValSnow:
		_caedc.Value = "\u0073\u006e\u006f\u0077"
	case ST_PresetColorValSpringGreen:
		_caedc.Value = "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSteelBlue:
		_caedc.Value = "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValTan:
		_caedc.Value = "\u0074\u0061\u006e"
	case ST_PresetColorValTeal:
		_caedc.Value = "\u0074\u0065\u0061\u006c"
	case ST_PresetColorValThistle:
		_caedc.Value = "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case ST_PresetColorValTomato:
		_caedc.Value = "\u0074\u006f\u006d\u0061\u0074\u006f"
	case ST_PresetColorValTurquoise:
		_caedc.Value = "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case ST_PresetColorValViolet:
		_caedc.Value = "\u0076\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValWheat:
		_caedc.Value = "\u0077\u0068\u0065a\u0074"
	case ST_PresetColorValWhite:
		_caedc.Value = "\u0077\u0068\u0069t\u0065"
	case ST_PresetColorValWhiteSmoke:
		_caedc.Value = "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case ST_PresetColorValYellow:
		_caedc.Value = "\u0079\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValYellowGreen:
		_caedc.Value = "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return _caedc, nil
}

func NewCT_TextBulletSizePercent() *CT_TextBulletSizePercent {
	_caabb := &CT_TextBulletSizePercent{}
	_caabb.ValAttr = "\u0031\u0030\u0030\u0025"
	return _caabb
}

func (_faege *Theme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074\u0068\u0065\u006d\u0065"
	return _faege.CT_OfficeStyleSheet.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_AdjPoint2D and its children, prefixing error messages with path
func (_dbe *CT_AdjPoint2D) ValidateWithPath(path string) error {
	if _fgbb := _dbe.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _fgbb != nil {
		return _fgbb
	}
	if _fddd := _dbe.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _fddd != nil {
		return _fddd
	}
	return nil
}

type CT_Transform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
}

func (_cfebc *CT_TableRow) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ddaff := range start.Attr {
		if _ddaff.Name.Local == "\u0068" {
			_gadbf, _cbfd := ParseUnionST_Coordinate(_ddaff.Value)
			if _cbfd != nil {
				return _cbfd
			}
			_cfebc.HAttr = _gadbf
			continue
		}
	}
_begdc:
	for {
		_adcce, _cacbbg := d.Token()
		if _cacbbg != nil {
			return _cacbbg
		}
		switch _ccagb := _adcce.(type) {
		case _g.StartElement:
			switch _ccagb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}:
				_befde := NewCT_TableCell()
				if _bgfcg := d.DecodeElement(_befde, &_ccagb); _bgfcg != nil {
					return _bgfcg
				}
				_cfebc.Tc = append(_cfebc.Tc, _befde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfebc.ExtLst = NewCT_OfficeArtExtensionList()
				if _deafb := d.DecodeElement(_cfebc.ExtLst, &_ccagb); _deafb != nil {
					return _deafb
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077\u0020\u0025\u0076", _ccagb.Name)
				if _ggbce := d.Skip(); _ggbce != nil {
					return _ggbce
				}
			}
		case _g.EndElement:
			break _begdc
		case _g.CharData:
		}
	}
	return nil
}

func (_ccec ST_RectAlignment) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fbfac := _g.Attr{}
	_fbfac.Name = name
	switch _ccec {
	case ST_RectAlignmentUnset:
		_fbfac.Value = ""
	case ST_RectAlignmentTl:
		_fbfac.Value = "\u0074\u006c"
	case ST_RectAlignmentT:
		_fbfac.Value = "\u0074"
	case ST_RectAlignmentTr:
		_fbfac.Value = "\u0074\u0072"
	case ST_RectAlignmentL:
		_fbfac.Value = "\u006c"
	case ST_RectAlignmentCtr:
		_fbfac.Value = "\u0063\u0074\u0072"
	case ST_RectAlignmentR:
		_fbfac.Value = "\u0072"
	case ST_RectAlignmentBl:
		_fbfac.Value = "\u0062\u006c"
	case ST_RectAlignmentB:
		_fbfac.Value = "\u0062"
	case ST_RectAlignmentBr:
		_fbfac.Value = "\u0062\u0072"
	}
	return _fbfac, nil
}

// Validate validates the CT_FillOverlayEffect and its children
func (_egacd *CT_FillOverlayEffect) Validate() error {
	return _egacd.ValidateWithPath("C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074")
}

func (_ccaaf *CT_StyleMatrixReference) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _ccaaf.IdxAttr)})
	e.EncodeToken(start)
	if _ccaaf.ScrgbClr != nil {
		_egdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ccaaf.ScrgbClr, _egdf)
	}
	if _ccaaf.SrgbClr != nil {
		_aaddba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ccaaf.SrgbClr, _aaddba)
	}
	if _ccaaf.HslClr != nil {
		_dbgef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ccaaf.HslClr, _dbgef)
	}
	if _ccaaf.SysClr != nil {
		_fgbbfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ccaaf.SysClr, _fgbbfc)
	}
	if _ccaaf.SchemeClr != nil {
		_faabc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ccaaf.SchemeClr, _faabc)
	}
	if _ccaaf.PrstClr != nil {
		_dceafc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ccaaf.PrstClr, _dceafc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gecbbf ST_OnOffStyleType) ValidateWithPath(path string) error {
	switch _gecbbf {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gecbbf))
	}
	return nil
}

func (_ddeacb *ST_PenAlignment) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ddeacb = 0
	case "\u0063\u0074\u0072":
		*_ddeacb = 1
	case "\u0069\u006e":
		*_ddeacb = 2
	}
	return nil
}

func (_cacfb *CT_FixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _cacfb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PresetLineDashProperties and its children
func (_ddbf *CT_PresetLineDashProperties) Validate() error {
	return _ddbf.ValidateWithPath("C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

func (_gaggd ST_ShapeType) Validate() error { return _gaggd.ValidateWithPath("") }

func (_dggeb *ST_PitchFamily) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gbcbc, _ggaad := d.Token()
	if _ggaad != nil {
		return _ggaad
	}
	if _ffbad, _aebba := _gbcbc.(_g.EndElement); _aebba && _ffbad.Name == start.Name {
		*_dggeb = 1
		return nil
	}
	if _caadf, _eaaaeb := _gbcbc.(_g.CharData); !_eaaaeb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbcbc)
	} else {
		switch string(_caadf) {
		case "":
			*_dggeb = 0
		case "\u0030\u0030":
			*_dggeb = 1
		case "\u0030\u0031":
			*_dggeb = 2
		case "\u0030\u0032":
			*_dggeb = 3
		case "\u0031\u0036":
			*_dggeb = 4
		case "\u0031\u0037":
			*_dggeb = 5
		case "\u0031\u0038":
			*_dggeb = 6
		case "\u0033\u0032":
			*_dggeb = 7
		case "\u0033\u0033":
			*_dggeb = 8
		case "\u0033\u0034":
			*_dggeb = 9
		case "\u0034\u0038":
			*_dggeb = 10
		case "\u0034\u0039":
			*_dggeb = 11
		case "\u0035\u0030":
			*_dggeb = 12
		case "\u0036\u0034":
			*_dggeb = 13
		case "\u0036\u0035":
			*_dggeb = 14
		case "\u0036\u0036":
			*_dggeb = 15
		case "\u0038\u0030":
			*_dggeb = 16
		case "\u0038\u0031":
			*_dggeb = 17
		case "\u0038\u0032":
			*_dggeb = 18
		}
	}
	_gbcbc, _ggaad = d.Token()
	if _ggaad != nil {
		return _ggaad
	}
	if _dcgce, _bagde := _gbcbc.(_g.EndElement); _bagde && _dcgce.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbcbc)
}

func (_begaag ST_TextAlignType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_begaag.String(), start)
}

func (_badgce *ST_TextBulletSize) Validate() error { return _badgce.ValidateWithPath("") }

func (_aggde *CT_TablePartStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aggde.TcTxStyle != nil {
		_ebgage := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0074\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aggde.TcTxStyle, _ebgage)
	}
	if _aggde.TcStyle != nil {
		_gfafe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0063\u0053\u0074\u0079\u006ce"}}
		e.EncodeElement(_aggde.TcStyle, _gfafe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aadcc ST_AdjAngle) String() string {
	if _aadcc.ST_Angle != nil {
		return _bb.Sprintf("\u0025\u0076", *_aadcc.ST_Angle)
	}
	if _aadcc.ST_GeomGuideName != nil {
		return _bb.Sprintf("\u0025\u0076", *_aadcc.ST_GeomGuideName)
	}
	return ""
}

func (_ebega *CT_GroupFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_gffeef, _bcea := d.Token()
		if _bcea != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070F\u0069l\u006cP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _bcea)
		}
		if _fegad, _acbg := _gffeef.(_g.EndElement); _acbg && _fegad.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eaddf *CT_TextBulletColorFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_egbbf, _eddfb := d.Token()
		if _eddfb != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006ce\u0074\u0043\u006f\u006c\u006f\u0072\u0046\u006f\u006c\u006cow\u0054\u0065\u0078t\u003a \u0025\u0073", _eddfb)
		}
		if _gdcgdbg, _fdacg := _egbbf.(_g.EndElement); _fdacg && _gdcgdbg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TextBulletColorFollowText() *CT_TextBulletColorFollowText {
	_efffcf := &CT_TextBulletColorFollowText{}
	return _efffcf
}

func (_fabca *CT_TextNoAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_fbefa, _eecde := d.Token()
		if _eecde != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fA\u0075\u0074\u006f\u0066\u0069\u0074\u003a \u0025\u0073", _eecde)
		}
		if _bbec, _aeead := _fbefa.(_g.EndElement); _aeead && _bbec.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gggdeb ST_TextHorzOverflowType) Validate() error { return _gggdeb.ValidateWithPath("") }

func (_gbca *CT_Path2DCubicBezierTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eddfg:
	for {
		_ceae, _cbdeg := d.Token()
		if _cbdeg != nil {
			return _cbdeg
		}
		switch _agaae := _ceae.(type) {
		case _g.StartElement:
			switch _agaae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_cagcb := NewCT_AdjPoint2D()
				if _gaabf := d.DecodeElement(_cagcb, &_agaae); _gaabf != nil {
					return _gaabf
				}
				_gbca.Pt = append(_gbca.Pt, _cagcb)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u00682\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _agaae.Name)
				if _bafcd := d.Skip(); _bafcd != nil {
					return _bafcd
				}
			}
		case _g.EndElement:
			break _eddfg
		case _g.CharData:
		}
	}
	return nil
}

func (_bccca *CT_LineProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fddad := range start.Attr {
		if _fddad.Name.Local == "\u0077" {
			_cafd, _fddbb := _fg.ParseInt(_fddad.Value, 10, 32)
			if _fddbb != nil {
				return _fddbb
			}
			_dcca := int32(_cafd)
			_bccca.WAttr = &_dcca
			continue
		}
		if _fddad.Name.Local == "\u0063\u006d\u0070\u0064" {
			_bccca.CmpdAttr.UnmarshalXMLAttr(_fddad)
			continue
		}
		if _fddad.Name.Local == "\u0063\u0061\u0070" {
			_bccca.CapAttr.UnmarshalXMLAttr(_fddad)
			continue
		}
		if _fddad.Name.Local == "\u0061\u006c\u0067\u006e" {
			_bccca.AlgnAttr.UnmarshalXMLAttr(_fddad)
			continue
		}
	}
_bbgd:
	for {
		_dfag, _fggd := d.Token()
		if _fggd != nil {
			return _fggd
		}
		switch _ecbfe := _dfag.(type) {
		case _g.StartElement:
			switch _ecbfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bccca.NoFill = NewCT_NoFillProperties()
				if _abde := d.DecodeElement(_bccca.NoFill, &_ecbfe); _abde != nil {
					return _abde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bccca.SolidFill = NewCT_SolidColorFillProperties()
				if _fcde := d.DecodeElement(_bccca.SolidFill, &_ecbfe); _fcde != nil {
					return _fcde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bccca.GradFill = NewCT_GradientFillProperties()
				if _fgeed := d.DecodeElement(_bccca.GradFill, &_ecbfe); _fgeed != nil {
					return _fgeed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bccca.PattFill = NewCT_PatternFillProperties()
				if _geebe := d.DecodeElement(_bccca.PattFill, &_ecbfe); _geebe != nil {
					return _geebe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_bccca.PrstDash = NewCT_PresetLineDashProperties()
				if _deeaf := d.DecodeElement(_bccca.PrstDash, &_ecbfe); _deeaf != nil {
					return _deeaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_bccca.CustDash = NewCT_DashStopList()
				if _bdac := d.DecodeElement(_bccca.CustDash, &_ecbfe); _bdac != nil {
					return _bdac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_bccca.Round = NewCT_LineJoinRound()
				if _cddbe := d.DecodeElement(_bccca.Round, &_ecbfe); _cddbe != nil {
					return _cddbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_bccca.Bevel = NewCT_LineJoinBevel()
				if _geaf := d.DecodeElement(_bccca.Bevel, &_ecbfe); _geaf != nil {
					return _geaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_bccca.Miter = NewCT_LineJoinMiterProperties()
				if _ffeee := d.DecodeElement(_bccca.Miter, &_ecbfe); _ffeee != nil {
					return _ffeee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}:
				_bccca.HeadEnd = NewCT_LineEndProperties()
				if _aadfd := d.DecodeElement(_bccca.HeadEnd, &_ecbfe); _aadfd != nil {
					return _aadfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}:
				_bccca.TailEnd = NewCT_LineEndProperties()
				if _dcbd := d.DecodeElement(_bccca.TailEnd, &_ecbfe); _dcbd != nil {
					return _dcbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bccca.ExtLst = NewCT_OfficeArtExtensionList()
				if _aaccga := d.DecodeElement(_bccca.ExtLst, &_ecbfe); _aaccga != nil {
					return _aaccga
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ecbfe.Name)
				if _cddca := d.Skip(); _cddca != nil {
					return _cddca
				}
			}
		case _g.EndElement:
			break _bbgd
		case _g.CharData:
		}
	}
	return nil
}

func (_gbbad *EG_Effect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gbbad.Cont != nil {
		_edceb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_gbbad.Cont, _edceb)
	}
	if _gbbad.Effect != nil {
		_agfgee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_gbbad.Effect, _agfgee)
	}
	if _gbbad.AlphaBiLevel != nil {
		_beffd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_gbbad.AlphaBiLevel, _beffd)
	}
	if _gbbad.AlphaCeiling != nil {
		_dcdag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_gbbad.AlphaCeiling, _dcdag)
	}
	if _gbbad.AlphaFloor != nil {
		_bgbdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_gbbad.AlphaFloor, _bgbdg)
	}
	if _gbbad.AlphaInv != nil {
		_bbefb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_gbbad.AlphaInv, _bbefb)
	}
	if _gbbad.AlphaMod != nil {
		_cfegc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_gbbad.AlphaMod, _cfegc)
	}
	if _gbbad.AlphaModFix != nil {
		_gaggb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_gbbad.AlphaModFix, _gaggb)
	}
	if _gbbad.AlphaOutset != nil {
		_cdcab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_gbbad.AlphaOutset, _cdcab)
	}
	if _gbbad.AlphaRepl != nil {
		_dcedd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_gbbad.AlphaRepl, _dcedd)
	}
	if _gbbad.BiLevel != nil {
		_dgdf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_gbbad.BiLevel, _dgdf)
	}
	if _gbbad.Blend != nil {
		_cfdab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_gbbad.Blend, _cfdab)
	}
	if _gbbad.Blur != nil {
		_beagb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_gbbad.Blur, _beagb)
	}
	if _gbbad.ClrChange != nil {
		_baebd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_gbbad.ClrChange, _baebd)
	}
	if _gbbad.ClrRepl != nil {
		_dcbeg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_gbbad.ClrRepl, _dcbeg)
	}
	if _gbbad.Duotone != nil {
		_agagd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_gbbad.Duotone, _agagd)
	}
	if _gbbad.Fill != nil {
		_dcgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_gbbad.Fill, _dcgd)
	}
	if _gbbad.FillOverlay != nil {
		_dceedc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_gbbad.FillOverlay, _dceedc)
	}
	if _gbbad.Glow != nil {
		_eacb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_gbbad.Glow, _eacb)
	}
	if _gbbad.Grayscl != nil {
		_cfcde := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_gbbad.Grayscl, _cfcde)
	}
	if _gbbad.Hsl != nil {
		_caaef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_gbbad.Hsl, _caaef)
	}
	if _gbbad.InnerShdw != nil {
		_gdbfc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_gbbad.InnerShdw, _gdbfc)
	}
	if _gbbad.Lum != nil {
		_becggb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_gbbad.Lum, _becggb)
	}
	if _gbbad.OuterShdw != nil {
		_gcdgb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_gbbad.OuterShdw, _gcdgb)
	}
	if _gbbad.PrstShdw != nil {
		_ebbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_gbbad.PrstShdw, _ebbd)
	}
	if _gbbad.Reflection != nil {
		_ecbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gbbad.Reflection, _ecbg)
	}
	if _gbbad.RelOff != nil {
		_daace := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_gbbad.RelOff, _daace)
	}
	if _gbbad.SoftEdge != nil {
		_gcfgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_gbbad.SoftEdge, _gcfgd)
	}
	if _gbbad.Tint != nil {
		_dbaba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_gbbad.Tint, _dbaba)
	}
	if _gbbad.Xfrm != nil {
		_afdcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_gbbad.Xfrm, _afdcg)
	}
	return nil
}

func (_ggabcd *CT_TextTabStopList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ggabcd.Tab != nil {
		_egffd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074a\u0062"}}
		for _, _becgg := range _ggabcd.Tab {
			e.EncodeElement(_becgg, _egffd)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorSchemeAndMapping and its children, prefixing error messages with path
func (_gegf *CT_ColorSchemeAndMapping) ValidateWithPath(path string) error {
	if _ecef := _gegf.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _ecef != nil {
		return _ecef
	}
	if _gegf.ClrMap != nil {
		if _dfdfb := _gegf.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _dfdfb != nil {
			return _dfdfb
		}
	}
	return nil
}

func (_ebcfc *ST_ChartBuildStep) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ebcfc = 0
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_ebcfc = 1
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_ebcfc = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_ebcfc = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_ebcfc = 4
	case "\u0061\u006c\u006c\u0050\u0074\u0073":
		*_ebcfc = 5
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_ebcfc = 6
	}
	return nil
}

func (_fccca *CT_PathShadeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bdbc := range start.Attr {
		if _bdbc.Name.Local == "\u0070\u0061\u0074\u0068" {
			_fccca.PathAttr.UnmarshalXMLAttr(_bdbc)
			continue
		}
	}
_fbdgg:
	for {
		_ceecd, _edcb := d.Token()
		if _edcb != nil {
			return _edcb
		}
		switch _eefe := _ceecd.(type) {
		case _g.StartElement:
			switch _eefe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}:
				_fccca.FillToRect = NewCT_RelativeRect()
				if _defdd := d.DecodeElement(_fccca.FillToRect, &_eefe); _defdd != nil {
					return _defdd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u0068S\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eefe.Name)
				if _eefgc := d.Skip(); _eefgc != nil {
					return _eefgc
				}
			}
		case _g.EndElement:
			break _fbdgg
		case _g.CharData:
		}
	}
	return nil
}

func (_bddbe *CT_TableCellBorderStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bddbe.Left != nil {
		_dacga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_bddbe.Left, _dacga)
	}
	if _bddbe.Right != nil {
		_fdggc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_bddbe.Right, _fdggc)
	}
	if _bddbe.Top != nil {
		_febdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074o\u0070"}}
		e.EncodeElement(_bddbe.Top, _febdc)
	}
	if _bddbe.Bottom != nil {
		_ffcdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006f\u0074\u0074\u006f\u006d"}}
		e.EncodeElement(_bddbe.Bottom, _ffcdd)
	}
	if _bddbe.InsideH != nil {
		_eaege := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065H"}}
		e.EncodeElement(_bddbe.InsideH, _eaege)
	}
	if _bddbe.InsideV != nil {
		_ccgcb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065V"}}
		e.EncodeElement(_bddbe.InsideV, _ccgcb)
	}
	if _bddbe.Tl2br != nil {
		_efcab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u006c\u0032\u0062\u0072"}}
		e.EncodeElement(_bddbe.Tl2br, _efcab)
	}
	if _bddbe.Tr2bl != nil {
		_gccec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0072\u0032\u0062\u006c"}}
		e.EncodeElement(_bddbe.Tr2bl, _gccec)
	}
	if _bddbe.ExtLst != nil {
		_ebgag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bddbe.ExtLst, _ebgag)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NonVisualGroupDrawingShapeProps and its children
func (_agef *CT_NonVisualGroupDrawingShapeProps) Validate() error {
	return _agef.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073")
}

// Validate validates the CT_TextSpacing and its children
func (_dbgcc *CT_TextSpacing) Validate() error {
	return _dbgcc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067")
}

const (
	ST_TextVertOverflowTypeUnset    ST_TextVertOverflowType = 0
	ST_TextVertOverflowTypeOverflow ST_TextVertOverflowType = 1
	ST_TextVertOverflowTypeEllipsis ST_TextVertOverflowType = 2
	ST_TextVertOverflowTypeClip     ST_TextVertOverflowType = 3
)

type CT_Path2DMoveTo struct{ Pt *CT_AdjPoint2D }

func (_ccaa *CT_LineJoinMiterProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dbcbe := range start.Attr {
		if _dbcbe.Name.Local == "\u006c\u0069\u006d" {
			_adda, _cgfdb := ParseUnionST_PositivePercentage(_dbcbe.Value)
			if _cgfdb != nil {
				return _cgfdb
			}
			_ccaa.LimAttr = &_adda
			continue
		}
	}
	for {
		_dddgc, _cbbg := d.Token()
		if _cbbg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u004d\u0069\u0074\u0065\u0072P\u0072\u006f\u0070\u0065\u0072t\u0069\u0065s\u003a\u0020\u0025\u0073", _cbbg)
		}
		if _fedef, _ddbafc := _dddgc.(_g.EndElement); _ddbafc && _fedef.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TablePartStyle and its children
func (_eagge *CT_TablePartStyle) Validate() error {
	return _eagge.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_Angle and its children
func (_bfg *CT_Angle) Validate() error {
	return _bfg.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
}

type CT_Percentage struct{ ValAttr ST_Percentage }

func (_cedce *CT_TableRow) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068"}, Value: _bb.Sprintf("\u0025\u0076", _cedce.HAttr)})
	e.EncodeToken(start)
	if _cedce.Tc != nil {
		_ddbbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0063"}}
		for _, _cbee := range _cedce.Tc {
			e.EncodeElement(_cbee, _ddbbf)
		}
	}
	if _cedce.ExtLst != nil {
		_bdce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cedce.ExtLst, _bdce)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Hyperlink() *CT_Hyperlink { _dadg := &CT_Hyperlink{}; return _dadg }

type CT_BlendEffect struct {
	BlendAttr ST_BlendMode
	Cont      *CT_EffectContainer
}

// Validate validates the CT_LineJoinBevel and its children
func (_dfdgbf *CT_LineJoinBevel) Validate() error {
	return _dfdgbf.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c")
}

func (_cgbad *CT_TextShapeAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fgecc *CT_TextSpacingPoint) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _fgecc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cabae ST_TextWrappingType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cabae.String(), start)
}

type CT_TextBulletSizePercent struct{ ValAttr string }

// Validate validates the CT_PatternFillProperties and its children
func (_ggfgge *CT_PatternFillProperties) Validate() error {
	return _ggfgge.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_fefbc *CT_TextCharacterProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fffgf := range start.Attr {
		if _fffgf.Name.Local == "\u006c\u0061\u006e\u0067" {
			_egabc, _eccfbb := _fffgf.Value, error(nil)
			if _eccfbb != nil {
				return _eccfbb
			}
			_fefbc.LangAttr = &_egabc
			continue
		}
		if _fffgf.Name.Local == "\u0073\u007a" {
			_ddbcb, _bfbef := _fg.ParseInt(_fffgf.Value, 10, 32)
			if _bfbef != nil {
				return _bfbef
			}
			_cegcga := int32(_ddbcb)
			_fefbc.SzAttr = &_cegcga
			continue
		}
		if _fffgf.Name.Local == "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069" {
			_ebefe, _feacd := _fg.ParseBool(_fffgf.Value)
			if _feacd != nil {
				return _feacd
			}
			_fefbc.KumimojiAttr = &_ebefe
			continue
		}
		if _fffgf.Name.Local == "\u0073\u0074\u0072\u0069\u006b\u0065" {
			_fefbc.StrikeAttr.UnmarshalXMLAttr(_fffgf)
			continue
		}
		if _fffgf.Name.Local == "\u0063\u0061\u0070" {
			_fefbc.CapAttr.UnmarshalXMLAttr(_fffgf)
			continue
		}
		if _fffgf.Name.Local == "\u0062" {
			_cffbd, _cdgde := _fg.ParseBool(_fffgf.Value)
			if _cdgde != nil {
				return _cdgde
			}
			_fefbc.BAttr = &_cffbd
			continue
		}
		if _fffgf.Name.Local == "\u0069" {
			_aegcge, _dddada := _fg.ParseBool(_fffgf.Value)
			if _dddada != nil {
				return _dddada
			}
			_fefbc.IAttr = &_aegcge
			continue
		}
		if _fffgf.Name.Local == "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e" {
			_ceedc, _dabbf := _fg.ParseBool(_fffgf.Value)
			if _dabbf != nil {
				return _dabbf
			}
			_fefbc.SmtCleanAttr = &_ceedc
			continue
		}
		if _fffgf.Name.Local == "\u006b\u0065\u0072\u006e" {
			_ccdde, _gefda := _fg.ParseInt(_fffgf.Value, 10, 32)
			if _gefda != nil {
				return _gefda
			}
			_gfabd := int32(_ccdde)
			_fefbc.KernAttr = &_gfabd
			continue
		}
		if _fffgf.Name.Local == "\u0065\u0072\u0072" {
			_ebgabf, _cabed := _fg.ParseBool(_fffgf.Value)
			if _cabed != nil {
				return _cabed
			}
			_fefbc.ErrAttr = &_ebgabf
			continue
		}
		if _fffgf.Name.Local == "\u0061l\u0074\u004c\u0061\u006e\u0067" {
			_eface, _fbeec := _fffgf.Value, error(nil)
			if _fbeec != nil {
				return _fbeec
			}
			_fefbc.AltLangAttr = &_eface
			continue
		}
		if _fffgf.Name.Local == "\u006eo\u0050\u0072\u006f\u006f\u0066" {
			_dfae, _cffcd := _fg.ParseBool(_fffgf.Value)
			if _cffcd != nil {
				return _cffcd
			}
			_fefbc.NoProofAttr = &_dfae
			continue
		}
		if _fffgf.Name.Local == "\u0075" {
			_fefbc.UAttr.UnmarshalXMLAttr(_fffgf)
			continue
		}
		if _fffgf.Name.Local == "\u0073\u006d\u0074I\u0064" {
			_fbfb, _eccdf := _fg.ParseUint(_fffgf.Value, 10, 32)
			if _eccdf != nil {
				return _eccdf
			}
			_eeggb := uint32(_fbfb)
			_fefbc.SmtIdAttr = &_eeggb
			continue
		}
		if _fffgf.Name.Local == "\u0073\u0070\u0063" {
			_eefcc, _fagb := ParseUnionST_TextPoint(_fffgf.Value)
			if _fagb != nil {
				return _fagb
			}
			_fefbc.SpcAttr = &_eefcc
			continue
		}
		if _fffgf.Name.Local == "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065" {
			_gefed, _cbbae := ParseUnionST_Percentage(_fffgf.Value)
			if _cbbae != nil {
				return _cbbae
			}
			_fefbc.BaselineAttr = &_gefed
			continue
		}
		if _fffgf.Name.Local == "\u0064\u0069\u0072t\u0079" {
			_bcbgf, _adgc := _fg.ParseBool(_fffgf.Value)
			if _adgc != nil {
				return _adgc
			}
			_fefbc.DirtyAttr = &_bcbgf
			continue
		}
		if _fffgf.Name.Local == "\u0062\u006d\u006b" {
			_beaaa, _feaed := _fffgf.Value, error(nil)
			if _feaed != nil {
				return _feaed
			}
			_fefbc.BmkAttr = &_beaaa
			continue
		}
		if _fffgf.Name.Local == "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048" {
			_ggfcg, _cdbae := _fg.ParseBool(_fffgf.Value)
			if _cdbae != nil {
				return _cdbae
			}
			_fefbc.NormalizeHAttr = &_ggfcg
			continue
		}
	}
_acbeb:
	for {
		_bcabd, _caeba := d.Token()
		if _caeba != nil {
			return _caeba
		}
		switch _bddde := _bcabd.(type) {
		case _g.StartElement:
			switch _bddde.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_fefbc.Ln = NewCT_LineProperties()
				if _edbcb := d.DecodeElement(_fefbc.Ln, &_bddde); _edbcb != nil {
					return _edbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fefbc.NoFill = NewCT_NoFillProperties()
				if _eacaed := d.DecodeElement(_fefbc.NoFill, &_bddde); _eacaed != nil {
					return _eacaed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fefbc.SolidFill = NewCT_SolidColorFillProperties()
				if _gdaba := d.DecodeElement(_fefbc.SolidFill, &_bddde); _gdaba != nil {
					return _gdaba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fefbc.GradFill = NewCT_GradientFillProperties()
				if _fagfcg := d.DecodeElement(_fefbc.GradFill, &_bddde); _fagfcg != nil {
					return _fagfcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fefbc.BlipFill = NewCT_BlipFillProperties()
				if _caebf := d.DecodeElement(_fefbc.BlipFill, &_bddde); _caebf != nil {
					return _caebf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fefbc.PattFill = NewCT_PatternFillProperties()
				if _ggcdb := d.DecodeElement(_fefbc.PattFill, &_bddde); _ggcdb != nil {
					return _ggcdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fefbc.GrpFill = NewCT_GroupFillProperties()
				if _bbcfef := d.DecodeElement(_fefbc.GrpFill, &_bddde); _bbcfef != nil {
					return _bbcfef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fefbc.EffectLst = NewCT_EffectList()
				if _eccbb := d.DecodeElement(_fefbc.EffectLst, &_bddde); _eccbb != nil {
					return _eccbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fefbc.EffectDag = NewCT_EffectContainer()
				if _ggbgad := d.DecodeElement(_fefbc.EffectDag, &_bddde); _ggbgad != nil {
					return _ggbgad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}:
				_fefbc.Highlight = NewCT_Color()
				if _dadbbd := d.DecodeElement(_fefbc.Highlight, &_bddde); _dadbbd != nil {
					return _dadbbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_fefbc.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _acgce := d.DecodeElement(_fefbc.ULnTx, &_bddde); _acgce != nil {
					return _acgce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_fefbc.ULn = NewCT_LineProperties()
				if _daaef := d.DecodeElement(_fefbc.ULn, &_bddde); _daaef != nil {
					return _daaef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_fefbc.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _fdbg := d.DecodeElement(_fefbc.UFillTx, &_bddde); _fdbg != nil {
					return _fdbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_fefbc.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _dafcb := d.DecodeElement(_fefbc.UFill, &_bddde); _dafcb != nil {
					return _dafcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				_fefbc.Latin = NewCT_TextFont()
				if _faedg := d.DecodeElement(_fefbc.Latin, &_bddde); _faedg != nil {
					return _faedg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				_fefbc.Ea = NewCT_TextFont()
				if _bfgbb := d.DecodeElement(_fefbc.Ea, &_bddde); _bfgbb != nil {
					return _bfgbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				_fefbc.Cs = NewCT_TextFont()
				if _fffcab := d.DecodeElement(_fefbc.Cs, &_bddde); _fffcab != nil {
					return _fffcab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}:
				_fefbc.Sym = NewCT_TextFont()
				if _agdeg := d.DecodeElement(_fefbc.Sym, &_bddde); _agdeg != nil {
					return _agdeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_fefbc.HlinkClick = NewCT_Hyperlink()
				if _acafb := d.DecodeElement(_fefbc.HlinkClick, &_bddde); _acafb != nil {
					return _acafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}:
				_fefbc.HlinkMouseOver = NewCT_Hyperlink()
				if _caegc := d.DecodeElement(_fefbc.HlinkMouseOver, &_bddde); _caegc != nil {
					return _caegc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}:
				_fefbc.Rtl = NewCT_Boolean()
				if _bdffae := d.DecodeElement(_fefbc.Rtl, &_bddde); _bdffae != nil {
					return _bdffae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fefbc.ExtLst = NewCT_OfficeArtExtensionList()
				if _cgdfe := d.DecodeElement(_fefbc.ExtLst, &_bddde); _cgdfe != nil {
					return _cgdfe
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bddde.Name)
				if _affcf := d.Skip(); _affcf != nil {
					return _affcf
				}
			}
		case _g.EndElement:
			break _acbeb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextBlipBullet and its children
func (_acgd *CT_TextBlipBullet) Validate() error {
	return _acgd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074")
}

func NewEG_LineFillProperties() *EG_LineFillProperties {
	_aaged := &EG_LineFillProperties{}
	return _aaged
}

// Validate validates the CT_Connection and its children
func (_ffca *CT_Connection) Validate() error {
	return _ffca.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

func (_ffcdgbe ST_BlackWhiteMode) ValidateWithPath(path string) error {
	switch _ffcdgbe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffcdgbe))
	}
	return nil
}

func (_ccbagd *CT_StretchInfoProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ccbagd.FillRect != nil {
		_aaaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_ccbagd.FillRect, _aaaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bcgff ST_BevelPresetType) ValidateWithPath(path string) error {
	switch _bcgff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcgff))
	}
	return nil
}

// ValidateWithPath validates the CT_TextBulletColorFollowText and its children, prefixing error messages with path
func (_ebgaa *CT_TextBulletColorFollowText) ValidateWithPath(path string) error { return nil }

func NewCT_AlphaReplaceEffect() *CT_AlphaReplaceEffect {
	_cbad := &CT_AlphaReplaceEffect{}
	return _cbad
}

// ValidateWithPath validates the CT_Path2DLineTo and its children, prefixing error messages with path
func (_fgcf *CT_Path2DLineTo) ValidateWithPath(path string) error {
	if _fdae := _fgcf.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _fdae != nil {
		return _fdae
	}
	return nil
}

func NewCT_TextListStyle() *CT_TextListStyle { _fddaa := &CT_TextListStyle{}; return _fddaa }

// Validate validates the CT_PathShadeProperties and its children
func (_gbaeb *CT_PathShadeProperties) Validate() error {
	return _gbaeb.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func (_afgad *CT_PatternFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _efcae := range start.Attr {
		if _efcae.Name.Local == "\u0070\u0072\u0073\u0074" {
			_afgad.PrstAttr.UnmarshalXMLAttr(_efcae)
			continue
		}
	}
_gbbee:
	for {
		_gdffad, _adbdg := d.Token()
		if _adbdg != nil {
			return _adbdg
		}
		switch _adbefd := _gdffad.(type) {
		case _g.StartElement:
			switch _adbefd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}:
				_afgad.FgClr = NewCT_Color()
				if _badf := d.DecodeElement(_afgad.FgClr, &_adbefd); _badf != nil {
					return _badf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}:
				_afgad.BgClr = NewCT_Color()
				if _fbdgd := d.DecodeElement(_afgad.BgClr, &_adbefd); _fbdgd != nil {
					return _fbdgd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _adbefd.Name)
				if _cfbea := d.Skip(); _cfbea != nil {
					return _cfbea
				}
			}
		case _g.EndElement:
			break _gbbee
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DClose and its children, prefixing error messages with path
func (_bcba *CT_Path2DClose) ValidateWithPath(path string) error { return nil }

func NewCT_ContentPartLocking() *CT_ContentPartLocking {
	_ccce := &CT_ContentPartLocking{}
	return _ccce
}

// Validate validates the EG_Effect and its children
func (_adfgb *EG_Effect) Validate() error {
	return _adfgb.ValidateWithPath("\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t")
}

type ST_LineCap byte

type CT_GvmlGroupShape struct {
	NvGrpSpPr *CT_GvmlGroupShapeNonVisual
	GrpSpPr   *CT_GroupShapeProperties
	Choice    []*CT_GvmlGroupShapeChoice
	ExtLst    *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_Camera and its children, prefixing error messages with path
func (_cccg *CT_Camera) ValidateWithPath(path string) error {
	if _cccg.PrstAttr == ST_PresetCameraTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _agab := _cccg.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _agab != nil {
		return _agab
	}
	if _cccg.FovAttr != nil {
		if *_cccg.FovAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0046\u006fv\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cccg.FovAttr)
		}
		if *_cccg.FovAttr > 10800000 {
			return _bb.Errorf("\u0025\u0073\u002fm\u002e\u0046\u006f\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0030\u0038\u0030\u0030\u0030\u0030\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cccg.FovAttr)
		}
	}
	if _cccg.ZoomAttr != nil {
		if _ebcf := _cccg.ZoomAttr.ValidateWithPath(path + "\u002fZ\u006f\u006f\u006d\u0041\u0074\u0074r"); _ebcf != nil {
			return _ebcf
		}
	}
	if _cccg.Rot != nil {
		if _gfga := _cccg.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _gfga != nil {
			return _gfga
		}
	}
	return nil
}

type CT_SystemColor struct {
	ValAttr           ST_SystemColorVal
	LastClrAttr       *string
	EG_ColorTransform []*EG_ColorTransform
}

// ValidateWithPath validates the CT_VideoFile and its children, prefixing error messages with path
func (_debb *CT_VideoFile) ValidateWithPath(path string) error {
	if _debb.ExtLst != nil {
		if _cbdcgg := _debb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbdcgg != nil {
			return _cbdcgg
		}
	}
	return nil
}

func (_fdcff *CT_EffectContainer) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eaff := range start.Attr {
		if _eaff.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fdcff.TypeAttr.UnmarshalXMLAttr(_eaff)
			continue
		}
		if _eaff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eaeda, _dbga := _eaff.Value, error(nil)
			if _dbga != nil {
				return _dbga
			}
			_fdcff.NameAttr = &_eaeda
			continue
		}
	}
_gacc:
	for {
		_gfgf, _fbcfe := d.Token()
		if _fbcfe != nil {
			return _fbcfe
		}
		switch _aaagg := _gfgf.(type) {
		case _g.StartElement:
			switch _aaagg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_fdcff.Cont = NewCT_EffectContainer()
				if _cccc := d.DecodeElement(_fdcff.Cont, &_aaagg); _cccc != nil {
					return _cccc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_fdcff.Effect = NewCT_EffectReference()
				if _dcdfd := d.DecodeElement(_fdcff.Effect, &_aaagg); _dcdfd != nil {
					return _dcdfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_fdcff.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _acee := d.DecodeElement(_fdcff.AlphaBiLevel, &_aaagg); _acee != nil {
					return _acee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_fdcff.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _bagg := d.DecodeElement(_fdcff.AlphaCeiling, &_aaagg); _bagg != nil {
					return _bagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_fdcff.AlphaFloor = NewCT_AlphaFloorEffect()
				if _ddaag := d.DecodeElement(_fdcff.AlphaFloor, &_aaagg); _ddaag != nil {
					return _ddaag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_fdcff.AlphaInv = NewCT_AlphaInverseEffect()
				if _cdcg := d.DecodeElement(_fdcff.AlphaInv, &_aaagg); _cdcg != nil {
					return _cdcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_fdcff.AlphaMod = NewCT_AlphaModulateEffect()
				if _aaac := d.DecodeElement(_fdcff.AlphaMod, &_aaagg); _aaac != nil {
					return _aaac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_fdcff.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _fgef := d.DecodeElement(_fdcff.AlphaModFix, &_aaagg); _fgef != nil {
					return _fgef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_fdcff.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _gfab := d.DecodeElement(_fdcff.AlphaOutset, &_aaagg); _gfab != nil {
					return _gfab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_fdcff.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _facfb := d.DecodeElement(_fdcff.AlphaRepl, &_aaagg); _facfb != nil {
					return _facfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_fdcff.BiLevel = NewCT_BiLevelEffect()
				if _ffge := d.DecodeElement(_fdcff.BiLevel, &_aaagg); _ffge != nil {
					return _ffge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_fdcff.Blend = NewCT_BlendEffect()
				if _bdcdc := d.DecodeElement(_fdcff.Blend, &_aaagg); _bdcdc != nil {
					return _bdcdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_fdcff.Blur = NewCT_BlurEffect()
				if _cbcf := d.DecodeElement(_fdcff.Blur, &_aaagg); _cbcf != nil {
					return _cbcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_fdcff.ClrChange = NewCT_ColorChangeEffect()
				if _edagd := d.DecodeElement(_fdcff.ClrChange, &_aaagg); _edagd != nil {
					return _edagd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_fdcff.ClrRepl = NewCT_ColorReplaceEffect()
				if _egbf := d.DecodeElement(_fdcff.ClrRepl, &_aaagg); _egbf != nil {
					return _egbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_fdcff.Duotone = NewCT_DuotoneEffect()
				if _gbge := d.DecodeElement(_fdcff.Duotone, &_aaagg); _gbge != nil {
					return _gbge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_fdcff.Fill = NewCT_FillEffect()
				if _aefba := d.DecodeElement(_fdcff.Fill, &_aaagg); _aefba != nil {
					return _aefba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_fdcff.FillOverlay = NewCT_FillOverlayEffect()
				if _cecge := d.DecodeElement(_fdcff.FillOverlay, &_aaagg); _cecge != nil {
					return _cecge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_fdcff.Glow = NewCT_GlowEffect()
				if _fbabg := d.DecodeElement(_fdcff.Glow, &_aaagg); _fbabg != nil {
					return _fbabg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_fdcff.Grayscl = NewCT_GrayscaleEffect()
				if _fbdda := d.DecodeElement(_fdcff.Grayscl, &_aaagg); _fbdda != nil {
					return _fbdda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_fdcff.Hsl = NewCT_HSLEffect()
				if _fcffb := d.DecodeElement(_fdcff.Hsl, &_aaagg); _fcffb != nil {
					return _fcffb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_fdcff.InnerShdw = NewCT_InnerShadowEffect()
				if _gdgg := d.DecodeElement(_fdcff.InnerShdw, &_aaagg); _gdgg != nil {
					return _gdgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fdcff.Lum = NewCT_LuminanceEffect()
				if _gag := d.DecodeElement(_fdcff.Lum, &_aaagg); _gag != nil {
					return _gag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_fdcff.OuterShdw = NewCT_OuterShadowEffect()
				if _cefaf := d.DecodeElement(_fdcff.OuterShdw, &_aaagg); _cefaf != nil {
					return _cefaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_fdcff.PrstShdw = NewCT_PresetShadowEffect()
				if _abeea := d.DecodeElement(_fdcff.PrstShdw, &_aaagg); _abeea != nil {
					return _abeea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fdcff.Reflection = NewCT_ReflectionEffect()
				if _cfeea := d.DecodeElement(_fdcff.Reflection, &_aaagg); _cfeea != nil {
					return _cfeea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_fdcff.RelOff = NewCT_RelativeOffsetEffect()
				if _dgdb := d.DecodeElement(_fdcff.RelOff, &_aaagg); _dgdb != nil {
					return _dgdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_fdcff.SoftEdge = NewCT_SoftEdgesEffect()
				if _dcfc := d.DecodeElement(_fdcff.SoftEdge, &_aaagg); _dcfc != nil {
					return _dcfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_fdcff.Tint = NewCT_TintEffect()
				if _gcbab := d.DecodeElement(_fdcff.Tint, &_aaagg); _gcbab != nil {
					return _gcbab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_fdcff.Xfrm = NewCT_TransformEffect()
				if _acgfe := d.DecodeElement(_fdcff.Xfrm, &_aaagg); _acgfe != nil {
					return _acgfe
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025\u0076", _aaagg.Name)
				if _bageb := d.Skip(); _bageb != nil {
					return _bageb
				}
			}
		case _g.EndElement:
			break _gacc
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableBackgroundStyle and its children
func (_cdgae *CT_TableBackgroundStyle) Validate() error {
	return _cdgae.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065")
}

func NewCT_NonVisualDrawingShapeProps() *CT_NonVisualDrawingShapeProps {
	_ceeaa := &CT_NonVisualDrawingShapeProps{}
	return _ceeaa
}

func (_eefge ST_TextFontScalePercentOrPercentString) String() string {
	if _eefge.ST_TextFontScalePercent != nil {
		return _bb.Sprintf("\u0025\u0076", *_eefge.ST_TextFontScalePercent)
	}
	if _eefge.ST_Percentage != nil {
		return _bb.Sprintf("\u0025\u0076", *_eefge.ST_Percentage)
	}
	return ""
}

func (_aefdg *CT_Color) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aefdg.ScrgbClr != nil {
		_eeba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_aefdg.ScrgbClr, _eeba)
	}
	if _aefdg.SrgbClr != nil {
		_eef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_aefdg.SrgbClr, _eef)
	}
	if _aefdg.HslClr != nil {
		_afdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_aefdg.HslClr, _afdd)
	}
	if _aefdg.SysClr != nil {
		_cdbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_aefdg.SysClr, _cdbe)
	}
	if _aefdg.SchemeClr != nil {
		_gdaec := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_aefdg.SchemeClr, _gdaec)
	}
	if _aefdg.PrstClr != nil {
		_aagf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_aefdg.PrstClr, _aagf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AlphaOutsetEffect and its children
func (_bdd *CT_AlphaOutsetEffect) Validate() error {
	return _bdd.ValidateWithPath("C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074")
}

type Theme struct{ CT_OfficeStyleSheet }

func (_dedga *CT_TextParagraphProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ggbgg := range start.Attr {
		if _ggbgg.Name.Local == "\u006d\u0061\u0072\u004c" {
			_edacf, _aggc := _fg.ParseInt(_ggbgg.Value, 10, 32)
			if _aggc != nil {
				return _aggc
			}
			_geffb := int32(_edacf)
			_dedga.MarLAttr = &_geffb
			continue
		}
		if _ggbgg.Name.Local == "\u006c\u0076\u006c" {
			_bgabd, _agbgd := _fg.ParseInt(_ggbgg.Value, 10, 32)
			if _agbgd != nil {
				return _agbgd
			}
			_ababb := int32(_bgabd)
			_dedga.LvlAttr = &_ababb
			continue
		}
		if _ggbgg.Name.Local == "\u0061\u006c\u0067\u006e" {
			_dedga.AlgnAttr.UnmarshalXMLAttr(_ggbgg)
			continue
		}
		if _ggbgg.Name.Local == "\u0072\u0074\u006c" {
			_bdbfgg, _bccbcd := _fg.ParseBool(_ggbgg.Value)
			if _bccbcd != nil {
				return _bccbcd
			}
			_dedga.RtlAttr = &_bdbfgg
			continue
		}
		if _ggbgg.Name.Local == "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e" {
			_dedga.FontAlgnAttr.UnmarshalXMLAttr(_ggbgg)
			continue
		}
		if _ggbgg.Name.Local == "\u006d\u0061\u0072\u0052" {
			_bfgaa, _ceecef := _fg.ParseInt(_ggbgg.Value, 10, 32)
			if _ceecef != nil {
				return _ceecef
			}
			_bfefe := int32(_bfgaa)
			_dedga.MarRAttr = &_bfefe
			continue
		}
		if _ggbgg.Name.Local == "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b" {
			_bcggd, _ffgbf := _fg.ParseBool(_ggbgg.Value)
			if _ffgbf != nil {
				return _ffgbf
			}
			_dedga.LatinLnBrkAttr = &_bcggd
			continue
		}
		if _ggbgg.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_bfcde, _bagadb := _fg.ParseInt(_ggbgg.Value, 10, 32)
			if _bagadb != nil {
				return _bagadb
			}
			_fcbfd := int32(_bfcde)
			_dedga.IndentAttr = &_fcbfd
			continue
		}
		if _ggbgg.Name.Local == "\u0065a\u004c\u006e\u0042\u0072\u006b" {
			_bcfd, _bbfgb := _fg.ParseBool(_ggbgg.Value)
			if _bbfgb != nil {
				return _bbfgb
			}
			_dedga.EaLnBrkAttr = &_bcfd
			continue
		}
		if _ggbgg.Name.Local == "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074" {
			_facgdf, _caeda := _fg.ParseBool(_ggbgg.Value)
			if _caeda != nil {
				return _caeda
			}
			_dedga.HangingPunctAttr = &_facgdf
			continue
		}
		if _ggbgg.Name.Local == "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a" {
			_bdfaf, _egaba := ParseUnionST_Coordinate32(_ggbgg.Value)
			if _egaba != nil {
				return _egaba
			}
			_dedga.DefTabSzAttr = &_bdfaf
			continue
		}
	}
_baeaec:
	for {
		_fgeg, _gggfb := d.Token()
		if _gggfb != nil {
			return _gggfb
		}
		switch _ebdcb := _fgeg.(type) {
		case _g.StartElement:
			switch _ebdcb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}:
				_dedga.LnSpc = NewCT_TextSpacing()
				if _gaagf := d.DecodeElement(_dedga.LnSpc, &_ebdcb); _gaagf != nil {
					return _gaagf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}:
				_dedga.SpcBef = NewCT_TextSpacing()
				if _facc := d.DecodeElement(_dedga.SpcBef, &_ebdcb); _facc != nil {
					return _facc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}:
				_dedga.SpcAft = NewCT_TextSpacing()
				if _babdg := d.DecodeElement(_dedga.SpcAft, &_ebdcb); _babdg != nil {
					return _babdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_dedga.BuClrTx = NewCT_TextBulletColorFollowText()
				if _ebaae := d.DecodeElement(_dedga.BuClrTx, &_ebdcb); _ebaae != nil {
					return _ebaae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_dedga.BuClr = NewCT_Color()
				if _daegb := d.DecodeElement(_dedga.BuClr, &_ebdcb); _daegb != nil {
					return _daegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_dedga.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _bbeef := d.DecodeElement(_dedga.BuSzTx, &_ebdcb); _bbeef != nil {
					return _bbeef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_dedga.BuSzPct = NewCT_TextBulletSizePercent()
				if _fagcc := d.DecodeElement(_dedga.BuSzPct, &_ebdcb); _fagcc != nil {
					return _fagcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_dedga.BuSzPts = NewCT_TextBulletSizePoint()
				if _bcfaa := d.DecodeElement(_dedga.BuSzPts, &_ebdcb); _bcfaa != nil {
					return _bcfaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_dedga.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _bcafd := d.DecodeElement(_dedga.BuFontTx, &_ebdcb); _bcafd != nil {
					return _bcafd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_dedga.BuFont = NewCT_TextFont()
				if _aeccb := d.DecodeElement(_dedga.BuFont, &_ebdcb); _aeccb != nil {
					return _aeccb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_dedga.BuNone = NewCT_TextNoBullet()
				if _gffac := d.DecodeElement(_dedga.BuNone, &_ebdcb); _gffac != nil {
					return _gffac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_dedga.BuAutoNum = NewCT_TextAutonumberBullet()
				if _ebdeg := d.DecodeElement(_dedga.BuAutoNum, &_ebdcb); _ebdeg != nil {
					return _ebdeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_dedga.BuChar = NewCT_TextCharBullet()
				if _efgdbb := d.DecodeElement(_dedga.BuChar, &_ebdcb); _efgdbb != nil {
					return _efgdbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_dedga.BuBlip = NewCT_TextBlipBullet()
				if _gcaeb := d.DecodeElement(_dedga.BuBlip, &_ebdcb); _gcaeb != nil {
					return _gcaeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}:
				_dedga.TabLst = NewCT_TextTabStopList()
				if _cdefg := d.DecodeElement(_dedga.TabLst, &_ebdcb); _cdefg != nil {
					return _cdefg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}:
				_dedga.DefRPr = NewCT_TextCharacterProperties()
				if _gfageb := d.DecodeElement(_dedga.DefRPr, &_ebdcb); _gfageb != nil {
					return _gfageb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dedga.ExtLst = NewCT_OfficeArtExtensionList()
				if _dfbeca := d.DecodeElement(_dedga.ExtLst, &_ebdcb); _dfbeca != nil {
					return _dfbeca
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ebdcb.Name)
				if _cfcfed := d.Skip(); _cfcfed != nil {
					return _cfcfed
				}
			}
		case _g.EndElement:
			break _baeaec
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GeomGuide and its children
func (_ebgcf *CT_GeomGuide) Validate() error {
	return _ebgcf.ValidateWithPath("\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065")
}

func (_gbaebc *EG_TextGeometry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Name.Local = "\u0061\u003a\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0047\u0065\u006fm\u0065\u0074\u0072\u0079"
	if _gbaebc.CustGeom != nil {
		_agcga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_gbaebc.CustGeom, _agcga)
	}
	if _gbaebc.PrstTxWarp != nil {
		_fceab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_gbaebc.PrstTxWarp, _fceab)
	}
	return nil
}

func NewCT_DefaultShapeDefinition() *CT_DefaultShapeDefinition {
	_eaacc := &CT_DefaultShapeDefinition{}
	_eaacc.SpPr = NewCT_ShapeProperties()
	_eaacc.BodyPr = NewCT_TextBodyProperties()
	_eaacc.LstStyle = NewCT_TextListStyle()
	return _eaacc
}

func (_ggcdc *CT_RelativeRect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _deeaedd := range start.Attr {
		if _deeaedd.Name.Local == "\u006c" {
			_gegdd, _efgfa := ParseUnionST_Percentage(_deeaedd.Value)
			if _efgfa != nil {
				return _efgfa
			}
			_ggcdc.LAttr = &_gegdd
			continue
		}
		if _deeaedd.Name.Local == "\u0074" {
			_gddcd, _bgga := ParseUnionST_Percentage(_deeaedd.Value)
			if _bgga != nil {
				return _bgga
			}
			_ggcdc.TAttr = &_gddcd
			continue
		}
		if _deeaedd.Name.Local == "\u0072" {
			_fbca, _eabged := ParseUnionST_Percentage(_deeaedd.Value)
			if _eabged != nil {
				return _eabged
			}
			_ggcdc.RAttr = &_fbca
			continue
		}
		if _deeaedd.Name.Local == "\u0062" {
			_cccged, _gdbc := ParseUnionST_Percentage(_deeaedd.Value)
			if _gdbc != nil {
				return _gdbc
			}
			_ggcdc.BAttr = &_cccged
			continue
		}
	}
	for {
		_ffade, _fgbf := d.Token()
		if _fgbf != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069v\u0065\u0052\u0065c\u0074:\u0020\u0025\u0073", _fgbf)
		}
		if _gbff, _dddad := _ffade.(_g.EndElement); _dddad && _gbff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fdabc *CT_Point3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bceaf := range start.Attr {
		if _bceaf.Name.Local == "\u0078" {
			_ceecc, _gddd := ParseUnionST_Coordinate(_bceaf.Value)
			if _gddd != nil {
				return _gddd
			}
			_fdabc.XAttr = _ceecc
			continue
		}
		if _bceaf.Name.Local == "\u0079" {
			_abbd, _ccddb := ParseUnionST_Coordinate(_bceaf.Value)
			if _ccddb != nil {
				return _ccddb
			}
			_fdabc.YAttr = _abbd
			continue
		}
		if _bceaf.Name.Local == "\u007a" {
			_bgfc, _gada := ParseUnionST_Coordinate(_bceaf.Value)
			if _gada != nil {
				return _gada
			}
			_fdabc.ZAttr = _bgfc
			continue
		}
	}
	for {
		_befcg, _dfdccg := d.Token()
		if _dfdccg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044\u003a\u0020%\u0073", _dfdccg)
		}
		if _cggec, _edef := _befcg.(_g.EndElement); _edef && _cggec.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecfgf ST_EffectContainerType) String() string {
	switch _ecfgf {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u0062"
	case 2:
		return "\u0074\u0072\u0065\u0065"
	}
	return ""
}

func (_aeaeb *CT_TextUnderlineFillFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_eeagf, _fcbeg := d.Token()
		if _fcbeg != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _fcbeg)
		}
		if _eeaec, _cfdedc := _eeagf.(_g.EndElement); _cfdedc && _eeaec.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the EG_FillModeProperties and its children
func (_fbfed *EG_FillModeProperties) Validate() error {
	return _fbfed.ValidateWithPath("E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_cceb *CT_HSLEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _edff := range start.Attr {
		if _edff.Name.Local == "\u0068\u0075\u0065" {
			_gdcgd, _cbbe := _fg.ParseInt(_edff.Value, 10, 32)
			if _cbbe != nil {
				return _cbbe
			}
			_fecab := int32(_gdcgd)
			_cceb.HueAttr = &_fecab
			continue
		}
		if _edff.Name.Local == "\u0073\u0061\u0074" {
			_ggfeb, _egbbd := ParseUnionST_FixedPercentage(_edff.Value)
			if _egbbd != nil {
				return _egbbd
			}
			_cceb.SatAttr = &_ggfeb
			continue
		}
		if _edff.Name.Local == "\u006c\u0075\u006d" {
			_cbada, _eebff := ParseUnionST_FixedPercentage(_edff.Value)
			if _eebff != nil {
				return _eebff
			}
			_cceb.LumAttr = &_cbada
			continue
		}
	}
	for {
		_dbbeg, _faeda := d.Token()
		if _faeda != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0053L\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _faeda)
		}
		if _ebfg, _babbg := _dbbeg.(_g.EndElement); _babbg && _ebfg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fccae *ST_TextFontAlignType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gceeed, _dacge := d.Token()
	if _dacge != nil {
		return _dacge
	}
	if _afacg, _accgg := _gceeed.(_g.EndElement); _accgg && _afacg.Name == start.Name {
		*_fccae = 1
		return nil
	}
	if _aggge, _ccgga := _gceeed.(_g.CharData); !_ccgga {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gceeed)
	} else {
		switch string(_aggge) {
		case "":
			*_fccae = 0
		case "\u0061\u0075\u0074\u006f":
			*_fccae = 1
		case "\u0074":
			*_fccae = 2
		case "\u0063\u0074\u0072":
			*_fccae = 3
		case "\u0062\u0061\u0073\u0065":
			*_fccae = 4
		case "\u0062":
			*_fccae = 5
		}
	}
	_gceeed, _dacge = d.Token()
	if _dacge != nil {
		return _dacge
	}
	if _fcegc, _cggd := _gceeed.(_g.EndElement); _cggd && _fcegc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gceeed)
}

type CT_GvmlShape struct {
	NvSpPr *CT_GvmlShapeNonVisual
	SpPr   *CT_ShapeProperties
	TxSp   *CT_GvmlTextShape
	Style  *CT_ShapeStyle
	ExtLst *CT_OfficeArtExtensionList
}

// Validate validates the CT_Cell3D and its children
func (_fdeb *CT_Cell3D) Validate() error {
	return _fdeb.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D")
}

// ValidateWithPath validates the CT_AlphaFloorEffect and its children, prefixing error messages with path
func (_aded *CT_AlphaFloorEffect) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_GvmlGroupShapeChoice and its children
func (_ccddf *CT_GvmlGroupShapeChoice) Validate() error {
	return _ccddf.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_Backdrop and its children, prefixing error messages with path
func (_dca *CT_Backdrop) ValidateWithPath(path string) error {
	if _aebc := _dca.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _aebc != nil {
		return _aebc
	}
	if _gaec := _dca.Norm.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d"); _gaec != nil {
		return _gaec
	}
	if _aeg := _dca.Up.ValidateWithPath(path + "\u002f\u0055\u0070"); _aeg != nil {
		return _aeg
	}
	if _dca.ExtLst != nil {
		if _eced := _dca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eced != nil {
			return _eced
		}
	}
	return nil
}

func (_cfea *CT_Blip) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cfea.CstateAttr != ST_BlipCompressionUnset {
		_abfg, _gfca := _cfea.CstateAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0073\u0074\u0061\u0074\u0065"})
		if _gfca != nil {
			return _gfca
		}
		start.Attr = append(start.Attr, _abfg)
	}
	if _cfea.EmbedAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_cfea.EmbedAttr)})
	}
	if _cfea.LinkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", *_cfea.LinkAttr)})
	}
	e.EncodeToken(start)
	if _cfea.Choice != nil {
		for _, _gabe := range _cfea.Choice {
			_gabe.MarshalXML(e, _g.StartElement{})
		}
	}
	if _cfea.ExtLst != nil {
		_dcgg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfea.ExtLst, _dcgg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ggbdd *CT_FillStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ggff:
	for {
		_ebace, _abecf := d.Token()
		if _abecf != nil {
			return _abecf
		}
		switch _eaade := _ebace.(type) {
		case _g.StartElement:
			switch _eaade.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_eeffa := NewEG_FillProperties()
				_eeffa.NoFill = NewCT_NoFillProperties()
				if _dfgde := d.DecodeElement(_eeffa.NoFill, &_eaade); _dfgde != nil {
					return _dfgde
				}
				_ggbdd.EG_FillProperties = append(_ggbdd.EG_FillProperties, _eeffa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_degea := NewEG_FillProperties()
				_degea.SolidFill = NewCT_SolidColorFillProperties()
				if _afbb := d.DecodeElement(_degea.SolidFill, &_eaade); _afbb != nil {
					return _afbb
				}
				_ggbdd.EG_FillProperties = append(_ggbdd.EG_FillProperties, _degea)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_gaae := NewEG_FillProperties()
				_gaae.GradFill = NewCT_GradientFillProperties()
				if _acad := d.DecodeElement(_gaae.GradFill, &_eaade); _acad != nil {
					return _acad
				}
				_ggbdd.EG_FillProperties = append(_ggbdd.EG_FillProperties, _gaae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_begcc := NewEG_FillProperties()
				_begcc.BlipFill = NewCT_BlipFillProperties()
				if _bacae := d.DecodeElement(_begcc.BlipFill, &_eaade); _bacae != nil {
					return _bacae
				}
				_ggbdd.EG_FillProperties = append(_ggbdd.EG_FillProperties, _begcc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_gfaba := NewEG_FillProperties()
				_gfaba.PattFill = NewCT_PatternFillProperties()
				if _bageg := d.DecodeElement(_gfaba.PattFill, &_eaade); _bageg != nil {
					return _bageg
				}
				_ggbdd.EG_FillProperties = append(_ggbdd.EG_FillProperties, _gfaba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_dded := NewEG_FillProperties()
				_dded.GrpFill = NewCT_GroupFillProperties()
				if _eddc := d.DecodeElement(_dded.GrpFill, &_eaade); _eddc != nil {
					return _eddc
				}
				_ggbdd.EG_FillProperties = append(_ggbdd.EG_FillProperties, _dded)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _eaade.Name)
				if _adbce := d.Skip(); _adbce != nil {
					return _adbce
				}
			}
		case _g.EndElement:
			break _ggff
		case _g.CharData:
		}
	}
	return nil
}

func (_eccfc *CT_TextNoBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextUnderlineFillGroupWrapper and its children, prefixing error messages with path
func (_ddbcf *CT_TextUnderlineFillGroupWrapper) ValidateWithPath(path string) error {
	if _ddbcf.NoFill != nil {
		if _afdab := _ddbcf.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _afdab != nil {
			return _afdab
		}
	}
	if _ddbcf.SolidFill != nil {
		if _bfdab := _ddbcf.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _bfdab != nil {
			return _bfdab
		}
	}
	if _ddbcf.GradFill != nil {
		if _abef := _ddbcf.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _abef != nil {
			return _abef
		}
	}
	if _ddbcf.BlipFill != nil {
		if _gbfdb := _ddbcf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gbfdb != nil {
			return _gbfdb
		}
	}
	if _ddbcf.PattFill != nil {
		if _dbaa := _ddbcf.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _dbaa != nil {
			return _dbaa
		}
	}
	if _ddbcf.GrpFill != nil {
		if _eaafb := _ddbcf.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _eaafb != nil {
			return _eaafb
		}
	}
	return nil
}

func (_cfbd *ST_TextHorzOverflowType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dfbc, _fcgba := d.Token()
	if _fcgba != nil {
		return _fcgba
	}
	if _dgagdg, _daafe := _dfbc.(_g.EndElement); _daafe && _dgagdg.Name == start.Name {
		*_cfbd = 1
		return nil
	}
	if _ggdbd, _fbgeec := _dfbc.(_g.CharData); !_fbgeec {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfbc)
	} else {
		switch string(_ggdbd) {
		case "":
			*_cfbd = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_cfbd = 1
		case "\u0063\u006c\u0069\u0070":
			*_cfbd = 2
		}
	}
	_dfbc, _fcgba = d.Token()
	if _fcgba != nil {
		return _fcgba
	}
	if _geccf, _dedadb := _dfbc.(_g.EndElement); _dedadb && _geccf.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfbc)
}

func NewCT_AnimationChartBuildProperties() *CT_AnimationChartBuildProperties {
	_gfc := &CT_AnimationChartBuildProperties{}
	return _gfc
}

// ValidateWithPath validates the CT_TableCellProperties and its children, prefixing error messages with path
func (_ffde *CT_TableCellProperties) ValidateWithPath(path string) error {
	if _ffde.MarLAttr != nil {
		if _fbbef := _ffde.MarLAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u004c\u0041\u0074\u0074r"); _fbbef != nil {
			return _fbbef
		}
	}
	if _ffde.MarRAttr != nil {
		if _dddc := _ffde.MarRAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0052\u0041\u0074\u0074r"); _dddc != nil {
			return _dddc
		}
	}
	if _ffde.MarTAttr != nil {
		if _ecccb := _ffde.MarTAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0054\u0041\u0074\u0074r"); _ecccb != nil {
			return _ecccb
		}
	}
	if _ffde.MarBAttr != nil {
		if _efega := _ffde.MarBAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0042\u0041\u0074\u0074r"); _efega != nil {
			return _efega
		}
	}
	if _fgefg := _ffde.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _fgefg != nil {
		return _fgefg
	}
	if _acdac := _ffde.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _acdac != nil {
		return _acdac
	}
	if _fdccf := _ffde.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _fdccf != nil {
		return _fdccf
	}
	if _ffde.LnL != nil {
		if _aaggb := _ffde.LnL.ValidateWithPath(path + "\u002f\u004c\u006e\u004c"); _aaggb != nil {
			return _aaggb
		}
	}
	if _ffde.LnR != nil {
		if _dbce := _ffde.LnR.ValidateWithPath(path + "\u002f\u004c\u006e\u0052"); _dbce != nil {
			return _dbce
		}
	}
	if _ffde.LnT != nil {
		if _deaad := _ffde.LnT.ValidateWithPath(path + "\u002f\u004c\u006e\u0054"); _deaad != nil {
			return _deaad
		}
	}
	if _ffde.LnB != nil {
		if _cafcb := _ffde.LnB.ValidateWithPath(path + "\u002f\u004c\u006e\u0042"); _cafcb != nil {
			return _cafcb
		}
	}
	if _ffde.LnTlToBr != nil {
		if _fggb := _ffde.LnTlToBr.ValidateWithPath(path + "\u002fL\u006e\u0054\u006c\u0054\u006f\u0042r"); _fggb != nil {
			return _fggb
		}
	}
	if _ffde.LnBlToTr != nil {
		if _debeg := _ffde.LnBlToTr.ValidateWithPath(path + "\u002fL\u006e\u0042\u006c\u0054\u006f\u0054r"); _debeg != nil {
			return _debeg
		}
	}
	if _ffde.Cell3D != nil {
		if _edfea := _ffde.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _edfea != nil {
			return _edfea
		}
	}
	if _ffde.NoFill != nil {
		if _bbbgc := _ffde.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bbbgc != nil {
			return _bbbgc
		}
	}
	if _ffde.SolidFill != nil {
		if _dedab := _ffde.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dedab != nil {
			return _dedab
		}
	}
	if _ffde.GradFill != nil {
		if _dcgcb := _ffde.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _dcgcb != nil {
			return _dcgcb
		}
	}
	if _ffde.BlipFill != nil {
		if _cggea := _ffde.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cggea != nil {
			return _cggea
		}
	}
	if _ffde.PattFill != nil {
		if _bggdcd := _ffde.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bggdcd != nil {
			return _bggdcd
		}
	}
	if _ffde.GrpFill != nil {
		if _cgeg := _ffde.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cgeg != nil {
			return _cgeg
		}
	}
	if _ffde.Headers != nil {
		if _abdfg := _ffde.Headers.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0073"); _abdfg != nil {
			return _abdfg
		}
	}
	if _ffde.ExtLst != nil {
		if _dgadb := _ffde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgadb != nil {
			return _dgadb
		}
	}
	return nil
}

type ST_TextTabAlignType byte

func (_cgf *CT_ColorScheme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgf.Dk1 = NewCT_Color()
	_cgf.Lt1 = NewCT_Color()
	_cgf.Dk2 = NewCT_Color()
	_cgf.Lt2 = NewCT_Color()
	_cgf.Accent1 = NewCT_Color()
	_cgf.Accent2 = NewCT_Color()
	_cgf.Accent3 = NewCT_Color()
	_cgf.Accent4 = NewCT_Color()
	_cgf.Accent5 = NewCT_Color()
	_cgf.Accent6 = NewCT_Color()
	_cgf.Hlink = NewCT_Color()
	_cgf.FolHlink = NewCT_Color()
	for _, _bbab := range start.Attr {
		if _bbab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aagda, _ddfg := _bbab.Value, error(nil)
			if _ddfg != nil {
				return _ddfg
			}
			_cgf.NameAttr = _aagda
			continue
		}
	}
_bbcg:
	for {
		_babg, _abbe := d.Token()
		if _abbe != nil {
			return _abbe
		}
		switch _ccdd := _babg.(type) {
		case _g.StartElement:
			switch _ccdd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}:
				if _abfe := d.DecodeElement(_cgf.Dk1, &_ccdd); _abfe != nil {
					return _abfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}:
				if _dbgf := d.DecodeElement(_cgf.Lt1, &_ccdd); _dbgf != nil {
					return _dbgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}:
				if _eabfe := d.DecodeElement(_cgf.Dk2, &_ccdd); _eabfe != nil {
					return _eabfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}:
				if _gcgaa := d.DecodeElement(_cgf.Lt2, &_ccdd); _gcgaa != nil {
					return _gcgaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}:
				if _beca := d.DecodeElement(_cgf.Accent1, &_ccdd); _beca != nil {
					return _beca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}:
				if _bafdg := d.DecodeElement(_cgf.Accent2, &_ccdd); _bafdg != nil {
					return _bafdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}:
				if _gdaee := d.DecodeElement(_cgf.Accent3, &_ccdd); _gdaee != nil {
					return _gdaee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}:
				if _gbaf := d.DecodeElement(_cgf.Accent4, &_ccdd); _gbaf != nil {
					return _gbaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}:
				if _bgba := d.DecodeElement(_cgf.Accent5, &_ccdd); _bgba != nil {
					return _bgba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}:
				if _gdfb := d.DecodeElement(_cgf.Accent6, &_ccdd); _gdfb != nil {
					return _gdfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}:
				if _bcbbe := d.DecodeElement(_cgf.Hlink, &_ccdd); _bcbbe != nil {
					return _bcbbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}:
				if _bbabd := d.DecodeElement(_cgf.FolHlink, &_ccdd); _bbabd != nil {
					return _bbabd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgf.ExtLst = NewCT_OfficeArtExtensionList()
				if _fgcd := d.DecodeElement(_cgf.ExtLst, &_ccdd); _fgcd != nil {
					return _fgcd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063h\u0065m\u0065\u0020\u0025\u0076", _ccdd.Name)
				if _gdef := d.Skip(); _gdef != nil {
					return _gdef
				}
			}
		case _g.EndElement:
			break _bbcg
		case _g.CharData:
		}
	}
	return nil
}

func (_cacef *CT_TextAutonumberBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cacef.TypeAttr = ST_TextAutonumberScheme(1)
	for _, _gagad := range start.Attr {
		if _gagad.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cacef.TypeAttr.UnmarshalXMLAttr(_gagad)
			continue
		}
		if _gagad.Name.Local == "\u0073t\u0061\u0072\u0074\u0041\u0074" {
			_ecece, _gbefe := _fg.ParseInt(_gagad.Value, 10, 32)
			if _gbefe != nil {
				return _gbefe
			}
			_adgbe := int32(_ecece)
			_cacef.StartAtAttr = &_adgbe
			continue
		}
	}
	for {
		_ggbga, _ecafb := d.Token()
		if _ecafb != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078t\u0041\u0075\u0074\u006f\u006e\u0075\u006db\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074\u003a\u0020%\u0073", _ecafb)
		}
		if _acead, _eedbb := _ggbga.(_g.EndElement); _eedbb && _acead.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcfdca ST_LightRigDirection) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fcfdca.String(), start)
}

// ValidateWithPath validates the AG_Locking and its children, prefixing error messages with path
func (_fa *AG_Locking) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_FontCollection and its children
func (_dfdgb *CT_FontCollection) Validate() error {
	return _dfdgb.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e")
}

func (_cacdd *ST_TextVertOverflowType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cacdd = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_cacdd = 1
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
		*_cacdd = 2
	case "\u0063\u006c\u0069\u0070":
		*_cacdd = 3
	}
	return nil
}

func NewCT_Path2DLineTo() *CT_Path2DLineTo {
	_eacad := &CT_Path2DLineTo{}
	_eacad.Pt = NewCT_AdjPoint2D()
	return _eacad
}

type ST_SchemeColorVal byte

func (_adaeb *CT_PositiveFixedAngle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _adaeb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cfcb *ST_LineEndLength) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cfcb = 0
	case "\u0073\u006d":
		*_cfcb = 1
	case "\u006d\u0065\u0064":
		*_cfcb = 2
	case "\u006c\u0067":
		*_cfcb = 3
	}
	return nil
}

func (_badfbf *CT_WholeE2oFormatting) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bfage:
	for {
		_aegad, _gfadgc := d.Token()
		if _gfadgc != nil {
			return _gfadgc
		}
		switch _fcbd := _aegad.(type) {
		case _g.StartElement:
			switch _fcbd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_badfbf.Ln = NewCT_LineProperties()
				if _cgagbg := d.DecodeElement(_badfbf.Ln, &_fcbd); _cgagbg != nil {
					return _cgagbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_badfbf.EffectLst = NewCT_EffectList()
				if _abbac := d.DecodeElement(_badfbf.EffectLst, &_fcbd); _abbac != nil {
					return _abbac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_badfbf.EffectDag = NewCT_EffectContainer()
				if _efffe := d.DecodeElement(_badfbf.EffectDag, &_fcbd); _efffe != nil {
					return _efffe
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0057\u0068\u006f\u006c\u0065\u0045\u0032\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _fcbd.Name)
				if _daafg := d.Skip(); _daafg != nil {
					return _daafg
				}
			}
		case _g.EndElement:
			break _bfage
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_DashStop() *CT_DashStop { _bdcd := &CT_DashStop{}; return _bdcd }

func (_ddbcg *CT_TextNoBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_eddfd, _gbccg := d.Token()
		if _gbccg != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004e\u006fB\u0075\u006c\u006ce\u0074:\u0020\u0025\u0073", _gbccg)
		}
		if _dagga, _effee := _eddfd.(_g.EndElement); _effee && _dagga.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_LuminanceEffect and its children
func (_edab *CT_LuminanceEffect) Validate() error {
	return _edab.ValidateWithPath("\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074")
}

func (_ffdcg *CT_Path2DCubicBezierTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_fdeed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _bbefc := range _ffdcg.Pt {
		e.EncodeElement(_bbefc, _fdeed)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AlphaInverseEffect and its children
func (_efc *CT_AlphaInverseEffect) Validate() error {
	return _efc.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cadgag ST_PenAlignment) String() string {
	switch _cadgag {
	case 0:
		return ""
	case 1:
		return "\u0063\u0074\u0072"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_FillEffect and its children, prefixing error messages with path
func (_abeec *CT_FillEffect) ValidateWithPath(path string) error {
	if _abeec.NoFill != nil {
		if _bcdd := _abeec.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bcdd != nil {
			return _bcdd
		}
	}
	if _abeec.SolidFill != nil {
		if _cdfd := _abeec.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _cdfd != nil {
			return _cdfd
		}
	}
	if _abeec.GradFill != nil {
		if _gbee := _abeec.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _gbee != nil {
			return _gbee
		}
	}
	if _abeec.BlipFill != nil {
		if _edbae := _abeec.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _edbae != nil {
			return _edbae
		}
	}
	if _abeec.PattFill != nil {
		if _aggf := _abeec.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _aggf != nil {
			return _aggf
		}
	}
	if _abeec.GrpFill != nil {
		if _gbgc := _abeec.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gbgc != nil {
			return _gbgc
		}
	}
	return nil
}

type EG_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

type CT_TextShapeAutofit struct{}

func NewCT_GeomGuideList() *CT_GeomGuideList { _ffccb := &CT_GeomGuideList{}; return _ffccb }

func (_fad *CT_AdjustHandleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agd:
	for {
		_cca, _fff := d.Token()
		if _fff != nil {
			return _fff
		}
		switch _dbg := _cca.(type) {
		case _g.StartElement:
			switch _dbg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}:
				_ead := NewCT_XYAdjustHandle()
				if _fab := d.DecodeElement(_ead, &_dbg); _fab != nil {
					return _fab
				}
				_fad.AhXY = append(_fad.AhXY, _ead)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}:
				_fdf := NewCT_PolarAdjustHandle()
				if _efa := d.DecodeElement(_fdf, &_dbg); _efa != nil {
					return _efa
				}
				_fad.AhPolar = append(_fad.AhPolar, _fdf)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0041\u0064\u006a\u0075\u0073\u0074\u0048an\u0064\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dbg.Name)
				if _ebb := d.Skip(); _ebb != nil {
					return _ebb
				}
			}
		case _g.EndElement:
			break _agd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the Graphic and its children
func (_debba *Graphic) Validate() error {
	return _debba.ValidateWithPath("\u0047r\u0061\u0070\u0068\u0069\u0063")
}

// Validate validates the CT_LineProperties and its children
func (_egcad *CT_LineProperties) Validate() error {
	return _egcad.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func (_gac *CT_AnimationElementChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cbf:
	for {
		_eggef, _ebe := d.Token()
		if _ebe != nil {
			return _ebe
		}
		switch _afg := _eggef.(type) {
		case _g.StartElement:
			switch _afg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}:
				_gac.Dgm = NewCT_AnimationDgmElement()
				if _bdc := d.DecodeElement(_gac.Dgm, &_afg); _bdc != nil {
					return _bdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}:
				_gac.Chart = NewCT_AnimationChartElement()
				if _fbc := d.DecodeElement(_gac.Chart, &_afg); _fbc != nil {
					return _fbc
				}
			default:
				_fc.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006fn\u0045l\u0065\u006d\u0065\u006e\u0074\u0043\u0068\u006fi\u0063e\u0020\u0025v", _afg.Name)
				if _cbfe := d.Skip(); _cbfe != nil {
					return _cbfe
				}
			}
		case _g.EndElement:
			break _cbf
		case _g.CharData:
		}
	}
	return nil
}

func (_eggcf ST_AnimationChartOnlyBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fgcfb := _g.Attr{}
	_fgcfb.Name = name
	switch _eggcf {
	case ST_AnimationChartOnlyBuildTypeUnset:
		_fgcfb.Value = ""
	case ST_AnimationChartOnlyBuildTypeSeries:
		_fgcfb.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_AnimationChartOnlyBuildTypeCategory:
		_fgcfb.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_AnimationChartOnlyBuildTypeSeriesEl:
		_fgcfb.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_AnimationChartOnlyBuildTypeCategoryEl:
		_fgcfb.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _fgcfb, nil
}

func (_bafbg *ST_SchemeColorVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bafbg = 0
	case "\u0062\u0067\u0031":
		*_bafbg = 1
	case "\u0074\u0078\u0031":
		*_bafbg = 2
	case "\u0062\u0067\u0032":
		*_bafbg = 3
	case "\u0074\u0078\u0032":
		*_bafbg = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_bafbg = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_bafbg = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_bafbg = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_bafbg = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_bafbg = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_bafbg = 10
	case "\u0068\u006c\u0069n\u006b":
		*_bafbg = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_bafbg = 12
	case "\u0070\u0068\u0043l\u0072":
		*_bafbg = 13
	case "\u0064\u006b\u0031":
		*_bafbg = 14
	case "\u006c\u0074\u0031":
		*_bafbg = 15
	case "\u0064\u006b\u0032":
		*_bafbg = 16
	case "\u006c\u0074\u0032":
		*_bafbg = 17
	}
	return nil
}

func (_gegcg *CT_GradientStop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _badc := range start.Attr {
		if _badc.Name.Local == "\u0070\u006f\u0073" {
			_cabf, _gecb := ParseUnionST_PositiveFixedPercentage(_badc.Value)
			if _gecb != nil {
				return _gecb
			}
			_gegcg.PosAttr = _cabf
			continue
		}
	}
_ebeb:
	for {
		_dbbce, _gaeg := d.Token()
		if _gaeg != nil {
			return _gaeg
		}
		switch _gceee := _dbbce.(type) {
		case _g.StartElement:
			switch _gceee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_gegcg.ScrgbClr = NewCT_ScRgbColor()
				if _bcef := d.DecodeElement(_gegcg.ScrgbClr, &_gceee); _bcef != nil {
					return _bcef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_gegcg.SrgbClr = NewCT_SRgbColor()
				if _ecbdg := d.DecodeElement(_gegcg.SrgbClr, &_gceee); _ecbdg != nil {
					return _ecbdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_gegcg.HslClr = NewCT_HslColor()
				if _fdcd := d.DecodeElement(_gegcg.HslClr, &_gceee); _fdcd != nil {
					return _fdcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_gegcg.SysClr = NewCT_SystemColor()
				if _fgcg := d.DecodeElement(_gegcg.SysClr, &_gceee); _fgcg != nil {
					return _fgcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gegcg.SchemeClr = NewCT_SchemeColor()
				if _eecff := d.DecodeElement(_gegcg.SchemeClr, &_gceee); _eecff != nil {
					return _eecff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_gegcg.PrstClr = NewCT_PresetColor()
				if _cbcdd := d.DecodeElement(_gegcg.PrstClr, &_gceee); _cbcdd != nil {
					return _cbcdd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _gceee.Name)
				if _fecef := d.Skip(); _fecef != nil {
					return _fecef
				}
			}
		case _g.EndElement:
			break _ebeb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_TextBullet and its children, prefixing error messages with path
func (_ebgf *EG_TextBullet) ValidateWithPath(path string) error {
	if _ebgf.BuNone != nil {
		if _cfgcf := _ebgf.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _cfgcf != nil {
			return _cfgcf
		}
	}
	if _ebgf.BuAutoNum != nil {
		if _adgda := _ebgf.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _adgda != nil {
			return _adgda
		}
	}
	if _ebgf.BuChar != nil {
		if _agada := _ebgf.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _agada != nil {
			return _agada
		}
	}
	if _ebgf.BuBlip != nil {
		if _ccdge := _ebgf.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _ccdge != nil {
			return _ccdge
		}
	}
	return nil
}

// Validate validates the CT_AlphaReplaceEffect and its children
func (_bdgc *CT_AlphaReplaceEffect) Validate() error {
	return _bdgc.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_accea *CT_ScRgbColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072"}, Value: _bb.Sprintf("\u0025\u0076", _accea.RAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _accea.GAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0076", _accea.BAttr)})
	e.EncodeToken(start)
	if _accea.EG_ColorTransform != nil {
		for _, _bccgb := range _accea.EG_ColorTransform {
			_bccgb.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LineJoinMiterProperties and its children
func (_abffe *CT_LineJoinMiterProperties) Validate() error {
	return _abffe.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

const (
	ST_TextVerticalTypeUnset          ST_TextVerticalType = 0
	ST_TextVerticalTypeHorz           ST_TextVerticalType = 1
	ST_TextVerticalTypeVert           ST_TextVerticalType = 2
	ST_TextVerticalTypeVert270        ST_TextVerticalType = 3
	ST_TextVerticalTypeWordArtVert    ST_TextVerticalType = 4
	ST_TextVerticalTypeEaVert         ST_TextVerticalType = 5
	ST_TextVerticalTypeMongolianVert  ST_TextVerticalType = 6
	ST_TextVerticalTypeWordArtVertRtl ST_TextVerticalType = 7
)

func NewCT_TableCell() *CT_TableCell { _cbbed := &CT_TableCell{}; return _cbbed }

func NewCT_PresetLineDashProperties() *CT_PresetLineDashProperties {
	_fbgf := &CT_PresetLineDashProperties{}
	return _fbgf
}

func ParseUnionST_FixedPercentage(s string) (ST_FixedPercentage, error) {
	_defaee := ST_FixedPercentage{}
	if _a.ST_FixedPercentagePatternRe.MatchString(s) {
		_defaee.ST_FixedPercentage = &ST_Percentage{}
		_defaee.ST_FixedPercentage.ST_Percentage = &s
	} else {
		_ecbfb, _dgbae := _fg.ParseInt(s, 10, 64)
		if _dgbae != nil {
			return _defaee, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dgbae)
		}
		_ebffag := int32(_ecbfb)
		_defaee.ST_FixedPercentageDecimal = &_ebffag
	}
	return _defaee, nil
}

// Validate validates the CT_TableStyleCellStyle and its children
func (_bcdcf *CT_TableStyleCellStyle) Validate() error {
	return _bcdcf.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065")
}

type ST_EffectContainerType byte

type CT_GvmlConnectorNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvCxnSpPr *CT_NonVisualConnectorProperties
}

type CT_Path2DLineTo struct{ Pt *CT_AdjPoint2D }

// Validate validates the CT_Shape3D and its children
func (_dgaaf *CT_Shape3D) Validate() error {
	return _dgaaf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044")
}

func (_bbdb *ST_TextVerticalType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_egfegaf, _faceb := d.Token()
	if _faceb != nil {
		return _faceb
	}
	if _abadg, _afaeg := _egfegaf.(_g.EndElement); _afaeg && _abadg.Name == start.Name {
		*_bbdb = 1
		return nil
	}
	if _gadaa, _cdcbc := _egfegaf.(_g.CharData); !_cdcbc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egfegaf)
	} else {
		switch string(_gadaa) {
		case "":
			*_bbdb = 0
		case "\u0068\u006f\u0072\u007a":
			*_bbdb = 1
		case "\u0076\u0065\u0072\u0074":
			*_bbdb = 2
		case "\u0076e\u0072\u0074\u0032\u0037\u0030":
			*_bbdb = 3
		case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
			*_bbdb = 4
		case "\u0065\u0061\u0056\u0065\u0072\u0074":
			*_bbdb = 5
		case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
			*_bbdb = 6
		case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
			*_bbdb = 7
		}
	}
	_egfegaf, _faceb = d.Token()
	if _faceb != nil {
		return _faceb
	}
	if _aacg, _bdagfa := _egfegaf.(_g.EndElement); _bdagfa && _aacg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egfegaf)
}

func NewCT_Vector3D() *CT_Vector3D { _ageaf := &CT_Vector3D{}; return _ageaf }

// Validate validates the CT_GraphicalObjectFrameLocking and its children
func (_cfead *CT_GraphicalObjectFrameLocking) Validate() error {
	return _cfead.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_dafaf ST_TextUnderlineType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dafaf.String(), start)
}

func (_ggeca ST_Coordinate) String() string {
	if _ggeca.ST_CoordinateUnqualified != nil {
		return _bb.Sprintf("\u0025\u0076", *_ggeca.ST_CoordinateUnqualified)
	}
	if _ggeca.ST_UniversalMeasure != nil {
		return _bb.Sprintf("\u0025\u0076", *_ggeca.ST_UniversalMeasure)
	}
	return ""
}

func NewCT_ColorMRU() *CT_ColorMRU { _acag := &CT_ColorMRU{}; return _acag }

// Validate validates the EG_TextUnderlineLine and its children
func (_eedbf *EG_TextUnderlineLine) Validate() error {
	return _eedbf.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065")
}

func (_aede ST_BlipCompression) String() string {
	switch _aede {
	case 0:
		return ""
	case 1:
		return "\u0065\u006d\u0061i\u006c"
	case 2:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 3:
		return "\u0070\u0072\u0069n\u0074"
	case 4:
		return "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// Validate validates the CT_DuotoneEffect and its children
func (_cfgd *CT_DuotoneEffect) Validate() error {
	return _cfgd.ValidateWithPath("\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_bedb *CT_OfficeArtExtensionList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bedb.Ext != nil {
		_geac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _affdf := range _bedb.Ext {
			e.EncodeElement(_affdf, _geac)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_caaega ST_SchemeColorVal) Validate() error { return _caaega.ValidateWithPath("") }

// Validate validates the CT_PresetGeometry2D and its children
func (_dcffb *CT_PresetGeometry2D) Validate() error {
	return _dcffb.ValidateWithPath("\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}

func (_efegbe ST_TextWrappingType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fafag := _g.Attr{}
	_fafag.Name = name
	switch _efegbe {
	case ST_TextWrappingTypeUnset:
		_fafag.Value = ""
	case ST_TextWrappingTypeNone:
		_fafag.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextWrappingTypeSquare:
		_fafag.Value = "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return _fafag, nil
}

func (_dgcf *CT_PositiveSize2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgcf.CxAttr = 0
	_dgcf.CyAttr = 0
	for _, _dgcd := range start.Attr {
		if _dgcd.Name.Local == "\u0063\u0078" {
			_beecd, _bcbg := _fg.ParseInt(_dgcd.Value, 10, 64)
			if _bcbg != nil {
				return _bcbg
			}
			_dgcf.CxAttr = _beecd
			continue
		}
		if _dgcd.Name.Local == "\u0063\u0079" {
			_bfgg, _deafa := _fg.ParseInt(_dgcd.Value, 10, 64)
			if _deafa != nil {
				return _deafa
			}
			_dgcf.CyAttr = _bfgg
			continue
		}
	}
	for {
		_fdebe, _bfdgg := d.Token()
		if _bfdgg != nil {
			return _bb.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053\u0069\u007a\u0065\u0032\u0044: \u0025\u0073", _bfdgg)
		}
		if _egfe, _fcfcb := _fdebe.(_g.EndElement); _fcfcb && _egfe.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_BiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

// Validate validates the CT_PictureLocking and its children
func (_badbf *CT_PictureLocking) Validate() error {
	return _badbf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067")
}

type CT_ColorMapping struct {
	Bg1Attr      ST_ColorSchemeIndex
	Tx1Attr      ST_ColorSchemeIndex
	Bg2Attr      ST_ColorSchemeIndex
	Tx2Attr      ST_ColorSchemeIndex
	Accent1Attr  ST_ColorSchemeIndex
	Accent2Attr  ST_ColorSchemeIndex
	Accent3Attr  ST_ColorSchemeIndex
	Accent4Attr  ST_ColorSchemeIndex
	Accent5Attr  ST_ColorSchemeIndex
	Accent6Attr  ST_ColorSchemeIndex
	HlinkAttr    ST_ColorSchemeIndex
	FolHlinkAttr ST_ColorSchemeIndex
	ExtLst       *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the Theme and its children, prefixing error messages with path
func (_aefgb *Theme) ValidateWithPath(path string) error {
	if _aadcg := _aefgb.CT_OfficeStyleSheet.ValidateWithPath(path); _aadcg != nil {
		return _aadcg
	}
	return nil
}

func (_gdbbg *EG_Media) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cdaac:
	for {
		_efcgb, _bafed := d.Token()
		if _bafed != nil {
			return _bafed
		}
		switch _adfeb := _efcgb.(type) {
		case _g.StartElement:
			switch _adfeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_gdbbg.AudioCd = NewCT_AudioCD()
				if _dgfeb := d.DecodeElement(_gdbbg.AudioCd, &_adfeb); _dgfeb != nil {
					return _dgfeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_gdbbg.WavAudioFile = NewCT_EmbeddedWAVAudioFile()
				if _eacdab := d.DecodeElement(_gdbbg.WavAudioFile, &_adfeb); _eacdab != nil {
					return _eacdab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_gdbbg.AudioFile = NewCT_AudioFile()
				if _acceg := d.DecodeElement(_gdbbg.AudioFile, &_adfeb); _acceg != nil {
					return _acceg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_gdbbg.VideoFile = NewCT_VideoFile()
				if _ddaffd := d.DecodeElement(_gdbbg.VideoFile, &_adfeb); _ddaffd != nil {
					return _ddaffd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_gdbbg.QuickTimeFile = NewCT_QuickTimeFile()
				if _decfb := d.DecodeElement(_gdbbg.QuickTimeFile, &_adfeb); _decfb != nil {
					return _decfb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061\u0020\u0025\u0076", _adfeb.Name)
				if _cfdfe := d.Skip(); _cfdfe != nil {
					return _cfdfe
				}
			}
		case _g.EndElement:
			break _cdaac
		case _g.CharData:
		}
	}
	return nil
}

func (_degf *CT_Path2DClose) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_egaae, _beea := d.Token()
		if _beea != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0043\u006c\u006f\u0073\u0065:\u0020\u0025\u0073", _beea)
		}
		if _ccdcb, _geaff := _egaae.(_g.EndElement); _geaff && _ccdcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dbab *CT_ColorMappingOverride) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dbab.Choice.MarshalXML(e, _g.StartElement{})
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_acbcgc ST_TextWrappingType) ValidateWithPath(path string) error {
	switch _acbcgc {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acbcgc))
	}
	return nil
}

func (_egfgg *CT_CustomGeometry2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egfgg.AvLst != nil {
		_ffgf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_egfgg.AvLst, _ffgf)
	}
	if _egfgg.GdLst != nil {
		_aabd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_egfgg.GdLst, _aabd)
	}
	if _egfgg.AhLst != nil {
		_ccbg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0068\u004c\u0073\u0074"}}
		e.EncodeElement(_egfgg.AhLst, _ccbg)
	}
	if _egfgg.CxnLst != nil {
		_beae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0078\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_egfgg.CxnLst, _beae)
	}
	if _egfgg.Rect != nil {
		_gebbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u0063\u0074"}}
		e.EncodeElement(_egfgg.Rect, _gebbf)
	}
	_dbdgf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0061\u0074\u0068\u004c\u0073t"}}
	e.EncodeElement(_egfgg.PathLst, _dbdgf)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ClipboardStyleSheet and its children, prefixing error messages with path
func (_fedc *CT_ClipboardStyleSheet) ValidateWithPath(path string) error {
	if _fbac := _fedc.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _fbac != nil {
		return _fbac
	}
	if _baaf := _fedc.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _baaf != nil {
		return _baaf
	}
	return nil
}

type CT_TintEffect struct {
	HueAttr *int32
	AmtAttr *ST_FixedPercentage
}

func (_abdef *EG_ColorTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dffde:
	for {
		_gcfe, _cgeabg := d.Token()
		if _cgeabg != nil {
			return _cgeabg
		}
		switch _faagdg := _gcfe.(type) {
		case _g.StartElement:
			switch _faagdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_abdef.Tint = NewCT_PositiveFixedPercentage()
				if _cdcbg := d.DecodeElement(_abdef.Tint, &_faagdg); _cdcbg != nil {
					return _cdcbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_abdef.Shade = NewCT_PositiveFixedPercentage()
				if _gffga := d.DecodeElement(_abdef.Shade, &_faagdg); _gffga != nil {
					return _gffga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_abdef.Comp = NewCT_ComplementTransform()
				if _bgdgb := d.DecodeElement(_abdef.Comp, &_faagdg); _bgdgb != nil {
					return _bgdgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_abdef.Inv = NewCT_InverseTransform()
				if _fdcbg := d.DecodeElement(_abdef.Inv, &_faagdg); _fdcbg != nil {
					return _fdcbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_abdef.Gray = NewCT_GrayscaleTransform()
				if _dbaff := d.DecodeElement(_abdef.Gray, &_faagdg); _dbaff != nil {
					return _dbaff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_abdef.Alpha = NewCT_PositiveFixedPercentage()
				if _cabgb := d.DecodeElement(_abdef.Alpha, &_faagdg); _cabgb != nil {
					return _cabgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_abdef.AlphaOff = NewCT_FixedPercentage()
				if _ggbfd := d.DecodeElement(_abdef.AlphaOff, &_faagdg); _ggbfd != nil {
					return _ggbfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_abdef.AlphaMod = NewCT_PositivePercentage()
				if _feaba := d.DecodeElement(_abdef.AlphaMod, &_faagdg); _feaba != nil {
					return _feaba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_abdef.Hue = NewCT_PositiveFixedAngle()
				if _cgfefg := d.DecodeElement(_abdef.Hue, &_faagdg); _cgfefg != nil {
					return _cgfefg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_abdef.HueOff = NewCT_Angle()
				if _egffe := d.DecodeElement(_abdef.HueOff, &_faagdg); _egffe != nil {
					return _egffe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_abdef.HueMod = NewCT_PositivePercentage()
				if _effgf := d.DecodeElement(_abdef.HueMod, &_faagdg); _effgf != nil {
					return _effgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_abdef.Sat = NewCT_Percentage()
				if _cdae := d.DecodeElement(_abdef.Sat, &_faagdg); _cdae != nil {
					return _cdae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_abdef.SatOff = NewCT_Percentage()
				if _dcced := d.DecodeElement(_abdef.SatOff, &_faagdg); _dcced != nil {
					return _dcced
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_abdef.SatMod = NewCT_Percentage()
				if _fdfd := d.DecodeElement(_abdef.SatMod, &_faagdg); _fdfd != nil {
					return _fdfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_abdef.Lum = NewCT_Percentage()
				if _dgdbf := d.DecodeElement(_abdef.Lum, &_faagdg); _dgdbf != nil {
					return _dgdbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_abdef.LumOff = NewCT_Percentage()
				if _dagdc := d.DecodeElement(_abdef.LumOff, &_faagdg); _dagdc != nil {
					return _dagdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_abdef.LumMod = NewCT_Percentage()
				if _daecd := d.DecodeElement(_abdef.LumMod, &_faagdg); _daecd != nil {
					return _daecd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_abdef.Red = NewCT_Percentage()
				if _afcca := d.DecodeElement(_abdef.Red, &_faagdg); _afcca != nil {
					return _afcca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_abdef.RedOff = NewCT_Percentage()
				if _bafdbb := d.DecodeElement(_abdef.RedOff, &_faagdg); _bafdbb != nil {
					return _bafdbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_abdef.RedMod = NewCT_Percentage()
				if _aegb := d.DecodeElement(_abdef.RedMod, &_faagdg); _aegb != nil {
					return _aegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_abdef.Green = NewCT_Percentage()
				if _gafgg := d.DecodeElement(_abdef.Green, &_faagdg); _gafgg != nil {
					return _gafgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_abdef.GreenOff = NewCT_Percentage()
				if _eaeagg := d.DecodeElement(_abdef.GreenOff, &_faagdg); _eaeagg != nil {
					return _eaeagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_abdef.GreenMod = NewCT_Percentage()
				if _dfgcf := d.DecodeElement(_abdef.GreenMod, &_faagdg); _dfgcf != nil {
					return _dfgcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_abdef.Blue = NewCT_Percentage()
				if _egde := d.DecodeElement(_abdef.Blue, &_faagdg); _egde != nil {
					return _egde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_abdef.BlueOff = NewCT_Percentage()
				if _gabce := d.DecodeElement(_abdef.BlueOff, &_faagdg); _gabce != nil {
					return _gabce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_abdef.BlueMod = NewCT_Percentage()
				if _bgdbe := d.DecodeElement(_abdef.BlueMod, &_faagdg); _bgdbe != nil {
					return _bgdbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_abdef.Gamma = NewCT_GammaTransform()
				if _afgabg := d.DecodeElement(_abdef.Gamma, &_faagdg); _afgabg != nil {
					return _afgabg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_abdef.InvGamma = NewCT_InverseGammaTransform()
				if _dfegg := d.DecodeElement(_abdef.InvGamma, &_faagdg); _dfegg != nil {
					return _dfegg
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0020\u0025\u0076", _faagdg.Name)
				if _fbccd := d.Skip(); _fbccd != nil {
					return _fbccd
				}
			}
		case _g.EndElement:
			break _dffde
		case _g.CharData:
		}
	}
	return nil
}

func (_bggfg *CT_Transform2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bggfg.RotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_bggfg.RotAttr)})
	}
	if _bggfg.FlipHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_bggfg.FlipHAttr))})
	}
	if _bggfg.FlipVAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_bggfg.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _bggfg.Off != nil {
		_fccgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_bggfg.Off, _fccgf)
	}
	if _bggfg.Ext != nil {
		_geceg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_bggfg.Ext, _geceg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HslColor and its children
func (_cefea *CT_HslColor) Validate() error {
	return _cefea.ValidateWithPath("C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072")
}

type CT_AnimationGraphicalObjectBuildProperties struct {
	BldDgm   *CT_AnimationDgmBuildProperties
	BldChart *CT_AnimationChartBuildProperties
}

func (_eeaea *CT_Path2DList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eeaea.Path != nil {
		_gagc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		for _, _fgbec := range _eeaea.Path {
			e.EncodeElement(_fgbec, _gagc)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TextLineBreak() *CT_TextLineBreak { _fggdg := &CT_TextLineBreak{}; return _fggdg }

// Validate validates the CT_NoFillProperties and its children
func (_ddagge *CT_NoFillProperties) Validate() error {
	return _ddagge.ValidateWithPath("\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_ddcge *CT_TableCellProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecadfa := range start.Attr {
		if _ecadfa.Name.Local == "\u006d\u0061\u0072\u0052" {
			_cbbd, _egedg := ParseUnionST_Coordinate32(_ecadfa.Value)
			if _egedg != nil {
				return _egedg
			}
			_ddcge.MarRAttr = &_cbbd
			continue
		}
		if _ecadfa.Name.Local == "\u006d\u0061\u0072\u0042" {
			_eebee, _fceda := ParseUnionST_Coordinate32(_ecadfa.Value)
			if _fceda != nil {
				return _fceda
			}
			_ddcge.MarBAttr = &_eebee
			continue
		}
		if _ecadfa.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_ddcge.AnchorAttr.UnmarshalXMLAttr(_ecadfa)
			continue
		}
		if _ecadfa.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_ddcge.HorzOverflowAttr.UnmarshalXMLAttr(_ecadfa)
			continue
		}
		if _ecadfa.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_eafg, _gaaed := _fg.ParseBool(_ecadfa.Value)
			if _gaaed != nil {
				return _gaaed
			}
			_ddcge.AnchorCtrAttr = &_eafg
			continue
		}
		if _ecadfa.Name.Local == "\u0076\u0065\u0072\u0074" {
			_ddcge.VertAttr.UnmarshalXMLAttr(_ecadfa)
			continue
		}
		if _ecadfa.Name.Local == "\u006d\u0061\u0072\u004c" {
			_acbde, _egbc := ParseUnionST_Coordinate32(_ecadfa.Value)
			if _egbc != nil {
				return _egbc
			}
			_ddcge.MarLAttr = &_acbde
			continue
		}
		if _ecadfa.Name.Local == "\u006d\u0061\u0072\u0054" {
			_fcega, _fcccc := ParseUnionST_Coordinate32(_ecadfa.Value)
			if _fcccc != nil {
				return _fcccc
			}
			_ddcge.MarTAttr = &_fcega
			continue
		}
	}
_cdegf:
	for {
		_afafd, _egddg := d.Token()
		if _egddg != nil {
			return _egddg
		}
		switch _ceffa := _afafd.(type) {
		case _g.StartElement:
			switch _ceffa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}:
				_ddcge.LnL = NewCT_LineProperties()
				if _cebga := d.DecodeElement(_ddcge.LnL, &_ceffa); _cebga != nil {
					return _cebga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}:
				_ddcge.LnR = NewCT_LineProperties()
				if _becec := d.DecodeElement(_ddcge.LnR, &_ceffa); _becec != nil {
					return _becec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}:
				_ddcge.LnT = NewCT_LineProperties()
				if _dcggd := d.DecodeElement(_ddcge.LnT, &_ceffa); _dcggd != nil {
					return _dcggd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}:
				_ddcge.LnB = NewCT_LineProperties()
				if _cbcgdg := d.DecodeElement(_ddcge.LnB, &_ceffa); _cbcgdg != nil {
					return _cbcgdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}:
				_ddcge.LnTlToBr = NewCT_LineProperties()
				if _ccced := d.DecodeElement(_ddcge.LnTlToBr, &_ceffa); _ccced != nil {
					return _ccced
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}:
				_ddcge.LnBlToTr = NewCT_LineProperties()
				if _gfaeg := d.DecodeElement(_ddcge.LnBlToTr, &_ceffa); _gfaeg != nil {
					return _gfaeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_ddcge.Cell3D = NewCT_Cell3D()
				if _cdegfa := d.DecodeElement(_ddcge.Cell3D, &_ceffa); _cdegfa != nil {
					return _cdegfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ddcge.NoFill = NewCT_NoFillProperties()
				if _cggeca := d.DecodeElement(_ddcge.NoFill, &_ceffa); _cggeca != nil {
					return _cggeca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ddcge.SolidFill = NewCT_SolidColorFillProperties()
				if _bgabc := d.DecodeElement(_ddcge.SolidFill, &_ceffa); _bgabc != nil {
					return _bgabc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ddcge.GradFill = NewCT_GradientFillProperties()
				if _fcdaa := d.DecodeElement(_ddcge.GradFill, &_ceffa); _fcdaa != nil {
					return _fcdaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_ddcge.BlipFill = NewCT_BlipFillProperties()
				if _bcfeb := d.DecodeElement(_ddcge.BlipFill, &_ceffa); _bcfeb != nil {
					return _bcfeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ddcge.PattFill = NewCT_PatternFillProperties()
				if _fgcae := d.DecodeElement(_ddcge.PattFill, &_ceffa); _fgcae != nil {
					return _fgcae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_ddcge.GrpFill = NewCT_GroupFillProperties()
				if _cegbf := d.DecodeElement(_ddcge.GrpFill, &_ceffa); _cegbf != nil {
					return _cegbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}:
				_ddcge.Headers = NewCT_Headers()
				if _edacg := d.DecodeElement(_ddcge.Headers, &_ceffa); _edacg != nil {
					return _edacg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ddcge.ExtLst = NewCT_OfficeArtExtensionList()
				if _ebbef := d.DecodeElement(_ddcge.ExtLst, &_ceffa); _ebbef != nil {
					return _ebbef
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ceffa.Name)
				if _feceg := d.Skip(); _feceg != nil {
					return _feceg
				}
			}
		case _g.EndElement:
			break _cdegf
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AnimationGraphicalObjectBuildProperties and its children
func (_ggbd *CT_AnimationGraphicalObjectBuildProperties) Validate() error {
	return _ggbd.ValidateWithPath("\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_SRgbColor and its children
func (_bccg *CT_SRgbColor) Validate() error {
	return _bccg.ValidateWithPath("\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the CT_SolidColorFillProperties and its children, prefixing error messages with path
func (_gdead *CT_SolidColorFillProperties) ValidateWithPath(path string) error {
	if _gdead.ScrgbClr != nil {
		if _adecb := _gdead.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _adecb != nil {
			return _adecb
		}
	}
	if _gdead.SrgbClr != nil {
		if _aegd := _gdead.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _aegd != nil {
			return _aegd
		}
	}
	if _gdead.HslClr != nil {
		if _bacee := _gdead.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bacee != nil {
			return _bacee
		}
	}
	if _gdead.SysClr != nil {
		if _fefeg := _gdead.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fefeg != nil {
			return _fefeg
		}
	}
	if _gdead.SchemeClr != nil {
		if _cfffdb := _gdead.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _cfffdb != nil {
			return _cfffdb
		}
	}
	if _gdead.PrstClr != nil {
		if _cebfdg := _gdead.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _cebfdg != nil {
			return _cebfdg
		}
	}
	return nil
}

func (_fgee *CT_GradientStop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u006f\u0073"}, Value: _bb.Sprintf("\u0025\u0076", _fgee.PosAttr)})
	e.EncodeToken(start)
	if _fgee.ScrgbClr != nil {
		_gdgcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fgee.ScrgbClr, _gdgcb)
	}
	if _fgee.SrgbClr != nil {
		_gacba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fgee.SrgbClr, _gacba)
	}
	if _fgee.HslClr != nil {
		_fgede := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fgee.HslClr, _fgede)
	}
	if _fgee.SysClr != nil {
		_aeba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fgee.SysClr, _aeba)
	}
	if _fgee.SchemeClr != nil {
		_gfabg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fgee.SchemeClr, _gfabg)
	}
	if _fgee.PrstClr != nil {
		_dbecd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fgee.PrstClr, _dbecd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_egcda ST_DgmBuildStep) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gfgdd := _g.Attr{}
	_gfgdd.Name = name
	switch _egcda {
	case ST_DgmBuildStepUnset:
		_gfgdd.Value = ""
	case ST_DgmBuildStepSp:
		_gfgdd.Value = "\u0073\u0070"
	case ST_DgmBuildStepBg:
		_gfgdd.Value = "\u0062\u0067"
	}
	return _gfgdd, nil
}

func (_aagcg *CT_FillStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	for _, _dadb := range _aagcg.EG_FillProperties {
		_dadb.MarshalXML(e, _g.StartElement{})
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fffc *CT_OfficeStyleSheet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fffc.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_fffc.NameAttr)})
	}
	e.EncodeToken(start)
	_fafe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_fffc.ThemeElements, _fafe)
	if _fffc.ObjectDefaults != nil {
		_fgfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ao\u0062\u006a\u0065c\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"}}
		e.EncodeElement(_fffc.ObjectDefaults, _fgfd)
	}
	if _fffc.ExtraClrSchemeLst != nil {
		_eabg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078tr\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_fffc.ExtraClrSchemeLst, _eabg)
	}
	if _fffc.CustClrLst != nil {
		_aaca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063u\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}}
		e.EncodeElement(_fffc.CustClrLst, _aaca)
	}
	if _fffc.ExtLst != nil {
		_adceg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fffc.ExtLst, _adceg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TextUnderlineFillFollowText() *CT_TextUnderlineFillFollowText {
	_faafg := &CT_TextUnderlineFillFollowText{}
	return _faafg
}

func (_aead *CT_BaseStyles) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ccdb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_aead.ClrScheme, _ccdb)
	_efdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_aead.FontScheme, _efdc)
	_ffg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_aead.FmtScheme, _ffg)
	if _aead.ExtLst != nil {
		_caec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aead.ExtLst, _caec)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PresetColor and its children, prefixing error messages with path
func (_edaec *CT_PresetColor) ValidateWithPath(path string) error {
	if _edaec.ValAttr == ST_PresetColorValUnset {
		return _bb.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ggcc := _edaec.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ggcc != nil {
		return _ggcc
	}
	for _ccfge, _ddga := range _edaec.EG_ColorTransform {
		if _afbbf := _ddga.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _ccfge)); _afbbf != nil {
			return _afbbf
		}
	}
	return nil
}

func (_cgace *CT_ColorChangeEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgace.UseAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0073\u0065\u0041"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cgace.UseAAttr))})
	}
	e.EncodeToken(start)
	_bage := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0046\u0072\u006fm"}}
	e.EncodeElement(_cgace.ClrFrom, _bage)
	_cggbd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0054\u006f"}}
	e.EncodeElement(_cgace.ClrTo, _cggbd)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dfcb ST_PresetColorVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dfcb.String(), start)
}

// ValidateWithPath validates the CT_ColorSchemeList and its children, prefixing error messages with path
func (_eccd *CT_ColorSchemeList) ValidateWithPath(path string) error {
	for _dddg, _gafff := range _eccd.ExtraClrScheme {
		if _dfe := _gafff.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0045\u0078tr\u0061C\u006c\u0072\u0053\u0063\u0068e\u006d\u0065\u005b\u0025\u0064\u005d", path, _dddg)); _dfe != nil {
			return _dfe
		}
	}
	return nil
}

func (_ebdgd ST_TextVertOverflowType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ebdgd.String(), start)
}

type CT_Path2DQuadBezierTo struct{ Pt []*CT_AdjPoint2D }

// Validate validates the CT_LineStyleList and its children
func (_ddaac *CT_LineStyleList) Validate() error {
	return _ddaac.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}

func (_egdgc *CT_TableProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _egdgc.RtlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0074\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_egdgc.RtlAttr))})
	}
	if _egdgc.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_egdgc.FirstRowAttr))})
	}
	if _egdgc.FirstColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_egdgc.FirstColAttr))})
	}
	if _egdgc.LastRowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_egdgc.LastRowAttr))})
	}
	if _egdgc.LastColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_egdgc.LastColAttr))})
	}
	if _egdgc.BandRowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062a\u006e\u0064\u0052\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_egdgc.BandRowAttr))})
	}
	if _egdgc.BandColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062a\u006e\u0064\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_egdgc.BandColAttr))})
	}
	e.EncodeToken(start)
	if _egdgc.NoFill != nil {
		_bafef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egdgc.NoFill, _bafef)
	}
	if _egdgc.SolidFill != nil {
		_acbgf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egdgc.SolidFill, _acbgf)
	}
	if _egdgc.GradFill != nil {
		_feed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egdgc.GradFill, _feed)
	}
	if _egdgc.BlipFill != nil {
		_gbegec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egdgc.BlipFill, _gbegec)
	}
	if _egdgc.PattFill != nil {
		_bceeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egdgc.PattFill, _bceeb)
	}
	if _egdgc.GrpFill != nil {
		_cbbbg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_egdgc.GrpFill, _cbbbg)
	}
	if _egdgc.EffectLst != nil {
		_ggdfc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egdgc.EffectLst, _ggdfc)
	}
	if _egdgc.EffectDag != nil {
		_adbbfb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_egdgc.EffectDag, _adbbfb)
	}
	if _egdgc.Choice != nil {
		_egdgc.Choice.MarshalXML(e, _g.StartElement{})
	}
	if _egdgc.ExtLst != nil {
		_afdac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egdgc.ExtLst, _afdac)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eggdg ST_PositiveFixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eggdg.ST_PositiveFixedPercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_eggdg.ST_PositiveFixedPercentageDecimal)))
	}
	if _eggdg.ST_PositiveFixedPercentage != nil {
		e.Encode(_eggdg.ST_PositiveFixedPercentage)
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_gafdg ST_PositivePercentage) String() string {
	if _gafdg.ST_PositivePercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_gafdg.ST_PositivePercentageDecimal)
	}
	if _gafdg.ST_PositivePercentage != nil {
		return _gafdg.ST_PositivePercentage.String()
	}
	return ""
}

func NewCT_TextBlipBullet() *CT_TextBlipBullet {
	_dccad := &CT_TextBlipBullet{}
	_dccad.Blip = NewCT_Blip()
	return _dccad
}

type EG_TextUnderlineLine struct {
	ULnTx *CT_TextUnderlineLineFollowText
	ULn   *CT_LineProperties
}

type EG_ThemeableFontStyles struct {
	Font    *CT_FontCollection
	FontRef *CT_FontReference
}

func (_fecdcd *CT_GvmlGroupShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fecdcd.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_fecdcd.GrpSpPr = NewCT_GroupShapeProperties()
_cfab:
	for {
		_bcbfa, _ceggf := d.Token()
		if _ceggf != nil {
			return _ceggf
		}
		switch _dbccc := _bcbfa.(type) {
		case _g.StartElement:
			switch _dbccc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _adaed := d.DecodeElement(_fecdcd.NvGrpSpPr, &_dbccc); _adaed != nil {
					return _adaed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _gcbf := d.DecodeElement(_fecdcd.GrpSpPr, &_dbccc); _gcbf != nil {
					return _gcbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_fgag := NewCT_GvmlGroupShapeChoice()
				if _egffg := d.DecodeElement(&_fgag.TxSp, &_dbccc); _egffg != nil {
					return _egffg
				}
				_fecdcd.Choice = append(_fecdcd.Choice, _fgag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_edde := NewCT_GvmlGroupShapeChoice()
				if _cfffd := d.DecodeElement(&_edde.Sp, &_dbccc); _cfffd != nil {
					return _cfffd
				}
				_fecdcd.Choice = append(_fecdcd.Choice, _edde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_aebbf := NewCT_GvmlGroupShapeChoice()
				if _afcb := d.DecodeElement(&_aebbf.CxnSp, &_dbccc); _afcb != nil {
					return _afcb
				}
				_fecdcd.Choice = append(_fecdcd.Choice, _aebbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gcgde := NewCT_GvmlGroupShapeChoice()
				if _efggc := d.DecodeElement(&_gcgde.Pic, &_dbccc); _efggc != nil {
					return _efggc
				}
				_fecdcd.Choice = append(_fecdcd.Choice, _gcgde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_dcbe := NewCT_GvmlGroupShapeChoice()
				if _bfeca := d.DecodeElement(&_dcbe.GraphicFrame, &_dbccc); _bfeca != nil {
					return _bfeca
				}
				_fecdcd.Choice = append(_fecdcd.Choice, _dcbe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_egcba := NewCT_GvmlGroupShapeChoice()
				if _fedd := d.DecodeElement(&_egcba.GrpSp, &_dbccc); _fedd != nil {
					return _fedd
				}
				_fecdcd.Choice = append(_fecdcd.Choice, _egcba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fecdcd.ExtLst = NewCT_OfficeArtExtensionList()
				if _ccbf := d.DecodeElement(_fecdcd.ExtLst, &_dbccc); _ccbf != nil {
					return _ccbf
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _dbccc.Name)
				if _deeeb := d.Skip(); _deeeb != nil {
					return _deeeb
				}
			}
		case _g.EndElement:
			break _cfab
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaModulateFixedEffect and its children, prefixing error messages with path
func (_gce *CT_AlphaModulateFixedEffect) ValidateWithPath(path string) error {
	if _gce.AmtAttr != nil {
		if _ggad := _gce.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _ggad != nil {
			return _ggad
		}
	}
	return nil
}

type CT_ColorMappingOverrideChoice struct {
	MasterClrMapping   *CT_EmptyElement
	OverrideClrMapping *CT_ColorMapping
}

func (_dbeg *CT_ShapeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ccag := range start.Attr {
		if _ccag.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_dbeg.BwModeAttr.UnmarshalXMLAttr(_ccag)
			continue
		}
	}
_dfafa:
	for {
		_gbeee, _gfbfd := d.Token()
		if _gfbfd != nil {
			return _gfbfd
		}
		switch _gcgc := _gbeee.(type) {
		case _g.StartElement:
			switch _gcgc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_dbeg.Xfrm = NewCT_Transform2D()
				if _bgcga := d.DecodeElement(_dbeg.Xfrm, &_gcgc); _bgcga != nil {
					return _bgcga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_dbeg.CustGeom = NewCT_CustomGeometry2D()
				if _abecfa := d.DecodeElement(_dbeg.CustGeom, &_gcgc); _abecfa != nil {
					return _abecfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_dbeg.PrstGeom = NewCT_PresetGeometry2D()
				if _bcbaa := d.DecodeElement(_dbeg.PrstGeom, &_gcgc); _bcbaa != nil {
					return _bcbaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_dbeg.NoFill = NewCT_NoFillProperties()
				if _deaaf := d.DecodeElement(_dbeg.NoFill, &_gcgc); _deaaf != nil {
					return _deaaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dbeg.SolidFill = NewCT_SolidColorFillProperties()
				if _gdbgae := d.DecodeElement(_dbeg.SolidFill, &_gcgc); _gdbgae != nil {
					return _gdbgae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dbeg.GradFill = NewCT_GradientFillProperties()
				if _cfbf := d.DecodeElement(_dbeg.GradFill, &_gcgc); _cfbf != nil {
					return _cfbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_dbeg.BlipFill = NewCT_BlipFillProperties()
				if _efgfbb := d.DecodeElement(_dbeg.BlipFill, &_gcgc); _efgfbb != nil {
					return _efgfbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dbeg.PattFill = NewCT_PatternFillProperties()
				if _dddeg := d.DecodeElement(_dbeg.PattFill, &_gcgc); _dddeg != nil {
					return _dddeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_dbeg.GrpFill = NewCT_GroupFillProperties()
				if _gdegb := d.DecodeElement(_dbeg.GrpFill, &_gcgc); _gdegb != nil {
					return _gdegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_dbeg.Ln = NewCT_LineProperties()
				if _ecgee := d.DecodeElement(_dbeg.Ln, &_gcgc); _ecgee != nil {
					return _ecgee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dbeg.EffectLst = NewCT_EffectList()
				if _eaaad := d.DecodeElement(_dbeg.EffectLst, &_gcgc); _eaaad != nil {
					return _eaaad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dbeg.EffectDag = NewCT_EffectContainer()
				if _fefg := d.DecodeElement(_dbeg.EffectDag, &_gcgc); _fefg != nil {
					return _fefg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_dbeg.Scene3d = NewCT_Scene3D()
				if _bdbge := d.DecodeElement(_dbeg.Scene3d, &_gcgc); _bdbge != nil {
					return _bdbge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_dbeg.Sp3d = NewCT_Shape3D()
				if _gebgb := d.DecodeElement(_dbeg.Sp3d, &_gcgc); _gebgb != nil {
					return _gebgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbeg.ExtLst = NewCT_OfficeArtExtensionList()
				if _fdfbc := d.DecodeElement(_dbeg.ExtLst, &_gcgc); _fdfbc != nil {
					return _fdfbc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gcgc.Name)
				if _cade := d.Skip(); _cade != nil {
					return _cade
				}
			}
		case _g.EndElement:
			break _dfafa
		case _g.CharData:
		}
	}
	return nil
}

type CT_ScRgbColor struct {
	RAttr             ST_Percentage
	GAttr             ST_Percentage
	BAttr             ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}

func NewCT_FontCollection() *CT_FontCollection {
	_bbd := &CT_FontCollection{}
	_bbd.Latin = NewCT_TextFont()
	_bbd.Ea = NewCT_TextFont()
	_bbd.Cs = NewCT_TextFont()
	return _bbd
}

// ST_AdjCoordinate is a union type
type ST_AdjCoordinate struct {
	ST_Coordinate    *ST_Coordinate
	ST_GeomGuideName *string
}

// Validate validates the CT_BaseStylesOverride and its children
func (_aece *CT_BaseStylesOverride) Validate() error {
	return _aece.ValidateWithPath("C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065")
}

type CT_GraphicalObjectFrameLocking struct {
	NoGrpAttr          *bool
	NoDrilldownAttr    *bool
	NoSelectAttr       *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

func NewCT_OfficeArtExtension() *CT_OfficeArtExtension {
	_cgcd := &CT_OfficeArtExtension{}
	return _cgcd
}

func (_dgcg *CT_AudioFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _dgcg.LinkAttr)})
	if _dgcg.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_dgcg.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _dgcg.ExtLst != nil {
		_gbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgcg.ExtLst, _gbb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_daegf *CT_PresetTextShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_beggf, _dbgbf := _daegf.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _dbgbf != nil {
		return _dbgbf
	}
	start.Attr = append(start.Attr, _beggf)
	e.EncodeToken(start)
	if _daegf.AvLst != nil {
		_bffcb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_daegf.AvLst, _bffcb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_acggd *ST_FixedPercentage) ValidateWithPath(path string) error {
	_bgagga := []string{}
	if _acggd.ST_FixedPercentageDecimal != nil {
		_bgagga = append(_bgagga, "\u0053T\u005f\u0046\u0069\u0078e\u0064\u0050\u0065\u0072\u0063e\u006et\u0061g\u0065\u0044\u0065\u0063\u0069\u006d\u0061l")
	}
	if _acggd.ST_FixedPercentage != nil {
		if _deabb := _acggd.ST_FixedPercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fFi\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065"); _deabb != nil {
			return _deabb
		}
		_bgagga = append(_bgagga, "\u0053T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_bgagga) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bgagga)
	}
	return nil
}

func (_ccad *CT_Headers) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gbfg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072"}}
	for _, _fgec := range _ccad.Header {
		e.EncodeElement(_fgec, _gbfg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eefd ST_TextAutonumberScheme) String() string {
	switch _eefd {
	case 0:
		return ""
	case 1:
		return "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 2:
		return "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 3:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 4:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 5:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 6:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 7:
		return "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 8:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 9:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 10:
		return "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case 11:
		return "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 12:
		return "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 13:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 14:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 15:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 16:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 17:
		return "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 18:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case 19:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case 20:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 21:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 22:
		return "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case 23:
		return "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case 24:
		return "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case 25:
		return "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case 26:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 27:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case 28:
		return "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case 29:
		return "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case 30:
		return "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case 31:
		return "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case 32:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 33:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case 34:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case 35:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case 36:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case 37:
		return "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 38:
		return "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 39:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case 40:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case 41:
		return "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return ""
}

const (
	ST_PenAlignmentUnset ST_PenAlignment = 0
	ST_PenAlignmentCtr   ST_PenAlignment = 1
	ST_PenAlignmentIn    ST_PenAlignment = 2
)

// Validate validates the CT_Path2DArcTo and its children
func (_ffdcd *CT_Path2DArcTo) Validate() error {
	return _ffdcd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f")
}

func (_ccfb *CT_GrayscaleTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_bgdef, _ggag := d.Token()
		if _ggag != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0079\u0073\u0063\u0061\u006c\u0065T\u0072\u0061\u006e\u0073\u0066\u006f\u0072m\u003a\u0020\u0025\u0073", _ggag)
		}
		if _gfdf, _afdf := _bgdef.(_g.EndElement); _afdf && _gfdf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_AnimationDgmBuildProperties and its children
func (_edgg *CT_AnimationDgmBuildProperties) Validate() error {
	return _edgg.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_ColorMRU and its children
func (_efcb *CT_ColorMRU) Validate() error {
	return _efcb.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055")
}

func (_bgdec *TblStyleLst) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgdec.CT_TableStyleList = *NewCT_TableStyleList()
	for _, _fegge := range start.Attr {
		if _fegge.Name.Local == "\u0064\u0065\u0066" {
			_beegb, _agade := _fegge.Value, error(nil)
			if _agade != nil {
				return _agade
			}
			_bgdec.DefAttr = _beegb
			continue
		}
	}
_eedea:
	for {
		_eafe, _cgcde := d.Token()
		if _cgcde != nil {
			return _cgcde
		}
		switch _dbfgg := _eafe.(type) {
		case _g.StartElement:
			switch _dbfgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_gdee := NewCT_TableStyle()
				if _dccbg := d.DecodeElement(_gdee, &_dbfgg); _dccbg != nil {
					return _dccbg
				}
				_bgdec.TblStyle = append(_bgdec.TblStyle, _gdee)
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074\u0020\u0025\u0076", _dbfgg.Name)
				if _ggbdgb := d.Skip(); _ggbdgb != nil {
					return _ggbdgb
				}
			}
		case _g.EndElement:
			break _eedea
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ConnectionSiteList and its children
func (_gfadg *CT_ConnectionSiteList) Validate() error {
	return _gfadg.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_TextAutonumberBullet and its children
func (_cdbcf *CT_TextAutonumberBullet) Validate() error {
	return _cdbcf.ValidateWithPath("\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074")
}

func NewCT_TextField() *CT_TextField {
	_aafac := &CT_TextField{}
	_aafac.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _aafac
}

func NewCT_FillEffect() *CT_FillEffect { _degb := &CT_FillEffect{}; return _degb }

func NewCT_ShapeLocking() *CT_ShapeLocking { _fbbdg := &CT_ShapeLocking{}; return _fbbdg }

// ValidateWithPath validates the ThemeOverride and its children, prefixing error messages with path
func (_egfaa *ThemeOverride) ValidateWithPath(path string) error {
	if _fedcbd := _egfaa.CT_BaseStylesOverride.ValidateWithPath(path); _fedcbd != nil {
		return _fedcbd
	}
	return nil
}

func NewCT_LineJoinRound() *CT_LineJoinRound { _ceff := &CT_LineJoinRound{}; return _ceff }

func (_edbcd *CT_EmbeddedWAVAudioFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _edbcd.EmbedAttr)})
	if _edbcd.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_edbcd.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextBulletSizeFollowText struct{}

// ValidateWithPath validates the CT_EffectList and its children, prefixing error messages with path
func (_dddgf *CT_EffectList) ValidateWithPath(path string) error {
	if _dddgf.Blur != nil {
		if _gddce := _dddgf.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _gddce != nil {
			return _gddce
		}
	}
	if _dddgf.FillOverlay != nil {
		if _cffd := _dddgf.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _cffd != nil {
			return _cffd
		}
	}
	if _dddgf.Glow != nil {
		if _bedc := _dddgf.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _bedc != nil {
			return _bedc
		}
	}
	if _dddgf.InnerShdw != nil {
		if _adbbg := _dddgf.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _adbbg != nil {
			return _adbbg
		}
	}
	if _dddgf.OuterShdw != nil {
		if _fffb := _dddgf.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _fffb != nil {
			return _fffb
		}
	}
	if _dddgf.PrstShdw != nil {
		if _bfbc := _dddgf.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _bfbc != nil {
			return _bfbc
		}
	}
	if _dddgf.Reflection != nil {
		if _efee := _dddgf.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _efee != nil {
			return _efee
		}
	}
	if _dddgf.SoftEdge != nil {
		if _bfda := _dddgf.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _bfda != nil {
			return _bfda
		}
	}
	return nil
}

func (_decgg *ST_PositiveFixedPercentage) ValidateWithPath(path string) error {
	_ggagg := []string{}
	if _decgg.ST_PositiveFixedPercentageDecimal != nil {
		_ggagg = append(_ggagg, "\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063e\u006e\u0074\u0061\u0067\u0065\u0044\u0065c\u0069\u006d\u0061\u006c")
	}
	if _decgg.ST_PositiveFixedPercentage != nil {
		if _fbfge := _decgg.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _fbfge != nil {
			return _fbfge
		}
		_ggagg = append(_ggagg, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if len(_ggagg) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ggagg)
	}
	return nil
}

// ValidateWithPath validates the CT_AudioCDTime and its children, prefixing error messages with path
func (_fecc *CT_AudioCDTime) ValidateWithPath(path string) error { return nil }

type CT_ColorScheme struct {
	NameAttr string
	Dk1      *CT_Color
	Lt1      *CT_Color
	Dk2      *CT_Color
	Lt2      *CT_Color
	Accent1  *CT_Color
	Accent2  *CT_Color
	Accent3  *CT_Color
	Accent4  *CT_Color
	Accent5  *CT_Color
	Accent6  *CT_Color
	Hlink    *CT_Color
	FolHlink *CT_Color
	ExtLst   *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_OfficeArtExtensionList and its children, prefixing error messages with path
func (_eddec *CT_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _dbebe, _baagb := range _eddec.Ext {
		if _bbdef := _baagb.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _dbebe)); _bbdef != nil {
			return _bbdef
		}
	}
	return nil
}

func (_gbae *CT_BlipFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gbae.DpiAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0070\u0069"}, Value: _bb.Sprintf("\u0025\u0076", *_gbae.DpiAttr)})
	}
	if _gbae.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gbae.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _gbae.Blip != nil {
		_cbcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
		e.EncodeElement(_gbae.Blip, _cbcb)
	}
	if _gbae.SrcRect != nil {
		_feaeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0063\u0052\u0065\u0063t"}}
		e.EncodeElement(_gbae.SrcRect, _feaeb)
	}
	if _gbae.Tile != nil {
		_bgbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_gbae.Tile, _bgbe)
	}
	if _gbae.Stretch != nil {
		_fbce := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_gbae.Stretch, _fbce)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbgbeb ST_BlipCompression) ValidateWithPath(path string) error {
	switch _dbgbeb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbgbeb))
	}
	return nil
}

func (_dfced *TblStyleLst) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"
	return _dfced.CT_TableStyleList.MarshalXML(e, start)
}

// ValidateWithPath validates the EG_Effect and its children, prefixing error messages with path
func (_afccc *EG_Effect) ValidateWithPath(path string) error {
	if _afccc.Cont != nil {
		if _eadeed := _afccc.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _eadeed != nil {
			return _eadeed
		}
	}
	if _afccc.Effect != nil {
		if _dcgcf := _afccc.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _dcgcf != nil {
			return _dcgcf
		}
	}
	if _afccc.AlphaBiLevel != nil {
		if _gcgdd := _afccc.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _gcgdd != nil {
			return _gcgdd
		}
	}
	if _afccc.AlphaCeiling != nil {
		if _cffffg := _afccc.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _cffffg != nil {
			return _cffffg
		}
	}
	if _afccc.AlphaFloor != nil {
		if _agbeeb := _afccc.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _agbeeb != nil {
			return _agbeeb
		}
	}
	if _afccc.AlphaInv != nil {
		if _fbdgdg := _afccc.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _fbdgdg != nil {
			return _fbdgdg
		}
	}
	if _afccc.AlphaMod != nil {
		if _fbbcea := _afccc.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _fbbcea != nil {
			return _fbbcea
		}
	}
	if _afccc.AlphaModFix != nil {
		if _fgdbgb := _afccc.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _fgdbgb != nil {
			return _fgdbgb
		}
	}
	if _afccc.AlphaOutset != nil {
		if _ffabd := _afccc.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _ffabd != nil {
			return _ffabd
		}
	}
	if _afccc.AlphaRepl != nil {
		if _abbbd := _afccc.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _abbbd != nil {
			return _abbbd
		}
	}
	if _afccc.BiLevel != nil {
		if _ecfe := _afccc.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _ecfe != nil {
			return _ecfe
		}
	}
	if _afccc.Blend != nil {
		if _bcgeg := _afccc.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _bcgeg != nil {
			return _bcgeg
		}
	}
	if _afccc.Blur != nil {
		if _gaeeee := _afccc.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _gaeeee != nil {
			return _gaeeee
		}
	}
	if _afccc.ClrChange != nil {
		if _gddge := _afccc.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _gddge != nil {
			return _gddge
		}
	}
	if _afccc.ClrRepl != nil {
		if _gagfgf := _afccc.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _gagfgf != nil {
			return _gagfgf
		}
	}
	if _afccc.Duotone != nil {
		if _agdfgd := _afccc.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _agdfgd != nil {
			return _agdfgd
		}
	}
	if _afccc.Fill != nil {
		if _fgggg := _afccc.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _fgggg != nil {
			return _fgggg
		}
	}
	if _afccc.FillOverlay != nil {
		if _afacc := _afccc.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _afacc != nil {
			return _afacc
		}
	}
	if _afccc.Glow != nil {
		if _gfefe := _afccc.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _gfefe != nil {
			return _gfefe
		}
	}
	if _afccc.Grayscl != nil {
		if _ffcb := _afccc.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _ffcb != nil {
			return _ffcb
		}
	}
	if _afccc.Hsl != nil {
		if _cggef := _afccc.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _cggef != nil {
			return _cggef
		}
	}
	if _afccc.InnerShdw != nil {
		if _bebgc := _afccc.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _bebgc != nil {
			return _bebgc
		}
	}
	if _afccc.Lum != nil {
		if _egdafe := _afccc.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _egdafe != nil {
			return _egdafe
		}
	}
	if _afccc.OuterShdw != nil {
		if _bbbb := _afccc.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _bbbb != nil {
			return _bbbb
		}
	}
	if _afccc.PrstShdw != nil {
		if _ecdba := _afccc.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _ecdba != nil {
			return _ecdba
		}
	}
	if _afccc.Reflection != nil {
		if _fedbb := _afccc.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _fedbb != nil {
			return _fedbb
		}
	}
	if _afccc.RelOff != nil {
		if _acfca := _afccc.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _acfca != nil {
			return _acfca
		}
	}
	if _afccc.SoftEdge != nil {
		if _fgfc := _afccc.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _fgfc != nil {
			return _fgfc
		}
	}
	if _afccc.Tint != nil {
		if _adbfb := _afccc.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _adbfb != nil {
			return _adbfb
		}
	}
	if _afccc.Xfrm != nil {
		if _baccc := _afccc.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _baccc != nil {
			return _baccc
		}
	}
	return nil
}

func (_fbada ST_BlackWhiteMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_degee := _g.Attr{}
	_degee.Name = name
	switch _fbada {
	case ST_BlackWhiteModeUnset:
		_degee.Value = ""
	case ST_BlackWhiteModeClr:
		_degee.Value = "\u0063\u006c\u0072"
	case ST_BlackWhiteModeAuto:
		_degee.Value = "\u0061\u0075\u0074\u006f"
	case ST_BlackWhiteModeGray:
		_degee.Value = "\u0067\u0072\u0061\u0079"
	case ST_BlackWhiteModeLtGray:
		_degee.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeInvGray:
		_degee.Value = "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeGrayWhite:
		_degee.Value = "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case ST_BlackWhiteModeBlackGray:
		_degee.Value = "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case ST_BlackWhiteModeBlackWhite:
		_degee.Value = "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case ST_BlackWhiteModeBlack:
		_degee.Value = "\u0062\u006c\u0061c\u006b"
	case ST_BlackWhiteModeWhite:
		_degee.Value = "\u0077\u0068\u0069t\u0065"
	case ST_BlackWhiteModeHidden:
		_degee.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return _degee, nil
}

func (_cedda *CT_PositiveFixedPercentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecdbg := range start.Attr {
		if _ecdbg.Name.Local == "\u0076\u0061\u006c" {
			_edabc, _afcgf := ParseUnionST_PositiveFixedPercentage(_ecdbg.Value)
			if _afcgf != nil {
				return _afcgf
			}
			_cedda.ValAttr = _edabc
			continue
		}
	}
	for {
		_egfgd, _ceaae := d.Token()
		if _ceaae != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063\u0065\u006et\u0061\u0067e\u003a\u0020\u0025\u0073", _ceaae)
		}
		if _ddbafcd, _gbfe := _egfgd.(_g.EndElement); _gbfe && _ddbafcd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_afeab *CT_XYAdjustHandle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_afeab.Pos = NewCT_AdjPoint2D()
	for _, _adada := range start.Attr {
		if _adada.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0058" {
			_fgbaad, _bffeb := _adada.Value, error(nil)
			if _bffeb != nil {
				return _bffeb
			}
			_afeab.GdRefXAttr = &_fgbaad
			continue
		}
		if _adada.Name.Local == "\u006d\u0069\u006e\u0058" {
			_cbcbf, _fdba := ParseUnionST_AdjCoordinate(_adada.Value)
			if _fdba != nil {
				return _fdba
			}
			_afeab.MinXAttr = &_cbcbf
			continue
		}
		if _adada.Name.Local == "\u006d\u0061\u0078\u0058" {
			_eaefa, _cdead := ParseUnionST_AdjCoordinate(_adada.Value)
			if _cdead != nil {
				return _cdead
			}
			_afeab.MaxXAttr = &_eaefa
			continue
		}
		if _adada.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0059" {
			_fgdbd, _abge := _adada.Value, error(nil)
			if _abge != nil {
				return _abge
			}
			_afeab.GdRefYAttr = &_fgdbd
			continue
		}
		if _adada.Name.Local == "\u006d\u0069\u006e\u0059" {
			_eegdf, _ccbec := ParseUnionST_AdjCoordinate(_adada.Value)
			if _ccbec != nil {
				return _ccbec
			}
			_afeab.MinYAttr = &_eegdf
			continue
		}
		if _adada.Name.Local == "\u006d\u0061\u0078\u0059" {
			_fdffbf, _gagff := ParseUnionST_AdjCoordinate(_adada.Value)
			if _gagff != nil {
				return _gagff
			}
			_afeab.MaxYAttr = &_fdffbf
			continue
		}
	}
_agdb:
	for {
		_acedb, _ddbca := d.Token()
		if _ddbca != nil {
			return _ddbca
		}
		switch _dgbfcg := _acedb.(type) {
		case _g.StartElement:
			switch _dgbfcg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _aeade := d.DecodeElement(_afeab.Pos, &_dgbfcg); _aeade != nil {
					return _aeade
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _dgbfcg.Name)
				if _faegad := d.Skip(); _faegad != nil {
					return _faegad
				}
			}
		case _g.EndElement:
			break _agdb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColorMappingOverrideChoice and its children
func (_abdb *CT_ColorMappingOverrideChoice) Validate() error {
	return _abdb.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043\u0068oi\u0063\u0065")
}

type CT_CustomColor struct {
	NameAttr  *string
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_dcddef *ThemeManager) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dcddef.CT_EmptyElement = *NewCT_EmptyElement()
	for {
		_feggb, _eeffg := d.Token()
		if _eeffg != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0054\u0068\u0065\u006d\u0065M\u0061\u006e\u0061\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _eeffg)
		}
		if _egbad, _efecc := _feggb.(_g.EndElement); _efecc && _egbad.Name == start.Name {
			break
		}
	}
	return nil
}

func (_geag *CT_SystemColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_geag.ValAttr = ST_SystemColorVal(1)
	for _, _cedbc := range start.Attr {
		if _cedbc.Name.Local == "\u0076\u0061\u006c" {
			_geag.ValAttr.UnmarshalXMLAttr(_cedbc)
			continue
		}
		if _cedbc.Name.Local == "\u006ca\u0073\u0074\u0043\u006c\u0072" {
			_ddgea, _bdddbd := _cedbc.Value, error(nil)
			if _bdddbd != nil {
				return _bdddbd
			}
			_geag.LastClrAttr = &_ddgea
			continue
		}
	}
_eddfe:
	for {
		_afaggc, _fcfdb := d.Token()
		if _fcfdb != nil {
			return _fcfdb
		}
		switch _gcede := _afaggc.(type) {
		case _g.StartElement:
			switch _gcede.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ggccd := NewEG_ColorTransform()
				_ggccd.Tint = NewCT_PositiveFixedPercentage()
				if _ccbbc := d.DecodeElement(_ggccd.Tint, &_gcede); _ccbbc != nil {
					return _ccbbc
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _ggccd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_bcge := NewEG_ColorTransform()
				_bcge.Shade = NewCT_PositiveFixedPercentage()
				if _cabcf := d.DecodeElement(_bcge.Shade, &_gcede); _cabcf != nil {
					return _cabcf
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _bcge)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_fdcgb := NewEG_ColorTransform()
				_fdcgb.Comp = NewCT_ComplementTransform()
				if _agefa := d.DecodeElement(_fdcgb.Comp, &_gcede); _agefa != nil {
					return _agefa
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _fdcgb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_egfa := NewEG_ColorTransform()
				_egfa.Inv = NewCT_InverseTransform()
				if _fdffb := d.DecodeElement(_egfa.Inv, &_gcede); _fdffb != nil {
					return _fdffb
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _egfa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_gcgef := NewEG_ColorTransform()
				_gcgef.Gray = NewCT_GrayscaleTransform()
				if _fdedf := d.DecodeElement(_gcgef.Gray, &_gcede); _fdedf != nil {
					return _fdedf
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _gcgef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_dffdb := NewEG_ColorTransform()
				_dffdb.Alpha = NewCT_PositiveFixedPercentage()
				if _edgfg := d.DecodeElement(_dffdb.Alpha, &_gcede); _edgfg != nil {
					return _edgfg
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _dffdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_afffd := NewEG_ColorTransform()
				_afffd.AlphaOff = NewCT_FixedPercentage()
				if _ffffd := d.DecodeElement(_afffd.AlphaOff, &_gcede); _ffffd != nil {
					return _ffffd
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _afffd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_eabag := NewEG_ColorTransform()
				_eabag.AlphaMod = NewCT_PositivePercentage()
				if _bfdbg := d.DecodeElement(_eabag.AlphaMod, &_gcede); _bfdbg != nil {
					return _bfdbg
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _eabag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_fbgdg := NewEG_ColorTransform()
				_fbgdg.Hue = NewCT_PositiveFixedAngle()
				if _gdca := d.DecodeElement(_fbgdg.Hue, &_gcede); _gdca != nil {
					return _gdca
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _fbgdg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_dedbf := NewEG_ColorTransform()
				_dedbf.HueOff = NewCT_Angle()
				if _cbfcea := d.DecodeElement(_dedbf.HueOff, &_gcede); _cbfcea != nil {
					return _cbfcea
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _dedbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ccbgc := NewEG_ColorTransform()
				_ccbgc.HueMod = NewCT_PositivePercentage()
				if _beba := d.DecodeElement(_ccbgc.HueMod, &_gcede); _beba != nil {
					return _beba
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _ccbgc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_eefc := NewEG_ColorTransform()
				_eefc.Sat = NewCT_Percentage()
				if _ggace := d.DecodeElement(_eefc.Sat, &_gcede); _ggace != nil {
					return _ggace
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _eefc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_cgca := NewEG_ColorTransform()
				_cgca.SatOff = NewCT_Percentage()
				if _ceabb := d.DecodeElement(_cgca.SatOff, &_gcede); _ceabb != nil {
					return _ceabb
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _cgca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_abege := NewEG_ColorTransform()
				_abege.SatMod = NewCT_Percentage()
				if _bbcgca := d.DecodeElement(_abege.SatMod, &_gcede); _bbcgca != nil {
					return _bbcgca
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _abege)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fafg := NewEG_ColorTransform()
				_fafg.Lum = NewCT_Percentage()
				if _dagfd := d.DecodeElement(_fafg.Lum, &_gcede); _dagfd != nil {
					return _dagfd
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _fafg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_cgfbf := NewEG_ColorTransform()
				_cgfbf.LumOff = NewCT_Percentage()
				if _gacffe := d.DecodeElement(_cgfbf.LumOff, &_gcede); _gacffe != nil {
					return _gacffe
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _cgfbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_dgfde := NewEG_ColorTransform()
				_dgfde.LumMod = NewCT_Percentage()
				if _febfb := d.DecodeElement(_dgfde.LumMod, &_gcede); _febfb != nil {
					return _febfb
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _dgfde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_fcgad := NewEG_ColorTransform()
				_fcgad.Red = NewCT_Percentage()
				if _bbabec := d.DecodeElement(_fcgad.Red, &_gcede); _bbabec != nil {
					return _bbabec
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _fcgad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_caecf := NewEG_ColorTransform()
				_caecf.RedOff = NewCT_Percentage()
				if _bbaag := d.DecodeElement(_caecf.RedOff, &_gcede); _bbaag != nil {
					return _bbaag
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _caecf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_ffgbbe := NewEG_ColorTransform()
				_ffgbbe.RedMod = NewCT_Percentage()
				if _cebd := d.DecodeElement(_ffgbbe.RedMod, &_gcede); _cebd != nil {
					return _cebd
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _ffgbbe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_gdgd := NewEG_ColorTransform()
				_gdgd.Green = NewCT_Percentage()
				if _gdbbf := d.DecodeElement(_gdgd.Green, &_gcede); _gdbbf != nil {
					return _gdbbf
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _gdgd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_cfbfd := NewEG_ColorTransform()
				_cfbfd.GreenOff = NewCT_Percentage()
				if _gead := d.DecodeElement(_cfbfd.GreenOff, &_gcede); _gead != nil {
					return _gead
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _cfbfd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_aafaf := NewEG_ColorTransform()
				_aafaf.GreenMod = NewCT_Percentage()
				if _abac := d.DecodeElement(_aafaf.GreenMod, &_gcede); _abac != nil {
					return _abac
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _aafaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_cdgdd := NewEG_ColorTransform()
				_cdgdd.Blue = NewCT_Percentage()
				if _adafd := d.DecodeElement(_cdgdd.Blue, &_gcede); _adafd != nil {
					return _adafd
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _cdgdd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_aafafc := NewEG_ColorTransform()
				_aafafc.BlueOff = NewCT_Percentage()
				if _cbdc := d.DecodeElement(_aafafc.BlueOff, &_gcede); _cbdc != nil {
					return _cbdc
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _aafafc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_aggfb := NewEG_ColorTransform()
				_aggfb.BlueMod = NewCT_Percentage()
				if _aced := d.DecodeElement(_aggfb.BlueMod, &_gcede); _aced != nil {
					return _aced
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _aggfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_cgbaa := NewEG_ColorTransform()
				_cgbaa.Gamma = NewCT_GammaTransform()
				if _bbgec := d.DecodeElement(_cgbaa.Gamma, &_gcede); _bbgec != nil {
					return _bbgec
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _cgbaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_gffgc := NewEG_ColorTransform()
				_gffgc.InvGamma = NewCT_InverseGammaTransform()
				if _efed := d.DecodeElement(_gffgc.InvGamma, &_gcede); _efed != nil {
					return _efed
				}
				_geag.EG_ColorTransform = append(_geag.EG_ColorTransform, _gffgc)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _gcede.Name)
				if _bccdb := d.Skip(); _bccdb != nil {
					return _bccdb
				}
			}
		case _g.EndElement:
			break _eddfe
		case _g.CharData:
		}
	}
	return nil
}

type CT_TextLineBreak struct{ RPr *CT_TextCharacterProperties }

func (_gbgag *CT_ConnectionSiteList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bgbag:
	for {
		_aefb, _afac := d.Token()
		if _afac != nil {
			return _afac
		}
		switch _fbacf := _aefb.(type) {
		case _g.StartElement:
			switch _fbacf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}:
				_dggg := NewCT_ConnectionSite()
				if _eeda := d.DecodeElement(_dggg, &_fbacf); _eeda != nil {
					return _eeda
				}
				_gbgag.Cxn = append(_gbgag.Cxn, _dggg)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fbacf.Name)
				if _gcdfg := d.Skip(); _gcdfg != nil {
					return _gcdfg
				}
			}
		case _g.EndElement:
			break _bgbag
		case _g.CharData:
		}
	}
	return nil
}

func (_fcfed ST_LightRigDirection) String() string {
	switch _fcfed {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0072"
	case 6:
		return "\u0062\u006c"
	case 7:
		return "\u0062"
	case 8:
		return "\u0062\u0072"
	}
	return ""
}

func (_ecfaa *CT_Blip) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ddgf := range start.Attr {
		if _ddgf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ddgf.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_cfc, _bcgc := _ddgf.Value, error(nil)
			if _bcgc != nil {
				return _bcgc
			}
			_ecfaa.EmbedAttr = &_cfc
			continue
		}
		if _ddgf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ddgf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ggdd, _eag := _ddgf.Value, error(nil)
			if _eag != nil {
				return _eag
			}
			_ecfaa.LinkAttr = &_ggdd
			continue
		}
		if _ddgf.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_ecfaa.CstateAttr.UnmarshalXMLAttr(_ddgf)
			continue
		}
	}
_eec:
	for {
		_accb, _bfae := d.Token()
		if _bfae != nil {
			return _bfae
		}
		switch _fcfc := _accb.(type) {
		case _g.StartElement:
			switch _fcfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_ddgg := NewCT_BlipChoice()
				if _fcfg := d.DecodeElement(&_ddgg.AlphaBiLevel, &_fcfc); _fcfg != nil {
					return _fcfg
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _ddgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_bgbc := NewCT_BlipChoice()
				if _bcbb := d.DecodeElement(&_bgbc.AlphaCeiling, &_fcfc); _bcbb != nil {
					return _bcbb
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _bgbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_ffd := NewCT_BlipChoice()
				if _agdd := d.DecodeElement(&_ffd.AlphaFloor, &_fcfc); _agdd != nil {
					return _agdd
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _ffd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_fadef := NewCT_BlipChoice()
				if _daec := d.DecodeElement(&_fadef.AlphaInv, &_fcfc); _daec != nil {
					return _daec
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _fadef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_adgf := NewCT_BlipChoice()
				if _ceec := d.DecodeElement(&_adgf.AlphaMod, &_fcfc); _ceec != nil {
					return _ceec
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _adgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_gafc := NewCT_BlipChoice()
				if _fcae := d.DecodeElement(&_gafc.AlphaModFix, &_fcfc); _fcae != nil {
					return _fcae
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _gafc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_eaea := NewCT_BlipChoice()
				if _dbcg := d.DecodeElement(&_eaea.AlphaRepl, &_fcfc); _dbcg != nil {
					return _dbcg
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _eaea)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_ecedd := NewCT_BlipChoice()
				if _bcd := d.DecodeElement(&_ecedd.BiLevel, &_fcfc); _bcd != nil {
					return _bcd
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _ecedd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_eaaa := NewCT_BlipChoice()
				if _ecfae := d.DecodeElement(&_eaaa.Blur, &_fcfc); _ecfae != nil {
					return _ecfae
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _eaaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_ebege := NewCT_BlipChoice()
				if _aaba := d.DecodeElement(&_ebege.ClrChange, &_fcfc); _aaba != nil {
					return _aaba
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _ebege)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_ecff := NewCT_BlipChoice()
				if _fbcd := d.DecodeElement(&_ecff.ClrRepl, &_fcfc); _fbcd != nil {
					return _fbcd
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _ecff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_caa := NewCT_BlipChoice()
				if _ebeae := d.DecodeElement(&_caa.Duotone, &_fcfc); _ebeae != nil {
					return _ebeae
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _caa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_bcc := NewCT_BlipChoice()
				if _dfg := d.DecodeElement(&_bcc.FillOverlay, &_fcfc); _dfg != nil {
					return _dfg
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _bcc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_cfbc := NewCT_BlipChoice()
				if _cfcf := d.DecodeElement(&_cfbc.Grayscl, &_fcfc); _cfcf != nil {
					return _cfcf
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _cfbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_egaa := NewCT_BlipChoice()
				if _eaad := d.DecodeElement(&_egaa.Hsl, &_fcfc); _eaad != nil {
					return _eaad
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _egaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_eaca := NewCT_BlipChoice()
				if _cbdd := d.DecodeElement(&_eaca.Lum, &_fcfc); _cbdd != nil {
					return _cbdd
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _eaca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_dee := NewCT_BlipChoice()
				if _ggec := d.DecodeElement(&_dee.Tint, &_fcfc); _ggec != nil {
					return _ggec
				}
				_ecfaa.Choice = append(_ecfaa.Choice, _dee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecfaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _fbdc := d.DecodeElement(_ecfaa.ExtLst, &_fcfc); _fbdc != nil {
					return _fbdc
				}
			default:
				_fc.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0042\u006c\u0069\u0070\u0020\u0025\u0076", _fcfc.Name)
				if _efdbb := d.Skip(); _efdbb != nil {
					return _efdbb
				}
			}
		case _g.EndElement:
			break _eec
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_AnimationGraphicalObjectBuildProperties() *CT_AnimationGraphicalObjectBuildProperties {
	_agb := &CT_AnimationGraphicalObjectBuildProperties{}
	return _agb
}

// Validate validates the CT_Headers and its children
func (_ecbbb *CT_Headers) Validate() error {
	return _ecbbb.ValidateWithPath("\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073")
}

func (_aegadf ST_ColorSchemeIndex) ValidateWithPath(path string) error {
	switch _aegadf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aegadf))
	}
	return nil
}

// ValidateWithPath validates the CT_AnimationDgmBuildProperties and its children, prefixing error messages with path
func (_dbec *CT_AnimationDgmBuildProperties) ValidateWithPath(path string) error {
	if _dbec.BldAttr != nil {
		if _eceg := _dbec.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _eceg != nil {
			return _eceg
		}
	}
	return nil
}

// Validate validates the CT_PositiveFixedPercentage and its children
func (_dbcbg *CT_PositiveFixedPercentage) Validate() error {
	return _dbcbg.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_NonVisualGraphicFrameProperties and its children, prefixing error messages with path
func (_dgac *CT_NonVisualGraphicFrameProperties) ValidateWithPath(path string) error {
	if _dgac.GraphicFrameLocks != nil {
		if _ebbgd := _dgac.GraphicFrameLocks.ValidateWithPath(path + "\u002fG\u0072a\u0070\u0068\u0069\u0063\u0046r\u0061\u006de\u004c\u006f\u0063\u006b\u0073"); _ebbgd != nil {
			return _ebbgd
		}
	}
	if _dgac.ExtLst != nil {
		if _dggd := _dgac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dggd != nil {
			return _dggd
		}
	}
	return nil
}

func (_ebgfg *ST_TextCapsType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ebgfg = 0
	case "\u006e\u006f\u006e\u0065":
		*_ebgfg = 1
	case "\u0073\u006d\u0061l\u006c":
		*_ebgfg = 2
	case "\u0061\u006c\u006c":
		*_ebgfg = 3
	}
	return nil
}

func (_cafea ST_RectAlignment) String() string {
	switch _cafea {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0063\u0074\u0072"
	case 6:
		return "\u0072"
	case 7:
		return "\u0062\u006c"
	case 8:
		return "\u0062"
	case 9:
		return "\u0062\u0072"
	}
	return ""
}

func NewEG_TextBulletTypeface() *EG_TextBulletTypeface {
	_ddggg := &EG_TextBulletTypeface{}
	return _ddggg
}

func (_fgdbg *CT_Scale2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fgdbg.Sx = NewCT_Ratio()
	_fgdbg.Sy = NewCT_Ratio()
_daacc:
	for {
		_babcg, _gecbb := d.Token()
		if _gecbb != nil {
			return _gecbb
		}
		switch _cfge := _babcg.(type) {
		case _g.StartElement:
			switch _cfge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}:
				if _fcee := d.DecodeElement(_fgdbg.Sx, &_cfge); _fcee != nil {
					return _fcee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}:
				if _bfbb := d.DecodeElement(_fgdbg.Sy, &_cfge); _bfbb != nil {
					return _bfbb
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0061\u006c\u0065\u0032\u0044\u0020\u0025\u0076", _cfge.Name)
				if _ccbgg := d.Skip(); _ccbgg != nil {
					return _ccbgg
				}
			}
		case _g.EndElement:
			break _daacc
		case _g.CharData:
		}
	}
	return nil
}

func (_dffe *CT_AnimationDgmBuildProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cdaf := range start.Attr {
		if _cdaf.Name.Local == "\u0062\u006c\u0064" {
			_dfde, _ebbb := ParseUnionST_AnimationDgmBuildType(_cdaf.Value)
			if _ebbb != nil {
				return _ebbb
			}
			_dffe.BldAttr = &_dfde
			continue
		}
		if _cdaf.Name.Local == "\u0072\u0065\u0076" {
			_gcae, _bgg := _fg.ParseBool(_cdaf.Value)
			if _bgg != nil {
				return _bgg
			}
			_dffe.RevAttr = &_gcae
			continue
		}
	}
	for {
		_bdbf, _abg := d.Token()
		if _abg != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0042\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _abg)
		}
		if _deda, _fgaa := _bdbf.(_g.EndElement); _fgaa && _deda.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_GradientStopList() *CT_GradientStopList { _ggaef := &CT_GradientStopList{}; return _ggaef }

func NewCT_HslColor() *CT_HslColor { _bafdgg := &CT_HslColor{}; _bafdgg.HueAttr = 0; return _bafdgg }

type CT_BackgroundFillStyleList struct{ EG_FillProperties []*EG_FillProperties }

func (_faeae ST_TextFontAlignType) Validate() error { return _faeae.ValidateWithPath("") }

func NewCT_TextParagraph() *CT_TextParagraph { _afffg := &CT_TextParagraph{}; return _afffg }

func (_bceff ST_PositiveFixedPercentage) String() string {
	if _bceff.ST_PositiveFixedPercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_bceff.ST_PositiveFixedPercentageDecimal)
	}
	if _bceff.ST_PositiveFixedPercentage != nil {
		return _bceff.ST_PositiveFixedPercentage.String()
	}
	return ""
}

func NewCT_BlipChoice() *CT_BlipChoice { _ceaf := &CT_BlipChoice{}; return _ceaf }

type CT_BaseStylesOverride struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
}

// ValidateWithPath validates the CT_TextTabStop and its children, prefixing error messages with path
func (_cagee *CT_TextTabStop) ValidateWithPath(path string) error {
	if _cagee.PosAttr != nil {
		if _eebfg := _cagee.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _eebfg != nil {
			return _eebfg
		}
	}
	if _abebe := _cagee.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _abebe != nil {
		return _abebe
	}
	return nil
}

func NewCT_FixedPercentage() *CT_FixedPercentage { _ggcf := &CT_FixedPercentage{}; return _ggcf }

func NewCT_GradientStop() *CT_GradientStop { _cabb := &CT_GradientStop{}; return _cabb }

// ValidateWithPath validates the CT_StretchInfoProperties and its children, prefixing error messages with path
func (_afffe *CT_StretchInfoProperties) ValidateWithPath(path string) error {
	if _afffe.FillRect != nil {
		if _agbfcc := _afffe.FillRect.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0052\u0065\u0063t"); _agbfcc != nil {
			return _agbfcc
		}
	}
	return nil
}

func (_baceb *ST_PositiveFixedPercentage) Validate() error { return _baceb.ValidateWithPath("") }

func (_befba *ST_TextTabAlignType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_befba = 0
	case "\u006c":
		*_befba = 1
	case "\u0063\u0074\u0072":
		*_befba = 2
	case "\u0072":
		*_befba = 3
	case "\u0064\u0065\u0063":
		*_befba = 4
	}
	return nil
}

func (_abgagb *EG_LineFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aadge:
	for {
		_fcege, _gedcc := d.Token()
		if _gedcc != nil {
			return _gedcc
		}
		switch _edefcg := _fcege.(type) {
		case _g.StartElement:
			switch _edefcg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_abgagb.NoFill = NewCT_NoFillProperties()
				if _fbcdf := d.DecodeElement(_abgagb.NoFill, &_edefcg); _fbcdf != nil {
					return _fbcdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_abgagb.SolidFill = NewCT_SolidColorFillProperties()
				if _dfgbf := d.DecodeElement(_abgagb.SolidFill, &_edefcg); _dfgbf != nil {
					return _dfgbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_abgagb.GradFill = NewCT_GradientFillProperties()
				if _bcbgg := d.DecodeElement(_abgagb.GradFill, &_edefcg); _bcbgg != nil {
					return _bcbgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_abgagb.PattFill = NewCT_PatternFillProperties()
				if _gcdce := d.DecodeElement(_abgagb.PattFill, &_edefcg); _gcdce != nil {
					return _gcdce
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _edefcg.Name)
				if _dfedf := d.Skip(); _dfedf != nil {
					return _dfedf
				}
			}
		case _g.EndElement:
			break _aadge
		case _g.CharData:
		}
	}
	return nil
}

func (_dggca *CT_Ratio) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e"}, Value: _bb.Sprintf("\u0025\u0076", _dggca.NAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _dggca.DAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Path2DQuadBezierTo() *CT_Path2DQuadBezierTo {
	_ddaec := &CT_Path2DQuadBezierTo{}
	return _ddaec
}

func (_aacba *CT_ClipboardStyleSheet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aacba.ThemeElements = NewCT_BaseStyles()
	_aacba.ClrMap = NewCT_ColorMapping()
_cdgf:
	for {
		_bfdb, _agcb := d.Token()
		if _agcb != nil {
			return _agcb
		}
		switch _acdb := _bfdb.(type) {
		case _g.StartElement:
			switch _acdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _gfce := d.DecodeElement(_aacba.ThemeElements, &_acdb); _gfce != nil {
					return _gfce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _fbdg := d.DecodeElement(_aacba.ClrMap, &_acdb); _fbdg != nil {
					return _fbdg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006c\u0069\u0070b\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _acdb.Name)
				if _ffee := d.Skip(); _ffee != nil {
					return _ffee
				}
			}
		case _g.EndElement:
			break _cdgf
		case _g.CharData:
		}
	}
	return nil
}

func (_dbgdf ST_ChartBuildStep) ValidateWithPath(path string) error {
	switch _dbgdf {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbgdf))
	}
	return nil
}

func (_ddgcf ST_DgmBuildStep) Validate() error { return _ddgcf.ValidateWithPath("") }

func (_cdcf *CT_Cell3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cdcf.Bevel = NewCT_Bevel()
	for _, _ecacb := range start.Attr {
		if _ecacb.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_cdcf.PrstMaterialAttr.UnmarshalXMLAttr(_ecacb)
			continue
		}
	}
_fddg:
	for {
		_dfab, _agdg := d.Token()
		if _agdg != nil {
			return _agdg
		}
		switch _gcge := _dfab.(type) {
		case _g.StartElement:
			switch _gcge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				if _aacf := d.DecodeElement(_cdcf.Bevel, &_gcge); _aacf != nil {
					return _aacf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				_cdcf.LightRig = NewCT_LightRig()
				if _fabb := d.DecodeElement(_cdcf.LightRig, &_gcge); _fabb != nil {
					return _fabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdcf.ExtLst = NewCT_OfficeArtExtensionList()
				if _abecc := d.DecodeElement(_cdcf.ExtLst, &_gcge); _abecc != nil {
					return _abecc
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0065\u006cl\u0033\u0044 \u0025\u0076", _gcge.Name)
				if _fabg := d.Skip(); _fabg != nil {
					return _fabg
				}
			}
		case _g.EndElement:
			break _fddg
		case _g.CharData:
		}
	}
	return nil
}

type CT_CustomGeometry2D struct {
	AvLst   *CT_GeomGuideList
	GdLst   *CT_GeomGuideList
	AhLst   *CT_AdjustHandleList
	CxnLst  *CT_ConnectionSiteList
	Rect    *CT_GeomRect
	PathLst *CT_Path2DList
}

// Validate validates the CT_NonVisualConnectorProperties and its children
func (_fbbab *CT_NonVisualConnectorProperties) Validate() error {
	return _fbbab.ValidateWithPath("\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func ParseUnionST_TextSpacingPercentOrPercentString(s string) (ST_TextSpacingPercentOrPercentString, error) {
	_aggdfa := ST_TextSpacingPercentOrPercentString{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_aggdfa.ST_Percentage = &s
	} else {
		_ddeee, _afgf := _fg.ParseInt(s, 10, 64)
		if _afgf != nil {
			return _aggdfa, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _afgf)
		}
		_eefgag := int32(_ddeee)
		_aggdfa.ST_TextSpacingPercent = &_eefgag
	}
	return _aggdfa, nil
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_bdbga *CT_FontScheme) ValidateWithPath(path string) error {
	if _cdgd := _bdbga.MajorFont.ValidateWithPath(path + "\u002f\u004d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"); _cdgd != nil {
		return _cdgd
	}
	if _aceb := _bdbga.MinorFont.ValidateWithPath(path + "\u002f\u004d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"); _aceb != nil {
		return _aceb
	}
	if _bdbga.ExtLst != nil {
		if _gcbe := _bdbga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcbe != nil {
			return _gcbe
		}
	}
	return nil
}

func (_fffdd *CT_GvmlConnectorNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_fggeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_fffdd.CNvPr, _fggeb)
	_cgcgg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fffdd.CNvCxnSpPr, _cgcgg)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_CustomGeometry2D() *CT_CustomGeometry2D {
	_daaa := &CT_CustomGeometry2D{}
	_daaa.PathLst = NewCT_Path2DList()
	return _daaa
}

func (_ggdbb *ThemeOverride) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggdbb.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
_fffegg:
	for {
		_bcdacf, _fgcbe := d.Token()
		if _fgcbe != nil {
			return _fgcbe
		}
		switch _bbfdb := _bcdacf.(type) {
		case _g.StartElement:
			switch _bbfdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_ggdbb.ClrScheme = NewCT_ColorScheme()
				if _ddfgf := d.DecodeElement(_ggdbb.ClrScheme, &_bbfdb); _ddfgf != nil {
					return _ddfgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_ggdbb.FontScheme = NewCT_FontScheme()
				if _ddafd := d.DecodeElement(_ggdbb.FontScheme, &_bbfdb); _ddafd != nil {
					return _ddafd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_ggdbb.FmtScheme = NewCT_StyleMatrix()
				if _gdccfd := d.DecodeElement(_ggdbb.FmtScheme, &_bbfdb); _gdccfd != nil {
					return _gdccfd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0068\u0065\u006de\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065 \u0025\u0076", _bbfdb.Name)
				if _ecfee := d.Skip(); _ecfee != nil {
					return _ecfee
				}
			}
		case _g.EndElement:
			break _fffegg
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SystemColor and its children, prefixing error messages with path
func (_gagb *CT_SystemColor) ValidateWithPath(path string) error {
	if _gagb.ValAttr == ST_SystemColorValUnset {
		return _bb.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cfaf := _gagb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cfaf != nil {
		return _cfaf
	}
	for _dfedbb, _badga := range _gagb.EG_ColorTransform {
		if _fbdbc := _badga.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _dfedbb)); _fbdbc != nil {
			return _fbdbc
		}
	}
	return nil
}

func NewCT_QuickTimeFile() *CT_QuickTimeFile { _gbadaf := &CT_QuickTimeFile{}; return _gbadaf }

// Validate validates the CT_EffectList and its children
func (_bdfbd *CT_EffectList) Validate() error {
	return _bdfbd.ValidateWithPath("\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074")
}

func (_debac *EG_TextBulletTypeface) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_feece:
	for {
		_gggba, _fbgfe := d.Token()
		if _fbgfe != nil {
			return _fbgfe
		}
		switch _bbgce := _gggba.(type) {
		case _g.StartElement:
			switch _bbgce.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_debac.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _abead := d.DecodeElement(_debac.BuFontTx, &_bbgce); _abead != nil {
					return _abead
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_debac.BuFont = NewCT_TextFont()
				if _bdcfdf := d.DecodeElement(_debac.BuFont, &_bbgce); _bdcfdf != nil {
					return _bdcfdf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0020\u0025\u0076", _bbgce.Name)
				if _beefc := d.Skip(); _beefc != nil {
					return _beefc
				}
			}
		case _g.EndElement:
			break _feece
		case _g.CharData:
		}
	}
	return nil
}

type CT_GeomGuideList struct{ Gd []*CT_GeomGuide }

func NewCT_ColorScheme() *CT_ColorScheme {
	_ebedd := &CT_ColorScheme{}
	_ebedd.Dk1 = NewCT_Color()
	_ebedd.Lt1 = NewCT_Color()
	_ebedd.Dk2 = NewCT_Color()
	_ebedd.Lt2 = NewCT_Color()
	_ebedd.Accent1 = NewCT_Color()
	_ebedd.Accent2 = NewCT_Color()
	_ebedd.Accent3 = NewCT_Color()
	_ebedd.Accent4 = NewCT_Color()
	_ebedd.Accent5 = NewCT_Color()
	_ebedd.Accent6 = NewCT_Color()
	_ebedd.Hlink = NewCT_Color()
	_ebedd.FolHlink = NewCT_Color()
	return _ebedd
}

func (_fbcbd *ST_AnimationChartBuildType) ValidateWithPath(path string) error {
	_eedf := []string{}
	if _fbcbd.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_eedf = append(_eedf, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _fbcbd.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		_eedf = append(_eedf, "\u0053\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0043\u0068\u0061\u0072\u0074\u004fn\u006c\u0079\u0042\u0075\u0069\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if len(_eedf) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _eedf)
	}
	return nil
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_bafb *CT_Color) ValidateWithPath(path string) error {
	if _bafb.ScrgbClr != nil {
		if _bfee := _bafb.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _bfee != nil {
			return _bfee
		}
	}
	if _bafb.SrgbClr != nil {
		if _bdgf := _bafb.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bdgf != nil {
			return _bdgf
		}
	}
	if _bafb.HslClr != nil {
		if _aafdb := _bafb.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _aafdb != nil {
			return _aafdb
		}
	}
	if _bafb.SysClr != nil {
		if _edea := _bafb.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _edea != nil {
			return _edea
		}
	}
	if _bafb.SchemeClr != nil {
		if _dgfab := _bafb.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dgfab != nil {
			return _dgfab
		}
	}
	if _bafb.PrstClr != nil {
		if _fbbc := _bafb.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fbbc != nil {
			return _fbbc
		}
	}
	return nil
}

func NewCT_TextSpacingPoint() *CT_TextSpacingPoint {
	_cdbf := &CT_TextSpacingPoint{}
	_cdbf.ValAttr = 0
	return _cdbf
}

// ValidateWithPath validates the CT_EffectContainer and its children, prefixing error messages with path
func (_gdaf *CT_EffectContainer) ValidateWithPath(path string) error {
	if _cefgd := _gdaf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cefgd != nil {
		return _cefgd
	}
	if _gdaf.Cont != nil {
		if _ddcf := _gdaf.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _ddcf != nil {
			return _ddcf
		}
	}
	if _gdaf.Effect != nil {
		if _bade := _gdaf.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _bade != nil {
			return _bade
		}
	}
	if _gdaf.AlphaBiLevel != nil {
		if _ddae := _gdaf.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _ddae != nil {
			return _ddae
		}
	}
	if _gdaf.AlphaCeiling != nil {
		if _bgfd := _gdaf.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _bgfd != nil {
			return _bgfd
		}
	}
	if _gdaf.AlphaFloor != nil {
		if _degd := _gdaf.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _degd != nil {
			return _degd
		}
	}
	if _gdaf.AlphaInv != nil {
		if _ecca := _gdaf.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _ecca != nil {
			return _ecca
		}
	}
	if _gdaf.AlphaMod != nil {
		if _cdag := _gdaf.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _cdag != nil {
			return _cdag
		}
	}
	if _gdaf.AlphaModFix != nil {
		if _ccba := _gdaf.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _ccba != nil {
			return _ccba
		}
	}
	if _gdaf.AlphaOutset != nil {
		if _bdcfd := _gdaf.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _bdcfd != nil {
			return _bdcfd
		}
	}
	if _gdaf.AlphaRepl != nil {
		if _fede := _gdaf.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _fede != nil {
			return _fede
		}
	}
	if _gdaf.BiLevel != nil {
		if _ccgd := _gdaf.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _ccgd != nil {
			return _ccgd
		}
	}
	if _gdaf.Blend != nil {
		if _eagfb := _gdaf.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _eagfb != nil {
			return _eagfb
		}
	}
	if _gdaf.Blur != nil {
		if _bgfda := _gdaf.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _bgfda != nil {
			return _bgfda
		}
	}
	if _gdaf.ClrChange != nil {
		if _cccge := _gdaf.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _cccge != nil {
			return _cccge
		}
	}
	if _gdaf.ClrRepl != nil {
		if _deffb := _gdaf.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _deffb != nil {
			return _deffb
		}
	}
	if _gdaf.Duotone != nil {
		if _eaec := _gdaf.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _eaec != nil {
			return _eaec
		}
	}
	if _gdaf.Fill != nil {
		if _eddb := _gdaf.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _eddb != nil {
			return _eddb
		}
	}
	if _gdaf.FillOverlay != nil {
		if _gccc := _gdaf.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _gccc != nil {
			return _gccc
		}
	}
	if _gdaf.Glow != nil {
		if _addg := _gdaf.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _addg != nil {
			return _addg
		}
	}
	if _gdaf.Grayscl != nil {
		if _acgc := _gdaf.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _acgc != nil {
			return _acgc
		}
	}
	if _gdaf.Hsl != nil {
		if _eccc := _gdaf.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _eccc != nil {
			return _eccc
		}
	}
	if _gdaf.InnerShdw != nil {
		if _dede := _gdaf.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _dede != nil {
			return _dede
		}
	}
	if _gdaf.Lum != nil {
		if _fccb := _gdaf.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _fccb != nil {
			return _fccb
		}
	}
	if _gdaf.OuterShdw != nil {
		if _dfdcf := _gdaf.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _dfdcf != nil {
			return _dfdcf
		}
	}
	if _gdaf.PrstShdw != nil {
		if _dfaf := _gdaf.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _dfaf != nil {
			return _dfaf
		}
	}
	if _gdaf.Reflection != nil {
		if _ebggd := _gdaf.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _ebggd != nil {
			return _ebggd
		}
	}
	if _gdaf.RelOff != nil {
		if _affg := _gdaf.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _affg != nil {
			return _affg
		}
	}
	if _gdaf.SoftEdge != nil {
		if _egdaf := _gdaf.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _egdaf != nil {
			return _egdaf
		}
	}
	if _gdaf.Tint != nil {
		if _ececb := _gdaf.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _ececb != nil {
			return _ececb
		}
	}
	if _gdaf.Xfrm != nil {
		if _aee := _gdaf.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _aee != nil {
			return _aee
		}
	}
	return nil
}

type CT_TextBulletTypefaceFollowText struct{}

type CT_AudioCD struct {
	St     *CT_AudioCDTime
	End    *CT_AudioCDTime
	ExtLst *CT_OfficeArtExtensionList
}

func (_gacgbe *CT_PositiveFixedAngle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gacgbe.ValAttr = 0
	for _, _dabe := range start.Attr {
		if _dabe.Name.Local == "\u0076\u0061\u006c" {
			_fdcg, _aeacd := _fg.ParseInt(_dabe.Value, 10, 32)
			if _aeacd != nil {
				return _aeacd
			}
			_gacgbe.ValAttr = int32(_fdcg)
			continue
		}
	}
	for {
		_dgbac, _efgcc := d.Token()
		if _efgcc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046i\u0078\u0065\u0064\u0041\u006e\u0067\u006ce\u003a\u0020\u0025\u0073", _efgcc)
		}
		if _fddbbf, _bfcdc := _dgbac.(_g.EndElement); _bfcdc && _fddbbf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the EG_ThemeableFillStyle and its children
func (_dgdaf *EG_ThemeableFillStyle) Validate() error {
	return _dgdaf.ValidateWithPath("E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065")
}

type CT_ColorReplaceEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// Validate validates the EG_LineFillProperties and its children
func (_abaef *EG_LineFillProperties) Validate() error {
	return _abaef.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_TablePartStyle and its children, prefixing error messages with path
func (_beaaf *CT_TablePartStyle) ValidateWithPath(path string) error {
	if _beaaf.TcTxStyle != nil {
		if _adddg := _beaaf.TcTxStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"); _adddg != nil {
			return _adddg
		}
	}
	if _beaaf.TcStyle != nil {
		if _gcaaa := _beaaf.TcStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0053\u0074\u0079\u006c\u0065"); _gcaaa != nil {
			return _gcaaa
		}
	}
	return nil
}

func (_ebfb *CT_OuterShadowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ebfb.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_ebfb.BlurRadAttr)})
	}
	if _ebfb.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_ebfb.DistAttr)})
	}
	if _ebfb.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_ebfb.DirAttr)})
	}
	if _ebfb.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_ebfb.SxAttr)})
	}
	if _ebfb.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_ebfb.SyAttr)})
	}
	if _ebfb.KxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_ebfb.KxAttr)})
	}
	if _ebfb.KyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_ebfb.KyAttr)})
	}
	if _ebfb.AlgnAttr != ST_RectAlignmentUnset {
		_bfgb, _dcgbc := _ebfb.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _dcgbc != nil {
			return _dcgbc
		}
		start.Attr = append(start.Attr, _bfgb)
	}
	if _ebfb.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ebfb.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _ebfb.ScrgbClr != nil {
		_ffecg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ebfb.ScrgbClr, _ffecg)
	}
	if _ebfb.SrgbClr != nil {
		_gedc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ebfb.SrgbClr, _gedc)
	}
	if _ebfb.HslClr != nil {
		_fagfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ebfb.HslClr, _fagfc)
	}
	if _ebfb.SysClr != nil {
		_ecdbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ebfb.SysClr, _ecdbe)
	}
	if _ebfb.SchemeClr != nil {
		_gbaege := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ebfb.SchemeClr, _gbaege)
	}
	if _ebfb.PrstClr != nil {
		_cdec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ebfb.PrstClr, _cdec)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextField and its children
func (_fgafg *CT_TextField) Validate() error {
	return _fgafg.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}

func (_afcg *CT_DefaultShapeDefinition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ecce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_afcg.SpPr, _ecce)
	_aafda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_afcg.BodyPr, _aafda)
	_bfga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
	e.EncodeElement(_afcg.LstStyle, _bfga)
	if _afcg.Style != nil {
		_eeab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_afcg.Style, _eeab)
	}
	if _afcg.ExtLst != nil {
		_dfgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afcg.ExtLst, _dfgd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fbbge ST_TextTabAlignType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bedgg := _g.Attr{}
	_bedgg.Name = name
	switch _fbbge {
	case ST_TextTabAlignTypeUnset:
		_bedgg.Value = ""
	case ST_TextTabAlignTypeL:
		_bedgg.Value = "\u006c"
	case ST_TextTabAlignTypeCtr:
		_bedgg.Value = "\u0063\u0074\u0072"
	case ST_TextTabAlignTypeR:
		_bedgg.Value = "\u0072"
	case ST_TextTabAlignTypeDec:
		_bedgg.Value = "\u0064\u0065\u0063"
	}
	return _bedgg, nil
}

func (_acebef *CT_RelativeRect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _acebef.LAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_acebef.LAttr)})
	}
	if _acebef.TAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_acebef.TAttr)})
	}
	if _acebef.RAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_acebef.RAttr)})
	}
	if _acebef.BAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0076", *_acebef.BAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GeomRect() *CT_GeomRect { _degg := &CT_GeomRect{}; return _degg }

type CT_TableCellBorderStyle struct {
	Left    *CT_ThemeableLineStyle
	Right   *CT_ThemeableLineStyle
	Top     *CT_ThemeableLineStyle
	Bottom  *CT_ThemeableLineStyle
	InsideH *CT_ThemeableLineStyle
	InsideV *CT_ThemeableLineStyle
	Tl2br   *CT_ThemeableLineStyle
	Tr2bl   *CT_ThemeableLineStyle
	ExtLst  *CT_OfficeArtExtensionList
}

func (_befcf *EG_ShadeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _befcf.Lin != nil {
		_eggc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_befcf.Lin, _eggc)
	}
	if _befcf.Path != nil {
		_dabfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_befcf.Path, _dabfd)
	}
	return nil
}

// ValidateWithPath validates the CT_GeomGuide and its children, prefixing error messages with path
func (_gddg *CT_GeomGuide) ValidateWithPath(path string) error { return nil }

func (_gaaca *CT_TextListStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gaaca.DefPPr != nil {
		_fegf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0050\u0050\u0072"}}
		e.EncodeElement(_gaaca.DefPPr, _fegf)
	}
	if _gaaca.Lvl1pPr != nil {
		_gacfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0031\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl1pPr, _gacfe)
	}
	if _gaaca.Lvl2pPr != nil {
		_eggaa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0032\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl2pPr, _eggaa)
	}
	if _gaaca.Lvl3pPr != nil {
		_bbgbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0033\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl3pPr, _bbgbb)
	}
	if _gaaca.Lvl4pPr != nil {
		_babfc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0034\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl4pPr, _babfc)
	}
	if _gaaca.Lvl5pPr != nil {
		_edcgad := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0035\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl5pPr, _edcgad)
	}
	if _gaaca.Lvl6pPr != nil {
		_ggeccg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0036\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl6pPr, _ggeccg)
	}
	if _gaaca.Lvl7pPr != nil {
		_fggcc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0037\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl7pPr, _fggcc)
	}
	if _gaaca.Lvl8pPr != nil {
		_fbdff := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0038\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl8pPr, _fbdff)
	}
	if _gaaca.Lvl9pPr != nil {
		_gaeec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0039\u0070\u0050r"}}
		e.EncodeElement(_gaaca.Lvl9pPr, _gaeec)
	}
	if _gaaca.ExtLst != nil {
		_gccbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gaaca.ExtLst, _gccbc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_CustomColorList() *CT_CustomColorList { _bbbc := &CT_CustomColorList{}; return _bbbc }

// ValidateWithPath validates the CT_Path2DList and its children, prefixing error messages with path
func (_gcbda *CT_Path2DList) ValidateWithPath(path string) error {
	for _cbcab, _gdbdc := range _gcbda.Path {
		if _ccdcg := _gdbdc.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0050\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _cbcab)); _ccdcg != nil {
			return _ccdcg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SupplementalFont and its children, prefixing error messages with path
func (_bdfda *CT_SupplementalFont) ValidateWithPath(path string) error { return nil }

type CT_AlphaModulateFixedEffect struct{ AmtAttr *ST_PositivePercentage }

func (_cfed ST_TextAnchoringType) String() string {
	switch _cfed {
	case 0:
		return ""
	case 1:
		return "\u0074"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0062"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u0064\u0069\u0073\u0074"
	}
	return ""
}

func (_dbcfb *CT_PresetColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_bcccf, _dbfed := _dbcfb.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
	if _dbfed != nil {
		return _dbfed
	}
	start.Attr = append(start.Attr, _bcccf)
	e.EncodeToken(start)
	if _dbcfb.EG_ColorTransform != nil {
		for _, _agaee := range _dbcfb.EG_ColorTransform {
			_agaee.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ggdfa *CT_GvmlConnector) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggdfa.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_ggdfa.SpPr = NewCT_ShapeProperties()
_fgbc:
	for {
		_ddec, _eebcb := d.Token()
		if _eebcb != nil {
			return _eebcb
		}
		switch _cdaga := _ddec.(type) {
		case _g.StartElement:
			switch _cdaga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _cbcgd := d.DecodeElement(_ggdfa.NvCxnSpPr, &_cdaga); _cbcgd != nil {
					return _cbcgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _fgac := d.DecodeElement(_ggdfa.SpPr, &_cdaga); _fgac != nil {
					return _fgac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_ggdfa.Style = NewCT_ShapeStyle()
				if _acab := d.DecodeElement(_ggdfa.Style, &_cdaga); _acab != nil {
					return _acab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggdfa.ExtLst = NewCT_OfficeArtExtensionList()
				if _ebgab := d.DecodeElement(_ggdfa.ExtLst, &_cdaga); _ebgab != nil {
					return _ebgab
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0020\u0025v", _cdaga.Name)
				if _bdddb := d.Skip(); _bdddb != nil {
					return _bdddb
				}
			}
		case _g.EndElement:
			break _fgbc
		case _g.CharData:
		}
	}
	return nil
}

type CT_TableStyle struct {
	StyleIdAttr   string
	StyleNameAttr string
	TblBg         *CT_TableBackgroundStyle
	WholeTbl      *CT_TablePartStyle
	Band1H        *CT_TablePartStyle
	Band2H        *CT_TablePartStyle
	Band1V        *CT_TablePartStyle
	Band2V        *CT_TablePartStyle
	LastCol       *CT_TablePartStyle
	FirstCol      *CT_TablePartStyle
	LastRow       *CT_TablePartStyle
	SeCell        *CT_TablePartStyle
	SwCell        *CT_TablePartStyle
	FirstRow      *CT_TablePartStyle
	NeCell        *CT_TablePartStyle
	NwCell        *CT_TablePartStyle
	ExtLst        *CT_OfficeArtExtensionList
}

func (_acdbf ST_BevelPresetType) Validate() error { return _acdbf.ValidateWithPath("") }

func (_efdf *CT_DuotoneEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	for _, _fbeg := range _efdf.EG_ColorChoice {
		_fbeg.MarshalXML(e, _g.StartElement{})
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gabda *CT_TextCharacterProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gabda.KumimojiAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.KumimojiAttr))})
	}
	if _gabda.LangAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.LangAttr)})
	}
	if _gabda.AltLangAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061l\u0074\u004c\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.AltLangAttr)})
	}
	if _gabda.SzAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.SzAttr)})
	}
	if _gabda.BAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.BAttr))})
	}
	if _gabda.IAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.IAttr))})
	}
	if _gabda.UAttr != ST_TextUnderlineTypeUnset {
		_aefec, _cagca := _gabda.UAttr.MarshalXMLAttr(_g.Name{Local: "\u0075"})
		if _cagca != nil {
			return _cagca
		}
		start.Attr = append(start.Attr, _aefec)
	}
	if _gabda.StrikeAttr != ST_TextStrikeTypeUnset {
		_aagba, _ffdfb := _gabda.StrikeAttr.MarshalXMLAttr(_g.Name{Local: "\u0073\u0074\u0072\u0069\u006b\u0065"})
		if _ffdfb != nil {
			return _ffdfb
		}
		start.Attr = append(start.Attr, _aagba)
	}
	if _gabda.KernAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0065\u0072\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.KernAttr)})
	}
	if _gabda.CapAttr != ST_TextCapsTypeUnset {
		_gbeff, _gdbaf := _gabda.CapAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0061\u0070"})
		if _gdbaf != nil {
			return _gdbaf
		}
		start.Attr = append(start.Attr, _gbeff)
	}
	if _gabda.SpcAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0063"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.SpcAttr)})
	}
	if _gabda.NormalizeHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.NormalizeHAttr))})
	}
	if _gabda.BaselineAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.BaselineAttr)})
	}
	if _gabda.NoProofAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0050\u0072\u006f\u006f\u0066"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.NoProofAttr))})
	}
	if _gabda.DirtyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072t\u0079"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.DirtyAttr))})
	}
	if _gabda.ErrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u0072\u0072"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.ErrAttr))})
	}
	if _gabda.SmtCleanAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gabda.SmtCleanAttr))})
	}
	if _gabda.SmtIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006d\u0074I\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.SmtIdAttr)})
	}
	if _gabda.BmkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006d\u006b"}, Value: _bb.Sprintf("\u0025\u0076", *_gabda.BmkAttr)})
	}
	e.EncodeToken(start)
	if _gabda.Ln != nil {
		_ffbed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_gabda.Ln, _ffbed)
	}
	if _gabda.NoFill != nil {
		_bebb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gabda.NoFill, _bebb)
	}
	if _gabda.SolidFill != nil {
		_bcbea := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gabda.SolidFill, _bcbea)
	}
	if _gabda.GradFill != nil {
		_ceaeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gabda.GradFill, _ceaeb)
	}
	if _gabda.BlipFill != nil {
		_fgagc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gabda.BlipFill, _fgagc)
	}
	if _gabda.PattFill != nil {
		_gecgb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gabda.PattFill, _gecgb)
	}
	if _gabda.GrpFill != nil {
		_ccabc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_gabda.GrpFill, _ccabc)
	}
	if _gabda.EffectLst != nil {
		_addad := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gabda.EffectLst, _addad)
	}
	if _gabda.EffectDag != nil {
		_eecabf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_gabda.EffectDag, _eecabf)
	}
	if _gabda.Highlight != nil {
		_bcddff := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_gabda.Highlight, _bcddff)
	}
	if _gabda.ULnTx != nil {
		_agaac := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_gabda.ULnTx, _agaac)
	}
	if _gabda.ULn != nil {
		_ccdee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_gabda.ULn, _ccdee)
	}
	if _gabda.UFillTx != nil {
		_ccade := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_gabda.UFillTx, _ccade)
	}
	if _gabda.UFill != nil {
		_fadc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gabda.UFill, _fadc)
	}
	if _gabda.Latin != nil {
		_cbegf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
		e.EncodeElement(_gabda.Latin, _cbegf)
	}
	if _gabda.Ea != nil {
		_cegdgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0061"}}
		e.EncodeElement(_gabda.Ea, _cegdgc)
	}
	if _gabda.Cs != nil {
		_fabec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0073"}}
		e.EncodeElement(_gabda.Cs, _fabec)
	}
	if _gabda.Sym != nil {
		_aggfee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073y\u006d"}}
		e.EncodeElement(_gabda.Sym, _aggfee)
	}
	if _gabda.HlinkClick != nil {
		_abfeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_gabda.HlinkClick, _abfeg)
	}
	if _gabda.HlinkMouseOver != nil {
		_fbde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ah\u006c\u0069\u006ek\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"}}
		e.EncodeElement(_gabda.HlinkMouseOver, _fbde)
	}
	if _gabda.Rtl != nil {
		_fdcfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072t\u006c"}}
		e.EncodeElement(_gabda.Rtl, _fdcfc)
	}
	if _gabda.ExtLst != nil {
		_fccff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gabda.ExtLst, _fccff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextStrikeTypeUnset     ST_TextStrikeType = 0
	ST_TextStrikeTypeNoStrike  ST_TextStrikeType = 1
	ST_TextStrikeTypeSngStrike ST_TextStrikeType = 2
	ST_TextStrikeTypeDblStrike ST_TextStrikeType = 3
)

// ValidateWithPath validates the CT_Percentage and its children, prefixing error messages with path
func (_ggecd *CT_Percentage) ValidateWithPath(path string) error {
	if _bfgbf := _ggecd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bfgbf != nil {
		return _bfgbf
	}
	return nil
}

func NewCT_GroupLocking() *CT_GroupLocking { _acdcf := &CT_GroupLocking{}; return _acdcf }

func (_cefgdf *CT_NonVisualDrawingShapeProps) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cgfe := range start.Attr {
		if _cgfe.Name.Local == "\u0074\u0078\u0042o\u0078" {
			_fcggd, _geff := _fg.ParseBool(_cgfe.Value)
			if _geff != nil {
				return _geff
			}
			_cefgdf.TxBoxAttr = &_fcggd
			continue
		}
	}
_bbbef:
	for {
		_fabfb, _fcbbd := d.Token()
		if _fcbbd != nil {
			return _fcbbd
		}
		switch _aacd := _fabfb.(type) {
		case _g.StartElement:
			switch _aacd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}:
				_cefgdf.SpLocks = NewCT_ShapeLocking()
				if _aebgf := d.DecodeElement(_cefgdf.SpLocks, &_aacd); _aebgf != nil {
					return _aebgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cefgdf.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbbab := d.DecodeElement(_cefgdf.ExtLst, &_aacd); _bbbab != nil {
					return _bbbab
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061w\u0069\u006e\u0067\u0053\u0068\u0061p\u0065\u0050r\u006f\u0070s\u0020%\u0076", _aacd.Name)
				if _cgadg := d.Skip(); _cgadg != nil {
					return _cgadg
				}
			}
		case _g.EndElement:
			break _bbbef
		case _g.CharData:
		}
	}
	return nil
}

func (_egcfd ST_CompoundLine) ValidateWithPath(path string) error {
	switch _egcfd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egcfd))
	}
	return nil
}

func (_bacf ST_TextAutonumberScheme) Validate() error { return _bacf.ValidateWithPath("") }

// ValidateWithPath validates the CT_RelativeOffsetEffect and its children, prefixing error messages with path
func (_ecage *CT_RelativeOffsetEffect) ValidateWithPath(path string) error {
	if _ecage.TxAttr != nil {
		if _cfdgb := _ecage.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _cfdgb != nil {
			return _cfdgb
		}
	}
	if _ecage.TyAttr != nil {
		if _eaacf := _ecage.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _eaacf != nil {
			return _eaacf
		}
	}
	return nil
}

func NewCT_WholeE2oFormatting() *CT_WholeE2oFormatting {
	_fgceg := &CT_WholeE2oFormatting{}
	return _fgceg
}

func (_gcfde *EG_EffectProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cfcee:
	for {
		_faac, _gebbfd := d.Token()
		if _gebbfd != nil {
			return _gebbfd
		}
		switch _adcad := _faac.(type) {
		case _g.StartElement:
			switch _adcad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_gcfde.EffectLst = NewCT_EffectList()
				if _gcbgf := d.DecodeElement(_gcfde.EffectLst, &_adcad); _gcbgf != nil {
					return _gcbgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_gcfde.EffectDag = NewCT_EffectContainer()
				if _dggb := d.DecodeElement(_gcfde.EffectDag, &_adcad); _dggb != nil {
					return _dggb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u0047\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _adcad.Name)
				if _fegfb := d.Skip(); _fegfb != nil {
					return _fegfb
				}
			}
		case _g.EndElement:
			break _cfcee
		case _g.CharData:
		}
	}
	return nil
}

func (_fdfcee *EG_ThemeableFillStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gfbcbd:
	for {
		_gfbb, _dagea := d.Token()
		if _dagea != nil {
			return _dagea
		}
		switch _efaea := _gfbb.(type) {
		case _g.StartElement:
			switch _efaea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_fdfcee.Fill = NewCT_FillProperties()
				if _gagbe := d.DecodeElement(_fdfcee.Fill, &_efaea); _gagbe != nil {
					return _gagbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_fdfcee.FillRef = NewCT_StyleMatrixReference()
				if _dfcge := d.DecodeElement(_fdfcee.FillRef, &_efaea); _dfcge != nil {
					return _dfcge
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _efaea.Name)
				if _fbbgc := d.Skip(); _fbbgc != nil {
					return _fbbgc
				}
			}
		case _g.EndElement:
			break _gfbcbd
		case _g.CharData:
		}
	}
	return nil
}

func (_dgagd *CT_PresetShadowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_bagce, _bebc := _dgagd.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _bebc != nil {
		return _bebc
	}
	start.Attr = append(start.Attr, _bagce)
	if _dgagd.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_dgagd.DistAttr)})
	}
	if _dgagd.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_dgagd.DirAttr)})
	}
	e.EncodeToken(start)
	if _dgagd.ScrgbClr != nil {
		_beag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dgagd.ScrgbClr, _beag)
	}
	if _dgagd.SrgbClr != nil {
		_ggeea := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dgagd.SrgbClr, _ggeea)
	}
	if _dgagd.HslClr != nil {
		_eefea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dgagd.HslClr, _eefea)
	}
	if _dgagd.SysClr != nil {
		_gcace := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dgagd.SysClr, _gcace)
	}
	if _dgagd.SchemeClr != nil {
		_ecaea := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dgagd.SchemeClr, _ecaea)
	}
	if _dgagd.PrstClr != nil {
		_fbebe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dgagd.PrstClr, _fbebe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_AlphaOutsetEffect() *CT_AlphaOutsetEffect { _cbe := &CT_AlphaOutsetEffect{}; return _cbe }

type CT_TransformEffect struct {
	SxAttr *ST_Percentage
	SyAttr *ST_Percentage
	KxAttr *int32
	KyAttr *int32
	TxAttr *ST_Coordinate
	TyAttr *ST_Coordinate
}

func (_aagg *CT_GvmlTextShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bbff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
	e.EncodeElement(_aagg.TxBody, _bbff)
	if _aagg.Choice != nil {
		_aagg.Choice.MarshalXML(e, _g.StartElement{})
	}
	if _aagg.ExtLst != nil {
		_bdaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aagg.ExtLst, _bdaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbda *CT_Vector3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fgdae := range start.Attr {
		if _fgdae.Name.Local == "\u0064\u0078" {
			_fbcad, _gfcada := ParseUnionST_Coordinate(_fgdae.Value)
			if _gfcada != nil {
				return _gfcada
			}
			_dbda.DxAttr = _fbcad
			continue
		}
		if _fgdae.Name.Local == "\u0064\u0079" {
			_bfbfa, _fgbefd := ParseUnionST_Coordinate(_fgdae.Value)
			if _fgbefd != nil {
				return _fgbefd
			}
			_dbda.DyAttr = _bfbfa
			continue
		}
		if _fgdae.Name.Local == "\u0064\u007a" {
			_faged, _gcbgg := ParseUnionST_Coordinate(_fgdae.Value)
			if _gcbgg != nil {
				return _gcbgg
			}
			_dbda.DzAttr = _faged
			continue
		}
	}
	for {
		_bcbgb, _degae := d.Token()
		if _degae != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044\u003a\u0020\u0025\u0073", _degae)
		}
		if _adecgc, _affag := _bcbgb.(_g.EndElement); _affag && _adecgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bgbee ST_PathShadeType) String() string {
	switch _bgbee {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0061p\u0065"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0072\u0065\u0063\u0074"
	}
	return ""
}

func (_gcba *CT_AudioCD) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0074"}}
	e.EncodeElement(_gcba.St, _bfd)
	_bed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065n\u0064"}}
	e.EncodeElement(_gcba.End, _bed)
	if _gcba.ExtLst != nil {
		_gbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcba.ExtLst, _gbg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_BlipFillProperties() *CT_BlipFillProperties {
	_fcdcd := &CT_BlipFillProperties{}
	return _fcdcd
}

// Validate validates the CT_OfficeArtExtensionList and its children
func (_cgcbe *CT_OfficeArtExtensionList) Validate() error {
	return _cgcbe.ValidateWithPath("\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

type ST_LightRigType byte

type Graphic struct{ CT_GraphicalObject }

func NewCT_Backdrop() *CT_Backdrop {
	_cece := &CT_Backdrop{}
	_cece.Anchor = NewCT_Point3D()
	_cece.Norm = NewCT_Vector3D()
	_cece.Up = NewCT_Vector3D()
	return _cece
}

type CT_AlphaInverseEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_afeb *CT_StyleMatrix) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_afeb.FillStyleLst = NewCT_FillStyleList()
	_afeb.LnStyleLst = NewCT_LineStyleList()
	_afeb.EffectStyleLst = NewCT_EffectStyleList()
	_afeb.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	for _, _ddace := range start.Attr {
		if _ddace.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aegef, _gaea := _ddace.Value, error(nil)
			if _gaea != nil {
				return _gaea
			}
			_afeb.NameAttr = &_aegef
			continue
		}
	}
_fdfad:
	for {
		_ccccf, _bfcba := d.Token()
		if _bfcba != nil {
			return _bfcba
		}
		switch _dadad := _ccccf.(type) {
		case _g.StartElement:
			switch _dadad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _ggfdf := d.DecodeElement(_afeb.FillStyleLst, &_dadad); _ggfdf != nil {
					return _ggfdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _adbbf := d.DecodeElement(_afeb.LnStyleLst, &_dadad); _adbbf != nil {
					return _adbbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _cbfaf := d.DecodeElement(_afeb.EffectStyleLst, &_dadad); _cbfaf != nil {
					return _cbfaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _cgcca := d.DecodeElement(_afeb.BgFillStyleLst, &_dadad); _cgcca != nil {
					return _cgcca
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061t\u0072i\u0078\u0020\u0025\u0076", _dadad.Name)
				if _gdccb := d.Skip(); _gdccb != nil {
					return _gdccb
				}
			}
		case _g.EndElement:
			break _fdfad
		case _g.CharData:
		}
	}
	return nil
}

func (_beccga *ST_DgmBuildStep) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bcffce, _edabea := d.Token()
	if _edabea != nil {
		return _edabea
	}
	if _befe, _geebd := _bcffce.(_g.EndElement); _geebd && _befe.Name == start.Name {
		*_beccga = 1
		return nil
	}
	if _ecfg, _ffdabb := _bcffce.(_g.CharData); !_ffdabb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcffce)
	} else {
		switch string(_ecfg) {
		case "":
			*_beccga = 0
		case "\u0073\u0070":
			*_beccga = 1
		case "\u0062\u0067":
			*_beccga = 2
		}
	}
	_bcffce, _edabea = d.Token()
	if _edabea != nil {
		return _edabea
	}
	if _dbbegfd, _eeefb := _bcffce.(_g.EndElement); _eeefb && _dbbegfd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcffce)
}

func (_fae *CT_ConnectorLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fddfg := range start.Attr {
		if _fddfg.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_befc, _dfgg := _fg.ParseBool(_fddfg.Value)
			if _dfgg != nil {
				return _dfgg
			}
			_fae.NoGrpAttr = &_befc
			continue
		}
		if _fddfg.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_fbddd, _gfgd := _fg.ParseBool(_fddfg.Value)
			if _gfgd != nil {
				return _gfgd
			}
			_fae.NoSelectAttr = &_fbddd
			continue
		}
		if _fddfg.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_bcda, _cebgg := _fg.ParseBool(_fddfg.Value)
			if _cebgg != nil {
				return _cebgg
			}
			_fae.NoRotAttr = &_bcda
			continue
		}
		if _fddfg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_cfdba, _acfc := _fg.ParseBool(_fddfg.Value)
			if _acfc != nil {
				return _acfc
			}
			_fae.NoChangeAspectAttr = &_cfdba
			continue
		}
		if _fddfg.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_fece, _aeab := _fg.ParseBool(_fddfg.Value)
			if _aeab != nil {
				return _aeab
			}
			_fae.NoMoveAttr = &_fece
			continue
		}
		if _fddfg.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_daff, _bgec := _fg.ParseBool(_fddfg.Value)
			if _bgec != nil {
				return _bgec
			}
			_fae.NoResizeAttr = &_daff
			continue
		}
		if _fddfg.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_deeae, _fce := _fg.ParseBool(_fddfg.Value)
			if _fce != nil {
				return _fce
			}
			_fae.NoEditPointsAttr = &_deeae
			continue
		}
		if _fddfg.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_dcggf, _febg := _fg.ParseBool(_fddfg.Value)
			if _febg != nil {
				return _febg
			}
			_fae.NoAdjustHandlesAttr = &_dcggf
			continue
		}
		if _fddfg.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_gffe, _cbfg := _fg.ParseBool(_fddfg.Value)
			if _cbfg != nil {
				return _cbfg
			}
			_fae.NoChangeArrowheadsAttr = &_gffe
			continue
		}
		if _fddfg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_ecfc, _ggbabf := _fg.ParseBool(_fddfg.Value)
			if _ggbabf != nil {
				return _ggbabf
			}
			_fae.NoChangeShapeTypeAttr = &_ecfc
			continue
		}
	}
_egfg:
	for {
		_edd, _accg := d.Token()
		if _accg != nil {
			return _accg
		}
		switch _afde := _edd.(type) {
		case _g.StartElement:
			switch _afde.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fae.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcge := d.DecodeElement(_fae.ExtLst, &_afde); _fcge != nil {
					return _fcge
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074or\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _afde.Name)
				if _aedc := d.Skip(); _aedc != nil {
					return _aedc
				}
			}
		case _g.EndElement:
			break _egfg
		case _g.CharData:
		}
	}
	return nil
}

func (_efaf *CT_SphereCoords) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0061\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _efaf.LatAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u006f\u006e"}, Value: _bb.Sprintf("\u0025\u0076", _efaf.LonAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0076"}, Value: _bb.Sprintf("\u0025\u0076", _efaf.RevAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bcfcf *CT_TextField) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _bcfcf.IdAttr)})
	if _bcfcf.TypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_bcfcf.TypeAttr)})
	}
	e.EncodeToken(start)
	if _bcfcf.RPr != nil {
		_acfde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_bcfcf.RPr, _acfde)
	}
	if _bcfcf.PPr != nil {
		_bebea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_bcfcf.PPr, _bebea)
	}
	if _bcfcf.T != nil {
		_bcedg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074"}}
		_fc.AddPreserveSpaceAttr(&_bcedg, *_bcfcf.T)
		e.EncodeElement(_bcfcf.T, _bcedg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlGroupShape and its children
func (_cfaee *CT_GvmlGroupShape) Validate() error {
	return _cfaee.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065")
}

func (_fgbff ST_EffectContainerType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fgbff.String(), start)
}

func NewCT_ShapeProperties() *CT_ShapeProperties { _fdccd := &CT_ShapeProperties{}; return _fdccd }

// Validate validates the CT_NonVisualDrawingProps and its children
func (_dfbbe *CT_NonVisualDrawingProps) Validate() error {
	return _dfbbe.ValidateWithPath("\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073")
}

func (_bdebe *ST_PresetPatternVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dacgag, _dacgb := d.Token()
	if _dacgb != nil {
		return _dacgb
	}
	if _ebccaf, _fbbga := _dacgag.(_g.EndElement); _fbbga && _ebccaf.Name == start.Name {
		*_bdebe = 1
		return nil
	}
	if _ggagec, _dcaga := _dacgag.(_g.CharData); !_dcaga {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dacgag)
	} else {
		switch string(_ggagec) {
		case "":
			*_bdebe = 0
		case "\u0070\u0063\u0074\u0035":
			*_bdebe = 1
		case "\u0070\u0063\u00741\u0030":
			*_bdebe = 2
		case "\u0070\u0063\u00742\u0030":
			*_bdebe = 3
		case "\u0070\u0063\u00742\u0035":
			*_bdebe = 4
		case "\u0070\u0063\u00743\u0030":
			*_bdebe = 5
		case "\u0070\u0063\u00744\u0030":
			*_bdebe = 6
		case "\u0070\u0063\u00745\u0030":
			*_bdebe = 7
		case "\u0070\u0063\u00746\u0030":
			*_bdebe = 8
		case "\u0070\u0063\u00747\u0030":
			*_bdebe = 9
		case "\u0070\u0063\u00747\u0035":
			*_bdebe = 10
		case "\u0070\u0063\u00748\u0030":
			*_bdebe = 11
		case "\u0070\u0063\u00749\u0030":
			*_bdebe = 12
		case "\u0068\u006f\u0072\u007a":
			*_bdebe = 13
		case "\u0076\u0065\u0072\u0074":
			*_bdebe = 14
		case "\u006c\u0074\u0048\u006f\u0072\u007a":
			*_bdebe = 15
		case "\u006c\u0074\u0056\u0065\u0072\u0074":
			*_bdebe = 16
		case "\u0064\u006b\u0048\u006f\u0072\u007a":
			*_bdebe = 17
		case "\u0064\u006b\u0056\u0065\u0072\u0074":
			*_bdebe = 18
		case "\u006ea\u0072\u0048\u006f\u0072\u007a":
			*_bdebe = 19
		case "\u006ea\u0072\u0056\u0065\u0072\u0074":
			*_bdebe = 20
		case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
			*_bdebe = 21
		case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
			*_bdebe = 22
		case "\u0063\u0072\u006fs\u0073":
			*_bdebe = 23
		case "\u0064\u006e\u0044\u0069\u0061\u0067":
			*_bdebe = 24
		case "\u0075\u0070\u0044\u0069\u0061\u0067":
			*_bdebe = 25
		case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
			*_bdebe = 26
		case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
			*_bdebe = 27
		case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
			*_bdebe = 28
		case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
			*_bdebe = 29
		case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
			*_bdebe = 30
		case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
			*_bdebe = 31
		case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
			*_bdebe = 32
		case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
			*_bdebe = 33
		case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
			*_bdebe = 34
		case "\u0073m\u0043\u0068\u0065\u0063\u006b":
			*_bdebe = 35
		case "\u006cg\u0043\u0068\u0065\u0063\u006b":
			*_bdebe = 36
		case "\u0073\u006d\u0047\u0072\u0069\u0064":
			*_bdebe = 37
		case "\u006c\u0067\u0047\u0072\u0069\u0064":
			*_bdebe = 38
		case "\u0064o\u0074\u0047\u0072\u0069\u0064":
			*_bdebe = 39
		case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_bdebe = 40
		case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_bdebe = 41
		case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
			*_bdebe = 42
		case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
			*_bdebe = 43
		case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
			*_bdebe = 44
		case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
			*_bdebe = 45
		case "\u0064o\u0074\u0044\u006d\u006e\u0064":
			*_bdebe = 46
		case "\u0070\u006c\u0061i\u0064":
			*_bdebe = 47
		case "\u0073\u0070\u0068\u0065\u0072\u0065":
			*_bdebe = 48
		case "\u0077\u0065\u0061v\u0065":
			*_bdebe = 49
		case "\u0064\u0069\u0076o\u0074":
			*_bdebe = 50
		case "\u0073h\u0069\u006e\u0067\u006c\u0065":
			*_bdebe = 51
		case "\u0077\u0061\u0076\u0065":
			*_bdebe = 52
		case "\u0074r\u0065\u006c\u006c\u0069\u0073":
			*_bdebe = 53
		case "\u007a\u0069\u0067\u005a\u0061\u0067":
			*_bdebe = 54
		}
	}
	_dacgag, _dacgb = d.Token()
	if _dacgb != nil {
		return _dacgb
	}
	if _gdddc, _febaf := _dacgag.(_g.EndElement); _febaf && _gdddc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dacgag)
}

func (_ffeag *CT_TableStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u0066"}, Value: _bb.Sprintf("\u0025\u0076", _ffeag.DefAttr)})
	e.EncodeToken(start)
	if _ffeag.TblStyle != nil {
		_dadgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}}
		for _, _efcd := range _ffeag.TblStyle {
			e.EncodeElement(_efcd, _dadgf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_egffdg *CT_WholeE2oFormatting) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egffdg.Ln != nil {
		_bacd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_egffdg.Ln, _bacd)
	}
	if _egffdg.EffectLst != nil {
		_eaefd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egffdg.EffectLst, _eaefd)
	}
	if _egffdg.EffectDag != nil {
		_accbf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_egffdg.EffectDag, _accbf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupFillProperties and its children
func (_dafggc *CT_GroupFillProperties) Validate() error {
	return _dafggc.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func NewCT_GraphicalObjectFrameLocking() *CT_GraphicalObjectFrameLocking {
	_ggcb := &CT_GraphicalObjectFrameLocking{}
	return _ggcb
}

type ST_TextVerticalType byte

func NewEG_ColorChoice() *EG_ColorChoice { _cffef := &EG_ColorChoice{}; return _cffef }

func (_baegfc *ST_BevelPresetType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dbeca, _dcega := d.Token()
	if _dcega != nil {
		return _dcega
	}
	if _cfcac, _eebbge := _dbeca.(_g.EndElement); _eebbge && _cfcac.Name == start.Name {
		*_baegfc = 1
		return nil
	}
	if _eccg, _gbeae := _dbeca.(_g.CharData); !_gbeae {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbeca)
	} else {
		switch string(_eccg) {
		case "":
			*_baegfc = 0
		case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
			*_baegfc = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_baegfc = 2
		case "\u0073\u006c\u006fp\u0065":
			*_baegfc = 3
		case "\u0063\u0072\u006fs\u0073":
			*_baegfc = 4
		case "\u0061\u006e\u0067l\u0065":
			*_baegfc = 5
		case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
			*_baegfc = 6
		case "\u0063\u006f\u006e\u0076\u0065\u0078":
			*_baegfc = 7
		case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
			*_baegfc = 8
		case "\u0064\u0069\u0076o\u0074":
			*_baegfc = 9
		case "\u0072\u0069\u0062\u006c\u0065\u0074":
			*_baegfc = 10
		case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
			*_baegfc = 11
		case "\u0061r\u0074\u0044\u0065\u0063\u006f":
			*_baegfc = 12
		}
	}
	_dbeca, _dcega = d.Token()
	if _dcega != nil {
		return _dcega
	}
	if _ffcfb, _aaffb := _dbeca.(_g.EndElement); _aaffb && _ffcfb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbeca)
}

func (_gcaedf ST_AnimationBuildType) ValidateWithPath(path string) error {
	switch _gcaedf {
	case 0, 1:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcaedf))
	}
	return nil
}

func NewCT_LineEndProperties() *CT_LineEndProperties { _cbbb := &CT_LineEndProperties{}; return _cbbb }

func (_ggecca ST_TextTabAlignType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ggecca.String(), start)
}

func ParseUnionST_AnimationChartBuildType(s string) (ST_AnimationChartBuildType, error) {
	_faece := ST_AnimationChartBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_faece.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		_faece.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeries
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		_faece.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategory
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		_faece.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeriesEl
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		_faece.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategoryEl
	}
	return _faece, nil
}

func (_beed *CT_BaseStyles) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_beed.ClrScheme = NewCT_ColorScheme()
	_beed.FontScheme = NewCT_FontScheme()
	_beed.FmtScheme = NewCT_StyleMatrix()
_cff:
	for {
		_eacd, _dfa := d.Token()
		if _dfa != nil {
			return _dfa
		}
		switch _bdgd := _eacd.(type) {
		case _g.StartElement:
			switch _bdgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _dgae := d.DecodeElement(_beed.ClrScheme, &_bdgd); _dgae != nil {
					return _dgae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				if _cde := d.DecodeElement(_beed.FontScheme, &_bdgd); _cde != nil {
					return _cde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				if _adcg := d.DecodeElement(_beed.FmtScheme, &_bdgd); _adcg != nil {
					return _adcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_beed.ExtLst = NewCT_OfficeArtExtensionList()
				if _adbe := d.DecodeElement(_beed.ExtLst, &_bdgd); _adbe != nil {
					return _adbe
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _bdgd.Name)
				if _adga := d.Skip(); _adga != nil {
					return _adga
				}
			}
		case _g.EndElement:
			break _cff
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TintEffect and its children, prefixing error messages with path
func (_dbeae *CT_TintEffect) ValidateWithPath(path string) error {
	if _dbeae.HueAttr != nil {
		if *_dbeae.HueAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dbeae.HueAttr)
		}
		if *_dbeae.HueAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dbeae.HueAttr)
		}
	}
	if _dbeae.AmtAttr != nil {
		if _eegdaa := _dbeae.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _eegdaa != nil {
			return _eegdaa
		}
	}
	return nil
}

func (_fcfae ST_PresetShadowVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fcfae.String(), start)
}

func (_ffcbb *EG_Geometry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ecbge:
	for {
		_cfdbg, _decaa := d.Token()
		if _decaa != nil {
			return _decaa
		}
		switch _ccddg := _cfdbg.(type) {
		case _g.StartElement:
			switch _ccddg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_ffcbb.CustGeom = NewCT_CustomGeometry2D()
				if _dfebg := d.DecodeElement(_ffcbb.CustGeom, &_ccddg); _dfebg != nil {
					return _dfebg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_ffcbb.PrstGeom = NewCT_PresetGeometry2D()
				if _adcea := d.DecodeElement(_ffcbb.PrstGeom, &_ccddg); _adcea != nil {
					return _adcea
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _ccddg.Name)
				if _badaf := d.Skip(); _badaf != nil {
					return _badaf
				}
			}
		case _g.EndElement:
			break _ecbge
		case _g.CharData:
		}
	}
	return nil
}

func (_eccff ST_LineEndWidth) String() string {
	switch _eccff {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}

func (_dfbegd ST_FixedPercentage) String() string {
	if _dfbegd.ST_FixedPercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_dfbegd.ST_FixedPercentageDecimal)
	}
	if _dfbegd.ST_FixedPercentage != nil {
		return _dfbegd.ST_FixedPercentage.String()
	}
	return ""
}

func (_ffeb ST_AdjCoordinate) String() string {
	if _ffeb.ST_Coordinate != nil {
		return _ffeb.ST_Coordinate.String()
	}
	if _ffeb.ST_GeomGuideName != nil {
		return _bb.Sprintf("\u0025\u0076", *_ffeb.ST_GeomGuideName)
	}
	return ""
}

// Validate validates the AG_Blob and its children
func (_e *AG_Blob) Validate() error {
	return _e.ValidateWithPath("\u0041G\u005f\u0042\u006c\u006f\u0062")
}

func (_efggcb ST_PresetShadowVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gddeec := _g.Attr{}
	_gddeec.Name = name
	switch _efggcb {
	case ST_PresetShadowValUnset:
		_gddeec.Value = ""
	case ST_PresetShadowValShdw1:
		_gddeec.Value = "\u0073\u0068\u0064w\u0031"
	case ST_PresetShadowValShdw2:
		_gddeec.Value = "\u0073\u0068\u0064w\u0032"
	case ST_PresetShadowValShdw3:
		_gddeec.Value = "\u0073\u0068\u0064w\u0033"
	case ST_PresetShadowValShdw4:
		_gddeec.Value = "\u0073\u0068\u0064w\u0034"
	case ST_PresetShadowValShdw5:
		_gddeec.Value = "\u0073\u0068\u0064w\u0035"
	case ST_PresetShadowValShdw6:
		_gddeec.Value = "\u0073\u0068\u0064w\u0036"
	case ST_PresetShadowValShdw7:
		_gddeec.Value = "\u0073\u0068\u0064w\u0037"
	case ST_PresetShadowValShdw8:
		_gddeec.Value = "\u0073\u0068\u0064w\u0038"
	case ST_PresetShadowValShdw9:
		_gddeec.Value = "\u0073\u0068\u0064w\u0039"
	case ST_PresetShadowValShdw10:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0030"
	case ST_PresetShadowValShdw11:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0031"
	case ST_PresetShadowValShdw12:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0032"
	case ST_PresetShadowValShdw13:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0033"
	case ST_PresetShadowValShdw14:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0034"
	case ST_PresetShadowValShdw15:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0035"
	case ST_PresetShadowValShdw16:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0036"
	case ST_PresetShadowValShdw17:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0037"
	case ST_PresetShadowValShdw18:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0038"
	case ST_PresetShadowValShdw19:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0031\u0039"
	case ST_PresetShadowValShdw20:
		_gddeec.Value = "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return _gddeec, nil
}

func (_caaaef ST_AnimationBuildType) Validate() error { return _caaaef.ValidateWithPath("") }

type CT_GvmlTextShape struct {
	TxBody *CT_TextBody
	Choice *CT_GvmlTextShapeChoice
	ExtLst *CT_OfficeArtExtensionList
}

func (_efaag *CT_TextBulletColorFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fbbac *CT_Hyperlink) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fdbe := range start.Attr {
		if _fdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fdbe.Name.Local == "\u0069\u0064" || _fdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fdbe.Name.Local == "\u0069\u0064" {
			_gffef, _dgag := _fdbe.Value, error(nil)
			if _dgag != nil {
				return _dgag
			}
			_fbbac.IdAttr = &_gffef
			continue
		}
		if _fdbe.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c" {
			_fedcb, _ffggb := _fdbe.Value, error(nil)
			if _ffggb != nil {
				return _ffggb
			}
			_fbbac.InvalidUrlAttr = &_fedcb
			continue
		}
		if _fdbe.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_cafaf, _degc := _fdbe.Value, error(nil)
			if _degc != nil {
				return _degc
			}
			_fbbac.ActionAttr = &_cafaf
			continue
		}
		if _fdbe.Name.Local == "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065" {
			_eaedb, _ffab := _fdbe.Value, error(nil)
			if _ffab != nil {
				return _ffab
			}
			_fbbac.TgtFrameAttr = &_eaedb
			continue
		}
		if _fdbe.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_cbcaf, _bcdba := _fdbe.Value, error(nil)
			if _bcdba != nil {
				return _bcdba
			}
			_fbbac.TooltipAttr = &_cbcaf
			continue
		}
		if _fdbe.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_fdeef, _ggef := _fg.ParseBool(_fdbe.Value)
			if _ggef != nil {
				return _ggef
			}
			_fbbac.HistoryAttr = &_fdeef
			continue
		}
		if _fdbe.Name.Local == "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b" {
			_cadbe, _bdbag := _fg.ParseBool(_fdbe.Value)
			if _bdbag != nil {
				return _bdbag
			}
			_fbbac.HighlightClickAttr = &_cadbe
			continue
		}
		if _fdbe.Name.Local == "\u0065\u006e\u0064\u0053\u006e\u0064" {
			_cadg, _dgec := _fg.ParseBool(_fdbe.Value)
			if _dgec != nil {
				return _dgec
			}
			_fbbac.EndSndAttr = &_cadg
			continue
		}
	}
_efbbf:
	for {
		_daddd, _bafcb := d.Token()
		if _bafcb != nil {
			return _bafcb
		}
		switch _ggagdc := _daddd.(type) {
		case _g.StartElement:
			switch _ggagdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				_fbbac.Snd = NewCT_EmbeddedWAVAudioFile()
				if _ggdae := d.DecodeElement(_fbbac.Snd, &_ggagdc); _ggdae != nil {
					return _ggdae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbbac.ExtLst = NewCT_OfficeArtExtensionList()
				if _ffdf := d.DecodeElement(_fbbac.ExtLst, &_ggagdc); _ffdf != nil {
					return _ffdf
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_H\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u0020\u0025\u0076", _ggagdc.Name)
				if _aadff := d.Skip(); _aadff != nil {
					return _aadff
				}
			}
		case _g.EndElement:
			break _efbbf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WholeE2oFormatting and its children, prefixing error messages with path
func (_fgcgc *CT_WholeE2oFormatting) ValidateWithPath(path string) error {
	if _fgcgc.Ln != nil {
		if _dccda := _fgcgc.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _dccda != nil {
			return _dccda
		}
	}
	if _fgcgc.EffectLst != nil {
		if _baaa := _fgcgc.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _baaa != nil {
			return _baaa
		}
	}
	if _fgcgc.EffectDag != nil {
		if _abeba := _fgcgc.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _abeba != nil {
			return _abeba
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontReference and its children, prefixing error messages with path
func (_eaaed *CT_FontReference) ValidateWithPath(path string) error {
	if _eaaed.IdxAttr == ST_FontCollectionIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fI\u0064\u0078\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _defa := _eaaed.IdxAttr.ValidateWithPath(path + "\u002f\u0049\u0064\u0078\u0041\u0074\u0074\u0072"); _defa != nil {
		return _defa
	}
	if _eaaed.ScrgbClr != nil {
		if _daeba := _eaaed.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _daeba != nil {
			return _daeba
		}
	}
	if _eaaed.SrgbClr != nil {
		if _bcffc := _eaaed.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bcffc != nil {
			return _bcffc
		}
	}
	if _eaaed.HslClr != nil {
		if _adgag := _eaaed.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _adgag != nil {
			return _adgag
		}
	}
	if _eaaed.SysClr != nil {
		if _fccbe := _eaaed.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fccbe != nil {
			return _fccbe
		}
	}
	if _eaaed.SchemeClr != nil {
		if _ceeg := _eaaed.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ceeg != nil {
			return _ceeg
		}
	}
	if _eaaed.PrstClr != nil {
		if _ggdda := _eaaed.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ggdda != nil {
			return _ggdda
		}
	}
	return nil
}

func (_aafdc *CT_TextUnderlineFillGroupWrapper) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aafdc.NoFill != nil {
		_cdbce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafdc.NoFill, _cdbce)
	}
	if _aafdc.SolidFill != nil {
		_cbcdc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafdc.SolidFill, _cbcdc)
	}
	if _aafdc.GradFill != nil {
		_gagade := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafdc.GradFill, _gagade)
	}
	if _aafdc.BlipFill != nil {
		_gbaed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafdc.BlipFill, _gbaed)
	}
	if _aafdc.PattFill != nil {
		_ebade := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafdc.PattFill, _ebade)
	}
	if _aafdc.GrpFill != nil {
		_eacc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_aafdc.GrpFill, _eacc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DashStopList and its children
func (_fgge *CT_DashStopList) Validate() error {
	return _fgge.ValidateWithPath("\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}

func (_edcg *CT_Point3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _edcg.XAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _edcg.YAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a"}, Value: _bb.Sprintf("\u0025\u0076", _edcg.ZAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Path2D and its children, prefixing error messages with path
func (_gbgcb *CT_Path2D) ValidateWithPath(path string) error {
	if _gbgcb.WAttr != nil {
		if *_gbgcb.WAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gbgcb.WAttr)
		}
		if *_gbgcb.WAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gbgcb.WAttr)
		}
	}
	if _gbgcb.HAttr != nil {
		if *_gbgcb.HAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gbgcb.HAttr)
		}
		if *_gbgcb.HAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gbgcb.HAttr)
		}
	}
	if _aada := _gbgcb.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _aada != nil {
		return _aada
	}
	for _defd, _cada := range _gbgcb.Close {
		if _edabd := _cada.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fC\u006c\u006f\u0073\u0065\u005b\u0025\u0064\u005d", path, _defd)); _edabd != nil {
			return _edabd
		}
	}
	for _ffcfge, _ggdg := range _gbgcb.MoveTo {
		if _dggad := _ggdg.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u004d\u006f\u0076\u0065\u0054\u006f\u005b\u0025\u0064\u005d", path, _ffcfge)); _dggad != nil {
			return _dggad
		}
	}
	for _debe, _cagg := range _gbgcb.LnTo {
		if _cdebf := _cagg.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u004c\u006e\u0054\u006f\u005b\u0025\u0064\u005d", path, _debe)); _cdebf != nil {
			return _cdebf
		}
	}
	for _ffae, _eadd := range _gbgcb.ArcTo {
		if _cbac := _eadd.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fA\u0072\u0063\u0054\u006f\u005b\u0025\u0064\u005d", path, _ffae)); _cbac != nil {
			return _cbac
		}
	}
	for _fggab, _feac := range _gbgcb.QuadBezTo {
		if _fdgca := _feac.ValidateWithPath(_bb.Sprintf("\u0025\u0073/\u0051\u0075\u0061d\u0042\u0065\u007a\u0054\u006f\u005b\u0025\u0064\u005d", path, _fggab)); _fdgca != nil {
			return _fdgca
		}
	}
	for _dbedf, _ffffc := range _gbgcb.CubicBezTo {
		if _edaeb := _ffffc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054o\u005b\u0025\u0064\u005d", path, _dbedf)); _edaeb != nil {
			return _edaeb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorScheme and its children, prefixing error messages with path
func (_cbcgc *CT_ColorScheme) ValidateWithPath(path string) error {
	if _fcbe := _cbcgc.Dk1.ValidateWithPath(path + "\u002f\u0044\u006b\u0031"); _fcbe != nil {
		return _fcbe
	}
	if _dgbad := _cbcgc.Lt1.ValidateWithPath(path + "\u002f\u004c\u0074\u0031"); _dgbad != nil {
		return _dgbad
	}
	if _edec := _cbcgc.Dk2.ValidateWithPath(path + "\u002f\u0044\u006b\u0032"); _edec != nil {
		return _edec
	}
	if _cbeb := _cbcgc.Lt2.ValidateWithPath(path + "\u002f\u004c\u0074\u0032"); _cbeb != nil {
		return _cbeb
	}
	if _eggae := _cbcgc.Accent1.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0031"); _eggae != nil {
		return _eggae
	}
	if _ffbf := _cbcgc.Accent2.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0032"); _ffbf != nil {
		return _ffbf
	}
	if _egec := _cbcgc.Accent3.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0033"); _egec != nil {
		return _egec
	}
	if _bfec := _cbcgc.Accent4.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0034"); _bfec != nil {
		return _bfec
	}
	if _eagf := _cbcgc.Accent5.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0035"); _eagf != nil {
		return _eagf
	}
	if _dcaca := _cbcgc.Accent6.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0036"); _dcaca != nil {
		return _dcaca
	}
	if _geef := _cbcgc.Hlink.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b"); _geef != nil {
		return _geef
	}
	if _bedd := _cbcgc.FolHlink.ValidateWithPath(path + "\u002fF\u006f\u006c\u0048\u006c\u0069\u006ek"); _bedd != nil {
		return _bedd
	}
	if _cbcgc.ExtLst != nil {
		if _cagd := _cbcgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cagd != nil {
			return _cagd
		}
	}
	return nil
}

func (_gbdgd *CT_ObjectStyleDefaults) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ecfbg:
	for {
		_geecb, _gcab := d.Token()
		if _gcab != nil {
			return _gcab
		}
		switch _afad := _geecb.(type) {
		case _g.StartElement:
			switch _afad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}:
				_gbdgd.SpDef = NewCT_DefaultShapeDefinition()
				if _gggb := d.DecodeElement(_gbdgd.SpDef, &_afad); _gggb != nil {
					return _gggb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}:
				_gbdgd.LnDef = NewCT_DefaultShapeDefinition()
				if _dabgd := d.DecodeElement(_gbdgd.LnDef, &_afad); _dabgd != nil {
					return _dabgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}:
				_gbdgd.TxDef = NewCT_DefaultShapeDefinition()
				if _edfdd := d.DecodeElement(_gbdgd.TxDef, &_afad); _edfdd != nil {
					return _edfdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbdgd.ExtLst = NewCT_OfficeArtExtensionList()
				if _degbc := d.DecodeElement(_gbdgd.ExtLst, &_afad); _degbc != nil {
					return _degbc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004f\u0062\u006a\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073\u0020\u0025\u0076", _afad.Name)
				if _bafe := d.Skip(); _bafe != nil {
					return _bafe
				}
			}
		case _g.EndElement:
			break _ecfbg
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableProperties and its children, prefixing error messages with path
func (_agadfb *CT_TableProperties) ValidateWithPath(path string) error {
	if _agadfb.NoFill != nil {
		if _cbgbg := _agadfb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cbgbg != nil {
			return _cbgbg
		}
	}
	if _agadfb.SolidFill != nil {
		if _bffbe := _agadfb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _bffbe != nil {
			return _bffbe
		}
	}
	if _agadfb.GradFill != nil {
		if _bdeee := _agadfb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _bdeee != nil {
			return _bdeee
		}
	}
	if _agadfb.BlipFill != nil {
		if _gdbdcf := _agadfb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gdbdcf != nil {
			return _gdbdcf
		}
	}
	if _agadfb.PattFill != nil {
		if _feedd := _agadfb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _feedd != nil {
			return _feedd
		}
	}
	if _agadfb.GrpFill != nil {
		if _abfec := _agadfb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _abfec != nil {
			return _abfec
		}
	}
	if _agadfb.EffectLst != nil {
		if _egacc := _agadfb.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _egacc != nil {
			return _egacc
		}
	}
	if _agadfb.EffectDag != nil {
		if _gffad := _agadfb.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _gffad != nil {
			return _gffad
		}
	}
	if _agadfb.Choice != nil {
		if _ecgad := _agadfb.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _ecgad != nil {
			return _ecgad
		}
	}
	if _agadfb.ExtLst != nil {
		if _eebcd := _agadfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eebcd != nil {
			return _eebcd
		}
	}
	return nil
}

func (_cdegd *ST_SystemColorVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgcac, _dadabf := d.Token()
	if _dadabf != nil {
		return _dadabf
	}
	if _eabde, _fedg := _cgcac.(_g.EndElement); _fedg && _eabde.Name == start.Name {
		*_cdegd = 1
		return nil
	}
	if _effdfe, _gdbgb := _cgcac.(_g.CharData); !_gdbgb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgcac)
	} else {
		switch string(_effdfe) {
		case "":
			*_cdegd = 0
		case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
			*_cdegd = 1
		case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
			*_cdegd = 2
		case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdegd = 3
		case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdegd = 4
		case "\u006d\u0065\u006e\u0075":
			*_cdegd = 5
		case "\u0077\u0069\u006e\u0064\u006f\u0077":
			*_cdegd = 6
		case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
			*_cdegd = 7
		case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
			*_cdegd = 8
		case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
			*_cdegd = 9
		case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_cdegd = 10
		case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
			*_cdegd = 11
		case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
			*_cdegd = 12
		case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
			*_cdegd = 13
		case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
			*_cdegd = 14
		case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
			*_cdegd = 15
		case "\u0062t\u006e\u0046\u0061\u0063\u0065":
			*_cdegd = 16
		case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
			*_cdegd = 17
		case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
			*_cdegd = 18
		case "\u0062t\u006e\u0054\u0065\u0078\u0074":
			*_cdegd = 19
		case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_cdegd = 20
		case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_cdegd = 21
		case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
			*_cdegd = 22
		case "\u0033d\u004c\u0069\u0067\u0068\u0074":
			*_cdegd = 23
		case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
			*_cdegd = 24
		case "\u0069\u006e\u0066\u006f\u0042\u006b":
			*_cdegd = 25
		case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
			*_cdegd = 26
		case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdegd = 27
		case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdegd = 28
		case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_cdegd = 29
		case "\u006de\u006e\u0075\u0042\u0061\u0072":
			*_cdegd = 30
		}
	}
	_cgcac, _dadabf = d.Token()
	if _dadabf != nil {
		return _dadabf
	}
	if _dcegd, _bbgaf := _cgcac.(_g.EndElement); _bbgaf && _dcegd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgcac)
}

func (_gfgce *CT_RegularTextRun) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gcaae:
	for {
		_gfdce, _adbced := d.Token()
		if _adbced != nil {
			return _adbced
		}
		switch _dfcce := _gfdce.(type) {
		case _g.StartElement:
			switch _dfcce.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_gfgce.RPr = NewCT_TextCharacterProperties()
				if _bgaec := d.DecodeElement(_gfgce.RPr, &_dfcce); _bgaec != nil {
					return _bgaec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _gcccf := d.DecodeElement(&_gfgce.T, &_dfcce); _gcccf != nil {
					return _gcccf
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _dfcce.Name)
				if _egadg := d.Skip(); _egadg != nil {
					return _egadg
				}
			}
		case _g.EndElement:
			break _gcaae
		case _g.CharData:
		}
	}
	return nil
}

func (_agcg *CT_Point2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eeabc := range start.Attr {
		if _eeabc.Name.Local == "\u0078" {
			_fgedd, _facgd := ParseUnionST_Coordinate(_eeabc.Value)
			if _facgd != nil {
				return _facgd
			}
			_agcg.XAttr = _fgedd
			continue
		}
		if _eeabc.Name.Local == "\u0079" {
			_egcg, _dffa := ParseUnionST_Coordinate(_eeabc.Value)
			if _dffa != nil {
				return _dffa
			}
			_agcg.YAttr = _egcg
			continue
		}
	}
	for {
		_cageg, _aebfec := d.Token()
		if _aebfec != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044\u003a\u0020%\u0073", _aebfec)
		}
		if _cgaeb, _bcgg := _cageg.(_g.EndElement); _bcgg && _cgaeb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GroupTransform2D and its children
func (_ccceb *CT_GroupTransform2D) Validate() error {
	return _ccceb.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044")
}

// Validate validates the CT_TableGrid and its children
func (_aaeda *CT_TableGrid) Validate() error {
	return _aaeda.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064")
}

type CT_TableCol struct {
	WAttr  ST_Coordinate
	ExtLst *CT_OfficeArtExtensionList
}

func (_eeabe ST_LineCap) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eeabb := _g.Attr{}
	_eeabb.Name = name
	switch _eeabe {
	case ST_LineCapUnset:
		_eeabb.Value = ""
	case ST_LineCapRnd:
		_eeabb.Value = "\u0072\u006e\u0064"
	case ST_LineCapSq:
		_eeabb.Value = "\u0073\u0071"
	case ST_LineCapFlat:
		_eeabb.Value = "\u0066\u006c\u0061\u0074"
	}
	return _eeabb, nil
}

// Validate validates the CT_EffectContainer and its children
func (_edgab *CT_EffectContainer) Validate() error {
	return _edgab.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072")
}

func (_bedag ST_LightRigType) ValidateWithPath(path string) error {
	switch _bedag {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bedag))
	}
	return nil
}

func (_cbbgce ST_LightRigDirection) ValidateWithPath(path string) error {
	switch _cbbgce {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbbgce))
	}
	return nil
}

type ST_PresetShadowVal byte

const (
	ST_SystemColorValUnset                   ST_SystemColorVal = 0
	ST_SystemColorValScrollBar               ST_SystemColorVal = 1
	ST_SystemColorValBackground              ST_SystemColorVal = 2
	ST_SystemColorValActiveCaption           ST_SystemColorVal = 3
	ST_SystemColorValInactiveCaption         ST_SystemColorVal = 4
	ST_SystemColorValMenu                    ST_SystemColorVal = 5
	ST_SystemColorValWindow                  ST_SystemColorVal = 6
	ST_SystemColorValWindowFrame             ST_SystemColorVal = 7
	ST_SystemColorValMenuText                ST_SystemColorVal = 8
	ST_SystemColorValWindowText              ST_SystemColorVal = 9
	ST_SystemColorValCaptionText             ST_SystemColorVal = 10
	ST_SystemColorValActiveBorder            ST_SystemColorVal = 11
	ST_SystemColorValInactiveBorder          ST_SystemColorVal = 12
	ST_SystemColorValAppWorkspace            ST_SystemColorVal = 13
	ST_SystemColorValHighlight               ST_SystemColorVal = 14
	ST_SystemColorValHighlightText           ST_SystemColorVal = 15
	ST_SystemColorValBtnFace                 ST_SystemColorVal = 16
	ST_SystemColorValBtnShadow               ST_SystemColorVal = 17
	ST_SystemColorValGrayText                ST_SystemColorVal = 18
	ST_SystemColorValBtnText                 ST_SystemColorVal = 19
	ST_SystemColorValInactiveCaptionText     ST_SystemColorVal = 20
	ST_SystemColorValBtnHighlight            ST_SystemColorVal = 21
	ST_SystemColorVal3dDkShadow              ST_SystemColorVal = 22
	ST_SystemColorVal3dLight                 ST_SystemColorVal = 23
	ST_SystemColorValInfoText                ST_SystemColorVal = 24
	ST_SystemColorValInfoBk                  ST_SystemColorVal = 25
	ST_SystemColorValHotLight                ST_SystemColorVal = 26
	ST_SystemColorValGradientActiveCaption   ST_SystemColorVal = 27
	ST_SystemColorValGradientInactiveCaption ST_SystemColorVal = 28
	ST_SystemColorValMenuHighlight           ST_SystemColorVal = 29
	ST_SystemColorValMenuBar                 ST_SystemColorVal = 30
)

type ST_DgmBuildStep byte

// Validate validates the CT_TextNoAutofit and its children
func (_baffb *CT_TextNoAutofit) Validate() error {
	return _baffb.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}

func (_cded *CT_Table) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cded.TblPr != nil {
		_bdaf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0062\u006c\u0050\u0072"}}
		e.EncodeElement(_cded.TblPr, _bdaf)
	}
	_cgeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0062\u006c\u0047\u0072\u0069d"}}
	e.EncodeElement(_cded.TblGrid, _cgeb)
	if _cded.Tr != nil {
		_cdga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0072"}}
		for _, _efebf := range _cded.Tr {
			e.EncodeElement(_efebf, _cdga)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ffafg *ST_ChartBuildStep) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aadbdd, _gfbgf := d.Token()
	if _gfbgf != nil {
		return _gfbgf
	}
	if _bdefg, _fbgee := _aadbdd.(_g.EndElement); _fbgee && _bdefg.Name == start.Name {
		*_ffafg = 1
		return nil
	}
	if _fbdga, _dbbbd := _aadbdd.(_g.CharData); !_dbbbd {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aadbdd)
	} else {
		switch string(_fbdga) {
		case "":
			*_ffafg = 0
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_ffafg = 1
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_ffafg = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_ffafg = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_ffafg = 4
		case "\u0061\u006c\u006c\u0050\u0074\u0073":
			*_ffafg = 5
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_ffafg = 6
		}
	}
	_aadbdd, _gfbgf = d.Token()
	if _gfbgf != nil {
		return _gfbgf
	}
	if _dgecc, _dabab := _aadbdd.(_g.EndElement); _dabab && _dgecc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aadbdd)
}

func (_ccf *CT_AlphaCeilingEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_FillStyleList() *CT_FillStyleList { _fffba := &CT_FillStyleList{}; return _fffba }

func (_adac *ST_FontCollectionIndex) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_adac = 0
	case "\u006d\u0061\u006ao\u0072":
		*_adac = 1
	case "\u006d\u0069\u006eo\u0072":
		*_adac = 2
	case "\u006e\u006f\u006e\u0065":
		*_adac = 3
	}
	return nil
}

func NewCT_GroupShapeProperties() *CT_GroupShapeProperties {
	_eage := &CT_GroupShapeProperties{}
	return _eage
}

func (_dgcga *CT_TableGrid) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eegaf:
	for {
		_gcgba, _fggdaa := d.Token()
		if _fggdaa != nil {
			return _fggdaa
		}
		switch _fefgd := _gcgba.(type) {
		case _g.StartElement:
			switch _fefgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}:
				_gbaff := NewCT_TableCol()
				if _fdgdc := d.DecodeElement(_gbaff, &_fefgd); _fdgdc != nil {
					return _fdgdc
				}
				_dgcga.GridCol = append(_dgcga.GridCol, _gbaff)
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0047\u0072\u0069\u0064\u0020\u0025\u0076", _fefgd.Name)
				if _aacfb := d.Skip(); _aacfb != nil {
					return _aacfb
				}
			}
		case _g.EndElement:
			break _eegaf
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_XYAdjustHandle and its children
func (_adaafcg *CT_XYAdjustHandle) Validate() error {
	return _adaafcg.ValidateWithPath("\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065")
}

func (_cabcb ST_PresetColorVal) Validate() error { return _cabcb.ValidateWithPath("") }

func (_baefe *ST_CompoundLine) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gbdaef, _bdaae := d.Token()
	if _bdaae != nil {
		return _bdaae
	}
	if _becd, _befef := _gbdaef.(_g.EndElement); _befef && _becd.Name == start.Name {
		*_baefe = 1
		return nil
	}
	if _fdfbf, _gdggb := _gbdaef.(_g.CharData); !_gdggb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbdaef)
	} else {
		switch string(_fdfbf) {
		case "":
			*_baefe = 0
		case "\u0073\u006e\u0067":
			*_baefe = 1
		case "\u0064\u0062\u006c":
			*_baefe = 2
		case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
			*_baefe = 3
		case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
			*_baefe = 4
		case "\u0074\u0072\u0069":
			*_baefe = 5
		}
	}
	_gbdaef, _bdaae = d.Token()
	if _bdaae != nil {
		return _bdaae
	}
	if _edead, _afccad := _gbdaef.(_g.EndElement); _afccad && _edead.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbdaef)
}

func NewCT_TableCellProperties() *CT_TableCellProperties {
	_fgedg := &CT_TableCellProperties{}
	return _fgedg
}

// Validate validates the CT_Backdrop and its children
func (_fded *CT_Backdrop) Validate() error {
	return _fded.ValidateWithPath("C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070")
}

func (_ffgg *CT_GradientStopList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gddee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0073"}}
	for _, _ebcdc := range _ffgg.Gs {
		e.EncodeElement(_ebcdc, _gddee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_adaafc *CT_Ratio) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aecdf := range start.Attr {
		if _aecdf.Name.Local == "\u006e" {
			_dddd, _bcfee := _fg.ParseInt(_aecdf.Value, 10, 64)
			if _bcfee != nil {
				return _bcfee
			}
			_adaafc.NAttr = _dddd
			continue
		}
		if _aecdf.Name.Local == "\u0064" {
			_fdfc, _ddbb := _fg.ParseInt(_aecdf.Value, 10, 64)
			if _ddbb != nil {
				return _ddbb
			}
			_adaafc.DAttr = _fdfc
			continue
		}
	}
	for {
		_cgdaf, _deef := d.Token()
		if _deef != nil {
			return _bb.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fR\u0061\u0074\u0069\u006f: \u0025\u0073", _deef)
		}
		if _gccd, _dacedg := _cgdaf.(_g.EndElement); _dacedg && _gccd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TableRow() *CT_TableRow { _gbacf := &CT_TableRow{}; return _gbacf }

func NewCT_ConnectionSiteList() *CT_ConnectionSiteList {
	_fbad := &CT_ConnectionSiteList{}
	return _fbad
}

// ValidateWithPath validates the CT_QuickTimeFile and its children, prefixing error messages with path
func (_bedege *CT_QuickTimeFile) ValidateWithPath(path string) error {
	if _bedege.ExtLst != nil {
		if _gaga := _bedege.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gaga != nil {
			return _gaga
		}
	}
	return nil
}

// Validate validates the CT_DashStop and its children
func (_cfdbaf *CT_DashStop) Validate() error {
	return _cfdbaf.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070")
}

type CT_InnerShadowEffect struct {
	BlurRadAttr *int64
	DistAttr    *int64
	DirAttr     *int32
	ScrgbClr    *CT_ScRgbColor
	SrgbClr     *CT_SRgbColor
	HslClr      *CT_HslColor
	SysClr      *CT_SystemColor
	SchemeClr   *CT_SchemeColor
	PrstClr     *CT_PresetColor
}

type ST_PresetLineDashVal byte

func (_bgbg *CT_LightRig) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgbg.RigAttr = ST_LightRigType(1)
	_bgbg.DirAttr = ST_LightRigDirection(1)
	for _, _fdge := range start.Attr {
		if _fdge.Name.Local == "\u0072\u0069\u0067" {
			_bgbg.RigAttr.UnmarshalXMLAttr(_fdge)
			continue
		}
		if _fdge.Name.Local == "\u0064\u0069\u0072" {
			_bgbg.DirAttr.UnmarshalXMLAttr(_fdge)
			continue
		}
	}
_cgdae:
	for {
		_dgaac, _cgfb := d.Token()
		if _cgfb != nil {
			return _cgfb
		}
		switch _ddcgf := _dgaac.(type) {
		case _g.StartElement:
			switch _ddcgf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_bgbg.Rot = NewCT_SphereCoords()
				if _faedd := d.DecodeElement(_bgbg.Rot, &_ddcgf); _faedd != nil {
					return _faedd
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067\u0020\u0025\u0076", _ddcgf.Name)
				if _ffgaa := d.Skip(); _ffgaa != nil {
					return _ffgaa
				}
			}
		case _g.EndElement:
			break _cgdae
		case _g.CharData:
		}
	}
	return nil
}

func (_bafbb *CT_GradientFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bfbf := range start.Attr {
		if _bfbf.Name.Local == "\u0066\u006c\u0069\u0070" {
			_bafbb.FlipAttr.UnmarshalXMLAttr(_bfbf)
			continue
		}
		if _bfbf.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_fgcag, _abbb := _fg.ParseBool(_bfbf.Value)
			if _abbb != nil {
				return _abbb
			}
			_bafbb.RotWithShapeAttr = &_fgcag
			continue
		}
	}
_aggd:
	for {
		_cbga, _eacae := d.Token()
		if _eacae != nil {
			return _eacae
		}
		switch _cgfc := _cbga.(type) {
		case _g.StartElement:
			switch _cgfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}:
				_bafbb.GsLst = NewCT_GradientStopList()
				if _dcaeg := d.DecodeElement(_bafbb.GsLst, &_cgfc); _dcaeg != nil {
					return _dcaeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_bafbb.Lin = NewCT_LinearShadeProperties()
				if _ccfc := d.DecodeElement(_bafbb.Lin, &_cgfc); _ccfc != nil {
					return _ccfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_bafbb.Path = NewCT_PathShadeProperties()
				if _caeff := d.DecodeElement(_bafbb.Path, &_cgfc); _caeff != nil {
					return _caeff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}:
				_bafbb.TileRect = NewCT_RelativeRect()
				if _gebg := d.DecodeElement(_bafbb.TileRect, &_cgfc); _gebg != nil {
					return _gebg
				}
			default:
				_fc.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074F\u0069l\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _cgfc.Name)
				if _fabdd := d.Skip(); _fabdd != nil {
					return _fabdd
				}
			}
		case _g.EndElement:
			break _aggd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableRow and its children
func (_bgadg *CT_TableRow) Validate() error {
	return _bgadg.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077")
}

func (_bgacd *CT_SystemColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_agecd, _aedd := _bgacd.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
	if _aedd != nil {
		return _aedd
	}
	start.Attr = append(start.Attr, _agecd)
	if _bgacd.LastClrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006ca\u0073\u0074\u0043\u006c\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_bgacd.LastClrAttr)})
	}
	e.EncodeToken(start)
	if _bgacd.EG_ColorTransform != nil {
		for _, _dgee := range _bgacd.EG_ColorTransform {
			_dgee.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BlipChoice and its children
func (_cbca *CT_BlipChoice) Validate() error {
	return _cbca.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065")
}

type CT_HSLEffect struct {
	HueAttr *int32
	SatAttr *ST_FixedPercentage
	LumAttr *ST_FixedPercentage
}

func (_adbfa *ST_AnimationDgmOnlyBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_feadg, _bcbggd := d.Token()
	if _bcbggd != nil {
		return _bcbggd
	}
	if _egeaaf, _afdee := _feadg.(_g.EndElement); _afdee && _egeaaf.Name == start.Name {
		*_adbfa = 1
		return nil
	}
	if _cbgaa, _agbbd := _feadg.(_g.CharData); !_agbbd {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feadg)
	} else {
		switch string(_cbgaa) {
		case "":
			*_adbfa = 0
		case "\u006f\u006e\u0065":
			*_adbfa = 1
		case "\u006c\u0076\u006c\u004f\u006e\u0065":
			*_adbfa = 2
		case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_adbfa = 3
		}
	}
	_feadg, _bcbggd = d.Token()
	if _bcbggd != nil {
		return _bcbggd
	}
	if _ddaecb, _bgbeae := _feadg.(_g.EndElement); _bgbeae && _ddaecb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feadg)
}

// ValidateWithPath validates the CT_ShapeLocking and its children, prefixing error messages with path
func (_gcgdb *CT_ShapeLocking) ValidateWithPath(path string) error {
	if _gcgdb.ExtLst != nil {
		if _fgfdc := _gcgdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgfdc != nil {
			return _fgfdc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextNoBullet and its children, prefixing error messages with path
func (_febca *CT_TextNoBullet) ValidateWithPath(path string) error { return nil }

func (_gageg *EG_LineJoinProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gageg.Round != nil {
		_ffdbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_gageg.Round, _ffdbb)
	}
	if _gageg.Bevel != nil {
		_agabb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_gageg.Bevel, _agabb)
	}
	if _gageg.Miter != nil {
		_edcba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_gageg.Miter, _edcba)
	}
	return nil
}

type CT_DuotoneEffect struct{ EG_ColorChoice []*EG_ColorChoice }

// Validate validates the CT_AnimationElementChoice and its children
func (_cbeg *CT_AnimationElementChoice) Validate() error {
	return _cbeg.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e")
}

func (_abgac *CT_NonVisualDrawingProps) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aafgc := range start.Attr {
		if _aafgc.Name.Local == "\u0069\u0064" {
			_ccae, _gecg := _fg.ParseUint(_aafgc.Value, 10, 32)
			if _gecg != nil {
				return _gecg
			}
			_abgac.IdAttr = uint32(_ccae)
			continue
		}
		if _aafgc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dfecd, _ffada := _aafgc.Value, error(nil)
			if _ffada != nil {
				return _ffada
			}
			_abgac.NameAttr = _dfecd
			continue
		}
		if _aafgc.Name.Local == "\u0064\u0065\u0073c\u0072" {
			_gaaf, _bedeg := _aafgc.Value, error(nil)
			if _bedeg != nil {
				return _bedeg
			}
			_abgac.DescrAttr = &_gaaf
			continue
		}
		if _aafgc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_fefba, _aeffc := _fg.ParseBool(_aafgc.Value)
			if _aeffc != nil {
				return _aeffc
			}
			_abgac.HiddenAttr = &_fefba
			continue
		}
		if _aafgc.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_cbgge, _fefbf := _aafgc.Value, error(nil)
			if _fefbf != nil {
				return _fefbf
			}
			_abgac.TitleAttr = &_cbgge
			continue
		}
	}
_gafa:
	for {
		_gdgcc, _ddgdd := d.Token()
		if _ddgdd != nil {
			return _ddgdd
		}
		switch _dfef := _gdgcc.(type) {
		case _g.StartElement:
			switch _dfef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_abgac.HlinkClick = NewCT_Hyperlink()
				if _caebc := d.DecodeElement(_abgac.HlinkClick, &_dfef); _caebc != nil {
					return _caebc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}:
				_abgac.HlinkHover = NewCT_Hyperlink()
				if _acbec := d.DecodeElement(_abgac.HlinkHover, &_dfef); _acbec != nil {
					return _acbec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abgac.ExtLst = NewCT_OfficeArtExtensionList()
				if _dfgf := d.DecodeElement(_abgac.ExtLst, &_dfef); _dfgf != nil {
					return _dfgf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067P\u0072\u006f\u0070\u0073\u0020%\u0076", _dfef.Name)
				if _bfag := d.Skip(); _bfag != nil {
					return _bfag
				}
			}
		case _g.EndElement:
			break _gafa
		case _g.CharData:
		}
	}
	return nil
}

func (_fecagg ST_PresetPatternVal) String() string {
	switch _fecagg {
	case 0:
		return ""
	case 1:
		return "\u0070\u0063\u0074\u0035"
	case 2:
		return "\u0070\u0063\u00741\u0030"
	case 3:
		return "\u0070\u0063\u00742\u0030"
	case 4:
		return "\u0070\u0063\u00742\u0035"
	case 5:
		return "\u0070\u0063\u00743\u0030"
	case 6:
		return "\u0070\u0063\u00744\u0030"
	case 7:
		return "\u0070\u0063\u00745\u0030"
	case 8:
		return "\u0070\u0063\u00746\u0030"
	case 9:
		return "\u0070\u0063\u00747\u0030"
	case 10:
		return "\u0070\u0063\u00747\u0035"
	case 11:
		return "\u0070\u0063\u00748\u0030"
	case 12:
		return "\u0070\u0063\u00749\u0030"
	case 13:
		return "\u0068\u006f\u0072\u007a"
	case 14:
		return "\u0076\u0065\u0072\u0074"
	case 15:
		return "\u006c\u0074\u0048\u006f\u0072\u007a"
	case 16:
		return "\u006c\u0074\u0056\u0065\u0072\u0074"
	case 17:
		return "\u0064\u006b\u0048\u006f\u0072\u007a"
	case 18:
		return "\u0064\u006b\u0056\u0065\u0072\u0074"
	case 19:
		return "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case 20:
		return "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case 21:
		return "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case 22:
		return "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case 23:
		return "\u0063\u0072\u006fs\u0073"
	case 24:
		return "\u0064\u006e\u0044\u0069\u0061\u0067"
	case 25:
		return "\u0075\u0070\u0044\u0069\u0061\u0067"
	case 26:
		return "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case 27:
		return "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case 28:
		return "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case 29:
		return "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case 30:
		return "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case 31:
		return "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case 32:
		return "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case 33:
		return "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case 34:
		return "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case 35:
		return "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case 36:
		return "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case 37:
		return "\u0073\u006d\u0047\u0072\u0069\u0064"
	case 38:
		return "\u006c\u0067\u0047\u0072\u0069\u0064"
	case 39:
		return "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case 40:
		return "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 41:
		return "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 42:
		return "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case 43:
		return "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case 44:
		return "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case 45:
		return "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case 46:
		return "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case 47:
		return "\u0070\u006c\u0061i\u0064"
	case 48:
		return "\u0073\u0070\u0068\u0065\u0072\u0065"
	case 49:
		return "\u0077\u0065\u0061v\u0065"
	case 50:
		return "\u0064\u0069\u0076o\u0074"
	case 51:
		return "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case 52:
		return "\u0077\u0061\u0076\u0065"
	case 53:
		return "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case 54:
		return "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return ""
}

func (_decba *ST_LineCap) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_decba = 0
	case "\u0072\u006e\u0064":
		*_decba = 1
	case "\u0073\u0071":
		*_decba = 2
	case "\u0066\u006c\u0061\u0074":
		*_decba = 3
	}
	return nil
}

func (_cebcde *EG_TextBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cfgcb:
	for {
		_edbgc, _fddge := d.Token()
		if _fddge != nil {
			return _fddge
		}
		switch _ebefea := _edbgc.(type) {
		case _g.StartElement:
			switch _ebefea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_cebcde.BuNone = NewCT_TextNoBullet()
				if _deabf := d.DecodeElement(_cebcde.BuNone, &_ebefea); _deabf != nil {
					return _deabf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_cebcde.BuAutoNum = NewCT_TextAutonumberBullet()
				if _feda := d.DecodeElement(_cebcde.BuAutoNum, &_ebefea); _feda != nil {
					return _feda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_cebcde.BuChar = NewCT_TextCharBullet()
				if _facdg := d.DecodeElement(_cebcde.BuChar, &_ebefea); _facdg != nil {
					return _facdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_cebcde.BuBlip = NewCT_TextBlipBullet()
				if _efccf := d.DecodeElement(_cebcde.BuBlip, &_ebefea); _efccf != nil {
					return _efccf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074 \u0025\u0076", _ebefea.Name)
				if _fggfa := d.Skip(); _fggfa != nil {
					return _fggfa
				}
			}
		case _g.EndElement:
			break _cfgcb
		case _g.CharData:
		}
	}
	return nil
}

func (_gdag *CT_ColorMappingOverride) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdag.Choice = NewCT_ColorMappingOverrideChoice()
_agcd:
	for {
		_gcdd, _efdgc := d.Token()
		if _efdgc != nil {
			return _efdgc
		}
		switch _dffb := _gcdd.(type) {
		case _g.StartElement:
			switch _dffb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_gdag.Choice = NewCT_ColorMappingOverrideChoice()
				if _cbgb := d.DecodeElement(&_gdag.Choice.MasterClrMapping, &_dffb); _cbgb != nil {
					return _cbgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_gdag.Choice = NewCT_ColorMappingOverrideChoice()
				if _edfd := d.DecodeElement(&_gdag.Choice.OverrideClrMapping, &_dffb); _edfd != nil {
					return _edfd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070i\u006e\u0067\u004f\u0076\u0065\u0072r\u0069\u0064\u0065 \u0025\u0076", _dffb.Name)
				if _bdfe := d.Skip(); _bdfe != nil {
					return _bdfe
				}
			}
		case _g.EndElement:
			break _agcd
		case _g.CharData:
		}
	}
	return nil
}

func (_edaaf *ST_BlendMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_edaaf = 0
	case "\u006f\u0076\u0065\u0072":
		*_edaaf = 1
	case "\u006d\u0075\u006c\u0074":
		*_edaaf = 2
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_edaaf = 3
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_edaaf = 4
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_edaaf = 5
	}
	return nil
}

// Validate validates the CT_EmptyElement and its children
func (_bedcc *CT_EmptyElement) Validate() error {
	return _bedcc.ValidateWithPath("\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

func (_cacgc *CT_Hyperlink) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cacgc.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_cacgc.IdAttr)})
	}
	if _cacgc.InvalidUrlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_cacgc.InvalidUrlAttr)})
	}
	if _cacgc.ActionAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_cacgc.ActionAttr)})
	}
	if _cacgc.TgtFrameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_cacgc.TgtFrameAttr)})
	}
	if _cacgc.TooltipAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _bb.Sprintf("\u0025\u0076", *_cacgc.TooltipAttr)})
	}
	if _cacgc.HistoryAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cacgc.HistoryAttr))})
	}
	if _cacgc.HighlightClickAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cacgc.HighlightClickAttr))})
	}
	if _cacgc.EndSndAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cacgc.EndSndAttr))})
	}
	e.EncodeToken(start)
	if _cacgc.Snd != nil {
		_bbcac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073n\u0064"}}
		e.EncodeElement(_cacgc.Snd, _bbcac)
	}
	if _cacgc.ExtLst != nil {
		_caeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cacgc.ExtLst, _caeg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eacaee *CT_ReflectionEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cdfff := range start.Attr {
		if _cdfff.Name.Local == "\u0066a\u0064\u0065\u0044\u0069\u0072" {
			_ceffg, _bdcc := _fg.ParseInt(_cdfff.Value, 10, 32)
			if _bdcc != nil {
				return _bdcc
			}
			_cffff := int32(_ceffg)
			_eacaee.FadeDirAttr = &_cffff
			continue
		}
		if _cdfff.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_ebdff, _afdaa := _fg.ParseInt(_cdfff.Value, 10, 64)
			if _afdaa != nil {
				return _afdaa
			}
			_eacaee.BlurRadAttr = &_ebdff
			continue
		}
		if _cdfff.Name.Local == "\u0073\u0074\u0050o\u0073" {
			_ceeb, _gdacf := ParseUnionST_PositiveFixedPercentage(_cdfff.Value)
			if _gdacf != nil {
				return _gdacf
			}
			_eacaee.StPosAttr = &_ceeb
			continue
		}
		if _cdfff.Name.Local == "\u0065\u006e\u0064\u0041" {
			_fffeg, _eeabg := ParseUnionST_PositiveFixedPercentage(_cdfff.Value)
			if _eeabg != nil {
				return _eeabg
			}
			_eacaee.EndAAttr = &_fffeg
			continue
		}
		if _cdfff.Name.Local == "\u0065\u006e\u0064\u0050\u006f\u0073" {
			_ecdef, _ggecde := ParseUnionST_PositiveFixedPercentage(_cdfff.Value)
			if _ggecde != nil {
				return _ggecde
			}
			_eacaee.EndPosAttr = &_ecdef
			continue
		}
		if _cdfff.Name.Local == "\u0064\u0069\u0073\u0074" {
			_acgcg, _cfeg := _fg.ParseInt(_cdfff.Value, 10, 64)
			if _cfeg != nil {
				return _cfeg
			}
			_eacaee.DistAttr = &_acgcg
			continue
		}
		if _cdfff.Name.Local == "\u0064\u0069\u0072" {
			_fdde, _cfecd := _fg.ParseInt(_cdfff.Value, 10, 32)
			if _cfecd != nil {
				return _cfecd
			}
			_babcc := int32(_fdde)
			_eacaee.DirAttr = &_babcc
			continue
		}
		if _cdfff.Name.Local == "\u0073\u0074\u0041" {
			_gggbg, _dafca := ParseUnionST_PositiveFixedPercentage(_cdfff.Value)
			if _dafca != nil {
				return _dafca
			}
			_eacaee.StAAttr = &_gggbg
			continue
		}
		if _cdfff.Name.Local == "\u0073\u0078" {
			_bbded, _bbdfg := ParseUnionST_Percentage(_cdfff.Value)
			if _bbdfg != nil {
				return _bbdfg
			}
			_eacaee.SxAttr = &_bbded
			continue
		}
		if _cdfff.Name.Local == "\u0073\u0079" {
			_acebe, _aafe := ParseUnionST_Percentage(_cdfff.Value)
			if _aafe != nil {
				return _aafe
			}
			_eacaee.SyAttr = &_acebe
			continue
		}
		if _cdfff.Name.Local == "\u006b\u0078" {
			_bgbagf, _fbaee := _fg.ParseInt(_cdfff.Value, 10, 32)
			if _fbaee != nil {
				return _fbaee
			}
			_efecb := int32(_bgbagf)
			_eacaee.KxAttr = &_efecb
			continue
		}
		if _cdfff.Name.Local == "\u006b\u0079" {
			_aagad, _fddbf := _fg.ParseInt(_cdfff.Value, 10, 32)
			if _fddbf != nil {
				return _fddbf
			}
			_bgbbf := int32(_aagad)
			_eacaee.KyAttr = &_bgbbf
			continue
		}
		if _cdfff.Name.Local == "\u0061\u006c\u0067\u006e" {
			_eacaee.AlgnAttr.UnmarshalXMLAttr(_cdfff)
			continue
		}
		if _cdfff.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_cggaa, _addeb := _fg.ParseBool(_cdfff.Value)
			if _addeb != nil {
				return _addeb
			}
			_eacaee.RotWithShapeAttr = &_cggaa
			continue
		}
	}
	for {
		_abda, _dgagb := d.Token()
		if _dgagb != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0066\u006c\u0065c\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _dgagb)
		}
		if _ecdad, _gcce := _abda.(_g.EndElement); _gcce && _ecdad.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ShapeStyle() *CT_ShapeStyle {
	_fgeec := &CT_ShapeStyle{}
	_fgeec.LnRef = NewCT_StyleMatrixReference()
	_fgeec.FillRef = NewCT_StyleMatrixReference()
	_fgeec.EffectRef = NewCT_StyleMatrixReference()
	_fgeec.FontRef = NewCT_FontReference()
	return _fgeec
}

type CT_Shape3D struct {
	ZAttr            *ST_Coordinate
	ExtrusionHAttr   *int64
	ContourWAttr     *int64
	PrstMaterialAttr ST_PresetMaterialType
	BevelT           *CT_Bevel
	BevelB           *CT_Bevel
	ExtrusionClr     *CT_Color
	ContourClr       *CT_Color
	ExtLst           *CT_OfficeArtExtensionList
}

type ST_CompoundLine byte

func NewCT_LineStyleList() *CT_LineStyleList { _ebda := &CT_LineStyleList{}; return _ebda }

type CT_NoFillProperties struct{}

type CT_GvmlPictureNonVisual struct {
	CNvPr    *CT_NonVisualDrawingProps
	CNvPicPr *CT_NonVisualPictureProperties
}

func (_ddfge *ST_TextAnchoringType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fbadd, _gggg := d.Token()
	if _gggg != nil {
		return _gggg
	}
	if _ebgda, _egfbe := _fbadd.(_g.EndElement); _egfbe && _ebgda.Name == start.Name {
		*_ddfge = 1
		return nil
	}
	if _dfccb, _cgfag := _fbadd.(_g.CharData); !_cgfag {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbadd)
	} else {
		switch string(_dfccb) {
		case "":
			*_ddfge = 0
		case "\u0074":
			*_ddfge = 1
		case "\u0063\u0074\u0072":
			*_ddfge = 2
		case "\u0062":
			*_ddfge = 3
		case "\u006a\u0075\u0073\u0074":
			*_ddfge = 4
		case "\u0064\u0069\u0073\u0074":
			*_ddfge = 5
		}
	}
	_fbadd, _gggg = d.Token()
	if _gggg != nil {
		return _gggg
	}
	if _bccfad, _efbcc := _fbadd.(_g.EndElement); _efbcc && _bccfad.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbadd)
}

func (_eefa *CT_FontCollection) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aecd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
	e.EncodeElement(_eefa.Latin, _aecd)
	_bddb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0061"}}
	e.EncodeElement(_eefa.Ea, _bddb)
	_egddb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0073"}}
	e.EncodeElement(_eefa.Cs, _egddb)
	if _eefa.Font != nil {
		_cebcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		for _, _babd := range _eefa.Font {
			e.EncodeElement(_babd, _cebcd)
		}
	}
	if _eefa.ExtLst != nil {
		_beafa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eefa.ExtLst, _beafa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_BackgroundFormatting() *CT_BackgroundFormatting {
	_cea := &CT_BackgroundFormatting{}
	return _cea
}

func (_ebfdf ST_TextAnchoringType) Validate() error { return _ebfdf.ValidateWithPath("") }

type CT_DefaultShapeDefinition struct {
	SpPr     *CT_ShapeProperties
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

func (_bg *AG_Blob) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ad := range start.Attr {
		if _ad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ad.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_ae, _aa := _ad.Value, error(nil)
			if _aa != nil {
				return _aa
			}
			_bg.EmbedAttr = &_ae
			continue
		}
		if _ad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ad.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ab, _df := _ad.Value, error(nil)
			if _df != nil {
				return _df
			}
			_bg.LinkAttr = &_ab
			continue
		}
	}
	for {
		_aaa, _ge := d.Token()
		if _ge != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0042\u006c\u006f\u0062\u003a\u0020\u0025\u0073", _ge)
		}
		if _de, _dc := _aaa.(_g.EndElement); _dc && _de.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bbdg *CT_Path2DQuadBezierTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aeadf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _cdfaa := range _bbdg.Pt {
		e.EncodeElement(_cdfaa, _aeadf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ReflectionEffect and its children
func (_afgab *CT_ReflectionEffect) Validate() error {
	return _afgab.ValidateWithPath("\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074")
}

func NewCT_GvmlPicture() *CT_GvmlPicture {
	_agdgbe := &CT_GvmlPicture{}
	_agdgbe.NvPicPr = NewCT_GvmlPictureNonVisual()
	_agdgbe.BlipFill = NewCT_BlipFillProperties()
	_agdgbe.SpPr = NewCT_ShapeProperties()
	return _agdgbe
}

// ValidateWithPath validates the CT_PictureLocking and its children, prefixing error messages with path
func (_ffda *CT_PictureLocking) ValidateWithPath(path string) error {
	if _ffda.ExtLst != nil {
		if _cgedg := _ffda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgedg != nil {
			return _cgedg
		}
	}
	return nil
}

func NewCT_TextNoBullet() *CT_TextNoBullet { _gceg := &CT_TextNoBullet{}; return _gceg }

type CT_AlphaBiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

// Validate validates the CT_TablePropertiesChoice and its children
func (_egadf *CT_TablePropertiesChoice) Validate() error {
	return _egadf.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_adc *Blip) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0062\u006c\u0069\u0070"
	return _adc.CT_Blip.MarshalXML(e, start)
}

func NewCT_TextBulletSizePoint() *CT_TextBulletSizePoint {
	_dgfad := &CT_TextBulletSizePoint{}
	_dgfad.ValAttr = 100
	return _dgfad
}

func (_cegfd *CT_GvmlUseShapeRectangle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_dfabd, _afeda := d.Token()
		if _afeda != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0047vml\u0055se\u0053\u0068\u0061\u0070\u0065\u0052\u0065ct\u0061\u006e\u0067\u006c\u0065\u003a\u0020%\u0073", _afeda)
		}
		if _efebc, _cabge := _dfabd.(_g.EndElement); _cabge && _efebc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PathShadeProperties and its children, prefixing error messages with path
func (_cfeab *CT_PathShadeProperties) ValidateWithPath(path string) error {
	if _gadgf := _cfeab.PathAttr.ValidateWithPath(path + "\u002fP\u0061\u0074\u0068\u0041\u0074\u0074r"); _gadgf != nil {
		return _gadgf
	}
	if _cfeab.FillToRect != nil {
		if _dfeaa := _cfeab.FillToRect.ValidateWithPath(path + "/\u0046\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"); _dfeaa != nil {
			return _dfeaa
		}
	}
	return nil
}

func (_daabb ST_LineEndLength) ValidateWithPath(path string) error {
	switch _daabb {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_daabb))
	}
	return nil
}

func (_bcbaf *CT_TextUnderlineLineFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_fbccf, _gbbec := d.Token()
		if _gbbec != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _gbbec)
		}
		if _egcbc, _caaee := _fbccf.(_g.EndElement); _caaee && _egcbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ShapeLocking struct {
	NoTextEditAttr         *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_dgfgb ST_LineEndType) ValidateWithPath(path string) error {
	switch _dgfgb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgfgb))
	}
	return nil
}

func (_dece *CT_AlphaInverseEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dece.ScrgbClr != nil {
		_ebbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dece.ScrgbClr, _ebbc)
	}
	if _dece.SrgbClr != nil {
		_aag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dece.SrgbClr, _aag)
	}
	if _dece.HslClr != nil {
		_accf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dece.HslClr, _accf)
	}
	if _dece.SysClr != nil {
		_ffed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dece.SysClr, _ffed)
	}
	if _dece.SchemeClr != nil {
		_edge := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dece.SchemeClr, _edge)
	}
	if _dece.PrstClr != nil {
		_gdgb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dece.PrstClr, _gdgb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NoFillProperties and its children, prefixing error messages with path
func (_ffgc *CT_NoFillProperties) ValidateWithPath(path string) error { return nil }

func (_eeaa *ST_PresetColorVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eeaa = 0
	case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
		*_eeaa = 1
	case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
		*_eeaa = 2
	case "\u0061\u0071\u0075\u0061":
		*_eeaa = 3
	case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_eeaa = 4
	case "\u0061\u007a\u0075r\u0065":
		*_eeaa = 5
	case "\u0062\u0065\u0069g\u0065":
		*_eeaa = 6
	case "\u0062\u0069\u0073\u0071\u0075\u0065":
		*_eeaa = 7
	case "\u0062\u006c\u0061c\u006b":
		*_eeaa = 8
	case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
		*_eeaa = 9
	case "\u0062\u006c\u0075\u0065":
		*_eeaa = 10
	case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
		*_eeaa = 11
	case "\u0062\u0072\u006fw\u006e":
		*_eeaa = 12
	case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
		*_eeaa = 13
	case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
		*_eeaa = 14
	case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
		*_eeaa = 15
	case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
		*_eeaa = 16
	case "\u0063\u006f\u0072a\u006c":
		*_eeaa = 17
	case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
		*_eeaa = 18
	case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
		*_eeaa = 19
	case "\u0063r\u0069\u006d\u0073\u006f\u006e":
		*_eeaa = 20
	case "\u0063\u0079\u0061\u006e":
		*_eeaa = 21
	case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
		*_eeaa = 22
	case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
		*_eeaa = 23
	case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_eeaa = 24
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_eeaa = 25
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
		*_eeaa = 26
	case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
		*_eeaa = 27
	case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
		*_eeaa = 28
	case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
		*_eeaa = 29
	case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
		*_eeaa = 30
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_eeaa = 31
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_eeaa = 32
	case "\u0064a\u0072\u006b\u0052\u0065\u0064":
		*_eeaa = 33
	case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_eeaa = 34
	case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 35
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_eeaa = 36
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_eeaa = 37
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_eeaa = 38
	case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_eeaa = 39
	case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_eeaa = 40
	case "\u0064\u006b\u0042\u006c\u0075\u0065":
		*_eeaa = 41
	case "\u0064\u006b\u0043\u0079\u0061\u006e":
		*_eeaa = 42
	case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_eeaa = 43
	case "\u0064\u006b\u0047\u0072\u0061\u0079":
		*_eeaa = 44
	case "\u0064\u006b\u0047\u0072\u0065\u0079":
		*_eeaa = 45
	case "\u0064k\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 46
	case "\u0064k\u004b\u0068\u0061\u006b\u0069":
		*_eeaa = 47
	case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
		*_eeaa = 48
	case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 49
	case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_eeaa = 50
	case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_eeaa = 51
	case "\u0064\u006b\u0052e\u0064":
		*_eeaa = 52
	case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_eeaa = 53
	case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 54
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_eeaa = 55
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_eeaa = 56
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_eeaa = 57
	case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_eeaa = 58
	case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_eeaa = 59
	case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
		*_eeaa = 60
	case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_eeaa = 61
	case "\u0064i\u006d\u0047\u0072\u0061\u0079":
		*_eeaa = 62
	case "\u0064i\u006d\u0047\u0072\u0065\u0079":
		*_eeaa = 63
	case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
		*_eeaa = 64
	case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
		*_eeaa = 65
	case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
		*_eeaa = 66
	case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 67
	case "\u0066u\u0063\u0068\u0073\u0069\u0061":
		*_eeaa = 68
	case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
		*_eeaa = 69
	case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
		*_eeaa = 70
	case "\u0067\u006f\u006c\u0064":
		*_eeaa = 71
	case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
		*_eeaa = 72
	case "\u0067\u0072\u0061\u0079":
		*_eeaa = 73
	case "\u0067\u0072\u0065\u0079":
		*_eeaa = 74
	case "\u0067\u0072\u0065e\u006e":
		*_eeaa = 75
	case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
		*_eeaa = 76
	case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
		*_eeaa = 77
	case "\u0068o\u0074\u0050\u0069\u006e\u006b":
		*_eeaa = 78
	case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
		*_eeaa = 79
	case "\u0069\u006e\u0064\u0069\u0067\u006f":
		*_eeaa = 80
	case "\u0069\u0076\u006fr\u0079":
		*_eeaa = 81
	case "\u006b\u0068\u0061k\u0069":
		*_eeaa = 82
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
		*_eeaa = 83
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
		*_eeaa = 84
	case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
		*_eeaa = 85
	case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
		*_eeaa = 86
	case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
		*_eeaa = 87
	case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
		*_eeaa = 88
	case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
		*_eeaa = 89
	case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
		*_eeaa = 90
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_eeaa = 91
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
		*_eeaa = 92
	case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 93
	case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
		*_eeaa = 94
	case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_eeaa = 95
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 96
	case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_eeaa = 97
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
		*_eeaa = 98
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
		*_eeaa = 99
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
		*_eeaa = 100
	case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_eeaa = 101
	case "\u006c\u0074\u0042\u006c\u0075\u0065":
		*_eeaa = 102
	case "\u006ct\u0043\u006f\u0072\u0061\u006c":
		*_eeaa = 103
	case "\u006c\u0074\u0043\u0079\u0061\u006e":
		*_eeaa = 104
	case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
		*_eeaa = 105
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_eeaa = 106
	case "\u006c\u0074\u0047\u0072\u0065\u0079":
		*_eeaa = 107
	case "\u006ct\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 108
	case "\u006c\u0074\u0050\u0069\u006e\u006b":
		*_eeaa = 109
	case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_eeaa = 110
	case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 111
	case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
		*_eeaa = 112
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_eeaa = 113
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_eeaa = 114
	case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
		*_eeaa = 115
	case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_eeaa = 116
	case "\u006c\u0069\u006d\u0065":
		*_eeaa = 117
	case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
		*_eeaa = 118
	case "\u006c\u0069\u006ee\u006e":
		*_eeaa = 119
	case "\u006da\u0067\u0065\u006e\u0074\u0061":
		*_eeaa = 120
	case "\u006d\u0061\u0072\u006f\u006f\u006e":
		*_eeaa = 121
	case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_eeaa = 122
	case "\u006de\u0064\u0042\u006c\u0075\u0065":
		*_eeaa = 123
	case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
		*_eeaa = 124
	case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
		*_eeaa = 125
	case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 126
	case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_eeaa = 127
	case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_eeaa = 128
	case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_eeaa = 129
	case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_eeaa = 130
	case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_eeaa = 131
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
		*_eeaa = 132
	case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
		*_eeaa = 133
	case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
		*_eeaa = 134
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
		*_eeaa = 135
	case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_eeaa = 136
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_eeaa = 137
	case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_eeaa = 138
	case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_eeaa = 139
	case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
		*_eeaa = 140
	case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
		*_eeaa = 141
	case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
		*_eeaa = 142
	case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
		*_eeaa = 143
	case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
		*_eeaa = 144
	case "\u006e\u0061\u0076\u0079":
		*_eeaa = 145
	case "\u006fl\u0064\u004c\u0061\u0063\u0065":
		*_eeaa = 146
	case "\u006f\u006c\u0069v\u0065":
		*_eeaa = 147
	case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
		*_eeaa = 148
	case "\u006f\u0072\u0061\u006e\u0067\u0065":
		*_eeaa = 149
	case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
		*_eeaa = 150
	case "\u006f\u0072\u0063\u0068\u0069\u0064":
		*_eeaa = 151
	case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_eeaa = 152
	case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
		*_eeaa = 153
	case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_eeaa = 154
	case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_eeaa = 155
	case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
		*_eeaa = 156
	case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
		*_eeaa = 157
	case "\u0070\u0065\u0072\u0075":
		*_eeaa = 158
	case "\u0070\u0069\u006e\u006b":
		*_eeaa = 159
	case "\u0070\u006c\u0075\u006d":
		*_eeaa = 160
	case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
		*_eeaa = 161
	case "\u0070\u0075\u0072\u0070\u006c\u0065":
		*_eeaa = 162
	case "\u0072\u0065\u0064":
		*_eeaa = 163
	case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
		*_eeaa = 164
	case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
		*_eeaa = 165
	case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
		*_eeaa = 166
	case "\u0073\u0061\u006c\u006d\u006f\u006e":
		*_eeaa = 167
	case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
		*_eeaa = 168
	case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 169
	case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
		*_eeaa = 170
	case "\u0073\u0069\u0065\u006e\u006e\u0061":
		*_eeaa = 171
	case "\u0073\u0069\u006c\u0076\u0065\u0072":
		*_eeaa = 172
	case "\u0073k\u0079\u0042\u006c\u0075\u0065":
		*_eeaa = 173
	case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
		*_eeaa = 174
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
		*_eeaa = 175
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
		*_eeaa = 176
	case "\u0073\u006e\u006f\u0077":
		*_eeaa = 177
	case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 178
	case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
		*_eeaa = 179
	case "\u0074\u0061\u006e":
		*_eeaa = 180
	case "\u0074\u0065\u0061\u006c":
		*_eeaa = 181
	case "\u0074h\u0069\u0073\u0074\u006c\u0065":
		*_eeaa = 182
	case "\u0074\u006f\u006d\u0061\u0074\u006f":
		*_eeaa = 183
	case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
		*_eeaa = 184
	case "\u0076\u0069\u006f\u006c\u0065\u0074":
		*_eeaa = 185
	case "\u0077\u0068\u0065a\u0074":
		*_eeaa = 186
	case "\u0077\u0068\u0069t\u0065":
		*_eeaa = 187
	case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
		*_eeaa = 188
	case "\u0079\u0065\u006c\u006c\u006f\u0077":
		*_eeaa = 189
	case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
		*_eeaa = 190
	}
	return nil
}

// Validate validates the CT_AudioCDTime and its children
func (_dffec *CT_AudioCDTime) Validate() error {
	return _dffec.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065")
}

func (_dcgb *CT_ColorChangeEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dcgb.ClrFrom = NewCT_Color()
	_dcgb.ClrTo = NewCT_Color()
	for _, _cagc := range start.Attr {
		if _cagc.Name.Local == "\u0075\u0073\u0065\u0041" {
			_gde, _cffa := _fg.ParseBool(_cagc.Value)
			if _cffa != nil {
				return _cffa
			}
			_dcgb.UseAAttr = &_gde
			continue
		}
	}
_ggae:
	for {
		_gfea, _bbb := d.Token()
		if _bbb != nil {
			return _bbb
		}
		switch _cbgca := _gfea.(type) {
		case _g.StartElement:
			switch _cbgca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}:
				if _efbf := d.DecodeElement(_dcgb.ClrFrom, &_cbgca); _efbf != nil {
					return _efbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}:
				if _gdbd := d.DecodeElement(_dcgb.ClrTo, &_cbgca); _gdbd != nil {
					return _gdbd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061\u006e\u0067\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cbgca.Name)
				if _dcb := d.Skip(); _dcb != nil {
					return _dcb
				}
			}
		case _g.EndElement:
			break _ggae
		case _g.CharData:
		}
	}
	return nil
}

type CT_TextNormalAutofit struct {
	FontScaleAttr      *ST_TextFontScalePercentOrPercentString
	LnSpcReductionAttr *ST_TextSpacingPercentOrPercentString
}

type CT_Table struct {
	TblPr   *CT_TableProperties
	TblGrid *CT_TableGrid
	Tr      []*CT_TableRow
}

func (_fecd *CT_ConnectionSite) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _fecd.AngAttr)})
	e.EncodeToken(start)
	_daag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_fecd.Pos, _daag)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_babfa *CT_Shape3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _babfa.ZAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_babfa.ZAttr)})
	}
	if _babfa.ExtrusionHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048"}, Value: _bb.Sprintf("\u0025\u0076", *_babfa.ExtrusionHAttr)})
	}
	if _babfa.ContourWAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057"}, Value: _bb.Sprintf("\u0025\u0076", *_babfa.ContourWAttr)})
	}
	if _babfa.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_cccb, _beecb := _babfa.PrstMaterialAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _beecb != nil {
			return _beecb
		}
		start.Attr = append(start.Attr, _cccb)
	}
	e.EncodeToken(start)
	if _babfa.BevelT != nil {
		_cdfaab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0054"}}
		e.EncodeElement(_babfa.BevelT, _cdfaab)
	}
	if _babfa.BevelB != nil {
		_dagdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0042"}}
		e.EncodeElement(_babfa.BevelB, _dagdb)
	}
	if _babfa.ExtrusionClr != nil {
		_dgdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u0072\u0075\u0073\u0069o\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_babfa.ExtrusionClr, _dgdc)
	}
	if _babfa.ContourClr != nil {
		_afede := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063o\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}}
		e.EncodeElement(_babfa.ContourClr, _afede)
	}
	if _babfa.ExtLst != nil {
		_bfcbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_babfa.ExtLst, _bfcbb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cegad ST_SchemeColorVal) String() string {
	switch _cegad {
	case 0:
		return ""
	case 1:
		return "\u0062\u0067\u0031"
	case 2:
		return "\u0074\u0078\u0031"
	case 3:
		return "\u0062\u0067\u0032"
	case 4:
		return "\u0074\u0078\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case 13:
		return "\u0070\u0068\u0043l\u0072"
	case 14:
		return "\u0064\u006b\u0031"
	case 15:
		return "\u006c\u0074\u0031"
	case 16:
		return "\u0064\u006b\u0032"
	case 17:
		return "\u006c\u0074\u0032"
	}
	return ""
}

func (_efeea *CT_EffectStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aaadd:
	for {
		_cdea, _gfcbd := d.Token()
		if _gfcbd != nil {
			return _gfcbd
		}
		switch _gffbb := _cdea.(type) {
		case _g.StartElement:
			switch _gffbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_adefcf := NewCT_EffectStyleItem()
				if _acafa := d.DecodeElement(_adefcf, &_gffbb); _acafa != nil {
					return _acafa
				}
				_efeea.EffectStyle = append(_efeea.EffectStyle, _adefcf)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gffbb.Name)
				if _dcbc := d.Skip(); _dcbc != nil {
					return _dcbc
				}
			}
		case _g.EndElement:
			break _aaadd
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_AlphaFloorEffect() *CT_AlphaFloorEffect { _dfb := &CT_AlphaFloorEffect{}; return _dfb }

// Validate validates the CT_PresetTextShape and its children
func (_fcag *CT_PresetTextShape) Validate() error {
	return _fcag.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065")
}

func (_efedg *EG_TextAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bgcgae:
	for {
		_adfad, _gfbgd := d.Token()
		if _gfbgd != nil {
			return _gfbgd
		}
		switch _bedbe := _adfad.(type) {
		case _g.StartElement:
			switch _bedbe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_efedg.NoAutofit = NewCT_TextNoAutofit()
				if _aabaef := d.DecodeElement(_efedg.NoAutofit, &_bedbe); _aabaef != nil {
					return _aabaef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_efedg.NormAutofit = NewCT_TextNormalAutofit()
				if _bgcad := d.DecodeElement(_efedg.NormAutofit, &_bedbe); _bgcad != nil {
					return _bgcad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_efedg.SpAutoFit = NewCT_TextShapeAutofit()
				if _eecffe := d.DecodeElement(_efedg.SpAutoFit, &_bedbe); _eecffe != nil {
					return _eecffe
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075\u0074o\u0066i\u0074\u0020\u0025\u0076", _bedbe.Name)
				if _cabdc := d.Skip(); _cabdc != nil {
					return _cabdc
				}
			}
		case _g.EndElement:
			break _bgcgae
		case _g.CharData:
		}
	}
	return nil
}

func (_fdda *CT_GvmlUseShapeRectangle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_PositiveSize2D() *CT_PositiveSize2D {
	_efag := &CT_PositiveSize2D{}
	_efag.CxAttr = 0
	_efag.CyAttr = 0
	return _efag
}

// ValidateWithPath validates the CT_TableBackgroundStyle and its children, prefixing error messages with path
func (_eeaca *CT_TableBackgroundStyle) ValidateWithPath(path string) error {
	if _eeaca.Fill != nil {
		if _gcdad := _eeaca.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _gcdad != nil {
			return _gcdad
		}
	}
	if _eeaca.FillRef != nil {
		if _geaca := _eeaca.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _geaca != nil {
			return _geaca
		}
	}
	if _eeaca.Effect != nil {
		if _babda := _eeaca.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _babda != nil {
			return _babda
		}
	}
	if _eeaca.EffectRef != nil {
		if _begfg := _eeaca.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _begfg != nil {
			return _begfg
		}
	}
	return nil
}

func (_baea *CT_GvmlTextShapeChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _baea.UseSpRect != nil {
		_ebcc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0075\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_baea.UseSpRect, _ebcc)
	}
	if _baea.Xfrm != nil {
		_efeeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_baea.Xfrm, _efeeb)
	}
	return nil
}

type CT_NonVisualPictureProperties struct {
	PreferRelativeResizeAttr *bool
	PicLocks                 *CT_PictureLocking
	ExtLst                   *CT_OfficeArtExtensionList
}

func (_bfecc ST_PathFillMode) ValidateWithPath(path string) error {
	switch _bfecc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfecc))
	}
	return nil
}

func (_cacaf *ST_AnimationChartOnlyBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aecga, _gaaabf := d.Token()
	if _gaaabf != nil {
		return _gaaabf
	}
	if _daddbd, _bggcf := _aecga.(_g.EndElement); _bggcf && _daddbd.Name == start.Name {
		*_cacaf = 1
		return nil
	}
	if _addaf, _cgfbg := _aecga.(_g.CharData); !_cgfbg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aecga)
	} else {
		switch string(_addaf) {
		case "":
			*_cacaf = 0
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_cacaf = 1
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_cacaf = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_cacaf = 3
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_cacaf = 4
		}
	}
	_aecga, _gaaabf = d.Token()
	if _gaaabf != nil {
		return _gaaabf
	}
	if _fadfd, _eafba := _aecga.(_g.EndElement); _eafba && _fadfd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aecga)
}

func (_afbd *CT_GvmlShapeNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_fcbag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_afbd.CNvPr, _fcbag)
	_daac := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_afbd.CNvSpPr, _daac)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlConnector and its children
func (_edeab *CT_GvmlConnector) Validate() error {
	return _edeab.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

type CT_TextAutonumberBullet struct {
	TypeAttr    ST_TextAutonumberScheme
	StartAtAttr *int32
}

func ParseUnionST_Percentage(s string) (ST_Percentage, error) {
	_fgagb := ST_Percentage{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_fgagb.ST_Percentage = &s
	} else {
		_ffcdgb, _cgaeg := _fg.ParseInt(s, 10, 64)
		if _cgaeg != nil {
			return _fgagb, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cgaeg)
		}
		_ecbbe := int32(_ffcdgb)
		_fgagb.ST_PercentageDecimal = &_ecbbe
	}
	return _fgagb, nil
}

func (_dgcb *CT_LineStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bfgcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
	for _, _ggde := range _dgcb.Ln {
		e.EncodeElement(_ggde, _bfgcb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fggegd ST_PitchFamily) Validate() error { return _fggegd.ValidateWithPath("") }

// Validate validates the CT_GvmlTextShape and its children
func (_fbfa *CT_GvmlTextShape) Validate() error {
	return _fbfa.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065")
}

func NewCT_FillProperties() *CT_FillProperties { _eegd := &CT_FillProperties{}; return _eegd }

func (_ccdf *CT_GraphicalObjectData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dbbb := range start.Attr {
		if _dbbb.Name.Local == "\u0075\u0072\u0069" {
			_debf, _gbf := _dbbb.Value, error(nil)
			if _gbf != nil {
				return _gbf
			}
			_ccdf.UriAttr = _debf
			continue
		}
	}
_cfac:
	for {
		_faffb, _fdbcb := d.Token()
		if _fdbcb != nil {
			return _fdbcb
		}
		switch _ffccf := _faffb.(type) {
		case _g.StartElement:
			switch _ffccf.Name {
			default:
				if _dfdde, _cggcb := _fc.CreateElement(_ffccf); _cggcb != nil {
					return _cggcb
				} else {
					if _bgag := d.DecodeElement(_dfdde, &_ffccf); _bgag != nil {
						return _bgag
					}
					_ccdf.Any = append(_ccdf.Any, _dfdde)
				}
			}
		case _g.EndElement:
			break _cfac
		case _g.CharData:
		}
	}
	return nil
}

type ST_LightRigDirection byte

func NewCT_TableProperties() *CT_TableProperties { _ceegf := &CT_TableProperties{}; return _ceegf }

// ValidateWithPath validates the CT_PositiveFixedAngle and its children, prefixing error messages with path
func (_aceec *CT_PositiveFixedAngle) ValidateWithPath(path string) error {
	if _aceec.ValAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _aceec.ValAttr)
	}
	if _aceec.ValAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eV\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _aceec.ValAttr)
	}
	return nil
}

type CT_AlphaFloorEffect struct{}

type CT_TextBulletColorFollowText struct{}

// ValidateWithPath validates the CT_TransformEffect and its children, prefixing error messages with path
func (_fcedd *CT_TransformEffect) ValidateWithPath(path string) error {
	if _fcedd.SxAttr != nil {
		if _cdgbb := _fcedd.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _cdgbb != nil {
			return _cdgbb
		}
	}
	if _fcedd.SyAttr != nil {
		if _edabcb := _fcedd.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _edabcb != nil {
			return _edabcb
		}
	}
	if _fcedd.KxAttr != nil {
		if *_fcedd.KxAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fcedd.KxAttr)
		}
		if *_fcedd.KxAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fcedd.KxAttr)
		}
	}
	if _fcedd.KyAttr != nil {
		if *_fcedd.KyAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fcedd.KyAttr)
		}
		if *_fcedd.KyAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fcedd.KyAttr)
		}
	}
	if _fcedd.TxAttr != nil {
		if _eadee := _fcedd.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _eadee != nil {
			return _eadee
		}
	}
	if _fcedd.TyAttr != nil {
		if _fceaa := _fcedd.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _fceaa != nil {
			return _fceaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Point2D and its children, prefixing error messages with path
func (_ddgbgf *CT_Point2D) ValidateWithPath(path string) error {
	if _gdge := _ddgbgf.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _gdge != nil {
		return _gdge
	}
	if _degeg := _ddgbgf.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _degeg != nil {
		return _degeg
	}
	return nil
}

func (_bbcbb ST_BlendMode) ValidateWithPath(path string) error {
	switch _bbcbb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbcbb))
	}
	return nil
}

func (_egab *CT_Cell3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _egab.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_bfca, _cacd := _egab.PrstMaterialAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _cacd != nil {
			return _cacd
		}
		start.Attr = append(start.Attr, _bfca)
	}
	e.EncodeToken(start)
	_fgfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
	e.EncodeElement(_egab.Bevel, _fgfe)
	if _egab.LightRig != nil {
		_ddeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
		e.EncodeElement(_egab.LightRig, _ddeg)
	}
	if _egab.ExtLst != nil {
		_dfbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egab.ExtLst, _dfbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ccbge ST_ShapeType) ValidateWithPath(path string) error {
	switch _ccbge {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccbge))
	}
	return nil
}

// ST_Coordinate32 is a union type
type ST_Coordinate32 struct {
	ST_Coordinate32Unqualified *int32
	ST_UniversalMeasure        *string
}

// ValidateWithPath validates the CT_ColorReplaceEffect and its children, prefixing error messages with path
func (_fbace *CT_ColorReplaceEffect) ValidateWithPath(path string) error {
	if _fbace.ScrgbClr != nil {
		if _aebe := _fbace.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _aebe != nil {
			return _aebe
		}
	}
	if _fbace.SrgbClr != nil {
		if _cdac := _fbace.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cdac != nil {
			return _cdac
		}
	}
	if _fbace.HslClr != nil {
		if _dgda := _fbace.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dgda != nil {
			return _dgda
		}
	}
	if _fbace.SysClr != nil {
		if _dadf := _fbace.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dadf != nil {
			return _dadf
		}
	}
	if _fbace.SchemeClr != nil {
		if _ggbbe := _fbace.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ggbbe != nil {
			return _ggbbe
		}
	}
	if _fbace.PrstClr != nil {
		if _cafb := _fbace.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _cafb != nil {
			return _cafb
		}
	}
	return nil
}

func NewCT_Camera() *CT_Camera {
	_abff := &CT_Camera{}
	_abff.PrstAttr = ST_PresetCameraType(1)
	return _abff
}

func (_eefef *CT_Table) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eefef.TblGrid = NewCT_TableGrid()
_bdfff:
	for {
		_bbgdd, _gacga := d.Token()
		if _gacga != nil {
			return _gacga
		}
		switch _gedfc := _bbgdd.(type) {
		case _g.StartElement:
			switch _gedfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_eefef.TblPr = NewCT_TableProperties()
				if _fdfec := d.DecodeElement(_eefef.TblPr, &_gedfc); _fdfec != nil {
					return _fdfec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _bcce := d.DecodeElement(_eefef.TblGrid, &_gedfc); _bcce != nil {
					return _bcce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_afbf := NewCT_TableRow()
				if _dgbfg := d.DecodeElement(_afbf, &_gedfc); _dgbfg != nil {
					return _dgbfg
				}
				_eefef.Tr = append(_eefef.Tr, _afbf)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _gedfc.Name)
				if _eagfd := d.Skip(); _eagfd != nil {
					return _eagfd
				}
			}
		case _g.EndElement:
			break _bdfff
		case _g.CharData:
		}
	}
	return nil
}

func (_ddedc *CT_OfficeArtExtensionList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bcffe:
	for {
		_gfgcg, _fgbg := d.Token()
		if _fgbg != nil {
			return _fgbg
		}
		switch _gbac := _gfgcg.(type) {
		case _g.StartElement:
			switch _gbac.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_cdbda := NewCT_OfficeArtExtension()
				if _baba := d.DecodeElement(_cdbda, &_gbac); _baba != nil {
					return _baba
				}
				_ddedc.Ext = append(_ddedc.Ext, _cdbda)
			default:
				_fc.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _gbac.Name)
				if _geace := d.Skip(); _geace != nil {
					return _geace
				}
			}
		case _g.EndElement:
			break _bcffe
		case _g.CharData:
		}
	}
	return nil
}

type CT_TableProperties struct {
	RtlAttr      *bool
	FirstRowAttr *bool
	FirstColAttr *bool
	LastRowAttr  *bool
	LastColAttr  *bool
	BandRowAttr  *bool
	BandColAttr  *bool
	NoFill       *CT_NoFillProperties
	SolidFill    *CT_SolidColorFillProperties
	GradFill     *CT_GradientFillProperties
	BlipFill     *CT_BlipFillProperties
	PattFill     *CT_PatternFillProperties
	GrpFill      *CT_GroupFillProperties
	EffectLst    *CT_EffectList
	EffectDag    *CT_EffectContainer
	Choice       *CT_TablePropertiesChoice
	ExtLst       *CT_OfficeArtExtensionList
}

func (_caacd *CT_GvmlPicture) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_caacd.NvPicPr = NewCT_GvmlPictureNonVisual()
	_caacd.BlipFill = NewCT_BlipFillProperties()
	_caacd.SpPr = NewCT_ShapeProperties()
_gcggd:
	for {
		_eggeda, _afcf := d.Token()
		if _afcf != nil {
			return _afcf
		}
		switch _afecf := _eggeda.(type) {
		case _g.StartElement:
			switch _afecf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _faebb := d.DecodeElement(_caacd.NvPicPr, &_afecf); _faebb != nil {
					return _faebb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _bcdg := d.DecodeElement(_caacd.BlipFill, &_afecf); _bcdg != nil {
					return _bcdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _aecad := d.DecodeElement(_caacd.SpPr, &_afecf); _aecad != nil {
					return _aecad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_caacd.Style = NewCT_ShapeStyle()
				if _cgade := d.DecodeElement(_caacd.Style, &_afecf); _cgade != nil {
					return _cgade
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caacd.ExtLst = NewCT_OfficeArtExtensionList()
				if _fdgfc := d.DecodeElement(_caacd.ExtLst, &_afecf); _fdgfc != nil {
					return _fdgfc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063t\u0075r\u0065\u0020\u0025\u0076", _afecf.Name)
				if _cgdda := d.Skip(); _cgdda != nil {
					return _cgdda
				}
			}
		case _g.EndElement:
			break _gcggd
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TableBackgroundStyle() *CT_TableBackgroundStyle {
	_efdaf := &CT_TableBackgroundStyle{}
	return _efdaf
}

func (_cac *CT_Backdrop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cac.Anchor = NewCT_Point3D()
	_cac.Norm = NewCT_Vector3D()
	_cac.Up = NewCT_Vector3D()
_bce:
	for {
		_cce, _aacb := d.Token()
		if _aacb != nil {
			return _aacb
		}
		switch _egdb := _cce.(type) {
		case _g.StartElement:
			switch _egdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _cgac := d.DecodeElement(_cac.Anchor, &_egdb); _cgac != nil {
					return _cgac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}:
				if _dbbe := d.DecodeElement(_cac.Norm, &_egdb); _dbbe != nil {
					return _dbbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}:
				if _eabe := d.DecodeElement(_cac.Up, &_egdb); _eabe != nil {
					return _eabe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cac.ExtLst = NewCT_OfficeArtExtensionList()
				if _ecb := d.DecodeElement(_cac.ExtLst, &_egdb); _ecb != nil {
					return _ecb
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070\u0020\u0025\u0076", _egdb.Name)
				if _cbae := d.Skip(); _cbae != nil {
					return _cbae
				}
			}
		case _g.EndElement:
			break _bce
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectionSiteList and its children, prefixing error messages with path
func (_dgbf *CT_ConnectionSiteList) ValidateWithPath(path string) error {
	for _gffa, _abeg := range _dgbf.Cxn {
		if _eagc := _abeg.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0078\u006e\u005b\u0025\u0064\u005d", path, _gffa)); _eagc != nil {
			return _eagc
		}
	}
	return nil
}

func ParseStdlibTime(s string) (_f.Time, error) { return _f.Time{}, nil }

// ValidateWithPath validates the CT_SchemeColor and its children, prefixing error messages with path
func (_bfcgf *CT_SchemeColor) ValidateWithPath(path string) error {
	if _bfcgf.ValAttr == ST_SchemeColorValUnset {
		return _bb.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _acfcd := _bfcgf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _acfcd != nil {
		return _acfcd
	}
	for _gebgf, _ecbcb := range _bfcgf.EG_ColorTransform {
		if _ceecbe := _ecbcb.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _gebgf)); _ceecbe != nil {
			return _ceecbe
		}
	}
	return nil
}

func (_fadfb ST_PenAlignment) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bfcgb := _g.Attr{}
	_bfcgb.Name = name
	switch _fadfb {
	case ST_PenAlignmentUnset:
		_bfcgb.Value = ""
	case ST_PenAlignmentCtr:
		_bfcgb.Value = "\u0063\u0074\u0072"
	case ST_PenAlignmentIn:
		_bfcgb.Value = "\u0069\u006e"
	}
	return _bfcgb, nil
}

func (_afec *CT_Camera) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_afec.PrstAttr = ST_PresetCameraType(1)
	for _, _cfee := range start.Attr {
		if _cfee.Name.Local == "\u0070\u0072\u0073\u0074" {
			_afec.PrstAttr.UnmarshalXMLAttr(_cfee)
			continue
		}
		if _cfee.Name.Local == "\u0066\u006f\u0076" {
			_gfbde, _eabf := _fg.ParseInt(_cfee.Value, 10, 32)
			if _eabf != nil {
				return _eabf
			}
			_gcaa := int32(_gfbde)
			_afec.FovAttr = &_gcaa
			continue
		}
		if _cfee.Name.Local == "\u007a\u006f\u006f\u006d" {
			_gfcb, _faga := ParseUnionST_PositivePercentage(_cfee.Value)
			if _faga != nil {
				return _faga
			}
			_afec.ZoomAttr = &_gfcb
			continue
		}
	}
_fagg:
	for {
		_cebg, _ccg := d.Token()
		if _ccg != nil {
			return _ccg
		}
		switch _feef := _cebg.(type) {
		case _g.StartElement:
			switch _feef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_afec.Rot = NewCT_SphereCoords()
				if _bfdg := d.DecodeElement(_afec.Rot, &_feef); _bfdg != nil {
					return _bfdg
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0061\u006de\u0072\u0061 \u0025\u0076", _feef.Name)
				if _caaf := d.Skip(); _caaf != nil {
					return _caaf
				}
			}
		case _g.EndElement:
			break _fagg
		case _g.CharData:
		}
	}
	return nil
}

func (_fgfca *ST_PresetPatternVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fgfca = 0
	case "\u0070\u0063\u0074\u0035":
		*_fgfca = 1
	case "\u0070\u0063\u00741\u0030":
		*_fgfca = 2
	case "\u0070\u0063\u00742\u0030":
		*_fgfca = 3
	case "\u0070\u0063\u00742\u0035":
		*_fgfca = 4
	case "\u0070\u0063\u00743\u0030":
		*_fgfca = 5
	case "\u0070\u0063\u00744\u0030":
		*_fgfca = 6
	case "\u0070\u0063\u00745\u0030":
		*_fgfca = 7
	case "\u0070\u0063\u00746\u0030":
		*_fgfca = 8
	case "\u0070\u0063\u00747\u0030":
		*_fgfca = 9
	case "\u0070\u0063\u00747\u0035":
		*_fgfca = 10
	case "\u0070\u0063\u00748\u0030":
		*_fgfca = 11
	case "\u0070\u0063\u00749\u0030":
		*_fgfca = 12
	case "\u0068\u006f\u0072\u007a":
		*_fgfca = 13
	case "\u0076\u0065\u0072\u0074":
		*_fgfca = 14
	case "\u006c\u0074\u0048\u006f\u0072\u007a":
		*_fgfca = 15
	case "\u006c\u0074\u0056\u0065\u0072\u0074":
		*_fgfca = 16
	case "\u0064\u006b\u0048\u006f\u0072\u007a":
		*_fgfca = 17
	case "\u0064\u006b\u0056\u0065\u0072\u0074":
		*_fgfca = 18
	case "\u006ea\u0072\u0048\u006f\u0072\u007a":
		*_fgfca = 19
	case "\u006ea\u0072\u0056\u0065\u0072\u0074":
		*_fgfca = 20
	case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
		*_fgfca = 21
	case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
		*_fgfca = 22
	case "\u0063\u0072\u006fs\u0073":
		*_fgfca = 23
	case "\u0064\u006e\u0044\u0069\u0061\u0067":
		*_fgfca = 24
	case "\u0075\u0070\u0044\u0069\u0061\u0067":
		*_fgfca = 25
	case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
		*_fgfca = 26
	case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
		*_fgfca = 27
	case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
		*_fgfca = 28
	case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
		*_fgfca = 29
	case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
		*_fgfca = 30
	case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
		*_fgfca = 31
	case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
		*_fgfca = 32
	case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
		*_fgfca = 33
	case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
		*_fgfca = 34
	case "\u0073m\u0043\u0068\u0065\u0063\u006b":
		*_fgfca = 35
	case "\u006cg\u0043\u0068\u0065\u0063\u006b":
		*_fgfca = 36
	case "\u0073\u006d\u0047\u0072\u0069\u0064":
		*_fgfca = 37
	case "\u006c\u0067\u0047\u0072\u0069\u0064":
		*_fgfca = 38
	case "\u0064o\u0074\u0047\u0072\u0069\u0064":
		*_fgfca = 39
	case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_fgfca = 40
	case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_fgfca = 41
	case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
		*_fgfca = 42
	case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
		*_fgfca = 43
	case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
		*_fgfca = 44
	case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
		*_fgfca = 45
	case "\u0064o\u0074\u0044\u006d\u006e\u0064":
		*_fgfca = 46
	case "\u0070\u006c\u0061i\u0064":
		*_fgfca = 47
	case "\u0073\u0070\u0068\u0065\u0072\u0065":
		*_fgfca = 48
	case "\u0077\u0065\u0061v\u0065":
		*_fgfca = 49
	case "\u0064\u0069\u0076o\u0074":
		*_fgfca = 50
	case "\u0073h\u0069\u006e\u0067\u006c\u0065":
		*_fgfca = 51
	case "\u0077\u0061\u0076\u0065":
		*_fgfca = 52
	case "\u0074r\u0065\u006c\u006c\u0069\u0073":
		*_fgfca = 53
	case "\u007a\u0069\u0067\u005a\u0061\u0067":
		*_fgfca = 54
	}
	return nil
}

func NewCT_Path2D() *CT_Path2D { _accba := &CT_Path2D{}; return _accba }

func NewCT_NonVisualContentPartProperties() *CT_NonVisualContentPartProperties {
	_begbce := &CT_NonVisualContentPartProperties{}
	return _begbce
}

type CT_Ratio struct {
	NAttr int64
	DAttr int64
}

func (_gbfee ST_BlackWhiteMode) Validate() error { return _gbfee.ValidateWithPath("") }

type CT_RegularTextRun struct {
	RPr *CT_TextCharacterProperties
	T   string
}

// ValidateWithPath validates the CT_TextBlipBullet and its children, prefixing error messages with path
func (_beda *CT_TextBlipBullet) ValidateWithPath(path string) error {
	if _ccbbcf := _beda.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _ccbbcf != nil {
		return _ccbbcf
	}
	return nil
}

// Validate validates the CT_RegularTextRun and its children
func (_adbcc *CT_RegularTextRun) Validate() error {
	return _adbcc.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e")
}

type ST_TextStrikeType byte

func (_bbbgf *CT_TableStyleCellStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agbge:
	for {
		_aagdg, _faega := d.Token()
		if _faega != nil {
			return _faega
		}
		switch _ffdg := _aagdg.(type) {
		case _g.StartElement:
			switch _ffdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}:
				_bbbgf.TcBdr = NewCT_TableCellBorderStyle()
				if _degcc := d.DecodeElement(_bbbgf.TcBdr, &_ffdg); _degcc != nil {
					return _degcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_bbbgf.Fill = NewCT_FillProperties()
				if _aabcd := d.DecodeElement(_bbbgf.Fill, &_ffdg); _aabcd != nil {
					return _aabcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_bbbgf.FillRef = NewCT_StyleMatrixReference()
				if _cdeag := d.DecodeElement(_bbbgf.FillRef, &_ffdg); _cdeag != nil {
					return _cdeag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_bbbgf.Cell3D = NewCT_Cell3D()
				if _cfeabg := d.DecodeElement(_bbbgf.Cell3D, &_ffdg); _cfeabg != nil {
					return _cfeabg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _ffdg.Name)
				if _bfgbfb := d.Skip(); _bfgbfb != nil {
					return _bfgbfb
				}
			}
		case _g.EndElement:
			break _agbge
		case _g.CharData:
		}
	}
	return nil
}

type CT_EffectList struct {
	Blur        *CT_BlurEffect
	FillOverlay *CT_FillOverlayEffect
	Glow        *CT_GlowEffect
	InnerShdw   *CT_InnerShadowEffect
	OuterShdw   *CT_OuterShadowEffect
	PrstShdw    *CT_PresetShadowEffect
	Reflection  *CT_ReflectionEffect
	SoftEdge    *CT_SoftEdgesEffect
}

func NewCT_TableCol() *CT_TableCol { _bded := &CT_TableCol{}; return _bded }

func (_fdggb *ST_AnimationDgmBuildType) ValidateWithPath(path string) error {
	_fgdeg := []string{}
	if _fdggb.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_fgdeg = append(_fgdeg, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _fdggb.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		_fgdeg = append(_fgdeg, "\u0053\u0054\u005f\u0041n\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006dO\u006el\u0079\u0042\u0075\u0069\u006c\u0064\u0054y\u0070\u0065")
	}
	if len(_fgdeg) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fgdeg)
	}
	return nil
}

// Validate validates the CT_TextCharacterProperties and its children
func (_dcbb *CT_TextCharacterProperties) Validate() error {
	return _dcbb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

// Validate validates the CT_TextSpacingPoint and its children
func (_abecfe *CT_TextSpacingPoint) Validate() error {
	return _abecfe.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074")
}

type EG_ShadeProperties struct {
	Lin  *CT_LinearShadeProperties
	Path *CT_PathShadeProperties
}

type CT_TextBody struct {
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	P        []*CT_TextParagraph
}

func (_cgaef *ST_OnOffStyleType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cgaef = 0
	case "\u006f\u006e":
		*_cgaef = 1
	case "\u006f\u0066\u0066":
		*_cgaef = 2
	case "\u0064\u0065\u0066":
		*_cgaef = 3
	}
	return nil
}

func (_bccfa *ST_TextSpacingPercentOrPercentString) ValidateWithPath(path string) error {
	_baeaaa := []string{}
	if _bccfa.ST_TextSpacingPercent != nil {
		_baeaaa = append(_baeaaa, "S\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _bccfa.ST_Percentage != nil {
		_baeaaa = append(_baeaaa, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_baeaaa) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _baeaaa)
	}
	return nil
}

func (_abcc *CT_LinearShadeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abcc.AngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_abcc.AngAttr)})
	}
	if _abcc.ScaledAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0063\u0061\u006c\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_abcc.ScaledAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OfficeArtExtension and its children
func (_ggab *CT_OfficeArtExtension) Validate() error {
	return _ggab.ValidateWithPath("C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e")
}

type CT_FixedPercentage struct{ ValAttr ST_FixedPercentage }

func (_afcbf ST_PresetCameraType) ValidateWithPath(path string) error {
	switch _afcbf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afcbf))
	}
	return nil
}

func (_gafbd *ST_TextBulletSize) ValidateWithPath(path string) error {
	_efbec := []string{}
	if _gafbd.ST_TextBulletSizePercent != nil {
		_efbec = append(_efbec, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _gafbd.ST_TextBulletSizeDecimal != nil {
		_efbec = append(_efbec, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0044\u0065\u0063\u0069\u006d\u0061\u006c")
	}
	if len(_efbec) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _efbec)
	}
	return nil
}

func (_afffb ST_PathFillMode) Validate() error { return _afffb.ValidateWithPath("") }

func (_facfae *CT_Path2DMoveTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_facfae.Pt = NewCT_AdjPoint2D()
_ccbea:
	for {
		_bdeeb, _affde := d.Token()
		if _affde != nil {
			return _affde
		}
		switch _gedbf := _bdeeb.(type) {
		case _g.StartElement:
			switch _gedbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _fdcfg := d.DecodeElement(_facfae.Pt, &_gedbf); _fdcfg != nil {
					return _fdcfg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f\u0020\u0025\u0076", _gedbf.Name)
				if _gdabf := d.Skip(); _gdabf != nil {
					return _gdabf
				}
			}
		case _g.EndElement:
			break _ccbea
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the VideoFile and its children
func (_acbf *VideoFile) Validate() error {
	return _acbf.ValidateWithPath("\u0056i\u0064\u0065\u006f\u0046\u0069\u006ce")
}

func (_ddfff ST_DgmBuildStep) String() string {
	switch _ddfff {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070"
	case 2:
		return "\u0062\u0067"
	}
	return ""
}

func (_ebfce ST_SystemColorVal) Validate() error { return _ebfce.ValidateWithPath("") }

func (_fbbag *ST_AdjAngle) Validate() error { return _fbbag.ValidateWithPath("") }

func (_fbab *CT_ColorSchemeList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fbab.ExtraClrScheme != nil {
		_ddfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ae\u0078\u0074\u0072a\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		for _, _fffe := range _fbab.ExtraClrScheme {
			e.EncodeElement(_fffe, _ddfb)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eegdc *CT_FlatText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cgdg := range start.Attr {
		if _cgdg.Name.Local == "\u007a" {
			_caac, _ccga := ParseUnionST_Coordinate(_cgdg.Value)
			if _ccga != nil {
				return _ccga
			}
			_eegdc.ZAttr = &_caac
			continue
		}
	}
	for {
		_bfdc, _befg := d.Token()
		if _befg != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _befg)
		}
		if _egcb, _fbcff := _bfdc.(_g.EndElement); _fbcff && _egcb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextUnderlineFillFollowText and its children, prefixing error messages with path
func (_effff *CT_TextUnderlineFillFollowText) ValidateWithPath(path string) error { return nil }

func (_adede *CT_ColorMRU) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _adede.EG_ColorChoice != nil {
		for _, _edbc := range _adede.EG_ColorChoice {
			_edbc.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_adf *CT_BlendEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_adf.BlendAttr = ST_BlendMode(1)
	_adf.Cont = NewCT_EffectContainer()
	for _, _gcbc := range start.Attr {
		if _gcbc.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_adf.BlendAttr.UnmarshalXMLAttr(_gcbc)
			continue
		}
	}
_dfdc:
	for {
		_daca, _edba := d.Token()
		if _edba != nil {
			return _edba
		}
		switch _dcee := _daca.(type) {
		case _g.StartElement:
			switch _dcee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _eadf := d.DecodeElement(_adf.Cont, &_dcee); _eadf != nil {
					return _eadf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045\u0066f\u0065c\u0074\u0020\u0025\u0076", _dcee.Name)
				if _dbcf := d.Skip(); _dbcf != nil {
					return _dbcf
				}
			}
		case _g.EndElement:
			break _dfdc
		case _g.CharData:
		}
	}
	return nil
}

func (_baddg *CT_ThemeableLineStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ecabffb:
	for {
		_fbcfbg, _faee := d.Token()
		if _faee != nil {
			return _faee
		}
		switch _efgfd := _fbcfbg.(type) {
		case _g.StartElement:
			switch _efgfd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_baddg.Ln = NewCT_LineProperties()
				if _ebafe := d.DecodeElement(_baddg.Ln, &_efgfd); _ebafe != nil {
					return _ebafe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				_baddg.LnRef = NewCT_StyleMatrixReference()
				if _dddag := d.DecodeElement(_baddg.LnRef, &_efgfd); _dddag != nil {
					return _dddag
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _efgfd.Name)
				if _egfega := d.Skip(); _egfega != nil {
					return _egfega
				}
			}
		case _g.EndElement:
			break _ecabffb
		case _g.CharData:
		}
	}
	return nil
}

type CT_GrayscaleEffect struct{}

// Validate validates the CT_InnerShadowEffect and its children
func (_gbbb *CT_InnerShadowEffect) Validate() error {
	return _gbbb.ValidateWithPath("C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

// ValidateWithPath validates the EG_ColorTransform and its children, prefixing error messages with path
func (_acebg *EG_ColorTransform) ValidateWithPath(path string) error {
	if _acebg.Tint != nil {
		if _cegfbf := _acebg.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _cegfbf != nil {
			return _cegfbf
		}
	}
	if _acebg.Shade != nil {
		if _febfd := _acebg.Shade.ValidateWithPath(path + "\u002f\u0053\u0068\u0061\u0064\u0065"); _febfd != nil {
			return _febfd
		}
	}
	if _acebg.Comp != nil {
		if _ebfc := _acebg.Comp.ValidateWithPath(path + "\u002f\u0043\u006fm\u0070"); _ebfc != nil {
			return _ebfc
		}
	}
	if _acebg.Inv != nil {
		if _cggcd := _acebg.Inv.ValidateWithPath(path + "\u002f\u0049\u006e\u0076"); _cggcd != nil {
			return _cggcd
		}
	}
	if _acebg.Gray != nil {
		if _ggega := _acebg.Gray.ValidateWithPath(path + "\u002f\u0047\u0072a\u0079"); _ggega != nil {
			return _ggega
		}
	}
	if _acebg.Alpha != nil {
		if _gcceg := _acebg.Alpha.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061"); _gcceg != nil {
			return _gcceg
		}
	}
	if _acebg.AlphaOff != nil {
		if _bggcd := _acebg.AlphaOff.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004f\u0066f"); _bggcd != nil {
			return _bggcd
		}
	}
	if _acebg.AlphaMod != nil {
		if _eccfab := _acebg.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _eccfab != nil {
			return _eccfab
		}
	}
	if _acebg.Hue != nil {
		if _acggf := _acebg.Hue.ValidateWithPath(path + "\u002f\u0048\u0075\u0065"); _acggf != nil {
			return _acggf
		}
	}
	if _acebg.HueOff != nil {
		if _edcgfe := _acebg.HueOff.ValidateWithPath(path + "\u002fH\u0075\u0065\u004f\u0066\u0066"); _edcgfe != nil {
			return _edcgfe
		}
	}
	if _acebg.HueMod != nil {
		if _ffdbf := _acebg.HueMod.ValidateWithPath(path + "\u002fH\u0075\u0065\u004d\u006f\u0064"); _ffdbf != nil {
			return _ffdbf
		}
	}
	if _acebg.Sat != nil {
		if _gfdbac := _acebg.Sat.ValidateWithPath(path + "\u002f\u0053\u0061\u0074"); _gfdbac != nil {
			return _gfdbac
		}
	}
	if _acebg.SatOff != nil {
		if _dbbba := _acebg.SatOff.ValidateWithPath(path + "\u002fS\u0061\u0074\u004f\u0066\u0066"); _dbbba != nil {
			return _dbbba
		}
	}
	if _acebg.SatMod != nil {
		if _gcgcc := _acebg.SatMod.ValidateWithPath(path + "\u002fS\u0061\u0074\u004d\u006f\u0064"); _gcgcc != nil {
			return _gcgcc
		}
	}
	if _acebg.Lum != nil {
		if _gfec := _acebg.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _gfec != nil {
			return _gfec
		}
	}
	if _acebg.LumOff != nil {
		if _gaeaa := _acebg.LumOff.ValidateWithPath(path + "\u002fL\u0075\u006d\u004f\u0066\u0066"); _gaeaa != nil {
			return _gaeaa
		}
	}
	if _acebg.LumMod != nil {
		if _afef := _acebg.LumMod.ValidateWithPath(path + "\u002fL\u0075\u006d\u004d\u006f\u0064"); _afef != nil {
			return _afef
		}
	}
	if _acebg.Red != nil {
		if _fdffc := _acebg.Red.ValidateWithPath(path + "\u002f\u0052\u0065\u0064"); _fdffc != nil {
			return _fdffc
		}
	}
	if _acebg.RedOff != nil {
		if _cbdgc := _acebg.RedOff.ValidateWithPath(path + "\u002fR\u0065\u0064\u004f\u0066\u0066"); _cbdgc != nil {
			return _cbdgc
		}
	}
	if _acebg.RedMod != nil {
		if _dgffa := _acebg.RedMod.ValidateWithPath(path + "\u002fR\u0065\u0064\u004d\u006f\u0064"); _dgffa != nil {
			return _dgffa
		}
	}
	if _acebg.Green != nil {
		if _cdcgc := _acebg.Green.ValidateWithPath(path + "\u002f\u0047\u0072\u0065\u0065\u006e"); _cdcgc != nil {
			return _cdcgc
		}
	}
	if _acebg.GreenOff != nil {
		if _egbgc := _acebg.GreenOff.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004f\u0066f"); _egbgc != nil {
			return _egbgc
		}
	}
	if _acebg.GreenMod != nil {
		if _geddaa := _acebg.GreenMod.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004d\u006fd"); _geddaa != nil {
			return _geddaa
		}
	}
	if _acebg.Blue != nil {
		if _ggca := _acebg.Blue.ValidateWithPath(path + "\u002f\u0042\u006cu\u0065"); _ggca != nil {
			return _ggca
		}
	}
	if _acebg.BlueOff != nil {
		if _cddfb := _acebg.BlueOff.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004f\u0066\u0066"); _cddfb != nil {
			return _cddfb
		}
	}
	if _acebg.BlueMod != nil {
		if _fcfda := _acebg.BlueMod.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004d\u006f\u0064"); _fcfda != nil {
			return _fcfda
		}
	}
	if _acebg.Gamma != nil {
		if _fbead := _acebg.Gamma.ValidateWithPath(path + "\u002f\u0047\u0061\u006d\u006d\u0061"); _fbead != nil {
			return _fbead
		}
	}
	if _acebg.InvGamma != nil {
		if _fgfg := _acebg.InvGamma.ValidateWithPath(path + "\u002fI\u006e\u0076\u0047\u0061\u006d\u006da"); _fgfg != nil {
			return _fgfg
		}
	}
	return nil
}

func (_ffcgb *EG_TextBulletTypeface) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ffcgb.BuFontTx != nil {
		_egbfcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_ffcgb.BuFontTx, _egbfcb)
	}
	if _ffcgb.BuFont != nil {
		_faead := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_ffcgb.BuFont, _faead)
	}
	return nil
}

// Validate validates the CT_AdjustHandleList and its children
func (_eff *CT_AdjustHandleList) Validate() error {
	return _eff.ValidateWithPath("\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_GvmlTextShape and its children, prefixing error messages with path
func (_dace *CT_GvmlTextShape) ValidateWithPath(path string) error {
	if _begdf := _dace.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _begdf != nil {
		return _begdf
	}
	if _dace.Choice != nil {
		if _gfae := _dace.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _gfae != nil {
			return _gfae
		}
	}
	if _dace.ExtLst != nil {
		if _aaae := _dace.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aaae != nil {
			return _aaae
		}
	}
	return nil
}

func NewCT_TableStyleList() *CT_TableStyleList {
	_beeecc := &CT_TableStyleList{}
	_beeecc.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _beeecc
}

func (_ecebb ST_SystemColorVal) ValidateWithPath(path string) error {
	switch _ecebb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecebb))
	}
	return nil
}

// Validate validates the CT_TableCellProperties and its children
func (_dbee *CT_TableCellProperties) Validate() error {
	return _dbee.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func (_ebcff *CT_GroupShapeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ffba := range start.Attr {
		if _ffba.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_ebcff.BwModeAttr.UnmarshalXMLAttr(_ffba)
			continue
		}
	}
_dage:
	for {
		_eaagc, _dabfe := d.Token()
		if _dabfe != nil {
			return _dabfe
		}
		switch _bcbca := _eaagc.(type) {
		case _g.StartElement:
			switch _bcbca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_ebcff.Xfrm = NewCT_GroupTransform2D()
				if _bccbc := d.DecodeElement(_ebcff.Xfrm, &_bcbca); _bccbc != nil {
					return _bccbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ebcff.NoFill = NewCT_NoFillProperties()
				if _gccg := d.DecodeElement(_ebcff.NoFill, &_bcbca); _gccg != nil {
					return _gccg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ebcff.SolidFill = NewCT_SolidColorFillProperties()
				if _agdfc := d.DecodeElement(_ebcff.SolidFill, &_bcbca); _agdfc != nil {
					return _agdfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ebcff.GradFill = NewCT_GradientFillProperties()
				if _aaec := d.DecodeElement(_ebcff.GradFill, &_bcbca); _aaec != nil {
					return _aaec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_ebcff.BlipFill = NewCT_BlipFillProperties()
				if _ggedf := d.DecodeElement(_ebcff.BlipFill, &_bcbca); _ggedf != nil {
					return _ggedf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ebcff.PattFill = NewCT_PatternFillProperties()
				if _geae := d.DecodeElement(_ebcff.PattFill, &_bcbca); _geae != nil {
					return _geae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_ebcff.GrpFill = NewCT_GroupFillProperties()
				if _aagce := d.DecodeElement(_ebcff.GrpFill, &_bcbca); _aagce != nil {
					return _aagce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_ebcff.EffectLst = NewCT_EffectList()
				if _fefe := d.DecodeElement(_ebcff.EffectLst, &_bcbca); _fefe != nil {
					return _fefe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_ebcff.EffectDag = NewCT_EffectContainer()
				if _cgbb := d.DecodeElement(_ebcff.EffectDag, &_bcbca); _cgbb != nil {
					return _cgbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_ebcff.Scene3d = NewCT_Scene3D()
				if _ceedb := d.DecodeElement(_ebcff.Scene3d, &_bcbca); _ceedb != nil {
					return _ceedb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebcff.ExtLst = NewCT_OfficeArtExtensionList()
				if _adcbc := d.DecodeElement(_ebcff.ExtLst, &_bcbca); _adcbc != nil {
					return _adcbc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070e\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _bcbca.Name)
				if _ebga := d.Skip(); _ebga != nil {
					return _ebga
				}
			}
		case _g.EndElement:
			break _dage
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_LineEndTypeUnset    ST_LineEndType = 0
	ST_LineEndTypeNone     ST_LineEndType = 1
	ST_LineEndTypeTriangle ST_LineEndType = 2
	ST_LineEndTypeStealth  ST_LineEndType = 3
	ST_LineEndTypeDiamond  ST_LineEndType = 4
	ST_LineEndTypeOval     ST_LineEndType = 5
	ST_LineEndTypeArrow    ST_LineEndType = 6
)

// ValidateWithPath validates the CT_PositivePercentage and its children, prefixing error messages with path
func (_cdcaa *CT_PositivePercentage) ValidateWithPath(path string) error {
	if _eaadba := _cdcaa.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eaadba != nil {
		return _eaadba
	}
	return nil
}

func NewCT_AnimationChartElement() *CT_AnimationChartElement {
	_fggf := &CT_AnimationChartElement{}
	_fggf.BldStepAttr = ST_ChartBuildStep(1)
	return _fggf
}

func (_bgbbce ST_LightRigType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bgbbce.String(), start)
}

// Validate validates the CT_Point2D and its children
func (_badag *CT_Point2D) Validate() error {
	return _badag.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}

func NewCT_TileInfoProperties() *CT_TileInfoProperties {
	_ccebc := &CT_TileInfoProperties{}
	return _ccebc
}

func NewEG_EffectProperties() *EG_EffectProperties { _cfdaf := &EG_EffectProperties{}; return _cfdaf }

func (_cacee *CT_EffectProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cacee.EffectLst != nil {
		_acece := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cacee.EffectLst, _acece)
	}
	if _cacee.EffectDag != nil {
		_gebf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_cacee.EffectDag, _gebf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gbedg ST_EffectContainerType) ValidateWithPath(path string) error {
	switch _gbedg {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbedg))
	}
	return nil
}

// Validate validates the CT_Table and its children
func (_efecf *CT_Table) Validate() error {
	return _efecf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

// ValidateWithPath validates the CT_OuterShadowEffect and its children, prefixing error messages with path
func (_daece *CT_OuterShadowEffect) ValidateWithPath(path string) error {
	if _daece.BlurRadAttr != nil {
		if *_daece.BlurRadAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_daece.BlurRadAttr)
		}
		if *_daece.BlurRadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_daece.BlurRadAttr)
		}
	}
	if _daece.DistAttr != nil {
		if *_daece.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_daece.DistAttr)
		}
		if *_daece.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_daece.DistAttr)
		}
	}
	if _daece.DirAttr != nil {
		if *_daece.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_daece.DirAttr)
		}
		if *_daece.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_daece.DirAttr)
		}
	}
	if _daece.SxAttr != nil {
		if _geaab := _daece.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _geaab != nil {
			return _geaab
		}
	}
	if _daece.SyAttr != nil {
		if _gadge := _daece.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _gadge != nil {
			return _gadge
		}
	}
	if _daece.KxAttr != nil {
		if *_daece.KxAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_daece.KxAttr)
		}
		if *_daece.KxAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_daece.KxAttr)
		}
	}
	if _daece.KyAttr != nil {
		if *_daece.KyAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_daece.KyAttr)
		}
		if *_daece.KyAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_daece.KyAttr)
		}
	}
	if _bgdagb := _daece.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _bgdagb != nil {
		return _bgdagb
	}
	if _daece.ScrgbClr != nil {
		if _bgfa := _daece.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _bgfa != nil {
			return _bgfa
		}
	}
	if _daece.SrgbClr != nil {
		if _agedc := _daece.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _agedc != nil {
			return _agedc
		}
	}
	if _daece.HslClr != nil {
		if _bbfg := _daece.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bbfg != nil {
			return _bbfg
		}
	}
	if _daece.SysClr != nil {
		if _dccea := _daece.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dccea != nil {
			return _dccea
		}
	}
	if _daece.SchemeClr != nil {
		if _ffff := _daece.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ffff != nil {
			return _ffff
		}
	}
	if _daece.PrstClr != nil {
		if _dbfcd := _daece.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dbfcd != nil {
			return _dbfcd
		}
	}
	return nil
}

func (_bfad *CT_AnimationGraphicalObjectBuildProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gab:
	for {
		_fgaaf, _fcgc := d.Token()
		if _fcgc != nil {
			return _fcgc
		}
		switch _ebbf := _fgaaf.(type) {
		case _g.StartElement:
			switch _ebbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_bfad.BldDgm = NewCT_AnimationDgmBuildProperties()
				if _gda := d.DecodeElement(_bfad.BldDgm, &_ebbf); _gda != nil {
					return _gda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}:
				_bfad.BldChart = NewCT_AnimationChartBuildProperties()
				if _eeg := d.DecodeElement(_bfad.BldChart, &_ebbf); _eeg != nil {
					return _eeg
				}
			default:
				_fc.Log("sk\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064P\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ebbf.Name)
				if _cbaa := d.Skip(); _cbaa != nil {
					return _cbaa
				}
			}
		case _g.EndElement:
			break _gab
		case _g.CharData:
		}
	}
	return nil
}

func (_efdb *CT_BaseStylesOverride) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _efdb.ClrScheme != nil {
		_fega := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_efdb.ClrScheme, _fega)
	}
	if _efdb.FontScheme != nil {
		_fcdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_efdb.FontScheme, _fcdc)
	}
	if _efdb.FmtScheme != nil {
		_badab := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_efdb.FmtScheme, _badab)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_ThemeableFontStyles and its children
func (_aegde *EG_ThemeableFontStyles) Validate() error {
	return _aegde.ValidateWithPath("\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073")
}

// ValidateWithPath validates the CT_TableGrid and its children, prefixing error messages with path
func (_ebbge *CT_TableGrid) ValidateWithPath(path string) error {
	for _eaefg, _ebbfc := range _ebbge.GridCol {
		if _gccda := _ebbfc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0069\u0064\u0043\u006fl\u005b\u0025\u0064\u005d", path, _eaefg)); _gccda != nil {
			return _gccda
		}
	}
	return nil
}

func (_egcga ST_BevelPresetType) String() string {
	switch _egcga {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0073\u006c\u006fp\u0065"
	case 4:
		return "\u0063\u0072\u006fs\u0073"
	case 5:
		return "\u0061\u006e\u0067l\u0065"
	case 6:
		return "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case 7:
		return "\u0063\u006f\u006e\u0076\u0065\u0078"
	case 8:
		return "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case 9:
		return "\u0064\u0069\u0076o\u0074"
	case 10:
		return "\u0072\u0069\u0062\u006c\u0065\u0074"
	case 11:
		return "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return ""
}

// ValidateWithPath validates the CT_TextParagraph and its children, prefixing error messages with path
func (_cfbg *CT_TextParagraph) ValidateWithPath(path string) error {
	if _cfbg.PPr != nil {
		if _fgbca := _cfbg.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _fgbca != nil {
			return _fgbca
		}
	}
	for _edebd, _ffdce := range _cfbg.EG_TextRun {
		if _eaee := _ffdce.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075n\u005b\u0025\u0064\u005d", path, _edebd)); _eaee != nil {
			return _eaee
		}
	}
	if _cfbg.EndParaRPr != nil {
		if _baebb := _cfbg.EndParaRPr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"); _baebb != nil {
			return _baebb
		}
	}
	return nil
}

func (_aegc *CT_BlipFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fbgdc := range start.Attr {
		if _fbgdc.Name.Local == "\u0064\u0070\u0069" {
			_eegc, _agag := _fg.ParseUint(_fbgdc.Value, 10, 32)
			if _agag != nil {
				return _agag
			}
			_ffbc := uint32(_eegc)
			_aegc.DpiAttr = &_ffbc
			continue
		}
		if _fbgdc.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_feaf, _ecac := _fg.ParseBool(_fbgdc.Value)
			if _ecac != nil {
				return _ecac
			}
			_aegc.RotWithShapeAttr = &_feaf
			continue
		}
	}
_gdc:
	for {
		_acbe, _ddce := d.Token()
		if _ddce != nil {
			return _ddce
		}
		switch _abc := _acbe.(type) {
		case _g.StartElement:
			switch _abc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				_aegc.Blip = NewCT_Blip()
				if _ffaf := d.DecodeElement(_aegc.Blip, &_abc); _ffaf != nil {
					return _ffaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}:
				_aegc.SrcRect = NewCT_RelativeRect()
				if _aebcf := d.DecodeElement(_aegc.SrcRect, &_abc); _aebcf != nil {
					return _aebcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_aegc.Tile = NewCT_TileInfoProperties()
				if _ffdd := d.DecodeElement(_aegc.Tile, &_abc); _ffdd != nil {
					return _ffdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_aegc.Stretch = NewCT_StretchInfoProperties()
				if _agdc := d.DecodeElement(_aegc.Stretch, &_abc); _agdc != nil {
					return _agdc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u006c\u0069\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _abc.Name)
				if _dbfg := d.Skip(); _dbfg != nil {
					return _dbfg
				}
			}
		case _g.EndElement:
			break _gdc
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GradientFillProperties() *CT_GradientFillProperties {
	_dacc := &CT_GradientFillProperties{}
	return _dacc
}

func (_gfg *CT_AnimationDgmElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dcg := range start.Attr {
		if _dcg.Name.Local == "\u0069\u0064" {
			_acg, _aeb := _dcg.Value, error(nil)
			if _aeb != nil {
				return _aeb
			}
			_gfg.IdAttr = &_acg
			continue
		}
		if _dcg.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_gfg.BldStepAttr.UnmarshalXMLAttr(_dcg)
			continue
		}
	}
	for {
		_dga, _agad := d.Token()
		if _agad != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069m\u0061t\u0069o\u006eD\u0067\u006d\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _agad)
		}
		if _dea, _bgc := _dga.(_g.EndElement); _bgc && _dea.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cgeed *ST_EffectContainerType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdeaed, _abecde := d.Token()
	if _abecde != nil {
		return _abecde
	}
	if _gbcaa, _efcaea := _fdeaed.(_g.EndElement); _efcaea && _gbcaa.Name == start.Name {
		*_cgeed = 1
		return nil
	}
	if _gcfgb, _dcfbf := _fdeaed.(_g.CharData); !_dcfbf {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdeaed)
	} else {
		switch string(_gcfgb) {
		case "":
			*_cgeed = 0
		case "\u0073\u0069\u0062":
			*_cgeed = 1
		case "\u0074\u0072\u0065\u0065":
			*_cgeed = 2
		}
	}
	_fdeaed, _abecde = d.Token()
	if _abecde != nil {
		return _abecde
	}
	if _faeccg, _adbbfbc := _fdeaed.(_g.EndElement); _adbbfbc && _faeccg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdeaed)
}

func (_agedd *EG_Geometry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _agedd.CustGeom != nil {
		_faddbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_agedd.CustGeom, _faddbg)
	}
	if _agedd.PrstGeom != nil {
		_bffa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_agedd.PrstGeom, _bffa)
	}
	return nil
}

// ST_TextBulletSize is a union type
type ST_TextBulletSize struct {
	ST_TextBulletSizePercent *string
	ST_TextBulletSizeDecimal *int32
}

const (
	ST_PathFillModeUnset       ST_PathFillMode = 0
	ST_PathFillModeNone        ST_PathFillMode = 1
	ST_PathFillModeNorm        ST_PathFillMode = 2
	ST_PathFillModeLighten     ST_PathFillMode = 3
	ST_PathFillModeLightenLess ST_PathFillMode = 4
	ST_PathFillModeDarken      ST_PathFillMode = 5
	ST_PathFillModeDarkenLess  ST_PathFillMode = 6
)

func (_bagag *CT_InnerShadowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bagag.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_bagag.BlurRadAttr)})
	}
	if _bagag.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_bagag.DistAttr)})
	}
	if _bagag.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_bagag.DirAttr)})
	}
	e.EncodeToken(start)
	if _bagag.ScrgbClr != nil {
		_fcggf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_bagag.ScrgbClr, _fcggf)
	}
	if _bagag.SrgbClr != nil {
		_aebd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_bagag.SrgbClr, _aebd)
	}
	if _bagag.HslClr != nil {
		_adaec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_bagag.HslClr, _adaec)
	}
	if _bagag.SysClr != nil {
		_ebbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_bagag.SysClr, _ebbe)
	}
	if _bagag.SchemeClr != nil {
		_bccdf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_bagag.SchemeClr, _bccdf)
	}
	if _bagag.PrstClr != nil {
		_aeff := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_bagag.PrstClr, _aeff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextListStyle struct {
	DefPPr  *CT_TextParagraphProperties
	Lvl1pPr *CT_TextParagraphProperties
	Lvl2pPr *CT_TextParagraphProperties
	Lvl3pPr *CT_TextParagraphProperties
	Lvl4pPr *CT_TextParagraphProperties
	Lvl5pPr *CT_TextParagraphProperties
	Lvl6pPr *CT_TextParagraphProperties
	Lvl7pPr *CT_TextParagraphProperties
	Lvl8pPr *CT_TextParagraphProperties
	Lvl9pPr *CT_TextParagraphProperties
	ExtLst  *CT_OfficeArtExtensionList
}

func (_dffeg *EG_EffectProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dffeg.EffectLst != nil {
		_cfbbgc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dffeg.EffectLst, _cfbbgc)
	}
	if _dffeg.EffectDag != nil {
		_gfbfc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_dffeg.EffectDag, _gfbfc)
	}
	return nil
}

// ValidateWithPath validates the ThemeManager and its children, prefixing error messages with path
func (_baaag *ThemeManager) ValidateWithPath(path string) error {
	if _fbfgf := _baaag.CT_EmptyElement.ValidateWithPath(path); _fbfgf != nil {
		return _fbfgf
	}
	return nil
}

func (_beeda *CT_Path2DLineTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_beeda.Pt = NewCT_AdjPoint2D()
_eagba:
	for {
		_adbgf, _ccgc := d.Token()
		if _ccgc != nil {
			return _ccgc
		}
		switch _cabad := _adbgf.(type) {
		case _g.StartElement:
			switch _cabad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _eaced := d.DecodeElement(_beeda.Pt, &_cabad); _eaced != nil {
					return _eaced
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f\u0020\u0025\u0076", _cabad.Name)
				if _afaee := d.Skip(); _afaee != nil {
					return _afaee
				}
			}
		case _g.EndElement:
			break _eagba
		case _g.CharData:
		}
	}
	return nil
}

func (_dfecf ST_PathShadeType) Validate() error { return _dfecf.ValidateWithPath("") }

type EG_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_bceee *CT_TextBulletSizeFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_fffddf, _bbcbd := d.Token()
		if _bbcbd != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078t\u003a\u0020\u0025\u0073", _bbcbd)
		}
		if _bgdagf, _cagde := _fffddf.(_g.EndElement); _cagde && _bgdagf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Path2DArcTo struct {
	WRAttr    ST_AdjCoordinate
	HRAttr    ST_AdjCoordinate
	StAngAttr ST_AdjAngle
	SwAngAttr ST_AdjAngle
}

type CT_AnimationDgmElement struct {
	IdAttr      *string
	BldStepAttr ST_DgmBuildStep
}

func (_ddbbfc *CT_Vector3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _ddbbfc.DxAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _ddbbfc.DyAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u007a"}, Value: _bb.Sprintf("\u0025\u0076", _ddbbfc.DzAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bedf *CT_InverseTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlTextShapeChoice and its children
func (_gecbg *CT_GvmlTextShapeChoice) Validate() error {
	return _gecbg.ValidateWithPath("\u0043\u0054\u005f\u0047vm\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069c\u0065")
}

func (_adddgd ST_PresetShadowVal) ValidateWithPath(path string) error {
	switch _adddgd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adddgd))
	}
	return nil
}

func (_dabee ST_LineEndWidth) ValidateWithPath(path string) error {
	switch _dabee {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dabee))
	}
	return nil
}

func (_gcebb ST_CompoundLine) String() string {
	switch _gcebb {
	case 0:
		return ""
	case 1:
		return "\u0073\u006e\u0067"
	case 2:
		return "\u0064\u0062\u006c"
	case 3:
		return "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case 4:
		return "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case 5:
		return "\u0074\u0072\u0069"
	}
	return ""
}

func (_bfega *CT_CustomColorList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agga:
	for {
		_faec, _afgb := d.Token()
		if _afgb != nil {
			return _afgb
		}
		switch _gafd := _faec.(type) {
		case _g.StartElement:
			switch _gafd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}:
				_fbffe := NewCT_CustomColor()
				if _cgd := d.DecodeElement(_fbffe, &_gafd); _cgd != nil {
					return _cgd
				}
				_bfega.CustClr = append(_bfega.CustClr, _fbffe)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gafd.Name)
				if _cfde := d.Skip(); _cfde != nil {
					return _cfde
				}
			}
		case _g.EndElement:
			break _agga
		case _g.CharData:
		}
	}
	return nil
}

func (_cdfa *CT_DefaultShapeDefinition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cdfa.SpPr = NewCT_ShapeProperties()
	_cdfa.BodyPr = NewCT_TextBodyProperties()
	_cdfa.LstStyle = NewCT_TextListStyle()
_gaag:
	for {
		_ecffg, _gcgag := d.Token()
		if _gcgag != nil {
			return _gcgag
		}
		switch _dcff := _ecffg.(type) {
		case _g.StartElement:
			switch _dcff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _gadd := d.DecodeElement(_cdfa.SpPr, &_dcff); _gadd != nil {
					return _gadd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _gffee := d.DecodeElement(_cdfa.BodyPr, &_dcff); _gffee != nil {
					return _gffee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				if _cefa := d.DecodeElement(_cdfa.LstStyle, &_dcff); _cefa != nil {
					return _cefa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_cdfa.Style = NewCT_ShapeStyle()
				if _gfacc := d.DecodeElement(_cdfa.Style, &_dcff); _gfacc != nil {
					return _gfacc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdfa.ExtLst = NewCT_OfficeArtExtensionList()
				if _bagf := d.DecodeElement(_cdfa.ExtLst, &_dcff); _bagf != nil {
					return _bagf
				}
			default:
				_fc.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0053h\u0061p\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074i\u006fn\u0020\u0025v", _dcff.Name)
				if _bcffd := d.Skip(); _bcffd != nil {
					return _bcffd
				}
			}
		case _g.EndElement:
			break _gaag
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Path2DMoveTo() *CT_Path2DMoveTo {
	_gcdbg := &CT_Path2DMoveTo{}
	_gcdbg.Pt = NewCT_AdjPoint2D()
	return _gcdbg
}

type CT_PolarAdjustHandle struct {
	GdRefRAttr   *string
	MinRAttr     *ST_AdjCoordinate
	MaxRAttr     *ST_AdjCoordinate
	GdRefAngAttr *string
	MinAngAttr   *ST_AdjAngle
	MaxAngAttr   *ST_AdjAngle
	Pos          *CT_AdjPoint2D
}

// Validate validates the CT_Bevel and its children
func (_bdeaf *CT_Bevel) Validate() error {
	return _bdeaf.ValidateWithPath("\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c")
}

func NewEG_TextRun() *EG_TextRun { _fcgbd := &EG_TextRun{}; return _fcgbd }

func (_agdfcg ST_TextShapeType) ValidateWithPath(path string) error {
	switch _agdfcg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agdfcg))
	}
	return nil
}

func (_adfdc *CT_RelativeOffsetEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _adfdc.TxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_adfdc.TxAttr)})
	}
	if _adfdc.TyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_adfdc.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextBulletSizePercent and its children
func (_dbbga *CT_TextBulletSizePercent) Validate() error {
	return _dbbga.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
}

// ValidateWithPath validates the CT_Headers and its children, prefixing error messages with path
func (_bbge *CT_Headers) ValidateWithPath(path string) error { return nil }

type CT_ComplementTransform struct{}

func (_fcgf *CT_AlphaOutsetEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afd := range start.Attr {
		if _afd.Name.Local == "\u0072\u0061\u0064" {
			_efg, _ffcc := ParseUnionST_Coordinate(_afd.Value)
			if _ffcc != nil {
				return _ffcc
			}
			_fcgf.RadAttr = &_efg
			continue
		}
	}
	for {
		_eab, _gcg := d.Token()
		if _gcg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068a\u004fu\u0074\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _gcg)
		}
		if _bagd, _aad := _eab.(_g.EndElement); _aad && _bagd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TableCellBorderStyle and its children
func (_befge *CT_TableCellBorderStyle) Validate() error {
	return _befge.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_TextFont and its children
func (_efeag *CT_TextFont) Validate() error {
	return _efeag.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074")
}

type CT_EffectStyleList struct{ EffectStyle []*CT_EffectStyleItem }

func (_cfacd *ST_LightRigDirection) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cfacd = 0
	case "\u0074\u006c":
		*_cfacd = 1
	case "\u0074":
		*_cfacd = 2
	case "\u0074\u0072":
		*_cfacd = 3
	case "\u006c":
		*_cfacd = 4
	case "\u0072":
		*_cfacd = 5
	case "\u0062\u006c":
		*_cfacd = 6
	case "\u0062":
		*_cfacd = 7
	case "\u0062\u0072":
		*_cfacd = 8
	}
	return nil
}

// ValidateWithPath validates the CT_TextNoAutofit and its children, prefixing error messages with path
func (_abfba *CT_TextNoAutofit) ValidateWithPath(path string) error { return nil }

func (_cdca *CT_AlphaModulateFixedEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cdca.AmtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006d\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_cdca.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_AlphaInverseEffect() *CT_AlphaInverseEffect { _fge := &CT_AlphaInverseEffect{}; return _fge }

func (_gbcg *EG_OfficeArtExtensionList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ecdea:
	for {
		_aeaac, _aeffd := d.Token()
		if _aeffd != nil {
			return _aeffd
		}
		switch _acceb := _aeaac.(type) {
		case _g.StartElement:
			switch _acceb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_cedfe := NewCT_OfficeArtExtension()
				if _ebccg := d.DecodeElement(_cedfe, &_acceb); _ebccg != nil {
					return _ebccg
				}
				_gbcg.Ext = append(_gbcg.Ext, _cedfe)
			default:
				_fc.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _acceb.Name)
				if _fddgb := d.Skip(); _fddgb != nil {
					return _fddgb
				}
			}
		case _g.EndElement:
			break _ecdea
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GammaTransform() *CT_GammaTransform { _afabc := &CT_GammaTransform{}; return _afabc }

type EG_Media struct {
	AudioCd       *CT_AudioCD
	WavAudioFile  *CT_EmbeddedWAVAudioFile
	AudioFile     *CT_AudioFile
	VideoFile     *CT_VideoFile
	QuickTimeFile *CT_QuickTimeFile
}

type CT_ColorMappingOverride struct {
	Choice *CT_ColorMappingOverrideChoice
}

// ValidateWithPath validates the CT_SphereCoords and its children, prefixing error messages with path
func (_ebacb *CT_SphereCoords) ValidateWithPath(path string) error {
	if _ebacb.LatAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0061t\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ebacb.LatAttr)
	}
	if _ebacb.LatAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eL\u0061\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ebacb.LatAttr)
	}
	if _ebacb.LonAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u006fn\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ebacb.LonAttr)
	}
	if _ebacb.LonAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eL\u006f\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ebacb.LonAttr)
	}
	if _ebacb.RevAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0065v\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ebacb.RevAttr)
	}
	if _ebacb.RevAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eR\u0065\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ebacb.RevAttr)
	}
	return nil
}

func NewCT_PresetGeometry2D() *CT_PresetGeometry2D {
	_gaecfg := &CT_PresetGeometry2D{}
	_gaecfg.PrstAttr = ST_ShapeType(1)
	return _gaecfg
}

func (_egbgf *CT_TextField) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_egbgf.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gcaad := range start.Attr {
		if _gcaad.Name.Local == "\u0069\u0064" {
			_dabcc, _bgbcg := _gcaad.Value, error(nil)
			if _bgbcg != nil {
				return _bgbcg
			}
			_egbgf.IdAttr = _dabcc
			continue
		}
		if _gcaad.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bgbea, _fbdbf := _gcaad.Value, error(nil)
			if _fbdbf != nil {
				return _fbdbf
			}
			_egbgf.TypeAttr = &_bgbea
			continue
		}
	}
_befaf:
	for {
		_feffd, _cgeea := d.Token()
		if _cgeea != nil {
			return _cgeea
		}
		switch _gcaagg := _feffd.(type) {
		case _g.StartElement:
			switch _gcaagg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_egbgf.RPr = NewCT_TextCharacterProperties()
				if _ebggda := d.DecodeElement(_egbgf.RPr, &_gcaagg); _ebggda != nil {
					return _ebggda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_egbgf.PPr = NewCT_TextParagraphProperties()
				if _dfddd := d.DecodeElement(_egbgf.PPr, &_gcaagg); _dfddd != nil {
					return _dfddd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_egbgf.T = new(string)
				if _bbfd := d.DecodeElement(_egbgf.T, &_gcaagg); _bbfd != nil {
					return _bbfd
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _gcaagg.Name)
				if _beged := d.Skip(); _beged != nil {
					return _beged
				}
			}
		case _g.EndElement:
			break _befaf
		case _g.CharData:
		}
	}
	return nil
}

func (_bgbge *CT_TextBulletSizePercent) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgbge.ValAttr = "\u0031\u0030\u0030\u0025"
	for _, _ebbeg := range start.Attr {
		if _ebbeg.Name.Local == "\u0076\u0061\u006c" {
			_ecccef, _feeg := _ebbeg.Value, error(nil)
			if _feeg != nil {
				return _feeg
			}
			_bgbge.ValAttr = _ecccef
			continue
		}
	}
	for {
		_gaafd, _agdgg := d.Token()
		if _agdgg != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054ext\u0042ul\u006c\u0065\u0074\u0053\u0069\u007a\u0065Pe\u0072\u0063\u0065\u006e\u0074\u003a\u0020%\u0073", _agdgg)
		}
		if _fgcb, _adgbed := _gaafd.(_g.EndElement); _adgbed && _fgcb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GradientStop struct {
	PosAttr   ST_PositiveFixedPercentage
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_ffefac ST_LineEndLength) String() string {
	switch _ffefac {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}

func NewCT_HSLEffect() *CT_HSLEffect { _fcfdc := &CT_HSLEffect{}; return _fcfdc }

// ValidateWithPath validates the CT_ThemeableLineStyle and its children, prefixing error messages with path
func (_ccaeg *CT_ThemeableLineStyle) ValidateWithPath(path string) error {
	if _ccaeg.Ln != nil {
		if _dafcec := _ccaeg.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _dafcec != nil {
			return _dafcec
		}
	}
	if _ccaeg.LnRef != nil {
		if _gabae := _ccaeg.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _gabae != nil {
			return _gabae
		}
	}
	return nil
}

func (_ddca *EG_LineFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ddca.NoFill != nil {
		_abbfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ddca.NoFill, _abbfc)
	}
	if _ddca.SolidFill != nil {
		_cdabg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ddca.SolidFill, _cdabg)
	}
	if _ddca.GradFill != nil {
		_gabbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ddca.GradFill, _gabbg)
	}
	if _ddca.PattFill != nil {
		_gdcca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ddca.PattFill, _gdcca)
	}
	return nil
}

const (
	ST_LineEndWidthUnset ST_LineEndWidth = 0
	ST_LineEndWidthSm    ST_LineEndWidth = 1
	ST_LineEndWidthMed   ST_LineEndWidth = 2
	ST_LineEndWidthLg    ST_LineEndWidth = 3
)

func (_fafa *CT_Bevel) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bfb := range start.Attr {
		if _bfb.Name.Local == "\u0077" {
			_fabfa, _dbba := _fg.ParseInt(_bfb.Value, 10, 64)
			if _dbba != nil {
				return _dbba
			}
			_fafa.WAttr = &_fabfa
			continue
		}
		if _bfb.Name.Local == "\u0068" {
			_ecbc, _ggfd := _fg.ParseInt(_bfb.Value, 10, 64)
			if _ggfd != nil {
				return _ggfd
			}
			_fafa.HAttr = &_ecbc
			continue
		}
		if _bfb.Name.Local == "\u0070\u0072\u0073\u0074" {
			_fafa.PrstAttr.UnmarshalXMLAttr(_bfb)
			continue
		}
	}
	for {
		_bcbc, _cecd := d.Token()
		if _cecd != nil {
			return _bb.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0065\u0076\u0065\u006c: \u0025\u0073", _cecd)
		}
		if _gfba, _cbb := _bcbc.(_g.EndElement); _cbb && _gfba.Name == start.Name {
			break
		}
	}
	return nil
}

func (_caede *ST_TextStrikeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abbcd, _gabbc := d.Token()
	if _gabbc != nil {
		return _gabbc
	}
	if _cdedg, _egcadg := _abbcd.(_g.EndElement); _egcadg && _cdedg.Name == start.Name {
		*_caede = 1
		return nil
	}
	if _dgdadf, _bbgegc := _abbcd.(_g.CharData); !_bbgegc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abbcd)
	} else {
		switch string(_dgdadf) {
		case "":
			*_caede = 0
		case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
			*_caede = 1
		case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
			*_caede = 2
		case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
			*_caede = 3
		}
	}
	_abbcd, _gabbc = d.Token()
	if _gabbc != nil {
		return _gabbc
	}
	if _gdcef, _ccgaa := _abbcd.(_g.EndElement); _ccgaa && _gdcef.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abbcd)
}

func (_dccdf *EG_TextBulletColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fbdggb:
	for {
		_abfef, _acagd := d.Token()
		if _acagd != nil {
			return _acagd
		}
		switch _fgecf := _abfef.(type) {
		case _g.StartElement:
			switch _fgecf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_dccdf.BuClrTx = NewCT_TextBulletColorFollowText()
				if _bgcdfc := d.DecodeElement(_dccdf.BuClrTx, &_fgecf); _bgcdfc != nil {
					return _bgcdfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_dccdf.BuClr = NewCT_Color()
				if _bfbga := d.DecodeElement(_dccdf.BuClr, &_fgecf); _bfbga != nil {
					return _bfbga
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075l\u006c\u0065\u0074\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _fgecf.Name)
				if _fddec := d.Skip(); _fddec != nil {
					return _fddec
				}
			}
		case _g.EndElement:
			break _fbdggb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ThemeableFillStyle and its children, prefixing error messages with path
func (_eagbb *EG_ThemeableFillStyle) ValidateWithPath(path string) error {
	if _eagbb.Fill != nil {
		if _fgefca := _eagbb.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _fgefca != nil {
			return _fgefca
		}
	}
	if _eagbb.FillRef != nil {
		if _geedd := _eagbb.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _geedd != nil {
			return _geedd
		}
	}
	return nil
}

type EG_LineFillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
}

func (_agacf ST_AnimationBuildType) String() string {
	switch _agacf {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}

// ValidateWithPath validates the CT_NonVisualDrawingShapeProps and its children, prefixing error messages with path
func (_eagcg *CT_NonVisualDrawingShapeProps) ValidateWithPath(path string) error {
	if _eagcg.SpLocks != nil {
		if _ddaaf := _eagcg.SpLocks.ValidateWithPath(path + "\u002f\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _ddaaf != nil {
			return _ddaaf
		}
	}
	if _eagcg.ExtLst != nil {
		if _fbbb := _eagcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbbb != nil {
			return _fbbb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorMRU and its children, prefixing error messages with path
func (_fdgc *CT_ColorMRU) ValidateWithPath(path string) error {
	for _bcabc, _dcf := range _fdgc.EG_ColorChoice {
		if _ggbab := _dcf.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _bcabc)); _ggbab != nil {
			return _ggbab
		}
	}
	return nil
}

func (_abfcg *CT_TextSpacingPoint) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abfcg.ValAttr = 0
	for _, _egafa := range start.Attr {
		if _egafa.Name.Local == "\u0076\u0061\u006c" {
			_egfcf, _fddcc := _fg.ParseInt(_egafa.Value, 10, 32)
			if _fddcc != nil {
				return _fddcc
			}
			_abfcg.ValAttr = int32(_egfcf)
			continue
		}
	}
	for {
		_gfded, _gceb := d.Token()
		if _gceb != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053p\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _gceb)
		}
		if _bffeg, _abffc := _gfded.(_g.EndElement); _abffc && _bffeg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewGraphic() *Graphic {
	_eeecfg := &Graphic{}
	_eeecfg.CT_GraphicalObject = *NewCT_GraphicalObject()
	return _eeecfg
}

func (_fcabe *ST_AnimationChartBuildType) Validate() error { return _fcabe.ValidateWithPath("") }

type ST_LineEndType byte

func (_fbfff ST_FontCollectionIndex) ValidateWithPath(path string) error {
	switch _fbfff {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbfff))
	}
	return nil
}

func NewCT_ThemeableLineStyle() *CT_ThemeableLineStyle {
	_bcafc := &CT_ThemeableLineStyle{}
	return _bcafc
}

// Validate validates the CT_TextLineBreak and its children
func (_fbfaa *CT_TextLineBreak) Validate() error {
	return _fbfaa.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b")
}

func (_bgggb *CT_TextNormalAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bgggb.FontScaleAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce"}, Value: _bb.Sprintf("\u0025\u0076", *_bgggb.FontScaleAttr)})
	}
	if _bgggb.LnSpcReductionAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_bgggb.LnSpcReductionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aebfg *CT_TableCol) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", _aebfg.WAttr)})
	e.EncodeToken(start)
	if _aebfg.ExtLst != nil {
		_dbbfg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aebfg.ExtLst, _dbbfg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LineJoinRound and its children, prefixing error messages with path
func (_eggb *CT_LineJoinRound) ValidateWithPath(path string) error { return nil }

func (_bcfeg ST_LightRigDirection) Validate() error { return _bcfeg.ValidateWithPath("") }

// ValidateWithPath validates the CT_CustomGeometry2D and its children, prefixing error messages with path
func (_aedg *CT_CustomGeometry2D) ValidateWithPath(path string) error {
	if _aedg.AvLst != nil {
		if _fdbba := _aedg.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _fdbba != nil {
			return _fdbba
		}
	}
	if _aedg.GdLst != nil {
		if _gfgb := _aedg.GdLst.ValidateWithPath(path + "\u002f\u0047\u0064\u004c\u0073\u0074"); _gfgb != nil {
			return _gfgb
		}
	}
	if _aedg.AhLst != nil {
		if _eafd := _aedg.AhLst.ValidateWithPath(path + "\u002f\u0041\u0068\u004c\u0073\u0074"); _eafd != nil {
			return _eafd
		}
	}
	if _aedg.CxnLst != nil {
		if _gfbf := _aedg.CxnLst.ValidateWithPath(path + "\u002fC\u0078\u006e\u004c\u0073\u0074"); _gfbf != nil {
			return _gfbf
		}
	}
	if _aedg.Rect != nil {
		if _gfcd := _aedg.Rect.ValidateWithPath(path + "\u002f\u0052\u0065c\u0074"); _gfcd != nil {
			return _gfcd
		}
	}
	if _fdade := _aedg.PathLst.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u004c\u0073\u0074"); _fdade != nil {
		return _fdade
	}
	return nil
}

// Validate validates the Blip and its children
func (_dce *Blip) Validate() error { return _dce.ValidateWithPath("\u0042\u006c\u0069\u0070") }

type CT_GvmlPicture struct {
	NvPicPr  *CT_GvmlPictureNonVisual
	BlipFill *CT_BlipFillProperties
	SpPr     *CT_ShapeProperties
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

func (_daebac *CT_TextSpacingPercent) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _daebac.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_ShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_Transform2D
	CustGeom   *CT_CustomGeometry2D
	PrstGeom   *CT_PresetGeometry2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	Ln         *CT_LineProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	Sp3d       *CT_Shape3D
	ExtLst     *CT_OfficeArtExtensionList
}

func (_egfggc ST_PresetLineDashVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_egfggc.String(), start)
}

type EG_Effect struct {
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

const (
	ST_RectAlignmentUnset ST_RectAlignment = 0
	ST_RectAlignmentTl    ST_RectAlignment = 1
	ST_RectAlignmentT     ST_RectAlignment = 2
	ST_RectAlignmentTr    ST_RectAlignment = 3
	ST_RectAlignmentL     ST_RectAlignment = 4
	ST_RectAlignmentCtr   ST_RectAlignment = 5
	ST_RectAlignmentR     ST_RectAlignment = 6
	ST_RectAlignmentBl    ST_RectAlignment = 7
	ST_RectAlignmentB     ST_RectAlignment = 8
	ST_RectAlignmentBr    ST_RectAlignment = 9
)

func (_efegag ST_PenAlignment) Validate() error { return _efegag.ValidateWithPath("") }

func (_bfbcc ST_BlendMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bfbcc.String(), start)
}

type EG_ColorTransform struct {
	Tint     *CT_PositiveFixedPercentage
	Shade    *CT_PositiveFixedPercentage
	Comp     *CT_ComplementTransform
	Inv      *CT_InverseTransform
	Gray     *CT_GrayscaleTransform
	Alpha    *CT_PositiveFixedPercentage
	AlphaOff *CT_FixedPercentage
	AlphaMod *CT_PositivePercentage
	Hue      *CT_PositiveFixedAngle
	HueOff   *CT_Angle
	HueMod   *CT_PositivePercentage
	Sat      *CT_Percentage
	SatOff   *CT_Percentage
	SatMod   *CT_Percentage
	Lum      *CT_Percentage
	LumOff   *CT_Percentage
	LumMod   *CT_Percentage
	Red      *CT_Percentage
	RedOff   *CT_Percentage
	RedMod   *CT_Percentage
	Green    *CT_Percentage
	GreenOff *CT_Percentage
	GreenMod *CT_Percentage
	Blue     *CT_Percentage
	BlueOff  *CT_Percentage
	BlueMod  *CT_Percentage
	Gamma    *CT_GammaTransform
	InvGamma *CT_InverseGammaTransform
}

type CT_GroupShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_GroupTransform2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	ExtLst     *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_GradientFillProperties and its children, prefixing error messages with path
func (_ecfb *CT_GradientFillProperties) ValidateWithPath(path string) error {
	if _cafbb := _ecfb.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _cafbb != nil {
		return _cafbb
	}
	if _ecfb.GsLst != nil {
		if _fbbgb := _ecfb.GsLst.ValidateWithPath(path + "\u002f\u0047\u0073\u004c\u0073\u0074"); _fbbgb != nil {
			return _fbbgb
		}
	}
	if _ecfb.Lin != nil {
		if _gdfgc := _ecfb.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _gdfgc != nil {
			return _gdfgc
		}
	}
	if _ecfb.Path != nil {
		if _cegaf := _ecfb.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _cegaf != nil {
			return _cegaf
		}
	}
	if _ecfb.TileRect != nil {
		if _cabg := _ecfb.TileRect.ValidateWithPath(path + "\u002fT\u0069\u006c\u0065\u0052\u0065\u0063t"); _cabg != nil {
			return _cabg
		}
	}
	return nil
}

func (_beagg *EG_ColorTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _beagg.Tint != nil {
		_afeea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_beagg.Tint, _afeea)
	}
	if _beagg.Shade != nil {
		_dbcfc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0068\u0061\u0064\u0065"}}
		e.EncodeElement(_beagg.Shade, _dbcfc)
	}
	if _beagg.Comp != nil {
		_aggae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006d\u0070"}}
		e.EncodeElement(_beagg.Comp, _aggae)
	}
	if _beagg.Inv != nil {
		_ebdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0069n\u0076"}}
		e.EncodeElement(_beagg.Inv, _ebdb)
	}
	if _beagg.Gray != nil {
		_gcef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0079"}}
		e.EncodeElement(_beagg.Gray, _gcef)
	}
	if _beagg.Alpha != nil {
		_cbacb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u006c\u0070\u0068\u0061"}}
		e.EncodeElement(_beagg.Alpha, _cbacb)
	}
	if _beagg.AlphaOff != nil {
		_cdgdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}}
		e.EncodeElement(_beagg.AlphaOff, _cdgdf)
	}
	if _beagg.AlphaMod != nil {
		_bfgcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_beagg.AlphaMod, _bfgcd)
	}
	if _beagg.Hue != nil {
		_ebagg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068u\u0065"}}
		e.EncodeElement(_beagg.Hue, _ebagg)
	}
	if _beagg.HueOff != nil {
		_acgbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004f\u0066\u0066"}}
		e.EncodeElement(_beagg.HueOff, _acgbg)
	}
	if _beagg.HueMod != nil {
		_fddac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004d\u006f\u0064"}}
		e.EncodeElement(_beagg.HueMod, _fddac)
	}
	if _beagg.Sat != nil {
		_gfaae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073a\u0074"}}
		e.EncodeElement(_beagg.Sat, _gfaae)
	}
	if _beagg.SatOff != nil {
		_bgdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004f\u0066\u0066"}}
		e.EncodeElement(_beagg.SatOff, _bgdb)
	}
	if _beagg.SatMod != nil {
		_fadfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004d\u006f\u0064"}}
		e.EncodeElement(_beagg.SatMod, _fadfa)
	}
	if _beagg.Lum != nil {
		_fcgfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_beagg.Lum, _fcgfc)
	}
	if _beagg.LumOff != nil {
		_ffcad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004f\u0066\u0066"}}
		e.EncodeElement(_beagg.LumOff, _ffcad)
	}
	if _beagg.LumMod != nil {
		_acdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004d\u006f\u0064"}}
		e.EncodeElement(_beagg.LumMod, _acdd)
	}
	if _beagg.Red != nil {
		_cbggf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0064"}}
		e.EncodeElement(_beagg.Red, _cbggf)
	}
	if _beagg.RedOff != nil {
		_fagac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004f\u0066\u0066"}}
		e.EncodeElement(_beagg.RedOff, _fagac)
	}
	if _beagg.RedMod != nil {
		_ecgfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004d\u006f\u0064"}}
		e.EncodeElement(_beagg.RedMod, _ecgfd)
	}
	if _beagg.Green != nil {
		_cfdga := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0065\u0065\u006e"}}
		e.EncodeElement(_beagg.Green, _cfdga)
	}
	if _beagg.GreenOff != nil {
		_ffecf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}}
		e.EncodeElement(_beagg.GreenOff, _ffecf)
	}
	if _beagg.GreenMod != nil {
		_edeecb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}}
		e.EncodeElement(_beagg.GreenMod, _edeecb)
	}
	if _beagg.Blue != nil {
		_adcda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0065"}}
		e.EncodeElement(_beagg.Blue, _adcda)
	}
	if _beagg.BlueOff != nil {
		_dfge := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004f\u0066f"}}
		e.EncodeElement(_beagg.BlueOff, _dfge)
	}
	if _beagg.BlueMod != nil {
		_eaega := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004d\u006fd"}}
		e.EncodeElement(_beagg.BlueMod, _eaega)
	}
	if _beagg.Gamma != nil {
		_gaagag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_beagg.Gamma, _gaagag)
	}
	if _beagg.InvGamma != nil {
		_ffdfbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_beagg.InvGamma, _ffdfbf)
	}
	return nil
}

func (_edbeg ST_LineEndWidth) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_edbeg.String(), start)
}

func (_ccegae ST_PresetPatternVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_aeaef := _g.Attr{}
	_aeaef.Name = name
	switch _ccegae {
	case ST_PresetPatternValUnset:
		_aeaef.Value = ""
	case ST_PresetPatternValPct5:
		_aeaef.Value = "\u0070\u0063\u0074\u0035"
	case ST_PresetPatternValPct10:
		_aeaef.Value = "\u0070\u0063\u00741\u0030"
	case ST_PresetPatternValPct20:
		_aeaef.Value = "\u0070\u0063\u00742\u0030"
	case ST_PresetPatternValPct25:
		_aeaef.Value = "\u0070\u0063\u00742\u0035"
	case ST_PresetPatternValPct30:
		_aeaef.Value = "\u0070\u0063\u00743\u0030"
	case ST_PresetPatternValPct40:
		_aeaef.Value = "\u0070\u0063\u00744\u0030"
	case ST_PresetPatternValPct50:
		_aeaef.Value = "\u0070\u0063\u00745\u0030"
	case ST_PresetPatternValPct60:
		_aeaef.Value = "\u0070\u0063\u00746\u0030"
	case ST_PresetPatternValPct70:
		_aeaef.Value = "\u0070\u0063\u00747\u0030"
	case ST_PresetPatternValPct75:
		_aeaef.Value = "\u0070\u0063\u00747\u0035"
	case ST_PresetPatternValPct80:
		_aeaef.Value = "\u0070\u0063\u00748\u0030"
	case ST_PresetPatternValPct90:
		_aeaef.Value = "\u0070\u0063\u00749\u0030"
	case ST_PresetPatternValHorz:
		_aeaef.Value = "\u0068\u006f\u0072\u007a"
	case ST_PresetPatternValVert:
		_aeaef.Value = "\u0076\u0065\u0072\u0074"
	case ST_PresetPatternValLtHorz:
		_aeaef.Value = "\u006c\u0074\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValLtVert:
		_aeaef.Value = "\u006c\u0074\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDkHorz:
		_aeaef.Value = "\u0064\u006b\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDkVert:
		_aeaef.Value = "\u0064\u006b\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValNarHorz:
		_aeaef.Value = "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValNarVert:
		_aeaef.Value = "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDashHorz:
		_aeaef.Value = "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDashVert:
		_aeaef.Value = "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValCross:
		_aeaef.Value = "\u0063\u0072\u006fs\u0073"
	case ST_PresetPatternValDnDiag:
		_aeaef.Value = "\u0064\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValUpDiag:
		_aeaef.Value = "\u0075\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtDnDiag:
		_aeaef.Value = "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtUpDiag:
		_aeaef.Value = "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkDnDiag:
		_aeaef.Value = "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkUpDiag:
		_aeaef.Value = "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdDnDiag:
		_aeaef.Value = "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdUpDiag:
		_aeaef.Value = "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashDnDiag:
		_aeaef.Value = "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashUpDiag:
		_aeaef.Value = "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDiagCross:
		_aeaef.Value = "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case ST_PresetPatternValSmCheck:
		_aeaef.Value = "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValLgCheck:
		_aeaef.Value = "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValSmGrid:
		_aeaef.Value = "\u0073\u006d\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValLgGrid:
		_aeaef.Value = "\u006c\u0067\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValDotGrid:
		_aeaef.Value = "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValSmConfetti:
		_aeaef.Value = "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValLgConfetti:
		_aeaef.Value = "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValHorzBrick:
		_aeaef.Value = "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValDiagBrick:
		_aeaef.Value = "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValSolidDmnd:
		_aeaef.Value = "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case ST_PresetPatternValOpenDmnd:
		_aeaef.Value = "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValDotDmnd:
		_aeaef.Value = "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValPlaid:
		_aeaef.Value = "\u0070\u006c\u0061i\u0064"
	case ST_PresetPatternValSphere:
		_aeaef.Value = "\u0073\u0070\u0068\u0065\u0072\u0065"
	case ST_PresetPatternValWeave:
		_aeaef.Value = "\u0077\u0065\u0061v\u0065"
	case ST_PresetPatternValDivot:
		_aeaef.Value = "\u0064\u0069\u0076o\u0074"
	case ST_PresetPatternValShingle:
		_aeaef.Value = "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case ST_PresetPatternValWave:
		_aeaef.Value = "\u0077\u0061\u0076\u0065"
	case ST_PresetPatternValTrellis:
		_aeaef.Value = "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case ST_PresetPatternValZigZag:
		_aeaef.Value = "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return _aeaef, nil
}

// Validate validates the EG_ColorTransform and its children
func (_gfead *EG_ColorTransform) Validate() error {
	return _gfead.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

type CT_GvmlShapeNonVisual struct {
	CNvPr   *CT_NonVisualDrawingProps
	CNvSpPr *CT_NonVisualDrawingShapeProps
}

func (_cfded *CT_FillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dgga:
	for {
		_ecafd, _cgba := d.Token()
		if _cgba != nil {
			return _cgba
		}
		switch _bega := _ecafd.(type) {
		case _g.StartElement:
			switch _bega.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cfded.NoFill = NewCT_NoFillProperties()
				if _ebdeb := d.DecodeElement(_cfded.NoFill, &_bega); _ebdeb != nil {
					return _ebdeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cfded.SolidFill = NewCT_SolidColorFillProperties()
				if _agbe := d.DecodeElement(_cfded.SolidFill, &_bega); _agbe != nil {
					return _agbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cfded.GradFill = NewCT_GradientFillProperties()
				if _afga := d.DecodeElement(_cfded.GradFill, &_bega); _afga != nil {
					return _afga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cfded.BlipFill = NewCT_BlipFillProperties()
				if _facd := d.DecodeElement(_cfded.BlipFill, &_bega); _facd != nil {
					return _facd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cfded.PattFill = NewCT_PatternFillProperties()
				if _cafa := d.DecodeElement(_cfded.PattFill, &_bega); _cafa != nil {
					return _cafa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cfded.GrpFill = NewCT_GroupFillProperties()
				if _begae := d.DecodeElement(_cfded.GrpFill, &_bega); _begae != nil {
					return _begae
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bega.Name)
				if _adbc := d.Skip(); _adbc != nil {
					return _adbc
				}
			}
		case _g.EndElement:
			break _dgga
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_ColorSchemeList() *CT_ColorSchemeList { _affcd := &CT_ColorSchemeList{}; return _affcd }

func (_befgef *ST_TextFontScalePercentOrPercentString) ValidateWithPath(path string) error {
	_gegfd := []string{}
	if _befgef.ST_TextFontScalePercent != nil {
		_gegfd = append(_gegfd, "\u0053\u0054\u005fTe\u0078\u0074\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006c\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _befgef.ST_Percentage != nil {
		_gegfd = append(_gegfd, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_gegfd) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gegfd)
	}
	return nil
}

// ST_AnimationChartBuildType is a union type
type ST_AnimationChartBuildType struct {
	ST_AnimationBuildType          ST_AnimationBuildType
	ST_AnimationChartOnlyBuildType ST_AnimationChartOnlyBuildType
}

func (_agce *CT_RegularTextRun) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _agce.RPr != nil {
		_bcdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_agce.RPr, _bcdf)
	}
	_aggfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074"}}
	_fc.AddPreserveSpaceAttr(&_aggfe, _agce.T)
	e.EncodeElement(_agce.T, _aggfe)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OuterShadowEffect and its children
func (_ceee *CT_OuterShadowEffect) Validate() error {
	return _ceee.ValidateWithPath("C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

func ParseUnionST_AdjAngle(s string) (ST_AdjAngle, error) {
	_cfgeg := ST_AdjAngle{}
	_ggabbf, _agdcbf := _fg.ParseInt(s, 10, 64)
	if _agdcbf != nil {
		_cfgeg.ST_GeomGuideName = &s
	} else {
		_adcfd := int32(_ggabbf)
		_cfgeg.ST_Angle = &_adcfd
	}
	return _cfgeg, nil
}

// ValidateWithPath validates the CT_HSLEffect and its children, prefixing error messages with path
func (_dfbg *CT_HSLEffect) ValidateWithPath(path string) error {
	if _dfbg.HueAttr != nil {
		if *_dfbg.HueAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dfbg.HueAttr)
		}
		if *_dfbg.HueAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dfbg.HueAttr)
		}
	}
	if _dfbg.SatAttr != nil {
		if _dafd := _dfbg.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _dafd != nil {
			return _dafd
		}
	}
	if _dfbg.LumAttr != nil {
		if _dgdba := _dfbg.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _dgdba != nil {
			return _dgdba
		}
	}
	return nil
}

type ST_TextCapsType byte

// ValidateWithPath validates the EG_FillProperties and its children, prefixing error messages with path
func (_afedd *EG_FillProperties) ValidateWithPath(path string) error {
	if _afedd.NoFill != nil {
		if _bcaaa := _afedd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bcaaa != nil {
			return _bcaaa
		}
	}
	if _afedd.SolidFill != nil {
		if _bdeaff := _afedd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _bdeaff != nil {
			return _bdeaff
		}
	}
	if _afedd.GradFill != nil {
		if _efcff := _afedd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _efcff != nil {
			return _efcff
		}
	}
	if _afedd.BlipFill != nil {
		if _fbgdcc := _afedd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fbgdcc != nil {
			return _fbgdcc
		}
	}
	if _afedd.PattFill != nil {
		if _gcca := _afedd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gcca != nil {
			return _gcca
		}
	}
	if _afedd.GrpFill != nil {
		if _dadae := _afedd.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dadae != nil {
			return _dadae
		}
	}
	return nil
}

func (_cgcfcg *ST_PositivePercentage) Validate() error { return _cgcfcg.ValidateWithPath("") }

func (_gcdff ST_LineCap) ValidateWithPath(path string) error {
	switch _gcdff {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcdff))
	}
	return nil
}

func (_degaf ST_BlipCompression) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_degaf.String(), start)
}

func (_begbge ST_AdjCoordinate) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _begbge.ST_Coordinate != nil {
		e.Encode(_begbge.ST_Coordinate)
	}
	if _begbge.ST_GeomGuideName != nil {
		e.EncodeToken(_g.CharData(*_begbge.ST_GeomGuideName))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func NewCT_Bevel() *CT_Bevel { _dgfd := &CT_Bevel{}; return _dgfd }

type CT_FillOverlayEffect struct {
	BlendAttr ST_BlendMode
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func NewCT_GvmlPictureNonVisual() *CT_GvmlPictureNonVisual {
	_gfcab := &CT_GvmlPictureNonVisual{}
	_gfcab.CNvPr = NewCT_NonVisualDrawingProps()
	_gfcab.CNvPicPr = NewCT_NonVisualPictureProperties()
	return _gfcab
}

// Validate validates the CT_BaseStyles and its children
func (_fcba *CT_BaseStyles) Validate() error {
	return _fcba.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073")
}

const (
	ST_TextUnderlineTypeUnset           ST_TextUnderlineType = 0
	ST_TextUnderlineTypeNone            ST_TextUnderlineType = 1
	ST_TextUnderlineTypeWords           ST_TextUnderlineType = 2
	ST_TextUnderlineTypeSng             ST_TextUnderlineType = 3
	ST_TextUnderlineTypeDbl             ST_TextUnderlineType = 4
	ST_TextUnderlineTypeHeavy           ST_TextUnderlineType = 5
	ST_TextUnderlineTypeDotted          ST_TextUnderlineType = 6
	ST_TextUnderlineTypeDottedHeavy     ST_TextUnderlineType = 7
	ST_TextUnderlineTypeDash            ST_TextUnderlineType = 8
	ST_TextUnderlineTypeDashHeavy       ST_TextUnderlineType = 9
	ST_TextUnderlineTypeDashLong        ST_TextUnderlineType = 10
	ST_TextUnderlineTypeDashLongHeavy   ST_TextUnderlineType = 11
	ST_TextUnderlineTypeDotDash         ST_TextUnderlineType = 12
	ST_TextUnderlineTypeDotDashHeavy    ST_TextUnderlineType = 13
	ST_TextUnderlineTypeDotDotDash      ST_TextUnderlineType = 14
	ST_TextUnderlineTypeDotDotDashHeavy ST_TextUnderlineType = 15
	ST_TextUnderlineTypeWavy            ST_TextUnderlineType = 16
	ST_TextUnderlineTypeWavyHeavy       ST_TextUnderlineType = 17
	ST_TextUnderlineTypeWavyDbl         ST_TextUnderlineType = 18
)

type CT_TextBlipBullet struct{ Blip *CT_Blip }

func NewCT_EffectReference() *CT_EffectReference { _cdagg := &CT_EffectReference{}; return _cdagg }

func (_aeef *CT_OfficeStyleSheet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aeef.ThemeElements = NewCT_BaseStyles()
	for _, _edce := range start.Attr {
		if _edce.Name.Local == "\u006e\u0061\u006d\u0065" {
			_daeg, _gcgea := _edce.Value, error(nil)
			if _gcgea != nil {
				return _gcgea
			}
			_aeef.NameAttr = &_daeg
			continue
		}
	}
_cbgbe:
	for {
		_cfcc, _caceg := d.Token()
		if _caceg != nil {
			return _caceg
		}
		switch _efefb := _cfcc.(type) {
		case _g.StartElement:
			switch _efefb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _dfacb := d.DecodeElement(_aeef.ThemeElements, &_efefb); _dfacb != nil {
					return _dfacb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_aeef.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _fefed := d.DecodeElement(_aeef.ObjectDefaults, &_efefb); _fefed != nil {
					return _fefed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_aeef.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _cgbbg := d.DecodeElement(_aeef.ExtraClrSchemeLst, &_efefb); _cgbbg != nil {
					return _cgbbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_aeef.CustClrLst = NewCT_CustomColorList()
				if _cbbbc := d.DecodeElement(_aeef.CustClrLst, &_efefb); _cbbbc != nil {
					return _cbbbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeef.ExtLst = NewCT_OfficeArtExtensionList()
				if _beegf := d.DecodeElement(_aeef.ExtLst, &_efefb); _beegf != nil {
					return _beegf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0053ty\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _efefb.Name)
				if _ddbabc := d.Skip(); _ddbabc != nil {
					return _ddbabc
				}
			}
		case _g.EndElement:
			break _cbgbe
		case _g.CharData:
		}
	}
	return nil
}

func (_ggfb *CT_EffectContainer) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ggfb.TypeAttr != ST_EffectContainerTypeUnset {
		_gddc, _ddeb := _ggfb.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ddeb != nil {
			return _ddeb
		}
		start.Attr = append(start.Attr, _gddc)
	}
	if _ggfb.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_ggfb.NameAttr)})
	}
	e.EncodeToken(start)
	if _ggfb.Cont != nil {
		_bdege := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_ggfb.Cont, _bdege)
	}
	if _ggfb.Effect != nil {
		_dfcgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_ggfb.Effect, _dfcgc)
	}
	if _ggfb.AlphaBiLevel != nil {
		_caee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_ggfb.AlphaBiLevel, _caee)
	}
	if _ggfb.AlphaCeiling != nil {
		_fdgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_ggfb.AlphaCeiling, _fdgf)
	}
	if _ggfb.AlphaFloor != nil {
		_ecbcf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_ggfb.AlphaFloor, _ecbcf)
	}
	if _ggfb.AlphaInv != nil {
		_fgcdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_ggfb.AlphaInv, _fgcdc)
	}
	if _ggfb.AlphaMod != nil {
		_bdbac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_ggfb.AlphaMod, _bdbac)
	}
	if _ggfb.AlphaModFix != nil {
		_ebdgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_ggfb.AlphaModFix, _ebdgc)
	}
	if _ggfb.AlphaOutset != nil {
		_gdgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_ggfb.AlphaOutset, _gdgf)
	}
	if _ggfb.AlphaRepl != nil {
		_gbbg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_ggfb.AlphaRepl, _gbbg)
	}
	if _ggfb.BiLevel != nil {
		_cdafg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_ggfb.BiLevel, _cdafg)
	}
	if _ggfb.Blend != nil {
		_eddd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_ggfb.Blend, _eddd)
	}
	if _ggfb.Blur != nil {
		_abcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_ggfb.Blur, _abcd)
	}
	if _ggfb.ClrChange != nil {
		_efgdb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_ggfb.ClrChange, _efgdb)
	}
	if _ggfb.ClrRepl != nil {
		_fdaa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_ggfb.ClrRepl, _fdaa)
	}
	if _ggfb.Duotone != nil {
		_dgfabg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_ggfb.Duotone, _dgfabg)
	}
	if _ggfb.Fill != nil {
		_edfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_ggfb.Fill, _edfa)
	}
	if _ggfb.FillOverlay != nil {
		_fdfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_ggfb.FillOverlay, _fdfb)
	}
	if _ggfb.Glow != nil {
		_bace := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_ggfb.Glow, _bace)
	}
	if _ggfb.Grayscl != nil {
		_agge := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_ggfb.Grayscl, _agge)
	}
	if _ggfb.Hsl != nil {
		_bagfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_ggfb.Hsl, _bagfc)
	}
	if _ggfb.InnerShdw != nil {
		_cedf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ggfb.InnerShdw, _cedf)
	}
	if _ggfb.Lum != nil {
		_ggaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_ggfb.Lum, _ggaa)
	}
	if _ggfb.OuterShdw != nil {
		_gdgcd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ggfb.OuterShdw, _gdgcd)
	}
	if _ggfb.PrstShdw != nil {
		_fccc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ggfb.PrstShdw, _fccc)
	}
	if _ggfb.Reflection != nil {
		_ecba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ggfb.Reflection, _ecba)
	}
	if _ggfb.RelOff != nil {
		_gbbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_ggfb.RelOff, _gbbd)
	}
	if _ggfb.SoftEdge != nil {
		_fbea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_ggfb.SoftEdge, _fbea)
	}
	if _ggfb.Tint != nil {
		_ebad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_ggfb.Tint, _ebad)
	}
	if _ggfb.Xfrm != nil {
		_eecd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_ggfb.Xfrm, _eecd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cefbbf ST_AnimationChartOnlyBuildType) ValidateWithPath(path string) error {
	switch _cefbbf {
	case 0, 1, 2, 3, 4:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cefbbf))
	}
	return nil
}

func (_deeee *ST_PresetShadowVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_deeee = 0
	case "\u0073\u0068\u0064w\u0031":
		*_deeee = 1
	case "\u0073\u0068\u0064w\u0032":
		*_deeee = 2
	case "\u0073\u0068\u0064w\u0033":
		*_deeee = 3
	case "\u0073\u0068\u0064w\u0034":
		*_deeee = 4
	case "\u0073\u0068\u0064w\u0035":
		*_deeee = 5
	case "\u0073\u0068\u0064w\u0036":
		*_deeee = 6
	case "\u0073\u0068\u0064w\u0037":
		*_deeee = 7
	case "\u0073\u0068\u0064w\u0038":
		*_deeee = 8
	case "\u0073\u0068\u0064w\u0039":
		*_deeee = 9
	case "\u0073\u0068\u0064\u0077\u0031\u0030":
		*_deeee = 10
	case "\u0073\u0068\u0064\u0077\u0031\u0031":
		*_deeee = 11
	case "\u0073\u0068\u0064\u0077\u0031\u0032":
		*_deeee = 12
	case "\u0073\u0068\u0064\u0077\u0031\u0033":
		*_deeee = 13
	case "\u0073\u0068\u0064\u0077\u0031\u0034":
		*_deeee = 14
	case "\u0073\u0068\u0064\u0077\u0031\u0035":
		*_deeee = 15
	case "\u0073\u0068\u0064\u0077\u0031\u0036":
		*_deeee = 16
	case "\u0073\u0068\u0064\u0077\u0031\u0037":
		*_deeee = 17
	case "\u0073\u0068\u0064\u0077\u0031\u0038":
		*_deeee = 18
	case "\u0073\u0068\u0064\u0077\u0031\u0039":
		*_deeee = 19
	case "\u0073\u0068\u0064\u0077\u0032\u0030":
		*_deeee = 20
	}
	return nil
}

func (_agceg ST_TextUnderlineType) String() string {
	switch _agceg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u006f\u0072d\u0073"
	case 3:
		return "\u0073\u006e\u0067"
	case 4:
		return "\u0064\u0062\u006c"
	case 5:
		return "\u0068\u0065\u0061v\u0079"
	case 6:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 7:
		return "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case 8:
		return "\u0064\u0061\u0073\u0068"
	case 9:
		return "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case 10:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case 11:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case 12:
		return "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case 13:
		return "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 14:
		return "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case 15:
		return "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 16:
		return "\u0077\u0061\u0076\u0079"
	case 17:
		return "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case 18:
		return "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return ""
}

type CT_Connection struct {
	IdAttr  uint32
	IdxAttr uint32
}

func NewCT_BaseStyles() *CT_BaseStyles {
	_eeb := &CT_BaseStyles{}
	_eeb.ClrScheme = NewCT_ColorScheme()
	_eeb.FontScheme = NewCT_FontScheme()
	_eeb.FmtScheme = NewCT_StyleMatrix()
	return _eeb
}

func (_facfbb *ST_AdjAngle) ValidateWithPath(path string) error {
	_bddcd := []string{}
	if _facfbb.ST_Angle != nil {
		_bddcd = append(_bddcd, "\u0053\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
	}
	if _facfbb.ST_GeomGuideName != nil {
		_bddcd = append(_bddcd, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_bddcd) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bddcd)
	}
	return nil
}

func (_dcce *CT_FillEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dffgf:
	for {
		_ecbba, _gadc := d.Token()
		if _gadc != nil {
			return _gadc
		}
		switch _dbcc := _ecbba.(type) {
		case _g.StartElement:
			switch _dbcc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_dcce.NoFill = NewCT_NoFillProperties()
				if _dbdfgc := d.DecodeElement(_dcce.NoFill, &_dbcc); _dbdfgc != nil {
					return _dbdfgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dcce.SolidFill = NewCT_SolidColorFillProperties()
				if _febc := d.DecodeElement(_dcce.SolidFill, &_dbcc); _febc != nil {
					return _febc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dcce.GradFill = NewCT_GradientFillProperties()
				if _cgcc := d.DecodeElement(_dcce.GradFill, &_dbcc); _cgcc != nil {
					return _cgcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_dcce.BlipFill = NewCT_BlipFillProperties()
				if _gdaef := d.DecodeElement(_dcce.BlipFill, &_dbcc); _gdaef != nil {
					return _gdaef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dcce.PattFill = NewCT_PatternFillProperties()
				if _abdfc := d.DecodeElement(_dcce.PattFill, &_dbcc); _abdfc != nil {
					return _abdfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_dcce.GrpFill = NewCT_GroupFillProperties()
				if _adde := d.DecodeElement(_dcce.GrpFill, &_dbcc); _adde != nil {
					return _adde
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _dbcc.Name)
				if _cecfe := d.Skip(); _cecfe != nil {
					return _cecfe
				}
			}
		case _g.EndElement:
			break _dffgf
		case _g.CharData:
		}
	}
	return nil
}

func (_ddaa *CT_Connection) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _ddaa.IdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _ddaa.IdxAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dfbgd *CT_Path2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dfbgd.WAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", *_dfbgd.WAttr)})
	}
	if _dfbgd.HAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068"}, Value: _bb.Sprintf("\u0025\u0076", *_dfbgd.HAttr)})
	}
	if _dfbgd.FillAttr != ST_PathFillModeUnset {
		_gcdg, _fadde := _dfbgd.FillAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _fadde != nil {
			return _fadde
		}
		start.Attr = append(start.Attr, _gcdg)
	}
	if _dfbgd.StrokeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0072\u006f\u006b\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dfbgd.StrokeAttr))})
	}
	if _dfbgd.ExtrusionOkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dfbgd.ExtrusionOkAttr))})
	}
	e.EncodeToken(start)
	if _dfbgd.Close != nil {
		_gedcf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u006f\u0073\u0065"}}
		for _, _agfdd := range _dfbgd.Close {
			e.EncodeElement(_agfdd, _gedcf)
		}
	}
	if _dfbgd.MoveTo != nil {
		_ebfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006d\u006f\u0076\u0065\u0054\u006f"}}
		for _, _bdcfef := range _dfbgd.MoveTo {
			e.EncodeElement(_bdcfef, _ebfa)
		}
	}
	if _dfbgd.LnTo != nil {
		_deaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006f"}}
		for _, _bacgb := range _dfbgd.LnTo {
			e.EncodeElement(_bacgb, _deaa)
		}
	}
	if _dfbgd.ArcTo != nil {
		_acba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0072\u0063\u0054\u006f"}}
		for _, _badgc := range _dfbgd.ArcTo {
			e.EncodeElement(_badgc, _acba)
		}
	}
	if _dfbgd.QuadBezTo != nil {
		_aaagf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0071\u0075\u0061\u0064\u0042\u0065\u007a\u0054\u006f"}}
		for _, _fbgb := range _dfbgd.QuadBezTo {
			e.EncodeElement(_fbgb, _aaagf)
		}
	}
	if _dfbgd.CubicBezTo != nil {
		_dbbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063u\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}}
		for _, _egeec := range _dfbgd.CubicBezTo {
			e.EncodeElement(_egeec, _dbbf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_StyleMatrix and its children
func (_fcgcf *CT_StyleMatrix) Validate() error {
	return _fcgcf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078")
}

func (_fgcaf ST_PresetColorVal) ValidateWithPath(path string) error {
	switch _fgcaf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgcaf))
	}
	return nil
}

func NewCT_RegularTextRun() *CT_RegularTextRun { _abeeg := &CT_RegularTextRun{}; return _abeeg }

// ValidateWithPath validates the CT_AnimationGraphicalObjectBuildProperties and its children, prefixing error messages with path
func (_facb *CT_AnimationGraphicalObjectBuildProperties) ValidateWithPath(path string) error {
	if _facb.BldDgm != nil {
		if _ccff := _facb.BldDgm.ValidateWithPath(path + "\u002fB\u006c\u0064\u0044\u0067\u006d"); _ccff != nil {
			return _ccff
		}
	}
	if _facb.BldChart != nil {
		if _cbg := _facb.BldChart.ValidateWithPath(path + "\u002fB\u006c\u0064\u0043\u0068\u0061\u0072t"); _cbg != nil {
			return _cbg
		}
	}
	return nil
}

type CT_TextNoBullet struct{}

type CT_NonVisualDrawingProps struct {
	IdAttr     uint32
	NameAttr   string
	DescrAttr  *string
	HiddenAttr *bool
	TitleAttr  *string
	HlinkClick *CT_Hyperlink
	HlinkHover *CT_Hyperlink
	ExtLst     *CT_OfficeArtExtensionList
}

func (_cfgb *CT_TextTabStop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dccd := range start.Attr {
		if _dccd.Name.Local == "\u0070\u006f\u0073" {
			_daaad, _adfcc := ParseUnionST_Coordinate32(_dccd.Value)
			if _adfcc != nil {
				return _adfcc
			}
			_cfgb.PosAttr = &_daaad
			continue
		}
		if _dccd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_cfgb.AlgnAttr.UnmarshalXMLAttr(_dccd)
			continue
		}
	}
	for {
		_gdce, _fdcdc := d.Token()
		if _fdcdc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0065\u0078\u0074\u0054\u0061\u0062\u0053\u0074\u006f\u0070:\u0020\u0025\u0073", _fdcdc)
		}
		if _aggfg, _bddac := _gdce.(_g.EndElement); _bddac && _aggfg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dgeeaf *EG_TextBulletSize) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_egcca:
	for {
		_dffdbc, _gffeefc := d.Token()
		if _gffeefc != nil {
			return _gffeefc
		}
		switch _faedf := _dffdbc.(type) {
		case _g.StartElement:
			switch _faedf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_dgeeaf.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _fgeada := d.DecodeElement(_dgeeaf.BuSzTx, &_faedf); _fgeada != nil {
					return _fgeada
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_dgeeaf.BuSzPct = NewCT_TextBulletSizePercent()
				if _gadbfb := d.DecodeElement(_dgeeaf.BuSzPct, &_faedf); _gadbfb != nil {
					return _gadbfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_dgeeaf.BuSzPts = NewCT_TextBulletSizePoint()
				if _eagbf := d.DecodeElement(_dgeeaf.BuSzPts, &_faedf); _eagbf != nil {
					return _eagbf
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0020\u0025\u0076", _faedf.Name)
				if _ceafcd := d.Skip(); _ceafcd != nil {
					return _ceafcd
				}
			}
		case _g.EndElement:
			break _egcca
		case _g.CharData:
		}
	}
	return nil
}

func (_gdcbd ST_PresetMaterialType) Validate() error { return _gdcbd.ValidateWithPath("") }

type CT_TableBackgroundStyle struct {
	Fill      *CT_FillProperties
	FillRef   *CT_StyleMatrixReference
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

// ValidateWithPath validates the CT_TextTabStopList and its children, prefixing error messages with path
func (_ggfdfe *CT_TextTabStopList) ValidateWithPath(path string) error {
	for _fafef, _adgbec := range _ggfdfe.Tab {
		if _acbgg := _adgbec.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u005b\u0025\u0064\u005d", path, _fafef)); _acbgg != nil {
			return _acbgg
		}
	}
	return nil
}

type CT_AnimationDgmBuildProperties struct {
	BldAttr *ST_AnimationDgmBuildType
	RevAttr *bool
}

func NewCT_Path2DList() *CT_Path2DList { _dfbeg := &CT_Path2DList{}; return _dfbeg }

func NewCT_TextSpacing() *CT_TextSpacing { _fcaec := &CT_TextSpacing{}; return _fcaec }

type CT_GlowEffect struct {
	RadAttr   *int64
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_dab *CT_AudioFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _egga := range start.Attr {
		if _egga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _egga.Name.Local == "\u006c\u0069\u006e\u006b" || _egga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _egga.Name.Local == "\u006c\u0069\u006e\u006b" {
			_gfb, _ggdf := _egga.Value, error(nil)
			if _ggdf != nil {
				return _ggdf
			}
			_dab.LinkAttr = _gfb
			continue
		}
		if _egga.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_aca, _edbg := _egga.Value, error(nil)
			if _edbg != nil {
				return _edbg
			}
			_dab.ContentTypeAttr = &_aca
			continue
		}
	}
_fda:
	for {
		_fee, _eaac := d.Token()
		if _eaac != nil {
			return _eaac
		}
		switch _bggb := _fee.(type) {
		case _g.StartElement:
			switch _bggb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dab.ExtLst = NewCT_OfficeArtExtensionList()
				if _aed := d.DecodeElement(_dab.ExtLst, &_bggb); _aed != nil {
					return _aed
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_A\u0075\u0064i\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _bggb.Name)
				if _dgg := d.Skip(); _dgg != nil {
					return _dgg
				}
			}
		case _g.EndElement:
			break _fda
		case _g.CharData:
		}
	}
	return nil
}

func (_gfadgf *CT_StyleMatrix) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gfadgf.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_gfadgf.NameAttr)})
	}
	e.EncodeToken(start)
	_efdfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfadgf.FillStyleLst, _efdfe)
	_ccee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfadgf.LnStyleLst, _ccee)
	_gdec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ae\u0066\u0066\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfadgf.EffectStyleLst, _gdec)
	_acef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ab\u0067\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfadgf.BgFillStyleLst, _acef)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bfbcf *CT_GrayscaleTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GradientStopList and its children
func (_dbddb *CT_GradientStopList) Validate() error {
	return _dbddb.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}

func (_bddg *CT_Boolean) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bddg.ValAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_bddg.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewEG_ThemeableFillStyle() *EG_ThemeableFillStyle {
	_ccfgeb := &EG_ThemeableFillStyle{}
	return _ccfgeb
}

func (_fadbg ST_TextAlignType) Validate() error { return _fadbg.ValidateWithPath("") }

func (_edagc ST_Coordinate) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _edagc.ST_CoordinateUnqualified != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_edagc.ST_CoordinateUnqualified)))
	}
	if _edagc.ST_UniversalMeasure != nil {
		e.EncodeToken(_g.CharData(*_edagc.ST_UniversalMeasure))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

type AG_Locking struct {
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_gagfe *CT_TextBulletTypefaceFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gcaceg *ST_TextAutonumberScheme) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gcaceg = 0
	case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_gcaceg = 1
	case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_gcaceg = 2
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_gcaceg = 3
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_gcaceg = 4
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 5
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 6
	case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_gcaceg = 7
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_gcaceg = 8
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 9
	case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
		*_gcaceg = 10
	case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_gcaceg = 11
	case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_gcaceg = 12
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_gcaceg = 13
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_gcaceg = 14
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 15
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 16
	case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_gcaceg = 17
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
		*_gcaceg = 18
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
		*_gcaceg = 19
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_gcaceg = 20
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_gcaceg = 21
	case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 22
	case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
		*_gcaceg = 23
	case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 24
	case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
		*_gcaceg = 25
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_gcaceg = 26
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
		*_gcaceg = 27
	case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 28
	case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
		*_gcaceg = 29
	case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
		*_gcaceg = 30
	case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
		*_gcaceg = 31
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 32
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
		*_gcaceg = 33
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
		*_gcaceg = 34
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 35
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
		*_gcaceg = 36
	case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_gcaceg = 37
	case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gcaceg = 38
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
		*_gcaceg = 39
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
		*_gcaceg = 40
	case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
		*_gcaceg = 41
	}
	return nil
}

// Validate validates the CT_TextUnderlineFillFollowText and its children
func (_cfbgd *CT_TextUnderlineFillFollowText) Validate() error {
	return _cfbgd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

func (_daebb *CT_TextParagraphProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _daebb.MarLAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _bb.Sprintf("\u0025\u0076", *_daebb.MarLAttr)})
	}
	if _daebb.MarRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_daebb.MarRAttr)})
	}
	if _daebb.LvlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0076\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_daebb.LvlAttr)})
	}
	if _daebb.IndentAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_daebb.IndentAttr)})
	}
	if _daebb.AlgnAttr != ST_TextAlignTypeUnset {
		_cfca, _aaaacf := _daebb.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _aaaacf != nil {
			return _aaaacf
		}
		start.Attr = append(start.Attr, _cfca)
	}
	if _daebb.DefTabSzAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_daebb.DefTabSzAttr)})
	}
	if _daebb.RtlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0074\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_daebb.RtlAttr))})
	}
	if _daebb.EaLnBrkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065a\u004c\u006e\u0042\u0072\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_daebb.EaLnBrkAttr))})
	}
	if _daebb.FontAlgnAttr != ST_TextFontAlignTypeUnset {
		_eeeba, _cebge := _daebb.FontAlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e"})
		if _cebge != nil {
			return _cebge
		}
		start.Attr = append(start.Attr, _eeeba)
	}
	if _daebb.LatinLnBrkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_daebb.LatinLnBrkAttr))})
	}
	if _daebb.HangingPunctAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_daebb.HangingPunctAttr))})
	}
	e.EncodeToken(start)
	if _daebb.LnSpc != nil {
		_gdfc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0053\u0070\u0063"}}
		e.EncodeElement(_daebb.LnSpc, _gdfc)
	}
	if _daebb.SpcBef != nil {
		_bdaga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0042\u0065\u0066"}}
		e.EncodeElement(_daebb.SpcBef, _bdaga)
	}
	if _daebb.SpcAft != nil {
		_ffdgg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0041\u0066\u0074"}}
		e.EncodeElement(_daebb.SpcAft, _ffdgg)
	}
	if _daebb.BuClrTx != nil {
		_ecagb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_daebb.BuClrTx, _ecagb)
	}
	if _daebb.BuClr != nil {
		_ebaed := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_daebb.BuClr, _ebaed)
	}
	if _daebb.BuSzTx != nil {
		_debda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_daebb.BuSzTx, _debda)
	}
	if _daebb.BuSzPct != nil {
		_cgfee := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_daebb.BuSzPct, _cgfee)
	}
	if _daebb.BuSzPts != nil {
		_agbd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_daebb.BuSzPts, _agbd)
	}
	if _daebb.BuFontTx != nil {
		_dcbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_daebb.BuFontTx, _dcbg)
	}
	if _daebb.BuFont != nil {
		_adebb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_daebb.BuFont, _adebb)
	}
	if _daebb.BuNone != nil {
		_dbabgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_daebb.BuNone, _dbabgf)
	}
	if _daebb.BuAutoNum != nil {
		_cdafe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_daebb.BuAutoNum, _cdafe)
	}
	if _daebb.BuChar != nil {
		_gcaff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_daebb.BuChar, _gcaff)
	}
	if _daebb.BuBlip != nil {
		_cffbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_daebb.BuBlip, _cffbc)
	}
	if _daebb.TabLst != nil {
		_ageg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u004c\u0073\u0074"}}
		e.EncodeElement(_daebb.TabLst, _ageg)
	}
	if _daebb.DefRPr != nil {
		_dgeea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0052\u0050\u0072"}}
		e.EncodeElement(_daebb.DefRPr, _dgeea)
	}
	if _daebb.ExtLst != nil {
		_fcded := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_daebb.ExtLst, _fcded)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_agfd *CT_ObjectStyleDefaults) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _agfd.SpDef != nil {
		_faddbc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0070\u0044\u0065\u0066"}}
		e.EncodeElement(_agfd.SpDef, _faddbc)
	}
	if _agfd.LnDef != nil {
		_bgbed := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0044\u0065\u0066"}}
		e.EncodeElement(_agfd.LnDef, _bgbed)
	}
	if _agfd.TxDef != nil {
		_bfcgg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0078\u0044\u0065\u0066"}}
		e.EncodeElement(_agfd.TxDef, _bfcgg)
	}
	if _agfd.ExtLst != nil {
		_cgfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agfd.ExtLst, _cgfa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GrayscaleEffect() *CT_GrayscaleEffect { _cdgff := &CT_GrayscaleEffect{}; return _cdgff }

func (_cbagg *CT_PositivePercentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gecbe := range start.Attr {
		if _gecbe.Name.Local == "\u0076\u0061\u006c" {
			_gbdcf, _dcfef := ParseUnionST_PositivePercentage(_gecbe.Value)
			if _dcfef != nil {
				return _dcfef
			}
			_cbagg.ValAttr = _gbdcf
			continue
		}
	}
	for {
		_dcdbf, _afdba := d.Token()
		if _afdba != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0050e\u0072\u0063\u0065\u006e\u0074\u0061\u0067e\u003a\u0020\u0025\u0073", _afdba)
		}
		if _egdga, _eadea := _dcdbf.(_g.EndElement); _eadea && _egdga.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the EG_EffectProperties and its children, prefixing error messages with path
func (_bcdad *EG_EffectProperties) ValidateWithPath(path string) error {
	if _bcdad.EffectLst != nil {
		if _ggfgb := _bcdad.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ggfgb != nil {
			return _ggfgb
		}
	}
	if _bcdad.EffectDag != nil {
		if _ccdg := _bcdad.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _ccdg != nil {
			return _ccdg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualDrawingProps and its children, prefixing error messages with path
func (_ccgffd *CT_NonVisualDrawingProps) ValidateWithPath(path string) error {
	if _ccgffd.HlinkClick != nil {
		if _ecegb := _ccgffd.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _ecegb != nil {
			return _ecegb
		}
	}
	if _ccgffd.HlinkHover != nil {
		if _cbfgb := _ccgffd.HlinkHover.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"); _cbfgb != nil {
			return _cbfgb
		}
	}
	if _ccgffd.ExtLst != nil {
		if _bgbcf := _ccgffd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgbcf != nil {
			return _bgbcf
		}
	}
	return nil
}

func (_fabdf *ST_ShapeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fabdf = 0
	case "\u006c\u0069\u006e\u0065":
		*_fabdf = 1
	case "\u006ci\u006e\u0065\u0049\u006e\u0076":
		*_fabdf = 2
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_fabdf = 3
	case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_fabdf = 4
	case "\u0072\u0065\u0063\u0074":
		*_fabdf = 5
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_fabdf = 6
	case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
		*_fabdf = 7
	case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
		*_fabdf = 8
	case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
		*_fabdf = 9
	case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
		*_fabdf = 10
	case "\u0068e\u0078\u0061\u0067\u006f\u006e":
		*_fabdf = 11
	case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
		*_fabdf = 12
	case "\u006fc\u0074\u0061\u0067\u006f\u006e":
		*_fabdf = 13
	case "\u0064e\u0063\u0061\u0067\u006f\u006e":
		*_fabdf = 14
	case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
		*_fabdf = 15
	case "\u0073\u0074\u0061r\u0034":
		*_fabdf = 16
	case "\u0073\u0074\u0061r\u0035":
		*_fabdf = 17
	case "\u0073\u0074\u0061r\u0036":
		*_fabdf = 18
	case "\u0073\u0074\u0061r\u0037":
		*_fabdf = 19
	case "\u0073\u0074\u0061r\u0038":
		*_fabdf = 20
	case "\u0073\u0074\u0061\u0072\u0031\u0030":
		*_fabdf = 21
	case "\u0073\u0074\u0061\u0072\u0031\u0032":
		*_fabdf = 22
	case "\u0073\u0074\u0061\u0072\u0031\u0036":
		*_fabdf = 23
	case "\u0073\u0074\u0061\u0072\u0032\u0034":
		*_fabdf = 24
	case "\u0073\u0074\u0061\u0072\u0033\u0032":
		*_fabdf = 25
	case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
		*_fabdf = 26
	case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
		*_fabdf = 27
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
		*_fabdf = 28
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
		*_fabdf = 29
	case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
		*_fabdf = 30
	case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
		*_fabdf = 31
	case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
		*_fabdf = 32
	case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
		*_fabdf = 33
	case "\u0070\u006c\u0061\u0071\u0075\u0065":
		*_fabdf = 34
	case "\u0065l\u006c\u0069\u0070\u0073\u0065":
		*_fabdf = 35
	case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
		*_fabdf = 36
	case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
		*_fabdf = 37
	case "\u0063h\u0065\u0076\u0072\u006f\u006e":
		*_fabdf = 38
	case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
		*_fabdf = 39
	case "\u0070\u0069\u0065":
		*_fabdf = 40
	case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
		*_fabdf = 41
	case "\u0064\u006f\u006eu\u0074":
		*_fabdf = 42
	case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
		*_fabdf = 43
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 44
	case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
		*_fabdf = 45
	case "\u0075p\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 46
	case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
		*_fabdf = 47
	case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_fabdf = 48
	case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_fabdf = 49
	case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 50
	case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_fabdf = 51
	case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 52
	case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 53
	case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 54
	case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
		*_fabdf = 55
	case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 56
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_fabdf = 57
	case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_fabdf = 58
	case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 59
	case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 60
	case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 61
	case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 62
	case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
		*_fabdf = 63
	case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 64
	case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 65
	case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
		*_fabdf = 66
	case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
		*_fabdf = 67
	case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 68
	case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 69
	case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 70
	case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 71
	case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
		*_fabdf = 72
	case "\u0063\u0075\u0062\u0065":
		*_fabdf = 73
	case "\u0063\u0061\u006e":
		*_fabdf = 74
	case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
		*_fabdf = 75
	case "\u0068\u0065\u0061r\u0074":
		*_fabdf = 76
	case "\u0073\u0075\u006e":
		*_fabdf = 77
	case "\u006d\u006f\u006f\u006e":
		*_fabdf = 78
	case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
		*_fabdf = 79
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
		*_fabdf = 80
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
		*_fabdf = 81
	case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
		*_fabdf = 82
	case "\u0062\u0065\u0076e\u006c":
		*_fabdf = 83
	case "\u0066\u0072\u0061m\u0065":
		*_fabdf = 84
	case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
		*_fabdf = 85
	case "\u0063\u006f\u0072\u006e\u0065\u0072":
		*_fabdf = 86
	case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
		*_fabdf = 87
	case "\u0063\u0068\u006fr\u0064":
		*_fabdf = 88
	case "\u0061\u0072\u0063":
		*_fabdf = 89
	case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_fabdf = 90
	case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_fabdf = 91
	case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
		*_fabdf = 92
	case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
		*_fabdf = 93
	case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
		*_fabdf = 94
	case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
		*_fabdf = 95
	case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
		*_fabdf = 96
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
		*_fabdf = 97
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
		*_fabdf = 98
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
		*_fabdf = 99
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
		*_fabdf = 100
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
		*_fabdf = 101
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
		*_fabdf = 102
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
		*_fabdf = 103
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
		*_fabdf = 104
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
		*_fabdf = 105
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
		*_fabdf = 106
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
		*_fabdf = 107
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_fabdf = 108
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_fabdf = 109
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_fabdf = 110
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_fabdf = 111
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_fabdf = 112
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_fabdf = 113
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
		*_fabdf = 114
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
		*_fabdf = 115
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
		*_fabdf = 116
	case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 117
	case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 118
	case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 119
	case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fabdf = 120
	case "\u0063\u006c\u006fu\u0064":
		*_fabdf = 121
	case "\u0072\u0069\u0062\u0062\u006f\u006e":
		*_fabdf = 122
	case "\u0072i\u0062\u0062\u006f\u006e\u0032":
		*_fabdf = 123
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
		*_fabdf = 124
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
		*_fabdf = 125
	case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
		*_fabdf = 126
	case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
		*_fabdf = 127
	case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
		*_fabdf = 128
	case "\u0077\u0061\u0076\u0065":
		*_fabdf = 129
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
		*_fabdf = 130
	case "\u0070\u006c\u0075\u0073":
		*_fabdf = 131
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
		*_fabdf = 132
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
		*_fabdf = 133
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
		*_fabdf = 134
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
		*_fabdf = 135
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_fabdf = 136
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
		*_fabdf = 137
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
		*_fabdf = 138
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
		*_fabdf = 139
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
		*_fabdf = 140
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
		*_fabdf = 141
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
		*_fabdf = 142
	case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
		*_fabdf = 143
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
		*_fabdf = 144
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
		*_fabdf = 145
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
		*_fabdf = 146
	case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
		*_fabdf = 147
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
		*_fabdf = 148
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
		*_fabdf = 149
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
		*_fabdf = 150
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
		*_fabdf = 151
	case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_fabdf = 152
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
		*_fabdf = 153
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
		*_fabdf = 154
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
		*_fabdf = 155
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
		*_fabdf = 156
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
		*_fabdf = 157
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
		*_fabdf = 158
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
		*_fabdf = 159
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
		*_fabdf = 160
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
		*_fabdf = 161
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
		*_fabdf = 162
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
		*_fabdf = 163
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_fabdf = 164
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
		*_fabdf = 165
	case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
		*_fabdf = 166
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
		*_fabdf = 167
	case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
		*_fabdf = 168
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
		*_fabdf = 169
	case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
		*_fabdf = 170
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
		*_fabdf = 171
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
		*_fabdf = 172
	case "\u0067\u0065\u0061r\u0036":
		*_fabdf = 173
	case "\u0067\u0065\u0061r\u0039":
		*_fabdf = 174
	case "\u0066\u0075\u006e\u006e\u0065\u006c":
		*_fabdf = 175
	case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
		*_fabdf = 176
	case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
		*_fabdf = 177
	case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
		*_fabdf = 178
	case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
		*_fabdf = 179
	case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
		*_fabdf = 180
	case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_fabdf = 181
	case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
		*_fabdf = 182
	case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
		*_fabdf = 183
	case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
		*_fabdf = 184
	case "\u0063\u0068\u0061\u0072\u0074\u0058":
		*_fabdf = 185
	case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
		*_fabdf = 186
	case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
		*_fabdf = 187
	}
	return nil
}

func (_cafc *CT_DashStopList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cafc.Ds != nil {
		_abgag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064\u0073"}}
		for _, _afag := range _cafc.Ds {
			e.EncodeElement(_afag, _abgag)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_CompoundLineUnset     ST_CompoundLine = 0
	ST_CompoundLineSng       ST_CompoundLine = 1
	ST_CompoundLineDbl       ST_CompoundLine = 2
	ST_CompoundLineThickThin ST_CompoundLine = 3
	ST_CompoundLineThinThick ST_CompoundLine = 4
	ST_CompoundLineTri       ST_CompoundLine = 5
)

type CT_Boolean struct{ ValAttr *_a.ST_OnOff }

func (_dcbbd *CT_TextNormalAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fbfdc := range start.Attr {
		if _fbfdc.Name.Local == "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce" {
			_ccbgge, _afabcf := ParseUnionST_TextFontScalePercentOrPercentString(_fbfdc.Value)
			if _afabcf != nil {
				return _afabcf
			}
			_dcbbd.FontScaleAttr = &_ccbgge
			continue
		}
		if _fbfdc.Name.Local == "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e" {
			_ffdfe, _bggbd := ParseUnionST_TextSpacingPercentOrPercentString(_fbfdc.Value)
			if _bggbd != nil {
				return _bggbd
			}
			_dcbbd.LnSpcReductionAttr = &_ffdfe
			continue
		}
	}
	for {
		_dcdbd, _eebcf := d.Token()
		if _eebcf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fr\u006d\u0061\u006c\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _eebcf)
		}
		if _faagd, _fgefgd := _dcdbd.(_g.EndElement); _fgefgd && _faagd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LineEndProperties struct {
	TypeAttr ST_LineEndType
	WAttr    ST_LineEndWidth
	LenAttr  ST_LineEndLength
}

// ValidateWithPath validates the CT_TableCell and its children, prefixing error messages with path
func (_dbac *CT_TableCell) ValidateWithPath(path string) error {
	if _dbac.TxBody != nil {
		if _aagfa := _dbac.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _aagfa != nil {
			return _aagfa
		}
	}
	if _dbac.TcPr != nil {
		if _bccdg := _dbac.TcPr.ValidateWithPath(path + "\u002f\u0054\u0063P\u0072"); _bccdg != nil {
			return _bccdg
		}
	}
	if _dbac.ExtLst != nil {
		if _bccbg := _dbac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bccbg != nil {
			return _bccbg
		}
	}
	return nil
}

const (
	ST_PresetCameraTypeUnset                               ST_PresetCameraType = 0
	ST_PresetCameraTypeLegacyObliqueTopLeft                ST_PresetCameraType = 1
	ST_PresetCameraTypeLegacyObliqueTop                    ST_PresetCameraType = 2
	ST_PresetCameraTypeLegacyObliqueTopRight               ST_PresetCameraType = 3
	ST_PresetCameraTypeLegacyObliqueLeft                   ST_PresetCameraType = 4
	ST_PresetCameraTypeLegacyObliqueFront                  ST_PresetCameraType = 5
	ST_PresetCameraTypeLegacyObliqueRight                  ST_PresetCameraType = 6
	ST_PresetCameraTypeLegacyObliqueBottomLeft             ST_PresetCameraType = 7
	ST_PresetCameraTypeLegacyObliqueBottom                 ST_PresetCameraType = 8
	ST_PresetCameraTypeLegacyObliqueBottomRight            ST_PresetCameraType = 9
	ST_PresetCameraTypeLegacyPerspectiveTopLeft            ST_PresetCameraType = 10
	ST_PresetCameraTypeLegacyPerspectiveTop                ST_PresetCameraType = 11
	ST_PresetCameraTypeLegacyPerspectiveTopRight           ST_PresetCameraType = 12
	ST_PresetCameraTypeLegacyPerspectiveLeft               ST_PresetCameraType = 13
	ST_PresetCameraTypeLegacyPerspectiveFront              ST_PresetCameraType = 14
	ST_PresetCameraTypeLegacyPerspectiveRight              ST_PresetCameraType = 15
	ST_PresetCameraTypeLegacyPerspectiveBottomLeft         ST_PresetCameraType = 16
	ST_PresetCameraTypeLegacyPerspectiveBottom             ST_PresetCameraType = 17
	ST_PresetCameraTypeLegacyPerspectiveBottomRight        ST_PresetCameraType = 18
	ST_PresetCameraTypeOrthographicFront                   ST_PresetCameraType = 19
	ST_PresetCameraTypeIsometricTopUp                      ST_PresetCameraType = 20
	ST_PresetCameraTypeIsometricTopDown                    ST_PresetCameraType = 21
	ST_PresetCameraTypeIsometricBottomUp                   ST_PresetCameraType = 22
	ST_PresetCameraTypeIsometricBottomDown                 ST_PresetCameraType = 23
	ST_PresetCameraTypeIsometricLeftUp                     ST_PresetCameraType = 24
	ST_PresetCameraTypeIsometricLeftDown                   ST_PresetCameraType = 25
	ST_PresetCameraTypeIsometricRightUp                    ST_PresetCameraType = 26
	ST_PresetCameraTypeIsometricRightDown                  ST_PresetCameraType = 27
	ST_PresetCameraTypeIsometricOffAxis1Left               ST_PresetCameraType = 28
	ST_PresetCameraTypeIsometricOffAxis1Right              ST_PresetCameraType = 29
	ST_PresetCameraTypeIsometricOffAxis1Top                ST_PresetCameraType = 30
	ST_PresetCameraTypeIsometricOffAxis2Left               ST_PresetCameraType = 31
	ST_PresetCameraTypeIsometricOffAxis2Right              ST_PresetCameraType = 32
	ST_PresetCameraTypeIsometricOffAxis2Top                ST_PresetCameraType = 33
	ST_PresetCameraTypeIsometricOffAxis3Left               ST_PresetCameraType = 34
	ST_PresetCameraTypeIsometricOffAxis3Right              ST_PresetCameraType = 35
	ST_PresetCameraTypeIsometricOffAxis3Bottom             ST_PresetCameraType = 36
	ST_PresetCameraTypeIsometricOffAxis4Left               ST_PresetCameraType = 37
	ST_PresetCameraTypeIsometricOffAxis4Right              ST_PresetCameraType = 38
	ST_PresetCameraTypeIsometricOffAxis4Bottom             ST_PresetCameraType = 39
	ST_PresetCameraTypeObliqueTopLeft                      ST_PresetCameraType = 40
	ST_PresetCameraTypeObliqueTop                          ST_PresetCameraType = 41
	ST_PresetCameraTypeObliqueTopRight                     ST_PresetCameraType = 42
	ST_PresetCameraTypeObliqueLeft                         ST_PresetCameraType = 43
	ST_PresetCameraTypeObliqueRight                        ST_PresetCameraType = 44
	ST_PresetCameraTypeObliqueBottomLeft                   ST_PresetCameraType = 45
	ST_PresetCameraTypeObliqueBottom                       ST_PresetCameraType = 46
	ST_PresetCameraTypeObliqueBottomRight                  ST_PresetCameraType = 47
	ST_PresetCameraTypePerspectiveFront                    ST_PresetCameraType = 48
	ST_PresetCameraTypePerspectiveLeft                     ST_PresetCameraType = 49
	ST_PresetCameraTypePerspectiveRight                    ST_PresetCameraType = 50
	ST_PresetCameraTypePerspectiveAbove                    ST_PresetCameraType = 51
	ST_PresetCameraTypePerspectiveBelow                    ST_PresetCameraType = 52
	ST_PresetCameraTypePerspectiveAboveLeftFacing          ST_PresetCameraType = 53
	ST_PresetCameraTypePerspectiveAboveRightFacing         ST_PresetCameraType = 54
	ST_PresetCameraTypePerspectiveContrastingLeftFacing    ST_PresetCameraType = 55
	ST_PresetCameraTypePerspectiveContrastingRightFacing   ST_PresetCameraType = 56
	ST_PresetCameraTypePerspectiveHeroicLeftFacing         ST_PresetCameraType = 57
	ST_PresetCameraTypePerspectiveHeroicRightFacing        ST_PresetCameraType = 58
	ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing  ST_PresetCameraType = 59
	ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing ST_PresetCameraType = 60
	ST_PresetCameraTypePerspectiveRelaxed                  ST_PresetCameraType = 61
	ST_PresetCameraTypePerspectiveRelaxedModerately        ST_PresetCameraType = 62
)

func (_acec *CT_AlphaFloorEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_cfe, _ddg := d.Token()
		if _ddg != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0041\u006c\u0070\u0068\u0061F\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ddg)
		}
		if _bada, _fb := _cfe.(_g.EndElement); _fb && _bada.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Headers struct{ Header []string }

func NewCT_ReflectionEffect() *CT_ReflectionEffect { _adfg := &CT_ReflectionEffect{}; return _adfg }

func (_badgd *CT_PolarAdjustHandle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_badgd.Pos = NewCT_AdjPoint2D()
	for _, _befb := range start.Attr {
		if _befb.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0052" {
			_dcec, _edecbg := _befb.Value, error(nil)
			if _edecbg != nil {
				return _edecbg
			}
			_badgd.GdRefRAttr = &_dcec
			continue
		}
		if _befb.Name.Local == "\u006d\u0069\u006e\u0052" {
			_cccdf, _cegd := ParseUnionST_AdjCoordinate(_befb.Value)
			if _cegd != nil {
				return _cegd
			}
			_badgd.MinRAttr = &_cccdf
			continue
		}
		if _befb.Name.Local == "\u006d\u0061\u0078\u0052" {
			_bbcce, _cacbb := ParseUnionST_AdjCoordinate(_befb.Value)
			if _cacbb != nil {
				return _cacbb
			}
			_badgd.MaxRAttr = &_bbcce
			continue
		}
		if _befb.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067" {
			_dedg, _gbce := _befb.Value, error(nil)
			if _gbce != nil {
				return _gbce
			}
			_badgd.GdRefAngAttr = &_dedg
			continue
		}
		if _befb.Name.Local == "\u006d\u0069\u006e\u0041\u006e\u0067" {
			_bcbd, _cdacff := ParseUnionST_AdjAngle(_befb.Value)
			if _cdacff != nil {
				return _cdacff
			}
			_badgd.MinAngAttr = &_bcbd
			continue
		}
		if _befb.Name.Local == "\u006d\u0061\u0078\u0041\u006e\u0067" {
			_aecbg, _eedg := ParseUnionST_AdjAngle(_befb.Value)
			if _eedg != nil {
				return _eedg
			}
			_badgd.MaxAngAttr = &_aecbg
			continue
		}
	}
_ggcg:
	for {
		_gdafg, _fceg := d.Token()
		if _fceg != nil {
			return _fceg
		}
		switch _edfdg := _gdafg.(type) {
		case _g.StartElement:
			switch _edfdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _dbadd := d.DecodeElement(_badgd.Pos, &_edfdg); _dbadd != nil {
					return _dbadd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _edfdg.Name)
				if _abbga := d.Skip(); _abbga != nil {
					return _abbga
				}
			}
		case _g.EndElement:
			break _ggcg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextNoBullet and its children
func (_ccbda *CT_TextNoBullet) Validate() error {
	return _ccbda.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074")
}

func (_affb *CT_EffectReference) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0066"}, Value: _bb.Sprintf("\u0025\u0076", _affb.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextParagraphProperties struct {
	MarLAttr         *int32
	MarRAttr         *int32
	LvlAttr          *int32
	IndentAttr       *int32
	AlgnAttr         ST_TextAlignType
	DefTabSzAttr     *ST_Coordinate32
	RtlAttr          *bool
	EaLnBrkAttr      *bool
	FontAlgnAttr     ST_TextFontAlignType
	LatinLnBrkAttr   *bool
	HangingPunctAttr *bool
	LnSpc            *CT_TextSpacing
	SpcBef           *CT_TextSpacing
	SpcAft           *CT_TextSpacing
	BuClrTx          *CT_TextBulletColorFollowText
	BuClr            *CT_Color
	BuSzTx           *CT_TextBulletSizeFollowText
	BuSzPct          *CT_TextBulletSizePercent
	BuSzPts          *CT_TextBulletSizePoint
	BuFontTx         *CT_TextBulletTypefaceFollowText
	BuFont           *CT_TextFont
	BuNone           *CT_TextNoBullet
	BuAutoNum        *CT_TextAutonumberBullet
	BuChar           *CT_TextCharBullet
	BuBlip           *CT_TextBlipBullet
	TabLst           *CT_TextTabStopList
	DefRPr           *CT_TextCharacterProperties
	ExtLst           *CT_OfficeArtExtensionList
}

type CT_OfficeStyleSheet struct {
	NameAttr          *string
	ThemeElements     *CT_BaseStyles
	ObjectDefaults    *CT_ObjectStyleDefaults
	ExtraClrSchemeLst *CT_ColorSchemeList
	CustClrLst        *CT_CustomColorList
	ExtLst            *CT_OfficeArtExtensionList
}

// Validate validates the CT_TextUnderlineFillGroupWrapper and its children
func (_agefb *CT_TextUnderlineFillGroupWrapper) Validate() error {
	return _agefb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072")
}

// ValidateWithPath validates the CT_TableStyleList and its children, prefixing error messages with path
func (_agfgg *CT_TableStyleList) ValidateWithPath(path string) error {
	if !_a.ST_GuidPatternRe.MatchString(_agfgg.DefAttr) {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044\u0065\u0066\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, _agfgg.DefAttr)
	}
	for _edgee, _fecce := range _agfgg.TblStyle {
		if _cegdg := _fecce.ValidateWithPath(_bb.Sprintf("\u0025s\u002fT\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _edgee)); _cegdg != nil {
			return _cegdg
		}
	}
	return nil
}

func (_bab *CT_AlphaModulateEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_bab.Cont, _cge)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Headers() *CT_Headers { _aaagc := &CT_Headers{}; return _aaagc }

func (_cfgcge ST_SchemeColorVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ceaef := _g.Attr{}
	_ceaef.Name = name
	switch _cfgcge {
	case ST_SchemeColorValUnset:
		_ceaef.Value = ""
	case ST_SchemeColorValBg1:
		_ceaef.Value = "\u0062\u0067\u0031"
	case ST_SchemeColorValTx1:
		_ceaef.Value = "\u0074\u0078\u0031"
	case ST_SchemeColorValBg2:
		_ceaef.Value = "\u0062\u0067\u0032"
	case ST_SchemeColorValTx2:
		_ceaef.Value = "\u0074\u0078\u0032"
	case ST_SchemeColorValAccent1:
		_ceaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_SchemeColorValAccent2:
		_ceaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_SchemeColorValAccent3:
		_ceaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_SchemeColorValAccent4:
		_ceaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_SchemeColorValAccent5:
		_ceaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_SchemeColorValAccent6:
		_ceaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_SchemeColorValHlink:
		_ceaef.Value = "\u0068\u006c\u0069n\u006b"
	case ST_SchemeColorValFolHlink:
		_ceaef.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case ST_SchemeColorValPhClr:
		_ceaef.Value = "\u0070\u0068\u0043l\u0072"
	case ST_SchemeColorValDk1:
		_ceaef.Value = "\u0064\u006b\u0031"
	case ST_SchemeColorValLt1:
		_ceaef.Value = "\u006c\u0074\u0031"
	case ST_SchemeColorValDk2:
		_ceaef.Value = "\u0064\u006b\u0032"
	case ST_SchemeColorValLt2:
		_ceaef.Value = "\u006c\u0074\u0032"
	}
	return _ceaef, nil
}

// ValidateWithPath validates the CT_DuotoneEffect and its children, prefixing error messages with path
func (_cecg *CT_DuotoneEffect) ValidateWithPath(path string) error {
	for _cdcadb, _dbgg := range _cecg.EG_ColorChoice {
		if _dffg := _dbgg.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _cdcadb)); _dffg != nil {
			return _dffg
		}
	}
	return nil
}

func ParseUnionST_Coordinate(s string) (ST_Coordinate, error) {
	_fbfedc := ST_Coordinate{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_fbfedc.ST_UniversalMeasure = &s
	} else {
		_babgb, _cedca := _fg.ParseInt(s, 10, 64)
		if _cedca != nil {
			return _fbfedc, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cedca)
		}
		_fbfedc.ST_CoordinateUnqualified = &_babgb
	}
	return _fbfedc, nil
}

type ST_PresetMaterialType byte

// Validate validates the CT_GammaTransform and its children
func (_cbcba *CT_GammaTransform) Validate() error {
	return _cbcba.ValidateWithPath("\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

func (_caebcc ST_LightRigType) String() string {
	switch _caebcc {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case 2:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case 4:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case 5:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case 6:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case 7:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case 8:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case 9:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case 10:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case 11:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case 12:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case 13:
		return "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case 14:
		return "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case 15:
		return "\u0073\u006f\u0066\u0074"
	case 16:
		return "\u0068\u0061\u0072s\u0068"
	case 17:
		return "\u0066\u006c\u006fo\u0064"
	case 18:
		return "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case 19:
		return "\u006do\u0072\u006e\u0069\u006e\u0067"
	case 20:
		return "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case 21:
		return "\u0073\u0075\u006e\u0073\u0065\u0074"
	case 22:
		return "\u0063\u0068\u0069\u006c\u006c\u0079"
	case 23:
		return "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case 24:
		return "\u0066\u006c\u0061\u0074"
	case 25:
		return "\u0074\u0077\u006fP\u0074"
	case 26:
		return "\u0067\u006c\u006f\u0077"
	case 27:
		return "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return ""
}

func NewCT_LineProperties() *CT_LineProperties { _fafb := &CT_LineProperties{}; return _fafb }

func (_gafce *CT_SRgbColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _gafce.ValAttr)})
	e.EncodeToken(start)
	if _gafce.EG_ColorTransform != nil {
		for _, _eaaae := range _gafce.EG_ColorTransform {
			_eaaae.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aefa *CT_StyleMatrixReference) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ebdc := range start.Attr {
		if _ebdc.Name.Local == "\u0069\u0064\u0078" {
			_eecab, _cfcg := _fg.ParseUint(_ebdc.Value, 10, 32)
			if _cfcg != nil {
				return _cfcg
			}
			_aefa.IdxAttr = uint32(_eecab)
			continue
		}
	}
_eedb:
	for {
		_abfgd, _gbdd := d.Token()
		if _gbdd != nil {
			return _gbdd
		}
		switch _fdaae := _abfgd.(type) {
		case _g.StartElement:
			switch _fdaae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_aefa.ScrgbClr = NewCT_ScRgbColor()
				if _acdg := d.DecodeElement(_aefa.ScrgbClr, &_fdaae); _acdg != nil {
					return _acdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_aefa.SrgbClr = NewCT_SRgbColor()
				if _ebddd := d.DecodeElement(_aefa.SrgbClr, &_fdaae); _ebddd != nil {
					return _ebddd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_aefa.HslClr = NewCT_HslColor()
				if _accc := d.DecodeElement(_aefa.HslClr, &_fdaae); _accc != nil {
					return _accc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_aefa.SysClr = NewCT_SystemColor()
				if _gagg := d.DecodeElement(_aefa.SysClr, &_fdaae); _gagg != nil {
					return _gagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_aefa.SchemeClr = NewCT_SchemeColor()
				if _ggbdbg := d.DecodeElement(_aefa.SchemeClr, &_fdaae); _ggbdbg != nil {
					return _ggbdbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_aefa.PrstClr = NewCT_PresetColor()
				if _faede := d.DecodeElement(_aefa.PrstClr, &_fdaae); _faede != nil {
					return _faede
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061\u0074\u0072i\u0078\u0052\u0065\u0066\u0065\u0072e\u006e\u0063\u0065 \u0025\u0076", _fdaae.Name)
				if _aebag := d.Skip(); _aebag != nil {
					return _aebag
				}
			}
		case _g.EndElement:
			break _eedb
		case _g.CharData:
		}
	}
	return nil
}

func (_cdcdb ST_ChartBuildStep) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_afbaa := _g.Attr{}
	_afbaa.Name = name
	switch _cdcdb {
	case ST_ChartBuildStepUnset:
		_afbaa.Value = ""
	case ST_ChartBuildStepCategory:
		_afbaa.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepPtInCategory:
		_afbaa.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepSeries:
		_afbaa.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepPtInSeries:
		_afbaa.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepAllPts:
		_afbaa.Value = "\u0061\u006c\u006c\u0050\u0074\u0073"
	case ST_ChartBuildStepGridLegend:
		_afbaa.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return _afbaa, nil
}

// ValidateWithPath validates the CT_Scene3D and its children, prefixing error messages with path
func (_bdcbd *CT_Scene3D) ValidateWithPath(path string) error {
	if _bfeee := _bdcbd.Camera.ValidateWithPath(path + "\u002fC\u0061\u006d\u0065\u0072\u0061"); _bfeee != nil {
		return _bfeee
	}
	if _cbff := _bdcbd.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _cbff != nil {
		return _cbff
	}
	if _bdcbd.Backdrop != nil {
		if _ffbbf := _bdcbd.Backdrop.ValidateWithPath(path + "\u002fB\u0061\u0063\u006b\u0064\u0072\u006fp"); _ffbbf != nil {
			return _ffbbf
		}
	}
	if _bdcbd.ExtLst != nil {
		if _gegfc := _bdcbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gegfc != nil {
			return _gegfc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObject and its children, prefixing error messages with path
func (_fffed *CT_GraphicalObject) ValidateWithPath(path string) error {
	if _abbc := _fffed.GraphicData.ValidateWithPath(path + "\u002f\u0047\u0072a\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"); _abbc != nil {
		return _abbc
	}
	return nil
}

func (_bfdcd *ST_TextHorzOverflowType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bfdcd = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_bfdcd = 1
	case "\u0063\u006c\u0069\u0070":
		*_bfdcd = 2
	}
	return nil
}

func NewTheme() *Theme {
	_ebegea := &Theme{}
	_ebegea.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	return _ebegea
}

func NewCT_GeomGuide() *CT_GeomGuide { _deeeg := &CT_GeomGuide{}; return _deeeg }

func (_afcdc ST_OnOffStyleType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cbbba := _g.Attr{}
	_cbbba.Name = name
	switch _afcdc {
	case ST_OnOffStyleTypeUnset:
		_cbbba.Value = ""
	case ST_OnOffStyleTypeOn:
		_cbbba.Value = "\u006f\u006e"
	case ST_OnOffStyleTypeOff:
		_cbbba.Value = "\u006f\u0066\u0066"
	case ST_OnOffStyleTypeDef:
		_cbbba.Value = "\u0064\u0065\u0066"
	}
	return _cbbba, nil
}

type EG_FillModeProperties struct {
	Tile    *CT_TileInfoProperties
	Stretch *CT_StretchInfoProperties
}

type ST_TextVertOverflowType byte

type ST_ColorSchemeIndex byte

// Validate validates the CT_TextTabStopList and its children
func (_aeced *CT_TextTabStopList) Validate() error {
	return _aeced.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074")
}

type EG_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

const ST_TextBulletSizePercentPattern = "\u0030\u002a\u0028\u0028\u0032\u005b\u0035\u002d9\u005d\u0029\u007c([\u0033\u002d\u0039\u005d\u005b\u0030-\u0039\u005d\u0029\u007c\u0028\u005b\u0031\u002d\u0033\u005d\u005b\u0030\u002d\u0039\u005d[\u0030\u002d\u0039\u005d\u0029\u007c\u0034\u00300\u0029\u0025"

func (_gbegg *ST_LineEndWidth) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gbegg = 0
	case "\u0073\u006d":
		*_gbegg = 1
	case "\u006d\u0065\u0064":
		*_gbegg = 2
	case "\u006c\u0067":
		*_gbegg = 3
	}
	return nil
}

func (_cfgg *CT_Path2DList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cccd:
	for {
		_aabb, _degbd := d.Token()
		if _degbd != nil {
			return _degbd
		}
		switch _gfacee := _aabb.(type) {
		case _g.StartElement:
			switch _gfacee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_bgfac := NewCT_Path2D()
				if _abaf := d.DecodeElement(_bgfac, &_gfacee); _abaf != nil {
					return _abaf
				}
				_cfgg.Path = append(_cfgg.Path, _bgfac)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074 \u0025\u0076", _gfacee.Name)
				if _deggd := d.Skip(); _deggd != nil {
					return _deggd
				}
			}
		case _g.EndElement:
			break _cccd
		case _g.CharData:
		}
	}
	return nil
}

func (_gcdfa ST_TextStrikeType) String() string {
	switch _gcdfa {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case 2:
		return "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case 3:
		return "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return ""
}

func (_fdgfb ST_FontCollectionIndex) String() string {
	switch _fdgfb {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006ao\u0072"
	case 2:
		return "\u006d\u0069\u006eo\u0072"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func NewCT_GvmlGroupShapeNonVisual() *CT_GvmlGroupShapeNonVisual {
	_eeeb := &CT_GvmlGroupShapeNonVisual{}
	_eeeb.CNvPr = NewCT_NonVisualDrawingProps()
	_eeeb.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
	return _eeeb
}

// Validate validates the EG_LineDashProperties and its children
func (_defdf *EG_LineDashProperties) Validate() error {
	return _defdf.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewCT_ConnectorLocking() *CT_ConnectorLocking { _gfgag := &CT_ConnectorLocking{}; return _gfgag }

func (_egdgbc *CT_PresetGeometry2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_eafff, _befa := _egdgbc.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _befa != nil {
		return _befa
	}
	start.Attr = append(start.Attr, _eafff)
	e.EncodeToken(start)
	if _egdgbc.AvLst != nil {
		_bafbe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_egdgbc.AvLst, _bafbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_abcdc ST_PathFillMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abcdc.String(), start)
}

// ValidateWithPath validates the Tbl and its children, prefixing error messages with path
func (_eadcc *Tbl) ValidateWithPath(path string) error {
	if _dcaeea := _eadcc.CT_Table.ValidateWithPath(path); _dcaeea != nil {
		return _dcaeea
	}
	return nil
}

type EG_LineJoinProperties struct {
	Round *CT_LineJoinRound
	Bevel *CT_LineJoinBevel
	Miter *CT_LineJoinMiterProperties
}

func (_gaa *CT_AdjustHandleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gaa.AhXY != nil {
		_deb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u0068\u0058\u0059"}}
		for _, _gee := range _gaa.AhXY {
			e.EncodeElement(_gee, _deb)
		}
	}
	if _gaa.AhPolar != nil {
		_efda := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0068\u0050\u006f\u006c\u0061r"}}
		for _, _ffa := range _gaa.AhPolar {
			e.EncodeElement(_ffa, _efda)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_agagc *CT_GvmlShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ffegb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_agagc.NvSpPr, _ffegb)
	_ddebb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_agagc.SpPr, _ddebb)
	if _agagc.TxSp != nil {
		_badca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		e.EncodeElement(_agagc.TxSp, _badca)
	}
	if _agagc.Style != nil {
		_gecd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_agagc.Style, _gecd)
	}
	if _agagc.ExtLst != nil {
		_bdgda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agagc.ExtLst, _bdgda)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FillStyleList and its children
func (_fbafb *CT_FillStyleList) Validate() error {
	return _fbafb.ValidateWithPath("\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}

func (_dafbb ST_LineEndType) String() string {
	switch _dafbb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 3:
		return "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case 4:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 5:
		return "\u006f\u0076\u0061\u006c"
	case 6:
		return "\u0061\u0072\u0072o\u0077"
	}
	return ""
}

func (_fgff *CT_EffectStyleItem) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fdebd:
	for {
		_cedcc, _ccfa := d.Token()
		if _ccfa != nil {
			return _ccfa
		}
		switch _cfae := _cedcc.(type) {
		case _g.StartElement:
			switch _cfae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fgff.EffectLst = NewCT_EffectList()
				if _dfgdb := d.DecodeElement(_fgff.EffectLst, &_cfae); _dfgdb != nil {
					return _dfgdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fgff.EffectDag = NewCT_EffectContainer()
				if _fcfcc := d.DecodeElement(_fgff.EffectDag, &_cfae); _fcfcc != nil {
					return _fcfcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_fgff.Scene3d = NewCT_Scene3D()
				if _dbdfg := d.DecodeElement(_fgff.Scene3d, &_cfae); _dbdfg != nil {
					return _dbdfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_fgff.Sp3d = NewCT_Shape3D()
				if _dcef := d.DecodeElement(_fgff.Sp3d, &_cfae); _dcef != nil {
					return _dcef
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _cfae.Name)
				if _gcgg := d.Skip(); _gcgg != nil {
					return _gcgg
				}
			}
		case _g.EndElement:
			break _fdebd
		case _g.CharData:
		}
	}
	return nil
}

func (_fffab ST_SystemColorVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fffab.String(), start)
}

func (_abecbd *CT_Scene3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dcgga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0061\u006d\u0065\u0072\u0061"}}
	e.EncodeElement(_abecbd.Camera, _dcgga)
	_ecegd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
	e.EncodeElement(_abecbd.LightRig, _ecegd)
	if _abecbd.Backdrop != nil {
		_eageg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}}
		e.EncodeElement(_abecbd.Backdrop, _eageg)
	}
	if _abecbd.ExtLst != nil {
		_cbfacd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_abecbd.ExtLst, _cbfacd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fdced *CT_GvmlGroupShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_edecb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fdced.NvGrpSpPr, _edecb)
	_bcfge := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_fdced.GrpSpPr, _bcfge)
	if _fdced.Choice != nil {
		for _, _abab := range _fdced.Choice {
			_abab.MarshalXML(e, _g.StartElement{})
		}
	}
	if _fdced.ExtLst != nil {
		_cebff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdced.ExtLst, _cebff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Scene3D() *CT_Scene3D {
	_dddac := &CT_Scene3D{}
	_dddac.Camera = NewCT_Camera()
	_dddac.LightRig = NewCT_LightRig()
	return _dddac
}

type CT_TableRow struct {
	HAttr  ST_Coordinate
	Tc     []*CT_TableCell
	ExtLst *CT_OfficeArtExtensionList
}

func (_deca *CT_TextTabStopList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bbbgff:
	for {
		_efcbd, _fafgb := d.Token()
		if _fafgb != nil {
			return _fafgb
		}
		switch _bcadf := _efcbd.(type) {
		case _g.StartElement:
			switch _bcadf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}:
				_dcbdb := NewCT_TextTabStop()
				if _bcfad := d.DecodeElement(_dcbdb, &_bcadf); _bcfad != nil {
					return _bcfad
				}
				_deca.Tab = append(_deca.Tab, _dcbdb)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bcadf.Name)
				if _agecdc := d.Skip(); _agecdc != nil {
					return _agecdc
				}
			}
		case _g.EndElement:
			break _bbbgff
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaInverseEffect and its children, prefixing error messages with path
func (_ccc *CT_AlphaInverseEffect) ValidateWithPath(path string) error {
	if _ccc.ScrgbClr != nil {
		if _eae := _ccc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _eae != nil {
			return _eae
		}
	}
	if _ccc.SrgbClr != nil {
		if _bcb := _ccc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bcb != nil {
			return _bcb
		}
	}
	if _ccc.HslClr != nil {
		if _ddd := _ccc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ddd != nil {
			return _ddd
		}
	}
	if _ccc.SysClr != nil {
		if _egg := _ccc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _egg != nil {
			return _egg
		}
	}
	if _ccc.SchemeClr != nil {
		if _egge := _ccc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _egge != nil {
			return _egge
		}
	}
	if _ccc.PrstClr != nil {
		if _fcc := _ccc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fcc != nil {
			return _fcc
		}
	}
	return nil
}

func (_bgfb ST_FontCollectionIndex) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cgfec := _g.Attr{}
	_cgfec.Name = name
	switch _bgfb {
	case ST_FontCollectionIndexUnset:
		_cgfec.Value = ""
	case ST_FontCollectionIndexMajor:
		_cgfec.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontCollectionIndexMinor:
		_cgfec.Value = "\u006d\u0069\u006eo\u0072"
	case ST_FontCollectionIndexNone:
		_cgfec.Value = "\u006e\u006f\u006e\u0065"
	}
	return _cgfec, nil
}

func (_cdebg *EG_TextRun) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cdebg.R != nil {
		_faagb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072"}}
		e.EncodeElement(_cdebg.R, _faagb)
	}
	if _cdebg.Br != nil {
		_cdcadd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0072"}}
		e.EncodeElement(_cdebg.Br, _cdcadd)
	}
	if _cdebg.Fld != nil {
		_gdda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066l\u0064"}}
		e.EncodeElement(_cdebg.Fld, _gdda)
	}
	return nil
}

// ValidateWithPath validates the CT_CustomColorList and its children, prefixing error messages with path
func (_bgac *CT_CustomColorList) ValidateWithPath(path string) error {
	for _ecadb, _fbba := range _bgac.CustClr {
		if _gfdaf := _fbba.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0073\u0074\u0043\u006cr\u005b\u0025\u0064\u005d", path, _ecadb)); _gfdaf != nil {
			return _gfdaf
		}
	}
	return nil
}

func (_ddffe *CT_XYAdjustHandle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ddffe.GdRefXAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0058"}, Value: _bb.Sprintf("\u0025\u0076", *_ddffe.GdRefXAttr)})
	}
	if _ddffe.MinXAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0058"}, Value: _bb.Sprintf("\u0025\u0076", *_ddffe.MinXAttr)})
	}
	if _ddffe.MaxXAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0058"}, Value: _bb.Sprintf("\u0025\u0076", *_ddffe.MaxXAttr)})
	}
	if _ddffe.GdRefYAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0059"}, Value: _bb.Sprintf("\u0025\u0076", *_ddffe.GdRefYAttr)})
	}
	if _ddffe.MinYAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0059"}, Value: _bb.Sprintf("\u0025\u0076", *_ddffe.MinYAttr)})
	}
	if _ddffe.MaxYAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0059"}, Value: _bb.Sprintf("\u0025\u0076", *_ddffe.MaxYAttr)})
	}
	e.EncodeToken(start)
	_ccfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_ddffe.Pos, _ccfe)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_edbdbg ST_AnimationDgmBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _edbdbg.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_g.CharData(_edbdbg.ST_AnimationBuildType.String()))
	}
	if _edbdbg.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		e.EncodeToken(_g.CharData(_edbdbg.ST_AnimationDgmOnlyBuildType.String()))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// ValidateWithPath validates the EG_FillModeProperties and its children, prefixing error messages with path
func (_gdffc *EG_FillModeProperties) ValidateWithPath(path string) error {
	if _gdffc.Tile != nil {
		if _egfdc := _gdffc.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _egfdc != nil {
			return _egfdc
		}
	}
	if _gdffc.Stretch != nil {
		if _dgcab := _gdffc.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _dgcab != nil {
			return _dgcab
		}
	}
	return nil
}

type CT_GeomRect struct {
	LAttr ST_AdjCoordinate
	TAttr ST_AdjCoordinate
	RAttr ST_AdjCoordinate
	BAttr ST_AdjCoordinate
}

func (_eddef *CT_TextUnderlineLineFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_bbcgaf *CT_TextField) ValidateWithPath(path string) error {
	if !_a.ST_GuidPatternRe.MatchString(_bbcgaf.IdAttr) {
		return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, _bbcgaf.IdAttr)
	}
	if _bbcgaf.RPr != nil {
		if _fedba := _bbcgaf.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _fedba != nil {
			return _fedba
		}
	}
	if _bbcgaf.PPr != nil {
		if _geggd := _bbcgaf.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _geggd != nil {
			return _geggd
		}
	}
	return nil
}

func NewCT_SRgbColor() *CT_SRgbColor { _cbabf := &CT_SRgbColor{}; return _cbabf }

func (_cbfdc *EG_OfficeArtExtensionList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cbfdc.Ext != nil {
		_afbde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _fcdce := range _cbfdc.Ext {
			e.EncodeElement(_fcdce, _afbde)
		}
	}
	return nil
}

func (_aaccg *CT_GvmlGraphicalObjectFrame) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aaccg.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_aaccg.Graphic = NewGraphic()
	_aaccg.Xfrm = NewCT_Transform2D()
_beef:
	for {
		_efdbc, _ffcfe := d.Token()
		if _ffcfe != nil {
			return _ffcfe
		}
		switch _gbcd := _efdbc.(type) {
		case _g.StartElement:
			switch _gbcd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _cgfd := d.DecodeElement(_aaccg.NvGraphicFramePr, &_gbcd); _cgfd != nil {
					return _cgfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _ddcef := d.DecodeElement(_aaccg.Graphic, &_gbcd); _ddcef != nil {
					return _ddcef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _aebfe := d.DecodeElement(_aaccg.Xfrm, &_gbcd); _aebfe != nil {
					return _aebfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaccg.ExtLst = NewCT_OfficeArtExtensionList()
				if _ecdded := d.DecodeElement(_aaccg.ExtLst, &_gbcd); _ecdded != nil {
					return _ecdded
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065c\u0074\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _gbcd.Name)
				if _bcee := d.Skip(); _bcee != nil {
					return _bcee
				}
			}
		case _g.EndElement:
			break _beef
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextUnderlineLineFollowText and its children, prefixing error messages with path
func (_abacd *CT_TextUnderlineLineFollowText) ValidateWithPath(path string) error { return nil }

func (_bfdaba *ST_TextShapeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eabcc, _cbfbc := d.Token()
	if _cbfbc != nil {
		return _cbfbc
	}
	if _eeebf, _gfbbf := _eabcc.(_g.EndElement); _gfbbf && _eeebf.Name == start.Name {
		*_bfdaba = 1
		return nil
	}
	if _baabb, _cgeebe := _eabcc.(_g.CharData); !_cgeebe {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eabcc)
	} else {
		switch string(_baabb) {
		case "":
			*_bfdaba = 0
		case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
			*_bfdaba = 1
		case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
			*_bfdaba = 2
		case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
			*_bfdaba = 3
		case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_bfdaba = 4
		case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
			*_bfdaba = 5
		case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
			*_bfdaba = 6
		case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
			*_bfdaba = 7
		case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
			*_bfdaba = 8
		case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
			*_bfdaba = 9
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
			*_bfdaba = 10
		case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
			*_bfdaba = 11
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
			*_bfdaba = 12
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
			*_bfdaba = 13
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
			*_bfdaba = 14
		case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
			*_bfdaba = 15
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
			*_bfdaba = 16
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
			*_bfdaba = 17
		case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
			*_bfdaba = 18
		case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
			*_bfdaba = 19
		case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
			*_bfdaba = 20
		case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
			*_bfdaba = 21
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
			*_bfdaba = 22
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
			*_bfdaba = 23
		case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
			*_bfdaba = 24
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
			*_bfdaba = 25
		case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
			*_bfdaba = 26
		case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
			*_bfdaba = 27
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_bfdaba = 28
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_bfdaba = 29
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_bfdaba = 30
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_bfdaba = 31
		case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
			*_bfdaba = 32
		case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
			*_bfdaba = 33
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
			*_bfdaba = 34
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
			*_bfdaba = 35
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
			*_bfdaba = 36
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_bfdaba = 37
		case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
			*_bfdaba = 38
		case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
			*_bfdaba = 39
		case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
			*_bfdaba = 40
		case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_bfdaba = 41
		}
	}
	_eabcc, _cbfbc = d.Token()
	if _cbfbc != nil {
		return _cbfbc
	}
	if _feegd, _dcfee := _eabcc.(_g.EndElement); _dcfee && _feegd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eabcc)
}

func (_efcc *CT_FillOverlayEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_aaaf, _dfdb := _efcc.BlendAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _dfdb != nil {
		return _dfdb
	}
	start.Attr = append(start.Attr, _aaaf)
	e.EncodeToken(start)
	if _efcc.NoFill != nil {
		_agbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efcc.NoFill, _agbf)
	}
	if _efcc.SolidFill != nil {
		_aecc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efcc.SolidFill, _aecc)
	}
	if _efcc.GradFill != nil {
		_gbgce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efcc.GradFill, _gbgce)
	}
	if _efcc.BlipFill != nil {
		_ccaff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efcc.BlipFill, _ccaff)
	}
	if _efcc.PattFill != nil {
		_gdga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efcc.PattFill, _gdga)
	}
	if _efcc.GrpFill != nil {
		_edggf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_efcc.GrpFill, _edggf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableRow and its children, prefixing error messages with path
func (_gabdf *CT_TableRow) ValidateWithPath(path string) error {
	if _fgagf := _gabdf.HAttr.ValidateWithPath(path + "\u002f\u0048\u0041\u0074\u0074\u0072"); _fgagf != nil {
		return _fgagf
	}
	for _cbdag, _gbgga := range _gabdf.Tc {
		if _acgfg := _gbgga.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0054\u0063\u005b\u0025\u0064]", path, _cbdag)); _acgfg != nil {
			return _acgfg
		}
	}
	if _gabdf.ExtLst != nil {
		if _bdaef := _gabdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdaef != nil {
			return _bdaef
		}
	}
	return nil
}

func (_fdbbd ST_TextVerticalType) Validate() error { return _fdbbd.ValidateWithPath("") }

func (_gdffaa *CT_SolidColorFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gdffaa.ScrgbClr != nil {
		_abcded := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_gdffaa.ScrgbClr, _abcded)
	}
	if _gdffaa.SrgbClr != nil {
		_eafa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_gdffaa.SrgbClr, _eafa)
	}
	if _gdffaa.HslClr != nil {
		_deeag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_gdffaa.HslClr, _deeag)
	}
	if _gdffaa.SysClr != nil {
		_abfae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_gdffaa.SysClr, _abfae)
	}
	if _gdffaa.SchemeClr != nil {
		_agdcb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_gdffaa.SchemeClr, _agdcb)
	}
	if _gdffaa.PrstClr != nil {
		_fgbde := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_gdffaa.PrstClr, _fgbde)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ggegdf ST_PitchFamily) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gdcee := _g.Attr{}
	_gdcee.Name = name
	switch _ggegdf {
	case ST_PitchFamilyUnset:
		_gdcee.Value = ""
	case ST_PitchFamily00:
		_gdcee.Value = "\u0030\u0030"
	case ST_PitchFamily01:
		_gdcee.Value = "\u0030\u0031"
	case ST_PitchFamily02:
		_gdcee.Value = "\u0030\u0032"
	case ST_PitchFamily16:
		_gdcee.Value = "\u0031\u0036"
	case ST_PitchFamily17:
		_gdcee.Value = "\u0031\u0037"
	case ST_PitchFamily18:
		_gdcee.Value = "\u0031\u0038"
	case ST_PitchFamily32:
		_gdcee.Value = "\u0033\u0032"
	case ST_PitchFamily33:
		_gdcee.Value = "\u0033\u0033"
	case ST_PitchFamily34:
		_gdcee.Value = "\u0033\u0034"
	case ST_PitchFamily48:
		_gdcee.Value = "\u0034\u0038"
	case ST_PitchFamily49:
		_gdcee.Value = "\u0034\u0039"
	case ST_PitchFamily50:
		_gdcee.Value = "\u0035\u0030"
	case ST_PitchFamily64:
		_gdcee.Value = "\u0036\u0034"
	case ST_PitchFamily65:
		_gdcee.Value = "\u0036\u0035"
	case ST_PitchFamily66:
		_gdcee.Value = "\u0036\u0036"
	case ST_PitchFamily80:
		_gdcee.Value = "\u0038\u0030"
	case ST_PitchFamily81:
		_gdcee.Value = "\u0038\u0031"
	case ST_PitchFamily82:
		_gdcee.Value = "\u0038\u0032"
	}
	return _gdcee, nil
}

type CT_TextUnderlineFillGroupWrapper struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_eeaccg ST_TextSpacingPercentOrPercentString) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eeaccg.ST_TextSpacingPercent != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_eeaccg.ST_TextSpacingPercent)))
	}
	if _eeaccg.ST_Percentage != nil {
		e.EncodeToken(_g.CharData(*_eeaccg.ST_Percentage))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// Validate validates the CT_SolidColorFillProperties and its children
func (_edbdg *CT_SolidColorFillProperties) Validate() error {
	return _edbdg.ValidateWithPath("C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

// ValidateWithPath validates the EG_TextUnderlineLine and its children, prefixing error messages with path
func (_aacbd *EG_TextUnderlineLine) ValidateWithPath(path string) error {
	if _aacbd.ULnTx != nil {
		if _efecg := _aacbd.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _efecg != nil {
			return _efecg
		}
	}
	if _aacbd.ULn != nil {
		if _acfb := _aacbd.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _acfb != nil {
			return _acfb
		}
	}
	return nil
}

type CT_TextCharacterProperties struct {
	KumimojiAttr   *bool
	LangAttr       *string
	AltLangAttr    *string
	SzAttr         *int32
	BAttr          *bool
	IAttr          *bool
	UAttr          ST_TextUnderlineType
	StrikeAttr     ST_TextStrikeType
	KernAttr       *int32
	CapAttr        ST_TextCapsType
	SpcAttr        *ST_TextPoint
	NormalizeHAttr *bool
	BaselineAttr   *ST_Percentage
	NoProofAttr    *bool
	DirtyAttr      *bool
	ErrAttr        *bool
	SmtCleanAttr   *bool
	SmtIdAttr      *uint32
	BmkAttr        *string
	Ln             *CT_LineProperties
	NoFill         *CT_NoFillProperties
	SolidFill      *CT_SolidColorFillProperties
	GradFill       *CT_GradientFillProperties
	BlipFill       *CT_BlipFillProperties
	PattFill       *CT_PatternFillProperties
	GrpFill        *CT_GroupFillProperties
	EffectLst      *CT_EffectList
	EffectDag      *CT_EffectContainer
	Highlight      *CT_Color
	ULnTx          *CT_TextUnderlineLineFollowText
	ULn            *CT_LineProperties
	UFillTx        *CT_TextUnderlineFillFollowText
	UFill          *CT_TextUnderlineFillGroupWrapper
	Latin          *CT_TextFont
	Ea             *CT_TextFont
	Cs             *CT_TextFont
	Sym            *CT_TextFont
	HlinkClick     *CT_Hyperlink
	HlinkMouseOver *CT_Hyperlink
	Rtl            *CT_Boolean
	ExtLst         *CT_OfficeArtExtensionList
}

func (_egbcc *EG_ThemeableEffectStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _egbcc.Effect != nil {
		_gecbgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_egbcc.Effect, _gecbgc)
	}
	if _egbcc.EffectRef != nil {
		_fedec := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_egbcc.EffectRef, _fedec)
	}
	return nil
}

func (_bebfa *ST_TextTabAlignType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_beddd, _gedgc := d.Token()
	if _gedgc != nil {
		return _gedgc
	}
	if _fgcc, _cbfeg := _beddd.(_g.EndElement); _cbfeg && _fgcc.Name == start.Name {
		*_bebfa = 1
		return nil
	}
	if _fffcd, _dcgceg := _beddd.(_g.CharData); !_dcgceg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _beddd)
	} else {
		switch string(_fffcd) {
		case "":
			*_bebfa = 0
		case "\u006c":
			*_bebfa = 1
		case "\u0063\u0074\u0072":
			*_bebfa = 2
		case "\u0072":
			*_bebfa = 3
		case "\u0064\u0065\u0063":
			*_bebfa = 4
		}
	}
	_beddd, _gedgc = d.Token()
	if _gedgc != nil {
		return _gedgc
	}
	if _dbfga, _eacfa := _beddd.(_g.EndElement); _eacfa && _dbfga.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _beddd)
}

func (_adeaa *CT_TextParagraph) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _adeaa.PPr != nil {
		_agfeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_adeaa.PPr, _agfeg)
	}
	if _adeaa.EG_TextRun != nil {
		for _, _dbgbe := range _adeaa.EG_TextRun {
			_dbgbe.MarshalXML(e, _g.StartElement{})
		}
	}
	if _adeaa.EndParaRPr != nil {
		_ddfef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065n\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}}
		e.EncodeElement(_adeaa.EndParaRPr, _ddfef)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_EffectStyleItem struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
	Scene3d   *CT_Scene3D
	Sp3d      *CT_Shape3D
}

func (_facbf *CT_TextUnderlineFillFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_LineJoinProperties and its children
func (_agdedf *EG_LineJoinProperties) Validate() error {
	return _agdedf.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_InverseTransform and its children, prefixing error messages with path
func (_acea *CT_InverseTransform) ValidateWithPath(path string) error { return nil }

type CT_RelativeOffsetEffect struct {
	TxAttr *ST_Percentage
	TyAttr *ST_Percentage
}

func NewCT_StyleMatrixReference() *CT_StyleMatrixReference {
	_aadfa := &CT_StyleMatrixReference{}
	return _aadfa
}

type EG_TextGeometry struct {
	CustGeom   *CT_CustomGeometry2D
	PrstTxWarp *CT_PresetTextShape
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_edee *CT_GradientStop) ValidateWithPath(path string) error {
	if _gebae := _edee.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _gebae != nil {
		return _gebae
	}
	if _edee.ScrgbClr != nil {
		if _dccec := _edee.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _dccec != nil {
			return _dccec
		}
	}
	if _edee.SrgbClr != nil {
		if _aaage := _edee.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _aaage != nil {
			return _aaage
		}
	}
	if _edee.HslClr != nil {
		if _bfcb := _edee.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bfcb != nil {
			return _bfcb
		}
	}
	if _edee.SysClr != nil {
		if _ecffb := _edee.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ecffb != nil {
			return _ecffb
		}
	}
	if _edee.SchemeClr != nil {
		if _ebedg := _edee.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ebedg != nil {
			return _ebedg
		}
	}
	if _edee.PrstClr != nil {
		if _ecda := _edee.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ecda != nil {
			return _ecda
		}
	}
	return nil
}

// Validate validates the CT_AudioCD and its children
func (_aadf *CT_AudioCD) Validate() error {
	return _aadf.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044")
}

func (_ecaee ST_PathFillMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gbgad := _g.Attr{}
	_gbgad.Name = name
	switch _ecaee {
	case ST_PathFillModeUnset:
		_gbgad.Value = ""
	case ST_PathFillModeNone:
		_gbgad.Value = "\u006e\u006f\u006e\u0065"
	case ST_PathFillModeNorm:
		_gbgad.Value = "\u006e\u006f\u0072\u006d"
	case ST_PathFillModeLighten:
		_gbgad.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case ST_PathFillModeLightenLess:
		_gbgad.Value = "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case ST_PathFillModeDarken:
		_gbgad.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_PathFillModeDarkenLess:
		_gbgad.Value = "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return _gbgad, nil
}

// Validate validates the CT_BlurEffect and its children
func (_ebac *CT_BlurEffect) Validate() error {
	return _ebac.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_bgca *CT_GroupLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cgdf := range start.Attr {
		if _cgdf.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_dceed, _fggg := _fg.ParseBool(_cgdf.Value)
			if _fggg != nil {
				return _fggg
			}
			_bgca.NoGrpAttr = &_dceed
			continue
		}
		if _cgdf.Name.Local == "\u006eo\u0055\u006e\u0067\u0072\u0070" {
			_bbac, _aedae := _fg.ParseBool(_cgdf.Value)
			if _aedae != nil {
				return _aedae
			}
			_bgca.NoUngrpAttr = &_bbac
			continue
		}
		if _cgdf.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_bcgdb, _dbaf := _fg.ParseBool(_cgdf.Value)
			if _dbaf != nil {
				return _dbaf
			}
			_bgca.NoSelectAttr = &_bcgdb
			continue
		}
		if _cgdf.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_cbdaa, _gecbd := _fg.ParseBool(_cgdf.Value)
			if _gecbd != nil {
				return _gecbd
			}
			_bgca.NoRotAttr = &_cbdaa
			continue
		}
		if _cgdf.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_afdfg, _gcecb := _fg.ParseBool(_cgdf.Value)
			if _gcecb != nil {
				return _gcecb
			}
			_bgca.NoChangeAspectAttr = &_afdfg
			continue
		}
		if _cgdf.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_daba, _cdgb := _fg.ParseBool(_cgdf.Value)
			if _cdgb != nil {
				return _cdgb
			}
			_bgca.NoMoveAttr = &_daba
			continue
		}
		if _cgdf.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_gbgb, _gcbcg := _fg.ParseBool(_cgdf.Value)
			if _gcbcg != nil {
				return _gcbcg
			}
			_bgca.NoResizeAttr = &_gbgb
			continue
		}
	}
_fadbe:
	for {
		_bceag, _eaef := d.Token()
		if _eaef != nil {
			return _eaef
		}
		switch _aaddb := _bceag.(type) {
		case _g.StartElement:
			switch _aaddb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgca.ExtLst = NewCT_OfficeArtExtensionList()
				if _debd := d.DecodeElement(_bgca.ExtLst, &_aaddb); _debd != nil {
					return _debd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _aaddb.Name)
				if _bacag := d.Skip(); _bacag != nil {
					return _bacag
				}
			}
		case _g.EndElement:
			break _fadbe
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_ColorSchemeIndexUnset    ST_ColorSchemeIndex = 0
	ST_ColorSchemeIndexDk1      ST_ColorSchemeIndex = 1
	ST_ColorSchemeIndexLt1      ST_ColorSchemeIndex = 2
	ST_ColorSchemeIndexDk2      ST_ColorSchemeIndex = 3
	ST_ColorSchemeIndexLt2      ST_ColorSchemeIndex = 4
	ST_ColorSchemeIndexAccent1  ST_ColorSchemeIndex = 5
	ST_ColorSchemeIndexAccent2  ST_ColorSchemeIndex = 6
	ST_ColorSchemeIndexAccent3  ST_ColorSchemeIndex = 7
	ST_ColorSchemeIndexAccent4  ST_ColorSchemeIndex = 8
	ST_ColorSchemeIndexAccent5  ST_ColorSchemeIndex = 9
	ST_ColorSchemeIndexAccent6  ST_ColorSchemeIndex = 10
	ST_ColorSchemeIndexHlink    ST_ColorSchemeIndex = 11
	ST_ColorSchemeIndexFolHlink ST_ColorSchemeIndex = 12
)

type EG_Text3D struct {
	Sp3d   *CT_Shape3D
	FlatTx *CT_FlatText
}

func (_baadb ST_OnOffStyleType) Validate() error { return _baadb.ValidateWithPath("") }

// ValidateWithPath validates the CT_LuminanceEffect and its children, prefixing error messages with path
func (_bgcgd *CT_LuminanceEffect) ValidateWithPath(path string) error {
	if _bgcgd.BrightAttr != nil {
		if _bedee := _bgcgd.BrightAttr.ValidateWithPath(path + "/\u0042\u0072\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072"); _bedee != nil {
			return _bedee
		}
	}
	if _bgcgd.ContrastAttr != nil {
		if _afedaa := _bgcgd.ContrastAttr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0041\u0074\u0074\u0072"); _afedaa != nil {
			return _afedaa
		}
	}
	return nil
}

func (_ddfc *CT_PolarAdjustHandle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ddfc.GdRefRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_ddfc.GdRefRAttr)})
	}
	if _ddfc.MinRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_ddfc.MinRAttr)})
	}
	if _ddfc.MaxRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_ddfc.MaxRAttr)})
	}
	if _ddfc.GdRefAngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_ddfc.GdRefAngAttr)})
	}
	if _ddfc.MinAngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0041\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_ddfc.MinAngAttr)})
	}
	if _ddfc.MaxAngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0041\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_ddfc.MaxAngAttr)})
	}
	e.EncodeToken(start)
	_cfced := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_ddfc.Pos, _cfced)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TextSpacingPercent() *CT_TextSpacingPercent {
	_cdfcf := &CT_TextSpacingPercent{}
	return _cdfcf
}

func (_fbeaa *CT_LinearShadeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ceggfe := range start.Attr {
		if _ceggfe.Name.Local == "\u0061\u006e\u0067" {
			_beccf, _cagcd := _fg.ParseInt(_ceggfe.Value, 10, 32)
			if _cagcd != nil {
				return _cagcd
			}
			_edfed := int32(_beccf)
			_fbeaa.AngAttr = &_edfed
			continue
		}
		if _ceggfe.Name.Local == "\u0073\u0063\u0061\u006c\u0065\u0064" {
			_cdbde, _dcfa := _fg.ParseBool(_ceggfe.Value)
			if _dcfa != nil {
				return _dcfa
			}
			_fbeaa.ScaledAttr = &_cdbde
			continue
		}
	}
	for {
		_adaae, _eebb := d.Token()
		if _eebb != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004cine\u0061rS\u0068\u0061\u0064\u0065\u0050\u0072\u006fpe\u0072\u0074\u0069\u0065\u0073\u003a\u0020%\u0073", _eebb)
		}
		if _gagfg, _cbbgc := _adaae.(_g.EndElement); _cbbgc && _gagfg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GeomGuideList and its children, prefixing error messages with path
func (_addcg *CT_GeomGuideList) ValidateWithPath(path string) error {
	for _ccbd, _efcf := range _addcg.Gd {
		if _faeb := _efcf.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0047\u0064\u005b\u0025\u0064]", path, _ccbd)); _faeb != nil {
			return _faeb
		}
	}
	return nil
}

func (_edga *CT_Boolean) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _egda := range start.Attr {
		if _egda.Name.Local == "\u0076\u0061\u006c" {
			_bgcc, _aagc := ParseUnionST_OnOff(_egda.Value)
			if _aagc != nil {
				return _aagc
			}
			_edga.ValAttr = &_bgcc
			continue
		}
	}
	for {
		_gfdb, _ggfg := d.Token()
		if _ggfg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e\u003a\u0020%\u0073", _ggfg)
		}
		if _daae, _fegcc := _gfdb.(_g.EndElement); _fegcc && _daae.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gfegg *CT_TableCell) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _faecc := range start.Attr {
		if _faecc.Name.Local == "\u0072o\u0077\u0053\u0070\u0061\u006e" {
			_daead, _bcabf := _fg.ParseInt(_faecc.Value, 10, 32)
			if _bcabf != nil {
				return _bcabf
			}
			_agged := int32(_daead)
			_gfegg.RowSpanAttr = &_agged
			continue
		}
		if _faecc.Name.Local == "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e" {
			_egfeg, _bgcbf := _fg.ParseInt(_faecc.Value, 10, 32)
			if _bgcbf != nil {
				return _bgcbf
			}
			_daecf := int32(_egfeg)
			_gfegg.GridSpanAttr = &_daecf
			continue
		}
		if _faecc.Name.Local == "\u0068\u004d\u0065\u0072\u0067\u0065" {
			_cbbgf, _dbgba := _fg.ParseBool(_faecc.Value)
			if _dbgba != nil {
				return _dbgba
			}
			_gfegg.HMergeAttr = &_cbbgf
			continue
		}
		if _faecc.Name.Local == "\u0076\u004d\u0065\u0072\u0067\u0065" {
			_cebgga, _ffabe := _fg.ParseBool(_faecc.Value)
			if _ffabe != nil {
				return _ffabe
			}
			_gfegg.VMergeAttr = &_cebgga
			continue
		}
		if _faecc.Name.Local == "\u0069\u0064" {
			_eadg, _egffc := _faecc.Value, error(nil)
			if _egffc != nil {
				return _egffc
			}
			_gfegg.IdAttr = &_eadg
			continue
		}
	}
_degff:
	for {
		_cdaag, _fdaba := d.Token()
		if _fdaba != nil {
			return _fdaba
		}
		switch _ffagf := _cdaag.(type) {
		case _g.StartElement:
			switch _ffagf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_gfegg.TxBody = NewCT_TextBody()
				if _ecgca := d.DecodeElement(_gfegg.TxBody, &_ffagf); _ecgca != nil {
					return _ecgca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}:
				_gfegg.TcPr = NewCT_TableCellProperties()
				if _abad := d.DecodeElement(_gfegg.TcPr, &_ffagf); _abad != nil {
					return _abad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfegg.ExtLst = NewCT_OfficeArtExtensionList()
				if _ddbag := d.DecodeElement(_gfegg.ExtLst, &_ffagf); _ddbag != nil {
					return _ddbag
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _ffagf.Name)
				if _cgcba := d.Skip(); _cgcba != nil {
					return _cgcba
				}
			}
		case _g.EndElement:
			break _degff
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextCharBullet and its children
func (_egeade *CT_TextCharBullet) Validate() error {
	return _egeade.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074")
}

func (_bbgeg *ST_SystemColorVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bbgeg = 0
	case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
		*_bbgeg = 1
	case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
		*_bbgeg = 2
	case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_bbgeg = 3
	case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_bbgeg = 4
	case "\u006d\u0065\u006e\u0075":
		*_bbgeg = 5
	case "\u0077\u0069\u006e\u0064\u006f\u0077":
		*_bbgeg = 6
	case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
		*_bbgeg = 7
	case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
		*_bbgeg = 8
	case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
		*_bbgeg = 9
	case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_bbgeg = 10
	case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
		*_bbgeg = 11
	case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
		*_bbgeg = 12
	case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
		*_bbgeg = 13
	case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
		*_bbgeg = 14
	case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
		*_bbgeg = 15
	case "\u0062t\u006e\u0046\u0061\u0063\u0065":
		*_bbgeg = 16
	case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
		*_bbgeg = 17
	case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
		*_bbgeg = 18
	case "\u0062t\u006e\u0054\u0065\u0078\u0074":
		*_bbgeg = 19
	case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_bbgeg = 20
	case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_bbgeg = 21
	case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
		*_bbgeg = 22
	case "\u0033d\u004c\u0069\u0067\u0068\u0074":
		*_bbgeg = 23
	case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
		*_bbgeg = 24
	case "\u0069\u006e\u0066\u006f\u0042\u006b":
		*_bbgeg = 25
	case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
		*_bbgeg = 26
	case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
		*_bbgeg = 27
	case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_bbgeg = 28
	case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_bbgeg = 29
	case "\u006de\u006e\u0075\u0042\u0061\u0072":
		*_bbgeg = 30
	}
	return nil
}

func NewEG_TextBulletSize() *EG_TextBulletSize { _gadeeb := &EG_TextBulletSize{}; return _gadeeb }

func (_bgedb *ST_PresetMaterialType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_deggc, _effa := d.Token()
	if _effa != nil {
		return _effa
	}
	if _gadeeg, _cgdgg := _deggc.(_g.EndElement); _cgdgg && _gadeeg.Name == start.Name {
		*_bgedb = 1
		return nil
	}
	if _gefdd, _gagcb := _deggc.(_g.CharData); !_gagcb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deggc)
	} else {
		switch string(_gefdd) {
		case "":
			*_bgedb = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
			*_bgedb = 1
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
			*_bgedb = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
			*_bgedb = 3
		case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
			*_bgedb = 4
		case "\u006d\u0061\u0074t\u0065":
			*_bgedb = 5
		case "\u0070l\u0061\u0073\u0074\u0069\u0063":
			*_bgedb = 6
		case "\u006d\u0065\u0074a\u006c":
			*_bgedb = 7
		case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
			*_bgedb = 8
		case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
			*_bgedb = 9
		case "\u0070\u006f\u0077\u0064\u0065\u0072":
			*_bgedb = 10
		case "\u0064\u006b\u0045\u0064\u0067\u0065":
			*_bgedb = 11
		case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
			*_bgedb = 12
		case "\u0063\u006c\u0065a\u0072":
			*_bgedb = 13
		case "\u0066\u006c\u0061\u0074":
			*_bgedb = 14
		case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
			*_bgedb = 15
		}
	}
	_deggc, _effa = d.Token()
	if _effa != nil {
		return _effa
	}
	if _edeg, _edfce := _deggc.(_g.EndElement); _edfce && _edeg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deggc)
}

func (_abfdg ST_CompoundLine) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abfdg.String(), start)
}

func (_cbabc *ST_PresetCameraType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dfgeb, _ddgdde := d.Token()
	if _ddgdde != nil {
		return _ddgdde
	}
	if _abdeb, _ebdefc := _dfgeb.(_g.EndElement); _ebdefc && _abdeb.Name == start.Name {
		*_cbabc = 1
		return nil
	}
	if _efdbe, _ffabb := _dfgeb.(_g.CharData); !_ffabb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfgeb)
	} else {
		switch string(_efdbe) {
		case "":
			*_cbabc = 0
		case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
			*_cbabc = 1
		case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_cbabc = 2
		case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
			*_cbabc = 3
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
			*_cbabc = 4
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
			*_cbabc = 5
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
			*_cbabc = 6
		case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_cbabc = 7
		case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_cbabc = 8
		case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_cbabc = 9
		case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
			*_cbabc = 10
		case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
			*_cbabc = 11
		case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
			*_cbabc = 12
		case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
			*_cbabc = 13
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
			*_cbabc = 14
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
			*_cbabc = 15
		case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
			*_cbabc = 16
		case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_cbabc = 17
		case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
			*_cbabc = 18
		case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
			*_cbabc = 19
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
			*_cbabc = 20
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
			*_cbabc = 21
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
			*_cbabc = 22
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
			*_cbabc = 23
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
			*_cbabc = 24
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
			*_cbabc = 25
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
			*_cbabc = 26
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
			*_cbabc = 27
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
			*_cbabc = 28
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
			*_cbabc = 29
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
			*_cbabc = 30
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
			*_cbabc = 31
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
			*_cbabc = 32
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
			*_cbabc = 33
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
			*_cbabc = 34
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
			*_cbabc = 35
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
			*_cbabc = 36
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
			*_cbabc = 37
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
			*_cbabc = 38
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
			*_cbabc = 39
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
			*_cbabc = 40
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_cbabc = 41
		case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_cbabc = 42
		case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
			*_cbabc = 43
		case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
			*_cbabc = 44
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
			*_cbabc = 45
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_cbabc = 46
		case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
			*_cbabc = 47
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
			*_cbabc = 48
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
			*_cbabc = 49
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
			*_cbabc = 50
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
			*_cbabc = 51
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
			*_cbabc = 52
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
			*_cbabc = 53
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
			*_cbabc = 54
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_cbabc = 55
		case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
			*_cbabc = 56
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
			*_cbabc = 57
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
			*_cbabc = 58
		case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_cbabc = 59
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
			*_cbabc = 60
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
			*_cbabc = 61
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
			*_cbabc = 62
		}
	}
	_dfgeb, _ddgdde = d.Token()
	if _ddgdde != nil {
		return _ddgdde
	}
	if _ddfcb, _dgegaa := _dfgeb.(_g.EndElement); _dgegaa && _ddfcb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfgeb)
}

func NewCT_StretchInfoProperties() *CT_StretchInfoProperties {
	_fegafa := &CT_StretchInfoProperties{}
	return _fegafa
}

type CT_Hyperlink struct {
	IdAttr             *string
	InvalidUrlAttr     *string
	ActionAttr         *string
	TgtFrameAttr       *string
	TooltipAttr        *string
	HistoryAttr        *bool
	HighlightClickAttr *bool
	EndSndAttr         *bool
	Snd                *CT_EmbeddedWAVAudioFile
	ExtLst             *CT_OfficeArtExtensionList
}

// Validate validates the CT_SystemColor and its children
func (_cdbcg *CT_SystemColor) Validate() error {
	return _cdbcg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072")
}

// Validate validates the CT_TextBulletSizeFollowText and its children
func (_bbcfe *CT_TextBulletSizeFollowText) Validate() error {
	return _bbcfe.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074")
}

// ValidateWithPath validates the CT_EmbeddedWAVAudioFile and its children, prefixing error messages with path
func (_eegb *CT_EmbeddedWAVAudioFile) ValidateWithPath(path string) error { return nil }

type EG_TextAutofit struct {
	NoAutofit   *CT_TextNoAutofit
	NormAutofit *CT_TextNormalAutofit
	SpAutoFit   *CT_TextShapeAutofit
}

func (_cgbec ST_BlackWhiteMode) String() string {
	switch _cgbec {
	case 0:
		return ""
	case 1:
		return "\u0063\u006c\u0072"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "\u0067\u0072\u0061\u0079"
	case 4:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 5:
		return "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case 6:
		return "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case 7:
		return "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case 8:
		return "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case 9:
		return "\u0062\u006c\u0061c\u006b"
	case 10:
		return "\u0077\u0068\u0069t\u0065"
	case 11:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

func ParseUnionST_PositivePercentage(s string) (ST_PositivePercentage, error) {
	_dbfad := ST_PositivePercentage{}
	if _a.ST_PositivePercentagePatternRe.MatchString(s) {
		_dbfad.ST_PositivePercentage = &ST_Percentage{}
		_dbfad.ST_PositivePercentage.ST_Percentage = &s
	} else {
		_bcacd, _bgafd := _fg.ParseInt(s, 10, 32)
		if _bgafd != nil {
			return _dbfad, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _bgafd)
		}
		_afdfb := int32(_bcacd)
		_dbfad.ST_PositivePercentageDecimal = &_afdfb
	}
	return _dbfad, nil
}

func (_febgb *CT_NonVisualContentPartProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cedg := range start.Attr {
		if _cedg.Name.Local == "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et" {
			_dgeb, _ageaa := _fg.ParseBool(_cedg.Value)
			if _ageaa != nil {
				return _ageaa
			}
			_febgb.IsCommentAttr = &_dgeb
			continue
		}
	}
_fbbeb:
	for {
		_bfbag, _ebacc := d.Token()
		if _ebacc != nil {
			return _ebacc
		}
		switch _ddge := _bfbag.(type) {
		case _g.StartElement:
			switch _ddge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}:
				_febgb.CpLocks = NewCT_ContentPartLocking()
				if _bgeea := d.DecodeElement(_febgb.CpLocks, &_ddge); _bgeea != nil {
					return _bgeea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_febgb.ExtLst = NewCT_OfficeArtExtensionList()
				if _efcfg := d.DecodeElement(_febgb.ExtLst, &_ddge); _efcfg != nil {
					return _efcfg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u0050\u0072o\u0070\u0065\u0072t\u0069\u0065\u0073\u0020\u0025\u0076", _ddge.Name)
				if _bfef := d.Skip(); _bfef != nil {
					return _bfef
				}
			}
		case _g.EndElement:
			break _fbbeb
		case _g.CharData:
		}
	}
	return nil
}

func (_bggba *CT_TextNoAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextBulletColor and its children
func (_gdbgc *EG_TextBulletColor) Validate() error {
	return _gdbgc.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the EG_Text3D and its children, prefixing error messages with path
func (_dedggc *EG_Text3D) ValidateWithPath(path string) error {
	if _dedggc.Sp3d != nil {
		if _bfce := _dedggc.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _bfce != nil {
			return _bfce
		}
	}
	if _dedggc.FlatTx != nil {
		if _ddgab := _dedggc.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _ddgab != nil {
			return _ddgab
		}
	}
	return nil
}

func (_eefg *CT_FontReference) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eefg.IdxAttr = ST_FontCollectionIndex(1)
	for _, _bcgd := range start.Attr {
		if _bcgd.Name.Local == "\u0069\u0064\u0078" {
			_eefg.IdxAttr.UnmarshalXMLAttr(_bcgd)
			continue
		}
	}
_acfed:
	for {
		_beedb, _fdea := d.Token()
		if _fdea != nil {
			return _fdea
		}
		switch _gfdg := _beedb.(type) {
		case _g.StartElement:
			switch _gfdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eefg.ScrgbClr = NewCT_ScRgbColor()
				if _fedf := d.DecodeElement(_eefg.ScrgbClr, &_gfdg); _fedf != nil {
					return _fedf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_eefg.SrgbClr = NewCT_SRgbColor()
				if _bbdd := d.DecodeElement(_eefg.SrgbClr, &_gfdg); _bbdd != nil {
					return _bbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_eefg.HslClr = NewCT_HslColor()
				if _edfec := d.DecodeElement(_eefg.HslClr, &_gfdg); _edfec != nil {
					return _edfec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_eefg.SysClr = NewCT_SystemColor()
				if _eabfc := d.DecodeElement(_eefg.SysClr, &_gfdg); _eabfc != nil {
					return _eabfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_eefg.SchemeClr = NewCT_SchemeColor()
				if _cgeeb := d.DecodeElement(_eefg.SchemeClr, &_gfdg); _cgeeb != nil {
					return _cgeeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_eefg.PrstClr = NewCT_PresetColor()
				if _gfcg := d.DecodeElement(_eefg.PrstClr, &_gfdg); _gfcg != nil {
					return _gfcg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025v", _gfdg.Name)
				if _bccbe := d.Skip(); _bccbe != nil {
					return _bccbe
				}
			}
		case _g.EndElement:
			break _acfed
		case _g.CharData:
		}
	}
	return nil
}

func (_gced *CT_GraphicalObjectFrameLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gced.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gced.NoGrpAttr))})
	}
	if _gced.NoDrilldownAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gced.NoDrilldownAttr))})
	}
	if _gced.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gced.NoSelectAttr))})
	}
	if _gced.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gced.NoChangeAspectAttr))})
	}
	if _gced.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gced.NoMoveAttr))})
	}
	if _gced.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_gced.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _gced.ExtLst != nil {
		_ceadf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gced.ExtLst, _ceadf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextBody and its children, prefixing error messages with path
func (_afdcd *CT_TextBody) ValidateWithPath(path string) error {
	if _egege := _afdcd.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _egege != nil {
		return _egege
	}
	if _afdcd.LstStyle != nil {
		if _caccb := _afdcd.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _caccb != nil {
			return _caccb
		}
	}
	for _ccaag, _cfadb := range _afdcd.P {
		if _dcad := _cfadb.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0050\u005b\u0025\u0064\u005d", path, _ccaag)); _dcad != nil {
			return _dcad
		}
	}
	return nil
}

func NewCT_Blip() *CT_Blip { _eggag := &CT_Blip{}; return _eggag }

// Validate validates the CT_Point3D and its children
func (_fbfe *CT_Point3D) Validate() error {
	return _fbfe.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044")
}

func (_gebd *CT_Percentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _gebd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gbed *CT_FontCollection) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gbed.Latin = NewCT_TextFont()
	_gbed.Ea = NewCT_TextFont()
	_gbed.Cs = NewCT_TextFont()
_deba:
	for {
		_dfdg, _gcgf := d.Token()
		if _gcgf != nil {
			return _gcgf
		}
		switch _agdgf := _dfdg.(type) {
		case _g.StartElement:
			switch _agdgf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				if _cage := d.DecodeElement(_gbed.Latin, &_agdgf); _cage != nil {
					return _cage
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				if _bgda := d.DecodeElement(_gbed.Ea, &_agdgf); _bgda != nil {
					return _bgda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				if _bfdd := d.DecodeElement(_gbed.Cs, &_agdgf); _bfdd != nil {
					return _bfdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_bggbb := NewCT_SupplementalFont()
				if _ccfd := d.DecodeElement(_bggbb, &_agdgf); _ccfd != nil {
					return _ccfd
				}
				_gbed.Font = append(_gbed.Font, _bggbb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbed.ExtLst = NewCT_OfficeArtExtensionList()
				if _ebfd := d.DecodeElement(_gbed.ExtLst, &_agdgf); _ebfd != nil {
					return _ebfd
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _agdgf.Name)
				if _efdeb := d.Skip(); _efdeb != nil {
					return _efdeb
				}
			}
		case _g.EndElement:
			break _deba
		case _g.CharData:
		}
	}
	return nil
}

type CT_PositiveFixedAngle struct{ ValAttr int32 }

type CT_SoftEdgesEffect struct{ RadAttr int64 }

// ValidateWithPath validates the Graphic and its children, prefixing error messages with path
func (_fcfdd *Graphic) ValidateWithPath(path string) error {
	if _bafbc := _fcfdd.CT_GraphicalObject.ValidateWithPath(path); _bafbc != nil {
		return _bafbc
	}
	return nil
}

type ST_PitchFamily byte

func (_adfec ST_TextAnchoringType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eedbbg := _g.Attr{}
	_eedbbg.Name = name
	switch _adfec {
	case ST_TextAnchoringTypeUnset:
		_eedbbg.Value = ""
	case ST_TextAnchoringTypeT:
		_eedbbg.Value = "\u0074"
	case ST_TextAnchoringTypeCtr:
		_eedbbg.Value = "\u0063\u0074\u0072"
	case ST_TextAnchoringTypeB:
		_eedbbg.Value = "\u0062"
	case ST_TextAnchoringTypeJust:
		_eedbbg.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAnchoringTypeDist:
		_eedbbg.Value = "\u0064\u0069\u0073\u0074"
	}
	return _eedbbg, nil
}

type Tbl struct{ CT_Table }

type CT_TextBulletSizePoint struct{ ValAttr int32 }

func (_dcdbfa ST_TextHorzOverflowType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dcdbfa.String(), start)
}

func (_bcaab *EG_ColorChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bcaab.ScrgbClr != nil {
		_ebcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_bcaab.ScrgbClr, _ebcg)
	}
	if _bcaab.SrgbClr != nil {
		_gdgdg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_bcaab.SrgbClr, _gdgdg)
	}
	if _bcaab.HslClr != nil {
		_fcagc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_bcaab.HslClr, _fcagc)
	}
	if _bcaab.SysClr != nil {
		_daaga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_bcaab.SysClr, _daaga)
	}
	if _bcaab.SchemeClr != nil {
		_ggbed := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_bcaab.SchemeClr, _ggbed)
	}
	if _bcaab.PrstClr != nil {
		_bcfca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_bcaab.PrstClr, _bcfca)
	}
	return nil
}

func NewCT_EffectStyleList() *CT_EffectStyleList { _geba := &CT_EffectStyleList{}; return _geba }

func NewAG_Blob() *AG_Blob { _c := &AG_Blob{}; return _c }

// Validate validates the CT_BlendEffect and its children
func (_bcac *CT_BlendEffect) Validate() error {
	return _bcac.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074")
}

func (_ddf *CT_AdjPoint2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bc := range start.Attr {
		if _bc.Name.Local == "\u0078" {
			_efd, _acd := ParseUnionST_AdjCoordinate(_bc.Value)
			if _acd != nil {
				return _acd
			}
			_ddf.XAttr = _efd
			continue
		}
		if _bc.Name.Local == "\u0079" {
			_dg, _cdfg := ParseUnionST_AdjCoordinate(_bc.Value)
			if _cdfg != nil {
				return _cdfg
			}
			_ddf.YAttr = _dg
			continue
		}
	}
	for {
		_af, _gga := d.Token()
		if _gga != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041d\u006aP\u006fi\u006e\u0074\u0032\u0044\u003a\u0020\u0025s", _gga)
		}
		if _baeg, _ebcd := _af.(_g.EndElement); _ebcd && _baeg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Transform2D and its children, prefixing error messages with path
func (_gabgb *CT_Transform2D) ValidateWithPath(path string) error {
	if _gabgb.Off != nil {
		if _dcbbg := _gabgb.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _dcbbg != nil {
			return _dcbbg
		}
	}
	if _gabgb.Ext != nil {
		if _gceccf := _gabgb.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _gceccf != nil {
			return _gceccf
		}
	}
	return nil
}

func NewCT_TextBodyProperties() *CT_TextBodyProperties {
	_gfff := &CT_TextBodyProperties{}
	return _gfff
}

// Validate validates the CT_VideoFile and its children
func (_cgdga *CT_VideoFile) Validate() error {
	return _cgdga.ValidateWithPath("\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065")
}

func (_ccfcb *ST_LightRigType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ccfcb = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
		*_ccfcb = 1
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
		*_ccfcb = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
		*_ccfcb = 3
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
		*_ccfcb = 4
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
		*_ccfcb = 5
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
		*_ccfcb = 6
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
		*_ccfcb = 7
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
		*_ccfcb = 8
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
		*_ccfcb = 9
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
		*_ccfcb = 10
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
		*_ccfcb = 11
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
		*_ccfcb = 12
	case "\u0074h\u0072\u0065\u0065\u0050\u0074":
		*_ccfcb = 13
	case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
		*_ccfcb = 14
	case "\u0073\u006f\u0066\u0074":
		*_ccfcb = 15
	case "\u0068\u0061\u0072s\u0068":
		*_ccfcb = 16
	case "\u0066\u006c\u006fo\u0064":
		*_ccfcb = 17
	case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
		*_ccfcb = 18
	case "\u006do\u0072\u006e\u0069\u006e\u0067":
		*_ccfcb = 19
	case "\u0073u\u006e\u0072\u0069\u0073\u0065":
		*_ccfcb = 20
	case "\u0073\u0075\u006e\u0073\u0065\u0074":
		*_ccfcb = 21
	case "\u0063\u0068\u0069\u006c\u006c\u0079":
		*_ccfcb = 22
	case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
		*_ccfcb = 23
	case "\u0066\u006c\u0061\u0074":
		*_ccfcb = 24
	case "\u0074\u0077\u006fP\u0074":
		*_ccfcb = 25
	case "\u0067\u006c\u006f\u0077":
		*_ccfcb = 26
	case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
		*_ccfcb = 27
	}
	return nil
}

// Validate validates the CT_GvmlGraphicFrameNonVisual and its children
func (_aacc *CT_GvmlGraphicFrameNonVisual) Validate() error {
	return _aacc.ValidateWithPath("\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c")
}

func NewCT_Transform2D() *CT_Transform2D { _ffaggb := &CT_Transform2D{}; return _ffaggb }

func (_bdfbc *CT_GraphicalObject) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dgeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_bdfbc.GraphicData, _dgeg)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AnimationChartBuildProperties and its children, prefixing error messages with path
func (_dfd *CT_AnimationChartBuildProperties) ValidateWithPath(path string) error {
	if _dfd.BldAttr != nil {
		if _cdab := _dfd.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _cdab != nil {
			return _cdab
		}
	}
	return nil
}

func NewCT_DuotoneEffect() *CT_DuotoneEffect { _ecab := &CT_DuotoneEffect{}; return _ecab }

func (_eebaa *CT_DashStop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _eebaa.DAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070"}, Value: _bb.Sprintf("\u0025\u0076", _eebaa.SpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_BackgroundFillStyleList() *CT_BackgroundFillStyleList {
	_ede := &CT_BackgroundFillStyleList{}
	return _ede
}

// ValidateWithPath validates the EG_TextBulletSize and its children, prefixing error messages with path
func (_edbfdg *EG_TextBulletSize) ValidateWithPath(path string) error {
	if _edbfdg.BuSzTx != nil {
		if _gcea := _edbfdg.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _gcea != nil {
			return _gcea
		}
	}
	if _edbfdg.BuSzPct != nil {
		if _ceeba := _edbfdg.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _ceeba != nil {
			return _ceeba
		}
	}
	if _edbfdg.BuSzPts != nil {
		if _abdgf := _edbfdg.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _abdgf != nil {
			return _abdgf
		}
	}
	return nil
}

func (_abaga *CT_TextBody) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cdaab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_abaga.BodyPr, _cdaab)
	if _abaga.LstStyle != nil {
		_geecbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_abaga.LstStyle, _geecbe)
	}
	_egagd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070"}}
	for _, _adfce := range _abaga.P {
		e.EncodeElement(_adfce, _egagd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cdeg *CT_QuickTimeFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _begf := range start.Attr {
		if _begf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _begf.Name.Local == "\u006c\u0069\u006e\u006b" || _begf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _begf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cefbb, _begaa := _begf.Value, error(nil)
			if _begaa != nil {
				return _begaa
			}
			_cdeg.LinkAttr = _cefbb
			continue
		}
	}
_geaec:
	for {
		_ceaff, _ggbge := d.Token()
		if _ggbge != nil {
			return _ggbge
		}
		switch _fadff := _ceaff.(type) {
		case _g.StartElement:
			switch _fadff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdeg.ExtLst = NewCT_OfficeArtExtensionList()
				if _dcagg := d.DecodeElement(_cdeg.ExtLst, &_fadff); _dcagg != nil {
					return _dcagg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065\u0020\u0025v", _fadff.Name)
				if _bfegf := d.Skip(); _bfegf != nil {
					return _bfegf
				}
			}
		case _g.EndElement:
			break _geaec
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LineJoinRound and its children
func (_ffabg *CT_LineJoinRound) Validate() error {
	return _ffabg.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064")
}

func (_bdgea *CT_ColorSchemeAndMapping) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bdgea.ClrScheme = NewCT_ColorScheme()
_ebf:
	for {
		_bfbd, _ffef := d.Token()
		if _ffef != nil {
			return _ffef
		}
		switch _feaa := _bfbd.(type) {
		case _g.StartElement:
			switch _feaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _ebgc := d.DecodeElement(_bdgea.ClrScheme, &_feaa); _ebgc != nil {
					return _ebgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				_bdgea.ClrMap = NewCT_ColorMapping()
				if _ecbe := d.DecodeElement(_bdgea.ClrMap, &_feaa); _ecbe != nil {
					return _ecbe
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u006e\u0064\u004d\u0061p\u0070\u0069\u006e\u0067\u0020%\u0076", _feaa.Name)
				if _eebcc := d.Skip(); _eebcc != nil {
					return _eebcc
				}
			}
		case _g.EndElement:
			break _ebf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LightRig and its children, prefixing error messages with path
func (_agae *CT_LightRig) ValidateWithPath(path string) error {
	if _agae.RigAttr == ST_LightRigTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002fR\u0069\u0067\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bcae := _agae.RigAttr.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0041\u0074\u0074\u0072"); _bcae != nil {
		return _bcae
	}
	if _agae.DirAttr == ST_LightRigDirectionUnset {
		return _bb.Errorf("\u0025\u0073\u002fD\u0069\u0072\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cffad := _agae.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _cffad != nil {
		return _cffad
	}
	if _agae.Rot != nil {
		if _bagbe := _agae.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _bagbe != nil {
			return _bagbe
		}
	}
	return nil
}

type CT_PresetLineDashProperties struct{ ValAttr ST_PresetLineDashVal }

func (_beaee *CT_SoftEdgesEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _beaee.RadAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbgc *CT_AlphaOutsetEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dbgc.RadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_dbgc.RadAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FlatText and its children, prefixing error messages with path
func (_bbbe *CT_FlatText) ValidateWithPath(path string) error {
	if _bbbe.ZAttr != nil {
		if _eacf := _bbbe.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _eacf != nil {
			return _eacf
		}
	}
	return nil
}

func (_gggeb *CT_TextSpacing) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gggeb.SpcPct != nil {
		_cafg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0063\u0074"}}
		e.EncodeElement(_gggeb.SpcPct, _cafg)
	}
	if _gggeb.SpcPts != nil {
		_bdbba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0074\u0073"}}
		e.EncodeElement(_gggeb.SpcPts, _bdbba)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_FillStyleList struct{ EG_FillProperties []*EG_FillProperties }

func NewCT_SoftEdgesEffect() *CT_SoftEdgesEffect {
	_dacfb := &CT_SoftEdgesEffect{}
	_dacfb.RadAttr = 0
	return _dacfb
}

func (_bfbee ST_AnimationBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ggafe := _g.Attr{}
	_ggafe.Name = name
	switch _bfbee {
	case ST_AnimationBuildTypeUnset:
		_ggafe.Value = ""
	case ST_AnimationBuildTypeAllAtOnce:
		_ggafe.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _ggafe, nil
}

func (_effbb *CT_PresetShadowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_effbb.PrstAttr = ST_PresetShadowVal(1)
	for _, _fegcce := range start.Attr {
		if _fegcce.Name.Local == "\u0070\u0072\u0073\u0074" {
			_effbb.PrstAttr.UnmarshalXMLAttr(_fegcce)
			continue
		}
		if _fegcce.Name.Local == "\u0064\u0069\u0073\u0074" {
			_ggeg, _bdefb := _fg.ParseInt(_fegcce.Value, 10, 64)
			if _bdefb != nil {
				return _bdefb
			}
			_effbb.DistAttr = &_ggeg
			continue
		}
		if _fegcce.Name.Local == "\u0064\u0069\u0072" {
			_bfdcf, _fedda := _fg.ParseInt(_fegcce.Value, 10, 32)
			if _fedda != nil {
				return _fedda
			}
			_fgffg := int32(_bfdcf)
			_effbb.DirAttr = &_fgffg
			continue
		}
	}
_bgad:
	for {
		_fgefc, _bggc := d.Token()
		if _bggc != nil {
			return _bggc
		}
		switch _gffeba := _fgefc.(type) {
		case _g.StartElement:
			switch _gffeba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_effbb.ScrgbClr = NewCT_ScRgbColor()
				if _abce := d.DecodeElement(_effbb.ScrgbClr, &_gffeba); _abce != nil {
					return _abce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_effbb.SrgbClr = NewCT_SRgbColor()
				if _dfca := d.DecodeElement(_effbb.SrgbClr, &_gffeba); _dfca != nil {
					return _dfca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_effbb.HslClr = NewCT_HslColor()
				if _bcdaa := d.DecodeElement(_effbb.HslClr, &_gffeba); _bcdaa != nil {
					return _bcdaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_effbb.SysClr = NewCT_SystemColor()
				if _acca := d.DecodeElement(_effbb.SysClr, &_gffeba); _acca != nil {
					return _acca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_effbb.SchemeClr = NewCT_SchemeColor()
				if _fbdf := d.DecodeElement(_effbb.SchemeClr, &_gffeba); _fbdf != nil {
					return _fbdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_effbb.PrstClr = NewCT_PresetColor()
				if _cddd := d.DecodeElement(_effbb.PrstClr, &_gffeba); _cddd != nil {
					return _cddd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _gffeba.Name)
				if _adaafe := d.Skip(); _adaafe != nil {
					return _adaafe
				}
			}
		case _g.EndElement:
			break _bgad
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_beeec *CT_Connection) ValidateWithPath(path string) error { return nil }

func NewCT_GvmlConnector() *CT_GvmlConnector {
	_dbgfe := &CT_GvmlConnector{}
	_dbgfe.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_dbgfe.SpPr = NewCT_ShapeProperties()
	return _dbgfe
}

type ST_TextWrappingType byte

type CT_InverseTransform struct{}

type CT_Blip struct {
	CstateAttr ST_BlipCompression
	Choice     []*CT_BlipChoice
	ExtLst     *CT_OfficeArtExtensionList
	EmbedAttr  *string
	LinkAttr   *string
}

type ST_TextUnderlineType byte

// ValidateWithPath validates the CT_GraphicalObjectData and its children, prefixing error messages with path
func (_aadc *CT_GraphicalObjectData) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_GvmlConnectorNonVisual and its children
func (_aadeb *CT_GvmlConnectorNonVisual) Validate() error {
	return _aadeb.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l")
}

// ValidateWithPath validates the EG_LineFillProperties and its children, prefixing error messages with path
func (_ffeac *EG_LineFillProperties) ValidateWithPath(path string) error {
	if _ffeac.NoFill != nil {
		if _bfegc := _ffeac.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bfegc != nil {
			return _bfegc
		}
	}
	if _ffeac.SolidFill != nil {
		if _egegb := _ffeac.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _egegb != nil {
			return _egegb
		}
	}
	if _ffeac.GradFill != nil {
		if _fagdge := _ffeac.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fagdge != nil {
			return _fagdge
		}
	}
	if _ffeac.PattFill != nil {
		if _efegb := _ffeac.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _efegb != nil {
			return _efegb
		}
	}
	return nil
}

func (_dbdda ST_PathFillMode) String() string {
	switch _dbdda {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d"
	case 3:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case 4:
		return "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case 5:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return ""
}

// ValidateWithPath validates the EG_TextGeometry and its children, prefixing error messages with path
func (_beceg *EG_TextGeometry) ValidateWithPath(path string) error {
	if _beceg.CustGeom != nil {
		if _ebabd := _beceg.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _ebabd != nil {
			return _ebabd
		}
	}
	if _beceg.PrstTxWarp != nil {
		if _aedf := _beceg.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _aedf != nil {
			return _aedf
		}
	}
	return nil
}

func (_dgccd *CT_NonVisualDrawingShapeProps) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dgccd.TxBoxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078\u0042o\u0078"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dgccd.TxBoxAttr))})
	}
	e.EncodeToken(start)
	if _dgccd.SpLocks != nil {
		_gecf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_dgccd.SpLocks, _gecf)
	}
	if _dgccd.ExtLst != nil {
		_fdcc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgccd.ExtLst, _fdcc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cefd *ST_CompoundLine) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cefd = 0
	case "\u0073\u006e\u0067":
		*_cefd = 1
	case "\u0064\u0062\u006c":
		*_cefd = 2
	case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
		*_cefd = 3
	case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
		*_cefd = 4
	case "\u0074\u0072\u0069":
		*_cefd = 5
	}
	return nil
}

func (_cgeab *CT_GammaTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_gccb, _edbf := d.Token()
		if _edbf != nil {
			return _bb.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d: \u0025\u0073", _edbf)
		}
		if _gbda, _eeef := _gccb.(_g.EndElement); _eeef && _gbda.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TileFlipMode byte

type CT_PositivePercentage struct{ ValAttr ST_PositivePercentage }

type ST_PresetPatternVal byte

// ValidateWithPath validates the CT_BlipChoice and its children, prefixing error messages with path
func (_dbbc *CT_BlipChoice) ValidateWithPath(path string) error {
	for _eaaea, _beccd := range _dbbc.AlphaBiLevel {
		if _cbgcd := _beccd.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c\u005b\u0025\u0064\u005d", path, _eaaea)); _cbgcd != nil {
			return _cbgcd
		}
	}
	for _aaed, _gfa := range _dbbc.AlphaCeiling {
		if _cggb := _gfa.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067\u005b\u0025\u0064\u005d", path, _aaed)); _cggb != nil {
			return _cggb
		}
	}
	for _gdfe, _daa := range _dbbc.AlphaFloor {
		if _bffb := _daa.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006fr\u005b\u0025\u0064\u005d", path, _gdfe)); _bffb != nil {
			return _bffb
		}
	}
	for _ecc, _bggf := range _dbbc.AlphaInv {
		if _fabc := _bggf.ValidateWithPath(_bb.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u005b\u0025\u0064\u005d", path, _ecc)); _fabc != nil {
			return _fabc
		}
	}
	for _bdf, _gfd := range _dbbc.AlphaMod {
		if _fdbb := _gfd.ValidateWithPath(_bb.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u005b\u0025\u0064\u005d", path, _bdf)); _fdbb != nil {
			return _fdbb
		}
	}
	for _gegc, _bcgb := range _dbbc.AlphaModFix {
		if _gbdg := _bcgb.ValidateWithPath(_bb.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004do\u0064\u0046i\u0078\u005b\u0025\u0064\u005d", path, _gegc)); _gbdg != nil {
			return _gbdg
		}
	}
	for _aaeg, _efgdg := range _dbbc.AlphaRepl {
		if _bcdbe := _efgdg.ValidateWithPath(_bb.Sprintf("\u0025\u0073/\u0041\u006c\u0070h\u0061\u0052\u0065\u0070\u006c\u005b\u0025\u0064\u005d", path, _aaeg)); _bcdbe != nil {
			return _bcdbe
		}
	}
	for _aeac, _ffcf := range _dbbc.BiLevel {
		if _eggd := _ffcf.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0042\u0069\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _aeac)); _eggd != nil {
			return _eggd
		}
	}
	for _fccg, _feccc := range _dbbc.Blur {
		if _ege := _feccc.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0042\u006c\u0075\u0072\u005b\u0025\u0064\u005d", path, _fccg)); _ege != nil {
			return _ege
		}
	}
	for _aeae, _aged := range _dbbc.ClrChange {
		if _fddf := _aged.ValidateWithPath(_bb.Sprintf("\u0025\u0073/\u0043\u006c\u0072C\u0068\u0061\u006e\u0067\u0065\u005b\u0025\u0064\u005d", path, _aeae)); _fddf != nil {
			return _fddf
		}
	}
	for _beac, _fcad := range _dbbc.ClrRepl {
		if _bfba := _fcad.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u006c\u0072\u0052\u0065\u0070l\u005b\u0025\u0064\u005d", path, _beac)); _bfba != nil {
			return _bfba
		}
	}
	for _bgcd, _ggc := range _dbbc.Duotone {
		if _eeed := _ggc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0044\u0075\u006f\u0074\u006f\u006ee\u005b\u0025\u0064\u005d", path, _bgcd)); _eeed != nil {
			return _eeed
		}
	}
	for _fgea, _fcgg := range _dbbc.FillOverlay {
		if _bgaf := _fcgg.ValidateWithPath(_bb.Sprintf("\u0025s\u002fF\u0069\u006c\u006c\u004f\u0076e\u0072\u006ca\u0079\u005b\u0025\u0064\u005d", path, _fgea)); _bgaf != nil {
			return _bgaf
		}
	}
	for _bdeaa, _deg := range _dbbc.Grayscl {
		if _ddag := _deg.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0061\u0079\u0073\u0063l\u005b\u0025\u0064\u005d", path, _bdeaa)); _ddag != nil {
			return _ddag
		}
	}
	for _dfdf, _baf := range _dbbc.Hsl {
		if _fbgd := _baf.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0048\u0073\u006c\u005b\u0025\u0064\u005d", path, _dfdf)); _fbgd != nil {
			return _fbgd
		}
	}
	for _dcac, _caca := range _dbbc.Lum {
		if _dggf := _caca.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u004c\u0075\u006d\u005b\u0025\u0064\u005d", path, _dcac)); _dggf != nil {
			return _dggf
		}
	}
	for _efdd, _dgad := range _dbbc.Tint {
		if _gaee := _dgad.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0054\u0069\u006e\u0074\u005b\u0025\u0064\u005d", path, _efdd)); _gaee != nil {
			return _gaee
		}
	}
	return nil
}

func (_effebg *CT_PatternFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _effebg.PrstAttr != ST_PresetPatternValUnset {
		_egbfc, _cedfg := _effebg.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _cedfg != nil {
			return _cedfg
		}
		start.Attr = append(start.Attr, _egbfc)
	}
	e.EncodeToken(start)
	if _effebg.FgClr != nil {
		_abag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_effebg.FgClr, _abag)
	}
	if _effebg.BgClr != nil {
		_badcc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_effebg.BgClr, _badcc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gcec *CT_ColorMappingOverrideChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agec:
	for {
		_feab, _dccf := d.Token()
		if _dccf != nil {
			return _dccf
		}
		switch _dgff := _feab.(type) {
		case _g.StartElement:
			switch _dgff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_gcec.MasterClrMapping = NewCT_EmptyElement()
				if _gfdd := d.DecodeElement(_gcec.MasterClrMapping, &_dgff); _gfdd != nil {
					return _gfdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_gcec.OverrideClrMapping = NewCT_ColorMapping()
				if _ccfg := d.DecodeElement(_gcec.OverrideClrMapping, &_dgff); _ccfg != nil {
					return _ccfg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067O\u0076\u0065\u0072\u0072\u0069\u0064e\u0043\u0068o\u0069\u0063e\u0020%\u0076", _dgff.Name)
				if _dcag := d.Skip(); _dcag != nil {
					return _dcag
				}
			}
		case _g.EndElement:
			break _agec
		case _g.CharData:
		}
	}
	return nil
}

func (_gdagad ST_TextCapsType) Validate() error { return _gdagad.ValidateWithPath("") }

// ValidateWithPath validates the CT_GroupLocking and its children, prefixing error messages with path
func (_ggcbc *CT_GroupLocking) ValidateWithPath(path string) error {
	if _ggcbc.ExtLst != nil {
		if _gffbe := _ggcbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gffbe != nil {
			return _gffbe
		}
	}
	return nil
}

func (_gafcb *EG_FillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gafcb.NoFill != nil {
		_gcfdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gafcb.NoFill, _gcfdg)
	}
	if _gafcb.SolidFill != nil {
		_gbdcg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gafcb.SolidFill, _gbdcg)
	}
	if _gafcb.GradFill != nil {
		_bdffe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gafcb.GradFill, _bdffe)
	}
	if _gafcb.BlipFill != nil {
		_egggcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gafcb.BlipFill, _egggcg)
	}
	if _gafcb.PattFill != nil {
		_bgbfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gafcb.PattFill, _bgbfa)
	}
	if _gafcb.GrpFill != nil {
		_abdda := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_gafcb.GrpFill, _abdda)
	}
	return nil
}

func NewCT_LineJoinBevel() *CT_LineJoinBevel { _gbdcd := &CT_LineJoinBevel{}; return _gbdcd }

// ValidateWithPath validates the CT_ConnectorLocking and its children, prefixing error messages with path
func (_ceedf *CT_ConnectorLocking) ValidateWithPath(path string) error {
	if _ceedf.ExtLst != nil {
		if _ceaa := _ceedf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceaa != nil {
			return _ceaa
		}
	}
	return nil
}

func (_gcdbe ST_TextVertOverflowType) ValidateWithPath(path string) error {
	switch _gcdbe {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcdbe))
	}
	return nil
}

type CT_TablePropertiesChoice struct {
	TableStyle   *CT_TableStyle
	TableStyleId *string
}

// Validate validates the CT_PositivePercentage and its children
func (_dffc *CT_PositivePercentage) Validate() error {
	return _dffc.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
}

func NewCT_NoFillProperties() *CT_NoFillProperties { _ffbaa := &CT_NoFillProperties{}; return _ffbaa }

func (_feeae ST_LightRigType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_abcea := _g.Attr{}
	_abcea.Name = name
	switch _feeae {
	case ST_LightRigTypeUnset:
		_abcea.Value = ""
	case ST_LightRigTypeLegacyFlat1:
		_abcea.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case ST_LightRigTypeLegacyFlat2:
		_abcea.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case ST_LightRigTypeLegacyFlat3:
		_abcea.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case ST_LightRigTypeLegacyFlat4:
		_abcea.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case ST_LightRigTypeLegacyNormal1:
		_abcea.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case ST_LightRigTypeLegacyNormal2:
		_abcea.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case ST_LightRigTypeLegacyNormal3:
		_abcea.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case ST_LightRigTypeLegacyNormal4:
		_abcea.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case ST_LightRigTypeLegacyHarsh1:
		_abcea.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case ST_LightRigTypeLegacyHarsh2:
		_abcea.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case ST_LightRigTypeLegacyHarsh3:
		_abcea.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case ST_LightRigTypeLegacyHarsh4:
		_abcea.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case ST_LightRigTypeThreePt:
		_abcea.Value = "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case ST_LightRigTypeBalanced:
		_abcea.Value = "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case ST_LightRigTypeSoft:
		_abcea.Value = "\u0073\u006f\u0066\u0074"
	case ST_LightRigTypeHarsh:
		_abcea.Value = "\u0068\u0061\u0072s\u0068"
	case ST_LightRigTypeFlood:
		_abcea.Value = "\u0066\u006c\u006fo\u0064"
	case ST_LightRigTypeContrasting:
		_abcea.Value = "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case ST_LightRigTypeMorning:
		_abcea.Value = "\u006do\u0072\u006e\u0069\u006e\u0067"
	case ST_LightRigTypeSunrise:
		_abcea.Value = "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case ST_LightRigTypeSunset:
		_abcea.Value = "\u0073\u0075\u006e\u0073\u0065\u0074"
	case ST_LightRigTypeChilly:
		_abcea.Value = "\u0063\u0068\u0069\u006c\u006c\u0079"
	case ST_LightRigTypeFreezing:
		_abcea.Value = "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case ST_LightRigTypeFlat:
		_abcea.Value = "\u0066\u006c\u0061\u0074"
	case ST_LightRigTypeTwoPt:
		_abcea.Value = "\u0074\u0077\u006fP\u0074"
	case ST_LightRigTypeGlow:
		_abcea.Value = "\u0067\u006c\u006f\u0077"
	case ST_LightRigTypeBrightRoom:
		_abcea.Value = "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return _abcea, nil
}

func (_efbef ST_TextUnderlineType) Validate() error { return _efbef.ValidateWithPath("") }

func (_edaebb ST_LightRigType) Validate() error { return _edaebb.ValidateWithPath("") }

func (_bcbfae *CT_LineStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ffgef:
	for {
		_edcdc, _gfafg := d.Token()
		if _gfafg != nil {
			return _gfafg
		}
		switch _eaeff := _edcdc.(type) {
		case _g.StartElement:
			switch _eaeff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_ecfcc := NewCT_LineProperties()
				if _feaag := d.DecodeElement(_ecfcc, &_eaeff); _feaag != nil {
					return _feaag
				}
				_bcbfae.Ln = append(_bcbfae.Ln, _ecfcc)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _eaeff.Name)
				if _gfcfc := d.Skip(); _gfcfc != nil {
					return _gfcfc
				}
			}
		case _g.EndElement:
			break _ffgef
		case _g.CharData:
		}
	}
	return nil
}

func (_egbe ST_TextAnchoringType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_egbe.String(), start)
}

// Validate validates the CT_TextBodyProperties and its children
func (_ecabc *CT_TextBodyProperties) Validate() error {
	return _ecabc.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_ComplementTransform and its children, prefixing error messages with path
func (_baee *CT_ComplementTransform) ValidateWithPath(path string) error { return nil }

func (_gfgfd *CT_Path2DClose) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlUseShapeRectangle and its children
func (_efccb *CT_GvmlUseShapeRectangle) Validate() error {
	return _efccb.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065")
}

func (_bfgd *CT_OfficeArtExtension) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0072\u0069"}, Value: _bb.Sprintf("\u0025\u0076", _bfgd.UriAttr)})
	e.EncodeToken(start)
	if _bfgd.Any != nil {
		for _, _edfge := range _bfgd.Any {
			_edfge.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_DgmBuildStepUnset ST_DgmBuildStep = 0
	ST_DgmBuildStepSp    ST_DgmBuildStep = 1
	ST_DgmBuildStepBg    ST_DgmBuildStep = 2
)

// Validate validates the CT_GroupShapeProperties and its children
func (_ddbc *CT_GroupShapeProperties) Validate() error {
	return _ddbc.ValidateWithPath("\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_cgce *CT_GroupTransform2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgce.RotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_cgce.RotAttr)})
	}
	if _cgce.FlipHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cgce.FlipHAttr))})
	}
	if _cgce.FlipVAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cgce.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _cgce.Off != nil {
		_ecdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_cgce.Off, _ecdb)
	}
	if _cgce.Ext != nil {
		_aafg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_cgce.Ext, _aafg)
	}
	if _cgce.ChOff != nil {
		_fgadg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0068\u004f\u0066\u0066"}}
		e.EncodeElement(_cgce.ChOff, _fgadg)
	}
	if _cgce.ChExt != nil {
		_cfgf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0068\u0045\u0078\u0074"}}
		e.EncodeElement(_cgce.ChExt, _cfgf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Scale2D and its children, prefixing error messages with path
func (_dade *CT_Scale2D) ValidateWithPath(path string) error {
	if _dgefce := _dade.Sx.ValidateWithPath(path + "\u002f\u0053\u0078"); _dgefce != nil {
		return _dgefce
	}
	if _daaf := _dade.Sy.ValidateWithPath(path + "\u002f\u0053\u0079"); _daaf != nil {
		return _daaf
	}
	return nil
}

type TblStyleLst struct{ CT_TableStyleList }

const (
	ST_TextHorzOverflowTypeUnset    ST_TextHorzOverflowType = 0
	ST_TextHorzOverflowTypeOverflow ST_TextHorzOverflowType = 1
	ST_TextHorzOverflowTypeClip     ST_TextHorzOverflowType = 2
)

func (_faagdd ST_TextAlignType) ValidateWithPath(path string) error {
	switch _faagdd {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faagdd))
	}
	return nil
}

type CT_ContentPartLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

type CT_AudioCDTime struct {
	TrackAttr uint8
	TimeAttr  *uint32
}

// Validate validates the CT_TextTabStop and its children
func (_fcggfb *CT_TextTabStop) Validate() error {
	return _fcggfb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070")
}

func NewCT_TextUnderlineFillGroupWrapper() *CT_TextUnderlineFillGroupWrapper {
	_fdgab := &CT_TextUnderlineFillGroupWrapper{}
	return _fdgab
}

func (_bccbb *CT_HslColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0075\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _bccbb.HueAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0061\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _bccbb.SatAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0075\u006d"}, Value: _bb.Sprintf("\u0025\u0076", _bccbb.LumAttr)})
	e.EncodeToken(start)
	if _bccbb.EG_ColorTransform != nil {
		for _, _cbgaf := range _bccbb.EG_ColorTransform {
			_cbgaf.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_deace *CT_GraphicalObject) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_deace.GraphicData = NewCT_GraphicalObjectData()
_ecced:
	for {
		_ebag, _bafc := d.Token()
		if _bafc != nil {
			return _bafc
		}
		switch _gdedg := _ebag.(type) {
		case _g.StartElement:
			switch _gdedg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _dbggf := d.DecodeElement(_deace.GraphicData, &_gdedg); _dbggf != nil {
					return _dbggf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069c\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _gdedg.Name)
				if _bccd := d.Skip(); _bccd != nil {
					return _bccd
				}
			}
		case _g.EndElement:
			break _ecced
		case _g.CharData:
		}
	}
	return nil
}

func (_cfdg *CT_NonVisualGraphicFrameProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_egfdg:
	for {
		_ggaab, _efca := d.Token()
		if _efca != nil {
			return _efca
		}
		switch _ddaeg := _ggaab.(type) {
		case _g.StartElement:
			switch _ddaeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}:
				_cfdg.GraphicFrameLocks = NewCT_GraphicalObjectFrameLocking()
				if _cdffe := d.DecodeElement(_cfdg.GraphicFrameLocks, &_ddaeg); _cdffe != nil {
					return _cdffe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfdg.ExtLst = NewCT_OfficeArtExtensionList()
				if _addcc := d.DecodeElement(_cfdg.ExtLst, &_ddaeg); _addcc != nil {
					return _addcc
				}
			default:
				_fc.Log("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006de\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020%\u0076", _ddaeg.Name)
				if _fdaf := d.Skip(); _fdaf != nil {
					return _fdaf
				}
			}
		case _g.EndElement:
			break _egfdg
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TextBulletTypefaceFollowText() *CT_TextBulletTypefaceFollowText {
	_bfegfa := &CT_TextBulletTypefaceFollowText{}
	return _bfegfa
}

func NewCT_GvmlGraphicalObjectFrame() *CT_GvmlGraphicalObjectFrame {
	_cggag := &CT_GvmlGraphicalObjectFrame{}
	_cggag.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_cggag.Graphic = NewGraphic()
	_cggag.Xfrm = NewCT_Transform2D()
	return _cggag
}

func NewCT_SupplementalFont() *CT_SupplementalFont { _daafd := &CT_SupplementalFont{}; return _daafd }

func (_aaebda *EG_Effect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dbbag:
	for {
		_aaaacb, _cbcga := d.Token()
		if _cbcga != nil {
			return _cbcga
		}
		switch _ceeab := _aaaacb.(type) {
		case _g.StartElement:
			switch _ceeab.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_aaebda.Cont = NewCT_EffectContainer()
				if _acae := d.DecodeElement(_aaebda.Cont, &_ceeab); _acae != nil {
					return _acae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_aaebda.Effect = NewCT_EffectReference()
				if _ddfgg := d.DecodeElement(_aaebda.Effect, &_ceeab); _ddfgg != nil {
					return _ddfgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_aaebda.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _acccg := d.DecodeElement(_aaebda.AlphaBiLevel, &_ceeab); _acccg != nil {
					return _acccg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_aaebda.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _bffga := d.DecodeElement(_aaebda.AlphaCeiling, &_ceeab); _bffga != nil {
					return _bffga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_aaebda.AlphaFloor = NewCT_AlphaFloorEffect()
				if _eacgb := d.DecodeElement(_aaebda.AlphaFloor, &_ceeab); _eacgb != nil {
					return _eacgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_aaebda.AlphaInv = NewCT_AlphaInverseEffect()
				if _egfggf := d.DecodeElement(_aaebda.AlphaInv, &_ceeab); _egfggf != nil {
					return _egfggf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_aaebda.AlphaMod = NewCT_AlphaModulateEffect()
				if _abcb := d.DecodeElement(_aaebda.AlphaMod, &_ceeab); _abcb != nil {
					return _abcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_aaebda.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _acabg := d.DecodeElement(_aaebda.AlphaModFix, &_ceeab); _acabg != nil {
					return _acabg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_aaebda.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _gfcefa := d.DecodeElement(_aaebda.AlphaOutset, &_ceeab); _gfcefa != nil {
					return _gfcefa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_aaebda.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _dddaec := d.DecodeElement(_aaebda.AlphaRepl, &_ceeab); _dddaec != nil {
					return _dddaec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_aaebda.BiLevel = NewCT_BiLevelEffect()
				if _efbbfc := d.DecodeElement(_aaebda.BiLevel, &_ceeab); _efbbfc != nil {
					return _efbbfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_aaebda.Blend = NewCT_BlendEffect()
				if _eadfdb := d.DecodeElement(_aaebda.Blend, &_ceeab); _eadfdb != nil {
					return _eadfdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_aaebda.Blur = NewCT_BlurEffect()
				if _gdbdf := d.DecodeElement(_aaebda.Blur, &_ceeab); _gdbdf != nil {
					return _gdbdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_aaebda.ClrChange = NewCT_ColorChangeEffect()
				if _aafb := d.DecodeElement(_aaebda.ClrChange, &_ceeab); _aafb != nil {
					return _aafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_aaebda.ClrRepl = NewCT_ColorReplaceEffect()
				if _badge := d.DecodeElement(_aaebda.ClrRepl, &_ceeab); _badge != nil {
					return _badge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_aaebda.Duotone = NewCT_DuotoneEffect()
				if _edcaf := d.DecodeElement(_aaebda.Duotone, &_ceeab); _edcaf != nil {
					return _edcaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_aaebda.Fill = NewCT_FillEffect()
				if _baede := d.DecodeElement(_aaebda.Fill, &_ceeab); _baede != nil {
					return _baede
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_aaebda.FillOverlay = NewCT_FillOverlayEffect()
				if _efbaa := d.DecodeElement(_aaebda.FillOverlay, &_ceeab); _efbaa != nil {
					return _efbaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_aaebda.Glow = NewCT_GlowEffect()
				if _gdafc := d.DecodeElement(_aaebda.Glow, &_ceeab); _gdafc != nil {
					return _gdafc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_aaebda.Grayscl = NewCT_GrayscaleEffect()
				if _aebad := d.DecodeElement(_aaebda.Grayscl, &_ceeab); _aebad != nil {
					return _aebad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_aaebda.Hsl = NewCT_HSLEffect()
				if _fdcafb := d.DecodeElement(_aaebda.Hsl, &_ceeab); _fdcafb != nil {
					return _fdcafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_aaebda.InnerShdw = NewCT_InnerShadowEffect()
				if _gfdgc := d.DecodeElement(_aaebda.InnerShdw, &_ceeab); _gfdgc != nil {
					return _gfdgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aaebda.Lum = NewCT_LuminanceEffect()
				if _afabb := d.DecodeElement(_aaebda.Lum, &_ceeab); _afabb != nil {
					return _afabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_aaebda.OuterShdw = NewCT_OuterShadowEffect()
				if _bffge := d.DecodeElement(_aaebda.OuterShdw, &_ceeab); _bffge != nil {
					return _bffge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_aaebda.PrstShdw = NewCT_PresetShadowEffect()
				if _fegeg := d.DecodeElement(_aaebda.PrstShdw, &_ceeab); _fegeg != nil {
					return _fegeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_aaebda.Reflection = NewCT_ReflectionEffect()
				if _bddec := d.DecodeElement(_aaebda.Reflection, &_ceeab); _bddec != nil {
					return _bddec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_aaebda.RelOff = NewCT_RelativeOffsetEffect()
				if _gffbfc := d.DecodeElement(_aaebda.RelOff, &_ceeab); _gffbfc != nil {
					return _gffbfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_aaebda.SoftEdge = NewCT_SoftEdgesEffect()
				if _afgde := d.DecodeElement(_aaebda.SoftEdge, &_ceeab); _afgde != nil {
					return _afgde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_aaebda.Tint = NewCT_TintEffect()
				if _eafdb := d.DecodeElement(_aaebda.Tint, &_ceeab); _eafdb != nil {
					return _eafdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_aaebda.Xfrm = NewCT_TransformEffect()
				if _acggb := d.DecodeElement(_aaebda.Xfrm, &_ceeab); _acggb != nil {
					return _acggb
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0045\u0066\u0066e\u0063\u0074 \u0025\u0076", _ceeab.Name)
				if _efebd := d.Skip(); _efebd != nil {
					return _efebd
				}
			}
		case _g.EndElement:
			break _dbbag
		case _g.CharData:
		}
	}
	return nil
}

func (_fcead *Theme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fcead.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	for _, _ccfeb := range start.Attr {
		if _ccfeb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_faada, _cggeb := _ccfeb.Value, error(nil)
			if _cggeb != nil {
				return _cggeb
			}
			_fcead.NameAttr = &_faada
			continue
		}
	}
_ggcbce:
	for {
		_bagbdg, _gdbcg := d.Token()
		if _gdbcg != nil {
			return _gdbcg
		}
		switch _gfdedf := _bagbdg.(type) {
		case _g.StartElement:
			switch _gfdedf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _fagcd := d.DecodeElement(_fcead.ThemeElements, &_gfdedf); _fagcd != nil {
					return _fagcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_fcead.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _acdgc := d.DecodeElement(_fcead.ObjectDefaults, &_gfdedf); _acdgc != nil {
					return _acdgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_fcead.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _fgeaa := d.DecodeElement(_fcead.ExtraClrSchemeLst, &_gfdedf); _fgeaa != nil {
					return _fgeaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_fcead.CustClrLst = NewCT_CustomColorList()
				if _cdgc := d.DecodeElement(_fcead.CustClrLst, &_gfdedf); _cdgc != nil {
					return _cdgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcead.ExtLst = NewCT_OfficeArtExtensionList()
				if _edgea := d.DecodeElement(_fcead.ExtLst, &_gfdedf); _edgea != nil {
					return _edgea
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0068\u0065m\u0065 \u0025\u0076", _gfdedf.Name)
				if _ebcgb := d.Skip(); _ebcgb != nil {
					return _ebcgb
				}
			}
		case _g.EndElement:
			break _ggcbce
		case _g.CharData:
		}
	}
	return nil
}

func (_ccea *CT_LineEndProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ccea.TypeAttr != ST_LineEndTypeUnset {
		_acgef, _dafgf := _ccea.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dafgf != nil {
			return _dafgf
		}
		start.Attr = append(start.Attr, _acgef)
	}
	if _ccea.WAttr != ST_LineEndWidthUnset {
		_dbeaa, _bbacb := _ccea.WAttr.MarshalXMLAttr(_g.Name{Local: "\u0077"})
		if _bbacb != nil {
			return _bbacb
		}
		start.Attr = append(start.Attr, _dbeaa)
	}
	if _ccea.LenAttr != ST_LineEndLengthUnset {
		_cecgf, _dbgb := _ccea.LenAttr.MarshalXMLAttr(_g.Name{Local: "\u006c\u0065\u006e"})
		if _dbgb != nil {
			return _dbgb
		}
		start.Attr = append(start.Attr, _cecgf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bgfdce *ST_OnOffStyleType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_agcbe, _gfaef := d.Token()
	if _gfaef != nil {
		return _gfaef
	}
	if _ebfdb, _ddbbg := _agcbe.(_g.EndElement); _ddbbg && _ebfdb.Name == start.Name {
		*_bgfdce = 1
		return nil
	}
	if _fegde, _agdba := _agcbe.(_g.CharData); !_agdba {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agcbe)
	} else {
		switch string(_fegde) {
		case "":
			*_bgfdce = 0
		case "\u006f\u006e":
			*_bgfdce = 1
		case "\u006f\u0066\u0066":
			*_bgfdce = 2
		case "\u0064\u0065\u0066":
			*_bgfdce = 3
		}
	}
	_agcbe, _gfaef = d.Token()
	if _gfaef != nil {
		return _gfaef
	}
	if _acdee, _gdcba := _agcbe.(_g.EndElement); _gdcba && _acdee.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agcbe)
}

// ValidateWithPath validates the CT_Bevel and its children, prefixing error messages with path
func (_ebea *CT_Bevel) ValidateWithPath(path string) error {
	if _ebea.WAttr != nil {
		if *_ebea.WAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ebea.WAttr)
		}
		if *_ebea.WAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ebea.WAttr)
		}
	}
	if _ebea.HAttr != nil {
		if *_ebea.HAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ebea.HAttr)
		}
		if *_ebea.HAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ebea.HAttr)
		}
	}
	if _fgf := _ebea.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _fgf != nil {
		return _fgf
	}
	return nil
}

func (_gagega *ST_TextFontAlignType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gagega = 0
	case "\u0061\u0075\u0074\u006f":
		*_gagega = 1
	case "\u0074":
		*_gagega = 2
	case "\u0063\u0074\u0072":
		*_gagega = 3
	case "\u0062\u0061\u0073\u0065":
		*_gagega = 4
	case "\u0062":
		*_gagega = 5
	}
	return nil
}

type CT_TextBodyProperties struct {
	RotAttr              *int32
	SpcFirstLastParaAttr *bool
	VertOverflowAttr     ST_TextVertOverflowType
	HorzOverflowAttr     ST_TextHorzOverflowType
	VertAttr             ST_TextVerticalType
	WrapAttr             ST_TextWrappingType
	LInsAttr             *ST_Coordinate32
	TInsAttr             *ST_Coordinate32
	RInsAttr             *ST_Coordinate32
	BInsAttr             *ST_Coordinate32
	NumColAttr           *int32
	SpcColAttr           *int32
	RtlColAttr           *bool
	FromWordArtAttr      *bool
	AnchorAttr           ST_TextAnchoringType
	AnchorCtrAttr        *bool
	ForceAAAttr          *bool
	UprightAttr          *bool
	CompatLnSpcAttr      *bool
	PrstTxWarp           *CT_PresetTextShape
	NoAutofit            *CT_TextNoAutofit
	NormAutofit          *CT_TextNormalAutofit
	SpAutoFit            *CT_TextShapeAutofit
	Scene3d              *CT_Scene3D
	Sp3d                 *CT_Shape3D
	FlatTx               *CT_FlatText
	ExtLst               *CT_OfficeArtExtensionList
}

// Validate validates the CT_AlphaBiLevelEffect and its children
func (_gef *CT_AlphaBiLevelEffect) Validate() error {
	return _gef.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_gccde *ST_PathFillMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gccde = 0
	case "\u006e\u006f\u006e\u0065":
		*_gccde = 1
	case "\u006e\u006f\u0072\u006d":
		*_gccde = 2
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_gccde = 3
	case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
		*_gccde = 4
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_gccde = 5
	case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
		*_gccde = 6
	}
	return nil
}

func NewCT_ColorMappingOverride() *CT_ColorMappingOverride {
	_eagga := &CT_ColorMappingOverride{}
	_eagga.Choice = NewCT_ColorMappingOverrideChoice()
	return _eagga
}

func (_dcefdc *EG_TextAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dcefdc.NoAutofit != nil {
		_ffeca := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_dcefdc.NoAutofit, _ffeca)
	}
	if _dcefdc.NormAutofit != nil {
		_fafeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_dcefdc.NormAutofit, _fafeg)
	}
	if _dcefdc.SpAutoFit != nil {
		_efdeg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_dcefdc.SpAutoFit, _efdeg)
	}
	return nil
}

// Validate validates the CT_AlphaFloorEffect and its children
func (_fag *CT_AlphaFloorEffect) Validate() error {
	return _fag.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cbgcgd ST_BlipCompression) Validate() error { return _cbgcgd.ValidateWithPath("") }

func NewCT_GvmlTextShapeChoice() *CT_GvmlTextShapeChoice {
	_gaffg := &CT_GvmlTextShapeChoice{}
	return _gaffg
}

type CT_BlurEffect struct {
	RadAttr  *int64
	GrowAttr *bool
}

// Validate validates the CT_TableStyle and its children
func (_aggdf *CT_TableStyle) Validate() error {
	return _aggdf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}

func (_defbe ST_LineEndType) Validate() error { return _defbe.ValidateWithPath("") }

const (
	ST_TileFlipModeUnset ST_TileFlipMode = 0
	ST_TileFlipModeNone  ST_TileFlipMode = 1
	ST_TileFlipModeX     ST_TileFlipMode = 2
	ST_TileFlipModeY     ST_TileFlipMode = 3
	ST_TileFlipModeXy    ST_TileFlipMode = 4
)

func (_gdcea ST_BlendMode) String() string {
	switch _gdcea {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072"
	case 2:
		return "\u006d\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_GvmlPictureNonVisual and its children, prefixing error messages with path
func (_babgd *CT_GvmlPictureNonVisual) ValidateWithPath(path string) error {
	if _bdbaa := _babgd.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bdbaa != nil {
		return _bdbaa
	}
	if _fcfa := _babgd.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _fcfa != nil {
		return _fcfa
	}
	return nil
}

func (_bdgfde *ST_AnimationChartOnlyBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bdgfde = 0
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_bdgfde = 1
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_bdgfde = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_bdgfde = 3
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_bdgfde = 4
	}
	return nil
}

type ST_BlackWhiteMode byte

// Validate validates the CT_ScRgbColor and its children
func (_eadbd *CT_ScRgbColor) Validate() error {
	return _eadbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

func NewCT_BlendEffect() *CT_BlendEffect {
	_cdbd := &CT_BlendEffect{}
	_cdbd.BlendAttr = ST_BlendMode(1)
	_cdbd.Cont = NewCT_EffectContainer()
	return _cdbd
}

func (_gdgbfe *ST_RectAlignment) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_begag, _ggecb := d.Token()
	if _ggecb != nil {
		return _ggecb
	}
	if _dbbdgg, _cacge := _begag.(_g.EndElement); _cacge && _dbbdgg.Name == start.Name {
		*_gdgbfe = 1
		return nil
	}
	if _bcddd, _gfgdg := _begag.(_g.CharData); !_gfgdg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _begag)
	} else {
		switch string(_bcddd) {
		case "":
			*_gdgbfe = 0
		case "\u0074\u006c":
			*_gdgbfe = 1
		case "\u0074":
			*_gdgbfe = 2
		case "\u0074\u0072":
			*_gdgbfe = 3
		case "\u006c":
			*_gdgbfe = 4
		case "\u0063\u0074\u0072":
			*_gdgbfe = 5
		case "\u0072":
			*_gdgbfe = 6
		case "\u0062\u006c":
			*_gdgbfe = 7
		case "\u0062":
			*_gdgbfe = 8
		case "\u0062\u0072":
			*_gdgbfe = 9
		}
	}
	_begag, _ggecb = d.Token()
	if _ggecb != nil {
		return _ggecb
	}
	if _dffdc, _gcabd := _begag.(_g.EndElement); _gcabd && _dffdc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _begag)
}

// ValidateWithPath validates the CT_TileInfoProperties and its children, prefixing error messages with path
func (_bdbab *CT_TileInfoProperties) ValidateWithPath(path string) error {
	if _bdbab.TxAttr != nil {
		if _adadc := _bdbab.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _adadc != nil {
			return _adadc
		}
	}
	if _bdbab.TyAttr != nil {
		if _dbbdg := _bdbab.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _dbbdg != nil {
			return _dbbdg
		}
	}
	if _bdbab.SxAttr != nil {
		if _gedeb := _bdbab.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _gedeb != nil {
			return _gedeb
		}
	}
	if _bdbab.SyAttr != nil {
		if _ceaed := _bdbab.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _ceaed != nil {
			return _ceaed
		}
	}
	if _acegf := _bdbab.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _acegf != nil {
		return _acegf
	}
	if _gaffge := _bdbab.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _gaffge != nil {
		return _gaffge
	}
	return nil
}

func (_ffcda *CT_FillOverlayEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ffcda.BlendAttr = ST_BlendMode(1)
	for _, _fcgd := range start.Attr {
		if _fcgd.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_ffcda.BlendAttr.UnmarshalXMLAttr(_fcgd)
			continue
		}
	}
_bccb:
	for {
		_gfgff, _afcd := d.Token()
		if _afcd != nil {
			return _afcd
		}
		switch _bggg := _gfgff.(type) {
		case _g.StartElement:
			switch _bggg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ffcda.NoFill = NewCT_NoFillProperties()
				if _caecaa := d.DecodeElement(_ffcda.NoFill, &_bggg); _caecaa != nil {
					return _caecaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ffcda.SolidFill = NewCT_SolidColorFillProperties()
				if _bfgc := d.DecodeElement(_ffcda.SolidFill, &_bggg); _bfgc != nil {
					return _bfgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ffcda.GradFill = NewCT_GradientFillProperties()
				if _dbeb := d.DecodeElement(_ffcda.GradFill, &_bggg); _dbeb != nil {
					return _dbeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_ffcda.BlipFill = NewCT_BlipFillProperties()
				if _acdc := d.DecodeElement(_ffcda.BlipFill, &_bggg); _acdc != nil {
					return _acdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ffcda.PattFill = NewCT_PatternFillProperties()
				if _bbcge := d.DecodeElement(_ffcda.PattFill, &_bggg); _bbcge != nil {
					return _bbcge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_ffcda.GrpFill = NewCT_GroupFillProperties()
				if _bcfe := d.DecodeElement(_ffcda.GrpFill, &_bggg); _bcfe != nil {
					return _bcfe
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _bggg.Name)
				if _edfe := d.Skip(); _edfe != nil {
					return _edfe
				}
			}
		case _g.EndElement:
			break _bccb
		case _g.CharData:
		}
	}
	return nil
}

func NewBlip() *Blip { _ded := &Blip{}; _ded.CT_Blip = *NewCT_Blip(); return _ded }

func NewCT_TableStyle() *CT_TableStyle {
	_eebfff := &CT_TableStyle{}
	_eebfff.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _eebfff
}

func (_ccgff *CT_NonVisualContentPartProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ccgff.IsCommentAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ccgff.IsCommentAttr))})
	}
	e.EncodeToken(start)
	if _ccgff.CpLocks != nil {
		_ecga := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_ccgff.CpLocks, _ecga)
	}
	if _ccgff.ExtLst != nil {
		_bdee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccgff.ExtLst, _bdee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_EffectStyleList and its children
func (_agdgb *CT_EffectStyleList) Validate() error {
	return _agdgb.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074")
}

type CT_AdjustHandleList struct {
	AhXY    []*CT_XYAdjustHandle
	AhPolar []*CT_PolarAdjustHandle
}

// ValidateWithPath validates the CT_BackgroundFillStyleList and its children, prefixing error messages with path
func (_beafe *CT_BackgroundFillStyleList) ValidateWithPath(path string) error {
	for _fdg, _gged := range _beafe.EG_FillProperties {
		if _faa := _gged.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _fdg)); _faa != nil {
			return _faa
		}
	}
	return nil
}

// Validate validates the Theme and its children
func (_ececgc *Theme) Validate() error { return _ececgc.ValidateWithPath("\u0054\u0068\u0065m\u0065") }

// Validate validates the EG_TextRun and its children
func (_deag *EG_TextRun) Validate() error {
	return _deag.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e")
}

func (_dgdbb ST_RectAlignment) ValidateWithPath(path string) error {
	switch _dgdbb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgdbb))
	}
	return nil
}

type CT_TextCharBullet struct{ CharAttr string }

// ValidateWithPath validates the CT_InnerShadowEffect and its children, prefixing error messages with path
func (_bfdde *CT_InnerShadowEffect) ValidateWithPath(path string) error {
	if _bfdde.BlurRadAttr != nil {
		if *_bfdde.BlurRadAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_bfdde.BlurRadAttr)
		}
		if *_bfdde.BlurRadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfdde.BlurRadAttr)
		}
	}
	if _bfdde.DistAttr != nil {
		if *_bfdde.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bfdde.DistAttr)
		}
		if *_bfdde.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_bfdde.DistAttr)
		}
	}
	if _bfdde.DirAttr != nil {
		if *_bfdde.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bfdde.DirAttr)
		}
		if *_bfdde.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfdde.DirAttr)
		}
	}
	if _bfdde.ScrgbClr != nil {
		if _cecca := _bfdde.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cecca != nil {
			return _cecca
		}
	}
	if _bfdde.SrgbClr != nil {
		if _cgbac := _bfdde.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cgbac != nil {
			return _cgbac
		}
	}
	if _bfdde.HslClr != nil {
		if _bgede := _bfdde.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bgede != nil {
			return _bgede
		}
	}
	if _bfdde.SysClr != nil {
		if _cfece := _bfdde.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _cfece != nil {
			return _cfece
		}
	}
	if _bfdde.SchemeClr != nil {
		if _eaba := _bfdde.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _eaba != nil {
			return _eaba
		}
	}
	if _bfdde.PrstClr != nil {
		if _fddb := _bfdde.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fddb != nil {
			return _fddb
		}
	}
	return nil
}

func (_ecde *CT_DashStopList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bfcd:
	for {
		_gadf, _cbgbd := d.Token()
		if _cbgbd != nil {
			return _cbgbd
		}
		switch _cagdg := _gadf.(type) {
		case _g.StartElement:
			switch _cagdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}:
				_adag := NewCT_DashStop()
				if _eagb := d.DecodeElement(_adag, &_cagdg); _eagb != nil {
					return _eagb
				}
				_ecde.Ds = append(_ecde.Ds, _adag)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0073h\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cagdg.Name)
				if _efac := d.Skip(); _efac != nil {
					return _efac
				}
			}
		case _g.EndElement:
			break _bfcd
		case _g.CharData:
		}
	}
	return nil
}

type CT_PresetGeometry2D struct {
	PrstAttr ST_ShapeType
	AvLst    *CT_GeomGuideList
}

func NewCT_TableGrid() *CT_TableGrid { _cedcb := &CT_TableGrid{}; return _cedcb }

func (_ecbfbf ST_PresetMaterialType) ValidateWithPath(path string) error {
	switch _ecbfbf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecbfbf))
	}
	return nil
}

func (_beffg *CT_GradientStopList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bcgbe:
	for {
		_gbbdg, _dffd := d.Token()
		if _dffd != nil {
			return _dffd
		}
		switch _bcdaf := _gbbdg.(type) {
		case _g.StartElement:
			switch _bcdaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}:
				_gdbad := NewCT_GradientStop()
				if _bccc := d.DecodeElement(_gdbad, &_bcdaf); _bccc != nil {
					return _bccc
				}
				_beffg.Gs = append(_beffg.Gs, _gdbad)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006etS\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bcdaf.Name)
				if _ddaf := d.Skip(); _ddaf != nil {
					return _ddaf
				}
			}
		case _g.EndElement:
			break _bcgbe
		case _g.CharData:
		}
	}
	return nil
}

func (_facf *CT_BackgroundFormatting) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gcaeg:
	for {
		_dgaf, _bcg := d.Token()
		if _bcg != nil {
			return _bcg
		}
		switch _ecfa := _dgaf.(type) {
		case _g.StartElement:
			switch _ecfa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_facf.NoFill = NewCT_NoFillProperties()
				if _dgb := d.DecodeElement(_facf.NoFill, &_ecfa); _dgb != nil {
					return _dgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_facf.SolidFill = NewCT_SolidColorFillProperties()
				if _cbcd := d.DecodeElement(_facf.SolidFill, &_ecfa); _cbcd != nil {
					return _cbcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_facf.GradFill = NewCT_GradientFillProperties()
				if _fdce := d.DecodeElement(_facf.GradFill, &_ecfa); _fdce != nil {
					return _fdce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_facf.BlipFill = NewCT_BlipFillProperties()
				if _fbddc := d.DecodeElement(_facf.BlipFill, &_ecfa); _fbddc != nil {
					return _fbddc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_facf.PattFill = NewCT_PatternFillProperties()
				if _bff := d.DecodeElement(_facf.PattFill, &_ecfa); _bff != nil {
					return _bff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_facf.GrpFill = NewCT_GroupFillProperties()
				if _egdc := d.DecodeElement(_facf.GrpFill, &_ecfa); _egdc != nil {
					return _egdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_facf.EffectLst = NewCT_EffectList()
				if _acb := d.DecodeElement(_facf.EffectLst, &_ecfa); _acb != nil {
					return _acb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_facf.EffectDag = NewCT_EffectContainer()
				if _aaga := d.DecodeElement(_facf.EffectDag, &_ecfa); _aaga != nil {
					return _aaga
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0046\u006f\u0072\u006d\u0061\u0074t\u0069\u006e\u0067 \u0025\u0076", _ecfa.Name)
				if _dcc := d.Skip(); _dcc != nil {
					return _dcc
				}
			}
		case _g.EndElement:
			break _gcaeg
		case _g.CharData:
		}
	}
	return nil
}

func (_efaca *CT_TextBulletSizePoint) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_efaca.ValAttr = 100
	for _, _dccaf := range start.Attr {
		if _dccaf.Name.Local == "\u0076\u0061\u006c" {
			_gefd, _deggf := _fg.ParseInt(_dccaf.Value, 10, 32)
			if _deggf != nil {
				return _deggf
			}
			_efaca.ValAttr = int32(_gefd)
			continue
		}
	}
	for {
		_bbgb, _ccdec := d.Token()
		if _ccdec != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0042u\u006cl\u0065t\u0053\u0069\u007a\u0065\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _ccdec)
		}
		if _dadec, _beeaf := _bbgb.(_g.EndElement); _beeaf && _dadec.Name == start.Name {
			break
		}
	}
	return nil
}

func (_deeaed *CT_GeomGuideList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _deeaed.Gd != nil {
		_daea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0064"}}
		for _, _bebdc := range _deeaed.Gd {
			e.EncodeElement(_bebdc, _daea)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gedg *ST_Percentage) ValidateWithPath(path string) error {
	_edffbc := []string{}
	if _gedg.ST_PercentageDecimal != nil {
		_edffbc = append(_edffbc, "S\u0054_\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065\u0044\u0065\u0063im\u0061\u006c")
	}
	if _gedg.ST_Percentage != nil {
		_edffbc = append(_edffbc, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_edffbc) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _edffbc)
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlShapeNonVisual and its children, prefixing error messages with path
func (_bcdgc *CT_GvmlShapeNonVisual) ValidateWithPath(path string) error {
	if _fbgg := _bcdgc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fbgg != nil {
		return _fbgg
	}
	if _adebce := _bcdgc.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _adebce != nil {
		return _adebce
	}
	return nil
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_cged *CT_Boolean) ValidateWithPath(path string) error {
	if _cged.ValAttr != nil {
		if _fbef := _cged.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fbef != nil {
			return _fbef
		}
	}
	return nil
}

const (
	ST_AnimationBuildTypeUnset     ST_AnimationBuildType = 0
	ST_AnimationBuildTypeAllAtOnce ST_AnimationBuildType = 1
)

func (_ggfgg *CT_ConnectorLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ggfgg.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoGrpAttr))})
	}
	if _ggfgg.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoSelectAttr))})
	}
	if _ggfgg.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoRotAttr))})
	}
	if _ggfgg.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoChangeAspectAttr))})
	}
	if _ggfgg.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoMoveAttr))})
	}
	if _ggfgg.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoResizeAttr))})
	}
	if _ggfgg.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoEditPointsAttr))})
	}
	if _ggfgg.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoAdjustHandlesAttr))})
	}
	if _ggfgg.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoChangeArrowheadsAttr))})
	}
	if _ggfgg.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggfgg.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _ggfgg.ExtLst != nil {
		_gdcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggfgg.ExtLst, _gdcd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fddde *CT_LightRig) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_deeb, _bedgb := _fddde.RigAttr.MarshalXMLAttr(_g.Name{Local: "\u0072\u0069\u0067"})
	if _bedgb != nil {
		return _bedgb
	}
	start.Attr = append(start.Attr, _deeb)
	_deeb, _bedgb = _fddde.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
	if _bedgb != nil {
		return _bedgb
	}
	start.Attr = append(start.Attr, _deeb)
	e.EncodeToken(start)
	if _fddde.Rot != nil {
		_cgab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_fddde.Rot, _cgab)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ST_Percentage is a union type
type ST_Percentage struct {
	ST_PercentageDecimal *int32
	ST_Percentage        *string
}

func (_fdfbd ST_LineEndLength) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gbbcf := _g.Attr{}
	_gbbcf.Name = name
	switch _fdfbd {
	case ST_LineEndLengthUnset:
		_gbbcf.Value = ""
	case ST_LineEndLengthSm:
		_gbbcf.Value = "\u0073\u006d"
	case ST_LineEndLengthMed:
		_gbbcf.Value = "\u006d\u0065\u0064"
	case ST_LineEndLengthLg:
		_gbbcf.Value = "\u006c\u0067"
	}
	return _gbbcf, nil
}

func (_dggdf *EG_TextGeometry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bgacdd:
	for {
		_fceeb, _cbadf := d.Token()
		if _cbadf != nil {
			return _cbadf
		}
		switch _cbdec := _fceeb.(type) {
		case _g.StartElement:
			switch _cbdec.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_dggdf.CustGeom = NewCT_CustomGeometry2D()
				if _egdag := d.DecodeElement(_dggdf.CustGeom, &_cbdec); _egdag != nil {
					return _egdag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_dggdf.PrstTxWarp = NewCT_PresetTextShape()
				if _fecac := d.DecodeElement(_dggdf.PrstTxWarp, &_cbdec); _fecac != nil {
					return _fecac
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078t\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _cbdec.Name)
				if _aecdc := d.Skip(); _aecdc != nil {
					return _aecdc
				}
			}
		case _g.EndElement:
			break _bgacdd
		case _g.CharData:
		}
	}
	return nil
}

func (_ebegf *CT_Connection) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eeacc := range start.Attr {
		if _eeacc.Name.Local == "\u0069\u0064" {
			_babe, _agdf := _fg.ParseUint(_eeacc.Value, 10, 32)
			if _agdf != nil {
				return _agdf
			}
			_ebegf.IdAttr = uint32(_babe)
			continue
		}
		if _eeacc.Name.Local == "\u0069\u0064\u0078" {
			_ffgb, _ffag := _fg.ParseUint(_eeacc.Value, 10, 32)
			if _ffag != nil {
				return _ffag
			}
			_ebegf.IdxAttr = uint32(_ffgb)
			continue
		}
	}
	for {
		_cecf, _fdage := d.Token()
		if _fdage != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0043o\u006en\u0065c\u0074\u0069\u006f\u006e\u003a\u0020\u0025s", _fdage)
		}
		if _ffgbe, _ccde := _cecf.(_g.EndElement); _ccde && _ffgbe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualContentPartProperties and its children, prefixing error messages with path
func (_cfbbg *CT_NonVisualContentPartProperties) ValidateWithPath(path string) error {
	if _cfbbg.CpLocks != nil {
		if _gfbg := _cfbbg.CpLocks.ValidateWithPath(path + "\u002f\u0043\u0070\u004c\u006f\u0063\u006b\u0073"); _gfbg != nil {
			return _gfbg
		}
	}
	if _cfbbg.ExtLst != nil {
		if _facge := _cfbbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _facge != nil {
			return _facge
		}
	}
	return nil
}

type ST_TextHorzOverflowType byte

// Validate validates the CT_AlphaModulateEffect and its children
func (_dbc *CT_AlphaModulateEffect) Validate() error {
	return _dbc.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074")
}

// Validate validates the EG_TextGeometry and its children
func (_fdeaa *EG_TextGeometry) Validate() error {
	return _fdeaa.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}

type EG_TextBullet struct {
	BuNone    *CT_TextNoBullet
	BuAutoNum *CT_TextAutonumberBullet
	BuChar    *CT_TextCharBullet
	BuBlip    *CT_TextBlipBullet
}

type CT_Path2D struct {
	WAttr           *int64
	HAttr           *int64
	FillAttr        ST_PathFillMode
	StrokeAttr      *bool
	ExtrusionOkAttr *bool
	Close           []*CT_Path2DClose
	MoveTo          []*CT_Path2DMoveTo
	LnTo            []*CT_Path2DLineTo
	ArcTo           []*CT_Path2DArcTo
	QuadBezTo       []*CT_Path2DQuadBezierTo
	CubicBezTo      []*CT_Path2DCubicBezierTo
}

func (_cagf *CT_NonVisualGroupDrawingShapeProps) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cagf.GrpSpLocks != nil {
		_cfgdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067r\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_cagf.GrpSpLocks, _cfgdf)
	}
	if _cagf.ExtLst != nil {
		_cgbbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cagf.ExtLst, _cgbbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_ConnectionSiteList struct{ Cxn []*CT_ConnectionSite }

func NewCT_TextAutonumberBullet() *CT_TextAutonumberBullet {
	_egba := &CT_TextAutonumberBullet{}
	_egba.TypeAttr = ST_TextAutonumberScheme(1)
	return _egba
}

func (_eabfd ST_PenAlignment) ValidateWithPath(path string) error {
	switch _eabfd {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eabfd))
	}
	return nil
}

func NewCT_AnimationElementChoice() *CT_AnimationElementChoice {
	_efdg := &CT_AnimationElementChoice{}
	return _efdg
}

func (_eggcd ST_PathShadeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ddcde := _g.Attr{}
	_ddcde.Name = name
	switch _eggcd {
	case ST_PathShadeTypeUnset:
		_ddcde.Value = ""
	case ST_PathShadeTypeShape:
		_ddcde.Value = "\u0073\u0068\u0061p\u0065"
	case ST_PathShadeTypeCircle:
		_ddcde.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_PathShadeTypeRect:
		_ddcde.Value = "\u0072\u0065\u0063\u0074"
	}
	return _ddcde, nil
}

func (_geffbb *ST_PenAlignment) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bcadfb, _aagag := d.Token()
	if _aagag != nil {
		return _aagag
	}
	if _gadfb, _begac := _bcadfb.(_g.EndElement); _begac && _gadfb.Name == start.Name {
		*_geffbb = 1
		return nil
	}
	if _daffe, _egeefb := _bcadfb.(_g.CharData); !_egeefb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcadfb)
	} else {
		switch string(_daffe) {
		case "":
			*_geffbb = 0
		case "\u0063\u0074\u0072":
			*_geffbb = 1
		case "\u0069\u006e":
			*_geffbb = 2
		}
	}
	_bcadfb, _aagag = d.Token()
	if _aagag != nil {
		return _aagag
	}
	if _eadbc, _bdbfgc := _bcadfb.(_g.EndElement); _bdbfgc && _eadbc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcadfb)
}

func (_abcaee ST_TileFlipMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abcaee.String(), start)
}

func NewCT_SolidColorFillProperties() *CT_SolidColorFillProperties {
	_dcebe := &CT_SolidColorFillProperties{}
	return _dcebe
}

func NewCT_Path2DCubicBezierTo() *CT_Path2DCubicBezierTo {
	_gfcef := &CT_Path2DCubicBezierTo{}
	return _gfcef
}

type ST_AnimationChartOnlyBuildType byte

func (_ddedcf ST_LineEndWidth) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_abgec := _g.Attr{}
	_abgec.Name = name
	switch _ddedcf {
	case ST_LineEndWidthUnset:
		_abgec.Value = ""
	case ST_LineEndWidthSm:
		_abgec.Value = "\u0073\u006d"
	case ST_LineEndWidthMed:
		_abgec.Value = "\u006d\u0065\u0064"
	case ST_LineEndWidthLg:
		_abgec.Value = "\u006c\u0067"
	}
	return _abgec, nil
}

// Validate validates the TblStyleLst and its children
func (_eecgg *TblStyleLst) Validate() error {
	return _eecgg.ValidateWithPath("T\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074")
}

// Validate validates the CT_BiLevelEffect and its children
func (_babb *CT_BiLevelEffect) Validate() error {
	return _babb.ValidateWithPath("\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cgc *CT_AnimationDgmBuildProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgc.BldAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006c\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_cgc.BldAttr)})
	}
	if _cgc.RevAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0076"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_cgc.RevAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bcfdc ST_TileFlipMode) Validate() error { return _bcfdc.ValidateWithPath("") }

// ValidateWithPath validates the CT_AnimationDgmElement and its children, prefixing error messages with path
func (_ggg *CT_AnimationDgmElement) ValidateWithPath(path string) error {
	if _ggg.IdAttr != nil {
		if !_a.ST_GuidPatternRe.MatchString(*_ggg.IdAttr) {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, *_ggg.IdAttr)
		}
	}
	if _fgbd := _ggg.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _fgbd != nil {
		return _fgbd
	}
	return nil
}

func (_adab *CT_GvmlShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_adab.NvSpPr = NewCT_GvmlShapeNonVisual()
	_adab.SpPr = NewCT_ShapeProperties()
_dgfac:
	for {
		_ebcbb, _bbcgc := d.Token()
		if _bbcgc != nil {
			return _bbcgc
		}
		switch _cfceg := _ebcbb.(type) {
		case _g.StartElement:
			switch _cfceg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _dbbg := d.DecodeElement(_adab.NvSpPr, &_cfceg); _dbbg != nil {
					return _dbbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _cfbcb := d.DecodeElement(_adab.SpPr, &_cfceg); _cfbcb != nil {
					return _cfbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_adab.TxSp = NewCT_GvmlTextShape()
				if _ggffg := d.DecodeElement(_adab.TxSp, &_cfceg); _ggffg != nil {
					return _ggffg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_adab.Style = NewCT_ShapeStyle()
				if _agbc := d.DecodeElement(_adab.Style, &_cfceg); _agbc != nil {
					return _agbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adab.ExtLst = NewCT_OfficeArtExtensionList()
				if _gdfbe := d.DecodeElement(_adab.ExtLst, &_cfceg); _gdfbe != nil {
					return _gdfbe
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0076\u006dl\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _cfceg.Name)
				if _eccb := d.Skip(); _eccb != nil {
					return _eccb
				}
			}
		case _g.EndElement:
			break _dgfac
		case _g.CharData:
		}
	}
	return nil
}

func (_fga *CT_AlphaInverseEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cec:
	for {
		_cdb, _ffea := d.Token()
		if _ffea != nil {
			return _ffea
		}
		switch _cdc := _cdb.(type) {
		case _g.StartElement:
			switch _cdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_fga.ScrgbClr = NewCT_ScRgbColor()
				if _fabf := d.DecodeElement(_fga.ScrgbClr, &_cdc); _fabf != nil {
					return _fabf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_fga.SrgbClr = NewCT_SRgbColor()
				if _dfcc := d.DecodeElement(_fga.SrgbClr, &_cdc); _dfcc != nil {
					return _dfcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_fga.HslClr = NewCT_HslColor()
				if _fdcf := d.DecodeElement(_fga.HslClr, &_cdc); _fdcf != nil {
					return _fdcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_fga.SysClr = NewCT_SystemColor()
				if _bgab := d.DecodeElement(_fga.SysClr, &_cdc); _bgab != nil {
					return _bgab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fga.SchemeClr = NewCT_SchemeColor()
				if _acf := d.DecodeElement(_fga.SchemeClr, &_cdc); _acf != nil {
					return _acf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_fga.PrstClr = NewCT_PresetColor()
				if _ece := d.DecodeElement(_fga.PrstClr, &_cdc); _ece != nil {
					return _ece
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cdc.Name)
				if _gcb := d.Skip(); _gcb != nil {
					return _gcb
				}
			}
		case _g.EndElement:
			break _cec
		case _g.CharData:
		}
	}
	return nil
}

func (_facca ST_TileFlipMode) ValidateWithPath(path string) error {
	switch _facca {
	case 0, 1, 2, 3, 4:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_facca))
	}
	return nil
}

// Validate validates the CT_ConnectionSite and its children
func (_debgf *CT_ConnectionSite) Validate() error {
	return _debgf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065")
}

func NewEG_Effect() *EG_Effect { _dbcccg := &EG_Effect{}; return _dbcccg }

func NewEG_Media() *EG_Media { _bcec := &EG_Media{}; return _bcec }

func (_babeb *ST_LightRigType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fbbfa, _dbgdc := d.Token()
	if _dbgdc != nil {
		return _dbgdc
	}
	if _ggdbf, _egafd := _fbbfa.(_g.EndElement); _egafd && _ggdbf.Name == start.Name {
		*_babeb = 1
		return nil
	}
	if _ffbdg, _bbccg := _fbbfa.(_g.CharData); !_bbccg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbbfa)
	} else {
		switch string(_ffbdg) {
		case "":
			*_babeb = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
			*_babeb = 1
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
			*_babeb = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
			*_babeb = 3
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
			*_babeb = 4
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
			*_babeb = 5
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
			*_babeb = 6
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
			*_babeb = 7
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
			*_babeb = 8
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
			*_babeb = 9
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
			*_babeb = 10
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
			*_babeb = 11
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
			*_babeb = 12
		case "\u0074h\u0072\u0065\u0065\u0050\u0074":
			*_babeb = 13
		case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
			*_babeb = 14
		case "\u0073\u006f\u0066\u0074":
			*_babeb = 15
		case "\u0068\u0061\u0072s\u0068":
			*_babeb = 16
		case "\u0066\u006c\u006fo\u0064":
			*_babeb = 17
		case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
			*_babeb = 18
		case "\u006do\u0072\u006e\u0069\u006e\u0067":
			*_babeb = 19
		case "\u0073u\u006e\u0072\u0069\u0073\u0065":
			*_babeb = 20
		case "\u0073\u0075\u006e\u0073\u0065\u0074":
			*_babeb = 21
		case "\u0063\u0068\u0069\u006c\u006c\u0079":
			*_babeb = 22
		case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
			*_babeb = 23
		case "\u0066\u006c\u0061\u0074":
			*_babeb = 24
		case "\u0074\u0077\u006fP\u0074":
			*_babeb = 25
		case "\u0067\u006c\u006f\u0077":
			*_babeb = 26
		case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
			*_babeb = 27
		}
	}
	_fbbfa, _dbgdc = d.Token()
	if _dbgdc != nil {
		return _dbgdc
	}
	if _fecff, _afbgeg := _fbbfa.(_g.EndElement); _afbgeg && _fecff.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbbfa)
}

func NewCT_EmbeddedWAVAudioFile() *CT_EmbeddedWAVAudioFile {
	_fggaa := &CT_EmbeddedWAVAudioFile{}
	return _fggaa
}

func (_bdada ST_TextAnchoringType) ValidateWithPath(path string) error {
	switch _bdada {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdada))
	}
	return nil
}

func (_fbfgg ST_LineEndType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fbfgg.String(), start)
}

// ValidateWithPath validates the CT_LinearShadeProperties and its children, prefixing error messages with path
func (_bdgfc *CT_LinearShadeProperties) ValidateWithPath(path string) error {
	if _bdgfc.AngAttr != nil {
		if *_bdgfc.AngAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0041\u006eg\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bdgfc.AngAttr)
		}
		if *_bdgfc.AngAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eA\u006e\u0067\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bdgfc.AngAttr)
		}
	}
	return nil
}

// ValidateWithPath validates the EG_LineJoinProperties and its children, prefixing error messages with path
func (_cfeee *EG_LineJoinProperties) ValidateWithPath(path string) error {
	if _cfeee.Round != nil {
		if _dbbegf := _cfeee.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _dbbegf != nil {
			return _dbbegf
		}
	}
	if _cfeee.Bevel != nil {
		if _aaef := _cfeee.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _aaef != nil {
			return _aaef
		}
	}
	if _cfeee.Miter != nil {
		if _afabf := _cfeee.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _afabf != nil {
			return _afabf
		}
	}
	return nil
}

func NewCT_AdjPoint2D() *CT_AdjPoint2D { _gba := &CT_AdjPoint2D{}; return _gba }

// Validate validates the CT_GradientFillProperties and its children
func (_fcda *CT_GradientFillProperties) Validate() error {
	return _fcda.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

// ValidateWithPath validates the EG_ShadeProperties and its children, prefixing error messages with path
func (_dgdff *EG_ShadeProperties) ValidateWithPath(path string) error {
	if _dgdff.Lin != nil {
		if _dfcab := _dgdff.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _dfcab != nil {
			return _dfcab
		}
	}
	if _dgdff.Path != nil {
		if _eefag := _dgdff.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _eefag != nil {
			return _eefag
		}
	}
	return nil
}

// ValidateWithPath validates the EG_OfficeArtExtensionList and its children, prefixing error messages with path
func (_fbafd *EG_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _adbfba, _ebfe := range _fbafd.Ext {
		if _faddeg := _ebfe.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _adbfba)); _faddeg != nil {
			return _faddeg
		}
	}
	return nil
}

func NewCT_TablePartStyle() *CT_TablePartStyle { _ccaafc := &CT_TablePartStyle{}; return _ccaafc }

func (_dafced *CT_PictureLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dafced.NoCropAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0072\u006f\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoCropAttr))})
	}
	if _dafced.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoGrpAttr))})
	}
	if _dafced.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoSelectAttr))})
	}
	if _dafced.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoRotAttr))})
	}
	if _dafced.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoChangeAspectAttr))})
	}
	if _dafced.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoMoveAttr))})
	}
	if _dafced.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoResizeAttr))})
	}
	if _dafced.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoEditPointsAttr))})
	}
	if _dafced.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoAdjustHandlesAttr))})
	}
	if _dafced.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoChangeArrowheadsAttr))})
	}
	if _dafced.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_dafced.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _dafced.ExtLst != nil {
		_daefdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dafced.ExtLst, _daefdg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ColorSchemeAndMapping() *CT_ColorSchemeAndMapping {
	_affc := &CT_ColorSchemeAndMapping{}
	_affc.ClrScheme = NewCT_ColorScheme()
	return _affc
}

func NewCT_ScRgbColor() *CT_ScRgbColor { _fcbfc := &CT_ScRgbColor{}; return _fcbfc }

// Validate validates the CT_Path2DClose and its children
func (_gffc *CT_Path2DClose) Validate() error {
	return _gffc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065")
}

func (_aeeae *ST_Coordinate32) ValidateWithPath(path string) error {
	_ffgae := []string{}
	if _aeeae.ST_Coordinate32Unqualified != nil {
		_ffgae = append(_ffgae, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061t\u0065\u0033\u0032\u0055\u006e\u0071\u0075\u0061\u006c\u0069f\u0069\u0065\u0064")
	}
	if _aeeae.ST_UniversalMeasure != nil {
		_ffgae = append(_ffgae, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_ffgae) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ffgae)
	}
	return nil
}

func (_cccec *CT_TileInfoProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ccdea := range start.Attr {
		if _ccdea.Name.Local == "\u0074\u0078" {
			_cffbf, _bggcg := ParseUnionST_Coordinate(_ccdea.Value)
			if _bggcg != nil {
				return _bggcg
			}
			_cccec.TxAttr = &_cffbf
			continue
		}
		if _ccdea.Name.Local == "\u0074\u0079" {
			_eagcge, _decag := ParseUnionST_Coordinate(_ccdea.Value)
			if _decag != nil {
				return _decag
			}
			_cccec.TyAttr = &_eagcge
			continue
		}
		if _ccdea.Name.Local == "\u0073\u0078" {
			_dabce, _eaeag := ParseUnionST_Percentage(_ccdea.Value)
			if _eaeag != nil {
				return _eaeag
			}
			_cccec.SxAttr = &_dabce
			continue
		}
		if _ccdea.Name.Local == "\u0073\u0079" {
			_eecda, _agbeec := ParseUnionST_Percentage(_ccdea.Value)
			if _agbeec != nil {
				return _agbeec
			}
			_cccec.SyAttr = &_eecda
			continue
		}
		if _ccdea.Name.Local == "\u0066\u006c\u0069\u0070" {
			_cccec.FlipAttr.UnmarshalXMLAttr(_ccdea)
			continue
		}
		if _ccdea.Name.Local == "\u0061\u006c\u0067\u006e" {
			_cccec.AlgnAttr.UnmarshalXMLAttr(_ccdea)
			continue
		}
	}
	for {
		_faeba, _baddc := d.Token()
		if _baddc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0069\u006c\u0065\u0049\u006e\u0066\u006f\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _baddc)
		}
		if _bafeb, _cafbbb := _faeba.(_g.EndElement); _cafbbb && _bafeb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ccaagf *ST_AnimationDgmBuildType) Validate() error { return _ccaagf.ValidateWithPath("") }

func (_ecafa *ST_DgmBuildStep) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ecafa = 0
	case "\u0073\u0070":
		*_ecafa = 1
	case "\u0062\u0067":
		*_ecafa = 2
	}
	return nil
}

func (_cgad *CT_EffectList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cgad.Blur != nil {
		_cebfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_cgad.Blur, _cebfd)
	}
	if _cgad.FillOverlay != nil {
		_fgfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_cgad.FillOverlay, _fgfa)
	}
	if _cgad.Glow != nil {
		_adce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_cgad.Glow, _adce)
	}
	if _cgad.InnerShdw != nil {
		_efbd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cgad.InnerShdw, _efbd)
	}
	if _cgad.OuterShdw != nil {
		_cefb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cgad.OuterShdw, _cefb)
	}
	if _cgad.PrstShdw != nil {
		_cegc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cgad.PrstShdw, _cegc)
	}
	if _cgad.Reflection != nil {
		_adcgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cgad.Reflection, _adcgf)
	}
	if _cgad.SoftEdge != nil {
		_caaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_cgad.SoftEdge, _caaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func ParseUnionST_AdjCoordinate(s string) (ST_AdjCoordinate, error) {
	_bagge := ST_AdjCoordinate{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_bagge.ST_Coordinate = &ST_Coordinate{}
		_bagge.ST_Coordinate.ST_UniversalMeasure = &s
	} else {
		_adfge, _feedc := _fg.ParseInt(s, 10, 64)
		if _feedc != nil {
			_bagge.ST_GeomGuideName = &s
		} else {
			_bagge.ST_Coordinate = &ST_Coordinate{}
			_bagge.ST_Coordinate.ST_CoordinateUnqualified = &_adfge
		}
	}
	return _bagge, nil
}

func (_gabed *CT_ColorSchemeList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eecf:
	for {
		_cbfc, _bdeba := d.Token()
		if _bdeba != nil {
			return _bdeba
		}
		switch _dbfc := _cbfc.(type) {
		case _g.StartElement:
			switch _dbfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}:
				_egabb := NewCT_ColorSchemeAndMapping()
				if _dabc := d.DecodeElement(_egabb, &_dbfc); _dabc != nil {
					return _dabc
				}
				_gabed.ExtraClrScheme = append(_gabed.ExtraClrScheme, _egabb)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dbfc.Name)
				if _bggdc := d.Skip(); _bggdc != nil {
					return _bggdc
				}
			}
		case _g.EndElement:
			break _eecf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BiLevelEffect and its children, prefixing error messages with path
func (_fade *CT_BiLevelEffect) ValidateWithPath(path string) error {
	if _bgdc := _fade.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _bgdc != nil {
		return _bgdc
	}
	return nil
}

func (_fdbcf *CT_BaseStylesOverride) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ceb:
	for {
		_ebcb, _fffg := d.Token()
		if _fffg != nil {
			return _fffg
		}
		switch _beg := _ebcb.(type) {
		case _g.StartElement:
			switch _beg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_fdbcf.ClrScheme = NewCT_ColorScheme()
				if _gdgbf := d.DecodeElement(_fdbcf.ClrScheme, &_beg); _gdgbf != nil {
					return _gdgbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_fdbcf.FontScheme = NewCT_FontScheme()
				if _gefgg := d.DecodeElement(_fdbcf.FontScheme, &_beg); _gefgg != nil {
					return _gefgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_fdbcf.FmtScheme = NewCT_StyleMatrix()
				if _gcc := d.DecodeElement(_fdbcf.FmtScheme, &_beg); _gcc != nil {
					return _gcc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0020\u0025\u0076", _beg.Name)
				if _ecbf := d.Skip(); _ecbf != nil {
					return _ecbf
				}
			}
		case _g.EndElement:
			break _ceb
		case _g.CharData:
		}
	}
	return nil
}

func (_gbaab *ST_TextFontScalePercentOrPercentString) Validate() error {
	return _gbaab.ValidateWithPath("")
}

// Validate validates the CT_TableProperties and its children
func (_fdgfa *CT_TableProperties) Validate() error {
	return _fdgfa.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

func (_ebbgc *EG_FillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bgece:
	for {
		_debab, _ebbeff := d.Token()
		if _ebbeff != nil {
			return _ebbeff
		}
		switch _gegebb := _debab.(type) {
		case _g.StartElement:
			switch _gegebb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ebbgc.NoFill = NewCT_NoFillProperties()
				if _abgeb := d.DecodeElement(_ebbgc.NoFill, &_gegebb); _abgeb != nil {
					return _abgeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ebbgc.SolidFill = NewCT_SolidColorFillProperties()
				if _ecbdgf := d.DecodeElement(_ebbgc.SolidFill, &_gegebb); _ecbdgf != nil {
					return _ecbdgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ebbgc.GradFill = NewCT_GradientFillProperties()
				if _agbab := d.DecodeElement(_ebbgc.GradFill, &_gegebb); _agbab != nil {
					return _agbab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_ebbgc.BlipFill = NewCT_BlipFillProperties()
				if _fgegb := d.DecodeElement(_ebbgc.BlipFill, &_gegebb); _fgegb != nil {
					return _fgegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ebbgc.PattFill = NewCT_PatternFillProperties()
				if _gdccba := d.DecodeElement(_ebbgc.PattFill, &_gegebb); _gdccba != nil {
					return _gdccba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_ebbgc.GrpFill = NewCT_GroupFillProperties()
				if _adeg := d.DecodeElement(_ebbgc.GrpFill, &_gegebb); _adeg != nil {
					return _adeg
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gegebb.Name)
				if _aebeb := d.Skip(); _aebeb != nil {
					return _aebeb
				}
			}
		case _g.EndElement:
			break _bgece
		case _g.CharData:
		}
	}
	return nil
}

func (_gddef ST_PresetCameraType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gddef.String(), start)
}

func (_bfeef *CT_LineEndProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fdfe := range start.Attr {
		if _fdfe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bfeef.TypeAttr.UnmarshalXMLAttr(_fdfe)
			continue
		}
		if _fdfe.Name.Local == "\u0077" {
			_bfeef.WAttr.UnmarshalXMLAttr(_fdfe)
			continue
		}
		if _fdfe.Name.Local == "\u006c\u0065\u006e" {
			_bfeef.LenAttr.UnmarshalXMLAttr(_fdfe)
			continue
		}
	}
	for {
		_fgggb, _gfcbda := d.Token()
		if _gfcbda != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065E\u006ed\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _gfcbda)
		}
		if _ccgf, _eaadd := _fgggb.(_g.EndElement); _eaadd && _ccgf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

func (_cbafe *ST_LineEndType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bdebd, _gcbfdc := d.Token()
	if _gcbfdc != nil {
		return _gcbfdc
	}
	if _babaf, _fdbfg := _bdebd.(_g.EndElement); _fdbfg && _babaf.Name == start.Name {
		*_cbafe = 1
		return nil
	}
	if _beace, _bceg := _bdebd.(_g.CharData); !_bceg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdebd)
	} else {
		switch string(_beace) {
		case "":
			*_cbafe = 0
		case "\u006e\u006f\u006e\u0065":
			*_cbafe = 1
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_cbafe = 2
		case "\u0073t\u0065\u0061\u006c\u0074\u0068":
			*_cbafe = 3
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_cbafe = 4
		case "\u006f\u0076\u0061\u006c":
			*_cbafe = 5
		case "\u0061\u0072\u0072o\u0077":
			*_cbafe = 6
		}
	}
	_bdebd, _gcbfdc = d.Token()
	if _gcbfdc != nil {
		return _gcbfdc
	}
	if _bdacf, _dfgea := _bdebd.(_g.EndElement); _dfgea && _bdacf.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdebd)
}

func (_edbgd ST_OnOffStyleType) String() string {
	switch _edbgd {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u0064\u0065\u0066"
	}
	return ""
}

func (_dbcdd ST_TextUnderlineType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gffba := _g.Attr{}
	_gffba.Name = name
	switch _dbcdd {
	case ST_TextUnderlineTypeUnset:
		_gffba.Value = ""
	case ST_TextUnderlineTypeNone:
		_gffba.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextUnderlineTypeWords:
		_gffba.Value = "\u0077\u006f\u0072d\u0073"
	case ST_TextUnderlineTypeSng:
		_gffba.Value = "\u0073\u006e\u0067"
	case ST_TextUnderlineTypeDbl:
		_gffba.Value = "\u0064\u0062\u006c"
	case ST_TextUnderlineTypeHeavy:
		_gffba.Value = "\u0068\u0065\u0061v\u0079"
	case ST_TextUnderlineTypeDotted:
		_gffba.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_TextUnderlineTypeDottedHeavy:
		_gffba.Value = "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDash:
		_gffba.Value = "\u0064\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDashHeavy:
		_gffba.Value = "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeDashLong:
		_gffba.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case ST_TextUnderlineTypeDashLongHeavy:
		_gffba.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDash:
		_gffba.Value = "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDashHeavy:
		_gffba.Value = "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDotDash:
		_gffba.Value = "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDotDashHeavy:
		_gffba.Value = "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavy:
		_gffba.Value = "\u0077\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavyHeavy:
		_gffba.Value = "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeWavyDbl:
		_gffba.Value = "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return _gffba, nil
}

// ValidateWithPath validates the CT_CustomColor and its children, prefixing error messages with path
func (_gaabb *CT_CustomColor) ValidateWithPath(path string) error {
	if _gaabb.ScrgbClr != nil {
		if _gebc := _gaabb.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gebc != nil {
			return _gebc
		}
	}
	if _gaabb.SrgbClr != nil {
		if _cggc := _gaabb.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cggc != nil {
			return _cggc
		}
	}
	if _gaabb.HslClr != nil {
		if _dfea := _gaabb.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dfea != nil {
			return _dfea
		}
	}
	if _gaabb.SysClr != nil {
		if _gfgac := _gaabb.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gfgac != nil {
			return _gfgac
		}
	}
	if _gaabb.SchemeClr != nil {
		if _cdfgg := _gaabb.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _cdfgg != nil {
			return _cdfgg
		}
	}
	if _gaabb.PrstClr != nil {
		if _gbgae := _gaabb.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gbgae != nil {
			return _gbgae
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaBiLevelEffect and its children, prefixing error messages with path
func (_abb *CT_AlphaBiLevelEffect) ValidateWithPath(path string) error {
	if _dff := _abb.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _dff != nil {
		return _dff
	}
	return nil
}

func (_fdeac ST_TextPoint) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fdeac.ST_TextPointUnqualified != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_fdeac.ST_TextPointUnqualified)))
	}
	if _fdeac.ST_UniversalMeasure != nil {
		e.EncodeToken(_g.CharData(*_fdeac.ST_UniversalMeasure))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_gbcf ST_LineEndType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dcfd := _g.Attr{}
	_dcfd.Name = name
	switch _gbcf {
	case ST_LineEndTypeUnset:
		_dcfd.Value = ""
	case ST_LineEndTypeNone:
		_dcfd.Value = "\u006e\u006f\u006e\u0065"
	case ST_LineEndTypeTriangle:
		_dcfd.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_LineEndTypeStealth:
		_dcfd.Value = "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case ST_LineEndTypeDiamond:
		_dcfd.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_LineEndTypeOval:
		_dcfd.Value = "\u006f\u0076\u0061\u006c"
	case ST_LineEndTypeArrow:
		_dcfd.Value = "\u0061\u0072\u0072o\u0077"
	}
	return _dcfd, nil
}

func (_eabda *CT_LuminanceEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gfage := range start.Attr {
		if _gfage.Name.Local == "\u0062\u0072\u0069\u0067\u0068\u0074" {
			_gdbfb, _bfbdb := ParseUnionST_FixedPercentage(_gfage.Value)
			if _bfbdb != nil {
				return _bfbdb
			}
			_eabda.BrightAttr = &_gdbfb
			continue
		}
		if _gfage.Name.Local == "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074" {
			_efged, _fdgcg := ParseUnionST_FixedPercentage(_gfage.Value)
			if _fdgcg != nil {
				return _fdgcg
			}
			_eabda.ContrastAttr = &_efged
			continue
		}
	}
	for {
		_ceca, _bfdf := d.Token()
		if _bfdf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u004c\u0075\u006d\u0069\u006e\u0061\u006ec\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _bfdf)
		}
		if _fdeg, _dceda := _ceca.(_g.EndElement); _dceda && _fdeg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SupplementalFont and its children
func (_dbfge *CT_SupplementalFont) Validate() error {
	return _dbfge.ValidateWithPath("\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074")
}

func NewCT_ComplementTransform() *CT_ComplementTransform {
	_fbaf := &CT_ComplementTransform{}
	return _fbaf
}

type CT_WholeE2oFormatting struct {
	Ln        *CT_LineProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_gec *CT_AlphaModulateFixedEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gf := range start.Attr {
		if _gf.Name.Local == "\u0061\u006d\u0074" {
			_fcd, _cee := ParseUnionST_PositivePercentage(_gf.Value)
			if _cee != nil {
				return _cee
			}
			_gec.AmtAttr = &_fcd
			continue
		}
	}
	for {
		_cda, _dbb := d.Token()
		if _dbb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0075l\u0061\u0074\u0065\u0046\u0069\u0078\u0065\u0064\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _dbb)
		}
		if _adefc, _cag := _cda.(_g.EndElement); _cag && _adefc.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_DashStopList() *CT_DashStopList { _cgee := &CT_DashStopList{}; return _cgee }

func NewCT_InverseTransform() *CT_InverseTransform { _agfgb := &CT_InverseTransform{}; return _agfgb }

func (_dgcbc *CT_TextTabStop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dgcbc.PosAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u006f\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_dgcbc.PosAttr)})
	}
	if _dgcbc.AlgnAttr != ST_TextTabAlignTypeUnset {
		_cabcc, _gcgbf := _dgcbc.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _gcgbf != nil {
			return _gcgbf
		}
		start.Attr = append(start.Attr, _cabcc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewVideoFile() *VideoFile {
	_bafdba := &VideoFile{}
	_bafdba.CT_VideoFile = *NewCT_VideoFile()
	return _bafdba
}

func NewCT_NonVisualConnectorProperties() *CT_NonVisualConnectorProperties {
	_ddac := &CT_NonVisualConnectorProperties{}
	return _ddac
}

const (
	ST_PresetColorValUnset                ST_PresetColorVal = 0
	ST_PresetColorValAliceBlue            ST_PresetColorVal = 1
	ST_PresetColorValAntiqueWhite         ST_PresetColorVal = 2
	ST_PresetColorValAqua                 ST_PresetColorVal = 3
	ST_PresetColorValAquamarine           ST_PresetColorVal = 4
	ST_PresetColorValAzure                ST_PresetColorVal = 5
	ST_PresetColorValBeige                ST_PresetColorVal = 6
	ST_PresetColorValBisque               ST_PresetColorVal = 7
	ST_PresetColorValBlack                ST_PresetColorVal = 8
	ST_PresetColorValBlanchedAlmond       ST_PresetColorVal = 9
	ST_PresetColorValBlue                 ST_PresetColorVal = 10
	ST_PresetColorValBlueViolet           ST_PresetColorVal = 11
	ST_PresetColorValBrown                ST_PresetColorVal = 12
	ST_PresetColorValBurlyWood            ST_PresetColorVal = 13
	ST_PresetColorValCadetBlue            ST_PresetColorVal = 14
	ST_PresetColorValChartreuse           ST_PresetColorVal = 15
	ST_PresetColorValChocolate            ST_PresetColorVal = 16
	ST_PresetColorValCoral                ST_PresetColorVal = 17
	ST_PresetColorValCornflowerBlue       ST_PresetColorVal = 18
	ST_PresetColorValCornsilk             ST_PresetColorVal = 19
	ST_PresetColorValCrimson              ST_PresetColorVal = 20
	ST_PresetColorValCyan                 ST_PresetColorVal = 21
	ST_PresetColorValDarkBlue             ST_PresetColorVal = 22
	ST_PresetColorValDarkCyan             ST_PresetColorVal = 23
	ST_PresetColorValDarkGoldenrod        ST_PresetColorVal = 24
	ST_PresetColorValDarkGray             ST_PresetColorVal = 25
	ST_PresetColorValDarkGrey             ST_PresetColorVal = 26
	ST_PresetColorValDarkGreen            ST_PresetColorVal = 27
	ST_PresetColorValDarkKhaki            ST_PresetColorVal = 28
	ST_PresetColorValDarkMagenta          ST_PresetColorVal = 29
	ST_PresetColorValDarkOliveGreen       ST_PresetColorVal = 30
	ST_PresetColorValDarkOrange           ST_PresetColorVal = 31
	ST_PresetColorValDarkOrchid           ST_PresetColorVal = 32
	ST_PresetColorValDarkRed              ST_PresetColorVal = 33
	ST_PresetColorValDarkSalmon           ST_PresetColorVal = 34
	ST_PresetColorValDarkSeaGreen         ST_PresetColorVal = 35
	ST_PresetColorValDarkSlateBlue        ST_PresetColorVal = 36
	ST_PresetColorValDarkSlateGray        ST_PresetColorVal = 37
	ST_PresetColorValDarkSlateGrey        ST_PresetColorVal = 38
	ST_PresetColorValDarkTurquoise        ST_PresetColorVal = 39
	ST_PresetColorValDarkViolet           ST_PresetColorVal = 40
	ST_PresetColorValDkBlue               ST_PresetColorVal = 41
	ST_PresetColorValDkCyan               ST_PresetColorVal = 42
	ST_PresetColorValDkGoldenrod          ST_PresetColorVal = 43
	ST_PresetColorValDkGray               ST_PresetColorVal = 44
	ST_PresetColorValDkGrey               ST_PresetColorVal = 45
	ST_PresetColorValDkGreen              ST_PresetColorVal = 46
	ST_PresetColorValDkKhaki              ST_PresetColorVal = 47
	ST_PresetColorValDkMagenta            ST_PresetColorVal = 48
	ST_PresetColorValDkOliveGreen         ST_PresetColorVal = 49
	ST_PresetColorValDkOrange             ST_PresetColorVal = 50
	ST_PresetColorValDkOrchid             ST_PresetColorVal = 51
	ST_PresetColorValDkRed                ST_PresetColorVal = 52
	ST_PresetColorValDkSalmon             ST_PresetColorVal = 53
	ST_PresetColorValDkSeaGreen           ST_PresetColorVal = 54
	ST_PresetColorValDkSlateBlue          ST_PresetColorVal = 55
	ST_PresetColorValDkSlateGray          ST_PresetColorVal = 56
	ST_PresetColorValDkSlateGrey          ST_PresetColorVal = 57
	ST_PresetColorValDkTurquoise          ST_PresetColorVal = 58
	ST_PresetColorValDkViolet             ST_PresetColorVal = 59
	ST_PresetColorValDeepPink             ST_PresetColorVal = 60
	ST_PresetColorValDeepSkyBlue          ST_PresetColorVal = 61
	ST_PresetColorValDimGray              ST_PresetColorVal = 62
	ST_PresetColorValDimGrey              ST_PresetColorVal = 63
	ST_PresetColorValDodgerBlue           ST_PresetColorVal = 64
	ST_PresetColorValFirebrick            ST_PresetColorVal = 65
	ST_PresetColorValFloralWhite          ST_PresetColorVal = 66
	ST_PresetColorValForestGreen          ST_PresetColorVal = 67
	ST_PresetColorValFuchsia              ST_PresetColorVal = 68
	ST_PresetColorValGainsboro            ST_PresetColorVal = 69
	ST_PresetColorValGhostWhite           ST_PresetColorVal = 70
	ST_PresetColorValGold                 ST_PresetColorVal = 71
	ST_PresetColorValGoldenrod            ST_PresetColorVal = 72
	ST_PresetColorValGray                 ST_PresetColorVal = 73
	ST_PresetColorValGrey                 ST_PresetColorVal = 74
	ST_PresetColorValGreen                ST_PresetColorVal = 75
	ST_PresetColorValGreenYellow          ST_PresetColorVal = 76
	ST_PresetColorValHoneydew             ST_PresetColorVal = 77
	ST_PresetColorValHotPink              ST_PresetColorVal = 78
	ST_PresetColorValIndianRed            ST_PresetColorVal = 79
	ST_PresetColorValIndigo               ST_PresetColorVal = 80
	ST_PresetColorValIvory                ST_PresetColorVal = 81
	ST_PresetColorValKhaki                ST_PresetColorVal = 82
	ST_PresetColorValLavender             ST_PresetColorVal = 83
	ST_PresetColorValLavenderBlush        ST_PresetColorVal = 84
	ST_PresetColorValLawnGreen            ST_PresetColorVal = 85
	ST_PresetColorValLemonChiffon         ST_PresetColorVal = 86
	ST_PresetColorValLightBlue            ST_PresetColorVal = 87
	ST_PresetColorValLightCoral           ST_PresetColorVal = 88
	ST_PresetColorValLightCyan            ST_PresetColorVal = 89
	ST_PresetColorValLightGoldenrodYellow ST_PresetColorVal = 90
	ST_PresetColorValLightGray            ST_PresetColorVal = 91
	ST_PresetColorValLightGrey            ST_PresetColorVal = 92
	ST_PresetColorValLightGreen           ST_PresetColorVal = 93
	ST_PresetColorValLightPink            ST_PresetColorVal = 94
	ST_PresetColorValLightSalmon          ST_PresetColorVal = 95
	ST_PresetColorValLightSeaGreen        ST_PresetColorVal = 96
	ST_PresetColorValLightSkyBlue         ST_PresetColorVal = 97
	ST_PresetColorValLightSlateGray       ST_PresetColorVal = 98
	ST_PresetColorValLightSlateGrey       ST_PresetColorVal = 99
	ST_PresetColorValLightSteelBlue       ST_PresetColorVal = 100
	ST_PresetColorValLightYellow          ST_PresetColorVal = 101
	ST_PresetColorValLtBlue               ST_PresetColorVal = 102
	ST_PresetColorValLtCoral              ST_PresetColorVal = 103
	ST_PresetColorValLtCyan               ST_PresetColorVal = 104
	ST_PresetColorValLtGoldenrodYellow    ST_PresetColorVal = 105
	ST_PresetColorValLtGray               ST_PresetColorVal = 106
	ST_PresetColorValLtGrey               ST_PresetColorVal = 107
	ST_PresetColorValLtGreen              ST_PresetColorVal = 108
	ST_PresetColorValLtPink               ST_PresetColorVal = 109
	ST_PresetColorValLtSalmon             ST_PresetColorVal = 110
	ST_PresetColorValLtSeaGreen           ST_PresetColorVal = 111
	ST_PresetColorValLtSkyBlue            ST_PresetColorVal = 112
	ST_PresetColorValLtSlateGray          ST_PresetColorVal = 113
	ST_PresetColorValLtSlateGrey          ST_PresetColorVal = 114
	ST_PresetColorValLtSteelBlue          ST_PresetColorVal = 115
	ST_PresetColorValLtYellow             ST_PresetColorVal = 116
	ST_PresetColorValLime                 ST_PresetColorVal = 117
	ST_PresetColorValLimeGreen            ST_PresetColorVal = 118
	ST_PresetColorValLinen                ST_PresetColorVal = 119
	ST_PresetColorValMagenta              ST_PresetColorVal = 120
	ST_PresetColorValMaroon               ST_PresetColorVal = 121
	ST_PresetColorValMedAquamarine        ST_PresetColorVal = 122
	ST_PresetColorValMedBlue              ST_PresetColorVal = 123
	ST_PresetColorValMedOrchid            ST_PresetColorVal = 124
	ST_PresetColorValMedPurple            ST_PresetColorVal = 125
	ST_PresetColorValMedSeaGreen          ST_PresetColorVal = 126
	ST_PresetColorValMedSlateBlue         ST_PresetColorVal = 127
	ST_PresetColorValMedSpringGreen       ST_PresetColorVal = 128
	ST_PresetColorValMedTurquoise         ST_PresetColorVal = 129
	ST_PresetColorValMedVioletRed         ST_PresetColorVal = 130
	ST_PresetColorValMediumAquamarine     ST_PresetColorVal = 131
	ST_PresetColorValMediumBlue           ST_PresetColorVal = 132
	ST_PresetColorValMediumOrchid         ST_PresetColorVal = 133
	ST_PresetColorValMediumPurple         ST_PresetColorVal = 134
	ST_PresetColorValMediumSeaGreen       ST_PresetColorVal = 135
	ST_PresetColorValMediumSlateBlue      ST_PresetColorVal = 136
	ST_PresetColorValMediumSpringGreen    ST_PresetColorVal = 137
	ST_PresetColorValMediumTurquoise      ST_PresetColorVal = 138
	ST_PresetColorValMediumVioletRed      ST_PresetColorVal = 139
	ST_PresetColorValMidnightBlue         ST_PresetColorVal = 140
	ST_PresetColorValMintCream            ST_PresetColorVal = 141
	ST_PresetColorValMistyRose            ST_PresetColorVal = 142
	ST_PresetColorValMoccasin             ST_PresetColorVal = 143
	ST_PresetColorValNavajoWhite          ST_PresetColorVal = 144
	ST_PresetColorValNavy                 ST_PresetColorVal = 145
	ST_PresetColorValOldLace              ST_PresetColorVal = 146
	ST_PresetColorValOlive                ST_PresetColorVal = 147
	ST_PresetColorValOliveDrab            ST_PresetColorVal = 148
	ST_PresetColorValOrange               ST_PresetColorVal = 149
	ST_PresetColorValOrangeRed            ST_PresetColorVal = 150
	ST_PresetColorValOrchid               ST_PresetColorVal = 151
	ST_PresetColorValPaleGoldenrod        ST_PresetColorVal = 152
	ST_PresetColorValPaleGreen            ST_PresetColorVal = 153
	ST_PresetColorValPaleTurquoise        ST_PresetColorVal = 154
	ST_PresetColorValPaleVioletRed        ST_PresetColorVal = 155
	ST_PresetColorValPapayaWhip           ST_PresetColorVal = 156
	ST_PresetColorValPeachPuff            ST_PresetColorVal = 157
	ST_PresetColorValPeru                 ST_PresetColorVal = 158
	ST_PresetColorValPink                 ST_PresetColorVal = 159
	ST_PresetColorValPlum                 ST_PresetColorVal = 160
	ST_PresetColorValPowderBlue           ST_PresetColorVal = 161
	ST_PresetColorValPurple               ST_PresetColorVal = 162
	ST_PresetColorValRed                  ST_PresetColorVal = 163
	ST_PresetColorValRosyBrown            ST_PresetColorVal = 164
	ST_PresetColorValRoyalBlue            ST_PresetColorVal = 165
	ST_PresetColorValSaddleBrown          ST_PresetColorVal = 166
	ST_PresetColorValSalmon               ST_PresetColorVal = 167
	ST_PresetColorValSandyBrown           ST_PresetColorVal = 168
	ST_PresetColorValSeaGreen             ST_PresetColorVal = 169
	ST_PresetColorValSeaShell             ST_PresetColorVal = 170
	ST_PresetColorValSienna               ST_PresetColorVal = 171
	ST_PresetColorValSilver               ST_PresetColorVal = 172
	ST_PresetColorValSkyBlue              ST_PresetColorVal = 173
	ST_PresetColorValSlateBlue            ST_PresetColorVal = 174
	ST_PresetColorValSlateGray            ST_PresetColorVal = 175
	ST_PresetColorValSlateGrey            ST_PresetColorVal = 176
	ST_PresetColorValSnow                 ST_PresetColorVal = 177
	ST_PresetColorValSpringGreen          ST_PresetColorVal = 178
	ST_PresetColorValSteelBlue            ST_PresetColorVal = 179
	ST_PresetColorValTan                  ST_PresetColorVal = 180
	ST_PresetColorValTeal                 ST_PresetColorVal = 181
	ST_PresetColorValThistle              ST_PresetColorVal = 182
	ST_PresetColorValTomato               ST_PresetColorVal = 183
	ST_PresetColorValTurquoise            ST_PresetColorVal = 184
	ST_PresetColorValViolet               ST_PresetColorVal = 185
	ST_PresetColorValWheat                ST_PresetColorVal = 186
	ST_PresetColorValWhite                ST_PresetColorVal = 187
	ST_PresetColorValWhiteSmoke           ST_PresetColorVal = 188
	ST_PresetColorValYellow               ST_PresetColorVal = 189
	ST_PresetColorValYellowGreen          ST_PresetColorVal = 190
)

func (_cgda *CT_GroupFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_SolidColorFillProperties struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_feffea *Graphic) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_feffea.CT_GraphicalObject = *NewCT_GraphicalObject()
_dafcac:
	for {
		_bgabb, _bgagg := d.Token()
		if _bgagg != nil {
			return _bgagg
		}
		switch _gcdag := _bgabb.(type) {
		case _g.StartElement:
			switch _gcdag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _dabea := d.DecodeElement(_feffea.GraphicData, &_gcdag); _dabea != nil {
					return _dabea
				}
			default:
				_fc.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0047r\u0061\u0070\u0068\u0069\u0063\u0020\u0025\u0076", _gcdag.Name)
				if _bbbbd := d.Skip(); _bbbbd != nil {
					return _bbbbd
				}
			}
		case _g.EndElement:
			break _dafcac
		case _g.CharData:
		}
	}
	return nil
}

func (_bcdbca *CT_TextListStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dcfcg:
	for {
		_bdbcd, _cgbcf := d.Token()
		if _cgbcf != nil {
			return _cgbcf
		}
		switch _aaaga := _bdbcd.(type) {
		case _g.StartElement:
			switch _aaaga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}:
				_bcdbca.DefPPr = NewCT_TextParagraphProperties()
				if _aecbf := d.DecodeElement(_bcdbca.DefPPr, &_aaaga); _aecbf != nil {
					return _aecbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}:
				_bcdbca.Lvl1pPr = NewCT_TextParagraphProperties()
				if _agcdf := d.DecodeElement(_bcdbca.Lvl1pPr, &_aaaga); _agcdf != nil {
					return _agcdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}:
				_bcdbca.Lvl2pPr = NewCT_TextParagraphProperties()
				if _ddbad := d.DecodeElement(_bcdbca.Lvl2pPr, &_aaaga); _ddbad != nil {
					return _ddbad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}:
				_bcdbca.Lvl3pPr = NewCT_TextParagraphProperties()
				if _ddgbcb := d.DecodeElement(_bcdbca.Lvl3pPr, &_aaaga); _ddgbcb != nil {
					return _ddgbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}:
				_bcdbca.Lvl4pPr = NewCT_TextParagraphProperties()
				if _ecgabc := d.DecodeElement(_bcdbca.Lvl4pPr, &_aaaga); _ecgabc != nil {
					return _ecgabc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}:
				_bcdbca.Lvl5pPr = NewCT_TextParagraphProperties()
				if _ecabff := d.DecodeElement(_bcdbca.Lvl5pPr, &_aaaga); _ecabff != nil {
					return _ecabff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}:
				_bcdbca.Lvl6pPr = NewCT_TextParagraphProperties()
				if _bfdfd := d.DecodeElement(_bcdbca.Lvl6pPr, &_aaaga); _bfdfd != nil {
					return _bfdfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}:
				_bcdbca.Lvl7pPr = NewCT_TextParagraphProperties()
				if _eebab := d.DecodeElement(_bcdbca.Lvl7pPr, &_aaaga); _eebab != nil {
					return _eebab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}:
				_bcdbca.Lvl8pPr = NewCT_TextParagraphProperties()
				if _aegee := d.DecodeElement(_bcdbca.Lvl8pPr, &_aaaga); _aegee != nil {
					return _aegee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}:
				_bcdbca.Lvl9pPr = NewCT_TextParagraphProperties()
				if _bbed := d.DecodeElement(_bcdbca.Lvl9pPr, &_aaaga); _bbed != nil {
					return _bbed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcdbca.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcce := d.DecodeElement(_bcdbca.ExtLst, &_aaaga); _fcce != nil {
					return _fcce
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025v", _aaaga.Name)
				if _beeab := d.Skip(); _beeab != nil {
					return _beeab
				}
			}
		case _g.EndElement:
			break _dcfcg
		case _g.CharData:
		}
	}
	return nil
}

func (_cbde *CT_NonVisualConnectorProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cbcdg:
	for {
		_baccf, _gfed := d.Token()
		if _gfed != nil {
			return _gfed
		}
		switch _cdgee := _baccf.(type) {
		case _g.StartElement:
			switch _cdgee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_cbde.CxnSpLocks = NewCT_ConnectorLocking()
				if _feee := d.DecodeElement(_cbde.CxnSpLocks, &_cdgee); _feee != nil {
					return _feee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}:
				_cbde.StCxn = NewCT_Connection()
				if _gface := d.DecodeElement(_cbde.StCxn, &_cdgee); _gface != nil {
					return _gface
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}:
				_cbde.EndCxn = NewCT_Connection()
				if _fdddf := d.DecodeElement(_cbde.EndCxn, &_cdgee); _fdddf != nil {
					return _fdddf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbde.ExtLst = NewCT_OfficeArtExtensionList()
				if _baff := d.DecodeElement(_cbde.ExtLst, &_cdgee); _baff != nil {
					return _baff
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006cC\u006f\u006en\u0065\u0063\u0074\u006fr\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cdgee.Name)
				if _fcgcg := d.Skip(); _fcgcg != nil {
					return _fcgcg
				}
			}
		case _g.EndElement:
			break _cbcdg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableCol and its children
func (_bfeeaf *CT_TableCol) Validate() error {
	return _bfeeaf.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c")
}

func (_cdfab *CT_EffectStyleItem) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cdfab.EffectLst != nil {
		_ebeaa := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdfab.EffectLst, _ebeaa)
	}
	if _cdfab.EffectDag != nil {
		_fdbca := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_cdfab.EffectDag, _fdbca)
	}
	if _cdfab.Scene3d != nil {
		_afb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_cdfab.Scene3d, _afb)
	}
	if _cdfab.Sp3d != nil {
		_gaaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_cdfab.Sp3d, _gaaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_InverseGammaTransform and its children
func (_cagcf *CT_InverseGammaTransform) Validate() error {
	return _cagcf.ValidateWithPath("\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

func (_caddb *EG_LineDashProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dbeaff:
	for {
		_bbcbg, _agabd := d.Token()
		if _agabd != nil {
			return _agabd
		}
		switch _facff := _bbcbg.(type) {
		case _g.StartElement:
			switch _facff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_caddb.PrstDash = NewCT_PresetLineDashProperties()
				if _cdaae := d.DecodeElement(_caddb.PrstDash, &_facff); _cdaae != nil {
					return _cdaae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_caddb.CustDash = NewCT_DashStopList()
				if _bgdfc := d.DecodeElement(_caddb.CustDash, &_facff); _bgdfc != nil {
					return _bgdfc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _facff.Name)
				if _gfdccb := d.Skip(); _gfdccb != nil {
					return _gfdccb
				}
			}
		case _g.EndElement:
			break _dbeaff
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the TblStyleLst and its children, prefixing error messages with path
func (_fdcab *TblStyleLst) ValidateWithPath(path string) error {
	if _adfee := _fdcab.CT_TableStyleList.ValidateWithPath(path); _adfee != nil {
		return _adfee
	}
	return nil
}

type CT_GroupLocking struct {
	NoGrpAttr          *bool
	NoUngrpAttr        *bool
	NoSelectAttr       *bool
	NoRotAttr          *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

func (_ebaff ST_PitchFamily) ValidateWithPath(path string) error {
	switch _ebaff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebaff))
	}
	return nil
}

func NewCT_GvmlTextShape() *CT_GvmlTextShape {
	_eafde := &CT_GvmlTextShape{}
	_eafde.TxBody = NewCT_TextBody()
	return _eafde
}

func NewCT_Color() *CT_Color { _fcfcf := &CT_Color{}; return _fcfcf }

// Validate validates the CT_ShapeLocking and its children
func (_faad *CT_ShapeLocking) Validate() error {
	return _faad.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_agcabb ST_ShapeType) String() string {
	switch _agcabb {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065"
	case 2:
		return "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case 3:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 4:
		return "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "\u0072\u0065\u0063\u0074"
	case 6:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 7:
		return "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case 8:
		return "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case 9:
		return "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case 10:
		return "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case 11:
		return "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case 12:
		return "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case 13:
		return "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case 14:
		return "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case 15:
		return "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case 16:
		return "\u0073\u0074\u0061r\u0034"
	case 17:
		return "\u0073\u0074\u0061r\u0035"
	case 18:
		return "\u0073\u0074\u0061r\u0036"
	case 19:
		return "\u0073\u0074\u0061r\u0037"
	case 20:
		return "\u0073\u0074\u0061r\u0038"
	case 21:
		return "\u0073\u0074\u0061\u0072\u0031\u0030"
	case 22:
		return "\u0073\u0074\u0061\u0072\u0031\u0032"
	case 23:
		return "\u0073\u0074\u0061\u0072\u0031\u0036"
	case 24:
		return "\u0073\u0074\u0061\u0072\u0032\u0034"
	case 25:
		return "\u0073\u0074\u0061\u0072\u0033\u0032"
	case 26:
		return "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case 27:
		return "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case 28:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case 29:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case 30:
		return "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case 31:
		return "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case 32:
		return "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case 33:
		return "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case 34:
		return "\u0070\u006c\u0061\u0071\u0075\u0065"
	case 35:
		return "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case 36:
		return "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case 37:
		return "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case 38:
		return "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case 39:
		return "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case 40:
		return "\u0070\u0069\u0065"
	case 41:
		return "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case 42:
		return "\u0064\u006f\u006eu\u0074"
	case 43:
		return "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case 44:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 45:
		return "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case 46:
		return "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case 47:
		return "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case 48:
		return "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 49:
		return "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 50:
		return "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 51:
		return "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 52:
		return "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 53:
		return "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 54:
		return "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 55:
		return "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case 56:
		return "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 57:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 58:
		return "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 59:
		return "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 60:
		return "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 61:
		return "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case 62:
		return "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 63:
		return "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case 64:
		return "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case 65:
		return "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case 66:
		return "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case 67:
		return "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case 68:
		return "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 69:
		return "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case 70:
		return "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 71:
		return "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 72:
		return "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case 73:
		return "\u0063\u0075\u0062\u0065"
	case 74:
		return "\u0063\u0061\u006e"
	case 75:
		return "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case 76:
		return "\u0068\u0065\u0061r\u0074"
	case 77:
		return "\u0073\u0075\u006e"
	case 78:
		return "\u006d\u006f\u006f\u006e"
	case 79:
		return "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case 80:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case 81:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case 82:
		return "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case 83:
		return "\u0062\u0065\u0076e\u006c"
	case 84:
		return "\u0066\u0072\u0061m\u0065"
	case 85:
		return "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case 86:
		return "\u0063\u006f\u0072\u006e\u0065\u0072"
	case 87:
		return "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case 88:
		return "\u0063\u0068\u006fr\u0064"
	case 89:
		return "\u0061\u0072\u0063"
	case 90:
		return "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 91:
		return "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 92:
		return "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case 93:
		return "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case 94:
		return "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case 95:
		return "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case 96:
		return "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case 97:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case 98:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case 99:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case 100:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case 101:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case 102:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case 103:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case 104:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case 105:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case 106:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case 107:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case 108:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 109:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 110:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 111:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 112:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 113:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 114:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case 115:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case 116:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case 117:
		return "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 118:
		return "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 119:
		return "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 120:
		return "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 121:
		return "\u0063\u006c\u006fu\u0064"
	case 122:
		return "\u0072\u0069\u0062\u0062\u006f\u006e"
	case 123:
		return "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case 124:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case 125:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case 126:
		return "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case 127:
		return "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case 128:
		return "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case 129:
		return "\u0077\u0061\u0076\u0065"
	case 130:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case 131:
		return "\u0070\u006c\u0075\u0073"
	case 132:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case 133:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case 134:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case 135:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case 136:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 137:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case 138:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case 139:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case 140:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case 141:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case 142:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case 143:
		return "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case 144:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case 145:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case 146:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case 147:
		return "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case 148:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case 149:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case 150:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case 151:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case 152:
		return "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 153:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case 154:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case 155:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case 156:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case 157:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case 158:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case 159:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case 160:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case 161:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case 162:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case 163:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case 164:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case 165:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case 166:
		return "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case 167:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case 168:
		return "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case 169:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case 170:
		return "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case 171:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case 172:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case 173:
		return "\u0067\u0065\u0061r\u0036"
	case 174:
		return "\u0067\u0065\u0061r\u0039"
	case 175:
		return "\u0066\u0075\u006e\u006e\u0065\u006c"
	case 176:
		return "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case 177:
		return "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case 178:
		return "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case 179:
		return "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case 180:
		return "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case 181:
		return "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 182:
		return "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case 183:
		return "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case 184:
		return "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case 185:
		return "\u0063\u0068\u0061\u0072\u0074\u0058"
	case 186:
		return "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case 187:
		return "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return ""
}

func (_d *AG_Blob) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _d.EmbedAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_d.EmbedAttr)})
	}
	if _d.LinkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", *_d.LinkAttr)})
	}
	return nil
}

func (_abcf *ST_BevelPresetType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_abcf = 0
	case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
		*_abcf = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_abcf = 2
	case "\u0073\u006c\u006fp\u0065":
		*_abcf = 3
	case "\u0063\u0072\u006fs\u0073":
		*_abcf = 4
	case "\u0061\u006e\u0067l\u0065":
		*_abcf = 5
	case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
		*_abcf = 6
	case "\u0063\u006f\u006e\u0076\u0065\u0078":
		*_abcf = 7
	case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
		*_abcf = 8
	case "\u0064\u0069\u0076o\u0074":
		*_abcf = 9
	case "\u0072\u0069\u0062\u006c\u0065\u0074":
		*_abcf = 10
	case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
		*_abcf = 11
	case "\u0061r\u0074\u0044\u0065\u0063\u006f":
		*_abcf = 12
	}
	return nil
}

func (_bagfg ST_PresetLineDashVal) String() string {
	switch _bagfg {
	case 0:
		return ""
	case 1:
		return "\u0073\u006f\u006ci\u0064"
	case 2:
		return "\u0064\u006f\u0074"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u006c\u0067\u0044\u0061\u0073\u0068"
	case 5:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 6:
		return "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case 7:
		return "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 8:
		return "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case 9:
		return "\u0073\u0079\u0073\u0044\u006f\u0074"
	case 10:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return ""
}

type CT_Path2DList struct{ Path []*CT_Path2D }

func (_ffgff *CT_PathShadeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ffgff.PathAttr != ST_PathShadeTypeUnset {
		_fcdaf, _ccacb := _ffgff.PathAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0061\u0074\u0068"})
		if _ccacb != nil {
			return _ccacb
		}
		start.Attr = append(start.Attr, _fcdaf)
	}
	e.EncodeToken(start)
	if _ffgff.FillToRect != nil {
		_gaac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066i\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_ffgff.FillToRect, _gaac)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_XYAdjustHandle struct {
	GdRefXAttr *string
	MinXAttr   *ST_AdjCoordinate
	MaxXAttr   *ST_AdjCoordinate
	GdRefYAttr *string
	MinYAttr   *ST_AdjCoordinate
	MaxYAttr   *ST_AdjCoordinate
	Pos        *CT_AdjPoint2D
}

type CT_FillEffect struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

type CT_AlphaModulateEffect struct{ Cont *CT_EffectContainer }

type CT_PresetTextShape struct {
	PrstAttr ST_TextShapeType
	AvLst    *CT_GeomGuideList
}

// ValidateWithPath validates the CT_TextFont and its children, prefixing error messages with path
func (_ecdeg *CT_TextFont) ValidateWithPath(path string) error {
	if _ccdbf := _ecdeg.PitchFamilyAttr.ValidateWithPath(path + "\u002f\u0050i\u0074\u0063\u0068F\u0061\u006d\u0069\u006c\u0079\u0041\u0074\u0074\u0072"); _ccdbf != nil {
		return _ccdbf
	}
	return nil
}

// ValidateWithPath validates the CT_TextBulletTypefaceFollowText and its children, prefixing error messages with path
func (_cbec *CT_TextBulletTypefaceFollowText) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_GraphicalObjectFrameLocking and its children, prefixing error messages with path
func (_fccafe *CT_GraphicalObjectFrameLocking) ValidateWithPath(path string) error {
	if _fccafe.ExtLst != nil {
		if _bgcdf := _fccafe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgcdf != nil {
			return _bgcdf
		}
	}
	return nil
}

func (_ecfbgg *CT_TextAutonumberBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_bcagg, _aaggg := _ecfbgg.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _aaggg != nil {
		return _aaggg
	}
	start.Attr = append(start.Attr, _bcagg)
	if _ecfbgg.StartAtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073t\u0061\u0072\u0074\u0041\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_ecfbgg.StartAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cgbcd ST_TextSpacingPercentOrPercentString) String() string {
	if _cgbcd.ST_TextSpacingPercent != nil {
		return _bb.Sprintf("\u0025\u0076", *_cgbcd.ST_TextSpacingPercent)
	}
	if _cgbcd.ST_Percentage != nil {
		return _bb.Sprintf("\u0025\u0076", *_cgbcd.ST_Percentage)
	}
	return ""
}

// ValidateWithPath validates the CT_GvmlGraphicFrameNonVisual and its children, prefixing error messages with path
func (_cgdd *CT_GvmlGraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _gfag := _cgdd.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _gfag != nil {
		return _gfag
	}
	if _bbaa := _cgdd.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _bbaa != nil {
		return _bbaa
	}
	return nil
}

type CT_GvmlGraphicFrameNonVisual struct {
	CNvPr             *CT_NonVisualDrawingProps
	CNvGraphicFramePr *CT_NonVisualGraphicFrameProperties
}

func NewEG_LineJoinProperties() *EG_LineJoinProperties {
	_ecbcc := &EG_LineJoinProperties{}
	return _ecbcc
}

func NewCT_TextBulletSizeFollowText() *CT_TextBulletSizeFollowText {
	_acbecf := &CT_TextBulletSizeFollowText{}
	return _acbecf
}

func (_edefg *ST_TextAnchoringType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_edefg = 0
	case "\u0074":
		*_edefg = 1
	case "\u0063\u0074\u0072":
		*_edefg = 2
	case "\u0062":
		*_edefg = 3
	case "\u006a\u0075\u0073\u0074":
		*_edefg = 4
	case "\u0064\u0069\u0073\u0074":
		*_edefg = 5
	}
	return nil
}

func (_ecceb *CT_TextBody) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ecceb.BodyPr = NewCT_TextBodyProperties()
_cgcdd:
	for {
		_adedd, _cgdad := d.Token()
		if _cgdad != nil {
			return _cgdad
		}
		switch _bfeaf := _adedd.(type) {
		case _g.StartElement:
			switch _bfeaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _ecdbgc := d.DecodeElement(_ecceb.BodyPr, &_bfeaf); _ecdbgc != nil {
					return _ecdbgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_ecceb.LstStyle = NewCT_TextListStyle()
				if _gbea := d.DecodeElement(_ecceb.LstStyle, &_bfeaf); _gbea != nil {
					return _gbea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_effcad := NewCT_TextParagraph()
				if _cbfab := d.DecodeElement(_effcad, &_bfeaf); _cbfab != nil {
					return _cbfab
				}
				_ecceb.P = append(_ecceb.P, _effcad)
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0020\u0025\u0076", _bfeaf.Name)
				if _acfegg := d.Skip(); _acfegg != nil {
					return _acfegg
				}
			}
		case _g.EndElement:
			break _cgcdd
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Scale2D() *CT_Scale2D {
	_eebd := &CT_Scale2D{}
	_eebd.Sx = NewCT_Ratio()
	_eebd.Sy = NewCT_Ratio()
	return _eebd
}

func NewEG_Text3D() *EG_Text3D { _eedcd := &EG_Text3D{}; return _eedcd }

type CT_Path2DClose struct{}

type CT_LineJoinMiterProperties struct{ LimAttr *ST_PositivePercentage }

// Validate validates the CT_GrayscaleEffect and its children
func (_dbabg *CT_GrayscaleEffect) Validate() error {
	return _dbabg.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_TintEffect and its children
func (_adaba *CT_TintEffect) Validate() error {
	return _adaba.ValidateWithPath("\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_bdgab ST_ChartBuildStep) String() string {
	switch _bdgab {
	case 0:
		return ""
	case 1:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 2:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0061\u006c\u006c\u0050\u0074\u0073"
	case 6:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return ""
}

const (
	ST_BlackWhiteModeUnset      ST_BlackWhiteMode = 0
	ST_BlackWhiteModeClr        ST_BlackWhiteMode = 1
	ST_BlackWhiteModeAuto       ST_BlackWhiteMode = 2
	ST_BlackWhiteModeGray       ST_BlackWhiteMode = 3
	ST_BlackWhiteModeLtGray     ST_BlackWhiteMode = 4
	ST_BlackWhiteModeInvGray    ST_BlackWhiteMode = 5
	ST_BlackWhiteModeGrayWhite  ST_BlackWhiteMode = 6
	ST_BlackWhiteModeBlackGray  ST_BlackWhiteMode = 7
	ST_BlackWhiteModeBlackWhite ST_BlackWhiteMode = 8
	ST_BlackWhiteModeBlack      ST_BlackWhiteMode = 9
	ST_BlackWhiteModeWhite      ST_BlackWhiteMode = 10
	ST_BlackWhiteModeHidden     ST_BlackWhiteMode = 11
)

func (_baaca *EG_FillModeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eaefff:
	for {
		_bbfc, _aafaa := d.Token()
		if _aafaa != nil {
			return _aafaa
		}
		switch _bbbga := _bbfc.(type) {
		case _g.StartElement:
			switch _bbbga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_baaca.Tile = NewCT_TileInfoProperties()
				if _dddef := d.DecodeElement(_baaca.Tile, &_bbbga); _dddef != nil {
					return _dddef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_baaca.Stretch = NewCT_StretchInfoProperties()
				if _ggacb := d.DecodeElement(_baaca.Stretch, &_bbbga); _ggacb != nil {
					return _ggacb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0046\u0069\u006c\u006c\u004d\u006f\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bbbga.Name)
				if _gadeb := d.Skip(); _gadeb != nil {
					return _gadeb
				}
			}
		case _g.EndElement:
			break _eaefff
		case _g.CharData:
		}
	}
	return nil
}

func (_ggge *CT_ReflectionEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ggge.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.BlurRadAttr)})
	}
	if _ggge.StAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0041"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.StAAttr)})
	}
	if _ggge.StPosAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0050o\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.StPosAttr)})
	}
	if _ggge.EndAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0064\u0041"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.EndAAttr)})
	}
	if _ggge.EndPosAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0064\u0050\u006f\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.EndPosAttr)})
	}
	if _ggge.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.DistAttr)})
	}
	if _ggge.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.DirAttr)})
	}
	if _ggge.FadeDirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066a\u0064\u0065\u0044\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.FadeDirAttr)})
	}
	if _ggge.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.SxAttr)})
	}
	if _ggge.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.SyAttr)})
	}
	if _ggge.KxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.KxAttr)})
	}
	if _ggge.KyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_ggge.KyAttr)})
	}
	if _ggge.AlgnAttr != ST_RectAlignmentUnset {
		_affgc, _cgfab := _ggge.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _cgfab != nil {
			return _cgfab
		}
		start.Attr = append(start.Attr, _affgc)
	}
	if _ggge.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ggge.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_deeca ST_TileFlipMode) String() string {
	switch _deeca {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0078"
	case 3:
		return "\u0079"
	case 4:
		return "\u0078\u0079"
	}
	return ""
}

func NewCT_Point2D() *CT_Point2D { _cgcfg := &CT_Point2D{}; return _cgcfg }

type CT_BlipFillProperties struct {
	DpiAttr          *uint32
	RotWithShapeAttr *bool
	Blip             *CT_Blip
	SrcRect          *CT_RelativeRect
	Tile             *CT_TileInfoProperties
	Stretch          *CT_StretchInfoProperties
}

// Validate validates the CT_ShapeProperties and its children
func (_gfcdd *CT_ShapeProperties) Validate() error {
	return _gfcdd.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

type VideoFile struct{ CT_VideoFile }

// Validate validates the CT_TransformEffect and its children
func (_bbggc *CT_TransformEffect) Validate() error {
	return _bbggc.ValidateWithPath("\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_FontReference and its children
func (_aecda *CT_FontReference) Validate() error {
	return _aecda.ValidateWithPath("\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}

func NewCT_EmptyElement() *CT_EmptyElement { _dffbd := &CT_EmptyElement{}; return _dffbd }

func (_gdcg *CT_ComplementTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aagbd *ST_AnimationBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_faggb, _agcde := d.Token()
	if _agcde != nil {
		return _agcde
	}
	if _aceba, _bfgag := _faggb.(_g.EndElement); _bfgag && _aceba.Name == start.Name {
		*_aagbd = 1
		return nil
	}
	if _geagb, _gcgdf := _faggb.(_g.CharData); !_gcgdf {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _faggb)
	} else {
		switch string(_geagb) {
		case "":
			*_aagbd = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_aagbd = 1
		}
	}
	_faggb, _agcde = d.Token()
	if _agcde != nil {
		return _agcde
	}
	if _bgdfg, _egbab := _faggb.(_g.EndElement); _egbab && _bgdfg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _faggb)
}

func (_eggdc ST_EffectContainerType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cgfcg := _g.Attr{}
	_cgfcg.Name = name
	switch _eggdc {
	case ST_EffectContainerTypeUnset:
		_cgfcg.Value = ""
	case ST_EffectContainerTypeSib:
		_cgfcg.Value = "\u0073\u0069\u0062"
	case ST_EffectContainerTypeTree:
		_cgfcg.Value = "\u0074\u0072\u0065\u0065"
	}
	return _cgfcg, nil
}

func (_agcef *ST_TextCapsType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdccd, _ccgcce := d.Token()
	if _ccgcce != nil {
		return _ccgcce
	}
	if _ggdcf, _bcabb := _gdccd.(_g.EndElement); _bcabb && _ggdcf.Name == start.Name {
		*_agcef = 1
		return nil
	}
	if _abefb, _cdaaa := _gdccd.(_g.CharData); !_cdaaa {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdccd)
	} else {
		switch string(_abefb) {
		case "":
			*_agcef = 0
		case "\u006e\u006f\u006e\u0065":
			*_agcef = 1
		case "\u0073\u006d\u0061l\u006c":
			*_agcef = 2
		case "\u0061\u006c\u006c":
			*_agcef = 3
		}
	}
	_gdccd, _ccgcce = d.Token()
	if _ccgcce != nil {
		return _ccgcce
	}
	if _dacce, _gfbga := _gdccd.(_g.EndElement); _gfbga && _dacce.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdccd)
}

func (_ddbbfa *ST_PathFillMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_adcge, _bgfdd := d.Token()
	if _bgfdd != nil {
		return _bgfdd
	}
	if _begaae, _cceag := _adcge.(_g.EndElement); _cceag && _begaae.Name == start.Name {
		*_ddbbfa = 1
		return nil
	}
	if _cagea, _gceca := _adcge.(_g.CharData); !_gceca {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adcge)
	} else {
		switch string(_cagea) {
		case "":
			*_ddbbfa = 0
		case "\u006e\u006f\u006e\u0065":
			*_ddbbfa = 1
		case "\u006e\u006f\u0072\u006d":
			*_ddbbfa = 2
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_ddbbfa = 3
		case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
			*_ddbbfa = 4
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_ddbbfa = 5
		case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
			*_ddbbfa = 6
		}
	}
	_adcge, _bgfdd = d.Token()
	if _bgfdd != nil {
		return _bgfdd
	}
	if _fgdbc, _fdadd := _adcge.(_g.EndElement); _fdadd && _fgdbc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adcge)
}

func NewCT_AlphaBiLevelEffect() *CT_AlphaBiLevelEffect { _eea := &CT_AlphaBiLevelEffect{}; return _eea }

func NewCT_EffectStyleItem() *CT_EffectStyleItem { _fegae := &CT_EffectStyleItem{}; return _fegae }

func (_afeec *CT_GraphicalObjectFrameLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cfeaa := range start.Attr {
		if _cfeaa.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_begb, _dafgg := _fg.ParseBool(_cfeaa.Value)
			if _dafgg != nil {
				return _dafgg
			}
			_afeec.NoGrpAttr = &_begb
			continue
		}
		if _cfeaa.Name.Local == "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e" {
			_ecadae, _aagcf := _fg.ParseBool(_cfeaa.Value)
			if _aagcf != nil {
				return _aagcf
			}
			_afeec.NoDrilldownAttr = &_ecadae
			continue
		}
		if _cfeaa.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_degag, _eaag := _fg.ParseBool(_cfeaa.Value)
			if _eaag != nil {
				return _eaag
			}
			_afeec.NoSelectAttr = &_degag
			continue
		}
		if _cfeaa.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_fcfb, _bfgee := _fg.ParseBool(_cfeaa.Value)
			if _bfgee != nil {
				return _bfgee
			}
			_afeec.NoChangeAspectAttr = &_fcfb
			continue
		}
		if _cfeaa.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_dfbec, _fdfa := _fg.ParseBool(_cfeaa.Value)
			if _fdfa != nil {
				return _fdfa
			}
			_afeec.NoMoveAttr = &_dfbec
			continue
		}
		if _cfeaa.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_gdfgcg, _bagb := _fg.ParseBool(_cfeaa.Value)
			if _bagb != nil {
				return _bagb
			}
			_afeec.NoResizeAttr = &_gdfgcg
			continue
		}
	}
_ffaa:
	for {
		_fegb, _egff := d.Token()
		if _egff != nil {
			return _egff
		}
		switch _fgbe := _fegb.(type) {
		case _g.StartElement:
			switch _fgbe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afeec.ExtLst = NewCT_OfficeArtExtensionList()
				if _cefefa := d.DecodeElement(_afeec.ExtLst, &_fgbe); _cefefa != nil {
					return _cefefa
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063k\u0069\u006e\u0067\u0020\u0025\u0076", _fgbe.Name)
				if _edbed := d.Skip(); _edbed != nil {
					return _edbed
				}
			}
		case _g.EndElement:
			break _ffaa
		case _g.CharData:
		}
	}
	return nil
}

type CT_AnimationElementChoice struct {
	Dgm   *CT_AnimationDgmElement
	Chart *CT_AnimationChartElement
}

// ValidateWithPath validates the CT_SRgbColor and its children, prefixing error messages with path
func (_bfde *CT_SRgbColor) ValidateWithPath(path string) error {
	for _dcdc, _bfcfd := range _bfde.EG_ColorTransform {
		if _gcabg := _bfcfd.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _dcdc)); _gcabg != nil {
			return _gcabg
		}
	}
	return nil
}

func (_faeec ST_PresetLineDashVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ceebca := _g.Attr{}
	_ceebca.Name = name
	switch _faeec {
	case ST_PresetLineDashValUnset:
		_ceebca.Value = ""
	case ST_PresetLineDashValSolid:
		_ceebca.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PresetLineDashValDot:
		_ceebca.Value = "\u0064\u006f\u0074"
	case ST_PresetLineDashValDash:
		_ceebca.Value = "\u0064\u0061\u0073\u0068"
	case ST_PresetLineDashValLgDash:
		_ceebca.Value = "\u006c\u0067\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValDashDot:
		_ceebca.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValLgDashDot:
		_ceebca.Value = "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case ST_PresetLineDashValLgDashDotDot:
		_ceebca.Value = "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDash:
		_ceebca.Value = "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValSysDot:
		_ceebca.Value = "\u0073\u0079\u0073\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDot:
		_ceebca.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDotDot:
		_ceebca.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return _ceebca, nil
}

func (_aegf *ST_BlipCompression) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ddgac, _fdece := d.Token()
	if _fdece != nil {
		return _fdece
	}
	if _ggbdgg, _ddbeb := _ddgac.(_g.EndElement); _ddbeb && _ggbdgg.Name == start.Name {
		*_aegf = 1
		return nil
	}
	if _babag, _edadb := _ddgac.(_g.CharData); !_edadb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddgac)
	} else {
		switch string(_babag) {
		case "":
			*_aegf = 0
		case "\u0065\u006d\u0061i\u006c":
			*_aegf = 1
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_aegf = 2
		case "\u0070\u0072\u0069n\u0074":
			*_aegf = 3
		case "\u0068q\u0070\u0072\u0069\u006e\u0074":
			*_aegf = 4
		case "\u006e\u006f\u006e\u0065":
			*_aegf = 5
		}
	}
	_ddgac, _fdece = d.Token()
	if _fdece != nil {
		return _fdece
	}
	if _caaefa, _cfdgad := _ddgac.(_g.EndElement); _cfdgad && _caaefa.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddgac)
}

func NewCT_BaseStylesOverride() *CT_BaseStylesOverride {
	_ffeaa := &CT_BaseStylesOverride{}
	return _ffeaa
}

func (_acadbg *ST_PresetLineDashVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_effbe, _gcdcdge := d.Token()
	if _gcdcdge != nil {
		return _gcdcdge
	}
	if _degegf, _geedg := _effbe.(_g.EndElement); _geedg && _degegf.Name == start.Name {
		*_acadbg = 1
		return nil
	}
	if _fcggde, _dcgfc := _effbe.(_g.CharData); !_dcgfc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _effbe)
	} else {
		switch string(_fcggde) {
		case "":
			*_acadbg = 0
		case "\u0073\u006f\u006ci\u0064":
			*_acadbg = 1
		case "\u0064\u006f\u0074":
			*_acadbg = 2
		case "\u0064\u0061\u0073\u0068":
			*_acadbg = 3
		case "\u006c\u0067\u0044\u0061\u0073\u0068":
			*_acadbg = 4
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_acadbg = 5
		case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
			*_acadbg = 6
		case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_acadbg = 7
		case "\u0073y\u0073\u0044\u0061\u0073\u0068":
			*_acadbg = 8
		case "\u0073\u0079\u0073\u0044\u006f\u0074":
			*_acadbg = 9
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_acadbg = 10
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_acadbg = 11
		}
	}
	_effbe, _gcdcdge = d.Token()
	if _gcdcdge != nil {
		return _gcdcdge
	}
	if _dcbcb, _fbddcba := _effbe.(_g.EndElement); _fbddcba && _dcbcb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _effbe)
}

func (_gffefe *CT_TextSpacingPercent) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _baefg := range start.Attr {
		if _baefg.Name.Local == "\u0076\u0061\u006c" {
			_efcfd, _cacgd := ParseUnionST_TextSpacingPercentOrPercentString(_baefg.Value)
			if _cacgd != nil {
				return _cacgd
			}
			_gffefe.ValAttr = _efcfd
			continue
		}
	}
	for {
		_dgagc, _bggdf := d.Token()
		if _bggdf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061\u0063\u0069n\u0067\u0050\u0065\u0072\u0063\u0065\u006et\u003a\u0020\u0025\u0073", _bggdf)
		}
		if _fgebg, _eede := _dgagc.(_g.EndElement); _eede && _fgebg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the Blip and its children, prefixing error messages with path
func (_fdd *Blip) ValidateWithPath(path string) error {
	if _bea := _fdd.CT_Blip.ValidateWithPath(path); _bea != nil {
		return _bea
	}
	return nil
}

type CT_SupplementalFont struct {
	ScriptAttr   string
	TypefaceAttr string
}

func (_begbg *CT_PresetLineDashProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _begbg.ValAttr != ST_PresetLineDashValUnset {
		_cdbdg, _cdacd := _begbg.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
		if _cdacd != nil {
			return _cdacd
		}
		start.Attr = append(start.Attr, _cdbdg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_PresetCameraType byte

func (_fcgda *CT_GvmlPictureNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_beadg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_fcgda.CNvPr, _beadg)
	_cgbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_fcgda.CNvPicPr, _cgbd)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fcffa *CT_OfficeArtExtension) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gdaga := range start.Attr {
		if _gdaga.Name.Local == "\u0075\u0072\u0069" {
			_adbd, _aeea := _gdaga.Value, error(nil)
			if _aeea != nil {
				return _aeea
			}
			_fcffa.UriAttr = _adbd
			continue
		}
	}
_dgcbg:
	for {
		_edfcg, _egdba := d.Token()
		if _egdba != nil {
			return _egdba
		}
		switch _fggaac := _edfcg.(type) {
		case _g.StartElement:
			switch _fggaac.Name {
			default:
				if _dfac, _gfdba := _fc.CreateElement(_fggaac); _gfdba != nil {
					return _gfdba
				} else {
					if _daad := d.DecodeElement(_dfac, &_fggaac); _daad != nil {
						return _daad
					}
					_fcffa.Any = append(_fcffa.Any, _dfac)
				}
			}
		case _g.EndElement:
			break _dgcbg
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GrayscaleTransform() *CT_GrayscaleTransform {
	_dccgd := &CT_GrayscaleTransform{}
	return _dccgd
}

type CT_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

type ST_PathFillMode byte

func (_ffaaf *ST_PresetShadowVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdffa, _cdcgb := d.Token()
	if _cdcgb != nil {
		return _cdcgb
	}
	if _ggbaa, _bddbd := _fdffa.(_g.EndElement); _bddbd && _ggbaa.Name == start.Name {
		*_ffaaf = 1
		return nil
	}
	if _dabaaa, _gadag := _fdffa.(_g.CharData); !_gadag {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdffa)
	} else {
		switch string(_dabaaa) {
		case "":
			*_ffaaf = 0
		case "\u0073\u0068\u0064w\u0031":
			*_ffaaf = 1
		case "\u0073\u0068\u0064w\u0032":
			*_ffaaf = 2
		case "\u0073\u0068\u0064w\u0033":
			*_ffaaf = 3
		case "\u0073\u0068\u0064w\u0034":
			*_ffaaf = 4
		case "\u0073\u0068\u0064w\u0035":
			*_ffaaf = 5
		case "\u0073\u0068\u0064w\u0036":
			*_ffaaf = 6
		case "\u0073\u0068\u0064w\u0037":
			*_ffaaf = 7
		case "\u0073\u0068\u0064w\u0038":
			*_ffaaf = 8
		case "\u0073\u0068\u0064w\u0039":
			*_ffaaf = 9
		case "\u0073\u0068\u0064\u0077\u0031\u0030":
			*_ffaaf = 10
		case "\u0073\u0068\u0064\u0077\u0031\u0031":
			*_ffaaf = 11
		case "\u0073\u0068\u0064\u0077\u0031\u0032":
			*_ffaaf = 12
		case "\u0073\u0068\u0064\u0077\u0031\u0033":
			*_ffaaf = 13
		case "\u0073\u0068\u0064\u0077\u0031\u0034":
			*_ffaaf = 14
		case "\u0073\u0068\u0064\u0077\u0031\u0035":
			*_ffaaf = 15
		case "\u0073\u0068\u0064\u0077\u0031\u0036":
			*_ffaaf = 16
		case "\u0073\u0068\u0064\u0077\u0031\u0037":
			*_ffaaf = 17
		case "\u0073\u0068\u0064\u0077\u0031\u0038":
			*_ffaaf = 18
		case "\u0073\u0068\u0064\u0077\u0031\u0039":
			*_ffaaf = 19
		case "\u0073\u0068\u0064\u0077\u0032\u0030":
			*_ffaaf = 20
		}
	}
	_fdffa, _cdcgb = d.Token()
	if _cdcgb != nil {
		return _cdcgb
	}
	if _aabac, _baegfca := _fdffa.(_g.EndElement); _baegfca && _aabac.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdffa)
}

func NewCT_TableStyleCellStyle() *CT_TableStyleCellStyle {
	_eefee := &CT_TableStyleCellStyle{}
	return _eefee
}

// Validate validates the EG_ThemeableEffectStyle and its children
func (_defafa *EG_ThemeableEffectStyle) Validate() error {
	return _defafa.ValidateWithPath("\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_FillProperties and its children
func (_dfbde *CT_FillProperties) Validate() error {
	return _dfbde.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func (_fgege *EG_Text3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cfgeb:
	for {
		_cbccd, _cgbge := d.Token()
		if _cgbge != nil {
			return _cgbge
		}
		switch _cabfa := _cbccd.(type) {
		case _g.StartElement:
			switch _cabfa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_fgege.Sp3d = NewCT_Shape3D()
				if _ffgfee := d.DecodeElement(_fgege.Sp3d, &_cabfa); _ffgfee != nil {
					return _ffgfee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_fgege.FlatTx = NewCT_FlatText()
				if _fdebc := d.DecodeElement(_fgege.FlatTx, &_cabfa); _fdebc != nil {
					return _fdebc
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0054\u0065\u0078t\u0033\u0044 \u0025\u0076", _cabfa.Name)
				if _bfgefb := d.Skip(); _bfgefb != nil {
					return _bfgefb
				}
			}
		case _g.EndElement:
			break _cfgeb
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_PositiveFixedPercentage() *CT_PositiveFixedPercentage {
	_fbfgb := &CT_PositiveFixedPercentage{}
	return _fbfgb
}

type CT_TextSpacingPoint struct{ ValAttr int32 }

func (_afcfe ST_PositivePercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _afcfe.ST_PositivePercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_afcfe.ST_PositivePercentageDecimal)))
	}
	if _afcfe.ST_PositivePercentage != nil {
		e.Encode(_afcfe.ST_PositivePercentage)
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_LineProperties and its children, prefixing error messages with path
func (_edddc *CT_LineProperties) ValidateWithPath(path string) error {
	if _edddc.WAttr != nil {
		if *_edddc.WAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_edddc.WAttr)
		}
		if *_edddc.WAttr > 20116800 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0032\u0030\u0031\u0031\u0036\u0038\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_edddc.WAttr)
		}
	}
	if _edbd := _edddc.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _edbd != nil {
		return _edbd
	}
	if _cdfac := _edddc.CmpdAttr.ValidateWithPath(path + "\u002fC\u006d\u0070\u0064\u0041\u0074\u0074r"); _cdfac != nil {
		return _cdfac
	}
	if _facbe := _edddc.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _facbe != nil {
		return _facbe
	}
	if _edddc.NoFill != nil {
		if _eacg := _edddc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _eacg != nil {
			return _eacg
		}
	}
	if _edddc.SolidFill != nil {
		if _caab := _edddc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _caab != nil {
			return _caab
		}
	}
	if _edddc.GradFill != nil {
		if _ageae := _edddc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _ageae != nil {
			return _ageae
		}
	}
	if _edddc.PattFill != nil {
		if _dbedc := _edddc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _dbedc != nil {
			return _dbedc
		}
	}
	if _edddc.PrstDash != nil {
		if _ffce := _edddc.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _ffce != nil {
			return _ffce
		}
	}
	if _edddc.CustDash != nil {
		if _bdebf := _edddc.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _bdebf != nil {
			return _bdebf
		}
	}
	if _edddc.Round != nil {
		if _decb := _edddc.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _decb != nil {
			return _decb
		}
	}
	if _edddc.Bevel != nil {
		if _dbcac := _edddc.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _dbcac != nil {
			return _dbcac
		}
	}
	if _edddc.Miter != nil {
		if _fdga := _edddc.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _fdga != nil {
			return _fdga
		}
	}
	if _edddc.HeadEnd != nil {
		if _gaef := _edddc.HeadEnd.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0045\u006e\u0064"); _gaef != nil {
			return _gaef
		}
	}
	if _edddc.TailEnd != nil {
		if _bcdda := _edddc.TailEnd.ValidateWithPath(path + "\u002f\u0054\u0061\u0069\u006c\u0045\u006e\u0064"); _bcdda != nil {
			return _bcdda
		}
	}
	if _edddc.ExtLst != nil {
		if _egffb := _edddc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egffb != nil {
			return _egffb
		}
	}
	return nil
}

func (_bceaff ST_PresetPatternVal) Validate() error { return _bceaff.ValidateWithPath("") }

// Validate validates the CT_CustomColorList and its children
func (_cacf *CT_CustomColorList) Validate() error {
	return _cacf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074")
}

func (_afagf *Graphic) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return _afagf.CT_GraphicalObject.MarshalXML(e, start)
}

type Any interface {
	MarshalXML(_agdegg *_g.Encoder, _fefa _g.StartElement) error
	UnmarshalXML(_fdeae *_g.Decoder, _ebccgd _g.StartElement) error
}

// ValidateWithPath validates the CT_NonVisualConnectorProperties and its children, prefixing error messages with path
func (_agded *CT_NonVisualConnectorProperties) ValidateWithPath(path string) error {
	if _agded.CxnSpLocks != nil {
		if _cgead := _agded.CxnSpLocks.ValidateWithPath(path + "/\u0043\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _cgead != nil {
			return _cgead
		}
	}
	if _agded.StCxn != nil {
		if _fegga := _agded.StCxn.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u0078\u006e"); _fegga != nil {
			return _fegga
		}
	}
	if _agded.EndCxn != nil {
		if _bccf := _agded.EndCxn.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0078\u006e"); _bccf != nil {
			return _bccf
		}
	}
	if _agded.ExtLst != nil {
		if _ggadb := _agded.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggadb != nil {
			return _ggadb
		}
	}
	return nil
}

// Validate validates the CT_GlowEffect and its children
func (_ggda *CT_GlowEffect) Validate() error {
	return _ggda.ValidateWithPath("\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_GvmlShapeNonVisual and its children
func (_afae *CT_GvmlShapeNonVisual) Validate() error {
	return _afae.ValidateWithPath("C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_ebaa *CT_CustomColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ebaa.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_ebaa.NameAttr)})
	}
	e.EncodeToken(start)
	if _ebaa.ScrgbClr != nil {
		_efcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ebaa.ScrgbClr, _efcg)
	}
	if _ebaa.SrgbClr != nil {
		_adba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ebaa.SrgbClr, _adba)
	}
	if _ebaa.HslClr != nil {
		_bacce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ebaa.HslClr, _bacce)
	}
	if _ebaa.SysClr != nil {
		_facba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ebaa.SysClr, _facba)
	}
	if _ebaa.SchemeClr != nil {
		_caba := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ebaa.SchemeClr, _caba)
	}
	if _ebaa.PrstClr != nil {
		_efgg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ebaa.PrstClr, _efgg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_HslColor and its children, prefixing error messages with path
func (_ddee *CT_HslColor) ValidateWithPath(path string) error {
	if _ddee.HueAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ddee.HueAttr)
	}
	if _ddee.HueAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ddee.HueAttr)
	}
	if _addeg := _ddee.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _addeg != nil {
		return _addeg
	}
	if _geebg := _ddee.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _geebg != nil {
		return _geebg
	}
	for _egeaf, _fcaeg := range _ddee.EG_ColorTransform {
		if _bagac := _fcaeg.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _egeaf)); _bagac != nil {
			return _bagac
		}
	}
	return nil
}

func (_cadgd *ST_Percentage) Validate() error { return _cadgd.ValidateWithPath("") }

// Validate validates the CT_InverseTransform and its children
func (_bdad *CT_InverseTransform) Validate() error {
	return _bdad.ValidateWithPath("\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

// ValidateWithPath validates the EG_TextAutofit and its children, prefixing error messages with path
func (_acga *EG_TextAutofit) ValidateWithPath(path string) error {
	if _acga.NoAutofit != nil {
		if _gbdaa := _acga.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _gbdaa != nil {
			return _gbdaa
		}
	}
	if _acga.NormAutofit != nil {
		if _ecefg := _acga.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _ecefg != nil {
			return _ecefg
		}
	}
	if _acga.SpAutoFit != nil {
		if _cagbe := _acga.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _cagbe != nil {
			return _cagbe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorMappingOverride and its children, prefixing error messages with path
func (_cadf *CT_ColorMappingOverride) ValidateWithPath(path string) error {
	if _dgbd := _cadf.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dgbd != nil {
		return _dgbd
	}
	return nil
}

type EG_LineDashProperties struct {
	PrstDash *CT_PresetLineDashProperties
	CustDash *CT_DashStopList
}

type CT_VideoFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

func (_fgaag *CT_Transform2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _decdd := range start.Attr {
		if _decdd.Name.Local == "\u0072\u006f\u0074" {
			_cbagge, _eegf := _fg.ParseInt(_decdd.Value, 10, 32)
			if _eegf != nil {
				return _eegf
			}
			_deafe := int32(_cbagge)
			_fgaag.RotAttr = &_deafe
			continue
		}
		if _decdd.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_gffae, _baffa := _fg.ParseBool(_decdd.Value)
			if _baffa != nil {
				return _baffa
			}
			_fgaag.FlipHAttr = &_gffae
			continue
		}
		if _decdd.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_bbddg, _fecgb := _fg.ParseBool(_decdd.Value)
			if _fecgb != nil {
				return _fecgb
			}
			_fgaag.FlipVAttr = &_bbddg
			continue
		}
	}
_bebbe:
	for {
		_cadd, _cfcea := d.Token()
		if _cfcea != nil {
			return _cfcea
		}
		switch _ebeaf := _cadd.(type) {
		case _g.StartElement:
			switch _ebeaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_fgaag.Off = NewCT_Point2D()
				if _cbdcg := d.DecodeElement(_fgaag.Off, &_ebeaf); _cbdcg != nil {
					return _cbdcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fgaag.Ext = NewCT_PositiveSize2D()
				if _eacdaa := d.DecodeElement(_fgaag.Ext, &_ebeaf); _eacdaa != nil {
					return _eacdaa
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d2\u0044\u0020\u0025\u0076", _ebeaf.Name)
				if _abeeae := d.Skip(); _abeeae != nil {
					return _abeeae
				}
			}
		case _g.EndElement:
			break _bebbe
		case _g.CharData:
		}
	}
	return nil
}

func (_acfaca *CT_TransformEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bceae := range start.Attr {
		if _bceae.Name.Local == "\u0073\u0078" {
			_dfccd, _egfcd := ParseUnionST_Percentage(_bceae.Value)
			if _egfcd != nil {
				return _egfcd
			}
			_acfaca.SxAttr = &_dfccd
			continue
		}
		if _bceae.Name.Local == "\u0073\u0079" {
			_cfcdg, _feebc := ParseUnionST_Percentage(_bceae.Value)
			if _feebc != nil {
				return _feebc
			}
			_acfaca.SyAttr = &_cfcdg
			continue
		}
		if _bceae.Name.Local == "\u006b\u0078" {
			_agbgec, _cbaef := _fg.ParseInt(_bceae.Value, 10, 32)
			if _cbaef != nil {
				return _cbaef
			}
			_degba := int32(_agbgec)
			_acfaca.KxAttr = &_degba
			continue
		}
		if _bceae.Name.Local == "\u006b\u0079" {
			_ffdcdgc, _gdcce := _fg.ParseInt(_bceae.Value, 10, 32)
			if _gdcce != nil {
				return _gdcce
			}
			_dbddc := int32(_ffdcdgc)
			_acfaca.KyAttr = &_dbddc
			continue
		}
		if _bceae.Name.Local == "\u0074\u0078" {
			_ecacc, _aaagef := ParseUnionST_Coordinate(_bceae.Value)
			if _aaagef != nil {
				return _aaagef
			}
			_acfaca.TxAttr = &_ecacc
			continue
		}
		if _bceae.Name.Local == "\u0074\u0079" {
			_acdfb, _ebbbc := ParseUnionST_Coordinate(_bceae.Value)
			if _ebbbc != nil {
				return _ebbbc
			}
			_acfaca.TyAttr = &_acdfb
			continue
		}
	}
	for {
		_acadc, _ggedfc := d.Token()
		if _ggedfc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ggedfc)
		}
		if _cdffb, _bagdb := _acadc.(_g.EndElement); _bagdb && _cdffb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_LineEndProperties and its children
func (_afbg *CT_LineEndProperties) Validate() error {
	return _afbg.ValidateWithPath("C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073")
}

type EG_TextBulletSize struct {
	BuSzTx  *CT_TextBulletSizeFollowText
	BuSzPct *CT_TextBulletSizePercent
	BuSzPts *CT_TextBulletSizePoint
}

func (_afbafa ST_AnimationChartBuildType) String() string {
	if _afbafa.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _afbafa.ST_AnimationBuildType.String()
	}
	if _afbafa.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		return _afbafa.ST_AnimationChartOnlyBuildType.String()
	}
	return ""
}

// ValidateWithPath validates the CT_Path2DArcTo and its children, prefixing error messages with path
func (_ffagg *CT_Path2DArcTo) ValidateWithPath(path string) error {
	if _dbfab := _ffagg.WRAttr.ValidateWithPath(path + "\u002fW\u0052\u0041\u0074\u0074\u0072"); _dbfab != nil {
		return _dbfab
	}
	if _bffec := _ffagg.HRAttr.ValidateWithPath(path + "\u002fH\u0052\u0041\u0074\u0074\u0072"); _bffec != nil {
		return _bffec
	}
	if _gcaac := _ffagg.StAngAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _gcaac != nil {
		return _gcaac
	}
	if _ecade := _ffagg.SwAngAttr.ValidateWithPath(path + "\u002f\u0053\u0077\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _ecade != nil {
		return _ecade
	}
	return nil
}

func (_fbfbe *ST_PresetMaterialType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fbfbe = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
		*_fbfbe = 1
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
		*_fbfbe = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
		*_fbfbe = 3
	case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
		*_fbfbe = 4
	case "\u006d\u0061\u0074t\u0065":
		*_fbfbe = 5
	case "\u0070l\u0061\u0073\u0074\u0069\u0063":
		*_fbfbe = 6
	case "\u006d\u0065\u0074a\u006c":
		*_fbfbe = 7
	case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
		*_fbfbe = 8
	case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
		*_fbfbe = 9
	case "\u0070\u006f\u0077\u0064\u0065\u0072":
		*_fbfbe = 10
	case "\u0064\u006b\u0045\u0064\u0067\u0065":
		*_fbfbe = 11
	case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
		*_fbfbe = 12
	case "\u0063\u006c\u0065a\u0072":
		*_fbfbe = 13
	case "\u0066\u006c\u0061\u0074":
		*_fbfbe = 14
	case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
		*_fbfbe = 15
	}
	return nil
}

func (_aafefc ST_TextCapsType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eeacf := _g.Attr{}
	_eeacf.Name = name
	switch _aafefc {
	case ST_TextCapsTypeUnset:
		_eeacf.Value = ""
	case ST_TextCapsTypeNone:
		_eeacf.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextCapsTypeSmall:
		_eeacf.Value = "\u0073\u006d\u0061l\u006c"
	case ST_TextCapsTypeAll:
		_eeacf.Value = "\u0061\u006c\u006c"
	}
	return _eeacf, nil
}

const (
	ST_LightRigTypeUnset         ST_LightRigType = 0
	ST_LightRigTypeLegacyFlat1   ST_LightRigType = 1
	ST_LightRigTypeLegacyFlat2   ST_LightRigType = 2
	ST_LightRigTypeLegacyFlat3   ST_LightRigType = 3
	ST_LightRigTypeLegacyFlat4   ST_LightRigType = 4
	ST_LightRigTypeLegacyNormal1 ST_LightRigType = 5
	ST_LightRigTypeLegacyNormal2 ST_LightRigType = 6
	ST_LightRigTypeLegacyNormal3 ST_LightRigType = 7
	ST_LightRigTypeLegacyNormal4 ST_LightRigType = 8
	ST_LightRigTypeLegacyHarsh1  ST_LightRigType = 9
	ST_LightRigTypeLegacyHarsh2  ST_LightRigType = 10
	ST_LightRigTypeLegacyHarsh3  ST_LightRigType = 11
	ST_LightRigTypeLegacyHarsh4  ST_LightRigType = 12
	ST_LightRigTypeThreePt       ST_LightRigType = 13
	ST_LightRigTypeBalanced      ST_LightRigType = 14
	ST_LightRigTypeSoft          ST_LightRigType = 15
	ST_LightRigTypeHarsh         ST_LightRigType = 16
	ST_LightRigTypeFlood         ST_LightRigType = 17
	ST_LightRigTypeContrasting   ST_LightRigType = 18
	ST_LightRigTypeMorning       ST_LightRigType = 19
	ST_LightRigTypeSunrise       ST_LightRigType = 20
	ST_LightRigTypeSunset        ST_LightRigType = 21
	ST_LightRigTypeChilly        ST_LightRigType = 22
	ST_LightRigTypeFreezing      ST_LightRigType = 23
	ST_LightRigTypeFlat          ST_LightRigType = 24
	ST_LightRigTypeTwoPt         ST_LightRigType = 25
	ST_LightRigTypeGlow          ST_LightRigType = 26
	ST_LightRigTypeBrightRoom    ST_LightRigType = 27
)

func (_dgefc *CT_GlowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dgefc.RadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_dgefc.RadAttr)})
	}
	e.EncodeToken(start)
	if _dgefc.ScrgbClr != nil {
		_gbedb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dgefc.ScrgbClr, _gbedb)
	}
	if _dgefc.SrgbClr != nil {
		_dfga := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dgefc.SrgbClr, _dfga)
	}
	if _dgefc.HslClr != nil {
		_cfbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dgefc.HslClr, _cfbe)
	}
	if _dgefc.SysClr != nil {
		_cbfedd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dgefc.SysClr, _cbfedd)
	}
	if _dgefc.SchemeClr != nil {
		_afed := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dgefc.SchemeClr, _afed)
	}
	if _dgefc.PrstClr != nil {
		_fbae := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dgefc.PrstClr, _fbae)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eg *AG_Locking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fgd := range start.Attr {
		if _fgd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_fe, _cg := _fg.ParseBool(_fgd.Value)
			if _cg != nil {
				return _cg
			}
			_eg.NoGrpAttr = &_fe
			continue
		}
		if _fgd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_dcd, _fgdc := _fg.ParseBool(_fgd.Value)
			if _fgdc != nil {
				return _fgdc
			}
			_eg.NoSelectAttr = &_dcd
			continue
		}
		if _fgd.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_dag, _abe := _fg.ParseBool(_fgd.Value)
			if _abe != nil {
				return _abe
			}
			_eg.NoRotAttr = &_dag
			continue
		}
		if _fgd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gg, _dad := _fg.ParseBool(_fgd.Value)
			if _dad != nil {
				return _dad
			}
			_eg.NoChangeAspectAttr = &_gg
			continue
		}
		if _fgd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_ff, _ag := _fg.ParseBool(_fgd.Value)
			if _ag != nil {
				return _ag
			}
			_eg.NoMoveAttr = &_ff
			continue
		}
		if _fgd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_aec, _egb := _fg.ParseBool(_fgd.Value)
			if _egb != nil {
				return _egb
			}
			_eg.NoResizeAttr = &_aec
			continue
		}
		if _fgd.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_be, _ac := _fg.ParseBool(_fgd.Value)
			if _ac != nil {
				return _ac
			}
			_eg.NoEditPointsAttr = &_be
			continue
		}
		if _fgd.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_ebc, _ed := _fg.ParseBool(_fgd.Value)
			if _ed != nil {
				return _ed
			}
			_eg.NoAdjustHandlesAttr = &_ebc
			continue
		}
		if _fgd.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_bga, _ba := _fg.ParseBool(_fgd.Value)
			if _ba != nil {
				return _ba
			}
			_eg.NoChangeArrowheadsAttr = &_bga
			continue
		}
		if _fgd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_bf, _dd := _fg.ParseBool(_fgd.Value)
			if _dd != nil {
				return _dd
			}
			_eg.NoChangeShapeTypeAttr = &_bf
			continue
		}
	}
	for {
		_ec, _gd := d.Token()
		if _gd != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u003a\u0020%\u0073", _gd)
		}
		if _aea, _fec := _ec.(_g.EndElement); _fec && _aea.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecgd *CT_Path2DMoveTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ggabc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_ecgd.Pt, _ggabc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dageef ST_BlackWhiteMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dageef.String(), start)
}

type CT_ColorChangeEffect struct {
	UseAAttr *bool
	ClrFrom  *CT_Color
	ClrTo    *CT_Color
}

type CT_GrayscaleTransform struct{}

// ValidateWithPath validates the CT_BlendEffect and its children, prefixing error messages with path
func (_abec *CT_BlendEffect) ValidateWithPath(path string) error {
	if _abec.BlendAttr == ST_BlendModeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _facfa := _abec.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _facfa != nil {
		return _facfa
	}
	if _afgg := _abec.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _afgg != nil {
		return _afgg
	}
	return nil
}

func (_eggdf *ST_PathShadeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fcgbf, _ggbbc := d.Token()
	if _ggbbc != nil {
		return _ggbbc
	}
	if _cdgcg, _cfgga := _fcgbf.(_g.EndElement); _cfgga && _cdgcg.Name == start.Name {
		*_eggdf = 1
		return nil
	}
	if _faadc, _defb := _fcgbf.(_g.CharData); !_defb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcgbf)
	} else {
		switch string(_faadc) {
		case "":
			*_eggdf = 0
		case "\u0073\u0068\u0061p\u0065":
			*_eggdf = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_eggdf = 2
		case "\u0072\u0065\u0063\u0074":
			*_eggdf = 3
		}
	}
	_fcgbf, _ggbbc = d.Token()
	if _ggbbc != nil {
		return _ggbbc
	}
	if _dcge, _aecdb := _fcgbf.(_g.EndElement); _aecdb && _dcge.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcgbf)
}

func NewCT_VideoFile() *CT_VideoFile { _dgega := &CT_VideoFile{}; return _dgega }

// Validate validates the Tbl and its children
func (_fddeb *Tbl) Validate() error { return _fddeb.ValidateWithPath("\u0054\u0062\u006c") }

const (
	ST_PresetLineDashValUnset         ST_PresetLineDashVal = 0
	ST_PresetLineDashValSolid         ST_PresetLineDashVal = 1
	ST_PresetLineDashValDot           ST_PresetLineDashVal = 2
	ST_PresetLineDashValDash          ST_PresetLineDashVal = 3
	ST_PresetLineDashValLgDash        ST_PresetLineDashVal = 4
	ST_PresetLineDashValDashDot       ST_PresetLineDashVal = 5
	ST_PresetLineDashValLgDashDot     ST_PresetLineDashVal = 6
	ST_PresetLineDashValLgDashDotDot  ST_PresetLineDashVal = 7
	ST_PresetLineDashValSysDash       ST_PresetLineDashVal = 8
	ST_PresetLineDashValSysDot        ST_PresetLineDashVal = 9
	ST_PresetLineDashValSysDashDot    ST_PresetLineDashVal = 10
	ST_PresetLineDashValSysDashDotDot ST_PresetLineDashVal = 11
)

func (_eeabgb *CT_TextBlipBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eeabgb.Blip = NewCT_Blip()
_bdga:
	for {
		_gbaba, _bgfdf := d.Token()
		if _bgfdf != nil {
			return _bgfdf
		}
		switch _afbef := _gbaba.(type) {
		case _g.StartElement:
			switch _afbef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				if _fgdga := d.DecodeElement(_eeabgb.Blip, &_afbef); _fgdga != nil {
					return _fgdga
				}
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042\u0075\u006c\u006c\u0065\u0074\u0020\u0025\u0076", _afbef.Name)
				if _bebeb := d.Skip(); _bebeb != nil {
					return _bebeb
				}
			}
		case _g.EndElement:
			break _bdga
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LineEndProperties and its children, prefixing error messages with path
func (_adadg *CT_LineEndProperties) ValidateWithPath(path string) error {
	if _eddf := _adadg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _eddf != nil {
		return _eddf
	}
	if _cbabg := _adadg.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _cbabg != nil {
		return _cbabg
	}
	if _feff := _adadg.LenAttr.ValidateWithPath(path + "\u002f\u004c\u0065\u006e\u0041\u0074\u0074\u0072"); _feff != nil {
		return _feff
	}
	return nil
}

// Validate validates the CT_FixedPercentage and its children
func (_adagf *CT_FixedPercentage) Validate() error {
	return _adagf.ValidateWithPath("\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
}

// Validate validates the CT_Path2DList and its children
func (_gbgf *CT_Path2DList) Validate() error {
	return _gbgf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_TextNormalAutofit and its children
func (_dadff *CT_TextNormalAutofit) Validate() error {
	return _dadff.ValidateWithPath("C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074")
}

const (
	ST_PresetPatternValUnset      ST_PresetPatternVal = 0
	ST_PresetPatternValPct5       ST_PresetPatternVal = 1
	ST_PresetPatternValPct10      ST_PresetPatternVal = 2
	ST_PresetPatternValPct20      ST_PresetPatternVal = 3
	ST_PresetPatternValPct25      ST_PresetPatternVal = 4
	ST_PresetPatternValPct30      ST_PresetPatternVal = 5
	ST_PresetPatternValPct40      ST_PresetPatternVal = 6
	ST_PresetPatternValPct50      ST_PresetPatternVal = 7
	ST_PresetPatternValPct60      ST_PresetPatternVal = 8
	ST_PresetPatternValPct70      ST_PresetPatternVal = 9
	ST_PresetPatternValPct75      ST_PresetPatternVal = 10
	ST_PresetPatternValPct80      ST_PresetPatternVal = 11
	ST_PresetPatternValPct90      ST_PresetPatternVal = 12
	ST_PresetPatternValHorz       ST_PresetPatternVal = 13
	ST_PresetPatternValVert       ST_PresetPatternVal = 14
	ST_PresetPatternValLtHorz     ST_PresetPatternVal = 15
	ST_PresetPatternValLtVert     ST_PresetPatternVal = 16
	ST_PresetPatternValDkHorz     ST_PresetPatternVal = 17
	ST_PresetPatternValDkVert     ST_PresetPatternVal = 18
	ST_PresetPatternValNarHorz    ST_PresetPatternVal = 19
	ST_PresetPatternValNarVert    ST_PresetPatternVal = 20
	ST_PresetPatternValDashHorz   ST_PresetPatternVal = 21
	ST_PresetPatternValDashVert   ST_PresetPatternVal = 22
	ST_PresetPatternValCross      ST_PresetPatternVal = 23
	ST_PresetPatternValDnDiag     ST_PresetPatternVal = 24
	ST_PresetPatternValUpDiag     ST_PresetPatternVal = 25
	ST_PresetPatternValLtDnDiag   ST_PresetPatternVal = 26
	ST_PresetPatternValLtUpDiag   ST_PresetPatternVal = 27
	ST_PresetPatternValDkDnDiag   ST_PresetPatternVal = 28
	ST_PresetPatternValDkUpDiag   ST_PresetPatternVal = 29
	ST_PresetPatternValWdDnDiag   ST_PresetPatternVal = 30
	ST_PresetPatternValWdUpDiag   ST_PresetPatternVal = 31
	ST_PresetPatternValDashDnDiag ST_PresetPatternVal = 32
	ST_PresetPatternValDashUpDiag ST_PresetPatternVal = 33
	ST_PresetPatternValDiagCross  ST_PresetPatternVal = 34
	ST_PresetPatternValSmCheck    ST_PresetPatternVal = 35
	ST_PresetPatternValLgCheck    ST_PresetPatternVal = 36
	ST_PresetPatternValSmGrid     ST_PresetPatternVal = 37
	ST_PresetPatternValLgGrid     ST_PresetPatternVal = 38
	ST_PresetPatternValDotGrid    ST_PresetPatternVal = 39
	ST_PresetPatternValSmConfetti ST_PresetPatternVal = 40
	ST_PresetPatternValLgConfetti ST_PresetPatternVal = 41
	ST_PresetPatternValHorzBrick  ST_PresetPatternVal = 42
	ST_PresetPatternValDiagBrick  ST_PresetPatternVal = 43
	ST_PresetPatternValSolidDmnd  ST_PresetPatternVal = 44
	ST_PresetPatternValOpenDmnd   ST_PresetPatternVal = 45
	ST_PresetPatternValDotDmnd    ST_PresetPatternVal = 46
	ST_PresetPatternValPlaid      ST_PresetPatternVal = 47
	ST_PresetPatternValSphere     ST_PresetPatternVal = 48
	ST_PresetPatternValWeave      ST_PresetPatternVal = 49
	ST_PresetPatternValDivot      ST_PresetPatternVal = 50
	ST_PresetPatternValShingle    ST_PresetPatternVal = 51
	ST_PresetPatternValWave       ST_PresetPatternVal = 52
	ST_PresetPatternValTrellis    ST_PresetPatternVal = 53
	ST_PresetPatternValZigZag     ST_PresetPatternVal = 54
)

// ValidateWithPath validates the EG_LineDashProperties and its children, prefixing error messages with path
func (_cbbedb *EG_LineDashProperties) ValidateWithPath(path string) error {
	if _cbbedb.PrstDash != nil {
		if _eabfb := _cbbedb.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _eabfb != nil {
			return _eabfb
		}
	}
	if _cbbedb.CustDash != nil {
		if _dgffg := _cbbedb.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _dgffg != nil {
			return _dgffg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaModulateEffect and its children, prefixing error messages with path
func (_beaf *CT_AlphaModulateEffect) ValidateWithPath(path string) error {
	if _cfb := _beaf.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _cfb != nil {
		return _cfb
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlShape and its children, prefixing error messages with path
func (_eadcd *CT_GvmlShape) ValidateWithPath(path string) error {
	if _dgafe := _eadcd.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _dgafe != nil {
		return _dgafe
	}
	if _caeef := _eadcd.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _caeef != nil {
		return _caeef
	}
	if _eadcd.TxSp != nil {
		if _ffgeb := _eadcd.TxSp.ValidateWithPath(path + "\u002f\u0054\u0078S\u0070"); _ffgeb != nil {
			return _ffgeb
		}
	}
	if _eadcd.Style != nil {
		if _gbadd := _eadcd.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _gbadd != nil {
			return _gbadd
		}
	}
	if _eadcd.ExtLst != nil {
		if _debae := _eadcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _debae != nil {
			return _debae
		}
	}
	return nil
}

func (_ccaaa *CT_OuterShadowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _deeab := range start.Attr {
		if _deeab.Name.Local == "\u0061\u006c\u0067\u006e" {
			_ccaaa.AlgnAttr.UnmarshalXMLAttr(_deeab)
			continue
		}
		if _deeab.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_gggfd, _eaggb := _fg.ParseBool(_deeab.Value)
			if _eaggb != nil {
				return _eaggb
			}
			_ccaaa.RotWithShapeAttr = &_gggfd
			continue
		}
		if _deeab.Name.Local == "\u0064\u0069\u0073\u0074" {
			_edfdde, _dceg := _fg.ParseInt(_deeab.Value, 10, 64)
			if _dceg != nil {
				return _dceg
			}
			_ccaaa.DistAttr = &_edfdde
			continue
		}
		if _deeab.Name.Local == "\u0073\u0078" {
			_gecag, _aagcfb := ParseUnionST_Percentage(_deeab.Value)
			if _aagcfb != nil {
				return _aagcfb
			}
			_ccaaa.SxAttr = &_gecag
			continue
		}
		if _deeab.Name.Local == "\u0073\u0079" {
			_ddfgd, _ccggf := ParseUnionST_Percentage(_deeab.Value)
			if _ccggf != nil {
				return _ccggf
			}
			_ccaaa.SyAttr = &_ddfgd
			continue
		}
		if _deeab.Name.Local == "\u006b\u0078" {
			_bcdde, _faea := _fg.ParseInt(_deeab.Value, 10, 32)
			if _faea != nil {
				return _faea
			}
			_afggc := int32(_bcdde)
			_ccaaa.KxAttr = &_afggc
			continue
		}
		if _deeab.Name.Local == "\u006b\u0079" {
			_fgbeg, _fffedd := _fg.ParseInt(_deeab.Value, 10, 32)
			if _fffedd != nil {
				return _fffedd
			}
			_ddea := int32(_fgbeg)
			_ccaaa.KyAttr = &_ddea
			continue
		}
		if _deeab.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_fceaf, _becab := _fg.ParseInt(_deeab.Value, 10, 64)
			if _becab != nil {
				return _becab
			}
			_ccaaa.BlurRadAttr = &_fceaf
			continue
		}
		if _deeab.Name.Local == "\u0064\u0069\u0072" {
			_effeb, _gdcgdb := _fg.ParseInt(_deeab.Value, 10, 32)
			if _gdcgdb != nil {
				return _gdcgdb
			}
			_cgbed := int32(_effeb)
			_ccaaa.DirAttr = &_cgbed
			continue
		}
	}
_fcbae:
	for {
		_gdabb, _ebab := d.Token()
		if _ebab != nil {
			return _ebab
		}
		switch _gecea := _gdabb.(type) {
		case _g.StartElement:
			switch _gecea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ccaaa.ScrgbClr = NewCT_ScRgbColor()
				if _daefd := d.DecodeElement(_ccaaa.ScrgbClr, &_gecea); _daefd != nil {
					return _daefd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ccaaa.SrgbClr = NewCT_SRgbColor()
				if _caeec := d.DecodeElement(_ccaaa.SrgbClr, &_gecea); _caeec != nil {
					return _caeec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ccaaa.HslClr = NewCT_HslColor()
				if _agee := d.DecodeElement(_ccaaa.HslClr, &_gecea); _agee != nil {
					return _agee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ccaaa.SysClr = NewCT_SystemColor()
				if _fabgb := d.DecodeElement(_ccaaa.SysClr, &_gecea); _fabgb != nil {
					return _fabgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ccaaa.SchemeClr = NewCT_SchemeColor()
				if _ffcfd := d.DecodeElement(_ccaaa.SchemeClr, &_gecea); _ffcfd != nil {
					return _ffcfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ccaaa.PrstClr = NewCT_PresetColor()
				if _cccce := d.DecodeElement(_ccaaa.PrstClr, &_gecea); _cccce != nil {
					return _cccce
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _gecea.Name)
				if _eeede := d.Skip(); _eeede != nil {
					return _eeede
				}
			}
		case _g.EndElement:
			break _fcbae
		case _g.CharData:
		}
	}
	return nil
}

func (_ccgcc *CT_TableCellProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ccgcc.MarLAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _bb.Sprintf("\u0025\u0076", *_ccgcc.MarLAttr)})
	}
	if _ccgcc.MarRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_ccgcc.MarRAttr)})
	}
	if _ccgcc.MarTAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0054"}, Value: _bb.Sprintf("\u0025\u0076", *_ccgcc.MarTAttr)})
	}
	if _ccgcc.MarBAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0042"}, Value: _bb.Sprintf("\u0025\u0076", *_ccgcc.MarBAttr)})
	}
	if _ccgcc.VertAttr != ST_TextVerticalTypeUnset {
		_bcbe, _cfcff := _ccgcc.VertAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _cfcff != nil {
			return _cfcff
		}
		start.Attr = append(start.Attr, _bcbe)
	}
	if _ccgcc.AnchorAttr != ST_TextAnchoringTypeUnset {
		_egdfb, _cbgba := _ccgcc.AnchorAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _cbgba != nil {
			return _cbgba
		}
		start.Attr = append(start.Attr, _egdfb)
	}
	if _ccgcc.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_ccgcc.AnchorCtrAttr))})
	}
	if _ccgcc.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_gfdfa, _geaaa := _ccgcc.HorzOverflowAttr.MarshalXMLAttr(_g.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _geaaa != nil {
			return _geaaa
		}
		start.Attr = append(start.Attr, _gfdfa)
	}
	e.EncodeToken(start)
	if _ccgcc.LnL != nil {
		_deafd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u004c"}}
		e.EncodeElement(_ccgcc.LnL, _deafd)
	}
	if _ccgcc.LnR != nil {
		_bgfaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0052"}}
		e.EncodeElement(_ccgcc.LnR, _bgfaa)
	}
	if _ccgcc.LnT != nil {
		_ebbec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0054"}}
		e.EncodeElement(_ccgcc.LnT, _ebbec)
	}
	if _ccgcc.LnB != nil {
		_abdbce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0042"}}
		e.EncodeElement(_ccgcc.LnB, _abdbce)
	}
	if _ccgcc.LnTlToBr != nil {
		_acgb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}}
		e.EncodeElement(_ccgcc.LnTlToBr, _acgb)
	}
	if _ccgcc.LnBlToTr != nil {
		_dedad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}}
		e.EncodeElement(_ccgcc.LnBlToTr, _dedad)
	}
	if _ccgcc.Cell3D != nil {
		_gcedg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_ccgcc.Cell3D, _gcedg)
	}
	if _ccgcc.NoFill != nil {
		_defaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccgcc.NoFill, _defaf)
	}
	if _ccgcc.SolidFill != nil {
		_gbddd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccgcc.SolidFill, _gbddd)
	}
	if _ccgcc.GradFill != nil {
		_edgbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccgcc.GradFill, _edgbg)
	}
	if _ccgcc.BlipFill != nil {
		_defab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccgcc.BlipFill, _defab)
	}
	if _ccgcc.PattFill != nil {
		_adcdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccgcc.PattFill, _adcdd)
	}
	if _ccgcc.GrpFill != nil {
		_fdcca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_ccgcc.GrpFill, _fdcca)
	}
	if _ccgcc.Headers != nil {
		_addba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0065\u0072s"}}
		e.EncodeElement(_ccgcc.Headers, _addba)
	}
	if _ccgcc.ExtLst != nil {
		_cbbcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccgcc.ExtLst, _cbbcb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_abbde ST_AnimationDgmOnlyBuildType) Validate() error { return _abbde.ValidateWithPath("") }

// Validate validates the CT_FontScheme and its children
func (_eeccd *CT_FontScheme) Validate() error {
	return _eeccd.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

func (_aeaeg *CT_TextBodyProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aeaeg.RotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_aeaeg.RotAttr)})
	}
	if _aeaeg.SpcFirstLastParaAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aeaeg.SpcFirstLastParaAttr))})
	}
	if _aeaeg.VertOverflowAttr != ST_TextVertOverflowTypeUnset {
		_dfcf, _decgd := _aeaeg.VertOverflowAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _decgd != nil {
			return _decgd
		}
		start.Attr = append(start.Attr, _dfcf)
	}
	if _aeaeg.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_fddea, _cgbbea := _aeaeg.HorzOverflowAttr.MarshalXMLAttr(_g.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _cgbbea != nil {
			return _cgbbea
		}
		start.Attr = append(start.Attr, _fddea)
	}
	if _aeaeg.VertAttr != ST_TextVerticalTypeUnset {
		_gfbcg, _dcggc := _aeaeg.VertAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _dcggc != nil {
			return _dcggc
		}
		start.Attr = append(start.Attr, _gfbcg)
	}
	if _aeaeg.WrapAttr != ST_TextWrappingTypeUnset {
		_gfcde, _gbfd := _aeaeg.WrapAttr.MarshalXMLAttr(_g.Name{Local: "\u0077\u0072\u0061\u0070"})
		if _gbfd != nil {
			return _gbfd
		}
		start.Attr = append(start.Attr, _gfcde)
	}
	if _aeaeg.LInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_aeaeg.LInsAttr)})
	}
	if _aeaeg.TInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_aeaeg.TInsAttr)})
	}
	if _aeaeg.RInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_aeaeg.RInsAttr)})
	}
	if _aeaeg.BInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_aeaeg.BInsAttr)})
	}
	if _aeaeg.NumColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0075\u006d\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_aeaeg.NumColAttr)})
	}
	if _aeaeg.SpcColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0063\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_aeaeg.SpcColAttr)})
	}
	if _aeaeg.RtlColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0074\u006c\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aeaeg.RtlColAttr))})
	}
	if _aeaeg.FromWordArtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aeaeg.FromWordArtAttr))})
	}
	if _aeaeg.AnchorAttr != ST_TextAnchoringTypeUnset {
		_fecec, _gbged := _aeaeg.AnchorAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _gbged != nil {
			return _gbged
		}
		start.Attr = append(start.Attr, _fecec)
	}
	if _aeaeg.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aeaeg.AnchorCtrAttr))})
	}
	if _aeaeg.ForceAAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066o\u0072\u0063\u0065\u0041\u0041"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aeaeg.ForceAAAttr))})
	}
	if _aeaeg.UprightAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075p\u0072\u0069\u0067\u0068\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aeaeg.UprightAttr))})
	}
	if _aeaeg.CompatLnSpcAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aeaeg.CompatLnSpcAttr))})
	}
	e.EncodeToken(start)
	if _aeaeg.PrstTxWarp != nil {
		_cdgda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_aeaeg.PrstTxWarp, _cdgda)
	}
	if _aeaeg.NoAutofit != nil {
		_cefcg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_aeaeg.NoAutofit, _cefcg)
	}
	if _aeaeg.NormAutofit != nil {
		_geddb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_aeaeg.NormAutofit, _geddb)
	}
	if _aeaeg.SpAutoFit != nil {
		_aaaac := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_aeaeg.SpAutoFit, _aaaac)
	}
	if _aeaeg.Scene3d != nil {
		_cbbef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_aeaeg.Scene3d, _cbbef)
	}
	if _aeaeg.Sp3d != nil {
		_cbbga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_aeaeg.Sp3d, _cbbga)
	}
	if _aeaeg.FlatTx != nil {
		_ceebc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_aeaeg.FlatTx, _ceebc)
	}
	if _aeaeg.ExtLst != nil {
		_cbdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aeaeg.ExtLst, _cbdb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_feeef *ST_TextSpacingPercentOrPercentString) Validate() error {
	return _feeef.ValidateWithPath("")
}

type CT_EmptyElement struct{}

func (_ffefg *EG_TextBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ffefg.BuNone != nil {
		_fcfgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_ffefg.BuNone, _fcfgf)
	}
	if _ffefg.BuAutoNum != nil {
		_eebage := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_ffefg.BuAutoNum, _eebage)
	}
	if _ffefg.BuChar != nil {
		_cafga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_ffefg.BuChar, _cafga)
	}
	if _ffefg.BuBlip != nil {
		_dgddc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_ffefg.BuBlip, _dgddc)
	}
	return nil
}

func NewCT_FlatText() *CT_FlatText { _fadd := &CT_FlatText{}; return _fadd }

func (_gfda *CT_CustomColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cebb := range start.Attr {
		if _cebb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddgbc, _dcea := _cebb.Value, error(nil)
			if _dcea != nil {
				return _dcea
			}
			_gfda.NameAttr = &_ddgbc
			continue
		}
	}
_ggga:
	for {
		_gcbga, _cgcb := d.Token()
		if _cgcb != nil {
			return _cgcb
		}
		switch _dbgd := _gcbga.(type) {
		case _g.StartElement:
			switch _dbgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_gfda.ScrgbClr = NewCT_ScRgbColor()
				if _gacb := d.DecodeElement(_gfda.ScrgbClr, &_dbgd); _gacb != nil {
					return _gacb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_gfda.SrgbClr = NewCT_SRgbColor()
				if _bdfec := d.DecodeElement(_gfda.SrgbClr, &_dbgd); _bdfec != nil {
					return _bdfec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_gfda.HslClr = NewCT_HslColor()
				if _agde := d.DecodeElement(_gfda.HslClr, &_dbgd); _agde != nil {
					return _agde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_gfda.SysClr = NewCT_SystemColor()
				if _gdcc := d.DecodeElement(_gfda.SysClr, &_dbgd); _gdcc != nil {
					return _gdcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gfda.SchemeClr = NewCT_SchemeColor()
				if _cead := d.DecodeElement(_gfda.SchemeClr, &_dbgd); _cead != nil {
					return _cead
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_gfda.PrstClr = NewCT_PresetColor()
				if _ecge := d.DecodeElement(_gfda.PrstClr, &_dbgd); _ecge != nil {
					return _ecge
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _dbgd.Name)
				if _egee := d.Skip(); _egee != nil {
					return _egee
				}
			}
		case _g.EndElement:
			break _ggga
		case _g.CharData:
		}
	}
	return nil
}

func (_afaaga *EG_ThemeableEffectStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_adbgg:
	for {
		_edabg, _dcbeb := d.Token()
		if _dcbeb != nil {
			return _dcbeb
		}
		switch _eddag := _edabg.(type) {
		case _g.StartElement:
			switch _eddag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_afaaga.Effect = NewCT_EffectProperties()
				if _eecbb := d.DecodeElement(_afaaga.Effect, &_eddag); _eecbb != nil {
					return _eecbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_afaaga.EffectRef = NewCT_StyleMatrixReference()
				if _fgedgd := d.DecodeElement(_afaaga.EffectRef, &_eddag); _fgedgd != nil {
					return _fgedgd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0045\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065E\u0066\u0066\u0065\u0063\u0074\u0053t\u0079\u006c\u0065 \u0025\u0076", _eddag.Name)
				if _ffdba := d.Skip(); _ffdba != nil {
					return _ffdba
				}
			}
		case _g.EndElement:
			break _adbgg
		case _g.CharData:
		}
	}
	return nil
}

func (_abd *CT_AlphaReplaceEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecae := range start.Attr {
		if _ecae.Name.Local == "\u0061" {
			_bbga, _gad := ParseUnionST_PositiveFixedPercentage(_ecae.Value)
			if _gad != nil {
				return _gad
			}
			_abd.AAttr = _bbga
			continue
		}
	}
	for {
		_daf, _fabee := d.Token()
		if _fabee != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006ca\u0063\u0065\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _fabee)
		}
		if _cdg, _adb := _daf.(_g.EndElement); _adb && _cdg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableCol and its children, prefixing error messages with path
func (_ccaeb *CT_TableCol) ValidateWithPath(path string) error {
	if _ageba := _ccaeb.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _ageba != nil {
		return _ageba
	}
	if _ccaeb.ExtLst != nil {
		if _acfcgf := _ccaeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acfcgf != nil {
			return _acfcgf
		}
	}
	return nil
}

func (_bdcfg *ST_AnimationDgmOnlyBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bdcfg = 0
	case "\u006f\u006e\u0065":
		*_bdcfg = 1
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		*_bdcfg = 2
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_bdcfg = 3
	}
	return nil
}

type EG_ThemeableFillStyle struct {
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
}

func (_dfcgbf *CT_GlowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bgge := range start.Attr {
		if _bgge.Name.Local == "\u0072\u0061\u0064" {
			_ceecb, _bgecf := _fg.ParseInt(_bgge.Value, 10, 64)
			if _bgecf != nil {
				return _bgecf
			}
			_dfcgbf.RadAttr = &_ceecb
			continue
		}
	}
_acade:
	for {
		_ecag, _bddf := d.Token()
		if _bddf != nil {
			return _bddf
		}
		switch _dcfe := _ecag.(type) {
		case _g.StartElement:
			switch _dcfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dfcgbf.ScrgbClr = NewCT_ScRgbColor()
				if _affbd := d.DecodeElement(_dfcgbf.ScrgbClr, &_dcfe); _affbd != nil {
					return _affbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dfcgbf.SrgbClr = NewCT_SRgbColor()
				if _cfcfb := d.DecodeElement(_dfcgbf.SrgbClr, &_dcfe); _cfcfb != nil {
					return _cfcfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dfcgbf.HslClr = NewCT_HslColor()
				if _fefb := d.DecodeElement(_dfcgbf.HslClr, &_dcfe); _fefb != nil {
					return _fefb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dfcgbf.SysClr = NewCT_SystemColor()
				if _aeaf := d.DecodeElement(_dfcgbf.SysClr, &_dcfe); _aeaf != nil {
					return _aeaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dfcgbf.SchemeClr = NewCT_SchemeColor()
				if _aadbd := d.DecodeElement(_dfcgbf.SchemeClr, &_dcfe); _aadbd != nil {
					return _aadbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dfcgbf.PrstClr = NewCT_PresetColor()
				if _bcfc := d.DecodeElement(_dfcgbf.PrstClr, &_dcfe); _bcfc != nil {
					return _bcfc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047l\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _dcfe.Name)
				if _cffe := d.Skip(); _cffe != nil {
					return _cffe
				}
			}
		case _g.EndElement:
			break _acade
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_EffectContainerTypeUnset ST_EffectContainerType = 0
	ST_EffectContainerTypeSib   ST_EffectContainerType = 1
	ST_EffectContainerTypeTree  ST_EffectContainerType = 2
)

func NewCT_Table() *CT_Table {
	_fdaeb := &CT_Table{}
	_fdaeb.TblGrid = NewCT_TableGrid()
	return _fdaeb
}

// ValidateWithPath validates the CT_EffectStyleList and its children, prefixing error messages with path
func (_bafg *CT_EffectStyleList) ValidateWithPath(path string) error {
	for _dgef, _gbde := range _bafg.EffectStyle {
		if _cebcg := _gbde.ValidateWithPath(_bb.Sprintf("\u0025s\u002fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u005b\u0025\u0064\u005d", path, _dgef)); _cebcg != nil {
			return _cebcg
		}
	}
	return nil
}

type CT_TextFont struct {
	TypefaceAttr    string
	PanoseAttr      *string
	PitchFamilyAttr ST_PitchFamily
	CharsetAttr     *int8
}

// ValidateWithPath validates the CT_Path2DMoveTo and its children, prefixing error messages with path
func (_bgaca *CT_Path2DMoveTo) ValidateWithPath(path string) error {
	if _bffc := _bgaca.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _bffc != nil {
		return _bffc
	}
	return nil
}

func (_ffedf ST_TextPoint) String() string {
	if _ffedf.ST_TextPointUnqualified != nil {
		return _bb.Sprintf("\u0025\u0076", *_ffedf.ST_TextPointUnqualified)
	}
	if _ffedf.ST_UniversalMeasure != nil {
		return _bb.Sprintf("\u0025\u0076", *_ffedf.ST_UniversalMeasure)
	}
	return ""
}

func (_ggage *ST_SchemeColorVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgeb, _fbdgb := d.Token()
	if _fbdgb != nil {
		return _fbdgb
	}
	if _fceb, _cgfcd := _bgeb.(_g.EndElement); _cgfcd && _fceb.Name == start.Name {
		*_ggage = 1
		return nil
	}
	if _cecdc, _accff := _bgeb.(_g.CharData); !_accff {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgeb)
	} else {
		switch string(_cecdc) {
		case "":
			*_ggage = 0
		case "\u0062\u0067\u0031":
			*_ggage = 1
		case "\u0074\u0078\u0031":
			*_ggage = 2
		case "\u0062\u0067\u0032":
			*_ggage = 3
		case "\u0074\u0078\u0032":
			*_ggage = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_ggage = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_ggage = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_ggage = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_ggage = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_ggage = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_ggage = 10
		case "\u0068\u006c\u0069n\u006b":
			*_ggage = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_ggage = 12
		case "\u0070\u0068\u0043l\u0072":
			*_ggage = 13
		case "\u0064\u006b\u0031":
			*_ggage = 14
		case "\u006c\u0074\u0031":
			*_ggage = 15
		case "\u0064\u006b\u0032":
			*_ggage = 16
		case "\u006c\u0074\u0032":
			*_ggage = 17
		}
	}
	_bgeb, _fbdgb = d.Token()
	if _fbdgb != nil {
		return _fbdgb
	}
	if _agefag, _accgc := _bgeb.(_g.EndElement); _accgc && _agefag.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgeb)
}

func (_agbb *CT_GvmlConnectorNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_agbb.CNvPr = NewCT_NonVisualDrawingProps()
	_agbb.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
_cgdgd:
	for {
		_cegab, _aefg := d.Token()
		if _aefg != nil {
			return _aefg
		}
		switch _cegcg := _cegab.(type) {
		case _g.StartElement:
			switch _cegcg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gbbf := d.DecodeElement(_agbb.CNvPr, &_cegcg); _gbbf != nil {
					return _gbbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _eecfc := d.DecodeElement(_agbb.CNvCxnSpPr, &_cegcg); _eecfc != nil {
					return _eecfc
				}
			default:
				_fc.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006ee\u0063t\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073u\u0061l\u0020\u0025v", _cegcg.Name)
				if _eebe := d.Skip(); _eebe != nil {
					return _eebe
				}
			}
		case _g.EndElement:
			break _cgdgd
		case _g.CharData:
		}
	}
	return nil
}

type ST_BlipCompression byte

func (_befgg *CT_TableProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gdcdc := range start.Attr {
		if _gdcdc.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_eddg, _cdbbf := _fg.ParseBool(_gdcdc.Value)
			if _cdbbf != nil {
				return _cdbbf
			}
			_befgg.FirstRowAttr = &_eddg
			continue
		}
		if _gdcdc.Name.Local == "\u006ca\u0073\u0074\u0052\u006f\u0077" {
			_eecaba, _ebeda := _fg.ParseBool(_gdcdc.Value)
			if _ebeda != nil {
				return _ebeda
			}
			_befgg.LastRowAttr = &_eecaba
			continue
		}
		if _gdcdc.Name.Local == "\u0062a\u006e\u0064\u0052\u006f\u0077" {
			_addbe, _bddeg := _fg.ParseBool(_gdcdc.Value)
			if _bddeg != nil {
				return _bddeg
			}
			_befgg.BandRowAttr = &_addbe
			continue
		}
		if _gdcdc.Name.Local == "\u0062a\u006e\u0064\u0043\u006f\u006c" {
			_cbaag, _bcdc := _fg.ParseBool(_gdcdc.Value)
			if _bcdc != nil {
				return _bcdc
			}
			_befgg.BandColAttr = &_cbaag
			continue
		}
		if _gdcdc.Name.Local == "\u0072\u0074\u006c" {
			_ccaebf, _cceg := _fg.ParseBool(_gdcdc.Value)
			if _cceg != nil {
				return _cceg
			}
			_befgg.RtlAttr = &_ccaebf
			continue
		}
		if _gdcdc.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c" {
			_aedab, _ggfbfb := _fg.ParseBool(_gdcdc.Value)
			if _ggfbfb != nil {
				return _ggfbfb
			}
			_befgg.FirstColAttr = &_aedab
			continue
		}
		if _gdcdc.Name.Local == "\u006ca\u0073\u0074\u0043\u006f\u006c" {
			_deacaa, _dfdfbd := _fg.ParseBool(_gdcdc.Value)
			if _dfdfbd != nil {
				return _dfdfbd
			}
			_befgg.LastColAttr = &_deacaa
			continue
		}
	}
_cgaab:
	for {
		_adcagc, _dfcee := d.Token()
		if _dfcee != nil {
			return _dfcee
		}
		switch _afbbd := _adcagc.(type) {
		case _g.StartElement:
			switch _afbbd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_befgg.NoFill = NewCT_NoFillProperties()
				if _ddeae := d.DecodeElement(_befgg.NoFill, &_afbbd); _ddeae != nil {
					return _ddeae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_befgg.SolidFill = NewCT_SolidColorFillProperties()
				if _gdage := d.DecodeElement(_befgg.SolidFill, &_afbbd); _gdage != nil {
					return _gdage
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_befgg.GradFill = NewCT_GradientFillProperties()
				if _acbdb := d.DecodeElement(_befgg.GradFill, &_afbbd); _acbdb != nil {
					return _acbdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_befgg.BlipFill = NewCT_BlipFillProperties()
				if _aeaa := d.DecodeElement(_befgg.BlipFill, &_afbbd); _aeaa != nil {
					return _aeaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_befgg.PattFill = NewCT_PatternFillProperties()
				if _efacd := d.DecodeElement(_befgg.PattFill, &_afbbd); _efacd != nil {
					return _efacd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_befgg.GrpFill = NewCT_GroupFillProperties()
				if _begce := d.DecodeElement(_befgg.GrpFill, &_afbbd); _begce != nil {
					return _begce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_befgg.EffectLst = NewCT_EffectList()
				if _cggfb := d.DecodeElement(_befgg.EffectLst, &_afbbd); _cggfb != nil {
					return _cggfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_befgg.EffectDag = NewCT_EffectContainer()
				if _efgbb := d.DecodeElement(_befgg.EffectDag, &_afbbd); _efgbb != nil {
					return _efgbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_befgg.Choice = NewCT_TablePropertiesChoice()
				if _cfgce := d.DecodeElement(&_befgg.Choice.TableStyle, &_afbbd); _cfgce != nil {
					return _cfgce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_befgg.Choice = NewCT_TablePropertiesChoice()
				if _cbcfg := d.DecodeElement(&_befgg.Choice.TableStyleId, &_afbbd); _cbcfg != nil {
					return _cbcfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_befgg.ExtLst = NewCT_OfficeArtExtensionList()
				if _febgg := d.DecodeElement(_befgg.ExtLst, &_afbbd); _febgg != nil {
					return _febgg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _afbbd.Name)
				if _facdc := d.Skip(); _facdc != nil {
					return _facdc
				}
			}
		case _g.EndElement:
			break _cgaab
		case _g.CharData:
		}
	}
	return nil
}

func (_dbebd ST_BevelPresetType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dbebd.String(), start)
}

func (_adeff *ST_TileFlipMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdeefc, _cdage := d.Token()
	if _cdage != nil {
		return _cdage
	}
	if _dafffb, _bebf := _fdeefc.(_g.EndElement); _bebf && _dafffb.Name == start.Name {
		*_adeff = 1
		return nil
	}
	if _eefccb, _ecgcd := _fdeefc.(_g.CharData); !_ecgcd {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdeefc)
	} else {
		switch string(_eefccb) {
		case "":
			*_adeff = 0
		case "\u006e\u006f\u006e\u0065":
			*_adeff = 1
		case "\u0078":
			*_adeff = 2
		case "\u0079":
			*_adeff = 3
		case "\u0078\u0079":
			*_adeff = 4
		}
	}
	_fdeefc, _cdage = d.Token()
	if _cdage != nil {
		return _cdage
	}
	if _gbfc, _dfbgb := _fdeefc.(_g.EndElement); _dfbgb && _gbfc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdeefc)
}

func (_bcdbc *CT_TableBackgroundStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_abcdg:
	for {
		_gagae, _eeddc := d.Token()
		if _eeddc != nil {
			return _eeddc
		}
		switch _degac := _gagae.(type) {
		case _g.StartElement:
			switch _degac.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_bcdbc.Fill = NewCT_FillProperties()
				if _ebae := d.DecodeElement(_bcdbc.Fill, &_degac); _ebae != nil {
					return _ebae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_bcdbc.FillRef = NewCT_StyleMatrixReference()
				if _edacd := d.DecodeElement(_bcdbc.FillRef, &_degac); _edacd != nil {
					return _edacd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_bcdbc.Effect = NewCT_EffectProperties()
				if _fbbfb := d.DecodeElement(_bcdbc.Effect, &_degac); _fbbfb != nil {
					return _fbbfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_bcdbc.EffectRef = NewCT_StyleMatrixReference()
				if _abfcc := d.DecodeElement(_bcdbc.EffectRef, &_degac); _abfcc != nil {
					return _abfcc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0042\u0061\u0063\u006bg\u0072\u006f\u0075\u006e\u0064\u0053t\u0079\u006c\u0065 \u0025\u0076", _degac.Name)
				if _defdb := d.Skip(); _defdb != nil {
					return _defdb
				}
			}
		case _g.EndElement:
			break _abcdg
		case _g.CharData:
		}
	}
	return nil
}

type CT_TableStyleCellStyle struct {
	TcBdr   *CT_TableCellBorderStyle
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
	Cell3D  *CT_Cell3D
}

func NewCT_AnimationDgmBuildProperties() *CT_AnimationDgmBuildProperties {
	_dgf := &CT_AnimationDgmBuildProperties{}
	return _dgf
}

// Validate validates the CT_GeomGuideList and its children
func (_dadbb *CT_GeomGuideList) Validate() error {
	return _dadbb.ValidateWithPath("\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

func (_aafc *CT_ContentPartLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aafc.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoGrpAttr))})
	}
	if _aafc.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoSelectAttr))})
	}
	if _aafc.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoRotAttr))})
	}
	if _aafc.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoChangeAspectAttr))})
	}
	if _aafc.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoMoveAttr))})
	}
	if _aafc.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoResizeAttr))})
	}
	if _aafc.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoEditPointsAttr))})
	}
	if _aafc.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoAdjustHandlesAttr))})
	}
	if _aafc.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoChangeArrowheadsAttr))})
	}
	if _aafc.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_aafc.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _aafc.ExtLst != nil {
		_egea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aafc.ExtLst, _egea)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bgdaa ST_Coordinate32) String() string {
	if _bgdaa.ST_Coordinate32Unqualified != nil {
		return _bb.Sprintf("\u0025\u0076", *_bgdaa.ST_Coordinate32Unqualified)
	}
	if _bgdaa.ST_UniversalMeasure != nil {
		return _bb.Sprintf("\u0025\u0076", *_bgdaa.ST_UniversalMeasure)
	}
	return ""
}

type EG_TextRun struct {
	R   *CT_RegularTextRun
	Br  *CT_TextLineBreak
	Fld *CT_TextField
}

func (_aegcgb ST_TextStrikeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bgfca := _g.Attr{}
	_bgfca.Name = name
	switch _aegcgb {
	case ST_TextStrikeTypeUnset:
		_bgfca.Value = ""
	case ST_TextStrikeTypeNoStrike:
		_bgfca.Value = "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case ST_TextStrikeTypeSngStrike:
		_bgfca.Value = "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case ST_TextStrikeTypeDblStrike:
		_bgfca.Value = "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return _bgfca, nil
}

func (_edbfg *CT_Headers) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cdgg:
	for {
		_cabc, _begaf := d.Token()
		if _begaf != nil {
			return _begaf
		}
		switch _cagef := _cabc.(type) {
		case _g.StartElement:
			switch _cagef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				var _eebag string
				if _gcbd := d.DecodeElement(&_eebag, &_cagef); _gcbd != nil {
					return _gcbd
				}
				_edbfg.Header = append(_edbfg.Header, _eebag)
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fH\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _cagef.Name)
				if _abecd := d.Skip(); _abecd != nil {
					return _abecd
				}
			}
		case _g.EndElement:
			break _cdgg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the EG_FillProperties and its children
func (_cbdac *EG_FillProperties) Validate() error {
	return _cbdac.ValidateWithPath("\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func NewCT_GvmlUseShapeRectangle() *CT_GvmlUseShapeRectangle {
	_agede := &CT_GvmlUseShapeRectangle{}
	return _agede
}

func NewCT_XYAdjustHandle() *CT_XYAdjustHandle {
	_dececd := &CT_XYAdjustHandle{}
	_dececd.Pos = NewCT_AdjPoint2D()
	return _dececd
}

// ValidateWithPath validates the CT_GroupFillProperties and its children, prefixing error messages with path
func (_adgg *CT_GroupFillProperties) ValidateWithPath(path string) error { return nil }

func (_bdebdf ST_TextStrikeType) Validate() error { return _bdebdf.ValidateWithPath("") }

type CT_ReflectionEffect struct {
	BlurRadAttr      *int64
	StAAttr          *ST_PositiveFixedPercentage
	StPosAttr        *ST_PositiveFixedPercentage
	EndAAttr         *ST_PositiveFixedPercentage
	EndPosAttr       *ST_PositiveFixedPercentage
	DistAttr         *int64
	DirAttr          *int32
	FadeDirAttr      *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
}

func NewCT_SchemeColor() *CT_SchemeColor {
	_gbabf := &CT_SchemeColor{}
	_gbabf.ValAttr = ST_SchemeColorVal(1)
	return _gbabf
}

func (_eefcb ST_AnimationChartOnlyBuildType) String() string {
	switch _eefcb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 2:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 4:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

const (
	ST_TextFontAlignTypeUnset ST_TextFontAlignType = 0
	ST_TextFontAlignTypeAuto  ST_TextFontAlignType = 1
	ST_TextFontAlignTypeT     ST_TextFontAlignType = 2
	ST_TextFontAlignTypeCtr   ST_TextFontAlignType = 3
	ST_TextFontAlignTypeBase  ST_TextFontAlignType = 4
	ST_TextFontAlignTypeB     ST_TextFontAlignType = 5
)

func (_cgfaf ST_AnimationDgmOnlyBuildType) String() string {
	switch _cgfaf {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e\u0065"
	case 2:
		return "\u006c\u0076\u006c\u004f\u006e\u0065"
	case 3:
		return "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}

// Validate validates the CT_TableStyleList and its children
func (_gbgbf *CT_TableStyleList) Validate() error {
	return _gbgbf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_EffectStyleItem and its children
func (_egac *CT_EffectStyleItem) Validate() error {
	return _egac.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d")
}

func (_ecabf *CT_FontScheme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ecabf.MajorFont = NewCT_FontCollection()
	_ecabf.MinorFont = NewCT_FontCollection()
	for _, _faded := range start.Attr {
		if _faded.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gfee, _aecca := _faded.Value, error(nil)
			if _aecca != nil {
				return _aecca
			}
			_ecabf.NameAttr = _gfee
			continue
		}
	}
_dafe:
	for {
		_egcc, _aaagga := d.Token()
		if _aaagga != nil {
			return _aaagga
		}
		switch _cegg := _egcc.(type) {
		case _g.StartElement:
			switch _cegg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}:
				if _aaddg := d.DecodeElement(_ecabf.MajorFont, &_cegg); _aaddg != nil {
					return _aaddg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}:
				if _ecada := d.DecodeElement(_ecabf.MinorFont, &_cegg); _ecada != nil {
					return _ecada
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecabf.ExtLst = NewCT_OfficeArtExtensionList()
				if _efdca := d.DecodeElement(_ecabf.ExtLst, &_cegg); _efdca != nil {
					return _efdca
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065 \u0025\u0076", _cegg.Name)
				if _badg := d.Skip(); _badg != nil {
					return _badg
				}
			}
		case _g.EndElement:
			break _dafe
		case _g.CharData:
		}
	}
	return nil
}

type CT_AdjPoint2D struct {
	XAttr ST_AdjCoordinate
	YAttr ST_AdjCoordinate
}

func (_addcce ST_TextFontAlignType) String() string {
	switch _addcce {
	case 0:
		return ""
	case 1:
		return "\u0061\u0075\u0074\u006f"
	case 2:
		return "\u0074"
	case 3:
		return "\u0063\u0074\u0072"
	case 4:
		return "\u0062\u0061\u0073\u0065"
	case 5:
		return "\u0062"
	}
	return ""
}

const (
	ST_TextShapeTypeUnset                     ST_TextShapeType = 0
	ST_TextShapeTypeTextNoShape               ST_TextShapeType = 1
	ST_TextShapeTypeTextPlain                 ST_TextShapeType = 2
	ST_TextShapeTypeTextStop                  ST_TextShapeType = 3
	ST_TextShapeTypeTextTriangle              ST_TextShapeType = 4
	ST_TextShapeTypeTextTriangleInverted      ST_TextShapeType = 5
	ST_TextShapeTypeTextChevron               ST_TextShapeType = 6
	ST_TextShapeTypeTextChevronInverted       ST_TextShapeType = 7
	ST_TextShapeTypeTextRingInside            ST_TextShapeType = 8
	ST_TextShapeTypeTextRingOutside           ST_TextShapeType = 9
	ST_TextShapeTypeTextArchUp                ST_TextShapeType = 10
	ST_TextShapeTypeTextArchDown              ST_TextShapeType = 11
	ST_TextShapeTypeTextCircle                ST_TextShapeType = 12
	ST_TextShapeTypeTextButton                ST_TextShapeType = 13
	ST_TextShapeTypeTextArchUpPour            ST_TextShapeType = 14
	ST_TextShapeTypeTextArchDownPour          ST_TextShapeType = 15
	ST_TextShapeTypeTextCirclePour            ST_TextShapeType = 16
	ST_TextShapeTypeTextButtonPour            ST_TextShapeType = 17
	ST_TextShapeTypeTextCurveUp               ST_TextShapeType = 18
	ST_TextShapeTypeTextCurveDown             ST_TextShapeType = 19
	ST_TextShapeTypeTextCanUp                 ST_TextShapeType = 20
	ST_TextShapeTypeTextCanDown               ST_TextShapeType = 21
	ST_TextShapeTypeTextWave1                 ST_TextShapeType = 22
	ST_TextShapeTypeTextWave2                 ST_TextShapeType = 23
	ST_TextShapeTypeTextDoubleWave1           ST_TextShapeType = 24
	ST_TextShapeTypeTextWave4                 ST_TextShapeType = 25
	ST_TextShapeTypeTextInflate               ST_TextShapeType = 26
	ST_TextShapeTypeTextDeflate               ST_TextShapeType = 27
	ST_TextShapeTypeTextInflateBottom         ST_TextShapeType = 28
	ST_TextShapeTypeTextDeflateBottom         ST_TextShapeType = 29
	ST_TextShapeTypeTextInflateTop            ST_TextShapeType = 30
	ST_TextShapeTypeTextDeflateTop            ST_TextShapeType = 31
	ST_TextShapeTypeTextDeflateInflate        ST_TextShapeType = 32
	ST_TextShapeTypeTextDeflateInflateDeflate ST_TextShapeType = 33
	ST_TextShapeTypeTextFadeRight             ST_TextShapeType = 34
	ST_TextShapeTypeTextFadeLeft              ST_TextShapeType = 35
	ST_TextShapeTypeTextFadeUp                ST_TextShapeType = 36
	ST_TextShapeTypeTextFadeDown              ST_TextShapeType = 37
	ST_TextShapeTypeTextSlantUp               ST_TextShapeType = 38
	ST_TextShapeTypeTextSlantDown             ST_TextShapeType = 39
	ST_TextShapeTypeTextCascadeUp             ST_TextShapeType = 40
	ST_TextShapeTypeTextCascadeDown           ST_TextShapeType = 41
)

func NewCT_OfficeStyleSheet() *CT_OfficeStyleSheet {
	_gfgcf := &CT_OfficeStyleSheet{}
	_gfgcf.ThemeElements = NewCT_BaseStyles()
	return _gfgcf
}

// ValidateWithPath validates the EG_TextRun and its children, prefixing error messages with path
func (_badfac *EG_TextRun) ValidateWithPath(path string) error {
	if _badfac.R != nil {
		if _fgedcf := _badfac.R.ValidateWithPath(path + "\u002f\u0052"); _fgedcf != nil {
			return _fgedcf
		}
	}
	if _badfac.Br != nil {
		if _bggdcf := _badfac.Br.ValidateWithPath(path + "\u002f\u0042\u0072"); _bggdcf != nil {
			return _bggdcf
		}
	}
	if _badfac.Fld != nil {
		if _afbge := _badfac.Fld.ValidateWithPath(path + "\u002f\u0046\u006c\u0064"); _afbge != nil {
			return _afbge
		}
	}
	return nil
}

// Validate validates the CT_LinearShadeProperties and its children
func (_babfb *CT_LinearShadeProperties) Validate() error {
	return _babfb.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TileInfoProperties and its children
func (_aggdb *CT_TileInfoProperties) Validate() error {
	return _aggdb.ValidateWithPath("C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_ffadff *CT_FontScheme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _ffadff.NameAttr)})
	e.EncodeToken(start)
	_fbagg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_ffadff.MajorFont, _fbagg)
	_dfcd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_ffadff.MinorFont, _dfcd)
	if _ffadff.ExtLst != nil {
		_fadaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffadff.ExtLst, _fadaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cfce *CT_GraphicalObjectData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0072\u0069"}, Value: _bb.Sprintf("\u0025\u0076", _cfce.UriAttr)})
	e.EncodeToken(start)
	if _cfce.Any != nil {
		for _, _aaddc := range _cfce.Any {
			_aaddc.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_BevelPresetTypeUnset        ST_BevelPresetType = 0
	ST_BevelPresetTypeRelaxedInset ST_BevelPresetType = 1
	ST_BevelPresetTypeCircle       ST_BevelPresetType = 2
	ST_BevelPresetTypeSlope        ST_BevelPresetType = 3
	ST_BevelPresetTypeCross        ST_BevelPresetType = 4
	ST_BevelPresetTypeAngle        ST_BevelPresetType = 5
	ST_BevelPresetTypeSoftRound    ST_BevelPresetType = 6
	ST_BevelPresetTypeConvex       ST_BevelPresetType = 7
	ST_BevelPresetTypeCoolSlant    ST_BevelPresetType = 8
	ST_BevelPresetTypeDivot        ST_BevelPresetType = 9
	ST_BevelPresetTypeRiblet       ST_BevelPresetType = 10
	ST_BevelPresetTypeHardEdge     ST_BevelPresetType = 11
	ST_BevelPresetTypeArtDeco      ST_BevelPresetType = 12
)

// ValidateWithPath validates the CT_TableStyleTextStyle and its children, prefixing error messages with path
func (_gbfa *CT_TableStyleTextStyle) ValidateWithPath(path string) error {
	if _accfd := _gbfa.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _accfd != nil {
		return _accfd
	}
	if _aagb := _gbfa.IAttr.ValidateWithPath(path + "\u002f\u0049\u0041\u0074\u0074\u0072"); _aagb != nil {
		return _aagb
	}
	if _gbfa.Font != nil {
		if _dfccg := _gbfa.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _dfccg != nil {
			return _dfccg
		}
	}
	if _gbfa.FontRef != nil {
		if _abgaeg := _gbfa.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _abgaeg != nil {
			return _abgaeg
		}
	}
	if _gbfa.ScrgbClr != nil {
		if _eaacd := _gbfa.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _eaacd != nil {
			return _eaacd
		}
	}
	if _gbfa.SrgbClr != nil {
		if _dacb := _gbfa.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _dacb != nil {
			return _dacb
		}
	}
	if _gbfa.HslClr != nil {
		if _dbfea := _gbfa.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dbfea != nil {
			return _dbfea
		}
	}
	if _gbfa.SysClr != nil {
		if _dffac := _gbfa.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dffac != nil {
			return _dffac
		}
	}
	if _gbfa.SchemeClr != nil {
		if _afce := _gbfa.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _afce != nil {
			return _afce
		}
	}
	if _gbfa.PrstClr != nil {
		if _dgccga := _gbfa.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dgccga != nil {
			return _dgccga
		}
	}
	if _gbfa.ExtLst != nil {
		if _ecfce := _gbfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecfce != nil {
			return _ecfce
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableCellBorderStyle and its children, prefixing error messages with path
func (_ceaab *CT_TableCellBorderStyle) ValidateWithPath(path string) error {
	if _ceaab.Left != nil {
		if _edda := _ceaab.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _edda != nil {
			return _edda
		}
	}
	if _ceaab.Right != nil {
		if _gaeee := _ceaab.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _gaeee != nil {
			return _gaeee
		}
	}
	if _ceaab.Top != nil {
		if _agdff := _ceaab.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _agdff != nil {
			return _agdff
		}
	}
	if _ceaab.Bottom != nil {
		if _aabae := _ceaab.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _aabae != nil {
			return _aabae
		}
	}
	if _ceaab.InsideH != nil {
		if _fbaeec := _ceaab.InsideH.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0048"); _fbaeec != nil {
			return _fbaeec
		}
	}
	if _ceaab.InsideV != nil {
		if _cfef := _ceaab.InsideV.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0056"); _cfef != nil {
			return _cfef
		}
	}
	if _ceaab.Tl2br != nil {
		if _deaca := _ceaab.Tl2br.ValidateWithPath(path + "\u002f\u0054\u006c\u0032\u0062\u0072"); _deaca != nil {
			return _deaca
		}
	}
	if _ceaab.Tr2bl != nil {
		if _gcadg := _ceaab.Tr2bl.ValidateWithPath(path + "\u002f\u0054\u0072\u0032\u0062\u006c"); _gcadg != nil {
			return _gcadg
		}
	}
	if _ceaab.ExtLst != nil {
		if _ddgad := _ceaab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddgad != nil {
			return _ddgad
		}
	}
	return nil
}

func NewCT_SphereCoords() *CT_SphereCoords {
	_cdbb := &CT_SphereCoords{}
	_cdbb.LatAttr = 0
	_cdbb.LonAttr = 0
	_cdbb.RevAttr = 0
	return _cdbb
}

type CT_TextTabStopList struct{ Tab []*CT_TextTabStop }

func NewCT_BlurEffect() *CT_BlurEffect { _cdff := &CT_BlurEffect{}; return _cdff }

func _fggdf(_bcbga bool) uint8 {
	if _bcbga {
		return 1
	}
	return 0
}

func (_fgbfc ST_ShapeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_feegf := _g.Attr{}
	_feegf.Name = name
	switch _fgbfc {
	case ST_ShapeTypeUnset:
		_feegf.Value = ""
	case ST_ShapeTypeLine:
		_feegf.Value = "\u006c\u0069\u006e\u0065"
	case ST_ShapeTypeLineInv:
		_feegf.Value = "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case ST_ShapeTypeTriangle:
		_feegf.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRtTriangle:
		_feegf.Value = "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRect:
		_feegf.Value = "\u0072\u0065\u0063\u0074"
	case ST_ShapeTypeDiamond:
		_feegf.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_ShapeTypeParallelogram:
		_feegf.Value = "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case ST_ShapeTypeTrapezoid:
		_feegf.Value = "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case ST_ShapeTypeNonIsoscelesTrapezoid:
		_feegf.Value = "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case ST_ShapeTypePentagon:
		_feegf.Value = "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHexagon:
		_feegf.Value = "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHeptagon:
		_feegf.Value = "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeOctagon:
		_feegf.Value = "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDecagon:
		_feegf.Value = "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDodecagon:
		_feegf.Value = "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case ST_ShapeTypeStar4:
		_feegf.Value = "\u0073\u0074\u0061r\u0034"
	case ST_ShapeTypeStar5:
		_feegf.Value = "\u0073\u0074\u0061r\u0035"
	case ST_ShapeTypeStar6:
		_feegf.Value = "\u0073\u0074\u0061r\u0036"
	case ST_ShapeTypeStar7:
		_feegf.Value = "\u0073\u0074\u0061r\u0037"
	case ST_ShapeTypeStar8:
		_feegf.Value = "\u0073\u0074\u0061r\u0038"
	case ST_ShapeTypeStar10:
		_feegf.Value = "\u0073\u0074\u0061\u0072\u0031\u0030"
	case ST_ShapeTypeStar12:
		_feegf.Value = "\u0073\u0074\u0061\u0072\u0031\u0032"
	case ST_ShapeTypeStar16:
		_feegf.Value = "\u0073\u0074\u0061\u0072\u0031\u0036"
	case ST_ShapeTypeStar24:
		_feegf.Value = "\u0073\u0074\u0061\u0072\u0032\u0034"
	case ST_ShapeTypeStar32:
		_feegf.Value = "\u0073\u0074\u0061\u0072\u0033\u0032"
	case ST_ShapeTypeRoundRect:
		_feegf.Value = "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case ST_ShapeTypeRound1Rect:
		_feegf.Value = "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2SameRect:
		_feegf.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2DiagRect:
		_feegf.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnipRoundRect:
		_feegf.Value = "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip1Rect:
		_feegf.Value = "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case ST_ShapeTypeSnip2SameRect:
		_feegf.Value = "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip2DiagRect:
		_feegf.Value = "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case ST_ShapeTypePlaque:
		_feegf.Value = "\u0070\u006c\u0061\u0071\u0075\u0065"
	case ST_ShapeTypeEllipse:
		_feegf.Value = "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case ST_ShapeTypeTeardrop:
		_feegf.Value = "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case ST_ShapeTypeHomePlate:
		_feegf.Value = "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case ST_ShapeTypeChevron:
		_feegf.Value = "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case ST_ShapeTypePieWedge:
		_feegf.Value = "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case ST_ShapeTypePie:
		_feegf.Value = "\u0070\u0069\u0065"
	case ST_ShapeTypeBlockArc:
		_feegf.Value = "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case ST_ShapeTypeDonut:
		_feegf.Value = "\u0064\u006f\u006eu\u0074"
	case ST_ShapeTypeNoSmoking:
		_feegf.Value = "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case ST_ShapeTypeRightArrow:
		_feegf.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftArrow:
		_feegf.Value = "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUpArrow:
		_feegf.Value = "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeDownArrow:
		_feegf.Value = "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeStripedRightArrow:
		_feegf.Value = "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeNotchedRightArrow:
		_feegf.Value = "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeBentUpArrow:
		_feegf.Value = "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightArrow:
		_feegf.Value = "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeUpDownArrow:
		_feegf.Value = "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftUpArrow:
		_feegf.Value = "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightUpArrow:
		_feegf.Value = "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeQuadArrow:
		_feegf.Value = "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeLeftArrowCallout:
		_feegf.Value = "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeRightArrowCallout:
		_feegf.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpArrowCallout:
		_feegf.Value = "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeDownArrowCallout:
		_feegf.Value = "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeLeftRightArrowCallout:
		_feegf.Value = "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpDownArrowCallout:
		_feegf.Value = "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeQuadArrowCallout:
		_feegf.Value = "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeBentArrow:
		_feegf.Value = "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUturnArrow:
		_feegf.Value = "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCircularArrow:
		_feegf.Value = "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftCircularArrow:
		_feegf.Value = "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightCircularArrow:
		_feegf.Value = "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case ST_ShapeTypeCurvedRightArrow:
		_feegf.Value = "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedLeftArrow:
		_feegf.Value = "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedUpArrow:
		_feegf.Value = "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedDownArrow:
		_feegf.Value = "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeSwooshArrow:
		_feegf.Value = "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCube:
		_feegf.Value = "\u0063\u0075\u0062\u0065"
	case ST_ShapeTypeCan:
		_feegf.Value = "\u0063\u0061\u006e"
	case ST_ShapeTypeLightningBolt:
		_feegf.Value = "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case ST_ShapeTypeHeart:
		_feegf.Value = "\u0068\u0065\u0061r\u0074"
	case ST_ShapeTypeSun:
		_feegf.Value = "\u0073\u0075\u006e"
	case ST_ShapeTypeMoon:
		_feegf.Value = "\u006d\u006f\u006f\u006e"
	case ST_ShapeTypeSmileyFace:
		_feegf.Value = "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case ST_ShapeTypeIrregularSeal1:
		_feegf.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case ST_ShapeTypeIrregularSeal2:
		_feegf.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case ST_ShapeTypeFoldedCorner:
		_feegf.Value = "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeBevel:
		_feegf.Value = "\u0062\u0065\u0076e\u006c"
	case ST_ShapeTypeFrame:
		_feegf.Value = "\u0066\u0072\u0061m\u0065"
	case ST_ShapeTypeHalfFrame:
		_feegf.Value = "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case ST_ShapeTypeCorner:
		_feegf.Value = "\u0063\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeDiagStripe:
		_feegf.Value = "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_ShapeTypeChord:
		_feegf.Value = "\u0063\u0068\u006fr\u0064"
	case ST_ShapeTypeArc:
		_feegf.Value = "\u0061\u0072\u0063"
	case ST_ShapeTypeLeftBracket:
		_feegf.Value = "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeRightBracket:
		_feegf.Value = "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeLeftBrace:
		_feegf.Value = "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case ST_ShapeTypeRightBrace:
		_feegf.Value = "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case ST_ShapeTypeBracketPair:
		_feegf.Value = "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case ST_ShapeTypeBracePair:
		_feegf.Value = "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case ST_ShapeTypeStraightConnector1:
		_feegf.Value = "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case ST_ShapeTypeBentConnector2:
		_feegf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeBentConnector3:
		_feegf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeBentConnector4:
		_feegf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeBentConnector5:
		_feegf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCurvedConnector2:
		_feegf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeCurvedConnector3:
		_feegf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeCurvedConnector4:
		_feegf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeCurvedConnector5:
		_feegf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCallout1:
		_feegf.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeCallout2:
		_feegf.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeCallout3:
		_feegf.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentCallout1:
		_feegf.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeAccentCallout2:
		_feegf.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeAccentCallout3:
		_feegf.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeBorderCallout1:
		_feegf.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeBorderCallout2:
		_feegf.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeBorderCallout3:
		_feegf.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentBorderCallout1:
		_feegf.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case ST_ShapeTypeAccentBorderCallout2:
		_feegf.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case ST_ShapeTypeAccentBorderCallout3:
		_feegf.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case ST_ShapeTypeWedgeRectCallout:
		_feegf.Value = "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeRoundRectCallout:
		_feegf.Value = "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeEllipseCallout:
		_feegf.Value = "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloudCallout:
		_feegf.Value = "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloud:
		_feegf.Value = "\u0063\u006c\u006fu\u0064"
	case ST_ShapeTypeRibbon:
		_feegf.Value = "\u0072\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeRibbon2:
		_feegf.Value = "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeEllipseRibbon:
		_feegf.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeEllipseRibbon2:
		_feegf.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeLeftRightRibbon:
		_feegf.Value = "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeVerticalScroll:
		_feegf.Value = "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeHorizontalScroll:
		_feegf.Value = "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeWave:
		_feegf.Value = "\u0077\u0061\u0076\u0065"
	case ST_ShapeTypeDoubleWave:
		_feegf.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case ST_ShapeTypePlus:
		_feegf.Value = "\u0070\u006c\u0075\u0073"
	case ST_ShapeTypeFlowChartProcess:
		_feegf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartDecision:
		_feegf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartInputOutput:
		_feegf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case ST_ShapeTypeFlowChartPredefinedProcess:
		_feegf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartInternalStorage:
		_feegf.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartDocument:
		_feegf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case ST_ShapeTypeFlowChartMultidocument:
		_feegf.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case ST_ShapeTypeFlowChartTerminator:
		_feegf.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPreparation:
		_feegf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case ST_ShapeTypeFlowChartManualInput:
		_feegf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case ST_ShapeTypeFlowChartManualOperation:
		_feegf.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartConnector:
		_feegf.Value = "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPunchedCard:
		_feegf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case ST_ShapeTypeFlowChartPunchedTape:
		_feegf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case ST_ShapeTypeFlowChartSummingJunction:
		_feegf.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartOr:
		_feegf.Value = "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case ST_ShapeTypeFlowChartCollate:
		_feegf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case ST_ShapeTypeFlowChartSort:
		_feegf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case ST_ShapeTypeFlowChartExtract:
		_feegf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case ST_ShapeTypeFlowChartMerge:
		_feegf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case ST_ShapeTypeFlowChartOfflineStorage:
		_feegf.Value = "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartOnlineStorage:
		_feegf.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case ST_ShapeTypeFlowChartMagneticTape:
		_feegf.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case ST_ShapeTypeFlowChartMagneticDisk:
		_feegf.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case ST_ShapeTypeFlowChartMagneticDrum:
		_feegf.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case ST_ShapeTypeFlowChartDisplay:
		_feegf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartDelay:
		_feegf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartAlternateProcess:
		_feegf.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case ST_ShapeTypeFlowChartOffpageConnector:
		_feegf.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case ST_ShapeTypeActionButtonBlank:
		_feegf.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case ST_ShapeTypeActionButtonHome:
		_feegf.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case ST_ShapeTypeActionButtonHelp:
		_feegf.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case ST_ShapeTypeActionButtonInformation:
		_feegf.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeActionButtonForwardNext:
		_feegf.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case ST_ShapeTypeActionButtonBackPrevious:
		_feegf.Value = "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case ST_ShapeTypeActionButtonEnd:
		_feegf.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case ST_ShapeTypeActionButtonBeginning:
		_feegf.Value = "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case ST_ShapeTypeActionButtonReturn:
		_feegf.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case ST_ShapeTypeActionButtonDocument:
		_feegf.Value = "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case ST_ShapeTypeActionButtonSound:
		_feegf.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case ST_ShapeTypeActionButtonMovie:
		_feegf.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case ST_ShapeTypeGear6:
		_feegf.Value = "\u0067\u0065\u0061r\u0036"
	case ST_ShapeTypeGear9:
		_feegf.Value = "\u0067\u0065\u0061r\u0039"
	case ST_ShapeTypeFunnel:
		_feegf.Value = "\u0066\u0075\u006e\u006e\u0065\u006c"
	case ST_ShapeTypeMathPlus:
		_feegf.Value = "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case ST_ShapeTypeMathMinus:
		_feegf.Value = "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case ST_ShapeTypeMathMultiply:
		_feegf.Value = "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case ST_ShapeTypeMathDivide:
		_feegf.Value = "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case ST_ShapeTypeMathEqual:
		_feegf.Value = "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case ST_ShapeTypeMathNotEqual:
		_feegf.Value = "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ShapeTypeCornerTabs:
		_feegf.Value = "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeSquareTabs:
		_feegf.Value = "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypePlaqueTabs:
		_feegf.Value = "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeChartX:
		_feegf.Value = "\u0063\u0068\u0061\u0072\u0074\u0058"
	case ST_ShapeTypeChartStar:
		_feegf.Value = "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case ST_ShapeTypeChartPlus:
		_feegf.Value = "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return _feegf, nil
}

// Validate validates the CT_GraphicalObjectData and its children
func (_ceaaa *CT_GraphicalObjectData) Validate() error {
	return _ceaaa.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061")
}

func (_dfcceb ST_PitchFamily) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dfcceb.String(), start)
}

func (_ced *CT_AlphaModulateEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ced.Cont = NewCT_EffectContainer()
_ffc:
	for {
		_gcda, _eaa := d.Token()
		if _eaa != nil {
			return _eaa
		}
		switch _fbb := _gcda.(type) {
		case _g.StartElement:
			switch _fbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _fbd := d.DecodeElement(_ced.Cont, &_fbb); _fbd != nil {
					return _fbd
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _fbb.Name)
				if _bdea := d.Skip(); _bdea != nil {
					return _bdea
				}
			}
		case _g.EndElement:
			break _ffc
		case _g.CharData:
		}
	}
	return nil
}

func (_fegbae ST_TextHorzOverflowType) ValidateWithPath(path string) error {
	switch _fegbae {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fegbae))
	}
	return nil
}

// ValidateWithPath validates the CT_BaseStyles and its children, prefixing error messages with path
func (_bba *CT_BaseStyles) ValidateWithPath(path string) error {
	if _baa := _bba.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _baa != nil {
		return _baa
	}
	if _aebf := _bba.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _aebf != nil {
		return _aebf
	}
	if _bgb := _bba.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _bgb != nil {
		return _bgb
	}
	if _bba.ExtLst != nil {
		if _ggac := _bba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggac != nil {
			return _ggac
		}
	}
	return nil
}

const (
	ST_LightRigDirectionUnset ST_LightRigDirection = 0
	ST_LightRigDirectionTl    ST_LightRigDirection = 1
	ST_LightRigDirectionT     ST_LightRigDirection = 2
	ST_LightRigDirectionTr    ST_LightRigDirection = 3
	ST_LightRigDirectionL     ST_LightRigDirection = 4
	ST_LightRigDirectionR     ST_LightRigDirection = 5
	ST_LightRigDirectionBl    ST_LightRigDirection = 6
	ST_LightRigDirectionB     ST_LightRigDirection = 7
	ST_LightRigDirectionBr    ST_LightRigDirection = 8
)

func (_geca *CT_Color) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ecbb:
	for {
		_bceb, _gaffe := d.Token()
		if _gaffe != nil {
			return _gaffe
		}
		switch _ddggb := _bceb.(type) {
		case _g.StartElement:
			switch _ddggb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_geca.ScrgbClr = NewCT_ScRgbColor()
				if _ebgg := d.DecodeElement(_geca.ScrgbClr, &_ddggb); _ebgg != nil {
					return _ebgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_geca.SrgbClr = NewCT_SRgbColor()
				if _eeae := d.DecodeElement(_geca.SrgbClr, &_ddggb); _eeae != nil {
					return _eeae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_geca.HslClr = NewCT_HslColor()
				if _ddgd := d.DecodeElement(_geca.HslClr, &_ddggb); _ddgd != nil {
					return _ddgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_geca.SysClr = NewCT_SystemColor()
				if _aagd := d.DecodeElement(_geca.SysClr, &_ddggb); _aagd != nil {
					return _aagd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_geca.SchemeClr = NewCT_SchemeColor()
				if _bdbe := d.DecodeElement(_geca.SchemeClr, &_ddggb); _bdbe != nil {
					return _bdbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_geca.PrstClr = NewCT_PresetColor()
				if _deaf := d.DecodeElement(_geca.PrstClr, &_ddggb); _deaf != nil {
					return _deaf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _ddggb.Name)
				if _acfd := d.Skip(); _acfd != nil {
					return _acfd
				}
			}
		case _g.EndElement:
			break _ecbb
		case _g.CharData:
		}
	}
	return nil
}

type CT_PresetShadowEffect struct {
	PrstAttr  ST_PresetShadowVal
	DistAttr  *int64
	DirAttr   *int32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// Validate validates the CT_Blip and its children
func (_geea *CT_Blip) Validate() error {
	return _geea.ValidateWithPath("\u0043T\u005f\u0042\u006c\u0069\u0070")
}

// ValidateWithPath validates the CT_TableStyleCellStyle and its children, prefixing error messages with path
func (_cbgcg *CT_TableStyleCellStyle) ValidateWithPath(path string) error {
	if _cbgcg.TcBdr != nil {
		if _fgagd := _cbgcg.TcBdr.ValidateWithPath(path + "\u002f\u0054\u0063\u0042\u0064\u0072"); _fgagd != nil {
			return _fgagd
		}
	}
	if _cbgcg.Fill != nil {
		if _eacgg := _cbgcg.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _eacgg != nil {
			return _eacgg
		}
	}
	if _cbgcg.FillRef != nil {
		if _eabdaf := _cbgcg.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _eabdaf != nil {
			return _eabdaf
		}
	}
	if _cbgcg.Cell3D != nil {
		if _fdacb := _cbgcg.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _fdacb != nil {
			return _fdacb
		}
	}
	return nil
}

const (
	ST_ChartBuildStepUnset        ST_ChartBuildStep = 0
	ST_ChartBuildStepCategory     ST_ChartBuildStep = 1
	ST_ChartBuildStepPtInCategory ST_ChartBuildStep = 2
	ST_ChartBuildStepSeries       ST_ChartBuildStep = 3
	ST_ChartBuildStepPtInSeries   ST_ChartBuildStep = 4
	ST_ChartBuildStepAllPts       ST_ChartBuildStep = 5
	ST_ChartBuildStepGridLegend   ST_ChartBuildStep = 6
)

func (_daga *CT_LineProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _daga.WAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", *_daga.WAttr)})
	}
	if _daga.CapAttr != ST_LineCapUnset {
		_ceedd, _fagga := _daga.CapAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0061\u0070"})
		if _fagga != nil {
			return _fagga
		}
		start.Attr = append(start.Attr, _ceedd)
	}
	if _daga.CmpdAttr != ST_CompoundLineUnset {
		_ggcbb, _eebcba := _daga.CmpdAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u006d\u0070\u0064"})
		if _eebcba != nil {
			return _eebcba
		}
		start.Attr = append(start.Attr, _ggcbb)
	}
	if _daga.AlgnAttr != ST_PenAlignmentUnset {
		_babdb, _aaccc := _daga.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _aaccc != nil {
			return _aaccc
		}
		start.Attr = append(start.Attr, _babdb)
	}
	e.EncodeToken(start)
	if _daga.NoFill != nil {
		_eded := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_daga.NoFill, _eded)
	}
	if _daga.SolidFill != nil {
		_ebdga := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_daga.SolidFill, _ebdga)
	}
	if _daga.GradFill != nil {
		_cedaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_daga.GradFill, _cedaf)
	}
	if _daga.PattFill != nil {
		_dfce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_daga.PattFill, _dfce)
	}
	if _daga.PrstDash != nil {
		_ddfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_daga.PrstDash, _ddfd)
	}
	if _daga.CustDash != nil {
		_cfeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_daga.CustDash, _cfeb)
	}
	if _daga.Round != nil {
		_gcedb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_daga.Round, _gcedb)
	}
	if _daga.Bevel != nil {
		_gaecb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_daga.Bevel, _gaecb)
	}
	if _daga.Miter != nil {
		_dbfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_daga.Miter, _dbfe)
	}
	if _daga.HeadEnd != nil {
		_afdb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0045\u006ed"}}
		e.EncodeElement(_daga.HeadEnd, _afdb)
	}
	if _daga.TailEnd != nil {
		_eead := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0061\u0069\u006c\u0045\u006ed"}}
		e.EncodeElement(_daga.TailEnd, _eead)
	}
	if _daga.ExtLst != nil {
		_gfdfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_daga.ExtLst, _gfdfe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bcafa *CT_GvmlShapeNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bcafa.CNvPr = NewCT_NonVisualDrawingProps()
	_bcafa.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
_dbeaf:
	for {
		_edfg, _beeb := d.Token()
		if _beeb != nil {
			return _beeb
		}
		switch _cegba := _edfg.(type) {
		case _g.StartElement:
			switch _cegba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gadg := d.DecodeElement(_bcafa.CNvPr, &_cegba); _gadg != nil {
					return _gadg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _decec := d.DecodeElement(_bcafa.CNvSpPr, &_cegba); _decec != nil {
					return _decec
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0047\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _cegba.Name)
				if _bfcg := d.Skip(); _bfcg != nil {
					return _bfcg
				}
			}
		case _g.EndElement:
			break _dbeaf
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GvmlGraphicFrameNonVisual() *CT_GvmlGraphicFrameNonVisual {
	_gafg := &CT_GvmlGraphicFrameNonVisual{}
	_gafg.CNvPr = NewCT_NonVisualDrawingProps()
	_gafg.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
	return _gafg
}

func (_abaeg ST_FontCollectionIndex) Validate() error { return _abaeg.ValidateWithPath("") }

func (_aaacc ST_TextAutonumberScheme) ValidateWithPath(path string) error {
	switch _aaacc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaacc))
	}
	return nil
}

type CT_LuminanceEffect struct {
	BrightAttr   *ST_FixedPercentage
	ContrastAttr *ST_FixedPercentage
}

func NewEG_Geometry() *EG_Geometry { _cdbfb := &EG_Geometry{}; return _cdbfb }

type CT_ColorSchemeList struct{ ExtraClrScheme []*CT_ColorSchemeAndMapping }

func (_bdbcab ST_PathShadeType) ValidateWithPath(path string) error {
	switch _bdbcab {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdbcab))
	}
	return nil
}

func (_gdbec *VideoFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdbec.CT_VideoFile = *NewCT_VideoFile()
	for _, _bdbfe := range start.Attr {
		if _bdbfe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bdbfe.Name.Local == "\u006c\u0069\u006e\u006b" || _bdbfe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bdbfe.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ddcdf, _afcfd := _bdbfe.Value, error(nil)
			if _afcfd != nil {
				return _afcfd
			}
			_gdbec.LinkAttr = _ddcdf
			continue
		}
		if _bdbfe.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_edgeg, _bdgfd := _bdbfe.Value, error(nil)
			if _bdgfd != nil {
				return _bdgfd
			}
			_gdbec.ContentTypeAttr = &_edgeg
			continue
		}
	}
_ebgge:
	for {
		_geegc, _gcdcdg := d.Token()
		if _gcdcdg != nil {
			return _gcdcdg
		}
		switch _cgebb := _geegc.(type) {
		case _g.StartElement:
			switch _cgebb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdbec.ExtLst = NewCT_OfficeArtExtensionList()
				if _gcfbb := d.DecodeElement(_gdbec.ExtLst, &_cgebb); _gcfbb != nil {
					return _gcfbb
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0056\u0069\u0064\u0065\u006f\u0046i\u006c\u0065 \u0025\u0076", _cgebb.Name)
				if _dbcd := d.Skip(); _dbcd != nil {
					return _dbcd
				}
			}
		case _g.EndElement:
			break _ebgge
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextParagraphProperties and its children
func (_edcgf *CT_TextParagraphProperties) Validate() error {
	return _edcgf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

func (_gcafc *EG_TextBulletColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gcafc.BuClrTx != nil {
		_bggcc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_gcafc.BuClrTx, _bggcc)
	}
	if _gcafc.BuClr != nil {
		_affec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_gcafc.BuClr, _affec)
	}
	return nil
}

// Validate validates the CT_LightRig and its children
func (_gdfd *CT_LightRig) Validate() error {
	return _gdfd.ValidateWithPath("C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067")
}

type CT_NonVisualConnectorProperties struct {
	CxnSpLocks *CT_ConnectorLocking
	StCxn      *CT_Connection
	EndCxn     *CT_Connection
	ExtLst     *CT_OfficeArtExtensionList
}

func (_bgbcd *CT_GammaTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bdffa *CT_ScRgbColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ebcda := range start.Attr {
		if _ebcda.Name.Local == "\u0072" {
			_gebce, _cfega := ParseUnionST_Percentage(_ebcda.Value)
			if _cfega != nil {
				return _cfega
			}
			_bdffa.RAttr = _gebce
			continue
		}
		if _ebcda.Name.Local == "\u0067" {
			_eedcf, _ffdcdg := ParseUnionST_Percentage(_ebcda.Value)
			if _ffdcdg != nil {
				return _ffdcdg
			}
			_bdffa.GAttr = _eedcf
			continue
		}
		if _ebcda.Name.Local == "\u0062" {
			_cagfb, _fbfeb := ParseUnionST_Percentage(_ebcda.Value)
			if _fbfeb != nil {
				return _fbfeb
			}
			_bdffa.BAttr = _cagfb
			continue
		}
	}
_gfada:
	for {
		_gaabfd, _fggdc := d.Token()
		if _fggdc != nil {
			return _fggdc
		}
		switch _cfga := _gaabfd.(type) {
		case _g.StartElement:
			switch _cfga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_bdcb := NewEG_ColorTransform()
				_bdcb.Tint = NewCT_PositiveFixedPercentage()
				if _fggfd := d.DecodeElement(_bdcb.Tint, &_cfga); _fggfd != nil {
					return _fggfd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _bdcb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_effca := NewEG_ColorTransform()
				_effca.Shade = NewCT_PositiveFixedPercentage()
				if _ddab := d.DecodeElement(_effca.Shade, &_cfga); _ddab != nil {
					return _ddab
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _effca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_gdfab := NewEG_ColorTransform()
				_gdfab.Comp = NewCT_ComplementTransform()
				if _gedbd := d.DecodeElement(_gdfab.Comp, &_cfga); _gedbd != nil {
					return _gedbd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _gdfab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_ddcd := NewEG_ColorTransform()
				_ddcd.Inv = NewCT_InverseTransform()
				if _gfdcc := d.DecodeElement(_ddcd.Inv, &_cfga); _gfdcc != nil {
					return _gfdcc
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _ddcd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_aeeca := NewEG_ColorTransform()
				_aeeca.Gray = NewCT_GrayscaleTransform()
				if _effbg := d.DecodeElement(_aeeca.Gray, &_cfga); _effbg != nil {
					return _effbg
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _aeeca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_bcga := NewEG_ColorTransform()
				_bcga.Alpha = NewCT_PositiveFixedPercentage()
				if _fgddg := d.DecodeElement(_bcga.Alpha, &_cfga); _fgddg != nil {
					return _fgddg
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _bcga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_fdff := NewEG_ColorTransform()
				_fdff.AlphaOff = NewCT_FixedPercentage()
				if _gfaca := d.DecodeElement(_fdff.AlphaOff, &_cfga); _gfaca != nil {
					return _gfaca
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _fdff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_dabga := NewEG_ColorTransform()
				_dabga.AlphaMod = NewCT_PositivePercentage()
				if _ffeggd := d.DecodeElement(_dabga.AlphaMod, &_cfga); _ffeggd != nil {
					return _ffeggd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _dabga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_gggee := NewEG_ColorTransform()
				_gggee.Hue = NewCT_PositiveFixedAngle()
				if _fgab := d.DecodeElement(_gggee.Hue, &_cfga); _fgab != nil {
					return _fgab
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _gggee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_eedd := NewEG_ColorTransform()
				_eedd.HueOff = NewCT_Angle()
				if _eeacd := d.DecodeElement(_eedd.HueOff, &_cfga); _eeacd != nil {
					return _eeacd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _eedd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ddgde := NewEG_ColorTransform()
				_ddgde.HueMod = NewCT_PositivePercentage()
				if _bfbcfb := d.DecodeElement(_ddgde.HueMod, &_cfga); _bfbcfb != nil {
					return _bfbcfb
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _ddgde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_cbedb := NewEG_ColorTransform()
				_cbedb.Sat = NewCT_Percentage()
				if _beaa := d.DecodeElement(_cbedb.Sat, &_cfga); _beaa != nil {
					return _beaa
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _cbedb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_dccab := NewEG_ColorTransform()
				_dccab.SatOff = NewCT_Percentage()
				if _gcedd := d.DecodeElement(_dccab.SatOff, &_cfga); _gcedd != nil {
					return _gcedd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _dccab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_gabac := NewEG_ColorTransform()
				_gabac.SatMod = NewCT_Percentage()
				if _fffca := d.DecodeElement(_gabac.SatMod, &_cfga); _fffca != nil {
					return _fffca
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _gabac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fbfd := NewEG_ColorTransform()
				_fbfd.Lum = NewCT_Percentage()
				if _egbd := d.DecodeElement(_fbfd.Lum, &_cfga); _egbd != nil {
					return _egbd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _fbfd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_bfadg := NewEG_ColorTransform()
				_bfadg.LumOff = NewCT_Percentage()
				if _bbee := d.DecodeElement(_bfadg.LumOff, &_cfga); _bbee != nil {
					return _bbee
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _bfadg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_fffce := NewEG_ColorTransform()
				_fffce.LumMod = NewCT_Percentage()
				if _dddfa := d.DecodeElement(_fffce.LumMod, &_cfga); _dddfa != nil {
					return _dddfa
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _fffce)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_faaaa := NewEG_ColorTransform()
				_faaaa.Red = NewCT_Percentage()
				if _cefc := d.DecodeElement(_faaaa.Red, &_cfga); _cefc != nil {
					return _cefc
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _faaaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_bdbfg := NewEG_ColorTransform()
				_bdbfg.RedOff = NewCT_Percentage()
				if _fbgbb := d.DecodeElement(_bdbfg.RedOff, &_cfga); _fbgbb != nil {
					return _fbgbb
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _bdbfg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_dcdaa := NewEG_ColorTransform()
				_dcdaa.RedMod = NewCT_Percentage()
				if _dcaeb := d.DecodeElement(_dcdaa.RedMod, &_cfga); _dcaeb != nil {
					return _dcaeb
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _dcdaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_ggfbe := NewEG_ColorTransform()
				_ggfbe.Green = NewCT_Percentage()
				if _cafbd := d.DecodeElement(_ggfbe.Green, &_cfga); _cafbd != nil {
					return _cafbd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _ggfbe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gefb := NewEG_ColorTransform()
				_gefb.GreenOff = NewCT_Percentage()
				if _feeff := d.DecodeElement(_gefb.GreenOff, &_cfga); _feeff != nil {
					return _feeff
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _gefb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fdaged := NewEG_ColorTransform()
				_fdaged.GreenMod = NewCT_Percentage()
				if _agfec := d.DecodeElement(_fdaged.GreenMod, &_cfga); _agfec != nil {
					return _agfec
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _fdaged)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_aefgc := NewEG_ColorTransform()
				_aefgc.Blue = NewCT_Percentage()
				if _begaed := d.DecodeElement(_aefgc.Blue, &_cfga); _begaed != nil {
					return _begaed
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _aefgc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_afcaa := NewEG_ColorTransform()
				_afcaa.BlueOff = NewCT_Percentage()
				if _cfffb := d.DecodeElement(_afcaa.BlueOff, &_cfga); _cfffb != nil {
					return _cfffb
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _afcaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_becef := NewEG_ColorTransform()
				_becef.BlueMod = NewCT_Percentage()
				if _efdbd := d.DecodeElement(_becef.BlueMod, &_cfga); _efdbd != nil {
					return _efdbd
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _becef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_aadee := NewEG_ColorTransform()
				_aadee.Gamma = NewCT_GammaTransform()
				if _cfbed := d.DecodeElement(_aadee.Gamma, &_cfga); _cfbed != nil {
					return _cfbed
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _aadee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_afba := NewEG_ColorTransform()
				_afba.InvGamma = NewCT_InverseGammaTransform()
				if _gdcgde := d.DecodeElement(_afba.InvGamma, &_cfga); _gdcgde != nil {
					return _gdcgde
				}
				_bdffa.EG_ColorTransform = append(_bdffa.EG_ColorTransform, _afba)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053c\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072 \u0025\u0076", _cfga.Name)
				if _gdgff := d.Skip(); _gdgff != nil {
					return _gdgff
				}
			}
		case _g.EndElement:
			break _gfada
		case _g.CharData:
		}
	}
	return nil
}

func (_cfeef *CT_TableStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073t\u0079\u006c\u0065\u0049\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _cfeef.StyleIdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de"}, Value: _bb.Sprintf("\u0025\u0076", _cfeef.StyleNameAttr)})
	e.EncodeToken(start)
	if _cfeef.TblBg != nil {
		_abbdc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0062\u006c\u0042\u0067"}}
		e.EncodeElement(_cfeef.TblBg, _abbdc)
	}
	if _cfeef.WholeTbl != nil {
		_dcbae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}}
		e.EncodeElement(_cfeef.WholeTbl, _dcbae)
	}
	if _cfeef.Band1H != nil {
		_gafec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0048"}}
		e.EncodeElement(_cfeef.Band1H, _gafec)
	}
	if _cfeef.Band2H != nil {
		_eebbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0048"}}
		e.EncodeElement(_cfeef.Band2H, _eebbg)
	}
	if _cfeef.Band1V != nil {
		_cagec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0056"}}
		e.EncodeElement(_cfeef.Band1V, _cagec)
	}
	if _cfeef.Band2V != nil {
		_fdffbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0056"}}
		e.EncodeElement(_cfeef.Band2V, _fdffbe)
	}
	if _cfeef.LastCol != nil {
		_eafc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0043\u006fl"}}
		e.EncodeElement(_cfeef.LastCol, _eafc)
	}
	if _cfeef.FirstCol != nil {
		_dgdef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}}
		e.EncodeElement(_cfeef.FirstCol, _dgdef)
	}
	if _cfeef.LastRow != nil {
		_agafee := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0052\u006fw"}}
		e.EncodeElement(_cfeef.LastRow, _agafee)
	}
	if _cfeef.SeCell != nil {
		_cfeaabc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_cfeef.SeCell, _cfeaabc)
	}
	if _cfeef.SwCell != nil {
		_afcbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_cfeef.SwCell, _afcbc)
	}
	if _cfeef.FirstRow != nil {
		_faag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}}
		e.EncodeElement(_cfeef.FirstRow, _faag)
	}
	if _cfeef.NeCell != nil {
		_fbeeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_cfeef.NeCell, _fbeeb)
	}
	if _cfeef.NwCell != nil {
		_dedgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_cfeef.NwCell, _dedgd)
	}
	if _cfeef.ExtLst != nil {
		_fadg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfeef.ExtLst, _fadg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_AnimationBuildType byte

// ValidateWithPath validates the CT_AlphaOutsetEffect and its children, prefixing error messages with path
func (_edc *CT_AlphaOutsetEffect) ValidateWithPath(path string) error {
	if _edc.RadAttr != nil {
		if _ggbb := _edc.RadAttr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0041\u0074\u0074\u0072"); _ggbb != nil {
			return _ggbb
		}
	}
	return nil
}

func (_abfc *CT_SupplementalFont) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0063\u0072\u0069\u0070\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _abfc.ScriptAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _abfc.TypefaceAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbdc *CT_BlurEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ceed := range start.Attr {
		if _ceed.Name.Local == "\u0072\u0061\u0064" {
			_bcgbg, _fgca := _fg.ParseInt(_ceed.Value, 10, 64)
			if _fgca != nil {
				return _fgca
			}
			_dbdc.RadAttr = &_bcgbg
			continue
		}
		if _ceed.Name.Local == "\u0067\u0072\u006f\u0077" {
			_efb, _cdad := _fg.ParseBool(_ceed.Value)
			if _cdad != nil {
				return _cdad
			}
			_dbdc.GrowAttr = &_efb
			continue
		}
	}
	for {
		_edgef, _fbcf := d.Token()
		if _fbcf != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0042l\u0075r\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _fbcf)
		}
		if _cbcg, _fcbf := _edgef.(_g.EndElement); _fcbf && _cbcg.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_LineEndWidth byte

// ValidateWithPath validates the CT_AudioCD and its children, prefixing error messages with path
func (_caf *CT_AudioCD) ValidateWithPath(path string) error {
	if _gbc := _caf.St.ValidateWithPath(path + "\u002f\u0053\u0074"); _gbc != nil {
		return _gbc
	}
	if _gefg := _caf.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _gefg != nil {
		return _gefg
	}
	if _caf.ExtLst != nil {
		if _gcfd := _caf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcfd != nil {
			return _gcfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GrayscaleTransform and its children, prefixing error messages with path
func (_cdge *CT_GrayscaleTransform) ValidateWithPath(path string) error { return nil }

type CT_GraphicalObjectData struct {
	UriAttr string
	Any     []_fc.Any
}

func (_ebgd ST_ColorSchemeIndex) Validate() error { return _ebgd.ValidateWithPath("") }

func (_fefffb *ST_TextUnderlineType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggdag, _aefcd := d.Token()
	if _aefcd != nil {
		return _aefcd
	}
	if _bdgbfa, _bfbec := _ggdag.(_g.EndElement); _bfbec && _bdgbfa.Name == start.Name {
		*_fefffb = 1
		return nil
	}
	if _aeagbc, _eccgg := _ggdag.(_g.CharData); !_eccgg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggdag)
	} else {
		switch string(_aeagbc) {
		case "":
			*_fefffb = 0
		case "\u006e\u006f\u006e\u0065":
			*_fefffb = 1
		case "\u0077\u006f\u0072d\u0073":
			*_fefffb = 2
		case "\u0073\u006e\u0067":
			*_fefffb = 3
		case "\u0064\u0062\u006c":
			*_fefffb = 4
		case "\u0068\u0065\u0061v\u0079":
			*_fefffb = 5
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_fefffb = 6
		case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
			*_fefffb = 7
		case "\u0064\u0061\u0073\u0068":
			*_fefffb = 8
		case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
			*_fefffb = 9
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
			*_fefffb = 10
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
			*_fefffb = 11
		case "\u0064o\u0074\u0044\u0061\u0073\u0068":
			*_fefffb = 12
		case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_fefffb = 13
		case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
			*_fefffb = 14
		case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_fefffb = 15
		case "\u0077\u0061\u0076\u0079":
			*_fefffb = 16
		case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
			*_fefffb = 17
		case "\u0077a\u0076\u0079\u0044\u0062\u006c":
			*_fefffb = 18
		}
	}
	_ggdag, _aefcd = d.Token()
	if _aefcd != nil {
		return _aefcd
	}
	if _dfgdd, _cbcda := _ggdag.(_g.EndElement); _cbcda && _dfgdd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggdag)
}

// ValidateWithPath validates the CT_TextAutonumberBullet and its children, prefixing error messages with path
func (_cceef *CT_TextAutonumberBullet) ValidateWithPath(path string) error {
	if _cceef.TypeAttr == ST_TextAutonumberSchemeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dfedc := _cceef.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dfedc != nil {
		return _dfedc
	}
	if _cceef.StartAtAttr != nil {
		if *_cceef.StartAtAttr < 1 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074\u0061\u0072\u0074\u0041\u0074\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cceef.StartAtAttr)
		}
		if *_cceef.StartAtAttr > 32767 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074a\u0072\u0074\u0041t\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0033\u0032\u0037\u0036\u0037\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cceef.StartAtAttr)
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ScRgbColor and its children, prefixing error messages with path
func (_fbec *CT_ScRgbColor) ValidateWithPath(path string) error {
	if _bgfg := _fbec.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _bgfg != nil {
		return _bgfg
	}
	if _cgcdg := _fbec.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _cgcdg != nil {
		return _cgcdg
	}
	if _gfgdf := _fbec.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _gfgdf != nil {
		return _gfgdf
	}
	for _ddcdg, _gfde := range _fbec.EG_ColorTransform {
		if _cefca := _gfde.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _ddcdg)); _cefca != nil {
			return _cefca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DashStop and its children, prefixing error messages with path
func (_acff *CT_DashStop) ValidateWithPath(path string) error {
	if _cdaa := _acff.DAttr.ValidateWithPath(path + "\u002f\u0044\u0041\u0074\u0074\u0072"); _cdaa != nil {
		return _cdaa
	}
	if _cacb := _acff.SpAttr.ValidateWithPath(path + "\u002fS\u0070\u0041\u0074\u0074\u0072"); _cacb != nil {
		return _cacb
	}
	return nil
}

func NewCT_Shape3D() *CT_Shape3D { _fcbc := &CT_Shape3D{}; return _fcbc }

type CT_TableStyleList struct {
	DefAttr  string
	TblStyle []*CT_TableStyle
}

func (_dacg *CT_NonVisualConnectorProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dacg.CxnSpLocks != nil {
		_eegbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063x\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_dacg.CxnSpLocks, _eegbc)
	}
	if _dacg.StCxn != nil {
		_adbef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0043\u0078\u006e"}}
		e.EncodeElement(_dacg.StCxn, _adbef)
	}
	if _dacg.EndCxn != nil {
		_ceacb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u006e\u0064\u0043\u0078\u006e"}}
		e.EncodeElement(_dacg.EndCxn, _ceacb)
	}
	if _dacg.ExtLst != nil {
		_egeef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dacg.ExtLst, _egeef)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cgfba *CT_TintEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afgaa := range start.Attr {
		if _afgaa.Name.Local == "\u0068\u0075\u0065" {
			_dgca, _ebage := _fg.ParseInt(_afgaa.Value, 10, 32)
			if _ebage != nil {
				return _ebage
			}
			_dcacd := int32(_dgca)
			_cgfba.HueAttr = &_dcacd
			continue
		}
		if _afgaa.Name.Local == "\u0061\u006d\u0074" {
			_gdbdb, _adfgf := ParseUnionST_FixedPercentage(_afgaa.Value)
			if _adfgf != nil {
				return _adfgf
			}
			_cgfba.AmtAttr = &_gdbdb
			continue
		}
	}
	for {
		_debag, _cadab := d.Token()
		if _cadab != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054i\u006et\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _cadab)
		}
		if _gfgdb, _egfea := _debag.(_g.EndElement); _egfea && _gfgdb.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_PathShadeType byte

// Validate validates the CT_TextShapeAutofit and its children
func (_cfcdf *CT_TextShapeAutofit) Validate() error {
	return _cfcdf.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}

type CT_TableCell struct {
	RowSpanAttr  *int32
	GridSpanAttr *int32
	HMergeAttr   *bool
	VMergeAttr   *bool
	IdAttr       *string
	TxBody       *CT_TextBody
	TcPr         *CT_TableCellProperties
	ExtLst       *CT_OfficeArtExtensionList
}

func (_ccfff *CT_TextCharBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0068\u0061\u0072"}, Value: _bb.Sprintf("\u0025\u0076", _ccfff.CharAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gdab *CT_ContentPartLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bdfb := range start.Attr {
		if _bdfb.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_dabf, _bagda := _fg.ParseBool(_bdfb.Value)
			if _bagda != nil {
				return _bagda
			}
			_gdab.NoGrpAttr = &_dabf
			continue
		}
		if _bdfb.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_bbgfc, _adcf := _fg.ParseBool(_bdfb.Value)
			if _adcf != nil {
				return _adcf
			}
			_gdab.NoSelectAttr = &_bbgfc
			continue
		}
		if _bdfb.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_cdafc, _ceg := _fg.ParseBool(_bdfb.Value)
			if _ceg != nil {
				return _ceg
			}
			_gdab.NoRotAttr = &_cdafc
			continue
		}
		if _bdfb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_acfa, _dfbb := _fg.ParseBool(_bdfb.Value)
			if _dfbb != nil {
				return _dfbb
			}
			_gdab.NoChangeAspectAttr = &_acfa
			continue
		}
		if _bdfb.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_badb, _fgead := _fg.ParseBool(_bdfb.Value)
			if _fgead != nil {
				return _fgead
			}
			_gdab.NoMoveAttr = &_badb
			continue
		}
		if _bdfb.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_faff, _adbg := _fg.ParseBool(_bdfb.Value)
			if _adbg != nil {
				return _adbg
			}
			_gdab.NoResizeAttr = &_faff
			continue
		}
		if _bdfb.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_dgbfc, _gfadb := _fg.ParseBool(_bdfb.Value)
			if _gfadb != nil {
				return _gfadb
			}
			_gdab.NoEditPointsAttr = &_dgbfc
			continue
		}
		if _bdfb.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_gdad, _bcfg := _fg.ParseBool(_bdfb.Value)
			if _bcfg != nil {
				return _bcfg
			}
			_gdab.NoAdjustHandlesAttr = &_gdad
			continue
		}
		if _bdfb.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_gded, _ddgbg := _fg.ParseBool(_bdfb.Value)
			if _ddgbg != nil {
				return _ddgbg
			}
			_gdab.NoChangeArrowheadsAttr = &_gded
			continue
		}
		if _bdfb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_cdbab, _acbdf := _fg.ParseBool(_bdfb.Value)
			if _acbdf != nil {
				return _acbdf
			}
			_gdab.NoChangeShapeTypeAttr = &_cdbab
			continue
		}
	}
_adbbd:
	for {
		_eaaead, _faed := d.Token()
		if _faed != nil {
			return _faed
		}
		switch _aecaa := _eaaead.(type) {
		case _g.StartElement:
			switch _aecaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdab.ExtLst = NewCT_OfficeArtExtensionList()
				if _adae := d.DecodeElement(_gdab.ExtLst, &_aecaa); _adae != nil {
					return _adae
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _aecaa.Name)
				if _eaeg := d.Skip(); _eaeg != nil {
					return _eaeg
				}
			}
		case _g.EndElement:
			break _adbbd
		case _g.CharData:
		}
	}
	return nil
}

func (_faeg *CT_SolidColorFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agbee:
	for {
		_eagbd, _cegdb := d.Token()
		if _cegdb != nil {
			return _cegdb
		}
		switch _ggdgg := _eagbd.(type) {
		case _g.StartElement:
			switch _ggdgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_faeg.ScrgbClr = NewCT_ScRgbColor()
				if _abagg := d.DecodeElement(_faeg.ScrgbClr, &_ggdgg); _abagg != nil {
					return _abagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_faeg.SrgbClr = NewCT_SRgbColor()
				if _aadgg := d.DecodeElement(_faeg.SrgbClr, &_ggdgg); _aadgg != nil {
					return _aadgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_faeg.HslClr = NewCT_HslColor()
				if _gddb := d.DecodeElement(_faeg.HslClr, &_ggdgg); _gddb != nil {
					return _gddb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_faeg.SysClr = NewCT_SystemColor()
				if _aabef := d.DecodeElement(_faeg.SysClr, &_ggdgg); _aabef != nil {
					return _aabef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_faeg.SchemeClr = NewCT_SchemeColor()
				if _bcfef := d.DecodeElement(_faeg.SchemeClr, &_ggdgg); _bcfef != nil {
					return _bcfef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_faeg.PrstClr = NewCT_PresetColor()
				if _cfgcg := d.DecodeElement(_faeg.PrstClr, &_ggdgg); _cfgcg != nil {
					return _cfgcg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0053\u006f\u006c\u0069\u0064\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ggdgg.Name)
				if _gcfdd := d.Skip(); _gcfdd != nil {
					return _gcfdd
				}
			}
		case _g.EndElement:
			break _agbee
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextBulletSizePoint and its children
func (_cggge *CT_TextBulletSizePoint) Validate() error {
	return _cggge.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074")
}

func (_eagcf *EG_Media) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eagcf.AudioCd != nil {
		_ccfbc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_eagcf.AudioCd, _ccfbc)
	}
	if _eagcf.WavAudioFile != nil {
		_cfgaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_eagcf.WavAudioFile, _cfgaa)
	}
	if _eagcf.AudioFile != nil {
		_daabag := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_eagcf.AudioFile, _daabag)
	}
	if _eagcf.VideoFile != nil {
		_daedd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_eagcf.VideoFile, _daedd)
	}
	if _eagcf.QuickTimeFile != nil {
		_agabc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_eagcf.QuickTimeFile, _agabc)
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlUseShapeRectangle and its children, prefixing error messages with path
func (_dada *CT_GvmlUseShapeRectangle) ValidateWithPath(path string) error { return nil }

func (_bgce *ST_TextAutonumberScheme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bbcdg, _aegag := d.Token()
	if _aegag != nil {
		return _aegag
	}
	if _baafb, _cbcbb := _bbcdg.(_g.EndElement); _cbcbb && _baafb.Name == start.Name {
		*_bgce = 1
		return nil
	}
	if _bbgbe, _egcag := _bbcdg.(_g.CharData); !_egcag {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbcdg)
	} else {
		switch string(_bbgbe) {
		case "":
			*_bgce = 0
		case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_bgce = 1
		case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_bgce = 2
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_bgce = 3
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_bgce = 4
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 5
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 6
		case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_bgce = 7
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_bgce = 8
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 9
		case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
			*_bgce = 10
		case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_bgce = 11
		case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_bgce = 12
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_bgce = 13
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_bgce = 14
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 15
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 16
		case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_bgce = 17
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
			*_bgce = 18
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
			*_bgce = 19
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_bgce = 20
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_bgce = 21
		case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 22
		case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
			*_bgce = 23
		case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 24
		case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
			*_bgce = 25
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_bgce = 26
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
			*_bgce = 27
		case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 28
		case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
			*_bgce = 29
		case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
			*_bgce = 30
		case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
			*_bgce = 31
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 32
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
			*_bgce = 33
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
			*_bgce = 34
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 35
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
			*_bgce = 36
		case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_bgce = 37
		case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bgce = 38
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
			*_bgce = 39
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
			*_bgce = 40
		case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
			*_bgce = 41
		}
	}
	_bbcdg, _aegag = d.Token()
	if _aegag != nil {
		return _aegag
	}
	if _defe, _aecgab := _bbcdg.(_g.EndElement); _aecgab && _defe.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbcdg)
}

func (_fcab *CT_GeomRect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _fcab.LAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _fcab.TAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072"}, Value: _bb.Sprintf("\u0025\u0076", _fcab.RAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0076", _fcab.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_geb *CT_BackgroundFillStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	for _, _gcbb := range _geb.EG_FillProperties {
		_gcbb.MarshalXML(e, _g.StartElement{})
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QuickTimeFile and its children
func (_dgfee *CT_QuickTimeFile) Validate() error {
	return _dgfee.ValidateWithPath("\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065")
}

func (_caafb *CT_ColorMapping) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_egdg, _cgaa := _caafb.Bg1Attr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0067\u0031"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Tx1Attr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0078\u0031"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Bg2Attr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0067\u0032"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Tx2Attr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0078\u0032"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Accent1Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Accent2Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Accent3Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Accent4Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Accent5Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.Accent6Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.HlinkAttr.MarshalXMLAttr(_g.Name{Local: "\u0068\u006c\u0069n\u006b"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	_egdg, _cgaa = _caafb.FolHlinkAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"})
	if _cgaa != nil {
		return _cgaa
	}
	start.Attr = append(start.Attr, _egdg)
	e.EncodeToken(start)
	if _caafb.ExtLst != nil {
		_aage := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_caafb.ExtLst, _aage)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aedad *CT_SchemeColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aedad.ValAttr = ST_SchemeColorVal(1)
	for _, _cegfb := range start.Attr {
		if _cegfb.Name.Local == "\u0076\u0061\u006c" {
			_aedad.ValAttr.UnmarshalXMLAttr(_cegfb)
			continue
		}
	}
_defff:
	for {
		_abbaf, _agbg := d.Token()
		if _agbg != nil {
			return _agbg
		}
		switch _agba := _abbaf.(type) {
		case _g.StartElement:
			switch _agba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_acabc := NewEG_ColorTransform()
				_acabc.Tint = NewCT_PositiveFixedPercentage()
				if _cgcge := d.DecodeElement(_acabc.Tint, &_agba); _cgcge != nil {
					return _cgcge
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _acabc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_cgcgf := NewEG_ColorTransform()
				_cgcgf.Shade = NewCT_PositiveFixedPercentage()
				if _ceabd := d.DecodeElement(_cgcgf.Shade, &_agba); _ceabd != nil {
					return _ceabd
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _cgcgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_bgfdg := NewEG_ColorTransform()
				_bgfdg.Comp = NewCT_ComplementTransform()
				if _cgccb := d.DecodeElement(_bgfdg.Comp, &_agba); _cgccb != nil {
					return _cgccb
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _bgfdg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_dggcf := NewEG_ColorTransform()
				_dggcf.Inv = NewCT_InverseTransform()
				if _dddfc := d.DecodeElement(_dggcf.Inv, &_agba); _dddfc != nil {
					return _dddfc
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _dggcf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_gbgee := NewEG_ColorTransform()
				_gbgee.Gray = NewCT_GrayscaleTransform()
				if _cdgfd := d.DecodeElement(_gbgee.Gray, &_agba); _cdgfd != nil {
					return _cdgfd
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _gbgee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_faaff := NewEG_ColorTransform()
				_faaff.Alpha = NewCT_PositiveFixedPercentage()
				if _agcf := d.DecodeElement(_faaff.Alpha, &_agba); _agcf != nil {
					return _agcf
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _faaff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_gggaa := NewEG_ColorTransform()
				_gggaa.AlphaOff = NewCT_FixedPercentage()
				if _cccac := d.DecodeElement(_gggaa.AlphaOff, &_agba); _cccac != nil {
					return _cccac
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _gggaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_baage := NewEG_ColorTransform()
				_baage.AlphaMod = NewCT_PositivePercentage()
				if _cffbe := d.DecodeElement(_baage.AlphaMod, &_agba); _cffbe != nil {
					return _cffbe
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _baage)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_acgff := NewEG_ColorTransform()
				_acgff.Hue = NewCT_PositiveFixedAngle()
				if _gebaa := d.DecodeElement(_acgff.Hue, &_agba); _gebaa != nil {
					return _gebaa
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _acgff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_cgdafc := NewEG_ColorTransform()
				_cgdafc.HueOff = NewCT_Angle()
				if _ceag := d.DecodeElement(_cgdafc.HueOff, &_agba); _ceag != nil {
					return _ceag
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _cgdafc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_abbca := NewEG_ColorTransform()
				_abbca.HueMod = NewCT_PositivePercentage()
				if _dgdd := d.DecodeElement(_abbca.HueMod, &_agba); _dgdd != nil {
					return _dgdd
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _abbca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_bcgda := NewEG_ColorTransform()
				_bcgda.Sat = NewCT_Percentage()
				if _egbfg := d.DecodeElement(_bcgda.Sat, &_agba); _egbfg != nil {
					return _egbfg
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _bcgda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_gdggg := NewEG_ColorTransform()
				_gdggg.SatOff = NewCT_Percentage()
				if _ccafff := d.DecodeElement(_gdggg.SatOff, &_agba); _ccafff != nil {
					return _ccafff
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _gdggg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_dfgc := NewEG_ColorTransform()
				_dfgc.SatMod = NewCT_Percentage()
				if _afbaf := d.DecodeElement(_dfgc.SatMod, &_agba); _afbaf != nil {
					return _afbaf
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _dfgc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_abcdeb := NewEG_ColorTransform()
				_abcdeb.Lum = NewCT_Percentage()
				if _gfdfbd := d.DecodeElement(_abcdeb.Lum, &_agba); _gfdfbd != nil {
					return _gfdfbd
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _abcdeb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_ddaad := NewEG_ColorTransform()
				_ddaad.LumOff = NewCT_Percentage()
				if _cddcg := d.DecodeElement(_ddaad.LumOff, &_agba); _cddcg != nil {
					return _cddcg
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _ddaad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_baae := NewEG_ColorTransform()
				_baae.LumMod = NewCT_Percentage()
				if _fggfb := d.DecodeElement(_baae.LumMod, &_agba); _fggfb != nil {
					return _fggfb
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _baae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bdcag := NewEG_ColorTransform()
				_bdcag.Red = NewCT_Percentage()
				if _ffage := d.DecodeElement(_bdcag.Red, &_agba); _ffage != nil {
					return _ffage
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _bdcag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_bbffc := NewEG_ColorTransform()
				_bbffc.RedOff = NewCT_Percentage()
				if _abdd := d.DecodeElement(_bbffc.RedOff, &_agba); _abdd != nil {
					return _abdd
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _bbffc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_bbfb := NewEG_ColorTransform()
				_bbfb.RedMod = NewCT_Percentage()
				if _fggc := d.DecodeElement(_bbfb.RedMod, &_agba); _fggc != nil {
					return _fggc
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _bbfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_ggbfa := NewEG_ColorTransform()
				_ggbfa.Green = NewCT_Percentage()
				if _bedda := d.DecodeElement(_ggbfa.Green, &_agba); _bedda != nil {
					return _bedda
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _ggbfa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_deec := NewEG_ColorTransform()
				_deec.GreenOff = NewCT_Percentage()
				if _abdeg := d.DecodeElement(_deec.GreenOff, &_agba); _abdeg != nil {
					return _abdeg
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _deec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_bdeab := NewEG_ColorTransform()
				_bdeab.GreenMod = NewCT_Percentage()
				if _caedd := d.DecodeElement(_bdeab.GreenMod, &_agba); _caedd != nil {
					return _caedd
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _bdeab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_ccgee := NewEG_ColorTransform()
				_ccgee.Blue = NewCT_Percentage()
				if _ceafg := d.DecodeElement(_ccgee.Blue, &_agba); _ceafg != nil {
					return _ceafg
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _ccgee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_egggc := NewEG_ColorTransform()
				_egggc.BlueOff = NewCT_Percentage()
				if _afbgab := d.DecodeElement(_egggc.BlueOff, &_agba); _afbgab != nil {
					return _afbgab
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _egggc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_dgaeeb := NewEG_ColorTransform()
				_dgaeeb.BlueMod = NewCT_Percentage()
				if _eegae := d.DecodeElement(_dgaeeb.BlueMod, &_agba); _eegae != nil {
					return _eegae
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _dgaeeb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_ccbab := NewEG_ColorTransform()
				_ccbab.Gamma = NewCT_GammaTransform()
				if _fffae := d.DecodeElement(_ccbab.Gamma, &_agba); _fffae != nil {
					return _fffae
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _ccbab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_efdgf := NewEG_ColorTransform()
				_efdgf.InvGamma = NewCT_InverseGammaTransform()
				if _ffgbb := d.DecodeElement(_efdgf.InvGamma, &_agba); _ffgbb != nil {
					return _ffgbb
				}
				_aedad.EG_ColorTransform = append(_aedad.EG_ColorTransform, _efdgf)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065\u0043o\u006co\u0072\u0020\u0025\u0076", _agba.Name)
				if _fdfab := d.Skip(); _fdfab != nil {
					return _fdfab
				}
			}
		case _g.EndElement:
			break _defff
		case _g.CharData:
		}
	}
	return nil
}

func (_ecbd *CT_EmptyElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_cbfec, _cegb := d.Token()
		if _cegb != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079\u0045l\u0065\u006d\u0065n\u0074:\u0020\u0025\u0073", _cegb)
		}
		if _dgbffag, _bebd := _cbfec.(_g.EndElement); _bebd && _dgbffag.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LineJoinRound struct{}

func (_gaacf ST_TextUnderlineType) ValidateWithPath(path string) error {
	switch _gaacf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaacf))
	}
	return nil
}

func NewCT_NonVisualGraphicFrameProperties() *CT_NonVisualGraphicFrameProperties {
	_ddafg := &CT_NonVisualGraphicFrameProperties{}
	return _ddafg
}

func NewCT_PositivePercentage() *CT_PositivePercentage {
	_dcfb := &CT_PositivePercentage{}
	return _dcfb
}

// ValidateWithPath validates the CT_AnimationChartElement and its children, prefixing error messages with path
func (_efde *CT_AnimationChartElement) ValidateWithPath(path string) error {
	if _efde.BldStepAttr == ST_ChartBuildStepUnset {
		return _bb.Errorf("%\u0073\u002f\u0042\u006c\u0064\u0053t\u0065\u0070\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gae := _efde.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _gae != nil {
		return _gae
	}
	return nil
}

func (_aabe *CT_GeomGuideList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gdcb:
	for {
		_agcab, _ggfe := d.Token()
		if _ggfe != nil {
			return _ggfe
		}
		switch _dgfe := _agcab.(type) {
		case _g.StartElement:
			switch _dgfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}:
				_acaga := NewCT_GeomGuide()
				if _cacec := d.DecodeElement(_acaga, &_dgfe); _cacec != nil {
					return _cacec
				}
				_aabe.Gd = append(_aabe.Gd, _acaga)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _dgfe.Name)
				if _agafe := d.Skip(); _agafe != nil {
					return _agafe
				}
			}
		case _g.EndElement:
			break _gdcb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ObjectStyleDefaults and its children, prefixing error messages with path
func (_fafd *CT_ObjectStyleDefaults) ValidateWithPath(path string) error {
	if _fafd.SpDef != nil {
		if _acbgb := _fafd.SpDef.ValidateWithPath(path + "\u002f\u0053\u0070\u0044\u0065\u0066"); _acbgb != nil {
			return _acbgb
		}
	}
	if _fafd.LnDef != nil {
		if _cgcef := _fafd.LnDef.ValidateWithPath(path + "\u002f\u004c\u006e\u0044\u0065\u0066"); _cgcef != nil {
			return _cgcef
		}
	}
	if _fafd.TxDef != nil {
		if _gdbed := _fafd.TxDef.ValidateWithPath(path + "\u002f\u0054\u0078\u0044\u0065\u0066"); _gdbed != nil {
			return _gdbed
		}
	}
	if _fafd.ExtLst != nil {
		if _bgacg := _fafd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgacg != nil {
			return _bgacg
		}
	}
	return nil
}

type CT_Scale2D struct {
	Sx *CT_Ratio
	Sy *CT_Ratio
}

// ValidateWithPath validates the CT_GvmlGraphicalObjectFrame and its children, prefixing error messages with path
func (_gbaeg *CT_GvmlGraphicalObjectFrame) ValidateWithPath(path string) error {
	if _gdfbd := _gbaeg.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _gdfbd != nil {
		return _gdfbd
	}
	if _cffb := _gbaeg.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _cffb != nil {
		return _cffb
	}
	if _aeee := _gbaeg.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _aeee != nil {
		return _aeee
	}
	if _gbaeg.ExtLst != nil {
		if _gdede := _gbaeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdede != nil {
			return _gdede
		}
	}
	return nil
}

const (
	ST_PresetShadowValUnset  ST_PresetShadowVal = 0
	ST_PresetShadowValShdw1  ST_PresetShadowVal = 1
	ST_PresetShadowValShdw2  ST_PresetShadowVal = 2
	ST_PresetShadowValShdw3  ST_PresetShadowVal = 3
	ST_PresetShadowValShdw4  ST_PresetShadowVal = 4
	ST_PresetShadowValShdw5  ST_PresetShadowVal = 5
	ST_PresetShadowValShdw6  ST_PresetShadowVal = 6
	ST_PresetShadowValShdw7  ST_PresetShadowVal = 7
	ST_PresetShadowValShdw8  ST_PresetShadowVal = 8
	ST_PresetShadowValShdw9  ST_PresetShadowVal = 9
	ST_PresetShadowValShdw10 ST_PresetShadowVal = 10
	ST_PresetShadowValShdw11 ST_PresetShadowVal = 11
	ST_PresetShadowValShdw12 ST_PresetShadowVal = 12
	ST_PresetShadowValShdw13 ST_PresetShadowVal = 13
	ST_PresetShadowValShdw14 ST_PresetShadowVal = 14
	ST_PresetShadowValShdw15 ST_PresetShadowVal = 15
	ST_PresetShadowValShdw16 ST_PresetShadowVal = 16
	ST_PresetShadowValShdw17 ST_PresetShadowVal = 17
	ST_PresetShadowValShdw18 ST_PresetShadowVal = 18
	ST_PresetShadowValShdw19 ST_PresetShadowVal = 19
	ST_PresetShadowValShdw20 ST_PresetShadowVal = 20
)

// Validate validates the CT_ObjectStyleDefaults and its children
func (_efef *CT_ObjectStyleDefaults) Validate() error {
	return _efef.ValidateWithPath("\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073")
}

func (_defde *ST_PresetLineDashVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_defde = 0
	case "\u0073\u006f\u006ci\u0064":
		*_defde = 1
	case "\u0064\u006f\u0074":
		*_defde = 2
	case "\u0064\u0061\u0073\u0068":
		*_defde = 3
	case "\u006c\u0067\u0044\u0061\u0073\u0068":
		*_defde = 4
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_defde = 5
	case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
		*_defde = 6
	case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_defde = 7
	case "\u0073y\u0073\u0044\u0061\u0073\u0068":
		*_defde = 8
	case "\u0073\u0079\u0073\u0044\u006f\u0074":
		*_defde = 9
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_defde = 10
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_defde = 11
	}
	return nil
}

// Validate validates the EG_Geometry and its children
func (_cdfgb *EG_Geometry) Validate() error {
	return _cdfgb.ValidateWithPath("E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}

func (_dgd *CT_BiLevelEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _bb.Sprintf("\u0025\u0076", _dgd.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_ColorChoice struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_egeda *CT_TextShapeAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_ceafda, _geeeg := d.Token()
		if _geeeg != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053h\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _geeeg)
		}
		if _gdagb, _gaeecc := _ceafda.(_g.EndElement); _gaeecc && _gdagb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecddb *CT_LineJoinMiterProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ecddb.LimAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0069\u006d"}, Value: _bb.Sprintf("\u0025\u0076", *_ecddb.LimAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_ConnectionSite struct {
	AngAttr ST_AdjAngle
	Pos     *CT_AdjPoint2D
}

type CT_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

// ValidateWithPath validates the EG_TextBulletTypeface and its children, prefixing error messages with path
func (_edffb *EG_TextBulletTypeface) ValidateWithPath(path string) error {
	if _edffb.BuFontTx != nil {
		if _gdcabg := _edffb.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _gdcabg != nil {
			return _gdcabg
		}
	}
	if _edffb.BuFont != nil {
		if _gdeac := _edffb.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _gdeac != nil {
			return _gdeac
		}
	}
	return nil
}

func NewCT_GvmlShapeNonVisual() *CT_GvmlShapeNonVisual {
	_gadee := &CT_GvmlShapeNonVisual{}
	_gadee.CNvPr = NewCT_NonVisualDrawingProps()
	_gadee.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
	return _gadee
}

// ST_TextFontScalePercentOrPercentString is a union type
type ST_TextFontScalePercentOrPercentString struct {
	ST_TextFontScalePercent *int32
	ST_Percentage           *string
}

func NewCT_AlphaModulateEffect() *CT_AlphaModulateEffect {
	_gaf := &CT_AlphaModulateEffect{}
	_gaf.Cont = NewCT_EffectContainer()
	return _gaf
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_cbcc *CT_Table) ValidateWithPath(path string) error {
	if _cbcc.TblPr != nil {
		if _gcdgd := _cbcc.TblPr.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0050\u0072"); _gcdgd != nil {
			return _gcdgd
		}
	}
	if _bege := _cbcc.TblGrid.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0047\u0072\u0069\u0064"); _bege != nil {
		return _bege
	}
	for _bfadd, _dgebg := range _cbcc.Tr {
		if _aecgg := _dgebg.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _bfadd)); _aecgg != nil {
			return _aecgg
		}
	}
	return nil
}

type ST_BlendMode byte

func (_fbafa *CT_HslColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fbafa.HueAttr = 0
	for _, _bbagg := range start.Attr {
		if _bbagg.Name.Local == "\u0068\u0075\u0065" {
			_ggagd, _cbce := _fg.ParseInt(_bbagg.Value, 10, 32)
			if _cbce != nil {
				return _cbce
			}
			_fbafa.HueAttr = int32(_ggagd)
			continue
		}
		if _bbagg.Name.Local == "\u0073\u0061\u0074" {
			_aedac, _baec := ParseUnionST_Percentage(_bbagg.Value)
			if _baec != nil {
				return _baec
			}
			_fbafa.SatAttr = _aedac
			continue
		}
		if _bbagg.Name.Local == "\u006c\u0075\u006d" {
			_dbfcf, _adgd := ParseUnionST_Percentage(_bbagg.Value)
			if _adgd != nil {
				return _adgd
			}
			_fbafa.LumAttr = _dbfcf
			continue
		}
	}
_dggc:
	for {
		_afea, _agea := d.Token()
		if _agea != nil {
			return _agea
		}
		switch _gdffg := _afea.(type) {
		case _g.StartElement:
			switch _gdffg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ccge := NewEG_ColorTransform()
				_ccge.Tint = NewCT_PositiveFixedPercentage()
				if _fcabd := d.DecodeElement(_ccge.Tint, &_gdffg); _fcabd != nil {
					return _fcabd
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _ccge)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_dcgf := NewEG_ColorTransform()
				_dcgf.Shade = NewCT_PositiveFixedPercentage()
				if _fdgd := d.DecodeElement(_dcgf.Shade, &_gdffg); _fdgd != nil {
					return _fdgd
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _dcgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_cacg := NewEG_ColorTransform()
				_cacg.Comp = NewCT_ComplementTransform()
				if _cadb := d.DecodeElement(_cacg.Comp, &_gdffg); _cadb != nil {
					return _cadb
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _cacg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_beec := NewEG_ColorTransform()
				_beec.Inv = NewCT_InverseTransform()
				if _cfgc := d.DecodeElement(_beec.Inv, &_gdffg); _cfgc != nil {
					return _cfgc
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _beec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_bgdfe := NewEG_ColorTransform()
				_bgdfe.Gray = NewCT_GrayscaleTransform()
				if _fead := d.DecodeElement(_bgdfe.Gray, &_gdffg); _fead != nil {
					return _fead
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _bgdfe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_beecf := NewEG_ColorTransform()
				_beecf.Alpha = NewCT_PositiveFixedPercentage()
				if _gafb := d.DecodeElement(_beecf.Alpha, &_gdffg); _gafb != nil {
					return _gafb
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _beecf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_baeaa := NewEG_ColorTransform()
				_baeaa.AlphaOff = NewCT_FixedPercentage()
				if _accgb := d.DecodeElement(_baeaa.AlphaOff, &_gdffg); _accgb != nil {
					return _accgb
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _baeaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_bfcgd := NewEG_ColorTransform()
				_bfcgd.AlphaMod = NewCT_PositivePercentage()
				if _adedee := d.DecodeElement(_bfcgd.AlphaMod, &_gdffg); _adedee != nil {
					return _adedee
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _bfcgd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_baeb := NewEG_ColorTransform()
				_baeb.Hue = NewCT_PositiveFixedAngle()
				if _acafe := d.DecodeElement(_baeb.Hue, &_gdffg); _acafe != nil {
					return _acafe
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _baeb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_bdde := NewEG_ColorTransform()
				_bdde.HueOff = NewCT_Angle()
				if _ecbbc := d.DecodeElement(_bdde.HueOff, &_gdffg); _ecbbc != nil {
					return _ecbbc
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _bdde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_adbf := NewEG_ColorTransform()
				_adbf.HueMod = NewCT_PositivePercentage()
				if _fbcb := d.DecodeElement(_adbf.HueMod, &_gdffg); _fbcb != nil {
					return _fbcb
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _adbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_becaa := NewEG_ColorTransform()
				_becaa.Sat = NewCT_Percentage()
				if _efeg := d.DecodeElement(_becaa.Sat, &_gdffg); _efeg != nil {
					return _efeg
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _becaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_cdfc := NewEG_ColorTransform()
				_cdfc.SatOff = NewCT_Percentage()
				if _bagef := d.DecodeElement(_cdfc.SatOff, &_gdffg); _bagef != nil {
					return _bagef
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _cdfc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_eedc := NewEG_ColorTransform()
				_eedc.SatMod = NewCT_Percentage()
				if _edbba := d.DecodeElement(_eedc.SatMod, &_gdffg); _edbba != nil {
					return _edbba
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _eedc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aadg := NewEG_ColorTransform()
				_aadg.Lum = NewCT_Percentage()
				if _dafcg := d.DecodeElement(_aadg.Lum, &_gdffg); _dafcg != nil {
					return _dafcg
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _aadg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_ggbdb := NewEG_ColorTransform()
				_ggbdb.LumOff = NewCT_Percentage()
				if _ggbff := d.DecodeElement(_ggbdb.LumOff, &_gdffg); _ggbff != nil {
					return _ggbff
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _ggbdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_becb := NewEG_ColorTransform()
				_becb.LumMod = NewCT_Percentage()
				if _dafee := d.DecodeElement(_becb.LumMod, &_gdffg); _dafee != nil {
					return _dafee
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _becb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_gbbgc := NewEG_ColorTransform()
				_gbbgc.Red = NewCT_Percentage()
				if _afda := d.DecodeElement(_gbbgc.Red, &_gdffg); _afda != nil {
					return _afda
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _gbbgc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_abdc := NewEG_ColorTransform()
				_abdc.RedOff = NewCT_Percentage()
				if _cfdef := d.DecodeElement(_abdc.RedOff, &_gdffg); _cfdef != nil {
					return _cfdef
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _abdc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_gbbc := NewEG_ColorTransform()
				_gbbc.RedMod = NewCT_Percentage()
				if _ebff := d.DecodeElement(_gbbc.RedMod, &_gdffg); _ebff != nil {
					return _ebff
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _gbbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_cacff := NewEG_ColorTransform()
				_cacff.Green = NewCT_Percentage()
				if _aagcfe := d.DecodeElement(_cacff.Green, &_gdffg); _aagcfe != nil {
					return _aagcfe
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _cacff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_fffac := NewEG_ColorTransform()
				_fffac.GreenOff = NewCT_Percentage()
				if _dagfe := d.DecodeElement(_fffac.GreenOff, &_gdffg); _dagfe != nil {
					return _dagfe
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _fffac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fgbaf := NewEG_ColorTransform()
				_fgbaf.GreenMod = NewCT_Percentage()
				if _fdddd := d.DecodeElement(_fgbaf.GreenMod, &_gdffg); _fdddd != nil {
					return _fdddd
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _fgbaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_cfda := NewEG_ColorTransform()
				_cfda.Blue = NewCT_Percentage()
				if _acdce := d.DecodeElement(_cfda.Blue, &_gdffg); _acdce != nil {
					return _acdce
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _cfda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_dfec := NewEG_ColorTransform()
				_dfec.BlueOff = NewCT_Percentage()
				if _adfcf := d.DecodeElement(_dfec.BlueOff, &_gdffg); _adfcf != nil {
					return _adfcf
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _dfec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_edfcd := NewEG_ColorTransform()
				_edfcd.BlueMod = NewCT_Percentage()
				if _ceadc := d.DecodeElement(_edfcd.BlueMod, &_gdffg); _ceadc != nil {
					return _ceadc
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _edfcd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_edbfc := NewEG_ColorTransform()
				_edbfc.Gamma = NewCT_GammaTransform()
				if _ggcbcf := d.DecodeElement(_edbfc.Gamma, &_gdffg); _ggcbcf != nil {
					return _ggcbcf
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _edbfc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_dgggb := NewEG_ColorTransform()
				_dgggb.InvGamma = NewCT_InverseGammaTransform()
				if _gbcc := d.DecodeElement(_dgggb.InvGamma, &_gdffg); _gbcc != nil {
					return _gbcc
				}
				_fbafa.EG_ColorTransform = append(_fbafa.EG_ColorTransform, _dgggb)
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _gdffg.Name)
				if _afedg := d.Skip(); _afedg != nil {
					return _afedg
				}
			}
		case _g.EndElement:
			break _dggc
		case _g.CharData:
		}
	}
	return nil
}

func (_agdgbb ST_LineEndWidth) Validate() error { return _agdgbb.ValidateWithPath("") }

func (_ecccg ST_PitchFamily) String() string {
	switch _ecccg {
	case 0:
		return ""
	case 1:
		return "\u0030\u0030"
	case 2:
		return "\u0030\u0031"
	case 3:
		return "\u0030\u0032"
	case 4:
		return "\u0031\u0036"
	case 5:
		return "\u0031\u0037"
	case 6:
		return "\u0031\u0038"
	case 7:
		return "\u0033\u0032"
	case 8:
		return "\u0033\u0033"
	case 9:
		return "\u0033\u0034"
	case 10:
		return "\u0034\u0038"
	case 11:
		return "\u0034\u0039"
	case 12:
		return "\u0035\u0030"
	case 13:
		return "\u0036\u0034"
	case 14:
		return "\u0036\u0035"
	case 15:
		return "\u0036\u0036"
	case 16:
		return "\u0038\u0030"
	case 17:
		return "\u0038\u0031"
	case 18:
		return "\u0038\u0032"
	}
	return ""
}

func (_eeccb *CT_LineJoinRound) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Boolean and its children
func (_ecaf *CT_Boolean) Validate() error {
	return _ecaf.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

type CT_GvmlConnector struct {
	NvCxnSpPr *CT_GvmlConnectorNonVisual
	SpPr      *CT_ShapeProperties
	Style     *CT_ShapeStyle
	ExtLst    *CT_OfficeArtExtensionList
}

type CT_Path2DCubicBezierTo struct{ Pt []*CT_AdjPoint2D }

// Validate validates the CT_NonVisualGraphicFrameProperties and its children
func (_bdaab *CT_NonVisualGraphicFrameProperties) Validate() error {
	return _bdaab.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the ThemeOverride and its children
func (_cgef *ThemeOverride) Validate() error {
	return _cgef.ValidateWithPath("\u0054\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}

func (_gabf *CT_GeomRect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cdadc := range start.Attr {
		if _cdadc.Name.Local == "\u006c" {
			_edcfe, _deed := ParseUnionST_AdjCoordinate(_cdadc.Value)
			if _deed != nil {
				return _deed
			}
			_gabf.LAttr = _edcfe
			continue
		}
		if _cdadc.Name.Local == "\u0074" {
			_dedea, _efaa := ParseUnionST_AdjCoordinate(_cdadc.Value)
			if _efaa != nil {
				return _efaa
			}
			_gabf.TAttr = _dedea
			continue
		}
		if _cdadc.Name.Local == "\u0072" {
			_bcfa, _gbec := ParseUnionST_AdjCoordinate(_cdadc.Value)
			if _gbec != nil {
				return _gbec
			}
			_gabf.RAttr = _bcfa
			continue
		}
		if _cdadc.Name.Local == "\u0062" {
			_ffeg, _efea := ParseUnionST_AdjCoordinate(_cdadc.Value)
			if _efea != nil {
				return _efea
			}
			_gabf.BAttr = _ffeg
			continue
		}
	}
	for {
		_gdac, _ffegg := d.Token()
		if _ffegg != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ffegg)
		}
		if _cgdb, _eeca := _gdac.(_g.EndElement); _eeca && _cgdb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfcdb *CT_TableStyleTextStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _face := range start.Attr {
		if _face.Name.Local == "\u0062" {
			_dfcdb.BAttr.UnmarshalXMLAttr(_face)
			continue
		}
		if _face.Name.Local == "\u0069" {
			_dfcdb.IAttr.UnmarshalXMLAttr(_face)
			continue
		}
	}
_gdccf:
	for {
		_fcgb, _bafbbc := d.Token()
		if _bafbbc != nil {
			return _bafbbc
		}
		switch _efgfe := _fcgb.(type) {
		case _g.StartElement:
			switch _efgfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_dfcdb.Font = NewCT_FontCollection()
				if _edca := d.DecodeElement(_dfcdb.Font, &_efgfe); _edca != nil {
					return _edca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_dfcdb.FontRef = NewCT_FontReference()
				if _ccceg := d.DecodeElement(_dfcdb.FontRef, &_efgfe); _ccceg != nil {
					return _ccceg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dfcdb.ScrgbClr = NewCT_ScRgbColor()
				if _bbbfa := d.DecodeElement(_dfcdb.ScrgbClr, &_efgfe); _bbbfa != nil {
					return _bbbfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dfcdb.SrgbClr = NewCT_SRgbColor()
				if _efece := d.DecodeElement(_dfcdb.SrgbClr, &_efgfe); _efece != nil {
					return _efece
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dfcdb.HslClr = NewCT_HslColor()
				if _bgfeb := d.DecodeElement(_dfcdb.HslClr, &_efgfe); _bgfeb != nil {
					return _bgfeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dfcdb.SysClr = NewCT_SystemColor()
				if _bcded := d.DecodeElement(_dfcdb.SysClr, &_efgfe); _bcded != nil {
					return _bcded
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dfcdb.SchemeClr = NewCT_SchemeColor()
				if _gbbda := d.DecodeElement(_dfcdb.SchemeClr, &_efgfe); _gbbda != nil {
					return _gbbda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dfcdb.PrstClr = NewCT_PresetColor()
				if _ffefa := d.DecodeElement(_dfcdb.PrstClr, &_efgfe); _ffefa != nil {
					return _ffefa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfcdb.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbaf := d.DecodeElement(_dfcdb.ExtLst, &_efgfe); _cbaf != nil {
					return _cbaf
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _efgfe.Name)
				if _beedg := d.Skip(); _beedg != nil {
					return _beedg
				}
			}
		case _g.EndElement:
			break _gdccf
		case _g.CharData:
		}
	}
	return nil
}

func (_baecf *ST_LineEndWidth) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bebff, _dddgfe := d.Token()
	if _dddgfe != nil {
		return _dddgfe
	}
	if _fgdaf, _cedfee := _bebff.(_g.EndElement); _cedfee && _fgdaf.Name == start.Name {
		*_baecf = 1
		return nil
	}
	if _agfdg, _acfba := _bebff.(_g.CharData); !_acfba {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bebff)
	} else {
		switch string(_agfdg) {
		case "":
			*_baecf = 0
		case "\u0073\u006d":
			*_baecf = 1
		case "\u006d\u0065\u0064":
			*_baecf = 2
		case "\u006c\u0067":
			*_baecf = 3
		}
	}
	_bebff, _dddgfe = d.Token()
	if _dddgfe != nil {
		return _dddgfe
	}
	if _cadgc, _acdba := _bebff.(_g.EndElement); _acdba && _cadgc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bebff)
}

// ValidateWithPath validates the CT_RegularTextRun and its children, prefixing error messages with path
func (_effc *CT_RegularTextRun) ValidateWithPath(path string) error {
	if _effc.RPr != nil {
		if _aabec := _effc.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _aabec != nil {
			return _aabec
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PresetGeometry2D and its children, prefixing error messages with path
func (_dabaf *CT_PresetGeometry2D) ValidateWithPath(path string) error {
	if _dabaf.PrstAttr == ST_ShapeTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ecfd := _dabaf.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _ecfd != nil {
		return _ecfd
	}
	if _dabaf.AvLst != nil {
		if _dceb := _dabaf.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _dceb != nil {
			return _dceb
		}
	}
	return nil
}

// Validate validates the CT_AnimationDgmElement and its children
func (_ddgb *CT_AnimationDgmElement) Validate() error {
	return _ddgb.ValidateWithPath("\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074")
}

func (_fbcab ST_TextShapeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fbcab.String(), start)
}

const (
	ST_LineCapUnset ST_LineCap = 0
	ST_LineCapRnd   ST_LineCap = 1
	ST_LineCapSq    ST_LineCap = 2
	ST_LineCapFlat  ST_LineCap = 3
)

func (_fefab ST_BevelPresetType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gfgcbe := _g.Attr{}
	_gfgcbe.Name = name
	switch _fefab {
	case ST_BevelPresetTypeUnset:
		_gfgcbe.Value = ""
	case ST_BevelPresetTypeRelaxedInset:
		_gfgcbe.Value = "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case ST_BevelPresetTypeCircle:
		_gfgcbe.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_BevelPresetTypeSlope:
		_gfgcbe.Value = "\u0073\u006c\u006fp\u0065"
	case ST_BevelPresetTypeCross:
		_gfgcbe.Value = "\u0063\u0072\u006fs\u0073"
	case ST_BevelPresetTypeAngle:
		_gfgcbe.Value = "\u0061\u006e\u0067l\u0065"
	case ST_BevelPresetTypeSoftRound:
		_gfgcbe.Value = "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case ST_BevelPresetTypeConvex:
		_gfgcbe.Value = "\u0063\u006f\u006e\u0076\u0065\u0078"
	case ST_BevelPresetTypeCoolSlant:
		_gfgcbe.Value = "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case ST_BevelPresetTypeDivot:
		_gfgcbe.Value = "\u0064\u0069\u0076o\u0074"
	case ST_BevelPresetTypeRiblet:
		_gfgcbe.Value = "\u0072\u0069\u0062\u006c\u0065\u0074"
	case ST_BevelPresetTypeHardEdge:
		_gfgcbe.Value = "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case ST_BevelPresetTypeArtDeco:
		_gfgcbe.Value = "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return _gfgcbe, nil
}

// Validate validates the CT_TableStyleTextStyle and its children
func (_bfedd *CT_TableStyleTextStyle) Validate() error {
	return _bfedd.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065")
}

// Validate validates the CT_ColorSchemeAndMapping and its children
func (_gege *CT_ColorSchemeAndMapping) Validate() error {
	return _gege.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_ReflectionEffect and its children, prefixing error messages with path
func (_dfcde *CT_ReflectionEffect) ValidateWithPath(path string) error {
	if _dfcde.BlurRadAttr != nil {
		if *_dfcde.BlurRadAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dfcde.BlurRadAttr)
		}
		if *_dfcde.BlurRadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dfcde.BlurRadAttr)
		}
	}
	if _dfcde.StAAttr != nil {
		if _afgge := _dfcde.StAAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u0041\u0074\u0074\u0072"); _afgge != nil {
			return _afgge
		}
	}
	if _dfcde.StPosAttr != nil {
		if _gcacf := _dfcde.StPosAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _gcacf != nil {
			return _gcacf
		}
	}
	if _dfcde.EndAAttr != nil {
		if _ggbcf := _dfcde.EndAAttr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0041\u0041\u0074\u0074r"); _ggbcf != nil {
			return _ggbcf
		}
	}
	if _dfcde.EndPosAttr != nil {
		if _bafa := _dfcde.EndPosAttr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _bafa != nil {
			return _bafa
		}
	}
	if _dfcde.DistAttr != nil {
		if *_dfcde.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dfcde.DistAttr)
		}
		if *_dfcde.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_dfcde.DistAttr)
		}
	}
	if _dfcde.DirAttr != nil {
		if *_dfcde.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dfcde.DirAttr)
		}
		if *_dfcde.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dfcde.DirAttr)
		}
	}
	if _dfcde.FadeDirAttr != nil {
		if *_dfcde.FadeDirAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0046\u0061\u0064\u0065\u0044\u0069\u0072\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dfcde.FadeDirAttr)
		}
		if *_dfcde.FadeDirAttr >= 21600000 {
			return _bb.Errorf("\u0025s\u002f\u006d.\u0046\u0061\u0064e\u0044\u0069\u0072\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dfcde.FadeDirAttr)
		}
	}
	if _dfcde.SxAttr != nil {
		if _cbdg := _dfcde.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _cbdg != nil {
			return _cbdg
		}
	}
	if _dfcde.SyAttr != nil {
		if _gede := _dfcde.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _gede != nil {
			return _gede
		}
	}
	if _dfcde.KxAttr != nil {
		if *_dfcde.KxAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_dfcde.KxAttr)
		}
		if *_dfcde.KxAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dfcde.KxAttr)
		}
	}
	if _dfcde.KyAttr != nil {
		if *_dfcde.KyAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_dfcde.KyAttr)
		}
		if *_dfcde.KyAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dfcde.KyAttr)
		}
	}
	if _ffbe := _dfcde.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _ffbe != nil {
		return _ffbe
	}
	return nil
}

type CT_LightRig struct {
	RigAttr ST_LightRigType
	DirAttr ST_LightRigDirection
	Rot     *CT_SphereCoords
}

func (_fbfg *CT_GvmlGroupShapeNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fbfg.CNvPr = NewCT_NonVisualDrawingProps()
	_fbfg.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
_gacf:
	for {
		_bddgd, _ececg := d.Token()
		if _ececg != nil {
			return _ececg
		}
		switch _egag := _bddgd.(type) {
		case _g.StartElement:
			switch _egag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _aaegc := d.DecodeElement(_fbfg.CNvPr, &_egag); _aaegc != nil {
					return _aaegc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _bbea := d.DecodeElement(_fbfg.CNvGrpSpPr, &_egag); _bbea != nil {
					return _bbea
				}
			default:
				_fc.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0047\u0076m\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _egag.Name)
				if _dcdde := d.Skip(); _dcdde != nil {
					return _dcdde
				}
			}
		case _g.EndElement:
			break _gacf
		case _g.CharData:
		}
	}
	return nil
}

func (_eagdd ST_ChartBuildStep) Validate() error { return _eagdd.ValidateWithPath("") }

// ValidateWithPath validates the CT_PresetShadowEffect and its children, prefixing error messages with path
func (_bffca *CT_PresetShadowEffect) ValidateWithPath(path string) error {
	if _bffca.PrstAttr == ST_PresetShadowValUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _afeg := _bffca.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _afeg != nil {
		return _afeg
	}
	if _bffca.DistAttr != nil {
		if *_bffca.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bffca.DistAttr)
		}
		if *_bffca.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_bffca.DistAttr)
		}
	}
	if _bffca.DirAttr != nil {
		if *_bffca.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bffca.DirAttr)
		}
		if *_bffca.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bffca.DirAttr)
		}
	}
	if _bffca.ScrgbClr != nil {
		if _aefdee := _bffca.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _aefdee != nil {
			return _aefdee
		}
	}
	if _bffca.SrgbClr != nil {
		if _edfb := _bffca.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _edfb != nil {
			return _edfb
		}
	}
	if _bffca.HslClr != nil {
		if _gadec := _bffca.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _gadec != nil {
			return _gadec
		}
	}
	if _bffca.SysClr != nil {
		if _eggg := _bffca.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _eggg != nil {
			return _eggg
		}
	}
	if _bffca.SchemeClr != nil {
		if _dfdgg := _bffca.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dfdgg != nil {
			return _dfdgg
		}
	}
	if _bffca.PrstClr != nil {
		if _beccg := _bffca.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _beccg != nil {
			return _beccg
		}
	}
	return nil
}

func NewCT_EffectContainer() *CT_EffectContainer { _daaea := &CT_EffectContainer{}; return _daaea }

func (_cdfae *ST_TextAlignType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cdfae = 0
	case "\u006c":
		*_cdfae = 1
	case "\u0063\u0074\u0072":
		*_cdfae = 2
	case "\u0072":
		*_cdfae = 3
	case "\u006a\u0075\u0073\u0074":
		*_cdfae = 4
	case "\u006au\u0073\u0074\u004c\u006f\u0077":
		*_cdfae = 5
	case "\u0064\u0069\u0073\u0074":
		*_cdfae = 6
	case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
		*_cdfae = 7
	}
	return nil
}

func NewCT_FillOverlayEffect() *CT_FillOverlayEffect {
	_dbdfe := &CT_FillOverlayEffect{}
	_dbdfe.BlendAttr = ST_BlendMode(1)
	return _dbdfe
}

func (_bdcg *CT_NonVisualPictureProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bdcg.PreferRelativeResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_bdcg.PreferRelativeResizeAttr))})
	}
	e.EncodeToken(start)
	if _bdcg.PicLocks != nil {
		_fdddfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_bdcg.PicLocks, _fdddfd)
	}
	if _bdcg.ExtLst != nil {
		_fbdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bdcg.ExtLst, _fbdb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cdfdf ST_LineEndLength) Validate() error { return _cdfdf.ValidateWithPath("") }

func (_afdce *ST_TextWrappingType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_afdce = 0
	case "\u006e\u006f\u006e\u0065":
		*_afdce = 1
	case "\u0073\u0071\u0075\u0061\u0072\u0065":
		*_afdce = 2
	}
	return nil
}

func NewCT_ClipboardStyleSheet() *CT_ClipboardStyleSheet {
	_bdegb := &CT_ClipboardStyleSheet{}
	_bdegb.ThemeElements = NewCT_BaseStyles()
	_bdegb.ClrMap = NewCT_ColorMapping()
	return _bdegb
}

func (_bgcba *CT_TextFont) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cdgac := range start.Attr {
		if _cdgac.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_gccecb, _dfcae := _cdgac.Value, error(nil)
			if _dfcae != nil {
				return _dfcae
			}
			_bgcba.TypefaceAttr = _gccecb
			continue
		}
		if _cdgac.Name.Local == "\u0070\u0061\u006e\u006f\u0073\u0065" {
			_edbdb, _babcf := _cdgac.Value, error(nil)
			if _babcf != nil {
				return _babcf
			}
			_bgcba.PanoseAttr = &_edbdb
			continue
		}
		if _cdgac.Name.Local == "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079" {
			_bgcba.PitchFamilyAttr.UnmarshalXMLAttr(_cdgac)
			continue
		}
		if _cdgac.Name.Local == "\u0063h\u0061\u0072\u0073\u0065\u0074" {
			_fedeab, _fffcf := _fg.ParseInt(_cdgac.Value, 10, 8)
			if _fffcf != nil {
				return _fffcf
			}
			_fabgfb := int8(_fedeab)
			_bgcba.CharsetAttr = &_fabgfb
			continue
		}
	}
	for {
		_bgbgf, _gggbf := d.Token()
		if _gggbf != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _gggbf)
		}
		if _efefc, _cffae := _bgbgf.(_g.EndElement); _cffae && _efefc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_feefg ST_CompoundLine) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fcbbf := _g.Attr{}
	_fcbbf.Name = name
	switch _feefg {
	case ST_CompoundLineUnset:
		_fcbbf.Value = ""
	case ST_CompoundLineSng:
		_fcbbf.Value = "\u0073\u006e\u0067"
	case ST_CompoundLineDbl:
		_fcbbf.Value = "\u0064\u0062\u006c"
	case ST_CompoundLineThickThin:
		_fcbbf.Value = "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case ST_CompoundLineThinThick:
		_fcbbf.Value = "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case ST_CompoundLineTri:
		_fcbbf.Value = "\u0074\u0072\u0069"
	}
	return _fcbbf, nil
}

func (_feebga *ST_ColorSchemeIndex) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_feebga = 0
	case "\u0064\u006b\u0031":
		*_feebga = 1
	case "\u006c\u0074\u0031":
		*_feebga = 2
	case "\u0064\u006b\u0032":
		*_feebga = 3
	case "\u006c\u0074\u0032":
		*_feebga = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_feebga = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_feebga = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_feebga = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_feebga = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_feebga = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_feebga = 10
	case "\u0068\u006c\u0069n\u006b":
		*_feebga = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_feebga = 12
	}
	return nil
}

type CT_NonVisualGraphicFrameProperties struct {
	GraphicFrameLocks *CT_GraphicalObjectFrameLocking
	ExtLst            *CT_OfficeArtExtensionList
}

// Validate validates the CT_BackgroundFormatting and its children
func (_agaa *CT_BackgroundFormatting) Validate() error {
	return _agaa.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}

func NewCT_LightRig() *CT_LightRig {
	_ggeda := &CT_LightRig{}
	_ggeda.RigAttr = ST_LightRigType(1)
	_ggeda.DirAttr = ST_LightRigDirection(1)
	return _ggeda
}

func (_fbcgaa *CT_TextBulletTypefaceFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_bdbb, _ffded := d.Token()
		if _ffded != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _ffded)
		}
		if _dafge, _gdgcdf := _bdbb.(_g.EndElement); _gdgcdf && _dafge.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fdfbb *ST_AdjCoordinate) ValidateWithPath(path string) error {
	_eedaeg := []string{}
	if _fdfbb.ST_Coordinate != nil {
		if _afbgeb := _fdfbb.ST_Coordinate.ValidateWithPath(path + "\u002f\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065"); _afbgeb != nil {
			return _afbgeb
		}
		_eedaeg = append(_eedaeg, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065")
	}
	if _fdfbb.ST_GeomGuideName != nil {
		_eedaeg = append(_eedaeg, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_eedaeg) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _eedaeg)
	}
	return nil
}

type CT_ThemeableLineStyle struct {
	Ln    *CT_LineProperties
	LnRef *CT_StyleMatrixReference
}

func (_adge ST_TextHorzOverflowType) String() string {
	switch _adge {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

func NewEG_TextGeometry() *EG_TextGeometry { _baeggd := &EG_TextGeometry{}; return _baeggd }

func (_ggfega ST_TextCapsType) String() string {
	switch _ggfega {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006d\u0061l\u006c"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

func (_eadfd *CT_Path2DArcTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077\u0052"}, Value: _bb.Sprintf("\u0025\u0076", _eadfd.WRAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0052"}, Value: _bb.Sprintf("\u0025\u0076", _eadfd.HRAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0041n\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _eadfd.StAngAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0077\u0041n\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _eadfd.SwAngAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aebde ST_ColorSchemeIndex) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_aebde.String(), start)
}

func (_cefeb ST_RectAlignment) Validate() error { return _cefeb.ValidateWithPath("") }

func (_bgdag *CT_GvmlGroupShapeChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bgdag.TxSp != nil {
		_gegaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		for _, _aafag := range _bgdag.TxSp {
			e.EncodeElement(_aafag, _gegaa)
		}
	}
	if _bgdag.Sp != nil {
		_dbecc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070"}}
		for _, _bfcac := range _bgdag.Sp {
			e.EncodeElement(_bfcac, _dbecc)
		}
	}
	if _bgdag.CxnSp != nil {
		_eabc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _ffdc := range _bgdag.CxnSp {
			e.EncodeElement(_ffdc, _eabc)
		}
	}
	if _bgdag.Pic != nil {
		_bda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070i\u0063"}}
		for _, _fgdg := range _bgdag.Pic {
			e.EncodeElement(_fgdg, _bda)
		}
	}
	if _bgdag.GraphicFrame != nil {
		_cgff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _dccge := range _bgdag.GraphicFrame {
			e.EncodeElement(_dccge, _cgff)
		}
	}
	if _bgdag.GrpSp != nil {
		_gdfec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _abeef := range _bgdag.GrpSp {
			e.EncodeElement(_abeef, _gdfec)
		}
	}
	return nil
}

func (_gfcc *CT_GvmlTextShapeChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fgbad:
	for {
		_cdeb, _acdcfb := d.Token()
		if _acdcfb != nil {
			return _acdcfb
		}
		switch _gfcad := _cdeb.(type) {
		case _g.StartElement:
			switch _gfcad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_gfcc.UseSpRect = NewCT_GvmlUseShapeRectangle()
				if _fecg := d.DecodeElement(_gfcc.UseSpRect, &_gfcad); _fecg != nil {
					return _fecg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_gfcc.Xfrm = NewCT_Transform2D()
				if _baegfb := d.DecodeElement(_gfcc.Xfrm, &_gfcad); _baegfb != nil {
					return _baegfb
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0076\u006d\u006cT\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gfcad.Name)
				if _bgcg := d.Skip(); _bgcg != nil {
					return _bgcg
				}
			}
		case _g.EndElement:
			break _fgbad
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TablePropertiesChoice and its children, prefixing error messages with path
func (_afdbf *CT_TablePropertiesChoice) ValidateWithPath(path string) error {
	if _afdbf.TableStyle != nil {
		if _dfgca := _afdbf.TableStyle.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _dfgca != nil {
			return _dfgca
		}
	}
	if _afdbf.TableStyleId != nil {
		if !_a.ST_GuidPatternRe.MatchString(*_afdbf.TableStyleId) {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0054\u0061b\u006c\u0065\u0053t\u0079\u006c\u0065\u0049d\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, *_afdbf.TableStyleId)
		}
	}
	return nil
}

type CT_GraphicalObject struct{ GraphicData *CT_GraphicalObjectData }

// Validate validates the CT_RelativeRect and its children
func (_afbgg *CT_RelativeRect) Validate() error {
	return _afbgg.ValidateWithPath("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074")
}

const (
	ST_FontCollectionIndexUnset ST_FontCollectionIndex = 0
	ST_FontCollectionIndexMajor ST_FontCollectionIndex = 1
	ST_FontCollectionIndexMinor ST_FontCollectionIndex = 2
	ST_FontCollectionIndexNone  ST_FontCollectionIndex = 3
)

func (_geeg *CT_ColorScheme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _geeg.NameAttr)})
	e.EncodeToken(start)
	_eece := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064k\u0031"}}
	e.EncodeElement(_geeg.Dk1, _eece)
	_daab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ct\u0031"}}
	e.EncodeElement(_geeg.Lt1, _daab)
	_bcff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064k\u0032"}}
	e.EncodeElement(_geeg.Dk2, _bcff)
	_edcc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ct\u0032"}}
	e.EncodeElement(_geeg.Lt2, _edcc)
	_efeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00741"}}
	e.EncodeElement(_geeg.Accent1, _efeb)
	_bacc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00742"}}
	e.EncodeElement(_geeg.Accent2, _bacc)
	_gbga := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00743"}}
	e.EncodeElement(_geeg.Accent3, _gbga)
	_bfeeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00744"}}
	e.EncodeElement(_geeg.Accent4, _bfeeb)
	_bfeea := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00745"}}
	e.EncodeElement(_geeg.Accent5, _bfeea)
	_cdcfg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00746"}}
	e.EncodeElement(_geeg.Accent6, _cdcfg)
	_ebde := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0068\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_geeg.Hlink, _ebde)
	_bgaff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_geeg.FolHlink, _bgaff)
	if _geeg.ExtLst != nil {
		_edbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_geeg.ExtLst, _edbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LineStyleList and its children, prefixing error messages with path
func (_gbcdd *CT_LineStyleList) ValidateWithPath(path string) error {
	for _efgc, _gefa := range _gbcdd.Ln {
		if _fbcga := _gefa.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u004c\u006e\u005b\u0025\u0064]", path, _efgc)); _fbcga != nil {
			return _fbcga
		}
	}
	return nil
}

// Validate validates the CT_GrayscaleTransform and its children
func (_gaccd *CT_GrayscaleTransform) Validate() error {
	return _gaccd.ValidateWithPath("C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d")
}

type EG_TextUnderlineFill struct {
	UFillTx *CT_TextUnderlineFillFollowText
	UFill   *CT_TextUnderlineFillGroupWrapper
}

func (_eggedc *CT_HSLEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eggedc.HueAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0075\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_eggedc.HueAttr)})
	}
	if _eggedc.SatAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0061\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_eggedc.SatAttr)})
	}
	if _eggedc.LumAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0075\u006d"}, Value: _bb.Sprintf("\u0025\u0076", *_eggedc.LumAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BackgroundFormatting and its children, prefixing error messages with path
func (_eed *CT_BackgroundFormatting) ValidateWithPath(path string) error {
	if _eed.NoFill != nil {
		if _ddcg := _eed.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ddcg != nil {
			return _ddcg
		}
	}
	if _eed.SolidFill != nil {
		if _ebed := _eed.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ebed != nil {
			return _ebed
		}
	}
	if _eed.GradFill != nil {
		if _fcaf := _eed.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fcaf != nil {
			return _fcaf
		}
	}
	if _eed.BlipFill != nil {
		if _cdd := _eed.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cdd != nil {
			return _cdd
		}
	}
	if _eed.PattFill != nil {
		if _dgaa := _eed.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _dgaa != nil {
			return _dgaa
		}
	}
	if _eed.GrpFill != nil {
		if _ebeg := _eed.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _ebeg != nil {
			return _ebeg
		}
	}
	if _eed.EffectLst != nil {
		if _ddfa := _eed.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ddfa != nil {
			return _ddfa
		}
	}
	if _eed.EffectDag != nil {
		if _bfe := _eed.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bfe != nil {
			return _bfe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GlowEffect and its children, prefixing error messages with path
func (_dgaaa *CT_GlowEffect) ValidateWithPath(path string) error {
	if _dgaaa.RadAttr != nil {
		if *_dgaaa.RadAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dgaaa.RadAttr)
		}
		if *_dgaaa.RadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_dgaaa.RadAttr)
		}
	}
	if _dgaaa.ScrgbClr != nil {
		if _ddegb := _dgaaa.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ddegb != nil {
			return _ddegb
		}
	}
	if _dgaaa.SrgbClr != nil {
		if _ggbdg := _dgaaa.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ggbdg != nil {
			return _ggbdg
		}
	}
	if _dgaaa.HslClr != nil {
		if _dbbde := _dgaaa.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dbbde != nil {
			return _dbbde
		}
	}
	if _dgaaa.SysClr != nil {
		if _cafe := _dgaaa.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _cafe != nil {
			return _cafe
		}
	}
	if _dgaaa.SchemeClr != nil {
		if _abba := _dgaaa.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _abba != nil {
			return _abba
		}
	}
	if _dgaaa.PrstClr != nil {
		if _bfbe := _dgaaa.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _bfbe != nil {
			return _bfbe
		}
	}
	return nil
}

func (_eggaef ST_ColorSchemeIndex) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fbge := _g.Attr{}
	_fbge.Name = name
	switch _eggaef {
	case ST_ColorSchemeIndexUnset:
		_fbge.Value = ""
	case ST_ColorSchemeIndexDk1:
		_fbge.Value = "\u0064\u006b\u0031"
	case ST_ColorSchemeIndexLt1:
		_fbge.Value = "\u006c\u0074\u0031"
	case ST_ColorSchemeIndexDk2:
		_fbge.Value = "\u0064\u006b\u0032"
	case ST_ColorSchemeIndexLt2:
		_fbge.Value = "\u006c\u0074\u0032"
	case ST_ColorSchemeIndexAccent1:
		_fbge.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_ColorSchemeIndexAccent2:
		_fbge.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_ColorSchemeIndexAccent3:
		_fbge.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_ColorSchemeIndexAccent4:
		_fbge.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_ColorSchemeIndexAccent5:
		_fbge.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_ColorSchemeIndexAccent6:
		_fbge.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_ColorSchemeIndexHlink:
		_fbge.Value = "\u0068\u006c\u0069n\u006b"
	case ST_ColorSchemeIndexFolHlink:
		_fbge.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return _fbge, nil
}

func (_eaeb *CT_ColorReplaceEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fdag:
	for {
		_fgaf, _deab := d.Token()
		if _deab != nil {
			return _deab
		}
		switch _gffd := _fgaf.(type) {
		case _g.StartElement:
			switch _gffd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eaeb.ScrgbClr = NewCT_ScRgbColor()
				if _agf := d.DecodeElement(_eaeb.ScrgbClr, &_gffd); _agf != nil {
					return _agf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_eaeb.SrgbClr = NewCT_SRgbColor()
				if _gecc := d.DecodeElement(_eaeb.SrgbClr, &_gffd); _gecc != nil {
					return _gecc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_eaeb.HslClr = NewCT_HslColor()
				if _bdge := d.DecodeElement(_eaeb.HslClr, &_gffd); _bdge != nil {
					return _bdge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_eaeb.SysClr = NewCT_SystemColor()
				if _acbd := d.DecodeElement(_eaeb.SysClr, &_gffd); _acbd != nil {
					return _acbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_eaeb.SchemeClr = NewCT_SchemeColor()
				if _bdcf := d.DecodeElement(_eaeb.SchemeClr, &_gffd); _bdcf != nil {
					return _bdcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_eaeb.PrstClr = NewCT_PresetColor()
				if _edggc := d.DecodeElement(_eaeb.PrstClr, &_gffd); _edggc != nil {
					return _edggc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0052\u0065\u0070\u006c\u0061\u0063\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _gffd.Name)
				if _aebb := d.Skip(); _aebb != nil {
					return _aebb
				}
			}
		case _g.EndElement:
			break _fdag
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_TextAlignTypeUnset    ST_TextAlignType = 0
	ST_TextAlignTypeL        ST_TextAlignType = 1
	ST_TextAlignTypeCtr      ST_TextAlignType = 2
	ST_TextAlignTypeR        ST_TextAlignType = 3
	ST_TextAlignTypeJust     ST_TextAlignType = 4
	ST_TextAlignTypeJustLow  ST_TextAlignType = 5
	ST_TextAlignTypeDist     ST_TextAlignType = 6
	ST_TextAlignTypeThaiDist ST_TextAlignType = 7
)

// Validate validates the CT_GvmlShape and its children
func (_aegga *CT_GvmlShape) Validate() error {
	return _aegga.ValidateWithPath("\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065")
}

func (_dfeed *CT_PresetLineDashProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dddf := range start.Attr {
		if _dddf.Name.Local == "\u0076\u0061\u006c" {
			_dfeed.ValAttr.UnmarshalXMLAttr(_dddf)
			continue
		}
	}
	for {
		_fbgc, _dceaf := d.Token()
		if _dceaf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0072e\u0073\u0065\u0074\u004c\u0069\u006ee\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _dceaf)
		}
		if _cegfe, _abgae := _fbgc.(_g.EndElement); _abgae && _cegfe.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TextNoAutofit() *CT_TextNoAutofit { _bggfa := &CT_TextNoAutofit{}; return _bggfa }

// Validate validates the CT_Path2DLineTo and its children
func (_bfcga *CT_Path2DLineTo) Validate() error {
	return _bfcga.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f")
}

// Validate validates the CT_Path2DMoveTo and its children
func (_gcgfb *CT_Path2DMoveTo) Validate() error {
	return _gcgfb.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f")
}

func (_bafcf *CT_TableStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bafcf.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cdefe := range start.Attr {
		if _cdefe.Name.Local == "\u0064\u0065\u0066" {
			_edacb, _fageb := _cdefe.Value, error(nil)
			if _fageb != nil {
				return _fageb
			}
			_bafcf.DefAttr = _edacb
			continue
		}
	}
_gadfa:
	for {
		_facbaa, _afccd := d.Token()
		if _afccd != nil {
			return _afccd
		}
		switch _bebdga := _facbaa.(type) {
		case _g.StartElement:
			switch _bebdga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_cabd := NewCT_TableStyle()
				if _dfcdde := d.DecodeElement(_cabd, &_bebdga); _dfcdde != nil {
					return _dfcdde
				}
				_bafcf.TblStyle = append(_bafcf.TblStyle, _cabd)
			default:
				_fc.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bebdga.Name)
				if _eecce := d.Skip(); _eecce != nil {
					return _eecce
				}
			}
		case _g.EndElement:
			break _gadfa
		case _g.CharData:
		}
	}
	return nil
}

func (_bfeeg ST_FixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bfeeg.ST_FixedPercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_bfeeg.ST_FixedPercentageDecimal)))
	}
	if _bfeeg.ST_FixedPercentage != nil {
		e.Encode(_bfeeg.ST_FixedPercentage)
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_bgfdcd *CT_Percentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecgab := range start.Attr {
		if _ecgab.Name.Local == "\u0076\u0061\u006c" {
			_eccea, _caade := ParseUnionST_Percentage(_ecgab.Value)
			if _caade != nil {
				return _caade
			}
			_bgfdcd.ValAttr = _eccea
			continue
		}
	}
	for {
		_gcac, _fdaad := d.Token()
		if _fdaad != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050e\u0072c\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025s", _fdaad)
		}
		if _aace, _gbegd := _gcac.(_g.EndElement); _gbegd && _aace.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PositiveSize2D struct {
	CxAttr int64
	CyAttr int64
}

func (_fdgfbf ST_TextVerticalType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fdgfbf.String(), start)
}

func NewCT_TextUnderlineLineFollowText() *CT_TextUnderlineLineFollowText {
	_cbabe := &CT_TextUnderlineLineFollowText{}
	return _cbabe
}

func (_fgda *CT_InverseGammaTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_ceedfb, _begbc := d.Token()
		if _begbc != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0049nve\u0072se\u0047\u0061\u006d\u006d\u0061\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _begbc)
		}
		if _gceec, _aebgc := _ceedfb.(_g.EndElement); _aebgc && _gceec.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dbbbg *ST_TextAlignType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_adbbff, _gagde := d.Token()
	if _gagde != nil {
		return _gagde
	}
	if _fbefd, _cabgg := _adbbff.(_g.EndElement); _cabgg && _fbefd.Name == start.Name {
		*_dbbbg = 1
		return nil
	}
	if _eccba, _gccea := _adbbff.(_g.CharData); !_gccea {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adbbff)
	} else {
		switch string(_eccba) {
		case "":
			*_dbbbg = 0
		case "\u006c":
			*_dbbbg = 1
		case "\u0063\u0074\u0072":
			*_dbbbg = 2
		case "\u0072":
			*_dbbbg = 3
		case "\u006a\u0075\u0073\u0074":
			*_dbbbg = 4
		case "\u006au\u0073\u0074\u004c\u006f\u0077":
			*_dbbbg = 5
		case "\u0064\u0069\u0073\u0074":
			*_dbbbg = 6
		case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
			*_dbbbg = 7
		}
	}
	_adbbff, _gagde = d.Token()
	if _gagde != nil {
		return _gagde
	}
	if _gdfgf, _cfgbf := _adbbff.(_g.EndElement); _cfgbf && _gdfgf.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adbbff)
}

func NewCT_TextTabStop() *CT_TextTabStop { _edbfd := &CT_TextTabStop{}; return _edbfd }

func (_badgca *EG_LineJoinProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aeabb:
	for {
		_cecb, _bdeac := d.Token()
		if _bdeac != nil {
			return _bdeac
		}
		switch _agbbf := _cecb.(type) {
		case _g.StartElement:
			switch _agbbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_badgca.Round = NewCT_LineJoinRound()
				if _cegca := d.DecodeElement(_badgca.Round, &_agbbf); _cegca != nil {
					return _cegca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_badgca.Bevel = NewCT_LineJoinBevel()
				if _fddba := d.DecodeElement(_badgca.Bevel, &_agbbf); _fddba != nil {
					return _fddba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_badgca.Miter = NewCT_LineJoinMiterProperties()
				if _cfdac := d.DecodeElement(_badgca.Miter, &_agbbf); _cfdac != nil {
					return _cfdac
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _agbbf.Name)
				if _ecdbb := d.Skip(); _ecdbb != nil {
					return _ecdbb
				}
			}
		case _g.EndElement:
			break _aeabb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the EG_ColorChoice and its children
func (_gdcab *EG_ColorChoice) Validate() error {
	return _gdcab.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065")
}

type CT_EmbeddedWAVAudioFile struct {
	EmbedAttr string
	NameAttr  *string
}

func (_dbaca ST_AnimationChartOnlyBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dbaca.String(), start)
}

func NewCT_Ratio() *CT_Ratio { _gacff := &CT_Ratio{}; return _gacff }

const (
	ST_PitchFamilyUnset ST_PitchFamily = 0
	ST_PitchFamily00    ST_PitchFamily = 1
	ST_PitchFamily01    ST_PitchFamily = 2
	ST_PitchFamily02    ST_PitchFamily = 3
	ST_PitchFamily16    ST_PitchFamily = 4
	ST_PitchFamily17    ST_PitchFamily = 5
	ST_PitchFamily18    ST_PitchFamily = 6
	ST_PitchFamily32    ST_PitchFamily = 7
	ST_PitchFamily33    ST_PitchFamily = 8
	ST_PitchFamily34    ST_PitchFamily = 9
	ST_PitchFamily48    ST_PitchFamily = 10
	ST_PitchFamily49    ST_PitchFamily = 11
	ST_PitchFamily50    ST_PitchFamily = 12
	ST_PitchFamily64    ST_PitchFamily = 13
	ST_PitchFamily65    ST_PitchFamily = 14
	ST_PitchFamily66    ST_PitchFamily = 15
	ST_PitchFamily80    ST_PitchFamily = 16
	ST_PitchFamily81    ST_PitchFamily = 17
	ST_PitchFamily82    ST_PitchFamily = 18
)

type ThemeManager struct{ CT_EmptyElement }

func NewEG_FillProperties() *EG_FillProperties { _cffbcb := &EG_FillProperties{}; return _cffbcb }

type CT_TableStyleTextStyle struct {
	BAttr     ST_OnOffStyleType
	IAttr     ST_OnOffStyleType
	Font      *CT_FontCollection
	FontRef   *CT_FontReference
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
	ExtLst    *CT_OfficeArtExtensionList
}

func (_fecb *CT_TextFont) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _fecb.TypefaceAttr)})
	if _fecb.PanoseAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0061\u006e\u006f\u0073\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_fecb.PanoseAttr)})
	}
	if _fecb.PitchFamilyAttr != ST_PitchFamilyUnset {
		_ffgfe, _aceag := _fecb.PitchFamilyAttr.MarshalXMLAttr(_g.Name{Local: "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079"})
		if _aceag != nil {
			return _aceag
		}
		start.Attr = append(start.Attr, _ffgfe)
	}
	if _fecb.CharsetAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_fecb.CharsetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_AnimationDgmOnlyBuildType byte

// Validate validates the CT_Path2D and its children
func (_bbgaac *CT_Path2D) Validate() error {
	return _bbgaac.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D")
}

// ValidateWithPath validates the CT_TextBulletSizePoint and its children, prefixing error messages with path
func (_bdceg *CT_TextBulletSizePoint) ValidateWithPath(path string) error {
	if _bdceg.ValAttr < 100 {
		return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003e\u003d\u0020\u0031\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bdceg.ValAttr)
	}
	if _bdceg.ValAttr > 400000 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _bdceg.ValAttr)
	}
	return nil
}

// ValidateWithPath validates the CT_TextCharBullet and its children, prefixing error messages with path
func (_feadc *CT_TextCharBullet) ValidateWithPath(path string) error { return nil }

func NewCT_RelativeRect() *CT_RelativeRect { _eaaab := &CT_RelativeRect{}; return _eaaab }

type CT_PositiveFixedPercentage struct{ ValAttr ST_PositiveFixedPercentage }

// ValidateWithPath validates the CT_Path2DQuadBezierTo and its children, prefixing error messages with path
func (_cadga *CT_Path2DQuadBezierTo) ValidateWithPath(path string) error {
	for _eefga, _fgade := range _cadga.Pt {
		if _bdbfd := _fgade.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _eefga)); _bdbfd != nil {
			return _bdbfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GeomRect and its children, prefixing error messages with path
func (_acfff *CT_GeomRect) ValidateWithPath(path string) error {
	if _bfgfg := _acfff.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _bfgfg != nil {
		return _bfgfg
	}
	if _cdda := _acfff.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _cdda != nil {
		return _cdda
	}
	if _eacdg := _acfff.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _eacdg != nil {
		return _eacdg
	}
	if _gadfd := _acfff.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _gadfd != nil {
		return _gadfd
	}
	return nil
}

func (_fdb *CT_Angle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _fdb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_deecd *ST_ShapeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gacbe, _dcacc := d.Token()
	if _dcacc != nil {
		return _dcacc
	}
	if _ggfeg, _fdcfb := _gacbe.(_g.EndElement); _fdcfb && _ggfeg.Name == start.Name {
		*_deecd = 1
		return nil
	}
	if _fedaf, _fbddcb := _gacbe.(_g.CharData); !_fbddcb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gacbe)
	} else {
		switch string(_fedaf) {
		case "":
			*_deecd = 0
		case "\u006c\u0069\u006e\u0065":
			*_deecd = 1
		case "\u006ci\u006e\u0065\u0049\u006e\u0076":
			*_deecd = 2
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_deecd = 3
		case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_deecd = 4
		case "\u0072\u0065\u0063\u0074":
			*_deecd = 5
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_deecd = 6
		case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
			*_deecd = 7
		case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
			*_deecd = 8
		case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
			*_deecd = 9
		case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
			*_deecd = 10
		case "\u0068e\u0078\u0061\u0067\u006f\u006e":
			*_deecd = 11
		case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
			*_deecd = 12
		case "\u006fc\u0074\u0061\u0067\u006f\u006e":
			*_deecd = 13
		case "\u0064e\u0063\u0061\u0067\u006f\u006e":
			*_deecd = 14
		case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
			*_deecd = 15
		case "\u0073\u0074\u0061r\u0034":
			*_deecd = 16
		case "\u0073\u0074\u0061r\u0035":
			*_deecd = 17
		case "\u0073\u0074\u0061r\u0036":
			*_deecd = 18
		case "\u0073\u0074\u0061r\u0037":
			*_deecd = 19
		case "\u0073\u0074\u0061r\u0038":
			*_deecd = 20
		case "\u0073\u0074\u0061\u0072\u0031\u0030":
			*_deecd = 21
		case "\u0073\u0074\u0061\u0072\u0031\u0032":
			*_deecd = 22
		case "\u0073\u0074\u0061\u0072\u0031\u0036":
			*_deecd = 23
		case "\u0073\u0074\u0061\u0072\u0032\u0034":
			*_deecd = 24
		case "\u0073\u0074\u0061\u0072\u0033\u0032":
			*_deecd = 25
		case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
			*_deecd = 26
		case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
			*_deecd = 27
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
			*_deecd = 28
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
			*_deecd = 29
		case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
			*_deecd = 30
		case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
			*_deecd = 31
		case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
			*_deecd = 32
		case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
			*_deecd = 33
		case "\u0070\u006c\u0061\u0071\u0075\u0065":
			*_deecd = 34
		case "\u0065l\u006c\u0069\u0070\u0073\u0065":
			*_deecd = 35
		case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
			*_deecd = 36
		case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
			*_deecd = 37
		case "\u0063h\u0065\u0076\u0072\u006f\u006e":
			*_deecd = 38
		case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
			*_deecd = 39
		case "\u0070\u0069\u0065":
			*_deecd = 40
		case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
			*_deecd = 41
		case "\u0064\u006f\u006eu\u0074":
			*_deecd = 42
		case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
			*_deecd = 43
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 44
		case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
			*_deecd = 45
		case "\u0075p\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 46
		case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
			*_deecd = 47
		case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_deecd = 48
		case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_deecd = 49
		case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 50
		case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_deecd = 51
		case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 52
		case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 53
		case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 54
		case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
			*_deecd = 55
		case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 56
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_deecd = 57
		case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_deecd = 58
		case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 59
		case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 60
		case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 61
		case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 62
		case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
			*_deecd = 63
		case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 64
		case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 65
		case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
			*_deecd = 66
		case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
			*_deecd = 67
		case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 68
		case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 69
		case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 70
		case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 71
		case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
			*_deecd = 72
		case "\u0063\u0075\u0062\u0065":
			*_deecd = 73
		case "\u0063\u0061\u006e":
			*_deecd = 74
		case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
			*_deecd = 75
		case "\u0068\u0065\u0061r\u0074":
			*_deecd = 76
		case "\u0073\u0075\u006e":
			*_deecd = 77
		case "\u006d\u006f\u006f\u006e":
			*_deecd = 78
		case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
			*_deecd = 79
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
			*_deecd = 80
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
			*_deecd = 81
		case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
			*_deecd = 82
		case "\u0062\u0065\u0076e\u006c":
			*_deecd = 83
		case "\u0066\u0072\u0061m\u0065":
			*_deecd = 84
		case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
			*_deecd = 85
		case "\u0063\u006f\u0072\u006e\u0065\u0072":
			*_deecd = 86
		case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
			*_deecd = 87
		case "\u0063\u0068\u006fr\u0064":
			*_deecd = 88
		case "\u0061\u0072\u0063":
			*_deecd = 89
		case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_deecd = 90
		case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_deecd = 91
		case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
			*_deecd = 92
		case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
			*_deecd = 93
		case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
			*_deecd = 94
		case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
			*_deecd = 95
		case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
			*_deecd = 96
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
			*_deecd = 97
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
			*_deecd = 98
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
			*_deecd = 99
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
			*_deecd = 100
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
			*_deecd = 101
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
			*_deecd = 102
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
			*_deecd = 103
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
			*_deecd = 104
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
			*_deecd = 105
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
			*_deecd = 106
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
			*_deecd = 107
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_deecd = 108
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_deecd = 109
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_deecd = 110
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_deecd = 111
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_deecd = 112
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_deecd = 113
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
			*_deecd = 114
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
			*_deecd = 115
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
			*_deecd = 116
		case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 117
		case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 118
		case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 119
		case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_deecd = 120
		case "\u0063\u006c\u006fu\u0064":
			*_deecd = 121
		case "\u0072\u0069\u0062\u0062\u006f\u006e":
			*_deecd = 122
		case "\u0072i\u0062\u0062\u006f\u006e\u0032":
			*_deecd = 123
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
			*_deecd = 124
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
			*_deecd = 125
		case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
			*_deecd = 126
		case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
			*_deecd = 127
		case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
			*_deecd = 128
		case "\u0077\u0061\u0076\u0065":
			*_deecd = 129
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
			*_deecd = 130
		case "\u0070\u006c\u0075\u0073":
			*_deecd = 131
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
			*_deecd = 132
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
			*_deecd = 133
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
			*_deecd = 134
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
			*_deecd = 135
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_deecd = 136
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
			*_deecd = 137
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
			*_deecd = 138
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
			*_deecd = 139
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
			*_deecd = 140
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
			*_deecd = 141
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
			*_deecd = 142
		case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
			*_deecd = 143
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
			*_deecd = 144
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
			*_deecd = 145
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
			*_deecd = 146
		case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
			*_deecd = 147
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
			*_deecd = 148
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
			*_deecd = 149
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
			*_deecd = 150
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
			*_deecd = 151
		case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_deecd = 152
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
			*_deecd = 153
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
			*_deecd = 154
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
			*_deecd = 155
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
			*_deecd = 156
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
			*_deecd = 157
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
			*_deecd = 158
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
			*_deecd = 159
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
			*_deecd = 160
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
			*_deecd = 161
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
			*_deecd = 162
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
			*_deecd = 163
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_deecd = 164
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
			*_deecd = 165
		case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
			*_deecd = 166
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
			*_deecd = 167
		case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
			*_deecd = 168
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
			*_deecd = 169
		case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
			*_deecd = 170
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
			*_deecd = 171
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
			*_deecd = 172
		case "\u0067\u0065\u0061r\u0036":
			*_deecd = 173
		case "\u0067\u0065\u0061r\u0039":
			*_deecd = 174
		case "\u0066\u0075\u006e\u006e\u0065\u006c":
			*_deecd = 175
		case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
			*_deecd = 176
		case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
			*_deecd = 177
		case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
			*_deecd = 178
		case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
			*_deecd = 179
		case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
			*_deecd = 180
		case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_deecd = 181
		case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
			*_deecd = 182
		case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
			*_deecd = 183
		case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
			*_deecd = 184
		case "\u0063\u0068\u0061\u0072\u0074\u0058":
			*_deecd = 185
		case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
			*_deecd = 186
		case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
			*_deecd = 187
		}
	}
	_gacbe, _dcacc = d.Token()
	if _dcacc != nil {
		return _dcacc
	}
	if _aceeb, _eaadc := _gacbe.(_g.EndElement); _eaadc && _aceeb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gacbe)
}

func (_bcdce ST_LineCap) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bcdce.String(), start)
}

// Validate validates the CT_BackgroundFillStyleList and its children
func (_acgf *CT_BackgroundFillStyleList) Validate() error {
	return _acgf.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074")
}

func NewCT_PolarAdjustHandle() *CT_PolarAdjustHandle {
	_bfcf := &CT_PolarAdjustHandle{}
	_bfcf.Pos = NewCT_AdjPoint2D()
	return _bfcf
}

type CT_BaseStyles struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
	ExtLst     *CT_OfficeArtExtensionList
}

func NewCT_TextTabStopList() *CT_TextTabStopList { _bgbd := &CT_TextTabStopList{}; return _bgbd }

type CT_TextField struct {
	IdAttr   string
	TypeAttr *string
	RPr      *CT_TextCharacterProperties
	PPr      *CT_TextParagraphProperties
	T        *string
}

func (_egead *CT_Path2DQuadBezierTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dadfb:
	for {
		_aabc, _ebefd := d.Token()
		if _ebefd != nil {
			return _ebefd
		}
		switch _gabgd := _aabc.(type) {
		case _g.StartElement:
			switch _gabgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_gffeb := NewCT_AdjPoint2D()
				if _aggddc := d.DecodeElement(_gffeb, &_gabgd); _aggddc != nil {
					return _aggddc
				}
				_egead.Pt = append(_egead.Pt, _gffeb)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u0051\u0075\u0061\u0064\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _gabgd.Name)
				if _dcaee := d.Skip(); _dcaee != nil {
					return _dcaee
				}
			}
		case _g.EndElement:
			break _dadfb
		case _g.CharData:
		}
	}
	return nil
}

func NewEG_FillModeProperties() *EG_FillModeProperties {
	_fgacb := &EG_FillModeProperties{}
	return _fgacb
}

// Validate validates the CT_StretchInfoProperties and its children
func (_gecce *CT_StretchInfoProperties) Validate() error {
	return _gecce.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_gdafe ST_TextVertOverflowType) String() string {
	switch _gdafe {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case 3:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

type CT_GradientStopList struct{ Gs []*CT_GradientStop }

func (_gafdd *CT_TablePropertiesChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_efbag:
	for {
		_eeafg, _bdcgf := d.Token()
		if _bdcgf != nil {
			return _bdcgf
		}
		switch _dccc := _eeafg.(type) {
		case _g.StartElement:
			switch _dccc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gafdd.TableStyle = NewCT_TableStyle()
				if _fdcffe := d.DecodeElement(_gafdd.TableStyle, &_dccc); _fdcffe != nil {
					return _fdcffe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_gafdd.TableStyleId = new(string)
				if _dadab := d.DecodeElement(_gafdd.TableStyleId, &_dccc); _dadab != nil {
					return _dadab
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _dccc.Name)
				if _baed := d.Skip(); _baed != nil {
					return _baed
				}
			}
		case _g.EndElement:
			break _efbag
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SoftEdgesEffect and its children
func (_gefc *CT_SoftEdgesEffect) Validate() error {
	return _gefc.ValidateWithPath("\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074")
}

func (_gabgdd ST_LineCap) Validate() error { return _gabgdd.ValidateWithPath("") }

func (_gadfg ST_TextVerticalType) ValidateWithPath(path string) error {
	switch _gadfg {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gadfg))
	}
	return nil
}

// Validate validates the CT_TextParagraph and its children
func (_eeeeg *CT_TextParagraph) Validate() error {
	return _eeeeg.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}

func (_ffbb *CT_InverseGammaTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_Geometry and its children, prefixing error messages with path
func (_ggcba *EG_Geometry) ValidateWithPath(path string) error {
	if _ggcba.CustGeom != nil {
		if _egccf := _ggcba.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _egccf != nil {
			return _egccf
		}
	}
	if _ggcba.PrstGeom != nil {
		if _cgeeab := _ggcba.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _cgeeab != nil {
			return _cgeeab
		}
	}
	return nil
}

func NewCT_TextCharBullet() *CT_TextCharBullet { _adecd := &CT_TextCharBullet{}; return _adecd }

func (_dgcfe *ST_TextWrappingType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgfcgd, _bcefg := d.Token()
	if _bcefg != nil {
		return _bcefg
	}
	if _cgcdeg, _eagfe := _bgfcgd.(_g.EndElement); _eagfe && _cgcdeg.Name == start.Name {
		*_dgcfe = 1
		return nil
	}
	if _bfab, _cbdaaa := _bgfcgd.(_g.CharData); !_cbdaaa {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgfcgd)
	} else {
		switch string(_bfab) {
		case "":
			*_dgcfe = 0
		case "\u006e\u006f\u006e\u0065":
			*_dgcfe = 1
		case "\u0073\u0071\u0075\u0061\u0072\u0065":
			*_dgcfe = 2
		}
	}
	_bgfcgd, _bcefg = d.Token()
	if _bcefg != nil {
		return _bcefg
	}
	if _fdagef, _ggaefc := _bgfcgd.(_g.EndElement); _ggaefc && _fdagef.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgfcgd)
}

// ValidateWithPath validates the CT_Cell3D and its children, prefixing error messages with path
func (_cedc *CT_Cell3D) ValidateWithPath(path string) error {
	if _bfgf := _cedc.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _bfgf != nil {
		return _bfgf
	}
	if _fdad := _cedc.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _fdad != nil {
		return _fdad
	}
	if _cedc.LightRig != nil {
		if _bafd := _cedc.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _bafd != nil {
			return _bafd
		}
	}
	if _cedc.ExtLst != nil {
		if _bafdb := _cedc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bafdb != nil {
			return _bafdb
		}
	}
	return nil
}

func (_aecg *CT_QuickTimeFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _aecg.LinkAttr)})
	e.EncodeToken(start)
	if _aecg.ExtLst != nil {
		_gfdca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aecg.ExtLst, _gfdca)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ThemeOverride struct{ CT_BaseStylesOverride }

// Validate validates the CT_BlipFillProperties and its children
func (_abdf *CT_BlipFillProperties) Validate() error {
	return _abdf.ValidateWithPath("C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_LineProperties struct {
	WAttr     *int32
	CapAttr   ST_LineCap
	CmpdAttr  ST_CompoundLine
	AlgnAttr  ST_PenAlignment
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
	PrstDash  *CT_PresetLineDashProperties
	CustDash  *CT_DashStopList
	Round     *CT_LineJoinRound
	Bevel     *CT_LineJoinBevel
	Miter     *CT_LineJoinMiterProperties
	HeadEnd   *CT_LineEndProperties
	TailEnd   *CT_LineEndProperties
	ExtLst    *CT_OfficeArtExtensionList
}

type Blip struct{ CT_Blip }

// ValidateWithPath validates the EG_TextUnderlineFill and its children, prefixing error messages with path
func (_fbbfg *EG_TextUnderlineFill) ValidateWithPath(path string) error {
	if _fbbfg.UFillTx != nil {
		if _fgedf := _fbbfg.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _fgedf != nil {
			return _fgedf
		}
	}
	if _fbbfg.UFill != nil {
		if _fadab := _fbbfg.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _fadab != nil {
			return _fadab
		}
	}
	return nil
}

// Validate validates the CT_PolarAdjustHandle and its children
func (_dfeb *CT_PolarAdjustHandle) Validate() error {
	return _dfeb.ValidateWithPath("C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065")
}

type ST_OnOffStyleType byte

type CT_StretchInfoProperties struct{ FillRect *CT_RelativeRect }

func (_aaebg *ST_TextVerticalType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_aaebg = 0
	case "\u0068\u006f\u0072\u007a":
		*_aaebg = 1
	case "\u0076\u0065\u0072\u0074":
		*_aaebg = 2
	case "\u0076e\u0072\u0074\u0032\u0037\u0030":
		*_aaebg = 3
	case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
		*_aaebg = 4
	case "\u0065\u0061\u0056\u0065\u0072\u0074":
		*_aaebg = 5
	case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
		*_aaebg = 6
	case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
		*_aaebg = 7
	}
	return nil
}

func ParseUnionST_PositiveFixedPercentage(s string) (ST_PositiveFixedPercentage, error) {
	_faba := ST_PositiveFixedPercentage{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_faba.ST_PositiveFixedPercentage = &ST_Percentage{}
		_faba.ST_PositiveFixedPercentage.ST_Percentage = &s
	} else {
		_aagfd, _geccc := _fg.ParseInt(s, 10, 64)
		if _geccc != nil {
			return _faba, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _geccc)
		}
		_aeafb := int32(_aagfd)
		_faba.ST_PositiveFixedPercentageDecimal = &_aeafb
	}
	return _faba, nil
}

const (
	ST_BlendModeUnset   ST_BlendMode = 0
	ST_BlendModeOver    ST_BlendMode = 1
	ST_BlendModeMult    ST_BlendMode = 2
	ST_BlendModeScreen  ST_BlendMode = 3
	ST_BlendModeDarken  ST_BlendMode = 4
	ST_BlendModeLighten ST_BlendMode = 5
)

// Validate validates the CT_TableCell and its children
func (_aaeag *CT_TableCell) Validate() error {
	return _aaeag.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c")
}

func (_cgfde *CT_Scene3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgfde.Camera = NewCT_Camera()
	_cgfde.LightRig = NewCT_LightRig()
_cedfa:
	for {
		_fddfc, _befd := d.Token()
		if _befd != nil {
			return _befd
		}
		switch _abegca := _fddfc.(type) {
		case _g.StartElement:
			switch _abegca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}:
				if _gedda := d.DecodeElement(_cgfde.Camera, &_abegca); _gedda != nil {
					return _gedda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				if _ggdge := d.DecodeElement(_cgfde.LightRig, &_abegca); _ggdge != nil {
					return _ggdge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}:
				_cgfde.Backdrop = NewCT_Backdrop()
				if _edecc := d.DecodeElement(_cgfde.Backdrop, &_abegca); _edecc != nil {
					return _edecc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgfde.ExtLst = NewCT_OfficeArtExtensionList()
				if _ccgb := d.DecodeElement(_cgfde.ExtLst, &_abegca); _ccgb != nil {
					return _ccgb
				}
			default:
				_fc.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0065\u006e\u0065\u0033\u0044\u0020\u0025\u0076", _abegca.Name)
				if _gedee := d.Skip(); _gedee != nil {
					return _gedee
				}
			}
		case _g.EndElement:
			break _cedfa
		case _g.CharData:
		}
	}
	return nil
}

type CT_LineJoinBevel struct{}

type CT_Point2D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
}

// Validate validates the CT_StyleMatrixReference and its children
func (_bcabg *CT_StyleMatrixReference) Validate() error {
	return _bcabg.ValidateWithPath("\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}

// Validate validates the CT_HSLEffect and its children
func (_cadc *CT_HSLEffect) Validate() error {
	return _cadc.ValidateWithPath("\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cadae *EG_LineDashProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cadae.PrstDash != nil {
		_dcddee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_cadae.PrstDash, _dcddee)
	}
	if _cadae.CustDash != nil {
		_gcbef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_cadae.CustDash, _gcbef)
	}
	return nil
}

func (_becg *CT_GvmlGroupShapeChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agadf:
	for {
		_ebcae, _efffa := d.Token()
		if _efffa != nil {
			return _efffa
		}
		switch _bdfa := _ebcae.(type) {
		case _g.StartElement:
			switch _bdfa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_dafc := NewCT_GvmlTextShape()
				if _bdff := d.DecodeElement(_dafc, &_bdfa); _bdff != nil {
					return _bdff
				}
				_becg.TxSp = append(_becg.TxSp, _dafc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_ccgg := NewCT_GvmlShape()
				if _acfag := d.DecodeElement(_ccgg, &_bdfa); _acfag != nil {
					return _acfag
				}
				_becg.Sp = append(_becg.Sp, _ccgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_faffd := NewCT_GvmlConnector()
				if _bdecd := d.DecodeElement(_faffd, &_bdfa); _bdecd != nil {
					return _bdecd
				}
				_becg.CxnSp = append(_becg.CxnSp, _faffd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_dcbed := NewCT_GvmlPicture()
				if _eadc := d.DecodeElement(_dcbed, &_bdfa); _eadc != nil {
					return _eadc
				}
				_becg.Pic = append(_becg.Pic, _dcbed)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bebg := NewCT_GvmlGraphicalObjectFrame()
				if _dfee := d.DecodeElement(_bebg, &_bdfa); _dfee != nil {
					return _dfee
				}
				_becg.GraphicFrame = append(_becg.GraphicFrame, _bebg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_dceeb := NewCT_GvmlGroupShape()
				if _dgcc := d.DecodeElement(_dceeb, &_bdfa); _dgcc != nil {
					return _dgcc
				}
				_becg.GrpSp = append(_becg.GrpSp, _dceeb)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _bdfa.Name)
				if _dcgbf := d.Skip(); _dcgbf != nil {
					return _dcgbf
				}
			}
		case _g.EndElement:
			break _agadf
		case _g.CharData:
		}
	}
	return nil
}

func (_beeabd ST_TextAlignType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_aadec := _g.Attr{}
	_aadec.Name = name
	switch _beeabd {
	case ST_TextAlignTypeUnset:
		_aadec.Value = ""
	case ST_TextAlignTypeL:
		_aadec.Value = "\u006c"
	case ST_TextAlignTypeCtr:
		_aadec.Value = "\u0063\u0074\u0072"
	case ST_TextAlignTypeR:
		_aadec.Value = "\u0072"
	case ST_TextAlignTypeJust:
		_aadec.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAlignTypeJustLow:
		_aadec.Value = "\u006au\u0073\u0074\u004c\u006f\u0077"
	case ST_TextAlignTypeDist:
		_aadec.Value = "\u0064\u0069\u0073\u0074"
	case ST_TextAlignTypeThaiDist:
		_aadec.Value = "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return _aadec, nil
}

func (_bbfe *CT_BackgroundFormatting) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bbfe.NoFill != nil {
		_gdae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbfe.NoFill, _gdae)
	}
	if _bbfe.SolidFill != nil {
		_abfa := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbfe.SolidFill, _abfa)
	}
	if _bbfe.GradFill != nil {
		_cbfeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbfe.GradFill, _cbfeb)
	}
	if _bbfe.BlipFill != nil {
		_afca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbfe.BlipFill, _afca)
	}
	if _bbfe.PattFill != nil {
		_ccca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bbfe.PattFill, _ccca)
	}
	if _bbfe.GrpFill != nil {
		_adcc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bbfe.GrpFill, _adcc)
	}
	if _bbfe.EffectLst != nil {
		_eeag := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbfe.EffectLst, _eeag)
	}
	if _bbfe.EffectDag != nil {
		_dfdd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_bbfe.EffectDag, _dfdd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewTblStyleLst() *TblStyleLst {
	_afgda := &TblStyleLst{}
	_afgda.CT_TableStyleList = *NewCT_TableStyleList()
	return _afgda
}

func (_ececd ST_PathShadeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ececd.String(), start)
}

func (_eaggc *CT_GvmlTextShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eaggc.TxBody = NewCT_TextBody()
_cfaeed:
	for {
		_eacfd, _dfbaee := d.Token()
		if _dfbaee != nil {
			return _dfbaee
		}
		switch _dcfed := _eacfd.(type) {
		case _g.StartElement:
			switch _dcfed.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				if _dbadb := d.DecodeElement(_eaggc.TxBody, &_dcfed); _dbadb != nil {
					return _dbadb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_eaggc.Choice = NewCT_GvmlTextShapeChoice()
				if _cfeadb := d.DecodeElement(&_eaggc.Choice.UseSpRect, &_dcfed); _cfeadb != nil {
					return _cfeadb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_eaggc.Choice = NewCT_GvmlTextShapeChoice()
				if _ceece := d.DecodeElement(&_eaggc.Choice.Xfrm, &_dcfed); _ceece != nil {
					return _ceece
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaggc.ExtLst = NewCT_OfficeArtExtensionList()
				if _efba := d.DecodeElement(_eaggc.ExtLst, &_dcfed); _efba != nil {
					return _efba
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025v", _dcfed.Name)
				if _fdcb := d.Skip(); _fdcb != nil {
					return _fdcb
				}
			}
		case _g.EndElement:
			break _cfaeed
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AudioFile and its children, prefixing error messages with path
func (_ecg *CT_AudioFile) ValidateWithPath(path string) error {
	if _ecg.ExtLst != nil {
		if _dafb := _ecg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dafb != nil {
			return _dafb
		}
	}
	return nil
}

type CT_FlatText struct{ ZAttr *ST_Coordinate }

func NewCT_PatternFillProperties() *CT_PatternFillProperties {
	_bebe := &CT_PatternFillProperties{}
	return _bebe
}

func (_ecfac *CT_CustomColorList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ecfac.CustClr != nil {
		_baef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0075\u0073\u0074\u0043\u006cr"}}
		for _, _gedf := range _ecfac.CustClr {
			e.EncodeElement(_gedf, _baef)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GvmlGroupShape() *CT_GvmlGroupShape {
	_bcaf := &CT_GvmlGroupShape{}
	_bcaf.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_bcaf.GrpSpPr = NewCT_GroupShapeProperties()
	return _bcaf
}

func (_fgace *CT_TileInfoProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fgace.TxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_fgace.TxAttr)})
	}
	if _fgace.TyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_fgace.TyAttr)})
	}
	if _fgace.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_fgace.SxAttr)})
	}
	if _fgace.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_fgace.SyAttr)})
	}
	if _fgace.FlipAttr != ST_TileFlipModeUnset {
		_efacef, _aefea := _fgace.FlipAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _aefea != nil {
			return _aefea
		}
		start.Attr = append(start.Attr, _efacef)
	}
	if _fgace.AlgnAttr != ST_RectAlignmentUnset {
		_cgbfb, _gedeg := _fgace.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _gedeg != nil {
			return _gedeg
		}
		start.Attr = append(start.Attr, _cgbfb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_ThemeableEffectStyle struct {
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

// Validate validates the EG_OfficeArtExtensionList and its children
func (_agcbb *EG_OfficeArtExtensionList) Validate() error {
	return _agcbb.ValidateWithPath("\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

func (_egc *CT_BlipChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cedb:
	for {
		_ebee, _gfbd := d.Token()
		if _gfbd != nil {
			return _gfbd
		}
		switch _efge := _ebee.(type) {
		case _g.StartElement:
			switch _efge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_ddff := NewCT_AlphaBiLevelEffect()
				if _gacg := d.DecodeElement(_ddff, &_efge); _gacg != nil {
					return _gacg
				}
				_egc.AlphaBiLevel = append(_egc.AlphaBiLevel, _ddff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_bec := NewCT_AlphaCeilingEffect()
				if _cfff := d.DecodeElement(_bec, &_efge); _cfff != nil {
					return _cfff
				}
				_egc.AlphaCeiling = append(_egc.AlphaCeiling, _bec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_aaebd := NewCT_AlphaFloorEffect()
				if _egca := d.DecodeElement(_aaebd, &_efge); _egca != nil {
					return _egca
				}
				_egc.AlphaFloor = append(_egc.AlphaFloor, _aaebd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_fggac := NewCT_AlphaInverseEffect()
				if _fgad := d.DecodeElement(_fggac, &_efge); _fgad != nil {
					return _fgad
				}
				_egc.AlphaInv = append(_egc.AlphaInv, _fggac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_becc := NewCT_AlphaModulateEffect()
				if _caeca := d.DecodeElement(_becc, &_efge); _caeca != nil {
					return _caeca
				}
				_egc.AlphaMod = append(_egc.AlphaMod, _becc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_egcac := NewCT_AlphaModulateFixedEffect()
				if _eabd := d.DecodeElement(_egcac, &_efge); _eabd != nil {
					return _eabd
				}
				_egc.AlphaModFix = append(_egc.AlphaModFix, _egcac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_bfge := NewCT_AlphaReplaceEffect()
				if _bcab := d.DecodeElement(_bfge, &_efge); _bcab != nil {
					return _bcab
				}
				_egc.AlphaRepl = append(_egc.AlphaRepl, _bfge)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_addc := NewCT_BiLevelEffect()
				if _dbbd := d.DecodeElement(_addc, &_efge); _dbbd != nil {
					return _dbbd
				}
				_egc.BiLevel = append(_egc.BiLevel, _addc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_cdcad := NewCT_BlurEffect()
				if _bdec := d.DecodeElement(_cdcad, &_efge); _bdec != nil {
					return _bdec
				}
				_egc.Blur = append(_egc.Blur, _cdcad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_edac := NewCT_ColorChangeEffect()
				if _addd := d.DecodeElement(_edac, &_efge); _addd != nil {
					return _addd
				}
				_egc.ClrChange = append(_egc.ClrChange, _edac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_dacf := NewCT_ColorReplaceEffect()
				if _egf := d.DecodeElement(_dacf, &_efge); _egf != nil {
					return _egf
				}
				_egc.ClrRepl = append(_egc.ClrRepl, _dacf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_gafe := NewCT_DuotoneEffect()
				if _dbae := d.DecodeElement(_gafe, &_efge); _dbae != nil {
					return _dbae
				}
				_egc.Duotone = append(_egc.Duotone, _gafe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_efdgg := NewCT_FillOverlayEffect()
				if _gece := d.DecodeElement(_efdgg, &_efge); _gece != nil {
					return _gece
				}
				_egc.FillOverlay = append(_egc.FillOverlay, _efdgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_ddbab := NewCT_GrayscaleEffect()
				if _bdda := d.DecodeElement(_ddbab, &_efge); _bdda != nil {
					return _bdda
				}
				_egc.Grayscl = append(_egc.Grayscl, _ddbab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_dbdf := NewCT_HSLEffect()
				if _deea := d.DecodeElement(_dbdf, &_efge); _deea != nil {
					return _deea
				}
				_egc.Hsl = append(_egc.Hsl, _dbdf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_gcdc := NewCT_LuminanceEffect()
				if _cbgc := d.DecodeElement(_gcdc, &_efge); _cbgc != nil {
					return _cbgc
				}
				_egc.Lum = append(_egc.Lum, _gcdc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gea := NewCT_TintEffect()
				if _fdab := d.DecodeElement(_gea, &_efge); _fdab != nil {
					return _fdab
				}
				_egc.Tint = append(_egc.Tint, _gea)
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042l\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065 \u0025\u0076", _efge.Name)
				if _fgbbf := d.Skip(); _fgbbf != nil {
					return _fgbbf
				}
			}
		case _g.EndElement:
			break _cedb
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Path2DClose() *CT_Path2DClose { _bcgba := &CT_Path2DClose{}; return _bcgba }

// Validate validates the CT_GvmlPictureNonVisual and its children
func (_gddcb *CT_GvmlPictureNonVisual) Validate() error {
	return _gddcb.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func NewCT_AudioCDTime() *CT_AudioCDTime { _adca := &CT_AudioCDTime{}; return _adca }

type CT_Angle struct{ ValAttr int32 }

func NewCT_InnerShadowEffect() *CT_InnerShadowEffect {
	_adfcfb := &CT_InnerShadowEffect{}
	return _adfcfb
}

var ST_TextBulletSizePercentPatternRe = _fd.MustCompile(ST_TextBulletSizePercentPattern)

func (_aab *CT_AdjPoint2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _aab.XAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _aab.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ColorMappingOverrideChoice() *CT_ColorMappingOverrideChoice {
	_babc := &CT_ColorMappingOverrideChoice{}
	return _babc
}

// ValidateWithPath validates the CT_GroupShapeProperties and its children, prefixing error messages with path
func (_aafa *CT_GroupShapeProperties) ValidateWithPath(path string) error {
	if _dbaec := _aafa.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _dbaec != nil {
		return _dbaec
	}
	if _aafa.Xfrm != nil {
		if _gefe := _aafa.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _gefe != nil {
			return _gefe
		}
	}
	if _aafa.NoFill != nil {
		if _cdaggg := _aafa.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cdaggg != nil {
			return _cdaggg
		}
	}
	if _aafa.SolidFill != nil {
		if _adadb := _aafa.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _adadb != nil {
			return _adadb
		}
	}
	if _aafa.GradFill != nil {
		if _dgaff := _aafa.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _dgaff != nil {
			return _dgaff
		}
	}
	if _aafa.BlipFill != nil {
		if _egbb := _aafa.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _egbb != nil {
			return _egbb
		}
	}
	if _aafa.PattFill != nil {
		if _gagf := _aafa.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gagf != nil {
			return _gagf
		}
	}
	if _aafa.GrpFill != nil {
		if _cddb := _aafa.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cddb != nil {
			return _cddb
		}
	}
	if _aafa.EffectLst != nil {
		if _gebbda := _aafa.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _gebbda != nil {
			return _gebbda
		}
	}
	if _aafa.EffectDag != nil {
		if _gabb := _aafa.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _gabb != nil {
			return _gabb
		}
	}
	if _aafa.Scene3d != nil {
		if _dacff := _aafa.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _dacff != nil {
			return _dacff
		}
	}
	if _aafa.ExtLst != nil {
		if _baced := _aafa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _baced != nil {
			return _baced
		}
	}
	return nil
}

type ST_TextAlignType byte

// ValidateWithPath validates the CT_DefaultShapeDefinition and its children, prefixing error messages with path
func (_bbag *CT_DefaultShapeDefinition) ValidateWithPath(path string) error {
	if _cbagc := _bbag.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _cbagc != nil {
		return _cbagc
	}
	if _abaa := _bbag.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _abaa != nil {
		return _abaa
	}
	if _beb := _bbag.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _beb != nil {
		return _beb
	}
	if _bbag.Style != nil {
		if _ddefe := _bbag.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ddefe != nil {
			return _ddefe
		}
	}
	if _bbag.ExtLst != nil {
		if _eedae := _bbag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eedae != nil {
			return _eedae
		}
	}
	return nil
}

type CT_ColorMRU struct{ EG_ColorChoice []*EG_ColorChoice }

// ValidateWithPath validates the CT_AlphaCeilingEffect and its children, prefixing error messages with path
func (_fac *CT_AlphaCeilingEffect) ValidateWithPath(path string) error { return nil }

func (_bdbfef ST_TextVerticalType) String() string {
	switch _bdbfef {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	case 3:
		return "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case 4:
		return "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case 5:
		return "\u0065\u0061\u0056\u0065\u0072\u0074"
	case 6:
		return "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case 7:
		return "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return ""
}

// ValidateWithPath validates the EG_TextBulletColor and its children, prefixing error messages with path
func (_bgfee *EG_TextBulletColor) ValidateWithPath(path string) error {
	if _bgfee.BuClrTx != nil {
		if _ccfec := _bgfee.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _ccfec != nil {
			return _ccfec
		}
	}
	if _bgfee.BuClr != nil {
		if _dfegc := _bgfee.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _dfegc != nil {
			return _dfegc
		}
	}
	return nil
}

const (
	ST_OnOffStyleTypeUnset ST_OnOffStyleType = 0
	ST_OnOffStyleTypeOn    ST_OnOffStyleType = 1
	ST_OnOffStyleTypeOff   ST_OnOffStyleType = 2
	ST_OnOffStyleTypeDef   ST_OnOffStyleType = 3
)

func NewEG_TextBullet() *EG_TextBullet { _ggcdcd := &EG_TextBullet{}; return _ggcdcd }

func (_eb *AG_Locking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoGrpAttr))})
	}
	if _eb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoSelectAttr))})
	}
	if _eb.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoRotAttr))})
	}
	if _eb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoChangeAspectAttr))})
	}
	if _eb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoMoveAttr))})
	}
	if _eb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoResizeAttr))})
	}
	if _eb.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoEditPointsAttr))})
	}
	if _eb.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoAdjustHandlesAttr))})
	}
	if _eb.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoChangeArrowheadsAttr))})
	}
	if _eb.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _fggdf(*_eb.NoChangeShapeTypeAttr))})
	}
	return nil
}

func (_ababa *ST_PathShadeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ababa = 0
	case "\u0073\u0068\u0061p\u0065":
		*_ababa = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_ababa = 2
	case "\u0072\u0065\u0063\u0074":
		*_ababa = 3
	}
	return nil
}

// ValidateWithPath validates the CT_FillProperties and its children, prefixing error messages with path
func (_cabag *CT_FillProperties) ValidateWithPath(path string) error {
	if _cabag.NoFill != nil {
		if _eeff := _cabag.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _eeff != nil {
			return _eeff
		}
	}
	if _cabag.SolidFill != nil {
		if _gcfg := _cabag.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gcfg != nil {
			return _gcfg
		}
	}
	if _cabag.GradFill != nil {
		if _aedcf := _cabag.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _aedcf != nil {
			return _aedcf
		}
	}
	if _cabag.BlipFill != nil {
		if _bbcb := _cabag.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _bbcb != nil {
			return _bbcb
		}
	}
	if _cabag.PattFill != nil {
		if _gbegf := _cabag.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gbegf != nil {
			return _gbegf
		}
	}
	if _cabag.GrpFill != nil {
		if _agda := _cabag.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _agda != nil {
			return _agda
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Angle and its children, prefixing error messages with path
func (_ddba *CT_Angle) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PositiveFixedAngle and its children
func (_dceee *CT_PositiveFixedAngle) Validate() error {
	return _dceee.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065")
}

func (_gddeb ST_TextHorzOverflowType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_caeaf := _g.Attr{}
	_caeaf.Name = name
	switch _gddeb {
	case ST_TextHorzOverflowTypeUnset:
		_caeaf.Value = ""
	case ST_TextHorzOverflowTypeOverflow:
		_caeaf.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextHorzOverflowTypeClip:
		_caeaf.Value = "\u0063\u006c\u0069\u0070"
	}
	return _caeaf, nil
}

// ST_PositiveFixedPercentage is a union type
type ST_PositiveFixedPercentage struct {
	ST_PositiveFixedPercentageDecimal *int32
	ST_PositiveFixedPercentage        *ST_Percentage
}

// ValidateWithPath validates the CT_AdjustHandleList and its children, prefixing error messages with path
func (_fea *CT_AdjustHandleList) ValidateWithPath(path string) error {
	for _gdde, _bad := range _fea.AhXY {
		if _bdb := _bad.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0041\u0068\u0058\u0059\u005b\u0025\u0064\u005d", path, _gdde)); _bdb != nil {
			return _bdb
		}
	}
	for _bdba, _bee := range _fea.AhPolar {
		if _fabe := _bee.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041\u0068\u0050\u006f\u006c\u0061r\u005b\u0025\u0064\u005d", path, _bdba)); _fabe != nil {
			return _fabe
		}
	}
	return nil
}

// Validate validates the CT_ColorReplaceEffect and its children
func (_caad *CT_ColorReplaceEffect) Validate() error {
	return _caad.ValidateWithPath("C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cgfeda *ThemeOverride) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074h\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"
	return _cgfeda.CT_BaseStylesOverride.MarshalXML(e, start)
}

func (_agdaf *CT_Point2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _agdaf.XAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _agdaf.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GammaTransform struct{}

// ValidateWithPath validates the CT_Shape3D and its children, prefixing error messages with path
func (_bggda *CT_Shape3D) ValidateWithPath(path string) error {
	if _bggda.ZAttr != nil {
		if _fcga := _bggda.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _fcga != nil {
			return _fcga
		}
	}
	if _bggda.ExtrusionHAttr != nil {
		if *_bggda.ExtrusionHAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002fm\u002e\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bggda.ExtrusionHAttr)
		}
		if *_bggda.ExtrusionHAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0045\u0078t\u0072\u0075\u0073i\u006f\u006e\u0048A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065 <\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bggda.ExtrusionHAttr)
		}
	}
	if _bggda.ContourWAttr != nil {
		if *_bggda.ContourWAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0057\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_bggda.ContourWAttr)
		}
		if *_bggda.ContourWAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075r\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bggda.ContourWAttr)
		}
	}
	if _acadd := _bggda.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _acadd != nil {
		return _acadd
	}
	if _bggda.BevelT != nil {
		if _ddagc := _bggda.BevelT.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0054"); _ddagc != nil {
			return _ddagc
		}
	}
	if _bggda.BevelB != nil {
		if _fgbef := _bggda.BevelB.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0042"); _fgbef != nil {
			return _fgbef
		}
	}
	if _bggda.ExtrusionClr != nil {
		if _gfgga := _bggda.ExtrusionClr.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"); _gfgga != nil {
			return _gfgga
		}
	}
	if _bggda.ContourClr != nil {
		if _cafcd := _bggda.ContourClr.ValidateWithPath(path + "/\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"); _cafcd != nil {
			return _cafcd
		}
	}
	if _bggda.ExtLst != nil {
		if _ddddd := _bggda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddddd != nil {
			return _ddddd
		}
	}
	return nil
}

func (_edad *CT_LineJoinRound) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_gafba, _aaea := d.Token()
		if _aaea != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0052\u006f\u0075\u006e\u0064\u003a \u0025\u0073", _aaea)
		}
		if _dgaec, _fffdg := _gafba.(_g.EndElement); _fffdg && _dgaec.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Vector3D and its children, prefixing error messages with path
func (_ggbef *CT_Vector3D) ValidateWithPath(path string) error {
	if _bgeccc := _ggbef.DxAttr.ValidateWithPath(path + "\u002fD\u0078\u0041\u0074\u0074\u0072"); _bgeccc != nil {
		return _bgeccc
	}
	if _bccbf := _ggbef.DyAttr.ValidateWithPath(path + "\u002fD\u0079\u0041\u0074\u0074\u0072"); _bccbf != nil {
		return _bccbf
	}
	if _egcdg := _ggbef.DzAttr.ValidateWithPath(path + "\u002fD\u007a\u0041\u0074\u0074\u0072"); _egcdg != nil {
		return _egcdg
	}
	return nil
}

func (_fcaaf ST_EffectContainerType) Validate() error { return _fcaaf.ValidateWithPath("") }

func (_gdg *CT_AlphaFloorEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fef *CT_Backdrop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bggd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_fef.Anchor, _bggd)
	_acfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d"}}
	e.EncodeElement(_fef.Norm, _acfe)
	_ecd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0075\u0070"}}
	e.EncodeElement(_fef.Up, _ecd)
	if _fef.ExtLst != nil {
		_fadb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fef.ExtLst, _fadb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AdjPoint2D and its children
func (_ggd *CT_AdjPoint2D) Validate() error {
	return _ggd.ValidateWithPath("\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}

type ST_ChartBuildStep byte

func (_cccbb *ST_TextVertOverflowType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgdcb, _eddff := d.Token()
	if _eddff != nil {
		return _eddff
	}
	if _edagg, _egdgbb := _bgdcb.(_g.EndElement); _egdgbb && _edagg.Name == start.Name {
		*_cccbb = 1
		return nil
	}
	if _ddfga, _bgdcc := _bgdcb.(_g.CharData); !_bgdcc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgdcb)
	} else {
		switch string(_ddfga) {
		case "":
			*_cccbb = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_cccbb = 1
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
			*_cccbb = 2
		case "\u0063\u006c\u0069\u0070":
			*_cccbb = 3
		}
	}
	_bgdcb, _eddff = d.Token()
	if _eddff != nil {
		return _eddff
	}
	if _dffcc, _egdef := _bgdcb.(_g.EndElement); _egdef && _dffcc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgdcb)
}

func (_dabge *CT_SphereCoords) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dabge.LatAttr = 0
	_dabge.LonAttr = 0
	_dabge.RevAttr = 0
	for _, _dbcfd := range start.Attr {
		if _dbcfd.Name.Local == "\u006c\u0061\u0074" {
			_ebdd, _dbbfe := _fg.ParseInt(_dbcfd.Value, 10, 32)
			if _dbbfe != nil {
				return _dbbfe
			}
			_dabge.LatAttr = int32(_ebdd)
			continue
		}
		if _dbcfd.Name.Local == "\u006c\u006f\u006e" {
			_fedead, _cacecd := _fg.ParseInt(_dbcfd.Value, 10, 32)
			if _cacecd != nil {
				return _cacecd
			}
			_dabge.LonAttr = int32(_fedead)
			continue
		}
		if _dbcfd.Name.Local == "\u0072\u0065\u0076" {
			_dfeea, _adbed := _fg.ParseInt(_dbcfd.Value, 10, 32)
			if _adbed != nil {
				return _adbed
			}
			_dabge.RevAttr = int32(_dfeea)
			continue
		}
	}
	for {
		_cedba, _abdba := d.Token()
		if _abdba != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0070\u0068\u0065\u0072\u0065C\u006f\u006f\u0072d\u0073:\u0020\u0025\u0073", _abdba)
		}
		if _febb, _ggbgea := _cedba.(_g.EndElement); _ggbgea && _febb.Name == start.Name {
			break
		}
	}
	return nil
}

// ST_TextPoint is a union type
type ST_TextPoint struct {
	ST_TextPointUnqualified *int32
	ST_UniversalMeasure     *string
}

func (_fddee ST_TextAutonumberScheme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fddee.String(), start)
}

func (_aacbf ST_TileFlipMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dbecab := _g.Attr{}
	_dbecab.Name = name
	switch _aacbf {
	case ST_TileFlipModeUnset:
		_dbecab.Value = ""
	case ST_TileFlipModeNone:
		_dbecab.Value = "\u006e\u006f\u006e\u0065"
	case ST_TileFlipModeX:
		_dbecab.Value = "\u0078"
	case ST_TileFlipModeY:
		_dbecab.Value = "\u0079"
	case ST_TileFlipModeXy:
		_dbecab.Value = "\u0078\u0079"
	}
	return _dbecab, nil
}

func (_acfbf ST_TextShapeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dbbdgd := _g.Attr{}
	_dbbdgd.Name = name
	switch _acfbf {
	case ST_TextShapeTypeUnset:
		_dbbdgd.Value = ""
	case ST_TextShapeTypeTextNoShape:
		_dbbdgd.Value = "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case ST_TextShapeTypeTextPlain:
		_dbbdgd.Value = "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case ST_TextShapeTypeTextStop:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case ST_TextShapeTypeTextTriangle:
		_dbbdgd.Value = "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_TextShapeTypeTextTriangleInverted:
		_dbbdgd.Value = "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case ST_TextShapeTypeTextChevron:
		_dbbdgd.Value = "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case ST_TextShapeTypeTextChevronInverted:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case ST_TextShapeTypeTextRingInside:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextRingOutside:
		_dbbdgd.Value = "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextArchUp:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case ST_TextShapeTypeTextArchDown:
		_dbbdgd.Value = "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCircle:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case ST_TextShapeTypeTextButton:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case ST_TextShapeTypeTextArchUpPour:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextArchDownPour:
		_dbbdgd.Value = "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCirclePour:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextButtonPour:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCurveUp:
		_dbbdgd.Value = "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCurveDown:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCanUp:
		_dbbdgd.Value = "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case ST_TextShapeTypeTextCanDown:
		_dbbdgd.Value = "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextWave1:
		_dbbdgd.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case ST_TextShapeTypeTextWave2:
		_dbbdgd.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case ST_TextShapeTypeTextDoubleWave1:
		_dbbdgd.Value = "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case ST_TextShapeTypeTextWave4:
		_dbbdgd.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case ST_TextShapeTypeTextInflate:
		_dbbdgd.Value = "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflate:
		_dbbdgd.Value = "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextInflateBottom:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextDeflateBottom:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextInflateTop:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateTop:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateInflate:
		_dbbdgd.Value = "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflateInflateDeflate:
		_dbbdgd.Value = "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case ST_TextShapeTypeTextFadeRight:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_TextShapeTypeTextFadeLeft:
		_dbbdgd.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case ST_TextShapeTypeTextFadeUp:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextFadeDown:
		_dbbdgd.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextSlantUp:
		_dbbdgd.Value = "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case ST_TextShapeTypeTextSlantDown:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCascadeUp:
		_dbbdgd.Value = "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCascadeDown:
		_dbbdgd.Value = "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return _dbbdgd, nil
}

type CT_PictureLocking struct {
	NoCropAttr             *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

type ST_TextShapeType byte

func NewCT_TextShapeAutofit() *CT_TextShapeAutofit { _efeeg := &CT_TextShapeAutofit{}; return _efeeg }

func (_ce *Blip) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ce.CT_Blip = *NewCT_Blip()
	for _, _ggf := range start.Attr {
		if _ggf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggf.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_ffe, _acc := _ggf.Value, error(nil)
			if _acc != nil {
				return _acc
			}
			_ce.EmbedAttr = &_ffe
			continue
		}
		if _ggf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_gcd, _dfc := _ggf.Value, error(nil)
			if _dfc != nil {
				return _dfc
			}
			_ce.LinkAttr = &_gcd
			continue
		}
		if _ggf.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_ce.CstateAttr.UnmarshalXMLAttr(_ggf)
			continue
		}
	}
_cd:
	for {
		_feca, _cef := d.Token()
		if _cef != nil {
			return _cef
		}
		switch _cb := _feca.(type) {
		case _g.StartElement:
			switch _cb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_cf := NewCT_BlipChoice()
				if _fgb := d.DecodeElement(&_cf.AlphaBiLevel, &_cb); _fgb != nil {
					return _fgb
				}
				_ce.Choice = append(_ce.Choice, _cf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_fgg := NewCT_BlipChoice()
				if _bef := d.DecodeElement(&_fgg.AlphaCeiling, &_cb); _bef != nil {
					return _bef
				}
				_ce.Choice = append(_ce.Choice, _fgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_cefg := NewCT_BlipChoice()
				if _cc := d.DecodeElement(&_cefg.AlphaFloor, &_cb); _cc != nil {
					return _cc
				}
				_ce.Choice = append(_ce.Choice, _cefg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_dac := NewCT_BlipChoice()
				if _accd := d.DecodeElement(&_dac.AlphaInv, &_cb); _accd != nil {
					return _accd
				}
				_ce.Choice = append(_ce.Choice, _dac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_dcda := NewCT_BlipChoice()
				if _gb := d.DecodeElement(&_dcda.AlphaMod, &_cb); _gb != nil {
					return _gb
				}
				_ce.Choice = append(_ce.Choice, _dcda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_ca := NewCT_BlipChoice()
				if _cba := d.DecodeElement(&_ca.AlphaModFix, &_cb); _cba != nil {
					return _cba
				}
				_ce.Choice = append(_ce.Choice, _ca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_ggb := NewCT_BlipChoice()
				if _bae := d.DecodeElement(&_ggb.AlphaRepl, &_cb); _bae != nil {
					return _bae
				}
				_ce.Choice = append(_ce.Choice, _ggb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_ee := NewCT_BlipChoice()
				if _cae := d.DecodeElement(&_ee.BiLevel, &_cb); _cae != nil {
					return _cae
				}
				_ce.Choice = append(_ce.Choice, _ee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_bde := NewCT_BlipChoice()
				if _ga := d.DecodeElement(&_bde.Blur, &_cb); _ga != nil {
					return _ga
				}
				_ce.Choice = append(_ce.Choice, _bde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_db := NewCT_BlipChoice()
				if _gdd := d.DecodeElement(&_db.ClrChange, &_cb); _gdd != nil {
					return _gdd
				}
				_ce.Choice = append(_ce.Choice, _db)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_gdb := NewCT_BlipChoice()
				if _cgb := d.DecodeElement(&_gdb.ClrRepl, &_cb); _cgb != nil {
					return _cgb
				}
				_ce.Choice = append(_ce.Choice, _gdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_edg := NewCT_BlipChoice()
				if _bag := d.DecodeElement(&_edg.Duotone, &_cb); _bag != nil {
					return _bag
				}
				_ce.Choice = append(_ce.Choice, _edg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_bfc := NewCT_BlipChoice()
				if _eba := d.DecodeElement(&_bfc.FillOverlay, &_cb); _eba != nil {
					return _eba
				}
				_ce.Choice = append(_ce.Choice, _bfc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_edf := NewCT_BlipChoice()
				if _fca := d.DecodeElement(&_edf.Grayscl, &_cb); _fca != nil {
					return _fca
				}
				_ce.Choice = append(_ce.Choice, _edf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_ada := NewCT_BlipChoice()
				if _bbf := d.DecodeElement(&_ada.Hsl, &_cb); _bbf != nil {
					return _bbf
				}
				_ce.Choice = append(_ce.Choice, _ada)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bgf := NewCT_BlipChoice()
				if _add := d.DecodeElement(&_bgf.Lum, &_cb); _add != nil {
					return _add
				}
				_ce.Choice = append(_ce.Choice, _bgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ade := NewCT_BlipChoice()
				if _aef := d.DecodeElement(&_ade.Tint, &_cb); _aef != nil {
					return _aef
				}
				_ce.Choice = append(_ce.Choice, _ade)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ce.ExtLst = NewCT_OfficeArtExtensionList()
				if _ea := d.DecodeElement(_ce.ExtLst, &_cb); _ea != nil {
					return _ea
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0042\u006ci\u0070\u0020\u0025\u0076", _cb.Name)
				if _ddb := d.Skip(); _ddb != nil {
					return _ddb
				}
			}
		case _g.EndElement:
			break _cd
		case _g.CharData:
		}
	}
	return nil
}

func (_cdfgd ST_PresetShadowVal) String() string {
	switch _cdfgd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0064w\u0031"
	case 2:
		return "\u0073\u0068\u0064w\u0032"
	case 3:
		return "\u0073\u0068\u0064w\u0033"
	case 4:
		return "\u0073\u0068\u0064w\u0034"
	case 5:
		return "\u0073\u0068\u0064w\u0035"
	case 6:
		return "\u0073\u0068\u0064w\u0036"
	case 7:
		return "\u0073\u0068\u0064w\u0037"
	case 8:
		return "\u0073\u0068\u0064w\u0038"
	case 9:
		return "\u0073\u0068\u0064w\u0039"
	case 10:
		return "\u0073\u0068\u0064\u0077\u0031\u0030"
	case 11:
		return "\u0073\u0068\u0064\u0077\u0031\u0031"
	case 12:
		return "\u0073\u0068\u0064\u0077\u0031\u0032"
	case 13:
		return "\u0073\u0068\u0064\u0077\u0031\u0033"
	case 14:
		return "\u0073\u0068\u0064\u0077\u0031\u0034"
	case 15:
		return "\u0073\u0068\u0064\u0077\u0031\u0035"
	case 16:
		return "\u0073\u0068\u0064\u0077\u0031\u0036"
	case 17:
		return "\u0073\u0068\u0064\u0077\u0031\u0037"
	case 18:
		return "\u0073\u0068\u0064\u0077\u0031\u0038"
	case 19:
		return "\u0073\u0068\u0064\u0077\u0031\u0039"
	case 20:
		return "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return ""
}

func (_ecdc ST_TextFontScalePercentOrPercentString) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ecdc.ST_TextFontScalePercent != nil {
		e.EncodeToken(_g.CharData(_bb.Sprintf("\u0025\u0064", *_ecdc.ST_TextFontScalePercent)))
	}
	if _ecdc.ST_Percentage != nil {
		e.EncodeToken(_g.CharData(*_ecdc.ST_Percentage))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func NewCT_GvmlGroupShapeChoice() *CT_GvmlGroupShapeChoice {
	_agac := &CT_GvmlGroupShapeChoice{}
	return _agac
}

// ValidateWithPath validates the CT_SoftEdgesEffect and its children, prefixing error messages with path
func (_dgfeg *CT_SoftEdgesEffect) ValidateWithPath(path string) error {
	if _dgfeg.RadAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dgfeg.RadAttr)
	}
	if _dgfeg.RadAttr > 27273042316900 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, _dgfeg.RadAttr)
	}
	return nil
}

func (_gdfa *CT_FixedPercentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gdaea := range start.Attr {
		if _gdaea.Name.Local == "\u0076\u0061\u006c" {
			_bbcc, _ggbg := ParseUnionST_FixedPercentage(_gdaea.Value)
			if _ggbg != nil {
				return _ggbg
			}
			_gdfa.ValAttr = _bbcc
			continue
		}
	}
	for {
		_fcggb, _adebc := d.Token()
		if _adebc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0046\u0069\u0078\u0065\u0064\u0050\u0065r\u0063\u0065\u006e\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _adebc)
		}
		if _gbbdf, _eebf := _fcggb.(_g.EndElement); _eebf && _gbbdf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecbbf *ST_TileFlipMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ecbbf = 0
	case "\u006e\u006f\u006e\u0065":
		*_ecbbf = 1
	case "\u0078":
		*_ecbbf = 2
	case "\u0079":
		*_ecbbf = 3
	case "\u0078\u0079":
		*_ecbbf = 4
	}
	return nil
}

// ValidateWithPath validates the CT_TextSpacingPoint and its children, prefixing error messages with path
func (_cbaee *CT_TextSpacingPoint) ValidateWithPath(path string) error {
	if _cbaee.ValAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _cbaee.ValAttr)
	}
	if _cbaee.ValAttr > 158400 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0031\u0035\u0038\u0034\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _cbaee.ValAttr)
	}
	return nil
}

type CT_Color struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_fcaag *CT_TextLineBreak) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_begfb:
	for {
		_bdcfb, _cgbgg := d.Token()
		if _cgbgg != nil {
			return _cgbgg
		}
		switch _edbfb := _bdcfb.(type) {
		case _g.StartElement:
			switch _edbfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_fcaag.RPr = NewCT_TextCharacterProperties()
				if _eaead := d.DecodeElement(_fcaag.RPr, &_edbfb); _eaead != nil {
					return _eaead
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b\u0020\u0025v", _edbfb.Name)
				if _fggeg := d.Skip(); _fggeg != nil {
					return _fggeg
				}
			}
		case _g.EndElement:
			break _begfb
		case _g.CharData:
		}
	}
	return nil
}

func (_fdfabg *CT_TablePropertiesChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fdfabg.TableStyle != nil {
		_degab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fdfabg.TableStyle, _degab)
	}
	if _fdfabg.TableStyleId != nil {
		_cgccf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074y\u006c\u0065\u0049\u0064"}}
		_fc.AddPreserveSpaceAttr(&_cgccf, *_fdfabg.TableStyleId)
		e.EncodeElement(_fdfabg.TableStyleId, _cgccf)
	}
	return nil
}

type CT_Backdrop struct {
	Anchor *CT_Point3D
	Norm   *CT_Vector3D
	Up     *CT_Vector3D
	ExtLst *CT_OfficeArtExtensionList
}

// Validate validates the CT_PresetShadowEffect and its children
func (_agagb *CT_PresetShadowEffect) Validate() error {
	return _agagb.ValidateWithPath("C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_afgccg ST_BlendMode) Validate() error { return _afgccg.ValidateWithPath("") }

type CT_AlphaCeilingEffect struct{}

func (_gdaa *ST_FixedPercentage) Validate() error { return _gdaa.ValidateWithPath("") }

const (
	ST_BlipCompressionUnset   ST_BlipCompression = 0
	ST_BlipCompressionEmail   ST_BlipCompression = 1
	ST_BlipCompressionScreen  ST_BlipCompression = 2
	ST_BlipCompressionPrint   ST_BlipCompression = 3
	ST_BlipCompressionHqprint ST_BlipCompression = 4
	ST_BlipCompressionNone    ST_BlipCompression = 5
)

// Validate validates the EG_Text3D and its children
func (_gbccc *EG_Text3D) Validate() error {
	return _gbccc.ValidateWithPath("\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D")
}

func NewCT_TextNormalAutofit() *CT_TextNormalAutofit { _fdfce := &CT_TextNormalAutofit{}; return _fdfce }

func (_egae *CT_AnimationDgmElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _egae.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_egae.IdAttr)})
	}
	if _egae.BldStepAttr != ST_DgmBuildStepUnset {
		_fcbb, _gfe := _egae.BldStepAttr.MarshalXMLAttr(_g.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
		if _gfe != nil {
			return _gfe
		}
		start.Attr = append(start.Attr, _fcbb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlGroupShapeNonVisual and its children
func (_bgfe *CT_GvmlGroupShapeNonVisual) Validate() error {
	return _bgfe.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c")
}

func (_cgefe ST_PresetMaterialType) String() string {
	switch _cgefe {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case 2:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case 4:
		return "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case 5:
		return "\u006d\u0061\u0074t\u0065"
	case 6:
		return "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case 7:
		return "\u006d\u0065\u0074a\u006c"
	case 8:
		return "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case 9:
		return "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case 10:
		return "\u0070\u006f\u0077\u0064\u0065\u0072"
	case 11:
		return "\u0064\u006b\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case 13:
		return "\u0063\u006c\u0065a\u0072"
	case 14:
		return "\u0066\u006c\u0061\u0074"
	case 15:
		return "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return ""
}

func (_daddb *ST_FontCollectionIndex) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgefg, _bgffd := d.Token()
	if _bgffd != nil {
		return _bgffd
	}
	if _eacca, _fgded := _cgefg.(_g.EndElement); _fgded && _eacca.Name == start.Name {
		*_daddb = 1
		return nil
	}
	if _gcgaf, _fcacb := _cgefg.(_g.CharData); !_fcacb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgefg)
	} else {
		switch string(_gcgaf) {
		case "":
			*_daddb = 0
		case "\u006d\u0061\u006ao\u0072":
			*_daddb = 1
		case "\u006d\u0069\u006eo\u0072":
			*_daddb = 2
		case "\u006e\u006f\u006e\u0065":
			*_daddb = 3
		}
	}
	_cgefg, _bgffd = d.Token()
	if _bgffd != nil {
		return _bgffd
	}
	if _abace, _bdeeg := _cgefg.(_g.EndElement); _bdeeg && _abace.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgefg)
}

func (_dagab ST_PresetColorVal) String() string {
	switch _dagab {
	case 0:
		return ""
	case 1:
		return "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case 2:
		return "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case 3:
		return "\u0061\u0071\u0075\u0061"
	case 4:
		return "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 5:
		return "\u0061\u007a\u0075r\u0065"
	case 6:
		return "\u0062\u0065\u0069g\u0065"
	case 7:
		return "\u0062\u0069\u0073\u0071\u0075\u0065"
	case 8:
		return "\u0062\u006c\u0061c\u006b"
	case 9:
		return "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case 10:
		return "\u0062\u006c\u0075\u0065"
	case 11:
		return "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case 12:
		return "\u0062\u0072\u006fw\u006e"
	case 13:
		return "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case 14:
		return "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case 15:
		return "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case 16:
		return "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case 17:
		return "\u0063\u006f\u0072a\u006c"
	case 18:
		return "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case 19:
		return "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case 20:
		return "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case 21:
		return "\u0063\u0079\u0061\u006e"
	case 22:
		return "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case 23:
		return "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case 24:
		return "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 25:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 26:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case 27:
		return "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case 28:
		return "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case 29:
		return "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case 30:
		return "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case 31:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 32:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 33:
		return "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case 34:
		return "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 35:
		return "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 36:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 37:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 38:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 39:
		return "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 40:
		return "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 41:
		return "\u0064\u006b\u0042\u006c\u0075\u0065"
	case 42:
		return "\u0064\u006b\u0043\u0079\u0061\u006e"
	case 43:
		return "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 44:
		return "\u0064\u006b\u0047\u0072\u0061\u0079"
	case 45:
		return "\u0064\u006b\u0047\u0072\u0065\u0079"
	case 46:
		return "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case 47:
		return "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case 48:
		return "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case 49:
		return "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case 50:
		return "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 51:
		return "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 52:
		return "\u0064\u006b\u0052e\u0064"
	case 53:
		return "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 54:
		return "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 55:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 56:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 57:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 58:
		return "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 59:
		return "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 60:
		return "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case 61:
		return "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 62:
		return "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case 63:
		return "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case 64:
		return "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case 65:
		return "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case 66:
		return "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case 67:
		return "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case 68:
		return "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case 69:
		return "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case 70:
		return "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case 71:
		return "\u0067\u006f\u006c\u0064"
	case 72:
		return "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case 73:
		return "\u0067\u0072\u0061\u0079"
	case 74:
		return "\u0067\u0072\u0065\u0079"
	case 75:
		return "\u0067\u0072\u0065e\u006e"
	case 76:
		return "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case 77:
		return "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case 78:
		return "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case 79:
		return "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case 80:
		return "\u0069\u006e\u0064\u0069\u0067\u006f"
	case 81:
		return "\u0069\u0076\u006fr\u0079"
	case 82:
		return "\u006b\u0068\u0061k\u0069"
	case 83:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case 84:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case 85:
		return "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case 86:
		return "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case 87:
		return "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case 88:
		return "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case 89:
		return "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case 90:
		return "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case 91:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 92:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case 93:
		return "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case 94:
		return "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case 95:
		return "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 96:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 97:
		return "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 98:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case 99:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case 100:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case 101:
		return "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 102:
		return "\u006c\u0074\u0042\u006c\u0075\u0065"
	case 103:
		return "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case 104:
		return "\u006c\u0074\u0043\u0079\u0061\u006e"
	case 105:
		return "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case 106:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 107:
		return "\u006c\u0074\u0047\u0072\u0065\u0079"
	case 108:
		return "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case 109:
		return "\u006c\u0074\u0050\u0069\u006e\u006b"
	case 110:
		return "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 111:
		return "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 112:
		return "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case 113:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 114:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 115:
		return "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case 116:
		return "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 117:
		return "\u006c\u0069\u006d\u0065"
	case 118:
		return "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case 119:
		return "\u006c\u0069\u006ee\u006e"
	case 120:
		return "\u006da\u0067\u0065\u006e\u0074\u0061"
	case 121:
		return "\u006d\u0061\u0072\u006f\u006f\u006e"
	case 122:
		return "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 123:
		return "\u006de\u0064\u0042\u006c\u0075\u0065"
	case 124:
		return "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case 125:
		return "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case 126:
		return "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 127:
		return "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 128:
		return "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 129:
		return "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 130:
		return "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 131:
		return "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 132:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case 133:
		return "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case 134:
		return "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case 135:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case 136:
		return "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 137:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 138:
		return "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 139:
		return "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 140:
		return "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case 141:
		return "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case 142:
		return "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case 143:
		return "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case 144:
		return "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case 145:
		return "\u006e\u0061\u0076\u0079"
	case 146:
		return "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case 147:
		return "\u006f\u006c\u0069v\u0065"
	case 148:
		return "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case 149:
		return "\u006f\u0072\u0061\u006e\u0067\u0065"
	case 150:
		return "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case 151:
		return "\u006f\u0072\u0063\u0068\u0069\u0064"
	case 152:
		return "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 153:
		return "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case 154:
		return "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 155:
		return "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 156:
		return "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case 157:
		return "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case 158:
		return "\u0070\u0065\u0072\u0075"
	case 159:
		return "\u0070\u0069\u006e\u006b"
	case 160:
		return "\u0070\u006c\u0075\u006d"
	case 161:
		return "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case 162:
		return "\u0070\u0075\u0072\u0070\u006c\u0065"
	case 163:
		return "\u0072\u0065\u0064"
	case 164:
		return "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case 165:
		return "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case 166:
		return "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case 167:
		return "\u0073\u0061\u006c\u006d\u006f\u006e"
	case 168:
		return "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case 169:
		return "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 170:
		return "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case 171:
		return "\u0073\u0069\u0065\u006e\u006e\u0061"
	case 172:
		return "\u0073\u0069\u006c\u0076\u0065\u0072"
	case 173:
		return "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case 174:
		return "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case 175:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case 176:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case 177:
		return "\u0073\u006e\u006f\u0077"
	case 178:
		return "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case 179:
		return "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case 180:
		return "\u0074\u0061\u006e"
	case 181:
		return "\u0074\u0065\u0061\u006c"
	case 182:
		return "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case 183:
		return "\u0074\u006f\u006d\u0061\u0074\u006f"
	case 184:
		return "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case 185:
		return "\u0076\u0069\u006f\u006c\u0065\u0074"
	case 186:
		return "\u0077\u0068\u0065a\u0074"
	case 187:
		return "\u0077\u0068\u0069t\u0065"
	case 188:
		return "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case 189:
		return "\u0079\u0065\u006c\u006c\u006f\u0077"
	case 190:
		return "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return ""
}

func (_aefgbd ST_PresetPatternVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_aefgbd.String(), start)
}

func (_dcdagf ST_PresetLineDashVal) Validate() error { return _dcdagf.ValidateWithPath("") }

func (_abaeb *Tbl) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074b\u006c"
	return _abaeb.CT_Table.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_GrayscaleEffect and its children, prefixing error messages with path
func (_feaebb *CT_GrayscaleEffect) ValidateWithPath(path string) error { return nil }

func NewCT_GraphicalObjectData() *CT_GraphicalObjectData {
	_caea := &CT_GraphicalObjectData{}
	return _caea
}

func (_gbaa *EG_ThemeableFillStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gbaa.Fill != nil {
		_fdddcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_gbaa.Fill, _fdddcg)
	}
	if _gbaa.FillRef != nil {
		_debbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_gbaa.FillRef, _debbb)
	}
	return nil
}

// ValidateWithPath validates the CT_DashStopList and its children, prefixing error messages with path
func (_afab *CT_DashStopList) ValidateWithPath(path string) error {
	for _cagdb, _dcagf := range _afab.Ds {
		if _dgbde := _dcagf.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0044\u0073\u005b\u0025\u0064]", path, _cagdb)); _dgbde != nil {
			return _dgbde
		}
	}
	return nil
}

func (_bfecad *CT_TextParagraph) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eeccea:
	for {
		_fegfd, _cccfb := d.Token()
		if _cccfb != nil {
			return _cccfb
		}
		switch _gbag := _fegfd.(type) {
		case _g.StartElement:
			switch _gbag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_bfecad.PPr = NewCT_TextParagraphProperties()
				if _gbbcb := d.DecodeElement(_bfecad.PPr, &_gbag); _gbbcb != nil {
					return _gbbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_adbcb := NewEG_TextRun()
				_adbcb.R = NewCT_RegularTextRun()
				if _ffdb := d.DecodeElement(_adbcb.R, &_gbag); _ffdb != nil {
					return _ffdb
				}
				_bfecad.EG_TextRun = append(_bfecad.EG_TextRun, _adbcb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_aefed := NewEG_TextRun()
				_aefed.Br = NewCT_TextLineBreak()
				if _cddbde := d.DecodeElement(_aefed.Br, &_gbag); _cddbde != nil {
					return _cddbde
				}
				_bfecad.EG_TextRun = append(_bfecad.EG_TextRun, _aefed)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_aabf := NewEG_TextRun()
				_aabf.Fld = NewCT_TextField()
				if _ggagc := d.DecodeElement(_aabf.Fld, &_gbag); _ggagc != nil {
					return _ggagc
				}
				_bfecad.EG_TextRun = append(_bfecad.EG_TextRun, _aabf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}:
				_bfecad.EndParaRPr = NewCT_TextCharacterProperties()
				if _ggdc := d.DecodeElement(_bfecad.EndParaRPr, &_gbag); _ggdc != nil {
					return _ggdc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025v", _gbag.Name)
				if _ddaegc := d.Skip(); _ddaegc != nil {
					return _ddaegc
				}
			}
		case _g.EndElement:
			break _eeccea
		case _g.CharData:
		}
	}
	return nil
}

type CT_TextSpacingPercent struct {
	ValAttr ST_TextSpacingPercentOrPercentString
}

// Validate validates the CT_CustomColor and its children
func (_bdgcc *CT_CustomColor) Validate() error {
	return _bdgcc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072")
}

func (_feaedf ST_TextWrappingType) Validate() error { return _feaedf.ValidateWithPath("") }

func (_geddad *ST_Coordinate) Validate() error { return _geddad.ValidateWithPath("") }

// ValidateWithPath validates the CT_TextShapeAutofit and its children, prefixing error messages with path
func (_edeec *CT_TextShapeAutofit) ValidateWithPath(path string) error { return nil }

func (_eadfe *EG_FillModeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eadfe.Tile != nil {
		_ccgbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_eadfe.Tile, _ccgbf)
	}
	if _eadfe.Stretch != nil {
		_ebfae := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_eadfe.Stretch, _ebfae)
	}
	return nil
}

func (_bbafg *CT_PositiveFixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _bbafg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bagbg ST_TextShapeType) Validate() error { return _bagbg.ValidateWithPath("") }

func (_ggfc *CT_SchemeColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_cgfg, _edggcf := _ggfc.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
	if _edggcf != nil {
		return _edggcf
	}
	start.Attr = append(start.Attr, _cgfg)
	e.EncodeToken(start)
	if _ggfc.EG_ColorTransform != nil {
		for _, _eeacgg := range _ggfc.EG_ColorTransform {
			_eeacgg.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_LineEndLength byte

func (_degfb *CT_TextUnderlineFillGroupWrapper) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cfffc:
	for {
		_dfbeb, _dfefc := d.Token()
		if _dfefc != nil {
			return _dfefc
		}
		switch _acefb := _dfbeb.(type) {
		case _g.StartElement:
			switch _acefb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_degfb.NoFill = NewCT_NoFillProperties()
				if _ccega := d.DecodeElement(_degfb.NoFill, &_acefb); _ccega != nil {
					return _ccega
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_degfb.SolidFill = NewCT_SolidColorFillProperties()
				if _gbgfb := d.DecodeElement(_degfb.SolidFill, &_acefb); _gbgfb != nil {
					return _gbgfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_degfb.GradFill = NewCT_GradientFillProperties()
				if _ecfcf := d.DecodeElement(_degfb.GradFill, &_acefb); _ecfcf != nil {
					return _ecfcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_degfb.BlipFill = NewCT_BlipFillProperties()
				if _cefbc := d.DecodeElement(_degfb.BlipFill, &_acefb); _cefbc != nil {
					return _cefbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_degfb.PattFill = NewCT_PatternFillProperties()
				if _cbegg := d.DecodeElement(_degfb.PattFill, &_acefb); _cbegg != nil {
					return _cbegg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_degfb.GrpFill = NewCT_GroupFillProperties()
				if _eedgc := d.DecodeElement(_degfb.GrpFill, &_acefb); _eedgc != nil {
					return _eedgc
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0047\u0072o\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065r\u0020\u0025\u0076", _acefb.Name)
				if _ffede := d.Skip(); _ffede != nil {
					return _ffede
				}
			}
		case _g.EndElement:
			break _cfffc
		case _g.CharData:
		}
	}
	return nil
}

func NewThemeOverride() *ThemeOverride {
	_eedec := &ThemeOverride{}
	_eedec.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
	return _eedec
}

func (_cfdf *CT_ColorMappingOverrideChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cfdf.MasterClrMapping != nil {
		_faaf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006da\u0073\u0074\u0065\u0072\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}}
		e.EncodeElement(_cfdf.MasterClrMapping, _faaf)
	}
	if _cfdf.OverrideClrMapping != nil {
		_decd := _g.StartElement{Name: _g.Name{Local: "a\u003ao\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043l\u0072\u004d\u0061\u0070pi\u006e\u0067"}}
		e.EncodeElement(_cfdf.OverrideClrMapping, _decd)
	}
	return nil
}

func (_ebfba ST_LightRigDirection) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bdbae := _g.Attr{}
	_bdbae.Name = name
	switch _ebfba {
	case ST_LightRigDirectionUnset:
		_bdbae.Value = ""
	case ST_LightRigDirectionTl:
		_bdbae.Value = "\u0074\u006c"
	case ST_LightRigDirectionT:
		_bdbae.Value = "\u0074"
	case ST_LightRigDirectionTr:
		_bdbae.Value = "\u0074\u0072"
	case ST_LightRigDirectionL:
		_bdbae.Value = "\u006c"
	case ST_LightRigDirectionR:
		_bdbae.Value = "\u0072"
	case ST_LightRigDirectionBl:
		_bdbae.Value = "\u0062\u006c"
	case ST_LightRigDirectionB:
		_bdbae.Value = "\u0062"
	case ST_LightRigDirectionBr:
		_bdbae.Value = "\u0062\u0072"
	}
	return _bdbae, nil
}

type CT_AudioFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

func (_cbfgf ST_AnimationBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cbfgf.String(), start)
}

// ValidateWithPath validates the AG_Blob and its children, prefixing error messages with path
func (_gc *AG_Blob) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Blip and its children, prefixing error messages with path
func (_aefd *CT_Blip) ValidateWithPath(path string) error {
	if _efgd := _aefd.CstateAttr.ValidateWithPath(path + "/\u0043\u0073\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _efgd != nil {
		return _efgd
	}
	for _baga, _feae := range _aefd.Choice {
		if _ebca := _feae.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _baga)); _ebca != nil {
			return _ebca
		}
	}
	if _aefd.ExtLst != nil {
		if _bffe := _aefd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bffe != nil {
			return _bffe
		}
	}
	return nil
}

func (_cafef *CT_TableCellBorderStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bbbcd:
	for {
		_eagfba, _aeag := d.Token()
		if _aeag != nil {
			return _aeag
		}
		switch _bdbaf := _eagfba.(type) {
		case _g.StartElement:
			switch _bdbaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_cafef.Left = NewCT_ThemeableLineStyle()
				if _gccca := d.DecodeElement(_cafef.Left, &_bdbaf); _gccca != nil {
					return _gccca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_cafef.Right = NewCT_ThemeableLineStyle()
				if _gbbfc := d.DecodeElement(_cafef.Right, &_bdbaf); _gbbfc != nil {
					return _gbbfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_cafef.Top = NewCT_ThemeableLineStyle()
				if _abdfe := d.DecodeElement(_cafef.Top, &_bdbaf); _abdfe != nil {
					return _abdfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_cafef.Bottom = NewCT_ThemeableLineStyle()
				if _bcdeg := d.DecodeElement(_cafef.Bottom, &_bdbaf); _bcdeg != nil {
					return _bcdeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}:
				_cafef.InsideH = NewCT_ThemeableLineStyle()
				if _agcea := d.DecodeElement(_cafef.InsideH, &_bdbaf); _agcea != nil {
					return _agcea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}:
				_cafef.InsideV = NewCT_ThemeableLineStyle()
				if _fbegbe := d.DecodeElement(_cafef.InsideV, &_bdbaf); _fbegbe != nil {
					return _fbegbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}:
				_cafef.Tl2br = NewCT_ThemeableLineStyle()
				if _deged := d.DecodeElement(_cafef.Tl2br, &_bdbaf); _deged != nil {
					return _deged
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}:
				_cafef.Tr2bl = NewCT_ThemeableLineStyle()
				if _caeeb := d.DecodeElement(_cafef.Tr2bl, &_bdbaf); _caeeb != nil {
					return _caeeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cafef.ExtLst = NewCT_OfficeArtExtensionList()
				if _baebg := d.DecodeElement(_cafef.ExtLst, &_bdbaf); _baebg != nil {
					return _baebg
				}
			default:
				_fc.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006cB\u006f\u0072\u0064\u0065\u0072\u0053t\u0079\u006c\u0065 \u0025\u0076", _bdbaf.Name)
				if _abfd := d.Skip(); _abfd != nil {
					return _abfd
				}
			}
		case _g.EndElement:
			break _bbbcd
		case _g.CharData:
		}
	}
	return nil
}

func init() {
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_AudioFile)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065", NewCT_VideoFile)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065", NewCT_QuickTimeFile)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065", NewCT_AudioCDTime)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044", NewCT_AudioCD)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065", NewCT_ColorScheme)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072", NewCT_CustomColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074", NewCT_SupplementalFont)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074", NewCT_CustomColorList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_FontCollection)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d", NewCT_EffectStyleItem)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_FillStyleList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_LineStyleList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074", NewCT_EffectStyleList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074", NewCT_BackgroundFillStyleList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078", NewCT_StyleMatrix)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_BaseStyles)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_OfficeArtExtension)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065", NewCT_Angle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065", NewCT_PositiveFixedAngle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_Percentage)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_PositivePercentage)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065", NewCT_FixedPercentage)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065", NewCT_PositiveFixedPercentage)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f", NewCT_Ratio)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_Point2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044", NewCT_PositiveSize2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d", NewCT_ComplementTransform)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseTransform)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_GrayscaleTransform)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewCT_GammaTransform)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseGammaTransform)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_ScRgbColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_SRgbColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072", NewCT_HslColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072", NewCT_SystemColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072", NewCT_SchemeColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072", NewCT_PresetColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewCT_OfficeArtExtensionList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044", NewCT_Scale2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044", NewCT_Transform2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044", NewCT_GroupTransform2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044", NewCT_Point3D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044", NewCT_Vector3D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073", NewCT_SphereCoords)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074", NewCT_RelativeRect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055", NewCT_ColorMRU)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_EmbeddedWAVAudioFile)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ConnectorLocking)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ShapeLocking)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067", NewCT_PictureLocking)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GroupLocking)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GraphicalObjectFrameLocking)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ContentPartLocking)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualDrawingProps)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073", NewCT_NonVisualDrawingShapeProps)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualConnectorProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_NonVisualPictureProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualGroupDrawingShapeProps)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualGraphicFrameProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_NonVisualContentPartProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061", NewCT_GraphicalObjectData)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074", NewCT_GraphicalObject)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_AnimationDgmElement)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_AnimationChartElement)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e", NewCT_AnimationElementChoice)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationDgmBuildProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationChartBuildProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationGraphicalObjectBuildProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_BackgroundFormatting)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_WholeE2oFormatting)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065", NewCT_GvmlUseShapeRectangle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlTextShape)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlShapeNonVisual)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlShape)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l", NewCT_GvmlConnectorNonVisual)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_GvmlConnector)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlPictureNonVisual)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065", NewCT_GvmlPicture)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c", NewCT_GvmlGraphicFrameNonVisual)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065", NewCT_GvmlGraphicalObjectFrame)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c", NewCT_GvmlGroupShapeNonVisual)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065", NewCT_GvmlGroupShape)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a", NewCT_Camera)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067", NewCT_LightRig)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044", NewCT_Scene3D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070", NewCT_Backdrop)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c", NewCT_Bevel)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044", NewCT_Shape3D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074", NewCT_FlatText)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaBiLevelEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaCeilingEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaFloorEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaInverseEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074", NewCT_AlphaModulateFixedEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074", NewCT_AlphaOutsetEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaReplaceEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BiLevelEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BlurEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074", NewCT_ColorChangeEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ColorReplaceEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_DuotoneEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_GlowEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_GrayscaleEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_HSLEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_InnerShadowEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_LuminanceEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_OuterShadowEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_PresetShadowEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ReflectionEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_RelativeOffsetEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074", NewCT_SoftEdgesEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_TintEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074", NewCT_TransformEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NoFillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_SolidColorFillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_LinearShadeProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_PathShadeProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_GradientStopList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_GradientFillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TileInfoProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_StretchInfoProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006c\u0069\u0070", NewCT_Blip)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BlipFillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_PatternFillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_GroupFillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_FillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_FillEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074", NewCT_FillOverlayEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065", NewCT_EffectReference)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072", NewCT_EffectContainer)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074", NewCT_AlphaModulateEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074", NewCT_BlendEffect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074", NewCT_EffectList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_EffectProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065", NewCT_GeomGuide)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GeomGuideList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_AdjPoint2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074", NewCT_GeomRect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065", NewCT_XYAdjustHandle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065", NewCT_PolarAdjustHandle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065", NewCT_ConnectionSite)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_AdjustHandleList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074", NewCT_ConnectionSiteList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f", NewCT_Path2DMoveTo)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f", NewCT_Path2DLineTo)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f", NewCT_Path2DArcTo)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f", NewCT_Path2DQuadBezierTo)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f", NewCT_Path2DCubicBezierTo)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065", NewCT_Path2DClose)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D", NewCT_Path2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074", NewCT_Path2DList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_PresetGeometry2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065", NewCT_PresetTextShape)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_CustomGeometry2D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_LineEndProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c", NewCT_LineJoinBevel)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064", NewCT_LineJoinRound)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_LineJoinMiterProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_PresetLineDashProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070", NewCT_DashStop)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_DashStopList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_LineProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_ShapeProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_GroupShapeProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_StyleMatrixReference)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_FontReference)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ShapeStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn", NewCT_DefaultShapeDefinition)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073", NewCT_ObjectStyleDefaults)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_EmptyElement)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorMapping)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_ColorMappingOverride)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorSchemeAndMapping)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074", NewCT_ColorSchemeList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewCT_OfficeStyleSheet)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_BaseStylesOverride)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074", NewCT_ClipboardStyleSheet)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_TableCellProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073", NewCT_Headers)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c", NewCT_TableCol)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064", NewCT_TableGrid)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c", NewCT_TableCell)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077", NewCT_TableRow)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_TableProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D", NewCT_Cell3D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ThemeableLineStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065", NewCT_TableStyleTextStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065", NewCT_TableCellBorderStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065", NewCT_TableBackgroundStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065", NewCT_TableStyleCellStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065", NewCT_TablePartStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074", NewCT_TableStyleList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TextParagraph)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065", NewCT_TextListStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074", NewCT_TextNormalAutofit)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextShapeAutofit)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextNoAutofit)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TextBodyProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079", NewCT_TextBody)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074", NewCT_TextBulletColorFollowText)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074", NewCT_TextBulletSizeFollowText)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextBulletSizePercent)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074", NewCT_TextBulletSizePoint)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextBulletTypefaceFollowText)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextAutonumberBullet)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074", NewCT_TextCharBullet)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074", NewCT_TextBlipBullet)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextNoBullet)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074", NewCT_TextFont)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineLineFollowText)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineFillFollowText)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072", NewCT_TextUnderlineFillGroupWrapper)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextCharacterProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextSpacingPercent)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074", NewCT_TextSpacingPoint)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070", NewCT_TextTabStop)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074", NewCT_TextTabStopList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_TextLineBreak)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067", NewCT_TextSpacing)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextParagraphProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e", NewCT_RegularTextRun)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce", NewVideoFile)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0067r\u0061\u0070\u0068\u0069\u0063", NewGraphic)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0062\u006c\u0069\u0070", NewBlip)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065", NewTheme)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewThemeOverride)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072", NewThemeManager)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0062\u006c", NewTbl)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "t\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074", NewTblStyleLst)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061", NewEG_Media)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewEG_ColorTransform)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewEG_OfficeArtExtensionList)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065", NewEG_ColorChoice)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D", NewEG_Text3D)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewEG_ShadeProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_FillModeProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewEG_FillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t", NewEG_Effect)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_EffectProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_Geometry)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_TextGeometry)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineFillProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineJoinProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineDashProperties)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableFillStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableEffectStyle)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073", NewEG_ThemeableFontStyles)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074", NewEG_TextAutofit)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072", NewEG_TextBulletColor)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065", NewEG_TextBulletSize)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065", NewEG_TextBulletTypeface)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074", NewEG_TextBullet)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065", NewEG_TextUnderlineLine)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c", NewEG_TextUnderlineFill)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e", NewEG_TextRun)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041G\u005f\u0042\u006c\u006f\u0062", NewAG_Blob)
	_fc.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewAG_Locking)
}
