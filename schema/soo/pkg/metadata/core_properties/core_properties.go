//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package core_properties

import (
	_dd "encoding/xml"
	_c "fmt"
	_cb "github.com/Casper-Mars/officeTool"
	_dg "time"
)

// Validate validates the CT_Keywords and its children
func (_acb *CT_Keywords) Validate() error {
	return _acb.ValidateWithPath("C\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073")
}

func (_edf *CT_Keywords) UnmarshalXML(d *_dd.Decoder, start _dd.StartElement) error {
	for _, _fdc := range start.Attr {
		if _fdc.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _fdc.Name.Local == "\u006c\u0061\u006e\u0067" {
			_ccfc, _bbge := _fdc.Value, error(nil)
			if _bbge != nil {
				return _bbge
			}
			_edf.LangAttr = &_ccfc
			continue
		}
	}
_ege:
	for {
		_geb, _egf := d.Token()
		if _egf != nil {
			return _egf
		}
		switch _bef := _geb.(type) {
		case _dd.StartElement:
			switch _bef.Name {
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076\u0061\u006cu\u0065"}:
				_bc := NewCT_Keyword()
				if _gaa := d.DecodeElement(_bc, &_bef); _gaa != nil {
					return _gaa
				}
				_edf.Value = append(_edf.Value, _bc)
			default:
				_cb.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _bef.Name)
				if _egd := d.Skip(); _egd != nil {
					return _egd
				}
			}
		case _dd.EndElement:
			break _ege
		case _dd.CharData:
		}
	}
	return nil
}

func (_dfce *CoreProperties) MarshalXML(e *_dd.Encoder, start _dd.StartElement) error {
	start.Attr = append(start.Attr, _dd.Attr{Name: _dd.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"})
	start.Attr = append(start.Attr, _dd.Attr{Name: _dd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0063\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"})
	start.Attr = append(start.Attr, _dd.Attr{Name: _dd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0064\u0063"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f"})
	start.Attr = append(start.Attr, _dd.Attr{Name: _dd.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0064\u0063\u0074\u0065\u0072\u006d\u0073"}, Value: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/"})
	start.Attr = append(start.Attr, _dd.Attr{Name: _dd.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0063\u0070\u003a\u0063\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"
	return _dfce.CT_CoreProperties.MarshalXML(e, start)
}

type CT_Keyword struct {
	LangAttr *string
	Content  string
}

func (_cfb *CT_Keyword) MarshalXML(e *_dd.Encoder, start _dd.StartElement) error {
	if _cfb.LangAttr != nil {
		start.Attr = append(start.Attr, _dd.Attr{Name: _dd.Name{Local: "\u0078\u006d\u006c\u003a\u006c\u0061\u006e\u0067"}, Value: _c.Sprintf("\u0025\u0076", *_cfb.LangAttr)})
	}
	e.EncodeElement(_cfb.Content, start)
	e.EncodeToken(_dd.EndElement{Name: start.Name})
	return nil
}

type CoreProperties struct{ CT_CoreProperties }

// Validate validates the CoreProperties and its children
func (_acf *CoreProperties) Validate() error {
	return _acf.ValidateWithPath("\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_Keywords and its children, prefixing error messages with path
func (_dgf *CT_Keywords) ValidateWithPath(path string) error {
	for _ea, _ag := range _dgf.Value {
		if _cee := _ag.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _ea)); _cee != nil {
			return _cee
		}
	}
	return nil
}

type CT_Keywords struct {
	LangAttr *string
	Value    []*CT_Keyword
}

func (_dfg *CoreProperties) UnmarshalXML(d *_dd.Decoder, start _dd.StartElement) error {
	_dfg.CT_CoreProperties = *NewCT_CoreProperties()
_bca:
	for {
		_cfg, _agg := d.Token()
		if _agg != nil {
			return _agg
		}
		switch _afb := _cfg.(type) {
		case _dd.StartElement:
			switch _afb.Name {
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}:
				_dfg.Category = new(string)
				if _de := d.DecodeElement(_dfg.Category, &_afb); _de != nil {
					return _de
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}:
				_dfg.ContentStatus = new(string)
				if _bbc := d.DecodeElement(_dfg.ContentStatus, &_afb); _bbc != nil {
					return _bbc
				}
			case _dd.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u0063r\u0065\u0061\u0074\u0065\u0064"}:
				_dfg.Created = new(_cb.XSDAny)
				if _bg := d.DecodeElement(_dfg.Created, &_afb); _bg != nil {
					return _bg
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0063r\u0065\u0061\u0074\u006f\u0072"}:
				_dfg.Creator = new(_cb.XSDAny)
				if _bbe := d.DecodeElement(_dfg.Creator, &_afb); _bbe != nil {
					return _bbe
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}:
				_dfg.Description = new(_cb.XSDAny)
				if _bd := d.DecodeElement(_dfg.Description, &_afb); _bd != nil {
					return _bd
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}:
				_dfg.Identifier = new(_cb.XSDAny)
				if _dfa := d.DecodeElement(_dfg.Identifier, &_afb); _dfa != nil {
					return _dfa
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}:
				_dfg.Keywords = NewCT_Keywords()
				if _cba := d.DecodeElement(_dfg.Keywords, &_afb); _cba != nil {
					return _cba
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}:
				_dfg.Language = new(_cb.XSDAny)
				if _fa := d.DecodeElement(_dfg.Language, &_afb); _fa != nil {
					return _fa
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}:
				_dfg.LastModifiedBy = new(string)
				if _egdb := d.DecodeElement(_dfg.LastModifiedBy, &_afb); _egdb != nil {
					return _egdb
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "l\u0061\u0073\u0074\u0050\u0072\u0069\u006e\u0074\u0065\u0064"}:
				_dfg.LastPrinted = new(_dg.Time)
				if _gce := d.DecodeElement(_dfg.LastPrinted, &_afb); _gce != nil {
					return _gce
				}
			case _dd.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}:
				_dfg.Modified = new(_cb.XSDAny)
				if _gcd := d.DecodeElement(_dfg.Modified, &_afb); _gcd != nil {
					return _gcd
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}:
				_dfg.Revision = new(string)
				if _caad := d.DecodeElement(_dfg.Revision, &_afb); _caad != nil {
					return _caad
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0073u\u0062\u006a\u0065\u0063\u0074"}:
				_dfg.Subject = new(_cb.XSDAny)
				if _eaa := d.DecodeElement(_dfg.Subject, &_afb); _eaa != nil {
					return _eaa
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0074\u0069\u0074l\u0065"}:
				_dfg.Title = new(_cb.XSDAny)
				if _cbd := d.DecodeElement(_dfg.Title, &_afb); _cbd != nil {
					return _cbd
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}:
				_dfg.Version = new(string)
				if _fga := d.DecodeElement(_dfg.Version, &_afb); _fga != nil {
					return _fga
				}
			default:
				_cb.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072t\u0069e\u0073\u0020\u0025\u0076", _afb.Name)
				if _cfc := d.Skip(); _cfc != nil {
					return _cfc
				}
			}
		case _dd.EndElement:
			break _bca
		case _dd.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Keyword and its children, prefixing error messages with path
func (_ae *CT_Keyword) ValidateWithPath(path string) error { return nil }

func NewCT_CoreProperties() *CT_CoreProperties { _dc := &CT_CoreProperties{}; return _dc }

func NewCoreProperties() *CoreProperties {
	_bbf := &CoreProperties{}
	_bbf.CT_CoreProperties = *NewCT_CoreProperties()
	return _bbf
}

// Validate validates the CT_Keyword and its children
func (_gcc *CT_Keyword) Validate() error {
	return _gcc.ValidateWithPath("\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064")
}

func (_db *CT_CoreProperties) UnmarshalXML(d *_dd.Decoder, start _dd.StartElement) error {
_ddc:
	for {
		_caa, _dga := d.Token()
		if _dga != nil {
			return _dga
		}
		switch _bf := _caa.(type) {
		case _dd.StartElement:
			switch _bf.Name {
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}:
				_db.Category = new(string)
				if _dbd := d.DecodeElement(_db.Category, &_bf); _dbd != nil {
					return _dbd
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}:
				_db.ContentStatus = new(string)
				if _be := d.DecodeElement(_db.ContentStatus, &_bf); _be != nil {
					return _be
				}
			case _dd.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u0063r\u0065\u0061\u0074\u0065\u0064"}:
				_db.Created = new(_cb.XSDAny)
				if _bb := d.DecodeElement(_db.Created, &_bf); _bb != nil {
					return _bb
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0063r\u0065\u0061\u0074\u006f\u0072"}:
				_db.Creator = new(_cb.XSDAny)
				if _ef := d.DecodeElement(_db.Creator, &_bf); _ef != nil {
					return _ef
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}:
				_db.Description = new(_cb.XSDAny)
				if _dfc := d.DecodeElement(_db.Description, &_bf); _dfc != nil {
					return _dfc
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}:
				_db.Identifier = new(_cb.XSDAny)
				if _fd := d.DecodeElement(_db.Identifier, &_bf); _fd != nil {
					return _fd
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}:
				_db.Keywords = NewCT_Keywords()
				if _ba := d.DecodeElement(_db.Keywords, &_bf); _ba != nil {
					return _ba
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}:
				_db.Language = new(_cb.XSDAny)
				if _a := d.DecodeElement(_db.Language, &_bf); _a != nil {
					return _a
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}:
				_db.LastModifiedBy = new(string)
				if _gg := d.DecodeElement(_db.LastModifiedBy, &_bf); _gg != nil {
					return _gg
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "l\u0061\u0073\u0074\u0050\u0072\u0069\u006e\u0074\u0065\u0064"}:
				_db.LastPrinted = new(_dg.Time)
				if _af := d.DecodeElement(_db.LastPrinted, &_bf); _af != nil {
					return _af
				}
			case _dd.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}:
				_db.Modified = new(_cb.XSDAny)
				if _da := d.DecodeElement(_db.Modified, &_bf); _da != nil {
					return _da
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}:
				_db.Revision = new(string)
				if _cf := d.DecodeElement(_db.Revision, &_bf); _cf != nil {
					return _cf
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0073u\u0062\u006a\u0065\u0063\u0074"}:
				_db.Subject = new(_cb.XSDAny)
				if _dgdg := d.DecodeElement(_db.Subject, &_bf); _dgdg != nil {
					return _dgdg
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0074\u0069\u0074l\u0065"}:
				_db.Title = new(_cb.XSDAny)
				if _fdf := d.DecodeElement(_db.Title, &_bf); _fdf != nil {
					return _fdf
				}
			case _dd.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}:
				_db.Version = new(string)
				if _dac := d.DecodeElement(_db.Version, &_bf); _dac != nil {
					return _dac
				}
			default:
				_cb.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bf.Name)
				if _ee := d.Skip(); _ee != nil {
					return _ee
				}
			}
		case _dd.EndElement:
			break _ddc
		case _dd.CharData:
		}
	}
	return nil
}

func (_g *CT_CoreProperties) MarshalXML(e *_dd.Encoder, start _dd.StartElement) error {
	e.EncodeToken(start)
	if _g.Category != nil {
		_cc := _dd.StartElement{Name: _dd.Name{Local: "c\u0070\u003a\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}}
		_cb.AddPreserveSpaceAttr(&_cc, *_g.Category)
		e.EncodeElement(_g.Category, _cc)
	}
	if _g.ContentStatus != nil {
		_dgd := _dd.StartElement{Name: _dd.Name{Local: "\u0063\u0070:\u0063\u006f\u006et\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}}
		_cb.AddPreserveSpaceAttr(&_dgd, *_g.ContentStatus)
		e.EncodeElement(_g.ContentStatus, _dgd)
	}
	if _g.Created != nil {
		_ccf := _dd.StartElement{Name: _dd.Name{Local: "\u0064c\u0074e\u0072\u006d\u0073\u003a\u0063\u0072\u0065\u0061\u0074\u0065\u0064"}}
		e.EncodeElement(_g.Created, _ccf)
	}
	if _g.Creator != nil {
		_ca := _dd.StartElement{Name: _dd.Name{Local: "\u0064\u0063\u003a\u0063\u0072\u0065\u0061\u0074\u006f\u0072"}}
		e.EncodeElement(_g.Creator, _ca)
	}
	if _g.Description != nil {
		_cab := _dd.StartElement{Name: _dd.Name{Local: "\u0064\u0063\u003a\u0064\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_g.Description, _cab)
	}
	if _g.Identifier != nil {
		_gb := _dd.StartElement{Name: _dd.Name{Local: "\u0064\u0063\u003a\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_g.Identifier, _gb)
	}
	if _g.Keywords != nil {
		_gc := _dd.StartElement{Name: _dd.Name{Local: "c\u0070\u003a\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}}
		e.EncodeElement(_g.Keywords, _gc)
	}
	if _g.Language != nil {
		_gba := _dd.StartElement{Name: _dd.Name{Local: "d\u0063\u003a\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}}
		e.EncodeElement(_g.Language, _gba)
	}
	if _g.LastModifiedBy != nil {
		_df := _dd.StartElement{Name: _dd.Name{Local: "\u0063\u0070\u003a\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}}
		_cb.AddPreserveSpaceAttr(&_df, *_g.LastModifiedBy)
		e.EncodeElement(_g.LastModifiedBy, _df)
	}
	if _g.LastPrinted != nil {
		_e := _dd.StartElement{Name: _dd.Name{Local: "\u0063\u0070\u003a\u006c\u0061\u0073\u0074\u0050\u0072i\u006e\u0074\u0065\u0064"}}
		e.EncodeElement(_g.LastPrinted, _e)
	}
	if _g.Modified != nil {
		_f := _dd.StartElement{Name: _dd.Name{Local: "\u0064\u0063t\u0065\u0072\u006ds\u003a\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}}
		e.EncodeElement(_g.Modified, _f)
	}
	if _g.Revision != nil {
		_eb := _dd.StartElement{Name: _dd.Name{Local: "c\u0070\u003a\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}}
		_cb.AddPreserveSpaceAttr(&_eb, *_g.Revision)
		e.EncodeElement(_g.Revision, _eb)
	}
	if _g.Subject != nil {
		_gcb := _dd.StartElement{Name: _dd.Name{Local: "\u0064\u0063\u003a\u0073\u0075\u0062\u006a\u0065\u0063\u0074"}}
		e.EncodeElement(_g.Subject, _gcb)
	}
	if _g.Title != nil {
		_ga := _dd.StartElement{Name: _dd.Name{Local: "\u0064\u0063\u003a\u0074\u0069\u0074\u006c\u0065"}}
		e.EncodeElement(_g.Title, _ga)
	}
	if _g.Version != nil {
		_b := _dd.StartElement{Name: _dd.Name{Local: "\u0063\u0070\u003a\u0076\u0065\u0072\u0073\u0069\u006f\u006e"}}
		_cb.AddPreserveSpaceAttr(&_b, *_g.Version)
		e.EncodeElement(_g.Version, _b)
	}
	e.EncodeToken(_dd.EndElement{Name: start.Name})
	return nil
}

func (_cbf *CT_Keywords) MarshalXML(e *_dd.Encoder, start _dd.StartElement) error {
	if _cbf.LangAttr != nil {
		start.Attr = append(start.Attr, _dd.Attr{Name: _dd.Name{Local: "\u0078\u006d\u006c\u003a\u006c\u0061\u006e\u0067"}, Value: _c.Sprintf("\u0025\u0076", *_cbf.LangAttr)})
	}
	e.EncodeToken(start)
	if _cbf.Value != nil {
		_aea := _dd.StartElement{Name: _dd.Name{Local: "\u0063\u0070\u003a\u0076\u0061\u006c\u0075\u0065"}}
		for _, _aa := range _cbf.Value {
			e.EncodeElement(_aa, _aea)
		}
	}
	e.EncodeToken(_dd.EndElement{Name: start.Name})
	return nil
}

func (_dcd *CT_Keyword) UnmarshalXML(d *_dd.Decoder, start _dd.StartElement) error {
	for _, _gd := range start.Attr {
		if _gd.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _gd.Name.Local == "\u006c\u0061\u006e\u0067" {
			_fg, _ge := _gd.Value, error(nil)
			if _ge != nil {
				return _ge
			}
			_dcd.LangAttr = &_fg
			continue
		}
	}
	for {
		_eea, _eg := d.Token()
		if _eg != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u003a\u0020%\u0073", _eg)
		}
		if _dfeg, _bbg := _eea.(_dd.CharData); _bbg {
			_dcd.Content = string(_dfeg)
		}
		if _dag, _dbg := _eea.(_dd.EndElement); _dbg && _dag.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Keyword() *CT_Keyword { _ed := &CT_Keyword{}; return _ed }

// ValidateWithPath validates the CT_CoreProperties and its children, prefixing error messages with path
func (_ce *CT_CoreProperties) ValidateWithPath(path string) error {
	if _ce.Keywords != nil {
		if _bee := _ce.Keywords.ValidateWithPath(path + "\u002fK\u0065\u0079\u0077\u006f\u0072\u0064s"); _bee != nil {
			return _bee
		}
	}
	return nil
}

type CT_CoreProperties struct {
	Category       *string
	ContentStatus  *string
	Created        *_cb.XSDAny
	Creator        *_cb.XSDAny
	Description    *_cb.XSDAny
	Identifier     *_cb.XSDAny
	Keywords       *CT_Keywords
	Language       *_cb.XSDAny
	LastModifiedBy *string
	LastPrinted    *_dg.Time
	Modified       *_cb.XSDAny
	Revision       *string
	Subject        *_cb.XSDAny
	Title          *_cb.XSDAny
	Version        *string
}

func NewCT_Keywords() *CT_Keywords { _bab := &CT_Keywords{}; return _bab }

// Validate validates the CT_CoreProperties and its children
func (_dfe *CT_CoreProperties) Validate() error {
	return _dfe.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CoreProperties and its children, prefixing error messages with path
func (_aec *CoreProperties) ValidateWithPath(path string) error {
	if _ec := _aec.CT_CoreProperties.ValidateWithPath(path); _ec != nil {
		return _ec
	}
	return nil
}

func init() {
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_CoreProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "C\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073", NewCT_Keywords)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064", NewCT_Keyword)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0063\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCoreProperties)
}
